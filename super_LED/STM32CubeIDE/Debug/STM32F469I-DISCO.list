
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e56c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003a30  0801e72c  0801e72c  0002e72c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000003c  0802215c  0802215c  0003215c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08022198  08022198  00065048  2**0
                  CONTENTS
  5 .ARM          00000008  08022198  08022198  00032198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  080221a0  080221a0  00065048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  080221a0  080221a0  000321a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  080221b8  080221b8  000321b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  080221c0  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000c130  20000140  08022300  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000c270  08022300  0004c270  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00065048  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00013ec0  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00001158  90013ec0  90013ec0  00063ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000030  90015018  90015018  00065018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00049ba4  00000000  00000000  00065078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   0009b0cd  00000000  00000000  000aec1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000134e4  00000000  00000000  00149ce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000029e0  00000000  00000000  0015d1d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012cfc7  00000000  00000000  0015fbb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 000045a0  00000000  00000000  0028cb78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00025c46  00000000  00000000  00291118  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  000384b3  00000000  00000000  002b6d5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  002ef211  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000812c  00000000  00000000  002ef2e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801e714 	.word	0x0801e714

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801e714 	.word	0x0801e714

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__aeabi_d2f>:
 8000a3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a44:	bf24      	itt	cs
 8000a46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a4e:	d90d      	bls.n	8000a6c <__aeabi_d2f+0x30>
 8000a50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a64:	bf08      	it	eq
 8000a66:	f020 0001 	biceq.w	r0, r0, #1
 8000a6a:	4770      	bx	lr
 8000a6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a70:	d121      	bne.n	8000ab6 <__aeabi_d2f+0x7a>
 8000a72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a76:	bfbc      	itt	lt
 8000a78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a7c:	4770      	bxlt	lr
 8000a7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a86:	f1c2 0218 	rsb	r2, r2, #24
 8000a8a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a92:	fa20 f002 	lsr.w	r0, r0, r2
 8000a96:	bf18      	it	ne
 8000a98:	f040 0001 	orrne.w	r0, r0, #1
 8000a9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000aa4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000aa8:	ea40 000c 	orr.w	r0, r0, ip
 8000aac:	fa23 f302 	lsr.w	r3, r3, r2
 8000ab0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ab4:	e7cc      	b.n	8000a50 <__aeabi_d2f+0x14>
 8000ab6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aba:	d107      	bne.n	8000acc <__aeabi_d2f+0x90>
 8000abc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ac0:	bf1e      	ittt	ne
 8000ac2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ac6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000aca:	4770      	bxne	lr
 8000acc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ad0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ad4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop

08000adc <__aeabi_uldivmod>:
 8000adc:	b953      	cbnz	r3, 8000af4 <__aeabi_uldivmod+0x18>
 8000ade:	b94a      	cbnz	r2, 8000af4 <__aeabi_uldivmod+0x18>
 8000ae0:	2900      	cmp	r1, #0
 8000ae2:	bf08      	it	eq
 8000ae4:	2800      	cmpeq	r0, #0
 8000ae6:	bf1c      	itt	ne
 8000ae8:	f04f 31ff 	movne.w	r1, #4294967295
 8000aec:	f04f 30ff 	movne.w	r0, #4294967295
 8000af0:	f000 b974 	b.w	8000ddc <__aeabi_idiv0>
 8000af4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000af8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000afc:	f000 f806 	bl	8000b0c <__udivmoddi4>
 8000b00:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b08:	b004      	add	sp, #16
 8000b0a:	4770      	bx	lr

08000b0c <__udivmoddi4>:
 8000b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b10:	9d08      	ldr	r5, [sp, #32]
 8000b12:	4604      	mov	r4, r0
 8000b14:	468e      	mov	lr, r1
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d14d      	bne.n	8000bb6 <__udivmoddi4+0xaa>
 8000b1a:	428a      	cmp	r2, r1
 8000b1c:	4694      	mov	ip, r2
 8000b1e:	d969      	bls.n	8000bf4 <__udivmoddi4+0xe8>
 8000b20:	fab2 f282 	clz	r2, r2
 8000b24:	b152      	cbz	r2, 8000b3c <__udivmoddi4+0x30>
 8000b26:	fa01 f302 	lsl.w	r3, r1, r2
 8000b2a:	f1c2 0120 	rsb	r1, r2, #32
 8000b2e:	fa20 f101 	lsr.w	r1, r0, r1
 8000b32:	fa0c fc02 	lsl.w	ip, ip, r2
 8000b36:	ea41 0e03 	orr.w	lr, r1, r3
 8000b3a:	4094      	lsls	r4, r2
 8000b3c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000b40:	0c21      	lsrs	r1, r4, #16
 8000b42:	fbbe f6f8 	udiv	r6, lr, r8
 8000b46:	fa1f f78c 	uxth.w	r7, ip
 8000b4a:	fb08 e316 	mls	r3, r8, r6, lr
 8000b4e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000b52:	fb06 f107 	mul.w	r1, r6, r7
 8000b56:	4299      	cmp	r1, r3
 8000b58:	d90a      	bls.n	8000b70 <__udivmoddi4+0x64>
 8000b5a:	eb1c 0303 	adds.w	r3, ip, r3
 8000b5e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000b62:	f080 811f 	bcs.w	8000da4 <__udivmoddi4+0x298>
 8000b66:	4299      	cmp	r1, r3
 8000b68:	f240 811c 	bls.w	8000da4 <__udivmoddi4+0x298>
 8000b6c:	3e02      	subs	r6, #2
 8000b6e:	4463      	add	r3, ip
 8000b70:	1a5b      	subs	r3, r3, r1
 8000b72:	b2a4      	uxth	r4, r4
 8000b74:	fbb3 f0f8 	udiv	r0, r3, r8
 8000b78:	fb08 3310 	mls	r3, r8, r0, r3
 8000b7c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b80:	fb00 f707 	mul.w	r7, r0, r7
 8000b84:	42a7      	cmp	r7, r4
 8000b86:	d90a      	bls.n	8000b9e <__udivmoddi4+0x92>
 8000b88:	eb1c 0404 	adds.w	r4, ip, r4
 8000b8c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b90:	f080 810a 	bcs.w	8000da8 <__udivmoddi4+0x29c>
 8000b94:	42a7      	cmp	r7, r4
 8000b96:	f240 8107 	bls.w	8000da8 <__udivmoddi4+0x29c>
 8000b9a:	4464      	add	r4, ip
 8000b9c:	3802      	subs	r0, #2
 8000b9e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000ba2:	1be4      	subs	r4, r4, r7
 8000ba4:	2600      	movs	r6, #0
 8000ba6:	b11d      	cbz	r5, 8000bb0 <__udivmoddi4+0xa4>
 8000ba8:	40d4      	lsrs	r4, r2
 8000baa:	2300      	movs	r3, #0
 8000bac:	e9c5 4300 	strd	r4, r3, [r5]
 8000bb0:	4631      	mov	r1, r6
 8000bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bb6:	428b      	cmp	r3, r1
 8000bb8:	d909      	bls.n	8000bce <__udivmoddi4+0xc2>
 8000bba:	2d00      	cmp	r5, #0
 8000bbc:	f000 80ef 	beq.w	8000d9e <__udivmoddi4+0x292>
 8000bc0:	2600      	movs	r6, #0
 8000bc2:	e9c5 0100 	strd	r0, r1, [r5]
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	4631      	mov	r1, r6
 8000bca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bce:	fab3 f683 	clz	r6, r3
 8000bd2:	2e00      	cmp	r6, #0
 8000bd4:	d14a      	bne.n	8000c6c <__udivmoddi4+0x160>
 8000bd6:	428b      	cmp	r3, r1
 8000bd8:	d302      	bcc.n	8000be0 <__udivmoddi4+0xd4>
 8000bda:	4282      	cmp	r2, r0
 8000bdc:	f200 80f9 	bhi.w	8000dd2 <__udivmoddi4+0x2c6>
 8000be0:	1a84      	subs	r4, r0, r2
 8000be2:	eb61 0303 	sbc.w	r3, r1, r3
 8000be6:	2001      	movs	r0, #1
 8000be8:	469e      	mov	lr, r3
 8000bea:	2d00      	cmp	r5, #0
 8000bec:	d0e0      	beq.n	8000bb0 <__udivmoddi4+0xa4>
 8000bee:	e9c5 4e00 	strd	r4, lr, [r5]
 8000bf2:	e7dd      	b.n	8000bb0 <__udivmoddi4+0xa4>
 8000bf4:	b902      	cbnz	r2, 8000bf8 <__udivmoddi4+0xec>
 8000bf6:	deff      	udf	#255	; 0xff
 8000bf8:	fab2 f282 	clz	r2, r2
 8000bfc:	2a00      	cmp	r2, #0
 8000bfe:	f040 8092 	bne.w	8000d26 <__udivmoddi4+0x21a>
 8000c02:	eba1 010c 	sub.w	r1, r1, ip
 8000c06:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c0a:	fa1f fe8c 	uxth.w	lr, ip
 8000c0e:	2601      	movs	r6, #1
 8000c10:	0c20      	lsrs	r0, r4, #16
 8000c12:	fbb1 f3f7 	udiv	r3, r1, r7
 8000c16:	fb07 1113 	mls	r1, r7, r3, r1
 8000c1a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000c1e:	fb0e f003 	mul.w	r0, lr, r3
 8000c22:	4288      	cmp	r0, r1
 8000c24:	d908      	bls.n	8000c38 <__udivmoddi4+0x12c>
 8000c26:	eb1c 0101 	adds.w	r1, ip, r1
 8000c2a:	f103 38ff 	add.w	r8, r3, #4294967295
 8000c2e:	d202      	bcs.n	8000c36 <__udivmoddi4+0x12a>
 8000c30:	4288      	cmp	r0, r1
 8000c32:	f200 80cb 	bhi.w	8000dcc <__udivmoddi4+0x2c0>
 8000c36:	4643      	mov	r3, r8
 8000c38:	1a09      	subs	r1, r1, r0
 8000c3a:	b2a4      	uxth	r4, r4
 8000c3c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c40:	fb07 1110 	mls	r1, r7, r0, r1
 8000c44:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000c48:	fb0e fe00 	mul.w	lr, lr, r0
 8000c4c:	45a6      	cmp	lr, r4
 8000c4e:	d908      	bls.n	8000c62 <__udivmoddi4+0x156>
 8000c50:	eb1c 0404 	adds.w	r4, ip, r4
 8000c54:	f100 31ff 	add.w	r1, r0, #4294967295
 8000c58:	d202      	bcs.n	8000c60 <__udivmoddi4+0x154>
 8000c5a:	45a6      	cmp	lr, r4
 8000c5c:	f200 80bb 	bhi.w	8000dd6 <__udivmoddi4+0x2ca>
 8000c60:	4608      	mov	r0, r1
 8000c62:	eba4 040e 	sub.w	r4, r4, lr
 8000c66:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000c6a:	e79c      	b.n	8000ba6 <__udivmoddi4+0x9a>
 8000c6c:	f1c6 0720 	rsb	r7, r6, #32
 8000c70:	40b3      	lsls	r3, r6
 8000c72:	fa22 fc07 	lsr.w	ip, r2, r7
 8000c76:	ea4c 0c03 	orr.w	ip, ip, r3
 8000c7a:	fa20 f407 	lsr.w	r4, r0, r7
 8000c7e:	fa01 f306 	lsl.w	r3, r1, r6
 8000c82:	431c      	orrs	r4, r3
 8000c84:	40f9      	lsrs	r1, r7
 8000c86:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000c8a:	fa00 f306 	lsl.w	r3, r0, r6
 8000c8e:	fbb1 f8f9 	udiv	r8, r1, r9
 8000c92:	0c20      	lsrs	r0, r4, #16
 8000c94:	fa1f fe8c 	uxth.w	lr, ip
 8000c98:	fb09 1118 	mls	r1, r9, r8, r1
 8000c9c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ca0:	fb08 f00e 	mul.w	r0, r8, lr
 8000ca4:	4288      	cmp	r0, r1
 8000ca6:	fa02 f206 	lsl.w	r2, r2, r6
 8000caa:	d90b      	bls.n	8000cc4 <__udivmoddi4+0x1b8>
 8000cac:	eb1c 0101 	adds.w	r1, ip, r1
 8000cb0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000cb4:	f080 8088 	bcs.w	8000dc8 <__udivmoddi4+0x2bc>
 8000cb8:	4288      	cmp	r0, r1
 8000cba:	f240 8085 	bls.w	8000dc8 <__udivmoddi4+0x2bc>
 8000cbe:	f1a8 0802 	sub.w	r8, r8, #2
 8000cc2:	4461      	add	r1, ip
 8000cc4:	1a09      	subs	r1, r1, r0
 8000cc6:	b2a4      	uxth	r4, r4
 8000cc8:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ccc:	fb09 1110 	mls	r1, r9, r0, r1
 8000cd0:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000cd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000cd8:	458e      	cmp	lr, r1
 8000cda:	d908      	bls.n	8000cee <__udivmoddi4+0x1e2>
 8000cdc:	eb1c 0101 	adds.w	r1, ip, r1
 8000ce0:	f100 34ff 	add.w	r4, r0, #4294967295
 8000ce4:	d26c      	bcs.n	8000dc0 <__udivmoddi4+0x2b4>
 8000ce6:	458e      	cmp	lr, r1
 8000ce8:	d96a      	bls.n	8000dc0 <__udivmoddi4+0x2b4>
 8000cea:	3802      	subs	r0, #2
 8000cec:	4461      	add	r1, ip
 8000cee:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000cf2:	fba0 9402 	umull	r9, r4, r0, r2
 8000cf6:	eba1 010e 	sub.w	r1, r1, lr
 8000cfa:	42a1      	cmp	r1, r4
 8000cfc:	46c8      	mov	r8, r9
 8000cfe:	46a6      	mov	lr, r4
 8000d00:	d356      	bcc.n	8000db0 <__udivmoddi4+0x2a4>
 8000d02:	d053      	beq.n	8000dac <__udivmoddi4+0x2a0>
 8000d04:	b15d      	cbz	r5, 8000d1e <__udivmoddi4+0x212>
 8000d06:	ebb3 0208 	subs.w	r2, r3, r8
 8000d0a:	eb61 010e 	sbc.w	r1, r1, lr
 8000d0e:	fa01 f707 	lsl.w	r7, r1, r7
 8000d12:	fa22 f306 	lsr.w	r3, r2, r6
 8000d16:	40f1      	lsrs	r1, r6
 8000d18:	431f      	orrs	r7, r3
 8000d1a:	e9c5 7100 	strd	r7, r1, [r5]
 8000d1e:	2600      	movs	r6, #0
 8000d20:	4631      	mov	r1, r6
 8000d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d26:	f1c2 0320 	rsb	r3, r2, #32
 8000d2a:	40d8      	lsrs	r0, r3
 8000d2c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d30:	fa21 f303 	lsr.w	r3, r1, r3
 8000d34:	4091      	lsls	r1, r2
 8000d36:	4301      	orrs	r1, r0
 8000d38:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d3c:	fa1f fe8c 	uxth.w	lr, ip
 8000d40:	fbb3 f0f7 	udiv	r0, r3, r7
 8000d44:	fb07 3610 	mls	r6, r7, r0, r3
 8000d48:	0c0b      	lsrs	r3, r1, #16
 8000d4a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000d4e:	fb00 f60e 	mul.w	r6, r0, lr
 8000d52:	429e      	cmp	r6, r3
 8000d54:	fa04 f402 	lsl.w	r4, r4, r2
 8000d58:	d908      	bls.n	8000d6c <__udivmoddi4+0x260>
 8000d5a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d5e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000d62:	d22f      	bcs.n	8000dc4 <__udivmoddi4+0x2b8>
 8000d64:	429e      	cmp	r6, r3
 8000d66:	d92d      	bls.n	8000dc4 <__udivmoddi4+0x2b8>
 8000d68:	3802      	subs	r0, #2
 8000d6a:	4463      	add	r3, ip
 8000d6c:	1b9b      	subs	r3, r3, r6
 8000d6e:	b289      	uxth	r1, r1
 8000d70:	fbb3 f6f7 	udiv	r6, r3, r7
 8000d74:	fb07 3316 	mls	r3, r7, r6, r3
 8000d78:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d7c:	fb06 f30e 	mul.w	r3, r6, lr
 8000d80:	428b      	cmp	r3, r1
 8000d82:	d908      	bls.n	8000d96 <__udivmoddi4+0x28a>
 8000d84:	eb1c 0101 	adds.w	r1, ip, r1
 8000d88:	f106 38ff 	add.w	r8, r6, #4294967295
 8000d8c:	d216      	bcs.n	8000dbc <__udivmoddi4+0x2b0>
 8000d8e:	428b      	cmp	r3, r1
 8000d90:	d914      	bls.n	8000dbc <__udivmoddi4+0x2b0>
 8000d92:	3e02      	subs	r6, #2
 8000d94:	4461      	add	r1, ip
 8000d96:	1ac9      	subs	r1, r1, r3
 8000d98:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000d9c:	e738      	b.n	8000c10 <__udivmoddi4+0x104>
 8000d9e:	462e      	mov	r6, r5
 8000da0:	4628      	mov	r0, r5
 8000da2:	e705      	b.n	8000bb0 <__udivmoddi4+0xa4>
 8000da4:	4606      	mov	r6, r0
 8000da6:	e6e3      	b.n	8000b70 <__udivmoddi4+0x64>
 8000da8:	4618      	mov	r0, r3
 8000daa:	e6f8      	b.n	8000b9e <__udivmoddi4+0x92>
 8000dac:	454b      	cmp	r3, r9
 8000dae:	d2a9      	bcs.n	8000d04 <__udivmoddi4+0x1f8>
 8000db0:	ebb9 0802 	subs.w	r8, r9, r2
 8000db4:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000db8:	3801      	subs	r0, #1
 8000dba:	e7a3      	b.n	8000d04 <__udivmoddi4+0x1f8>
 8000dbc:	4646      	mov	r6, r8
 8000dbe:	e7ea      	b.n	8000d96 <__udivmoddi4+0x28a>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	e794      	b.n	8000cee <__udivmoddi4+0x1e2>
 8000dc4:	4640      	mov	r0, r8
 8000dc6:	e7d1      	b.n	8000d6c <__udivmoddi4+0x260>
 8000dc8:	46d0      	mov	r8, sl
 8000dca:	e77b      	b.n	8000cc4 <__udivmoddi4+0x1b8>
 8000dcc:	3b02      	subs	r3, #2
 8000dce:	4461      	add	r1, ip
 8000dd0:	e732      	b.n	8000c38 <__udivmoddi4+0x12c>
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	e709      	b.n	8000bea <__udivmoddi4+0xde>
 8000dd6:	4464      	add	r4, ip
 8000dd8:	3802      	subs	r0, #2
 8000dda:	e742      	b.n	8000c62 <__udivmoddi4+0x156>

08000ddc <__aeabi_idiv0>:
 8000ddc:	4770      	bx	lr
 8000dde:	bf00      	nop

08000de0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000de0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000e18 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000de4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000de6:	e003      	b.n	8000df0 <LoopCopyDataInit>

08000de8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000de8:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000dea:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000dec:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000dee:	3104      	adds	r1, #4

08000df0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000df0:	480b      	ldr	r0, [pc, #44]	; (8000e20 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000df2:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000df4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000df6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000df8:	d3f6      	bcc.n	8000de8 <CopyDataInit>
  ldr  r2, =_sbss
 8000dfa:	4a0b      	ldr	r2, [pc, #44]	; (8000e28 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000dfc:	e002      	b.n	8000e04 <LoopFillZerobss>

08000dfe <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000dfe:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000e00:	f842 3b04 	str.w	r3, [r2], #4

08000e04 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000e04:	4b09      	ldr	r3, [pc, #36]	; (8000e2c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000e06:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000e08:	d3f9      	bcc.n	8000dfe <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000e0a:	f003 fbbd 	bl	8004588 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000e0e:	f01c fc1b 	bl	801d648 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000e12:	f000 ff8b 	bl	8001d2c <main>
  bx  lr    
 8000e16:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000e18:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000e1c:	080221c0 	.word	0x080221c0
  ldr  r0, =_sdata
 8000e20:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000e24:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 8000e28:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 8000e2c:	2000c270 	.word	0x2000c270

08000e30 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000e30:	e7fe      	b.n	8000e30 <ADC_IRQHandler>

08000e32 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8000e32:	f000 bdf9 	b.w	8001a28 <touchgfx_init>

08000e36 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000e36:	f000 be67 	b.w	8001b08 <touchgfx_taskEntry>

08000e3a <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000e3a:	2100      	movs	r1, #0
 8000e3c:	4608      	mov	r0, r1
 8000e3e:	f002 bf0b 	b.w	8003c58 <BSP_PB_Init>

08000e42 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000e42:	2000      	movs	r0, #0
 8000e44:	f002 bf42 	b.w	8003ccc <BSP_PB_GetState>

08000e48 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000e48:	6840      	ldr	r0, [r0, #4]
    }
 8000e4a:	4770      	bx	lr

08000e4c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000e4c:	6041      	str	r1, [r0, #4]
    }
 8000e4e:	4770      	bx	lr

08000e50 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000e50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000e54:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000e58:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000e5c:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000e60:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000e64:	6813      	ldr	r3, [r2, #0]
 8000e66:	f043 0301 	orr.w	r3, r3, #1
 8000e6a:	6013      	str	r3, [r2, #0]
}
 8000e6c:	4770      	bx	lr

08000e6e <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000e6e:	1a51      	subs	r1, r2, r1
 8000e70:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000e74:	fbb1 f0f3 	udiv	r0, r1, r3
 8000e78:	4770      	bx	lr
	...

08000e7c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000e7c:	4b01      	ldr	r3, [pc, #4]	; (8000e84 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000e7e:	6858      	ldr	r0, [r3, #4]
}
 8000e80:	4770      	bx	lr
 8000e82:	bf00      	nop
 8000e84:	e0001000 	.word	0xe0001000

08000e88 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000e88:	4770      	bx	lr

08000e8a <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000e8a:	b510      	push	{r4, lr}
 8000e8c:	210c      	movs	r1, #12
 8000e8e:	4604      	mov	r4, r0
 8000e90:	f01b fde6 	bl	801ca60 <_ZdlPvj>
 8000e94:	4620      	mov	r0, r4
 8000e96:	bd10      	pop	{r4, pc}

08000e98 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000e98:	6803      	ldr	r3, [r0, #0]
{
 8000e9a:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000e9c:	691b      	ldr	r3, [r3, #16]
{
 8000e9e:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000ea0:	b131      	cbz	r1, 8000eb0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000ea2:	4798      	blx	r3
 8000ea4:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000ea6:	6863      	ldr	r3, [r4, #4]
 8000ea8:	1a9b      	subs	r3, r3, r2
 8000eaa:	4418      	add	r0, r3
 8000eac:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000eae:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000eb0:	4798      	blx	r3
 8000eb2:	60a0      	str	r0, [r4, #8]
}
 8000eb4:	e7fb      	b.n	8000eae <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000eb6 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000eb6:	4770      	bx	lr

08000eb8 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000eb8:	4770      	bx	lr
	...

08000ebc <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000ebc:	b508      	push	{r3, lr}
    Buttons::init();
 8000ebe:	f7ff ffbc 	bl	8000e3a <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000ec2:	4b02      	ldr	r3, [pc, #8]	; (8000ecc <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000ec4:	2200      	movs	r2, #0
 8000ec6:	601a      	str	r2, [r3, #0]
}
 8000ec8:	bd08      	pop	{r3, pc}
 8000eca:	bf00      	nop
 8000ecc:	2000015c 	.word	0x2000015c

08000ed0 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000ed0:	b570      	push	{r4, r5, r6, lr}
 8000ed2:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000ed4:	f7ff ffb5 	bl	8000e42 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000ed8:	4a0b      	ldr	r2, [pc, #44]	; (8000f08 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000eda:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000edc:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000ede:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000ee0:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000ee2:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000ee4:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000ee8:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000eea:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000eec:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000eee:	d00a      	beq.n	8000f06 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000ef0:	f016 0001 	ands.w	r0, r6, #1
 8000ef4:	d007      	beq.n	8000f06 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000ef6:	f011 0001 	ands.w	r0, r1, #1
 8000efa:	d004      	beq.n	8000f06 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000efc:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000efe:	bf5a      	itte	pl
 8000f00:	2001      	movpl	r0, #1
 8000f02:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000f04:	2000      	movmi	r0, #0
}
 8000f06:	bd70      	pop	{r4, r5, r6, pc}
 8000f08:	2000015c 	.word	0x2000015c

08000f0c <_ZN8touchgfx10KeySamplerD0Ev>:
 8000f0c:	b510      	push	{r4, lr}
 8000f0e:	2104      	movs	r1, #4
 8000f10:	4604      	mov	r4, r0
 8000f12:	f01b fda5 	bl	801ca60 <_ZdlPvj>
 8000f16:	4620      	mov	r0, r4
 8000f18:	bd10      	pop	{r4, pc}

08000f1a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000f1a:	4770      	bx	lr

08000f1c <_ZN20STM32TouchControllerD0Ev>:
 8000f1c:	b510      	push	{r4, lr}
 8000f1e:	2104      	movs	r1, #4
 8000f20:	4604      	mov	r4, r0
 8000f22:	f01b fd9d 	bl	801ca60 <_ZdlPvj>
 8000f26:	4620      	mov	r0, r4
 8000f28:	bd10      	pop	{r4, pc}
	...

08000f2c <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000f2c:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000f2e:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000f32:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000f36:	f003 fa79 	bl	800442c <BSP_TS_Init>
 8000f3a:	4b07      	ldr	r3, [pc, #28]	; (8000f58 <_ZN20STM32TouchController4initEv+0x2c>)
 8000f3c:	b910      	cbnz	r0, 8000f44 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000f3e:	2201      	movs	r2, #1
 8000f40:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000f42:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000f44:	781b      	ldrb	r3, [r3, #0]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d1fb      	bne.n	8000f42 <_ZN20STM32TouchController4initEv+0x16>
 8000f4a:	4b04      	ldr	r3, [pc, #16]	; (8000f5c <_ZN20STM32TouchController4initEv+0x30>)
 8000f4c:	4a04      	ldr	r2, [pc, #16]	; (8000f60 <_ZN20STM32TouchController4initEv+0x34>)
 8000f4e:	4805      	ldr	r0, [pc, #20]	; (8000f64 <_ZN20STM32TouchController4initEv+0x38>)
 8000f50:	2127      	movs	r1, #39	; 0x27
 8000f52:	f01c fb2f 	bl	801d5b4 <__assert_func>
 8000f56:	bf00      	nop
 8000f58:	20000160 	.word	0x20000160
 8000f5c:	0801e7b0 	.word	0x0801e7b0
 8000f60:	0801e7c3 	.word	0x0801e7c3
 8000f64:	0801e7ed 	.word	0x0801e7ed

08000f68 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000f68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000f6a:	4b0b      	ldr	r3, [pc, #44]	; (8000f98 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000f6c:	781c      	ldrb	r4, [r3, #0]
{
 8000f6e:	460e      	mov	r6, r1
 8000f70:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000f72:	b15c      	cbz	r4, 8000f8c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000f74:	a801      	add	r0, sp, #4
 8000f76:	f003 fa91 	bl	800449c <BSP_TS_GetState>
        if (state.touchDetected)
 8000f7a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000f7e:	b143      	cbz	r3, 8000f92 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000f80:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000f84:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000f86:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000f8a:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000f8c:	4620      	mov	r0, r4
 8000f8e:	b004      	add	sp, #16
 8000f90:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000f92:	461c      	mov	r4, r3
 8000f94:	e7fa      	b.n	8000f8c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000f96:	bf00      	nop
 8000f98:	20000160 	.word	0x20000160

08000f9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000f9c:	2801      	cmp	r0, #1
 8000f9e:	d00b      	beq.n	8000fb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000fa0:	2803      	cmp	r0, #3
 8000fa2:	d010      	beq.n	8000fc6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000fa4:	b9c0      	cbnz	r0, 8000fd8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000fa6:	4b0d      	ldr	r3, [pc, #52]	; (8000fdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 8000fa8:	681a      	ldr	r2, [r3, #0]
 8000faa:	fab2 f282 	clz	r2, r2
 8000fae:	0952      	lsrs	r2, r2, #5
 8000fb0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000fb2:	480b      	ldr	r0, [pc, #44]	; (8000fe0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000fb4:	f004 bc16 	b.w	80057e4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000fb8:	4b08      	ldr	r3, [pc, #32]	; (8000fdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 8000fba:	685a      	ldr	r2, [r3, #4]
 8000fbc:	fab2 f282 	clz	r2, r2
 8000fc0:	0952      	lsrs	r2, r2, #5
 8000fc2:	2140      	movs	r1, #64	; 0x40
 8000fc4:	e7f5      	b.n	8000fb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000fc6:	4b05      	ldr	r3, [pc, #20]	; (8000fdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 8000fc8:	4806      	ldr	r0, [pc, #24]	; (8000fe4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 8000fca:	68da      	ldr	r2, [r3, #12]
 8000fcc:	fab2 f282 	clz	r2, r2
 8000fd0:	0952      	lsrs	r2, r2, #5
 8000fd2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000fd6:	e7ed      	b.n	8000fb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000fd8:	4770      	bx	lr
 8000fda:	bf00      	nop
 8000fdc:	20000164 	.word	0x20000164
 8000fe0:	40020000 	.word	0x40020000
 8000fe4:	40021800 	.word	0x40021800

08000fe8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000fe8:	2801      	cmp	r0, #1
 8000fea:	d00b      	beq.n	8001004 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 8000fec:	2803      	cmp	r0, #3
 8000fee:	d010      	beq.n	8001012 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8000ff0:	b9c0      	cbnz	r0, 8001024 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000ff2:	4b0d      	ldr	r3, [pc, #52]	; (8001028 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 8000ff4:	681a      	ldr	r2, [r3, #0]
 8000ff6:	3a00      	subs	r2, #0
 8000ff8:	bf18      	it	ne
 8000ffa:	2201      	movne	r2, #1
 8000ffc:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000ffe:	480b      	ldr	r0, [pc, #44]	; (800102c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001000:	f004 bbf0 	b.w	80057e4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001004:	4b08      	ldr	r3, [pc, #32]	; (8001028 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 8001006:	685a      	ldr	r2, [r3, #4]
 8001008:	3a00      	subs	r2, #0
 800100a:	bf18      	it	ne
 800100c:	2201      	movne	r2, #1
 800100e:	2140      	movs	r1, #64	; 0x40
 8001010:	e7f5      	b.n	8000ffe <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001012:	4b05      	ldr	r3, [pc, #20]	; (8001028 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 8001014:	4806      	ldr	r0, [pc, #24]	; (8001030 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 8001016:	68da      	ldr	r2, [r3, #12]
 8001018:	3a00      	subs	r2, #0
 800101a:	bf18      	it	ne
 800101c:	2201      	movne	r2, #1
 800101e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001022:	e7ed      	b.n	8001000 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001024:	4770      	bx	lr
 8001026:	bf00      	nop
 8001028:	20000164 	.word	0x20000164
 800102c:	40020000 	.word	0x40020000
 8001030:	40021800 	.word	0x40021800

08001034 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001034:	2801      	cmp	r0, #1
 8001036:	d006      	beq.n	8001046 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 8001038:	2803      	cmp	r0, #3
 800103a:	d006      	beq.n	800104a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 800103c:	b948      	cbnz	r0, 8001052 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800103e:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001040:	4804      	ldr	r0, [pc, #16]	; (8001054 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001042:	f004 bbd4 	b.w	80057ee <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001046:	2140      	movs	r1, #64	; 0x40
 8001048:	e7fa      	b.n	8001040 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800104a:	4803      	ldr	r0, [pc, #12]	; (8001058 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 800104c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001050:	e7f7      	b.n	8001042 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8001052:	4770      	bx	lr
 8001054:	40020000 	.word	0x40020000
 8001058:	40021800 	.word	0x40021800

0800105c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800105c:	2801      	cmp	r0, #1
{
 800105e:	b508      	push	{r3, lr}
    switch (id)
 8001060:	d00a      	beq.n	8001078 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001062:	2803      	cmp	r0, #3
 8001064:	d00a      	beq.n	800107c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 8001066:	b968      	cbnz	r0, 8001084 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001068:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800106a:	4807      	ldr	r0, [pc, #28]	; (8001088 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800106c:	f004 fbb4 	bl	80057d8 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001070:	1e43      	subs	r3, r0, #1
 8001072:	4258      	negs	r0, r3
 8001074:	4158      	adcs	r0, r3
 8001076:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001078:	2140      	movs	r1, #64	; 0x40
 800107a:	e7f6      	b.n	800106a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800107c:	4803      	ldr	r0, [pc, #12]	; (800108c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800107e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001082:	e7f3      	b.n	800106c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8001084:	2000      	movs	r0, #0
 8001086:	e7f3      	b.n	8001070 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001088:	40020000 	.word	0x40020000
 800108c:	40021800 	.word	0x40021800

08001090 <_ZN8touchgfx4GPIO4initEv>:
{
 8001090:	b570      	push	{r4, r5, r6, lr}
 8001092:	4d08      	ldr	r5, [pc, #32]	; (80010b4 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001094:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001096:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001098:	b2e0      	uxtb	r0, r4
 800109a:	f7ff ffdf 	bl	800105c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800109e:	b118      	cbz	r0, 80010a8 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80010a0:	682b      	ldr	r3, [r5, #0]
 80010a2:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80010a4:	bf18      	it	ne
 80010a6:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80010a8:	3401      	adds	r4, #1
 80010aa:	2c05      	cmp	r4, #5
 80010ac:	f105 0504 	add.w	r5, r5, #4
 80010b0:	d1f2      	bne.n	8001098 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80010b2:	bd70      	pop	{r4, r5, r6, pc}
 80010b4:	20000164 	.word	0x20000164

080010b8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80010b8:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80010ba:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80010be:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 80010c2:	4770      	bx	lr

080010c4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 80010c4:	2000      	movs	r0, #0
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80010c8:	4b03      	ldr	r3, [pc, #12]	; (80010d8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80010ca:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80010cc:	3900      	subs	r1, #0
 80010ce:	bf18      	it	ne
 80010d0:	2101      	movne	r1, #1
 80010d2:	7019      	strb	r1, [r3, #0]
    }
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop
 80010d8:	2000bfcb 	.word	0x2000bfcb

080010dc <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80010dc:	2000      	movs	r0, #0
 80010de:	4770      	bx	lr

080010e0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80010e0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80010e2:	b10b      	cbz	r3, 80010e8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80010e4:	4608      	mov	r0, r1
 80010e6:	4718      	bx	r3
        }
    }
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80010ea:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80010ee:	4770      	bx	lr

080010f0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80010f0:	6840      	ldr	r0, [r0, #4]
 80010f2:	6803      	ldr	r3, [r0, #0]
 80010f4:	699b      	ldr	r3, [r3, #24]
 80010f6:	4718      	bx	r3

080010f8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80010f8:	4770      	bx	lr

080010fa <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80010fa:	4770      	bx	lr

080010fc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80010fc:	4b01      	ldr	r3, [pc, #4]	; (8001104 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80010fe:	6818      	ldr	r0, [r3, #0]
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop
 8001104:	20000174 	.word	0x20000174

08001108 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001108:	4770      	bx	lr
	...

0800110c <_ZN11TouchGFXHAL10initializeEv>:
{
 800110c:	b538      	push	{r3, r4, r5, lr}
 800110e:	4604      	mov	r4, r0
    mcuInstr.init();
 8001110:	4d09      	ldr	r5, [pc, #36]	; (8001138 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 8001112:	f7ff ffbd 	bl	8001090 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8001116:	4620      	mov	r0, r4
 8001118:	f000 fd76 	bl	8001c08 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 800111c:	2300      	movs	r3, #0
 800111e:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8001122:	4628      	mov	r0, r5
 8001124:	f7ff fe94 	bl	8000e50 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001128:	2301      	movs	r3, #1
 800112a:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800112e:	4b03      	ldr	r3, [pc, #12]	; (800113c <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8001130:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001132:	6163      	str	r3, [r4, #20]
}
 8001134:	bd38      	pop	{r3, r4, r5, pc}
 8001136:	bf00      	nop
 8001138:	20000180 	.word	0x20000180
 800113c:	2000017c 	.word	0x2000017c

08001140 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8001140:	6803      	ldr	r3, [r0, #0]
{
 8001142:	4604      	mov	r4, r0
 8001144:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8001146:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800114a:	4798      	blx	r3
    enableInterrupts();
 800114c:	6823      	ldr	r3, [r4, #0]
 800114e:	4620      	mov	r0, r4
 8001150:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001152:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001154:	f000 fa2e 	bl	80015b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001158:	6823      	ldr	r3, [r4, #0]
 800115a:	4620      	mov	r0, r4
 800115c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800115e:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8001160:	2100      	movs	r1, #0
 8001162:	4806      	ldr	r0, [pc, #24]	; (800117c <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8001164:	9100      	str	r1, [sp, #0]
 8001166:	2329      	movs	r3, #41	; 0x29
 8001168:	2215      	movs	r2, #21
 800116a:	f004 f924 	bl	80053b6 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800116e:	f000 fa21 	bl	80015b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001172:	6823      	ldr	r3, [r4, #0]
 8001174:	4620      	mov	r0, r4
 8001176:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001178:	4798      	blx	r3
    for (;;)
 800117a:	e7f8      	b.n	800116e <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 800117c:	200013b0 	.word	0x200013b0

08001180 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001180:	b510      	push	{r4, lr}
 8001182:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001184:	f00a fa48 	bl	800b618 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001188:	6823      	ldr	r3, [r4, #0]
 800118a:	4620      	mov	r0, r4
 800118c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001194:	4718      	bx	r3

08001196 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001196:	f000 bd36 	b.w	8001c06 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800119a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800119a:	f000 bd4c 	b.w	8001c36 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800119e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800119e:	f000 bd4c 	b.w	8001c3a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080011a2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80011a2:	f000 bd1f 	b.w	8001be4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080011a6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80011a6:	f000 bd25 	b.w	8001bf4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080011aa <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80011aa:	f000 bd49 	b.w	8001c40 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080011b0 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80011b0:	4b02      	ldr	r3, [pc, #8]	; (80011bc <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80011b2:	2200      	movs	r2, #0
 80011b4:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80011b6:	f009 bbf7 	b.w	800a9a8 <_ZN8touchgfx3HAL10beginFrameEv>
 80011ba:	bf00      	nop
 80011bc:	20000014 	.word	0x20000014

080011c0 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80011c0:	b510      	push	{r4, lr}
 80011c2:	4604      	mov	r4, r0
    HAL::endFrame();
 80011c4:	f009 fbfc 	bl	800a9c0 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 80011c8:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80011cc:	b113      	cbz	r3, 80011d4 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80011ce:	4b02      	ldr	r3, [pc, #8]	; (80011d8 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80011d0:	2201      	movs	r2, #1
 80011d2:	701a      	strb	r2, [r3, #0]
    }
}
 80011d4:	bd10      	pop	{r4, pc}
 80011d6:	bf00      	nop
 80011d8:	20000014 	.word	0x20000014

080011dc <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80011dc:	f009 bba8 	b.w	800a930 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080011e0 <_ZN11TouchGFXHALD0Ev>:
 80011e0:	b510      	push	{r4, lr}
 80011e2:	217c      	movs	r1, #124	; 0x7c
 80011e4:	4604      	mov	r4, r0
 80011e6:	f01b fc3b 	bl	801ca60 <_ZdlPvj>
 80011ea:	4620      	mov	r0, r4
 80011ec:	bd10      	pop	{r4, pc}

080011ee <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80011ee:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80011f2:	b11b      	cbz	r3, 80011fc <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80011f4:	6840      	ldr	r0, [r0, #4]
 80011f6:	6803      	ldr	r3, [r0, #0]
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	4718      	bx	r3
    }
 80011fc:	4618      	mov	r0, r3
 80011fe:	4770      	bx	lr

08001200 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001200:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001202:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001206:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800120a:	4b0c      	ldr	r3, [pc, #48]	; (800123c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800120c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800120e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001210:	d009      	beq.n	8001226 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001212:	b93a      	cbnz	r2, 8001224 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001214:	4a0a      	ldr	r2, [pc, #40]	; (8001240 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001216:	490b      	ldr	r1, [pc, #44]	; (8001244 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001218:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800121a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800121c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800121e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001220:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001222:	701a      	strb	r2, [r3, #0]
    }
 8001224:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001226:	2a00      	cmp	r2, #0
 8001228:	d0fc      	beq.n	8001224 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800122a:	4a05      	ldr	r2, [pc, #20]	; (8001240 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800122c:	4905      	ldr	r1, [pc, #20]	; (8001244 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800122e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001230:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001232:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001234:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001236:	2200      	movs	r2, #0
 8001238:	e7f3      	b.n	8001222 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800123a:	bf00      	nop
 800123c:	2000bfc4 	.word	0x2000bfc4
 8001240:	2000bfc0 	.word	0x2000bfc0
 8001244:	2000bfc2 	.word	0x2000bfc2

08001248 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001248:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800124a:	4b09      	ldr	r3, [pc, #36]	; (8001270 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800124c:	881b      	ldrh	r3, [r3, #0]
 800124e:	428b      	cmp	r3, r1
 8001250:	d803      	bhi.n	800125a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001252:	4b08      	ldr	r3, [pc, #32]	; (8001274 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001254:	881b      	ldrh	r3, [r3, #0]
 8001256:	4293      	cmp	r3, r2
 8001258:	d905      	bls.n	8001266 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800125a:	4b07      	ldr	r3, [pc, #28]	; (8001278 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800125c:	4a07      	ldr	r2, [pc, #28]	; (800127c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800125e:	4808      	ldr	r0, [pc, #32]	; (8001280 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001260:	219e      	movs	r1, #158	; 0x9e
 8001262:	f01c f9a7 	bl	801d5b4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001266:	4b07      	ldr	r3, [pc, #28]	; (8001284 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001268:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800126a:	4b07      	ldr	r3, [pc, #28]	; (8001288 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800126c:	801a      	strh	r2, [r3, #0]
    }
 800126e:	bd08      	pop	{r3, pc}
 8001270:	2000bfc0 	.word	0x2000bfc0
 8001274:	2000bfc2 	.word	0x2000bfc2
 8001278:	0801e84c 	.word	0x0801e84c
 800127c:	0801e8af 	.word	0x0801e8af
 8001280:	0801e8f2 	.word	0x0801e8f2
 8001284:	2000bfc6 	.word	0x2000bfc6
 8001288:	2000bfc8 	.word	0x2000bfc8

0800128c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 800128c:	b570      	push	{r4, r5, r6, lr}
 800128e:	460d      	mov	r5, r1
 8001290:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8001292:	4b0b      	ldr	r3, [pc, #44]	; (80012c0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8001294:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001296:	b935      	cbnz	r5, 80012a6 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8001298:	4b0a      	ldr	r3, [pc, #40]	; (80012c4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 800129a:	4a0b      	ldr	r2, [pc, #44]	; (80012c8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 800129c:	480b      	ldr	r0, [pc, #44]	; (80012cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 800129e:	f240 21bb 	movw	r1, #699	; 0x2bb
 80012a2:	f01c f987 	bl	801d5b4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80012a6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80012aa:	4b09      	ldr	r3, [pc, #36]	; (80012d0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 80012ac:	3a00      	subs	r2, #0
 80012ae:	bf18      	it	ne
 80012b0:	2201      	movne	r2, #1
 80012b2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80012b4:	6803      	ldr	r3, [r0, #0]
}
 80012b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012ba:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80012be:	4718      	bx	r3
 80012c0:	20000174 	.word	0x20000174
 80012c4:	0801e937 	.word	0x0801e937
 80012c8:	0801e96f 	.word	0x0801e96f
 80012cc:	0801e8f2 	.word	0x0801e8f2
 80012d0:	2000bfca 	.word	0x2000bfca

080012d4 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 80012d4:	2801      	cmp	r0, #1
    {
 80012d6:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 80012d8:	d80a      	bhi.n	80012f0 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 80012da:	784b      	ldrb	r3, [r1, #1]
 80012dc:	9300      	str	r3, [sp, #0]
 80012de:	780b      	ldrb	r3, [r1, #0]
 80012e0:	4808      	ldr	r0, [pc, #32]	; (8001304 <DSI_IO_WriteCmd+0x30>)
 80012e2:	2215      	movs	r2, #21
 80012e4:	2100      	movs	r1, #0
 80012e6:	f004 f866 	bl	80053b6 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 80012ea:	b003      	add	sp, #12
 80012ec:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 80012f0:	9101      	str	r1, [sp, #4]
 80012f2:	5c0b      	ldrb	r3, [r1, r0]
 80012f4:	9300      	str	r3, [sp, #0]
 80012f6:	2239      	movs	r2, #57	; 0x39
 80012f8:	4603      	mov	r3, r0
 80012fa:	2100      	movs	r1, #0
 80012fc:	4801      	ldr	r0, [pc, #4]	; (8001304 <DSI_IO_WriteCmd+0x30>)
 80012fe:	f004 f86b 	bl	80053d8 <HAL_DSI_LongWrite>
    }
 8001302:	e7f2      	b.n	80012ea <DSI_IO_WriteCmd+0x16>
 8001304:	200013b0 	.word	0x200013b0

08001308 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001308:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 800130a:	4a0b      	ldr	r2, [pc, #44]	; (8001338 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 800130c:	4c0b      	ldr	r4, [pc, #44]	; (800133c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 800130e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8001310:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8001312:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8001314:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001316:	9201      	str	r2, [sp, #4]
 8001318:	2244      	movs	r2, #68	; 0x44
 800131a:	9200      	str	r2, [sp, #0]
 800131c:	2100      	movs	r1, #0
 800131e:	2239      	movs	r2, #57	; 0x39
 8001320:	4620      	mov	r0, r4
 8001322:	f004 f859 	bl	80053d8 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8001326:	2100      	movs	r1, #0
 8001328:	9100      	str	r1, [sp, #0]
 800132a:	2335      	movs	r3, #53	; 0x35
 800132c:	462a      	mov	r2, r5
 800132e:	4620      	mov	r0, r4
 8001330:	f004 f841 	bl	80053b6 <HAL_DSI_ShortWrite>
    }
 8001334:	b003      	add	sp, #12
 8001336:	bd30      	pop	{r4, r5, pc}
 8001338:	2000018c 	.word	0x2000018c
 800133c:	200013b0 	.word	0x200013b0

08001340 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8001340:	b507      	push	{r0, r1, r2, lr}
 8001342:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8001344:	f7ff ffe0 	bl	8001308 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001348:	9801      	ldr	r0, [sp, #4]
}
 800134a:	b003      	add	sp, #12
 800134c:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001350:	f000 bc58 	b.w	8001c04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001354 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8001354:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8001356:	4b07      	ldr	r3, [pc, #28]	; (8001374 <LCD_SetUpdateRegion+0x20>)
 8001358:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800135c:	232a      	movs	r3, #42	; 0x2a
 800135e:	9001      	str	r0, [sp, #4]
 8001360:	9300      	str	r3, [sp, #0]
 8001362:	2239      	movs	r2, #57	; 0x39
 8001364:	2304      	movs	r3, #4
 8001366:	2100      	movs	r1, #0
 8001368:	4803      	ldr	r0, [pc, #12]	; (8001378 <LCD_SetUpdateRegion+0x24>)
 800136a:	f004 f835 	bl	80053d8 <HAL_DSI_LongWrite>
    }
 800136e:	b003      	add	sp, #12
 8001370:	f85d fb04 	ldr.w	pc, [sp], #4
 8001374:	20000004 	.word	0x20000004
 8001378:	200013b0 	.word	0x200013b0

0800137c <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 800137c:	b570      	push	{r4, r5, r6, lr}
        return instance;
 800137e:	4d15      	ldr	r5, [pc, #84]	; (80013d4 <HAL_DSI_TearingEffectCallback+0x58>)
 8001380:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8001382:	2000      	movs	r0, #0
 8001384:	f7ff fe0a 	bl	8000f9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8001388:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 800138a:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800138e:	3301      	adds	r3, #1
 8001390:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8001394:	f000 f902 	bl	800159c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8001398:	4b0f      	ldr	r3, [pc, #60]	; (80013d8 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 800139a:	6828      	ldr	r0, [r5, #0]
 800139c:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 800139e:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 80013a0:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 80013a4:	b123      	cbz	r3, 80013b0 <HAL_DSI_TearingEffectCallback+0x34>
 80013a6:	4d0d      	ldr	r5, [pc, #52]	; (80013dc <HAL_DSI_TearingEffectCallback+0x60>)
 80013a8:	782b      	ldrb	r3, [r5, #0]
 80013aa:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 80013ae:	b123      	cbz	r3, 80013ba <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80013b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80013b4:	2000      	movs	r0, #0
 80013b6:	f7ff be17 	b.w	8000fe8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 80013ba:	f00a f92d 	bl	800b618 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 80013be:	4b08      	ldr	r3, [pc, #32]	; (80013e0 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 80013c0:	4630      	mov	r0, r6
            updateRegion = 0;
 80013c2:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 80013c4:	f7ff ffc6 	bl	8001354 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 80013c8:	4620      	mov	r0, r4
 80013ca:	f003 ffe4 	bl	8005396 <HAL_DSI_Refresh>
            displayRefreshing = true;
 80013ce:	2301      	movs	r3, #1
 80013d0:	702b      	strb	r3, [r5, #0]
    }
 80013d2:	bd70      	pop	{r4, r5, r6, pc}
 80013d4:	2000bfcc 	.word	0x2000bfcc
 80013d8:	20000014 	.word	0x20000014
 80013dc:	2000018e 	.word	0x2000018e
 80013e0:	20000178 	.word	0x20000178

080013e4 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 80013e4:	4b33      	ldr	r3, [pc, #204]	; (80014b4 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 80013e6:	681a      	ldr	r2, [r3, #0]
 80013e8:	3201      	adds	r2, #1
    {
 80013ea:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 80013ec:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 80013ee:	4b32      	ldr	r3, [pc, #200]	; (80014b8 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 80013f0:	4c32      	ldr	r4, [pc, #200]	; (80014bc <HAL_DSI_EndOfRefreshCallback+0xd8>)
 80013f2:	6819      	ldr	r1, [r3, #0]
 80013f4:	4b32      	ldr	r3, [pc, #200]	; (80014c0 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 80013f6:	2a03      	cmp	r2, #3
    {
 80013f8:	4605      	mov	r5, r0
        if (updateRegion < 4)
 80013fa:	dc2e      	bgt.n	800145a <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 80013fc:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8001400:	f020 0008 	bic.w	r0, r0, #8
 8001404:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001408:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800140c:	fb00 1102 	mla	r1, r0, r2, r1
 8001410:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8001414:	bf0c      	ite	eq
 8001416:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8001418:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 800141a:	3302      	adds	r3, #2
 800141c:	4928      	ldr	r1, [pc, #160]	; (80014c0 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800141e:	041b      	lsls	r3, r3, #16
 8001420:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8001424:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8001426:	4b27      	ldr	r3, [pc, #156]	; (80014c4 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8001428:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 800142a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 800142e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8001432:	4b25      	ldr	r3, [pc, #148]	; (80014c8 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001434:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001438:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 800143a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800143c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 800143e:	f7ff ff89 	bl	8001354 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8001442:	4a1e      	ldr	r2, [pc, #120]	; (80014bc <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8001444:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8001448:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 800144c:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 800144e:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8001452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8001456:	f003 bf9e 	b.w	8005396 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 800145a:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 800145e:	f022 0208 	bic.w	r2, r2, #8
 8001462:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001466:	4a19      	ldr	r2, [pc, #100]	; (80014cc <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8001468:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 800146c:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 800146e:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8001472:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8001474:	4a16      	ldr	r2, [pc, #88]	; (80014d0 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8001476:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 800147a:	4a13      	ldr	r2, [pc, #76]	; (80014c8 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 800147c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001480:	2201      	movs	r2, #1
 8001482:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8001484:	2000      	movs	r0, #0
 8001486:	f7ff ff65 	bl	8001354 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 800148a:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 800148e:	f043 0308 	orr.w	r3, r3, #8
 8001492:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001496:	2000      	movs	r0, #0
 8001498:	f7ff fda6 	bl	8000fe8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 800149c:	4b0d      	ldr	r3, [pc, #52]	; (80014d4 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 800149e:	2200      	movs	r2, #0
 80014a0:	701a      	strb	r2, [r3, #0]
        return instance;
 80014a2:	4b0d      	ldr	r3, [pc, #52]	; (80014d8 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 80014a4:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 80014a6:	b120      	cbz	r0, 80014b2 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 80014a8:	6803      	ldr	r3, [r0, #0]
    }
 80014aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80014ae:	6a1b      	ldr	r3, [r3, #32]
 80014b0:	4718      	bx	r3
 80014b2:	bd70      	pop	{r4, r5, r6, pc}
 80014b4:	20000178 	.word	0x20000178
 80014b8:	20000174 	.word	0x20000174
 80014bc:	40016c00 	.word	0x40016c00
 80014c0:	40016800 	.word	0x40016800
 80014c4:	00ca01e3 	.word	0x00ca01e3
 80014c8:	06800193 	.word	0x06800193
 80014cc:	00ca01e2 	.word	0x00ca01e2
 80014d0:	00ca0003 	.word	0x00ca0003
 80014d4:	2000018e 	.word	0x2000018e
 80014d8:	2000bfcc 	.word	0x2000bfcc

080014dc <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 80014dc:	b508      	push	{r3, lr}
        return instance;
 80014de:	4b04      	ldr	r3, [pc, #16]	; (80014f0 <IdleTaskHook+0x14>)
 80014e0:	4601      	mov	r1, r0
 80014e2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80014e4:	b101      	cbz	r1, 80014e8 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80014e6:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80014e8:	f00a f8b0 	bl	800b64c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80014ec:	2001      	movs	r0, #1
 80014ee:	bd08      	pop	{r3, pc}
 80014f0:	2000bfcc 	.word	0x2000bfcc

080014f4 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 80014f4:	4b05      	ldr	r3, [pc, #20]	; (800150c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 80014f6:	4806      	ldr	r0, [pc, #24]	; (8001510 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 80014f8:	2200      	movs	r2, #0
 80014fa:	605a      	str	r2, [r3, #4]
 80014fc:	609a      	str	r2, [r3, #8]
 80014fe:	4a05      	ldr	r2, [pc, #20]	; (8001514 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8001500:	601a      	str	r2, [r3, #0]
 8001502:	4b05      	ldr	r3, [pc, #20]	; (8001518 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8001504:	6003      	str	r3, [r0, #0]
        init();
 8001506:	f7ff bcd9 	b.w	8000ebc <_ZN8touchgfx10KeySampler4initEv>
 800150a:	bf00      	nop
 800150c:	20000180 	.word	0x20000180
 8001510:	2000017c 	.word	0x2000017c
 8001514:	0801e774 	.word	0x0801e774
 8001518:	0801e79c 	.word	0x0801e79c

0800151c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800151c:	2101      	movs	r1, #1
{
 800151e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001520:	2200      	movs	r2, #0
 8001522:	4608      	mov	r0, r1
 8001524:	f006 fe11 	bl	800814a <osSemaphoreNew>
 8001528:	4b0a      	ldr	r3, [pc, #40]	; (8001554 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800152a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800152c:	b928      	cbnz	r0, 800153a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800152e:	4b0a      	ldr	r3, [pc, #40]	; (8001558 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001530:	4a0a      	ldr	r2, [pc, #40]	; (800155c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001532:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001534:	480a      	ldr	r0, [pc, #40]	; (8001560 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001536:	f01c f83d 	bl	801d5b4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800153a:	2200      	movs	r2, #0
 800153c:	2104      	movs	r1, #4
 800153e:	2001      	movs	r0, #1
 8001540:	f006 fea0 	bl	8008284 <osMessageQueueNew>
 8001544:	4b07      	ldr	r3, [pc, #28]	; (8001564 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001546:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001548:	b918      	cbnz	r0, 8001552 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800154a:	4b07      	ldr	r3, [pc, #28]	; (8001568 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 800154c:	4a03      	ldr	r2, [pc, #12]	; (800155c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800154e:	212c      	movs	r1, #44	; 0x2c
 8001550:	e7f0      	b.n	8001534 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001552:	bd08      	pop	{r3, pc}
 8001554:	20000194 	.word	0x20000194
 8001558:	0801ea98 	.word	0x0801ea98
 800155c:	0801eae1 	.word	0x0801eae1
 8001560:	0801eb10 	.word	0x0801eb10
 8001564:	20000190 	.word	0x20000190
 8001568:	0801eb57 	.word	0x0801eb57

0800156c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800156c:	4b02      	ldr	r3, [pc, #8]	; (8001578 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800156e:	f04f 31ff 	mov.w	r1, #4294967295
 8001572:	6818      	ldr	r0, [r3, #0]
 8001574:	f006 be33 	b.w	80081de <osSemaphoreAcquire>
 8001578:	20000194 	.word	0x20000194

0800157c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 800157c:	4b01      	ldr	r3, [pc, #4]	; (8001584 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800157e:	6818      	ldr	r0, [r3, #0]
 8001580:	f006 be58 	b.w	8008234 <osSemaphoreRelease>
 8001584:	20000194 	.word	0x20000194

08001588 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001588:	4b02      	ldr	r3, [pc, #8]	; (8001594 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800158a:	2100      	movs	r1, #0
 800158c:	6818      	ldr	r0, [r3, #0]
 800158e:	f006 be26 	b.w	80081de <osSemaphoreAcquire>
 8001592:	bf00      	nop
 8001594:	20000194 	.word	0x20000194

08001598 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001598:	f7ff bff0 	b.w	800157c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800159c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800159c:	4803      	ldr	r0, [pc, #12]	; (80015ac <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800159e:	4904      	ldr	r1, [pc, #16]	; (80015b0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80015a0:	6800      	ldr	r0, [r0, #0]
 80015a2:	2300      	movs	r3, #0
 80015a4:	461a      	mov	r2, r3
 80015a6:	f006 bea8 	b.w	80082fa <osMessageQueuePut>
 80015aa:	bf00      	nop
 80015ac:	20000190 	.word	0x20000190
 80015b0:	20000018 	.word	0x20000018

080015b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80015b4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80015b6:	4c08      	ldr	r4, [pc, #32]	; (80015d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80015b8:	2300      	movs	r3, #0
 80015ba:	461a      	mov	r2, r3
 80015bc:	a901      	add	r1, sp, #4
 80015be:	6820      	ldr	r0, [r4, #0]
 80015c0:	f006 fecb 	bl	800835a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80015c4:	6820      	ldr	r0, [r4, #0]
 80015c6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ca:	2200      	movs	r2, #0
 80015cc:	a901      	add	r1, sp, #4
 80015ce:	f006 fec4 	bl	800835a <osMessageQueueGet>
}
 80015d2:	b002      	add	sp, #8
 80015d4:	bd10      	pop	{r4, pc}
 80015d6:	bf00      	nop
 80015d8:	20000190 	.word	0x20000190

080015dc <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80015dc:	6803      	ldr	r3, [r0, #0]
 80015de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015e0:	4718      	bx	r3

080015e2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80015e2:	2001      	movs	r0, #1
 80015e4:	4770      	bx	lr

080015e6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80015e6:	6803      	ldr	r3, [r0, #0]
 80015e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80015ea:	4718      	bx	r3

080015ec <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80015ec:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80015ee:	2300      	movs	r3, #0
 80015f0:	9301      	str	r3, [sp, #4]
 80015f2:	4b0d      	ldr	r3, [pc, #52]	; (8001628 <_ZN8STM32DMA10initializeEv+0x3c>)
 80015f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015f6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80015fa:	631a      	str	r2, [r3, #48]	; 0x30
 80015fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015fe:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8001602:	9201      	str	r2, [sp, #4]
 8001604:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001606:	691a      	ldr	r2, [r3, #16]
 8001608:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800160c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800160e:	691a      	ldr	r2, [r3, #16]
 8001610:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001614:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001616:	4b05      	ldr	r3, [pc, #20]	; (800162c <_ZN8STM32DMA10initializeEv+0x40>)
 8001618:	4a05      	ldr	r2, [pc, #20]	; (8001630 <_ZN8STM32DMA10initializeEv+0x44>)
 800161a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800161c:	4b05      	ldr	r3, [pc, #20]	; (8001634 <_ZN8STM32DMA10initializeEv+0x48>)
 800161e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001622:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001624:	b002      	add	sp, #8
 8001626:	4770      	bx	lr
 8001628:	40023800 	.word	0x40023800
 800162c:	20001310 	.word	0x20001310
 8001630:	08001679 	.word	0x08001679
 8001634:	e000e100 	.word	0xe000e100

08001638 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001638:	f240 30ef 	movw	r0, #1007	; 0x3ef
 800163c:	4770      	bx	lr
	...

08001640 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001640:	4b05      	ldr	r3, [pc, #20]	; (8001658 <_ZN8STM32DMAD1Ev+0x18>)
 8001642:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001644:	4b05      	ldr	r3, [pc, #20]	; (800165c <_ZN8STM32DMAD1Ev+0x1c>)
 8001646:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800164a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800164e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001652:	f3bf 8f6f 	isb	sy
}
 8001656:	4770      	bx	lr
 8001658:	0801ecf0 	.word	0x0801ecf0
 800165c:	e000e100 	.word	0xe000e100

08001660 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001660:	b510      	push	{r4, lr}
 8001662:	4604      	mov	r4, r0
}
 8001664:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001668:	f7ff ffea 	bl	8001640 <_ZN8STM32DMAD1Ev>
 800166c:	4620      	mov	r0, r4
 800166e:	f01b f9f7 	bl	801ca60 <_ZdlPvj>
 8001672:	4620      	mov	r0, r4
 8001674:	bd10      	pop	{r4, pc}
	...

08001678 <DMA2D_XferCpltCallback>:
 8001678:	4b02      	ldr	r3, [pc, #8]	; (8001684 <DMA2D_XferCpltCallback+0xc>)
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 800167e:	6803      	ldr	r3, [r0, #0]
 8001680:	695b      	ldr	r3, [r3, #20]
 8001682:	4718      	bx	r3
 8001684:	2000bfcc 	.word	0x2000bfcc

08001688 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001688:	b570      	push	{r4, r5, r6, lr}
 800168a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800168c:	4625      	mov	r5, r4
 800168e:	4b0a      	ldr	r3, [pc, #40]	; (80016b8 <_ZN8STM32DMAC1Ev+0x30>)
 8001690:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001692:	2600      	movs	r6, #0
 8001694:	6060      	str	r0, [r4, #4]
 8001696:	7226      	strb	r6, [r4, #8]
 8001698:	7266      	strb	r6, [r4, #9]
 800169a:	f845 3b20 	str.w	r3, [r5], #32
 800169e:	2260      	movs	r2, #96	; 0x60
 80016a0:	4629      	mov	r1, r5
 80016a2:	f00a f939 	bl	800b918 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80016a6:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80016aa:	60ee      	str	r6, [r5, #12]
 80016ac:	3524      	adds	r5, #36	; 0x24
 80016ae:	42ab      	cmp	r3, r5
 80016b0:	d1fb      	bne.n	80016aa <_ZN8STM32DMAC1Ev+0x22>
}
 80016b2:	4620      	mov	r0, r4
 80016b4:	bd70      	pop	{r4, r5, r6, pc}
 80016b6:	bf00      	nop
 80016b8:	0801ecf0 	.word	0x0801ecf0

080016bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80016bc:	b508      	push	{r3, lr}
    switch (format)
 80016be:	290b      	cmp	r1, #11
 80016c0:	d80b      	bhi.n	80016da <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80016c2:	e8df f001 	tbb	[pc, r1]
 80016c6:	0612      	.short	0x0612
 80016c8:	0a0a0a10 	.word	0x0a0a0a10
 80016cc:	0808080a 	.word	0x0808080a
 80016d0:	0808      	.short	0x0808
 80016d2:	2001      	movs	r0, #1
}
 80016d4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80016d6:	2005      	movs	r0, #5
        break;
 80016d8:	e7fc      	b.n	80016d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 80016da:	4b05      	ldr	r3, [pc, #20]	; (80016f0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80016dc:	4a05      	ldr	r2, [pc, #20]	; (80016f4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80016de:	4806      	ldr	r0, [pc, #24]	; (80016f8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 80016e0:	2166      	movs	r1, #102	; 0x66
 80016e2:	f01b ff67 	bl	801d5b4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80016e6:	2000      	movs	r0, #0
 80016e8:	e7f4      	b.n	80016d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80016ea:	2002      	movs	r0, #2
    return dma2dColorMode;
 80016ec:	e7f2      	b.n	80016d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80016ee:	bf00      	nop
 80016f0:	0801eb99 	.word	0x0801eb99
 80016f4:	0801ebb4 	.word	0x0801ebb4
 80016f8:	0801ebfe 	.word	0x0801ebfe

080016fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80016fc:	b508      	push	{r3, lr}
    switch (format)
 80016fe:	290a      	cmp	r1, #10
 8001700:	d809      	bhi.n	8001716 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001702:	e8df f001 	tbb	[pc, r1]
 8001706:	0610      	.short	0x0610
 8001708:	0808080e 	.word	0x0808080e
 800170c:	06060608 	.word	0x06060608
 8001710:	06          	.byte	0x06
 8001711:	00          	.byte	0x00
 8001712:	2001      	movs	r0, #1
}
 8001714:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001716:	4b05      	ldr	r3, [pc, #20]	; (800172c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001718:	4a05      	ldr	r2, [pc, #20]	; (8001730 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800171a:	4806      	ldr	r0, [pc, #24]	; (8001734 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800171c:	2187      	movs	r1, #135	; 0x87
 800171e:	f01b ff49 	bl	801d5b4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001722:	2000      	movs	r0, #0
 8001724:	e7f6      	b.n	8001714 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001726:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001728:	e7f4      	b.n	8001714 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800172a:	bf00      	nop
 800172c:	0801eb99 	.word	0x0801eb99
 8001730:	0801ec43 	.word	0x0801ec43
 8001734:	0801ebfe 	.word	0x0801ebfe

08001738 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001738:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800173c:	7f4f      	ldrb	r7, [r1, #29]
{
 800173e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001740:	4639      	mov	r1, r7
{
 8001742:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001744:	f7ff ffba 	bl	80016bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001748:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800174c:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800174e:	4641      	mov	r1, r8
 8001750:	4648      	mov	r0, r9
 8001752:	f7ff ffb3 	bl	80016bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001756:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001758:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800175a:	4648      	mov	r0, r9
 800175c:	f7ff ffce 	bl	80016fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001760:	8aa1      	ldrh	r1, [r4, #20]
 8001762:	8b62      	ldrh	r2, [r4, #26]
 8001764:	4b42      	ldr	r3, [pc, #264]	; (8001870 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001766:	1a52      	subs	r2, r2, r1
 8001768:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800176a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800176c:	8b22      	ldrh	r2, [r4, #24]
 800176e:	1a52      	subs	r2, r2, r1
 8001770:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001772:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001774:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001776:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800177a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800177c:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800177e:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001780:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001782:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001784:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001786:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 800178a:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800178c:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001790:	d026      	beq.n	80017e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001792:	d810      	bhi.n	80017b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001794:	2920      	cmp	r1, #32
 8001796:	ea45 0402 	orr.w	r4, r5, r2
 800179a:	d061      	beq.n	8001860 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 800179c:	2940      	cmp	r1, #64	; 0x40
 800179e:	d05f      	beq.n	8001860 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80017a0:	2904      	cmp	r1, #4
 80017a2:	d05d      	beq.n	8001860 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017a4:	4b32      	ldr	r3, [pc, #200]	; (8001870 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80017a6:	432a      	orrs	r2, r5
 80017a8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80017ac:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017ae:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80017b0:	d05a      	beq.n	8001868 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80017b2:	4a30      	ldr	r2, [pc, #192]	; (8001874 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80017b4:	e040      	b.n	8001838 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 80017b6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80017ba:	d007      	beq.n	80017cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 80017bc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80017c0:	d1f0      	bne.n	80017a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017c2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80017c6:	f042 0209 	orr.w	r2, r2, #9
 80017ca:	e003      	b.n	80017d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017cc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80017d0:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017d4:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80017d6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80017d8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017da:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017dc:	6158      	str	r0, [r3, #20]
 80017de:	e02a      	b.n	8001836 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80017e0:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017e2:	432a      	orrs	r2, r5
 80017e4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80017e8:	1d21      	adds	r1, r4, #4
 80017ea:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017ec:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 80017ee:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017f0:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017f2:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 80017f4:	b142      	cbz	r2, 8001808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 80017f6:	2a01      	cmp	r2, #1
 80017f8:	d021      	beq.n	800183e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 80017fa:	4b1f      	ldr	r3, [pc, #124]	; (8001878 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80017fc:	4a1f      	ldr	r2, [pc, #124]	; (800187c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80017fe:	4820      	ldr	r0, [pc, #128]	; (8001880 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001800:	f240 1111 	movw	r1, #273	; 0x111
 8001804:	f01b fed6 	bl	801d5b4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001808:	69da      	ldr	r2, [r3, #28]
 800180a:	8861      	ldrh	r1, [r4, #2]
 800180c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001810:	3901      	subs	r1, #1
 8001812:	f022 0210 	bic.w	r2, r2, #16
 8001816:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800181a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 800181c:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800181e:	4b14      	ldr	r3, [pc, #80]	; (8001870 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001820:	69da      	ldr	r2, [r3, #28]
 8001822:	f042 0220 	orr.w	r2, r2, #32
 8001826:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001828:	69da      	ldr	r2, [r3, #28]
 800182a:	0692      	lsls	r2, r2, #26
 800182c:	d4fc      	bmi.n	8001828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800182e:	2210      	movs	r2, #16
 8001830:	609a      	str	r2, [r3, #8]
            if(blend)
 8001832:	2800      	cmp	r0, #0
 8001834:	d0bd      	beq.n	80017b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001836:	4a13      	ldr	r2, [pc, #76]	; (8001884 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001838:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 800183a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800183e:	8862      	ldrh	r2, [r4, #2]
 8001840:	69d9      	ldr	r1, [r3, #28]
 8001842:	1e54      	subs	r4, r2, #1
 8001844:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8001848:	f022 0210 	bic.w	r2, r2, #16
 800184c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001850:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001854:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8001858:	bf18      	it	ne
 800185a:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800185c:	61da      	str	r2, [r3, #28]
                break;
 800185e:	e7de      	b.n	800181e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001860:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001864:	61dc      	str	r4, [r3, #28]
 8001866:	e7b8      	b.n	80017da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001868:	f240 2201 	movw	r2, #513	; 0x201
 800186c:	e7e4      	b.n	8001838 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 800186e:	bf00      	nop
 8001870:	4002b000 	.word	0x4002b000
 8001874:	00010201 	.word	0x00010201
 8001878:	0801ec8e 	.word	0x0801ec8e
 800187c:	0801eca8 	.word	0x0801eca8
 8001880:	0801ebfe 	.word	0x0801ebfe
 8001884:	00020201 	.word	0x00020201

08001888 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001888:	b570      	push	{r4, r5, r6, lr}
 800188a:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800188c:	7f89      	ldrb	r1, [r1, #30]
 800188e:	f7ff ff35 	bl	80016fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001892:	8aa6      	ldrh	r6, [r4, #20]
 8001894:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001896:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001898:	4b15      	ldr	r3, [pc, #84]	; (80018f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800189a:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800189c:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800189e:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80018a2:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80018a4:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018a6:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80018a8:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80018aa:	6826      	ldr	r6, [r4, #0]
 80018ac:	68e1      	ldr	r1, [r4, #12]
 80018ae:	2e08      	cmp	r6, #8
 80018b0:	d10d      	bne.n	80018ce <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80018b2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80018b4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018b6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 80018b8:	7f20      	ldrb	r0, [r4, #28]
 80018ba:	4a0e      	ldr	r2, [pc, #56]	; (80018f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80018bc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80018c0:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80018c2:	4a0d      	ldr	r2, [pc, #52]	; (80018f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80018c4:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018c6:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018c8:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80018ca:	601a      	str	r2, [r3, #0]
    }
}
 80018cc:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80018ce:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018d0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80018d2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80018d4:	0948      	lsrs	r0, r1, #5
 80018d6:	0a0a      	lsrs	r2, r1, #8
 80018d8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80018dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80018e0:	4302      	orrs	r2, r0
 80018e2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80018e6:	430a      	orrs	r2, r1
 80018e8:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80018ea:	4a04      	ldr	r2, [pc, #16]	; (80018fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80018ec:	e7ed      	b.n	80018ca <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80018ee:	bf00      	nop
 80018f0:	4002b000 	.word	0x4002b000
 80018f4:	00010009 	.word	0x00010009
 80018f8:	00020201 	.word	0x00020201
 80018fc:	00030201 	.word	0x00030201

08001900 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001900:	2001      	movs	r0, #1
 8001902:	4770      	bx	lr

08001904 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001904:	200c      	movs	r0, #12
 8001906:	4770      	bx	lr

08001908 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001908:	230c      	movs	r3, #12
 800190a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800190e:	3008      	adds	r0, #8
 8001910:	4770      	bx	lr

08001912 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001912:	230c      	movs	r3, #12
 8001914:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001918:	3008      	adds	r0, #8
 800191a:	4770      	bx	lr

0800191c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800191c:	2001      	movs	r0, #1
 800191e:	4770      	bx	lr

08001920 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001920:	f44f 7092 	mov.w	r0, #292	; 0x124
 8001924:	4770      	bx	lr

08001926 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001926:	f44f 7392 	mov.w	r3, #292	; 0x124
 800192a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800192e:	3008      	adds	r0, #8
 8001930:	4770      	bx	lr

08001932 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001932:	f44f 7392 	mov.w	r3, #292	; 0x124
 8001936:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800193a:	3008      	adds	r0, #8
 800193c:	4770      	bx	lr

0800193e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800193e:	2001      	movs	r0, #1
 8001940:	4770      	bx	lr

08001942 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001942:	2010      	movs	r0, #16
 8001944:	4770      	bx	lr

08001946 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001946:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800194a:	3008      	adds	r0, #8
 800194c:	4770      	bx	lr

0800194e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800194e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001952:	3008      	adds	r0, #8
 8001954:	4770      	bx	lr

08001956 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001956:	4608      	mov	r0, r1
 8001958:	f001 b9d6 	b.w	8002d08 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

0800195c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800195c:	b510      	push	{r4, lr}
 800195e:	4b03      	ldr	r3, [pc, #12]	; (800196c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001960:	6003      	str	r3, [r0, #0]
 8001962:	4604      	mov	r4, r0
 8001964:	f008 fd0a 	bl	800a37c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001968:	4620      	mov	r0, r4
 800196a:	bd10      	pop	{r4, pc}
 800196c:	0801eda8 	.word	0x0801eda8

08001970 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001970:	b510      	push	{r4, lr}
 8001972:	4604      	mov	r4, r0
 8001974:	f7ff fff2 	bl	800195c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001978:	4620      	mov	r0, r4
 800197a:	2114      	movs	r1, #20
 800197c:	f01b f870 	bl	801ca60 <_ZdlPvj>
 8001980:	4620      	mov	r0, r4
 8001982:	bd10      	pop	{r4, pc}

08001984 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001984:	b510      	push	{r4, lr}
 8001986:	4b03      	ldr	r3, [pc, #12]	; (8001994 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001988:	6003      	str	r3, [r0, #0]
 800198a:	4604      	mov	r4, r0
 800198c:	f008 fcf6 	bl	800a37c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001990:	4620      	mov	r0, r4
 8001992:	bd10      	pop	{r4, pc}
 8001994:	0801ed74 	.word	0x0801ed74

08001998 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001998:	b510      	push	{r4, lr}
 800199a:	4604      	mov	r4, r0
 800199c:	f7ff fff2 	bl	8001984 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019a0:	4620      	mov	r0, r4
 80019a2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80019a6:	f01b f85b 	bl	801ca60 <_ZdlPvj>
 80019aa:	4620      	mov	r0, r4
 80019ac:	bd10      	pop	{r4, pc}
	...

080019b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80019b0:	b510      	push	{r4, lr}
 80019b2:	4b03      	ldr	r3, [pc, #12]	; (80019c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019b4:	6003      	str	r3, [r0, #0]
 80019b6:	4604      	mov	r4, r0
 80019b8:	f008 fce0 	bl	800a37c <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019bc:	4620      	mov	r0, r4
 80019be:	bd10      	pop	{r4, pc}
 80019c0:	0801ed40 	.word	0x0801ed40

080019c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4604      	mov	r4, r0
 80019c8:	f7ff fff2 	bl	80019b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019cc:	4620      	mov	r0, r4
 80019ce:	2118      	movs	r1, #24
 80019d0:	f01b f846 	bl	801ca60 <_ZdlPvj>
 80019d4:	4620      	mov	r0, r4
 80019d6:	bd10      	pop	{r4, pc}

080019d8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80019d8:	b510      	push	{r4, lr}
 80019da:	4b08      	ldr	r3, [pc, #32]	; (80019fc <_ZN12FrontendHeapD1Ev+0x24>)
 80019dc:	6003      	str	r3, [r0, #0]
 80019de:	4604      	mov	r4, r0
 80019e0:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 80019e4:	f7ff ffba 	bl	800195c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019e8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80019ec:	f7ff ffca 	bl	8001984 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019f0:	f104 0014 	add.w	r0, r4, #20
 80019f4:	f7ff ffdc 	bl	80019b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019f8:	4620      	mov	r0, r4
 80019fa:	bd10      	pop	{r4, pc}
 80019fc:	0801eddc 	.word	0x0801eddc

08001a00 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001a00:	b508      	push	{r3, lr}
 8001a02:	4802      	ldr	r0, [pc, #8]	; (8001a0c <__tcf_0+0xc>)
 8001a04:	f7ff ffe8 	bl	80019d8 <_ZN12FrontendHeapD1Ev>
 8001a08:	bd08      	pop	{r3, pc}
 8001a0a:	bf00      	nop
 8001a0c:	2000019c 	.word	0x2000019c

08001a10 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001a10:	b510      	push	{r4, lr}
 8001a12:	4604      	mov	r4, r0
 8001a14:	f7ff ffe0 	bl	80019d8 <_ZN12FrontendHeapD1Ev>
 8001a18:	4620      	mov	r0, r4
 8001a1a:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8001a1e:	f01b f81f 	bl	801ca60 <_ZdlPvj>
 8001a22:	4620      	mov	r0, r4
 8001a24:	bd10      	pop	{r4, pc}
	...

08001a28 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8001a28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001a2c:	f000 fff6 	bl	8002a1c <_ZN14BitmapDatabase11getInstanceEv>
 8001a30:	4605      	mov	r5, r0
 8001a32:	f000 fff7 	bl	8002a24 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001a36:	2400      	movs	r4, #0
 8001a38:	4601      	mov	r1, r0
 8001a3a:	4623      	mov	r3, r4
 8001a3c:	4628      	mov	r0, r5
 8001a3e:	4622      	mov	r2, r4
 8001a40:	9400      	str	r4, [sp, #0]
 8001a42:	f00e fec5 	bl	80107d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001a46:	4b25      	ldr	r3, [pc, #148]	; (8001adc <touchgfx_init+0xb4>)
 8001a48:	4a25      	ldr	r2, [pc, #148]	; (8001ae0 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8001a4a:	4d26      	ldr	r5, [pc, #152]	; (8001ae4 <touchgfx_init+0xbc>)
 8001a4c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001a4e:	4620      	mov	r0, r4
 8001a50:	f001 fc68 	bl	8003324 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001a54:	4824      	ldr	r0, [pc, #144]	; (8001ae8 <touchgfx_init+0xc0>)
 8001a56:	f00e fe07 	bl	8010668 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001a5a:	782b      	ldrb	r3, [r5, #0]
 8001a5c:	f3bf 8f5b 	dmb	ish
 8001a60:	07db      	lsls	r3, r3, #31
 8001a62:	d435      	bmi.n	8001ad0 <touchgfx_init+0xa8>
 8001a64:	4628      	mov	r0, r5
 8001a66:	f01a fffd 	bl	801ca64 <__cxa_guard_acquire>
 8001a6a:	b388      	cbz	r0, 8001ad0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001a6c:	4c1f      	ldr	r4, [pc, #124]	; (8001aec <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001a6e:	4b20      	ldr	r3, [pc, #128]	; (8001af0 <touchgfx_init+0xc8>)
 8001a70:	6023      	str	r3, [r4, #0]
 8001a72:	f504 76b8 	add.w	r6, r4, #368	; 0x170
 8001a76:	f104 0014 	add.w	r0, r4, #20
 8001a7a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001a7e:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8001a82:	6060      	str	r0, [r4, #4]
 8001a84:	f8c4 8008 	str.w	r8, [r4, #8]
 8001a88:	60e7      	str	r7, [r4, #12]
 8001a8a:	6126      	str	r6, [r4, #16]
 8001a8c:	f008 fc78 	bl	800a380 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a90:	4b18      	ldr	r3, [pc, #96]	; (8001af4 <touchgfx_init+0xcc>)
 8001a92:	6163      	str	r3, [r4, #20]
 8001a94:	4640      	mov	r0, r8
 8001a96:	f008 fc73 	bl	800a380 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a9a:	4b17      	ldr	r3, [pc, #92]	; (8001af8 <touchgfx_init+0xd0>)
 8001a9c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001a9e:	4638      	mov	r0, r7
 8001aa0:	f008 fc6e 	bl	800a380 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001aa4:	4b15      	ldr	r3, [pc, #84]	; (8001afc <touchgfx_init+0xd4>)
 8001aa6:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 8001aaa:	f504 70b6 	add.w	r0, r4, #364	; 0x16c
 8001aae:	f001 fcb5 	bl	800341c <_ZN5ModelC1Ev>
 8001ab2:	4622      	mov	r2, r4
 8001ab4:	f504 71b6 	add.w	r1, r4, #364	; 0x16c
 8001ab8:	4630      	mov	r0, r6
 8001aba:	f001 fca5 	bl	8003408 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001abe:	4630      	mov	r0, r6
 8001ac0:	f001 f922 	bl	8002d08 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001ac4:	480e      	ldr	r0, [pc, #56]	; (8001b00 <touchgfx_init+0xd8>)
 8001ac6:	f01b fd93 	bl	801d5f0 <atexit>
 8001aca:	4628      	mov	r0, r5
 8001acc:	f01a ffd6 	bl	801ca7c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001ad0:	480c      	ldr	r0, [pc, #48]	; (8001b04 <touchgfx_init+0xdc>)
}
 8001ad2:	b002      	add	sp, #8
 8001ad4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001ad8:	f7ff bb18 	b.w	800110c <_ZN11TouchGFXHAL10initializeEv>
 8001adc:	2000c028 	.word	0x2000c028
 8001ae0:	20001284 	.word	0x20001284
 8001ae4:	20000198 	.word	0x20000198
 8001ae8:	2000001c 	.word	0x2000001c
 8001aec:	2000019c 	.word	0x2000019c
 8001af0:	0801eddc 	.word	0x0801eddc
 8001af4:	0801ed40 	.word	0x0801ed40
 8001af8:	0801ed74 	.word	0x0801ed74
 8001afc:	0801eda8 	.word	0x0801eda8
 8001b00:	08001a01 	.word	0x08001a01
 8001b04:	20001208 	.word	0x20001208

08001b08 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001b08:	4801      	ldr	r0, [pc, #4]	; (8001b10 <touchgfx_taskEntry+0x8>)
 8001b0a:	f7ff bb19 	b.w	8001140 <_ZN11TouchGFXHAL9taskEntryEv>
 8001b0e:	bf00      	nop
 8001b10:	20001208 	.word	0x20001208

08001b14 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001b14:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001b16:	4e23      	ldr	r6, [pc, #140]	; (8001ba4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 8001b18:	4c23      	ldr	r4, [pc, #140]	; (8001ba8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 8001b1a:	4d24      	ldr	r5, [pc, #144]	; (8001bac <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001b1c:	4b24      	ldr	r3, [pc, #144]	; (8001bb0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001b1e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001b20:	4630      	mov	r0, r6
 8001b22:	f7ff fdb1 	bl	8001688 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001b26:	4628      	mov	r0, r5
 8001b28:	f011 fffe 	bl	8013b28 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001b2c:	4b21      	ldr	r3, [pc, #132]	; (8001bb4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b2e:	4822      	ldr	r0, [pc, #136]	; (8001bb8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001b30:	60dc      	str	r4, [r3, #12]
 8001b32:	2200      	movs	r2, #0
 8001b34:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b38:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001b3c:	491f      	ldr	r1, [pc, #124]	; (8001bbc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001b3e:	861a      	strh	r2, [r3, #48]	; 0x30
 8001b40:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001b44:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001b48:	6759      	str	r1, [r3, #116]	; 0x74
 8001b4a:	2101      	movs	r1, #1
 8001b4c:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001b50:	491b      	ldr	r1, [pc, #108]	; (8001bc0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001b52:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001b54:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b56:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001b5a:	8001      	strh	r1, [r0, #0]
 8001b5c:	4819      	ldr	r0, [pc, #100]	; (8001bc4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001b5e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b62:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b64:	4818      	ldr	r0, [pc, #96]	; (8001bc8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001b66:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b68:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001b6c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001b70:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001b74:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001b78:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001b7c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001b80:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001b84:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001b88:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001b8c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b90:	8001      	strh	r1, [r0, #0]
 8001b92:	480e      	ldr	r0, [pc, #56]	; (8001bcc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001b94:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b98:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001b9a:	490d      	ldr	r1, [pc, #52]	; (8001bd0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001b9c:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001b9e:	4a0d      	ldr	r2, [pc, #52]	; (8001bd4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001ba0:	601a      	str	r2, [r3, #0]
}
 8001ba2:	bd70      	pop	{r4, r5, r6, pc}
 8001ba4:	20000468 	.word	0x20000468
 8001ba8:	20000464 	.word	0x20000464
 8001bac:	20001288 	.word	0x20001288
 8001bb0:	0801e83c 	.word	0x0801e83c
 8001bb4:	20001208 	.word	0x20001208
 8001bb8:	2000bfc0 	.word	0x2000bfc0
 8001bbc:	01000001 	.word	0x01000001
 8001bc0:	2000bfcc 	.word	0x2000bfcc
 8001bc4:	2000bfc6 	.word	0x2000bfc6
 8001bc8:	2000bfc2 	.word	0x2000bfc2
 8001bcc:	2000bfc8 	.word	0x2000bfc8
 8001bd0:	2000bfc4 	.word	0x2000bfc4
 8001bd4:	0801e9c8 	.word	0x0801e9c8

08001bd8 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001bd8:	4801      	ldr	r0, [pc, #4]	; (8001be0 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001bda:	f7ff bd31 	b.w	8001640 <_ZN8STM32DMAD1Ev>
 8001bde:	bf00      	nop
 8001be0:	20000468 	.word	0x20000468

08001be4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001be4:	4b02      	ldr	r3, [pc, #8]	; (8001bf0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001be6:	2290      	movs	r2, #144	; 0x90
 8001be8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001bec:	4770      	bx	lr
 8001bee:	bf00      	nop
 8001bf0:	e000e100 	.word	0xe000e100

08001bf4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001bf4:	4b02      	ldr	r3, [pc, #8]	; (8001c00 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001bf6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001bfa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001bfc:	4770      	bx	lr
 8001bfe:	bf00      	nop
 8001c00:	e000e100 	.word	0xe000e100

08001c04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001c04:	4770      	bx	lr

08001c06 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001c06:	4770      	bx	lr

08001c08 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001c08:	b570      	push	{r4, r5, r6, lr}
 8001c0a:	4604      	mov	r4, r0
    HAL::initialize();
 8001c0c:	f008 fee5 	bl	800a9da <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001c10:	6823      	ldr	r3, [r4, #0]
 8001c12:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001c14:	f00c f962 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 8001c18:	4601      	mov	r1, r0
 8001c1a:	4620      	mov	r0, r4
 8001c1c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c1e:	6823      	ldr	r3, [r4, #0]
 8001c20:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001c24:	2300      	movs	r3, #0
 8001c26:	4620      	mov	r0, r4
 8001c28:	46ac      	mov	ip, r5
 8001c2a:	461a      	mov	r2, r3
}
 8001c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c30:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001c34:	4760      	bx	ip

08001c36 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001c36:	f008 be81 	b.w	800a93c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001c3a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001c3a:	f008 bfda 	b.w	800abf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08001c40 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c40:	4b04      	ldr	r3, [pc, #16]	; (8001c54 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001c42:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001c46:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001c4a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c4e:	f3bf 8f6f 	isb	sy
}
 8001c52:	4770      	bx	lr
 8001c54:	e000e100 	.word	0xe000e100

08001c58 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001c58:	4901      	ldr	r1, [pc, #4]	; (8001c60 <vApplicationIdleHook+0x8>)
 8001c5a:	2000      	movs	r0, #0
 8001c5c:	f007 beb2 	b.w	80099c4 <vTaskSetApplicationTaskTag>
 8001c60:	080014dd 	.word	0x080014dd

08001c64 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001c64:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001c66:	2064      	movs	r0, #100	; 0x64
 8001c68:	f006 fa63 	bl	8008132 <osDelay>
  for(;;)
 8001c6c:	e7fb      	b.n	8001c66 <StartDefaultTask+0x2>
	...

08001c70 <pwm_on>:
void pwm_on(uint16_t pwmD[], uint32_t idX){
 8001c70:	4602      	mov	r2, r0
	HAL_TIM_PWM_Start_DMA(&htim1, TIM_CHANNEL_1, (uint32_t *)pwmD, idX);
 8001c72:	b28b      	uxth	r3, r1
 8001c74:	4801      	ldr	r0, [pc, #4]	; (8001c7c <pwm_on+0xc>)
 8001c76:	2100      	movs	r1, #0
 8001c78:	f006 b856 	b.w	8007d28 <HAL_TIM_PWM_Start_DMA>
 8001c7c:	20001548 	.word	0x20001548

08001c80 <pwm_off>:
	HAL_TIM_PWM_Stop_DMA(&htim1, TIM_CHANNEL_1);
 8001c80:	4801      	ldr	r0, [pc, #4]	; (8001c88 <pwm_off+0x8>)
 8001c82:	2100      	movs	r1, #0
 8001c84:	f006 b8ba 	b.w	8007dfc <HAL_TIM_PWM_Stop_DMA>
 8001c88:	20001548 	.word	0x20001548

08001c8c <SystemClock_Config>:
{
 8001c8c:	b530      	push	{r4, r5, lr}
 8001c8e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c90:	2210      	movs	r2, #16
 8001c92:	2100      	movs	r1, #0
 8001c94:	a809      	add	r0, sp, #36	; 0x24
 8001c96:	f01b fd19 	bl	801d6cc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001c9a:	2214      	movs	r2, #20
 8001c9c:	2100      	movs	r1, #0
 8001c9e:	a802      	add	r0, sp, #8
 8001ca0:	f01b fd14 	bl	801d6cc <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ca4:	2400      	movs	r4, #0
 8001ca6:	4b1f      	ldr	r3, [pc, #124]	; (8001d24 <SystemClock_Config+0x98>)
 8001ca8:	9400      	str	r4, [sp, #0]
 8001caa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001cac:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001cb0:	641a      	str	r2, [r3, #64]	; 0x40
 8001cb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cb4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001cb8:	9300      	str	r3, [sp, #0]
 8001cba:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001cbc:	4b1a      	ldr	r3, [pc, #104]	; (8001d28 <SystemClock_Config+0x9c>)
 8001cbe:	9401      	str	r4, [sp, #4]
 8001cc0:	681a      	ldr	r2, [r3, #0]
 8001cc2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001cc6:	601a      	str	r2, [r3, #0]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001cce:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001cd0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001cd2:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001cd4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001cd8:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001cdc:	2502      	movs	r5, #2
 8001cde:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001ce2:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ce4:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001ce8:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001cec:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001cf0:	2004      	movs	r0, #4
 8001cf2:	2306      	movs	r3, #6
 8001cf4:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cf8:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001cfa:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cfc:	f005 f920 	bl	8006f40 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001d00:	f004 fb74 	bl	80063ec <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001d04:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001d06:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001d0a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001d10:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d14:	2105      	movs	r1, #5
 8001d16:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d18:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d1c:	f004 fee4 	bl	8006ae8 <HAL_RCC_ClockConfig>
}
 8001d20:	b015      	add	sp, #84	; 0x54
 8001d22:	bd30      	pop	{r4, r5, pc}
 8001d24:	40023800 	.word	0x40023800
 8001d28:	40007000 	.word	0x40007000

08001d2c <main>:
{
 8001d2c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001d30:	b0bb      	sub	sp, #236	; 0xec
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d32:	2400      	movs	r4, #0
 8001d34:	4dc9      	ldr	r5, [pc, #804]	; (800205c <main+0x330>)
  HAL_Init();
 8001d36:	f002 fc35 	bl	80045a4 <HAL_Init>
  SystemClock_Config();
 8001d3a:	f7ff ffa7 	bl	8001c8c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d3e:	2214      	movs	r2, #20
 8001d40:	2100      	movs	r1, #0
 8001d42:	a82d      	add	r0, sp, #180	; 0xb4
 8001d44:	f01b fcc2 	bl	801d6cc <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d48:	9403      	str	r4, [sp, #12]
 8001d4a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001d4c:	48c4      	ldr	r0, [pc, #784]	; (8002060 <main+0x334>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d4e:	f043 0310 	orr.w	r3, r3, #16
 8001d52:	632b      	str	r3, [r5, #48]	; 0x30
 8001d54:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d56:	f003 0310 	and.w	r3, r3, #16
 8001d5a:	9303      	str	r3, [sp, #12]
 8001d5c:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d5e:	9404      	str	r4, [sp, #16]
 8001d60:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d62:	f043 0302 	orr.w	r3, r3, #2
 8001d66:	632b      	str	r3, [r5, #48]	; 0x30
 8001d68:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d6a:	f003 0302 	and.w	r3, r3, #2
 8001d6e:	9304      	str	r3, [sp, #16]
 8001d70:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d72:	9405      	str	r4, [sp, #20]
 8001d74:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001d7a:	632b      	str	r3, [r5, #48]	; 0x30
 8001d7c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d82:	9305      	str	r3, [sp, #20]
 8001d84:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d86:	9406      	str	r4, [sp, #24]
 8001d88:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d8a:	f043 0308 	orr.w	r3, r3, #8
 8001d8e:	632b      	str	r3, [r5, #48]	; 0x30
 8001d90:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d92:	f003 0308 	and.w	r3, r3, #8
 8001d96:	9306      	str	r3, [sp, #24]
 8001d98:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001d9a:	9407      	str	r4, [sp, #28]
 8001d9c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001da2:	632b      	str	r3, [r5, #48]	; 0x30
 8001da4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001da6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001daa:	9307      	str	r3, [sp, #28]
 8001dac:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001dae:	9408      	str	r4, [sp, #32]
 8001db0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001db2:	f043 0320 	orr.w	r3, r3, #32
 8001db6:	632b      	str	r3, [r5, #48]	; 0x30
 8001db8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dba:	f003 0320 	and.w	r3, r3, #32
 8001dbe:	9308      	str	r3, [sp, #32]
 8001dc0:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001dc2:	9409      	str	r4, [sp, #36]	; 0x24
 8001dc4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dc6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001dca:	632b      	str	r3, [r5, #48]	; 0x30
 8001dcc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001dd2:	9309      	str	r3, [sp, #36]	; 0x24
 8001dd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001dd6:	940a      	str	r4, [sp, #40]	; 0x28
 8001dd8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dda:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001dde:	632b      	str	r3, [r5, #48]	; 0x30
 8001de0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001de2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001de6:	930a      	str	r3, [sp, #40]	; 0x28
 8001de8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dea:	940b      	str	r4, [sp, #44]	; 0x2c
 8001dec:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dee:	f043 0301 	orr.w	r3, r3, #1
 8001df2:	632b      	str	r3, [r5, #48]	; 0x30
 8001df4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001df6:	f003 0301 	and.w	r3, r3, #1
 8001dfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8001dfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dfe:	940c      	str	r4, [sp, #48]	; 0x30
 8001e00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e02:	f043 0304 	orr.w	r3, r3, #4
 8001e06:	632b      	str	r3, [r5, #48]	; 0x30
 8001e08:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e0a:	f003 0304 	and.w	r3, r3, #4
 8001e0e:	930c      	str	r3, [sp, #48]	; 0x30
 8001e10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001e12:	940d      	str	r4, [sp, #52]	; 0x34
 8001e14:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e16:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001e1a:	632b      	str	r3, [r5, #48]	; 0x30
 8001e1c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e1e:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001e22:	4622      	mov	r2, r4
 8001e24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001e28:	930d      	str	r3, [sp, #52]	; 0x34
 8001e2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001e2c:	f003 fcda 	bl	80057e4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001e30:	488c      	ldr	r0, [pc, #560]	; (8002064 <main+0x338>)
 8001e32:	2201      	movs	r2, #1
 8001e34:	2108      	movs	r1, #8
 8001e36:	f003 fcd5 	bl	80057e4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001e3a:	488b      	ldr	r0, [pc, #556]	; (8002068 <main+0x33c>)
 8001e3c:	4622      	mov	r2, r4
 8001e3e:	2146      	movs	r1, #70	; 0x46
 8001e40:	f003 fcd0 	bl	80057e4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001e44:	4622      	mov	r2, r4
 8001e46:	4889      	ldr	r0, [pc, #548]	; (800206c <main+0x340>)
 8001e48:	2180      	movs	r1, #128	; 0x80
 8001e4a:	f003 fccb 	bl	80057e4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e4e:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e52:	2603      	movs	r6, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e54:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001e58:	4881      	ldr	r0, [pc, #516]	; (8002060 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e5a:	9630      	str	r6, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001e5c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001e5e:	2711      	movs	r7, #17
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e60:	e9cd 382d 	strd	r3, r8, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e64:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001e66:	f003 fb2f 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001e6a:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001e6c:	487d      	ldr	r0, [pc, #500]	; (8002064 <main+0x338>)
 8001e6e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001e70:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e74:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001e78:	f003 fb26 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001e7c:	2346      	movs	r3, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e7e:	487a      	ldr	r0, [pc, #488]	; (8002068 <main+0x33c>)
 8001e80:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001e82:	f04f 0980 	mov.w	r9, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e86:	e9cd 382d 	strd	r3, r8, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e8a:	e9cd 462f 	strd	r4, r6, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e8e:	f003 fb1b 	bl	80054c8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e92:	a92d      	add	r1, sp, #180	; 0xb4
 8001e94:	4875      	ldr	r0, [pc, #468]	; (800206c <main+0x340>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001e96:	e9cd 972d 	strd	r9, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e9a:	e9cd 462f 	strd	r4, r6, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e9e:	f003 fb13 	bl	80054c8 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001ea2:	4873      	ldr	r0, [pc, #460]	; (8002070 <main+0x344>)
  hdma2d.Instance = DMA2D;
 8001ea4:	4f73      	ldr	r7, [pc, #460]	; (8002074 <main+0x348>)
  hcrc.Instance = CRC;
 8001ea6:	4b74      	ldr	r3, [pc, #464]	; (8002078 <main+0x34c>)
 8001ea8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001eaa:	f002 fc21 	bl	80046f0 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001eae:	4b73      	ldr	r3, [pc, #460]	; (800207c <main+0x350>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001eb0:	e9c7 440a 	strd	r4, r4, [r7, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001eb4:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001eb8:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8001eba:	e9c7 3400 	strd	r3, r4, [r7]
  hdma2d.Init.OutputOffset = 0;
 8001ebe:	e9c7 4402 	strd	r4, r4, [r7, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001ec2:	f002 fe33 	bl	8004b2c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001ec6:	4641      	mov	r1, r8
 8001ec8:	4638      	mov	r0, r7
 8001eca:	f002 fee7 	bl	8004c9c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001ece:	4649      	mov	r1, r9
 8001ed0:	4622      	mov	r2, r4
 8001ed2:	4866      	ldr	r0, [pc, #408]	; (800206c <main+0x340>)
  hdsi.Instance = DSI;
 8001ed4:	4f6a      	ldr	r7, [pc, #424]	; (8002080 <main+0x354>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001ed6:	f003 fc85 	bl	80057e4 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001eda:	2014      	movs	r0, #20
 8001edc:	f002 fb8e 	bl	80045fc <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001ee0:	4649      	mov	r1, r9
 8001ee2:	4642      	mov	r2, r8
 8001ee4:	4861      	ldr	r0, [pc, #388]	; (800206c <main+0x340>)
 8001ee6:	f003 fc7d 	bl	80057e4 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001eea:	200a      	movs	r0, #10
 8001eec:	f002 fb86 	bl	80045fc <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001ef0:	2224      	movs	r2, #36	; 0x24
 8001ef2:	4621      	mov	r1, r4
 8001ef4:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 8001ef6:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001ef8:	f01b fbe8 	bl	801d6cc <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001efc:	2218      	movs	r2, #24
 8001efe:	4621      	mov	r1, r4
 8001f00:	a811      	add	r0, sp, #68	; 0x44
 8001f02:	f01b fbe3 	bl	801d6cc <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001f06:	2234      	movs	r2, #52	; 0x34
 8001f08:	4621      	mov	r1, r4
 8001f0a:	a82d      	add	r0, sp, #180	; 0xb4
 8001f0c:	f01b fbde 	bl	801d6cc <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001f10:	222c      	movs	r2, #44	; 0x2c
 8001f12:	4621      	mov	r1, r4
 8001f14:	eb0d 0009 	add.w	r0, sp, r9
 8001f18:	f01b fbd8 	bl	801d6cc <memset>
  hdsi.Instance = DSI;
 8001f1c:	4b59      	ldr	r3, [pc, #356]	; (8002084 <main+0x358>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001f1e:	f04f 0902 	mov.w	r9, #2
  hdsi.Init.TXEscapeCkdiv = 4;
 8001f22:	f04f 0b04 	mov.w	fp, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001f26:	e9c7 3400 	strd	r3, r4, [r7]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001f2a:	a90e      	add	r1, sp, #56	; 0x38
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001f2c:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001f2e:	4638      	mov	r0, r7
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001f30:	e9cd 390e 	strd	r3, r9, [sp, #56]	; 0x38
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001f34:	e9c7 b802 	strd	fp, r8, [r7, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001f38:	f002 ff78 	bl	8004e2c <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001f3c:	a917      	add	r1, sp, #92	; 0x5c
 8001f3e:	4638      	mov	r0, r7
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001f40:	e9cd 8417 	strd	r8, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001f44:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8001f48:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8001f4c:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001f50:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001f52:	f003 f997 	bl	8005284 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001f56:	221c      	movs	r2, #28
 8001f58:	2321      	movs	r3, #33	; 0x21
 8001f5a:	e9cd 2311 	strd	r2, r3, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001f5e:	210f      	movs	r1, #15
 8001f60:	2319      	movs	r3, #25
 8001f62:	e9cd 1313 	strd	r1, r3, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001f66:	4638      	mov	r0, r7
 8001f68:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 8001f6a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001f6e:	f003 f94c 	bl	800520a <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001f72:	4659      	mov	r1, fp
 8001f74:	4638      	mov	r0, r7
 8001f76:	f003 f937 	bl	80051e8 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001f7a:	f242 7110 	movw	r1, #10000	; 0x2710
 8001f7e:	4638      	mov	r0, r7
 8001f80:	f003 fa8b 	bl	800549a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001f84:	4621      	mov	r1, r4
 8001f86:	4638      	mov	r0, r7
 8001f88:	f002 feed 	bl	8004d66 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001f8c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001f90:	f44f 7300 	mov.w	r3, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001f94:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001f98:	e9cd 032d 	strd	r0, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001f9c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001fa0:	f44f 5e80 	mov.w	lr, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001fa4:	e9cd c32f 	strd	ip, r3, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001fa8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fac:	e9cd e331 	strd	lr, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001fb0:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 8001fb4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001fb8:	f44f 3200 	mov.w	r2, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001fbc:	e9cd a333 	strd	sl, r3, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001fc0:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001fc4:	e9cd 2335 	strd	r2, r3, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001fc8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8001fcc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001fd0:	e9cd 1337 	strd	r1, r3, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001fd4:	4638      	mov	r0, r7
 8001fd6:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001fd8:	f04f 0a10 	mov.w	sl, #16
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001fdc:	f8cd 90e4 	str.w	r9, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001fe0:	f003 f8ce 	bl	8005180 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001fe4:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001fe6:	a920      	add	r1, sp, #128	; 0x80
 8001fe8:	4638      	mov	r0, r7
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001fea:	e9cd 3a22 	strd	r3, sl, [sp, #136]	; 0x88
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001fee:	e9cd 4b24 	strd	r4, fp, [sp, #144]	; 0x90
  CmdCfg.ColorCoding = DSI_RGB565;
 8001ff2:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001ff6:	e9cd 9426 	strd	r9, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001ffa:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001ffe:	f8cd 80a8 	str.w	r8, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8002002:	f003 f84b 	bl	800509c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8002006:	4621      	mov	r1, r4
 8002008:	4638      	mov	r0, r7
 800200a:	f003 f836 	bl	800507a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800200e:	481e      	ldr	r0, [pc, #120]	; (8002088 <main+0x35c>)
 8002010:	4a1e      	ldr	r2, [pc, #120]	; (800208c <main+0x360>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8002012:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8002014:	e9c0 2400 	strd	r2, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002018:	2320      	movs	r3, #32
 800201a:	2240      	movs	r2, #64	; 0x40
 800201c:	e9c0 3204 	strd	r3, r2, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002020:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8002024:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
 8002028:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800202c:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800202e:	e9c0 2406 	strd	r2, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002032:	2207      	movs	r2, #7
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8002034:	e9c0 c309 	strd	ip, r3, [r0, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8002038:	e9cd 2b2e 	strd	r2, fp, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 800203c:	e9cd 2630 	strd	r2, r6, [sp, #192]	; 0xc0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002040:	e9c0 4b02 	strd	r4, fp, [r0, #8]
  SdramTiming.RCDDelay = 2;
 8002044:	e9cd 9932 	strd	r9, r9, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8002048:	f8cd 90b4 	str.w	r9, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800204c:	f005 f932 	bl	80072b4 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8002050:	f002 f9d6 	bl	8004400 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8002054:	f002 f986 	bl	8004364 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002058:	4621      	mov	r1, r4
 800205a:	e019      	b.n	8002090 <main+0x364>
 800205c:	40023800 	.word	0x40023800
 8002060:	40021800 	.word	0x40021800
 8002064:	40022800 	.word	0x40022800
 8002068:	40020000 	.word	0x40020000
 800206c:	40021c00 	.word	0x40021c00
 8002070:	20001308 	.word	0x20001308
 8002074:	20001310 	.word	0x20001310
 8002078:	40023000 	.word	0x40023000
 800207c:	4002b000 	.word	0x4002b000
 8002080:	200013b0 	.word	0x200013b0
 8002084:	40016c00 	.word	0x40016c00
 8002088:	20001514 	.word	0x20001514
 800208c:	a0000140 	.word	0xa0000140
 8002090:	2234      	movs	r2, #52	; 0x34
 8002092:	a820      	add	r0, sp, #128	; 0x80
 8002094:	f01b fb1a 	bl	801d6cc <memset>
  hltdc.Instance = LTDC;
 8002098:	4e82      	ldr	r6, [pc, #520]	; (80022a4 <main+0x578>)
 800209a:	4a83      	ldr	r2, [pc, #524]	; (80022a8 <main+0x57c>)
  hltdc.Init.Backcolor.Blue = 0;
 800209c:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.AccumulatedActiveH = 482;
 800209e:	f04f 0eca 	mov.w	lr, #202	; 0xca
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80020a2:	e9c6 2400 	strd	r2, r4, [r6]
  hltdc.Init.AccumulatedActiveH = 482;
 80020a6:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80020aa:	e9c6 e209 	strd	lr, r2, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80020ae:	f04f 0bcb 	mov.w	fp, #203	; 0xcb
 80020b2:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020b6:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 483;
 80020b8:	e9c6 b20b 	strd	fp, r2, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80020bc:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.HorizontalSync = 1;
 80020c0:	e9c6 4804 	strd	r4, r8, [r6, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80020c4:	e9c6 8906 	strd	r8, r9, [r6, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80020c8:	f8c6 9020 	str.w	r9, [r6, #32]
  hltdc.Init.Backcolor.Red = 0;
 80020cc:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020d0:	f004 f856 	bl	8006180 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80020d4:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 80020d6:	e9cd 1425 	strd	r1, r4, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020da:	f04f 0b05 	mov.w	fp, #5
 80020de:	f44f 6180 	mov.w	r1, #1024	; 0x400
  pLayerCfg.WindowX1 = 200;
 80020e2:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 80020e4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020e8:	e9cd 1b27 	strd	r1, fp, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xC0000000;
 80020ec:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
  pLayerCfg.ImageWidth = 200;
 80020f0:	e9cd 1329 	strd	r1, r3, [sp, #164]	; 0xa4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80020f4:	e9cd 2923 	strd	r2, r9, [sp, #140]	; 0x8c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020f8:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.ImageHeight = 480;
 80020fa:	922b      	str	r2, [sp, #172]	; 0xac
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020fc:	4630      	mov	r0, r6
 80020fe:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8002100:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  pLayerCfg.WindowX0 = 0;
 8002104:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.Backcolor.Blue = 0;
 8002106:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 800210a:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800210e:	f004 f903 	bl	8006318 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8002112:	6832      	ldr	r2, [r6, #0]
 8002114:	6993      	ldr	r3, [r2, #24]
 8002116:	f023 0301 	bic.w	r3, r3, #1
 800211a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800211c:	4638      	mov	r0, r7
 800211e:	f003 f917 	bl	8005350 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8002122:	4641      	mov	r1, r8
 8002124:	4648      	mov	r0, r9
 8002126:	f001 fae1 	bl	80036ec <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800212a:	2328      	movs	r3, #40	; 0x28
 800212c:	2215      	movs	r2, #21
 800212e:	4621      	mov	r1, r4
 8002130:	9400      	str	r4, [sp, #0]
 8002132:	4638      	mov	r0, r7
 8002134:	f003 f93f 	bl	80053b6 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002138:	a92d      	add	r1, sp, #180	; 0xb4
 800213a:	4638      	mov	r0, r7
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800213c:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8002140:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8002144:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8002148:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800214c:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8002150:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002152:	f003 f815 	bl	8005180 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8002156:	f44f 7148 	mov.w	r1, #800	; 0x320
 800215a:	4622      	mov	r2, r4
 800215c:	4630      	mov	r0, r6
 800215e:	f004 f909 	bl	8006374 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8002162:	6832      	ldr	r2, [r6, #0]
  hqspi.Instance = QUADSPI;
 8002164:	4851      	ldr	r0, [pc, #324]	; (80022ac <main+0x580>)
  __HAL_LTDC_ENABLE(&hltdc);
 8002166:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8002168:	4e51      	ldr	r6, [pc, #324]	; (80022b0 <main+0x584>)
  __HAL_LTDC_ENABLE(&hltdc);
 800216a:	ea43 0308 	orr.w	r3, r3, r8
 800216e:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8002170:	4b50      	ldr	r3, [pc, #320]	; (80022b4 <main+0x588>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8002172:	6204      	str	r4, [r0, #32]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8002174:	221b      	movs	r2, #27
  hqspi.Init.ClockPrescaler = 1;
 8002176:	e9c0 3800 	strd	r3, r8, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800217a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800217e:	e9c0 2304 	strd	r2, r3, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8002182:	e9c0 8a02 	strd	r8, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8002186:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800218a:	f004 fa3d 	bl	8006608 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800218e:	f001 ffaf 	bl	80040f0 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8002192:	f001 fee3 	bl	8003f5c <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8002196:	f001 fe59 	bl	8003e4c <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800219a:	4947      	ldr	r1, [pc, #284]	; (80022b8 <main+0x58c>)
 800219c:	4b47      	ldr	r3, [pc, #284]	; (80022bc <main+0x590>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800219e:	6234      	str	r4, [r6, #32]
  hi2c1.Init.ClockSpeed = 400000;
 80021a0:	e9c6 1300 	strd	r1, r3, [r6]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80021a4:	4630      	mov	r0, r6
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80021a6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80021aa:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c1.Init.OwnAddress1 = 0;
 80021ae:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80021b2:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80021b6:	f003 fcff 	bl	8005bb8 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 80021ba:	4630      	mov	r0, r6
 80021bc:	f003 fda4 	bl	8005d08 <HAL_I2C_DeInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80021c0:	4652      	mov	r2, sl
 80021c2:	4621      	mov	r1, r4
 80021c4:	a817      	add	r0, sp, #92	; 0x5c
 80021c6:	f01b fa81 	bl	801d6cc <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80021ca:	221c      	movs	r2, #28
 80021cc:	4621      	mov	r1, r4
 80021ce:	a820      	add	r0, sp, #128	; 0x80
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80021d0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_OC_InitTypeDef sConfigOC = {0};
 80021d4:	f01b fa7a 	bl	801d6cc <memset>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80021d8:	2220      	movs	r2, #32
 80021da:	4621      	mov	r1, r4
 80021dc:	a82d      	add	r0, sp, #180	; 0xb4
 80021de:	f01b fa75 	bl	801d6cc <memset>
  htim1.Instance = TIM1;
 80021e2:	4e37      	ldr	r6, [pc, #220]	; (80022c0 <main+0x594>)
 80021e4:	4b37      	ldr	r3, [pc, #220]	; (80022c4 <main+0x598>)
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021e6:	60b4      	str	r4, [r6, #8]
  htim1.Init.Prescaler = 0;
 80021e8:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80021ec:	4630      	mov	r0, r6
  htim1.Init.Period = 225-1;
 80021ee:	23e0      	movs	r3, #224	; 0xe0
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80021f0:	e9c6 3403 	strd	r3, r4, [r6, #12]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80021f4:	e9c6 4405 	strd	r4, r4, [r6, #20]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80021f8:	f005 fb14 	bl	8007824 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002200:	a917      	add	r1, sp, #92	; 0x5c
 8002202:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002204:	9317      	str	r3, [sp, #92]	; 0x5c
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002206:	f005 fc01 	bl	8007a0c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800220a:	4630      	mov	r0, r6
 800220c:	f005 fb36 	bl	800787c <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002210:	a911      	add	r1, sp, #68	; 0x44
 8002212:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002214:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002218:	f005 fdf2 	bl	8007e00 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800221c:	4622      	mov	r2, r4
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800221e:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002220:	a920      	add	r1, sp, #128	; 0x80
 8002222:	4630      	mov	r0, r6
  sConfigOC.Pulse = 0;
 8002224:	e9cd 3420 	strd	r3, r4, [sp, #128]	; 0x80
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8002228:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800222c:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8002230:	9426      	str	r4, [sp, #152]	; 0x98
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002232:	f005 fb85 	bl	8007940 <HAL_TIM_PWM_ConfigChannel>
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002236:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800223a:	a92d      	add	r1, sp, #180	; 0xb4
 800223c:	4630      	mov	r0, r6
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800223e:	9332      	str	r3, [sp, #200]	; 0xc8
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8002240:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  sBreakDeadTimeConfig.DeadTime = 0;
 8002244:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8002248:	9431      	str	r4, [sp, #196]	; 0xc4
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800224a:	9434      	str	r4, [sp, #208]	; 0xd0
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800224c:	f005 fe16 	bl	8007e7c <HAL_TIMEx_ConfigBreakDeadTime>
  HAL_TIM_MspPostInit(&htim1);
 8002250:	4630      	mov	r0, r6
 8002252:	f000 fa2d 	bl	80026b0 <HAL_TIM_MspPostInit>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002256:	942d      	str	r4, [sp, #180]	; 0xb4
 8002258:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800225a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800225e:	632b      	str	r3, [r5, #48]	; 0x30
 8002260:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002262:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8002266:	4622      	mov	r2, r4
 8002268:	4659      	mov	r1, fp
  __HAL_RCC_DMA2_CLK_ENABLE();
 800226a:	932d      	str	r3, [sp, #180]	; 0xb4
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 800226c:	2039      	movs	r0, #57	; 0x39
  __HAL_RCC_DMA2_CLK_ENABLE();
 800226e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8002270:	f002 f9ea 	bl	8004648 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 8002274:	2039      	movs	r0, #57	; 0x39
 8002276:	f002 fa19 	bl	80046ac <HAL_NVIC_EnableIRQ>
  MX_TouchGFX_Init();
 800227a:	f7fe fdda 	bl	8000e32 <MX_TouchGFX_Init>
  osKernelInitialize();
 800227e:	f005 fee3 	bl	8008048 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002282:	4a11      	ldr	r2, [pc, #68]	; (80022c8 <main+0x59c>)
 8002284:	4811      	ldr	r0, [pc, #68]	; (80022cc <main+0x5a0>)
 8002286:	4621      	mov	r1, r4
 8002288:	f005 ff0a 	bl	80080a0 <osThreadNew>
 800228c:	4b10      	ldr	r3, [pc, #64]	; (80022d0 <main+0x5a4>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800228e:	4a11      	ldr	r2, [pc, #68]	; (80022d4 <main+0x5a8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002290:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002292:	4621      	mov	r1, r4
 8002294:	4810      	ldr	r0, [pc, #64]	; (80022d8 <main+0x5ac>)
 8002296:	f005 ff03 	bl	80080a0 <osThreadNew>
 800229a:	4b10      	ldr	r3, [pc, #64]	; (80022dc <main+0x5b0>)
 800229c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800229e:	f005 fee5 	bl	800806c <osKernelStart>
    while (1)
 80022a2:	e7fe      	b.n	80022a2 <main+0x576>
 80022a4:	20001420 	.word	0x20001420
 80022a8:	40016800 	.word	0x40016800
 80022ac:	200014c8 	.word	0x200014c8
 80022b0:	200013cc 	.word	0x200013cc
 80022b4:	a0001000 	.word	0xa0001000
 80022b8:	40005400 	.word	0x40005400
 80022bc:	00061a80 	.word	0x00061a80
 80022c0:	20001548 	.word	0x20001548
 80022c4:	40010000 	.word	0x40010000
 80022c8:	0801ee28 	.word	0x0801ee28
 80022cc:	08001c65 	.word	0x08001c65
 80022d0:	20001304 	.word	0x20001304
 80022d4:	0801ee04 	.word	0x0801ee04
 80022d8:	08000e37 	.word	0x08000e37
 80022dc:	20001300 	.word	0x20001300

080022e0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80022e0:	6802      	ldr	r2, [r0, #0]
 80022e2:	4b03      	ldr	r3, [pc, #12]	; (80022f0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80022e4:	429a      	cmp	r2, r3
 80022e6:	d101      	bne.n	80022ec <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80022e8:	f002 b976 	b.w	80045d8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop
 80022f0:	40001000 	.word	0x40001000

080022f4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80022f4:	4770      	bx	lr
	...

080022f8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80022f8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80022fa:	4b0e      	ldr	r3, [pc, #56]	; (8002334 <HAL_MspInit+0x3c>)
 80022fc:	2200      	movs	r2, #0
 80022fe:	9200      	str	r2, [sp, #0]
 8002300:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002302:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002306:	6459      	str	r1, [r3, #68]	; 0x44
 8002308:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800230a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800230e:	9100      	str	r1, [sp, #0]
 8002310:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002312:	9201      	str	r2, [sp, #4]
 8002314:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002316:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800231a:	6419      	str	r1, [r3, #64]	; 0x40
 800231c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800231e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002322:	9301      	str	r3, [sp, #4]
 8002324:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002326:	210f      	movs	r1, #15
 8002328:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800232c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800232e:	f002 b98b 	b.w	8004648 <HAL_NVIC_SetPriority>
 8002332:	bf00      	nop
 8002334:	40023800 	.word	0x40023800

08002338 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002338:	6802      	ldr	r2, [r0, #0]
 800233a:	4b09      	ldr	r3, [pc, #36]	; (8002360 <HAL_CRC_MspInit+0x28>)
 800233c:	429a      	cmp	r2, r3
{
 800233e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002340:	d10b      	bne.n	800235a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002342:	2300      	movs	r3, #0
 8002344:	9301      	str	r3, [sp, #4]
 8002346:	4b07      	ldr	r3, [pc, #28]	; (8002364 <HAL_CRC_MspInit+0x2c>)
 8002348:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800234a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800234e:	631a      	str	r2, [r3, #48]	; 0x30
 8002350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002352:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002356:	9301      	str	r3, [sp, #4]
 8002358:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800235a:	b002      	add	sp, #8
 800235c:	4770      	bx	lr
 800235e:	bf00      	nop
 8002360:	40023000 	.word	0x40023000
 8002364:	40023800 	.word	0x40023800

08002368 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002368:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800236a:	4b0f      	ldr	r3, [pc, #60]	; (80023a8 <HAL_DMA2D_MspInit+0x40>)
 800236c:	6802      	ldr	r2, [r0, #0]
 800236e:	429a      	cmp	r2, r3
 8002370:	d116      	bne.n	80023a0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002372:	2200      	movs	r2, #0
 8002374:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002378:	9201      	str	r2, [sp, #4]
 800237a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800237c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002380:	6319      	str	r1, [r3, #48]	; 0x30
 8002382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002384:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002388:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800238a:	2105      	movs	r1, #5
 800238c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800238e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002390:	f002 f95a 	bl	8004648 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002394:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002396:	b003      	add	sp, #12
 8002398:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800239c:	f002 b986 	b.w	80046ac <HAL_NVIC_EnableIRQ>
}
 80023a0:	b003      	add	sp, #12
 80023a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80023a6:	bf00      	nop
 80023a8:	4002b000 	.word	0x4002b000

080023ac <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 80023ac:	b510      	push	{r4, lr}
 80023ae:	4604      	mov	r4, r0
 80023b0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023b2:	2214      	movs	r2, #20
 80023b4:	2100      	movs	r1, #0
 80023b6:	a803      	add	r0, sp, #12
 80023b8:	f01b f988 	bl	801d6cc <memset>
  if(hdsi->Instance==DSI)
 80023bc:	6822      	ldr	r2, [r4, #0]
 80023be:	4b17      	ldr	r3, [pc, #92]	; (800241c <HAL_DSI_MspInit+0x70>)
 80023c0:	429a      	cmp	r2, r3
 80023c2:	d128      	bne.n	8002416 <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 80023c4:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 80023c8:	2400      	movs	r4, #0
 80023ca:	9401      	str	r4, [sp, #4]
 80023cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80023ce:	4814      	ldr	r0, [pc, #80]	; (8002420 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 80023d0:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 80023d4:	645a      	str	r2, [r3, #68]	; 0x44
 80023d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80023d8:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 80023dc:	9201      	str	r2, [sp, #4]
 80023de:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80023e0:	9402      	str	r4, [sp, #8]
 80023e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80023e8:	631a      	str	r2, [r3, #48]	; 0x30
 80023ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ec:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80023f0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f2:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80023f4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f6:	2302      	movs	r3, #2
 80023f8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80023fc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 80023fe:	230d      	movs	r3, #13
 8002400:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002402:	f003 f861 	bl	80054c8 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8002406:	205c      	movs	r0, #92	; 0x5c
 8002408:	4622      	mov	r2, r4
 800240a:	2105      	movs	r1, #5
 800240c:	f002 f91c 	bl	8004648 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8002410:	205c      	movs	r0, #92	; 0x5c
 8002412:	f002 f94b 	bl	80046ac <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8002416:	b008      	add	sp, #32
 8002418:	bd10      	pop	{r4, pc}
 800241a:	bf00      	nop
 800241c:	40016c00 	.word	0x40016c00
 8002420:	40022400 	.word	0x40022400

08002424 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002424:	b530      	push	{r4, r5, lr}
 8002426:	4604      	mov	r4, r0
 8002428:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800242a:	2214      	movs	r2, #20
 800242c:	2100      	movs	r1, #0
 800242e:	a803      	add	r0, sp, #12
 8002430:	f01b f94c 	bl	801d6cc <memset>
  if(hi2c->Instance==I2C1)
 8002434:	6822      	ldr	r2, [r4, #0]
 8002436:	4b1a      	ldr	r3, [pc, #104]	; (80024a0 <HAL_I2C_MspInit+0x7c>)
 8002438:	429a      	cmp	r2, r3
 800243a:	d12f      	bne.n	800249c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800243c:	4c19      	ldr	r4, [pc, #100]	; (80024a4 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800243e:	481a      	ldr	r0, [pc, #104]	; (80024a8 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002440:	2500      	movs	r5, #0
 8002442:	9501      	str	r5, [sp, #4]
 8002444:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002446:	f043 0302 	orr.w	r3, r3, #2
 800244a:	6323      	str	r3, [r4, #48]	; 0x30
 800244c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800244e:	f003 0302 	and.w	r3, r3, #2
 8002452:	9301      	str	r3, [sp, #4]
 8002454:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002456:	f44f 7240 	mov.w	r2, #768	; 0x300
 800245a:	2312      	movs	r3, #18
 800245c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002460:	2101      	movs	r1, #1
 8002462:	2303      	movs	r3, #3
 8002464:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002468:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800246a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800246c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800246e:	f003 f82b 	bl	80054c8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002472:	9502      	str	r5, [sp, #8]
 8002474:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002476:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800247a:	6423      	str	r3, [r4, #64]	; 0x40
 800247c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800247e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002482:	9302      	str	r3, [sp, #8]
 8002484:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8002486:	6a23      	ldr	r3, [r4, #32]
 8002488:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800248c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 800248e:	6a23      	ldr	r3, [r4, #32]
 8002490:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002494:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8002496:	2064      	movs	r0, #100	; 0x64
 8002498:	f002 f8b0 	bl	80045fc <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800249c:	b009      	add	sp, #36	; 0x24
 800249e:	bd30      	pop	{r4, r5, pc}
 80024a0:	40005400 	.word	0x40005400
 80024a4:	40023800 	.word	0x40023800
 80024a8:	40020400 	.word	0x40020400

080024ac <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 80024ac:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 80024ae:	6802      	ldr	r2, [r0, #0]
 80024b0:	4b0a      	ldr	r3, [pc, #40]	; (80024dc <HAL_I2C_MspDeInit+0x30>)
 80024b2:	429a      	cmp	r2, r3
 80024b4:	d110      	bne.n	80024d8 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 80024b6:	4a0a      	ldr	r2, [pc, #40]	; (80024e0 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 80024b8:	480a      	ldr	r0, [pc, #40]	; (80024e4 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 80024ba:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80024bc:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80024c0:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 80024c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80024c6:	f003 f8e5 	bl	8005694 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 80024ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 80024ce:	4805      	ldr	r0, [pc, #20]	; (80024e4 <HAL_I2C_MspDeInit+0x38>)
 80024d0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80024d4:	f003 b8de 	b.w	8005694 <HAL_GPIO_DeInit>
}
 80024d8:	bd08      	pop	{r3, pc}
 80024da:	bf00      	nop
 80024dc:	40005400 	.word	0x40005400
 80024e0:	40023800 	.word	0x40023800
 80024e4:	40020400 	.word	0x40020400

080024e8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80024e8:	b510      	push	{r4, lr}
 80024ea:	4604      	mov	r4, r0
 80024ec:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80024ee:	223c      	movs	r2, #60	; 0x3c
 80024f0:	2100      	movs	r1, #0
 80024f2:	a801      	add	r0, sp, #4
 80024f4:	f01b f8ea 	bl	801d6cc <memset>
  if(hltdc->Instance==LTDC)
 80024f8:	6822      	ldr	r2, [r4, #0]
 80024fa:	4b12      	ldr	r3, [pc, #72]	; (8002544 <HAL_LTDC_MspInit+0x5c>)
 80024fc:	429a      	cmp	r2, r3
 80024fe:	d11f      	bne.n	8002540 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002500:	2308      	movs	r3, #8
 8002502:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8002504:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8002508:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800250a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 800250c:	2306      	movs	r3, #6
 800250e:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002510:	f004 fbb4 	bl	8006c7c <HAL_RCCEx_PeriphCLKConfig>
 8002514:	b108      	cbz	r0, 800251a <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8002516:	f7ff feed 	bl	80022f4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800251a:	4b0b      	ldr	r3, [pc, #44]	; (8002548 <HAL_LTDC_MspInit+0x60>)
 800251c:	2200      	movs	r2, #0
 800251e:	9200      	str	r2, [sp, #0]
 8002520:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002522:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8002526:	6459      	str	r1, [r3, #68]	; 0x44
 8002528:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800252a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800252e:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002530:	2058      	movs	r0, #88	; 0x58
 8002532:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002534:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002536:	f002 f887 	bl	8004648 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800253a:	2058      	movs	r0, #88	; 0x58
 800253c:	f002 f8b6 	bl	80046ac <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002540:	b010      	add	sp, #64	; 0x40
 8002542:	bd10      	pop	{r4, pc}
 8002544:	40016800 	.word	0x40016800
 8002548:	40023800 	.word	0x40023800

0800254c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 800254c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800254e:	4604      	mov	r4, r0
 8002550:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002552:	2214      	movs	r2, #20
 8002554:	2100      	movs	r1, #0
 8002556:	a803      	add	r0, sp, #12
 8002558:	f01b f8b8 	bl	801d6cc <memset>
  if(hqspi->Instance==QUADSPI)
 800255c:	6822      	ldr	r2, [r4, #0]
 800255e:	4b24      	ldr	r3, [pc, #144]	; (80025f0 <HAL_QSPI_MspInit+0xa4>)
 8002560:	429a      	cmp	r2, r3
 8002562:	d142      	bne.n	80025ea <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002564:	4b23      	ldr	r3, [pc, #140]	; (80025f4 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002566:	4824      	ldr	r0, [pc, #144]	; (80025f8 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002568:	2400      	movs	r4, #0
 800256a:	9400      	str	r4, [sp, #0]
 800256c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800256e:	f042 0202 	orr.w	r2, r2, #2
 8002572:	639a      	str	r2, [r3, #56]	; 0x38
 8002574:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002576:	f002 0202 	and.w	r2, r2, #2
 800257a:	9200      	str	r2, [sp, #0]
 800257c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800257e:	9401      	str	r4, [sp, #4]
 8002580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002582:	f042 0202 	orr.w	r2, r2, #2
 8002586:	631a      	str	r2, [r3, #48]	; 0x30
 8002588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800258a:	f002 0202 	and.w	r2, r2, #2
 800258e:	9201      	str	r2, [sp, #4]
 8002590:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002592:	9402      	str	r4, [sp, #8]
 8002594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002596:	f042 0220 	orr.w	r2, r2, #32
 800259a:	631a      	str	r2, [r3, #48]	; 0x30
 800259c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800259e:	f003 0320 	and.w	r3, r3, #32
 80025a2:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a4:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80025a6:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80025a8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80025aa:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025ac:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025ae:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80025b4:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025b8:	f002 ff86 	bl	80054c8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 80025bc:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025c0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025c4:	480d      	ldr	r0, [pc, #52]	; (80025fc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 80025c6:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 80025ca:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025cc:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025d0:	f002 ff7a 	bl	80054c8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 80025d4:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025d8:	4808      	ldr	r0, [pc, #32]	; (80025fc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80025da:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025dc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025de:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025e2:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025e6:	f002 ff6f 	bl	80054c8 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 80025ea:	b009      	add	sp, #36	; 0x24
 80025ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025ee:	bf00      	nop
 80025f0:	a0001000 	.word	0xa0001000
 80025f4:	40023800 	.word	0x40023800
 80025f8:	40020400 	.word	0x40020400
 80025fc:	40021400 	.word	0x40021400

08002600 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8002600:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8002602:	6802      	ldr	r2, [r0, #0]
 8002604:	4b09      	ldr	r3, [pc, #36]	; (800262c <HAL_QSPI_MspDeInit+0x2c>)
 8002606:	429a      	cmp	r2, r3
 8002608:	d10f      	bne.n	800262a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 800260a:	4a09      	ldr	r2, [pc, #36]	; (8002630 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 800260c:	4809      	ldr	r0, [pc, #36]	; (8002634 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 800260e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002610:	f023 0302 	bic.w	r3, r3, #2
 8002614:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8002616:	2140      	movs	r1, #64	; 0x40
 8002618:	f003 f83c 	bl	8005694 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 800261c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8002620:	4805      	ldr	r0, [pc, #20]	; (8002638 <HAL_QSPI_MspDeInit+0x38>)
 8002622:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8002626:	f003 b835 	b.w	8005694 <HAL_GPIO_DeInit>
}
 800262a:	bd08      	pop	{r3, pc}
 800262c:	a0001000 	.word	0xa0001000
 8002630:	40023800 	.word	0x40023800
 8002634:	40020400 	.word	0x40020400
 8002638:	40021400 	.word	0x40021400

0800263c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800263c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(htim_base->Instance==TIM1)
 800263e:	4b18      	ldr	r3, [pc, #96]	; (80026a0 <HAL_TIM_Base_MspInit+0x64>)
 8002640:	6802      	ldr	r2, [r0, #0]
 8002642:	429a      	cmp	r2, r3
{
 8002644:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM1)
 8002646:	d128      	bne.n	800269a <HAL_TIM_Base_MspInit+0x5e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002648:	2300      	movs	r3, #0
 800264a:	4a16      	ldr	r2, [pc, #88]	; (80026a4 <HAL_TIM_Base_MspInit+0x68>)
 800264c:	9301      	str	r3, [sp, #4]
 800264e:	6c51      	ldr	r1, [r2, #68]	; 0x44

    /* TIM1 DMA Init */
    /* TIM1_CH1 Init */
    hdma_tim1_ch1.Instance = DMA2_Stream1;
 8002650:	4c15      	ldr	r4, [pc, #84]	; (80026a8 <HAL_TIM_Base_MspInit+0x6c>)
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002652:	f041 0101 	orr.w	r1, r1, #1
 8002656:	6451      	str	r1, [r2, #68]	; 0x44
 8002658:	6c52      	ldr	r2, [r2, #68]	; 0x44
    hdma_tim1_ch1.Init.Channel = DMA_CHANNEL_6;
 800265a:	4914      	ldr	r1, [pc, #80]	; (80026ac <HAL_TIM_Base_MspInit+0x70>)
    __HAL_RCC_TIM1_CLK_ENABLE();
 800265c:	f002 0201 	and.w	r2, r2, #1
 8002660:	9201      	str	r2, [sp, #4]
 8002662:	9a01      	ldr	r2, [sp, #4]
    hdma_tim1_ch1.Init.Channel = DMA_CHANNEL_6;
 8002664:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8002668:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim1_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800266c:	2240      	movs	r2, #64	; 0x40
    hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800266e:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8002672:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002676:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800267a:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800267e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim1_ch1.Init.Mode = DMA_NORMAL;
    hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 8002682:	4620      	mov	r0, r4
    hdma_tim1_ch1.Init.Mode = DMA_NORMAL;
 8002684:	e9c4 2306 	strd	r2, r3, [r4, #24]
    hdma_tim1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002688:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 800268c:	f002 f856 	bl	800473c <HAL_DMA_Init>
 8002690:	b108      	cbz	r0, 8002696 <HAL_TIM_Base_MspInit+0x5a>
    {
      Error_Handler();
 8002692:	f7ff fe2f 	bl	80022f4 <Error_Handler>
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim1_ch1);
 8002696:	626c      	str	r4, [r5, #36]	; 0x24
 8002698:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 800269a:	b003      	add	sp, #12
 800269c:	bd30      	pop	{r4, r5, pc}
 800269e:	bf00      	nop
 80026a0:	40010000 	.word	0x40010000
 80026a4:	40023800 	.word	0x40023800
 80026a8:	20001350 	.word	0x20001350
 80026ac:	40026428 	.word	0x40026428

080026b0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80026b0:	b510      	push	{r4, lr}
 80026b2:	4604      	mov	r4, r0
 80026b4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026b6:	2214      	movs	r2, #20
 80026b8:	2100      	movs	r1, #0
 80026ba:	a801      	add	r0, sp, #4
 80026bc:	f01b f806 	bl	801d6cc <memset>
  if(htim->Instance==TIM1)
 80026c0:	6822      	ldr	r2, [r4, #0]
 80026c2:	4b0e      	ldr	r3, [pc, #56]	; (80026fc <HAL_TIM_MspPostInit+0x4c>)
 80026c4:	429a      	cmp	r2, r3
 80026c6:	d116      	bne.n	80026f6 <HAL_TIM_MspPostInit+0x46>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80026c8:	2300      	movs	r3, #0
 80026ca:	9300      	str	r3, [sp, #0]
 80026cc:	4b0c      	ldr	r3, [pc, #48]	; (8002700 <HAL_TIM_MspPostInit+0x50>)
    GPIO_InitStruct.Pin = GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026ce:	480d      	ldr	r0, [pc, #52]	; (8002704 <HAL_TIM_MspPostInit+0x54>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80026d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80026d2:	f042 0201 	orr.w	r2, r2, #1
 80026d6:	631a      	str	r2, [r3, #48]	; 0x30
 80026d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026da:	f003 0301 	and.w	r3, r3, #1
 80026de:	9300      	str	r3, [sp, #0]
 80026e0:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026e6:	2302      	movs	r3, #2
 80026e8:	e9cd 2301 	strd	r2, r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026ec:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80026ee:	2301      	movs	r3, #1
 80026f0:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026f2:	f002 fee9 	bl	80054c8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 80026f6:	b006      	add	sp, #24
 80026f8:	bd10      	pop	{r4, pc}
 80026fa:	bf00      	nop
 80026fc:	40010000 	.word	0x40010000
 8002700:	40023800 	.word	0x40023800
 8002704:	40020000 	.word	0x40020000

08002708 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002708:	b5f0      	push	{r4, r5, r6, r7, lr}
 800270a:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800270c:	2300      	movs	r3, #0
 800270e:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002710:	4b30      	ldr	r3, [pc, #192]	; (80027d4 <HAL_SDRAM_MspInit+0xcc>)
 8002712:	681c      	ldr	r4, [r3, #0]
 8002714:	2c00      	cmp	r4, #0
 8002716:	d15a      	bne.n	80027ce <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8002718:	2201      	movs	r2, #1
 800271a:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800271c:	4b2e      	ldr	r3, [pc, #184]	; (80027d8 <HAL_SDRAM_MspInit+0xd0>)
 800271e:	9400      	str	r4, [sp, #0]
 8002720:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002722:	482e      	ldr	r0, [pc, #184]	; (80027dc <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002724:	f042 0201 	orr.w	r2, r2, #1
 8002728:	639a      	str	r2, [r3, #56]	; 0x38
 800272a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800272c:	f003 0301 	and.w	r3, r3, #1
 8002730:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002732:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002734:	2603      	movs	r6, #3
 8002736:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002738:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800273a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800273c:	f64f 7383 	movw	r3, #65411	; 0xff83
 8002740:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002744:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002748:	f002 febe 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 800274c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002750:	4823      	ldr	r0, [pc, #140]	; (80027e0 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002752:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002754:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002756:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800275a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800275e:	f002 feb3 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002762:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002766:	481f      	ldr	r0, [pc, #124]	; (80027e4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002768:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800276a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800276c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002770:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002774:	f002 fea8 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002778:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800277c:	481a      	ldr	r0, [pc, #104]	; (80027e8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800277e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002780:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002782:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002786:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800278a:	f002 fe9d 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800278e:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002792:	4816      	ldr	r0, [pc, #88]	; (80027ec <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002794:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002796:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002798:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800279c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027a0:	f002 fe92 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 80027a4:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80027a8:	4811      	ldr	r0, [pc, #68]	; (80027f0 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027aa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80027ac:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027ae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027b2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80027b6:	f002 fe87 	bl	80054c8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 80027ba:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80027bc:	480d      	ldr	r0, [pc, #52]	; (80027f4 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027be:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80027c0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027c2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027c6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80027ca:	f002 fe7d 	bl	80054c8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80027ce:	b007      	add	sp, #28
 80027d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027d2:	bf00      	nop
 80027d4:	20001594 	.word	0x20001594
 80027d8:	40023800 	.word	0x40023800
 80027dc:	40021000 	.word	0x40021000
 80027e0:	40021800 	.word	0x40021800
 80027e4:	40020c00 	.word	0x40020c00
 80027e8:	40022000 	.word	0x40022000
 80027ec:	40021400 	.word	0x40021400
 80027f0:	40021c00 	.word	0x40021c00
 80027f4:	40020800 	.word	0x40020800

080027f8 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 80027f8:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 80027fa:	4b17      	ldr	r3, [pc, #92]	; (8002858 <HAL_SDRAM_MspDeInit+0x60>)
 80027fc:	681a      	ldr	r2, [r3, #0]
 80027fe:	bb52      	cbnz	r2, 8002856 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8002800:	2201      	movs	r2, #1
 8002802:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8002804:	4a15      	ldr	r2, [pc, #84]	; (800285c <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002806:	4816      	ldr	r0, [pc, #88]	; (8002860 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8002808:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800280a:	f023 0301 	bic.w	r3, r3, #1
 800280e:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002810:	f64f 7183 	movw	r1, #65411	; 0xff83
 8002814:	f002 ff3e 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002818:	4812      	ldr	r0, [pc, #72]	; (8002864 <HAL_SDRAM_MspDeInit+0x6c>)
 800281a:	f248 1133 	movw	r1, #33075	; 0x8133
 800281e:	f002 ff39 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002822:	4811      	ldr	r0, [pc, #68]	; (8002868 <HAL_SDRAM_MspDeInit+0x70>)
 8002824:	f24c 7103 	movw	r1, #50947	; 0xc703
 8002828:	f002 ff34 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 800282c:	480f      	ldr	r0, [pc, #60]	; (800286c <HAL_SDRAM_MspDeInit+0x74>)
 800282e:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8002832:	f002 ff2f 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002836:	480e      	ldr	r0, [pc, #56]	; (8002870 <HAL_SDRAM_MspDeInit+0x78>)
 8002838:	f64f 013f 	movw	r1, #63551	; 0xf83f
 800283c:	f002 ff2a 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002840:	480c      	ldr	r0, [pc, #48]	; (8002874 <HAL_SDRAM_MspDeInit+0x7c>)
 8002842:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8002846:	f002 ff25 	bl	8005694 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 800284a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 800284e:	480a      	ldr	r0, [pc, #40]	; (8002878 <HAL_SDRAM_MspDeInit+0x80>)
 8002850:	210d      	movs	r1, #13
 8002852:	f002 bf1f 	b.w	8005694 <HAL_GPIO_DeInit>
}
 8002856:	bd08      	pop	{r3, pc}
 8002858:	20001590 	.word	0x20001590
 800285c:	40023800 	.word	0x40023800
 8002860:	40021000 	.word	0x40021000
 8002864:	40021800 	.word	0x40021800
 8002868:	40020c00 	.word	0x40020c00
 800286c:	40022000 	.word	0x40022000
 8002870:	40021400 	.word	0x40021400
 8002874:	40021c00 	.word	0x40021c00
 8002878:	40020800 	.word	0x40020800

0800287c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800287c:	b530      	push	{r4, r5, lr}
 800287e:	4601      	mov	r1, r0
 8002880:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8002882:	2200      	movs	r2, #0
 8002884:	2036      	movs	r0, #54	; 0x36
 8002886:	f001 fedf 	bl	8004648 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800288a:	2036      	movs	r0, #54	; 0x36
 800288c:	f001 ff0e 	bl	80046ac <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002890:	2500      	movs	r5, #0
 8002892:	4b15      	ldr	r3, [pc, #84]	; (80028e8 <HAL_InitTick+0x6c>)
 8002894:	9502      	str	r5, [sp, #8]
 8002896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002898:	4c14      	ldr	r4, [pc, #80]	; (80028ec <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289a:	f042 0210 	orr.w	r2, r2, #16
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a2:	f003 0310 	and.w	r3, r3, #16
 80028a6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028a8:	a901      	add	r1, sp, #4
 80028aa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ae:	f004 f9c7 	bl	8006c40 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028b2:	f004 f9b5 	bl	8006c20 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80028b6:	4b0e      	ldr	r3, [pc, #56]	; (80028f0 <HAL_InitTick+0x74>)
 80028b8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80028ba:	f240 33e7 	movw	r3, #999	; 0x3e7
 80028be:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028c0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80028c2:	4b0c      	ldr	r3, [pc, #48]	; (80028f4 <HAL_InitTick+0x78>)
 80028c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80028c8:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028ca:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028cc:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80028ce:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028d2:	f004 ffa7 	bl	8007824 <HAL_TIM_Base_Init>
 80028d6:	b920      	cbnz	r0, 80028e2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80028d8:	4620      	mov	r0, r4
 80028da:	f004 fddd 	bl	8007498 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80028de:	b009      	add	sp, #36	; 0x24
 80028e0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80028e2:	2001      	movs	r0, #1
 80028e4:	e7fb      	b.n	80028de <HAL_InitTick+0x62>
 80028e6:	bf00      	nop
 80028e8:	40023800 	.word	0x40023800
 80028ec:	20001598 	.word	0x20001598
 80028f0:	40001000 	.word	0x40001000
 80028f4:	000f4240 	.word	0x000f4240

080028f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80028f8:	4770      	bx	lr

080028fa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80028fa:	e7fe      	b.n	80028fa <HardFault_Handler>

080028fc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80028fc:	e7fe      	b.n	80028fc <MemManage_Handler>

080028fe <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80028fe:	e7fe      	b.n	80028fe <BusFault_Handler>

08002900 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002900:	e7fe      	b.n	8002900 <UsageFault_Handler>

08002902 <DebugMon_Handler>:
 8002902:	4770      	bx	lr

08002904 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002904:	4801      	ldr	r0, [pc, #4]	; (800290c <TIM6_DAC_IRQHandler+0x8>)
 8002906:	f004 be57 	b.w	80075b8 <HAL_TIM_IRQHandler>
 800290a:	bf00      	nop
 800290c:	20001598 	.word	0x20001598

08002910 <DMA2_Stream1_IRQHandler>:
void DMA2_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */

  /* USER CODE END DMA2_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 8002910:	4801      	ldr	r0, [pc, #4]	; (8002918 <DMA2_Stream1_IRQHandler+0x8>)
 8002912:	f002 b84d 	b.w	80049b0 <HAL_DMA_IRQHandler>
 8002916:	bf00      	nop
 8002918:	20001350 	.word	0x20001350

0800291c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800291c:	4801      	ldr	r0, [pc, #4]	; (8002924 <LTDC_IRQHandler+0x8>)
 800291e:	f003 bc9e 	b.w	800625e <HAL_LTDC_IRQHandler>
 8002922:	bf00      	nop
 8002924:	20001420 	.word	0x20001420

08002928 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002928:	4801      	ldr	r0, [pc, #4]	; (8002930 <DMA2D_IRQHandler+0x8>)
 800292a:	f002 b92d 	b.w	8004b88 <HAL_DMA2D_IRQHandler>
 800292e:	bf00      	nop
 8002930:	20001310 	.word	0x20001310

08002934 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8002934:	4801      	ldr	r0, [pc, #4]	; (800293c <DSI_IRQHandler+0x8>)
 8002936:	f002 bb2e 	b.w	8004f96 <HAL_DSI_IRQHandler>
 800293a:	bf00      	nop
 800293c:	200013b0 	.word	0x200013b0

08002940 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002940:	2001      	movs	r0, #1
 8002942:	4770      	bx	lr

08002944 <_kill>:

int _kill(int pid, int sig)
{
 8002944:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002946:	f01a fe67 	bl	801d618 <__errno>
 800294a:	2316      	movs	r3, #22
 800294c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800294e:	f04f 30ff 	mov.w	r0, #4294967295
 8002952:	bd08      	pop	{r3, pc}

08002954 <_exit>:

void _exit (int status)
{
 8002954:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002956:	f01a fe5f 	bl	801d618 <__errno>
 800295a:	2316      	movs	r3, #22
 800295c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800295e:	e7fe      	b.n	800295e <_exit+0xa>

08002960 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002960:	b570      	push	{r4, r5, r6, lr}
 8002962:	460d      	mov	r5, r1
 8002964:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002966:	460e      	mov	r6, r1
 8002968:	1b73      	subs	r3, r6, r5
 800296a:	429c      	cmp	r4, r3
 800296c:	dc01      	bgt.n	8002972 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800296e:	4620      	mov	r0, r4
 8002970:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002972:	f3af 8000 	nop.w
 8002976:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800297a:	e7f5      	b.n	8002968 <_read+0x8>

0800297c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800297c:	b570      	push	{r4, r5, r6, lr}
 800297e:	460d      	mov	r5, r1
 8002980:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002982:	460e      	mov	r6, r1
 8002984:	1b73      	subs	r3, r6, r5
 8002986:	429c      	cmp	r4, r3
 8002988:	dc01      	bgt.n	800298e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800298a:	4620      	mov	r0, r4
 800298c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800298e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002992:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002996:	e7f5      	b.n	8002984 <_write+0x8>

08002998 <_close>:

int _close(int file)
{
	return -1;
}
 8002998:	f04f 30ff 	mov.w	r0, #4294967295
 800299c:	4770      	bx	lr

0800299e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800299e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80029a2:	604b      	str	r3, [r1, #4]
	return 0;
}
 80029a4:	2000      	movs	r0, #0
 80029a6:	4770      	bx	lr

080029a8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80029a8:	2001      	movs	r0, #1
 80029aa:	4770      	bx	lr

080029ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80029ac:	2000      	movs	r0, #0
 80029ae:	4770      	bx	lr

080029b0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80029b0:	4a0a      	ldr	r2, [pc, #40]	; (80029dc <_sbrk+0x2c>)
 80029b2:	6811      	ldr	r1, [r2, #0]
{
 80029b4:	b508      	push	{r3, lr}
 80029b6:	4603      	mov	r3, r0
	if (heap_end == 0)
 80029b8:	b909      	cbnz	r1, 80029be <_sbrk+0xe>
		heap_end = &end;
 80029ba:	4909      	ldr	r1, [pc, #36]	; (80029e0 <_sbrk+0x30>)
 80029bc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80029be:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80029c0:	4669      	mov	r1, sp
 80029c2:	4403      	add	r3, r0
 80029c4:	428b      	cmp	r3, r1
 80029c6:	d906      	bls.n	80029d6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029c8:	f01a fe26 	bl	801d618 <__errno>
 80029cc:	230c      	movs	r3, #12
 80029ce:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80029d0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80029d4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80029d6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80029d8:	e7fc      	b.n	80029d4 <_sbrk+0x24>
 80029da:	bf00      	nop
 80029dc:	200015e0 	.word	0x200015e0
 80029e0:	2000c270 	.word	0x2000c270

080029e4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80029e4:	4770      	bx	lr

080029e6 <_ZN23ApplicationFontProviderD0Ev>:
 80029e6:	b510      	push	{r4, lr}
 80029e8:	2104      	movs	r1, #4
 80029ea:	4604      	mov	r4, r0
 80029ec:	f01a f838 	bl	801ca60 <_ZdlPvj>
 80029f0:	4620      	mov	r0, r4
 80029f2:	bd10      	pop	{r4, pc}

080029f4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80029f4:	2901      	cmp	r1, #1
{
 80029f6:	b508      	push	{r3, lr}
    switch (typography)
 80029f8:	d006      	beq.n	8002a08 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80029fa:	2902      	cmp	r1, #2
 80029fc:	d008      	beq.n	8002a10 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80029fe:	b959      	cbnz	r1, 8002a18 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002a00:	f000 fcdc 	bl	80033bc <_ZN17TypedTextDatabase8getFontsEv>
 8002a04:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002a06:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002a08:	f000 fcd8 	bl	80033bc <_ZN17TypedTextDatabase8getFontsEv>
 8002a0c:	6840      	ldr	r0, [r0, #4]
 8002a0e:	e7fa      	b.n	8002a06 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002a10:	f000 fcd4 	bl	80033bc <_ZN17TypedTextDatabase8getFontsEv>
 8002a14:	6880      	ldr	r0, [r0, #8]
 8002a16:	e7f6      	b.n	8002a06 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002a18:	2000      	movs	r0, #0
 8002a1a:	e7f4      	b.n	8002a06 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002a1c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a1c:	4800      	ldr	r0, [pc, #0]	; (8002a20 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a1e:	4770      	bx	lr
 8002a20:	0801ee60 	.word	0x0801ee60

08002a24 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a24:	2002      	movs	r0, #2
 8002a26:	4770      	bx	lr

08002a28 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a28:	b513      	push	{r0, r1, r4, lr}
 8002a2a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002a2c:	b151      	cbz	r1, 8002a44 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a2e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002a30:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a32:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a36:	aa01      	add	r2, sp, #4
 8002a38:	689c      	ldr	r4, [r3, #8]
 8002a3a:	f10d 0303 	add.w	r3, sp, #3
 8002a3e:	47a0      	blx	r4
        return glyph;
    }
 8002a40:	b002      	add	sp, #8
 8002a42:	bd10      	pop	{r4, pc}
            return 0;
 8002a44:	4608      	mov	r0, r1
 8002a46:	e7fb      	b.n	8002a40 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002a48 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a48:	8940      	ldrh	r0, [r0, #10]
 8002a4a:	4770      	bx	lr

08002a4c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a4c:	8980      	ldrh	r0, [r0, #12]
 8002a4e:	4770      	bx	lr

08002a50 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002a50:	8880      	ldrh	r0, [r0, #4]
 8002a52:	4770      	bx	lr

08002a54 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002a54:	7983      	ldrb	r3, [r0, #6]
 8002a56:	8880      	ldrh	r0, [r0, #4]
 8002a58:	4418      	add	r0, r3
    }
 8002a5a:	b280      	uxth	r0, r0
 8002a5c:	4770      	bx	lr

08002a5e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a5e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a60:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002a64:	4770      	bx	lr

08002a66 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a66:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a68:	09c0      	lsrs	r0, r0, #7
 8002a6a:	4770      	bx	lr

08002a6c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002a6c:	4770      	bx	lr

08002a6e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a6e:	b510      	push	{r4, lr}
    }
 8002a70:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a72:	4604      	mov	r4, r0
    }
 8002a74:	f019 fff4 	bl	801ca60 <_ZdlPvj>
 8002a78:	4620      	mov	r0, r4
 8002a7a:	bd10      	pop	{r4, pc}

08002a7c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002a7c:	4770      	bx	lr

08002a7e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002a80:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002a84:	6808      	ldr	r0, [r1, #0]
 8002a86:	6849      	ldr	r1, [r1, #4]
 8002a88:	c303      	stmia	r3!, {r0, r1}
    }
 8002a8a:	4770      	bx	lr

08002a8c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a8c:	4770      	bx	lr

08002a8e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a8e:	4770      	bx	lr

08002a90 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a90:	6041      	str	r1, [r0, #4]
    }
 8002a92:	4770      	bx	lr

08002a94 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a94:	4770      	bx	lr
	...

08002a98 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a98:	4b06      	ldr	r3, [pc, #24]	; (8002ab4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002a9a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002a9e:	2300      	movs	r3, #0
 8002aa0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002aa4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002aa8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002aac:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002ab0:	4770      	bx	lr
 8002ab2:	bf00      	nop
 8002ab4:	08002b59 	.word	0x08002b59

08002ab8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002ab8:	2301      	movs	r3, #1
 8002aba:	7203      	strb	r3, [r0, #8]
    }
 8002abc:	4770      	bx	lr

08002abe <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002abe:	4770      	bx	lr

08002ac0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002ac0:	4770      	bx	lr

08002ac2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002ac2:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002ac4:	68c2      	ldr	r2, [r0, #12]
 8002ac6:	6841      	ldr	r1, [r0, #4]
 8002ac8:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002aca:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002acc:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002ad0:	07d2      	lsls	r2, r2, #31
 8002ad2:	bf48      	it	mi
 8002ad4:	590a      	ldrmi	r2, [r1, r4]
 8002ad6:	689b      	ldr	r3, [r3, #8]
    }
 8002ad8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002adc:	bf48      	it	mi
 8002ade:	58d3      	ldrmi	r3, [r2, r3]
 8002ae0:	4718      	bx	r3

08002ae2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002ae2:	6843      	ldr	r3, [r0, #4]
 8002ae4:	b12b      	cbz	r3, 8002af2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002ae6:	6883      	ldr	r3, [r0, #8]
 8002ae8:	b92b      	cbnz	r3, 8002af6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002aea:	68c0      	ldr	r0, [r0, #12]
 8002aec:	f000 0001 	and.w	r0, r0, #1
 8002af0:	4770      	bx	lr
 8002af2:	4618      	mov	r0, r3
 8002af4:	4770      	bx	lr
 8002af6:	2001      	movs	r0, #1
    }
 8002af8:	4770      	bx	lr

08002afa <_ZN8touchgfx12NoTransitionD0Ev>:
 8002afa:	b510      	push	{r4, lr}
 8002afc:	210c      	movs	r1, #12
 8002afe:	4604      	mov	r4, r0
 8002b00:	f019 ffae 	bl	801ca60 <_ZdlPvj>
 8002b04:	4620      	mov	r0, r4
 8002b06:	bd10      	pop	{r4, pc}

08002b08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b08:	b510      	push	{r4, lr}
 8002b0a:	2110      	movs	r1, #16
 8002b0c:	4604      	mov	r4, r0
 8002b0e:	f019 ffa7 	bl	801ca60 <_ZdlPvj>
 8002b12:	4620      	mov	r0, r4
 8002b14:	bd10      	pop	{r4, pc}

08002b16 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002b16:	b510      	push	{r4, lr}
 8002b18:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002b1c:	4604      	mov	r4, r0
 8002b1e:	f019 ff9f 	bl	801ca60 <_ZdlPvj>
 8002b22:	4620      	mov	r0, r4
 8002b24:	bd10      	pop	{r4, pc}

08002b26 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002b26:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002b28:	f00b f9d8 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002b2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002b30:	f00b bd9c 	b.w	800e66c <_ZN8touchgfx11Application10invalidateEv>

08002b34 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002b34:	b510      	push	{r4, lr}
 8002b36:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002b38:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002b3c:	b158      	cbz	r0, 8002b56 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b3e:	6803      	ldr	r3, [r0, #0]
 8002b40:	68db      	ldr	r3, [r3, #12]
 8002b42:	4798      	blx	r3
 8002b44:	b138      	cbz	r0, 8002b56 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b46:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002b4a:	6803      	ldr	r3, [r0, #0]
 8002b4c:	689b      	ldr	r3, [r3, #8]
 8002b4e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b50:	2300      	movs	r3, #0
 8002b52:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002b56:	bd10      	pop	{r4, pc}

08002b58 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002b58:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b5c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002b60:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b62:	68a8      	ldr	r0, [r5, #8]
 8002b64:	6803      	ldr	r3, [r0, #0]
 8002b66:	6a1b      	ldr	r3, [r3, #32]
 8002b68:	4798      	blx	r3
 8002b6a:	f5b0 7f92 	cmp.w	r0, #292	; 0x124
 8002b6e:	d205      	bcs.n	8002b7c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002b70:	4b45      	ldr	r3, [pc, #276]	; (8002c88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002b72:	4a46      	ldr	r2, [pc, #280]	; (8002c8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002b74:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002b76:	4846      	ldr	r0, [pc, #280]	; (8002c90 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002b78:	f01a fd1c 	bl	801d5b4 <__assert_func>
 8002b7c:	6868      	ldr	r0, [r5, #4]
 8002b7e:	6803      	ldr	r3, [r0, #0]
 8002b80:	6a1b      	ldr	r3, [r3, #32]
 8002b82:	4798      	blx	r3
 8002b84:	280f      	cmp	r0, #15
 8002b86:	d803      	bhi.n	8002b90 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002b88:	4b42      	ldr	r3, [pc, #264]	; (8002c94 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002b8a:	4a40      	ldr	r2, [pc, #256]	; (8002c8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002b8c:	21a4      	movs	r1, #164	; 0xa4
 8002b8e:	e7f2      	b.n	8002b76 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b90:	68e8      	ldr	r0, [r5, #12]
 8002b92:	6803      	ldr	r3, [r0, #0]
 8002b94:	6a1b      	ldr	r3, [r3, #32]
 8002b96:	4798      	blx	r3
 8002b98:	280b      	cmp	r0, #11
 8002b9a:	d803      	bhi.n	8002ba4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002b9c:	4b3e      	ldr	r3, [pc, #248]	; (8002c98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002b9e:	4a3b      	ldr	r2, [pc, #236]	; (8002c8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002ba0:	21a5      	movs	r1, #165	; 0xa5
 8002ba2:	e7e8      	b.n	8002b76 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002ba4:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002ca0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002ba8:	f00b f998 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 8002bac:	f00b f99c 	bl	800dee8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002bb0:	f8d9 0000 	ldr.w	r0, [r9]
 8002bb4:	b110      	cbz	r0, 8002bbc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002bb6:	6803      	ldr	r3, [r0, #0]
 8002bb8:	68db      	ldr	r3, [r3, #12]
 8002bba:	4798      	blx	r3
    if (*currentTrans)
 8002bbc:	f8d9 0000 	ldr.w	r0, [r9]
 8002bc0:	b110      	cbz	r0, 8002bc8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002bc2:	6803      	ldr	r3, [r0, #0]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	4798      	blx	r3
    if (*currentScreen)
 8002bc8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002ca4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002bcc:	f8d8 0000 	ldr.w	r0, [r8]
 8002bd0:	b110      	cbz	r0, 8002bd8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002bd2:	6803      	ldr	r3, [r0, #0]
 8002bd4:	695b      	ldr	r3, [r3, #20]
 8002bd6:	4798      	blx	r3
    if (*currentPresenter)
 8002bd8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002bdc:	b110      	cbz	r0, 8002be4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	685b      	ldr	r3, [r3, #4]
 8002be2:	4798      	blx	r3
    if (*currentScreen)
 8002be4:	f8d8 0000 	ldr.w	r0, [r8]
 8002be8:	b110      	cbz	r0, 8002bf0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002bea:	6803      	ldr	r3, [r0, #0]
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	4798      	blx	r3
    if (*currentPresenter)
 8002bf0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002bf4:	b110      	cbz	r0, 8002bfc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002bf6:	6803      	ldr	r3, [r0, #0]
 8002bf8:	689b      	ldr	r3, [r3, #8]
 8002bfa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002bfc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002bfe:	6803      	ldr	r3, [r0, #0]
 8002c00:	2100      	movs	r1, #0
 8002c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c04:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002c06:	f04f 0b00 	mov.w	fp, #0
 8002c0a:	4b24      	ldr	r3, [pc, #144]	; (8002c9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002c0c:	6003      	str	r3, [r0, #0]
 8002c0e:	4604      	mov	r4, r0
 8002c10:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c14:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c18:	68a8      	ldr	r0, [r5, #8]
 8002c1a:	6803      	ldr	r3, [r0, #0]
 8002c1c:	4659      	mov	r1, fp
 8002c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c20:	4798      	blx	r3
 8002c22:	4606      	mov	r6, r0
 8002c24:	f000 fc26 	bl	8003474 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c28:	6868      	ldr	r0, [r5, #4]
 8002c2a:	6803      	ldr	r3, [r0, #0]
 8002c2c:	4659      	mov	r1, fp
 8002c2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c30:	4798      	blx	r3
 8002c32:	4631      	mov	r1, r6
 8002c34:	4605      	mov	r5, r0
 8002c36:	f000 fc03 	bl	8003440 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002c3a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c3e:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002c42:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c46:	b1e5      	cbz	r5, 8002c82 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002c48:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c4a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c4e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c50:	f8c5 a008 	str.w	sl, [r5, #8]
 8002c54:	4630      	mov	r0, r6
 8002c56:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002c58:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002c5a:	4798      	blx	r3
    newPresenter->activate();
 8002c5c:	682b      	ldr	r3, [r5, #0]
 8002c5e:	4628      	mov	r0, r5
 8002c60:	681b      	ldr	r3, [r3, #0]
 8002c62:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c64:	4621      	mov	r1, r4
 8002c66:	4630      	mov	r0, r6
 8002c68:	f00c fd12 	bl	800f690 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c6c:	6823      	ldr	r3, [r4, #0]
 8002c6e:	4620      	mov	r0, r4
 8002c70:	691b      	ldr	r3, [r3, #16]
 8002c72:	4798      	blx	r3
    newTransition->invalidate();
 8002c74:	6823      	ldr	r3, [r4, #0]
 8002c76:	695b      	ldr	r3, [r3, #20]
 8002c78:	4620      	mov	r0, r4
}
 8002c7a:	b001      	add	sp, #4
 8002c7c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c80:	4718      	bx	r3
    model->bind(newPresenter);
 8002c82:	462b      	mov	r3, r5
 8002c84:	e7e1      	b.n	8002c4a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002c86:	bf00      	nop
 8002c88:	0801ee98 	.word	0x0801ee98
 8002c8c:	0801ef26 	.word	0x0801ef26
 8002c90:	0801f02a 	.word	0x0801f02a
 8002c94:	0801f071 	.word	0x0801f071
 8002c98:	0801f114 	.word	0x0801f114
 8002c9c:	0801f224 	.word	0x0801f224
 8002ca0:	2000c00c 	.word	0x2000c00c
 8002ca4:	2000c008 	.word	0x2000c008

08002ca8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002caa:	4604      	mov	r4, r0
 8002cac:	4617      	mov	r7, r2
 8002cae:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002cb0:	f00b f934 	bl	800df1c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002cb4:	4b10      	ldr	r3, [pc, #64]	; (8002cf8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002cb6:	2500      	movs	r5, #0
      model(m)
 8002cb8:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002cbc:	4e0f      	ldr	r6, [pc, #60]	; (8002cfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8002cbe:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8002cc0:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002cc4:	4b0e      	ldr	r3, [pc, #56]	; (8002d00 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002cc6:	6830      	ldr	r0, [r6, #0]
 8002cc8:	6023      	str	r3, [r4, #0]
 8002cca:	4b0e      	ldr	r3, [pc, #56]	; (8002d04 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002ccc:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002cd0:	6803      	ldr	r3, [r0, #0]
 8002cd2:	4629      	mov	r1, r5
 8002cd4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002cd6:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002cda:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002cdc:	4628      	mov	r0, r5
 8002cde:	f000 fb21 	bl	8003324 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ce2:	6833      	ldr	r3, [r6, #0]
 8002ce4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002ce8:	b10a      	cbz	r2, 8002cee <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002cea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002cec:	b900      	cbnz	r0, 8002cf0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002cee:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002cf0:	f012 fd65 	bl	80157be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002cf4:	4620      	mov	r0, r4
 8002cf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002cf8:	2000c018 	.word	0x2000c018
 8002cfc:	2000bfcc 	.word	0x2000bfcc
 8002d00:	0801f1d8 	.word	0x0801f1d8
 8002d04:	0801f1c0 	.word	0x0801f1c0

08002d08 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d08:	4b06      	ldr	r3, [pc, #24]	; (8002d24 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002d0a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002d0e:	2300      	movs	r3, #0
 8002d10:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002d14:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002d18:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002d1c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002d20:	4770      	bx	lr
 8002d22:	bf00      	nop
 8002d24:	08002b59 	.word	0x08002b59

08002d28 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002d28:	6a00      	ldr	r0, [r0, #32]
 8002d2a:	4770      	bx	lr

08002d2c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002d2c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002d2e:	4770      	bx	lr

08002d30 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002d30:	4770      	bx	lr

08002d32 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002d32:	888b      	ldrh	r3, [r1, #4]
 8002d34:	6980      	ldr	r0, [r0, #24]
 8002d36:	680a      	ldr	r2, [r1, #0]
 8002d38:	0adb      	lsrs	r3, r3, #11
 8002d3a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002d3e:	4410      	add	r0, r2
 8002d40:	4770      	bx	lr

08002d42 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002d42:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002d44:	b1c2      	cbz	r2, 8002d78 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002d46:	7b13      	ldrb	r3, [r2, #12]
 8002d48:	b1b3      	cbz	r3, 8002d78 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002d4a:	7b54      	ldrb	r4, [r2, #13]
 8002d4c:	7ad2      	ldrb	r2, [r2, #11]
 8002d4e:	0224      	lsls	r4, r4, #8
 8002d50:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d54:	4314      	orrs	r4, r2
 8002d56:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d58:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d5a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002d5e:	8813      	ldrh	r3, [r2, #0]
 8002d60:	428b      	cmp	r3, r1
 8002d62:	d102      	bne.n	8002d6a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002d64:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002d68:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002d6a:	d805      	bhi.n	8002d78 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d6c:	3801      	subs	r0, #1
 8002d6e:	b280      	uxth	r0, r0
 8002d70:	3204      	adds	r2, #4
 8002d72:	2800      	cmp	r0, #0
 8002d74:	d1f3      	bne.n	8002d5e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002d76:	e7f7      	b.n	8002d68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002d78:	2000      	movs	r0, #0
 8002d7a:	e7f5      	b.n	8002d68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002d7c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002d7c:	b510      	push	{r4, lr}
 8002d7e:	2128      	movs	r1, #40	; 0x28
 8002d80:	4604      	mov	r4, r0
 8002d82:	f019 fe6d 	bl	801ca60 <_ZdlPvj>
 8002d86:	4620      	mov	r0, r4
 8002d88:	bd10      	pop	{r4, pc}
	...

08002d8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002d8c:	b530      	push	{r4, r5, lr}
 8002d8e:	b089      	sub	sp, #36	; 0x24
 8002d90:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002d92:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002d96:	9506      	str	r5, [sp, #24]
 8002d98:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002d9c:	9505      	str	r5, [sp, #20]
 8002d9e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002da2:	9504      	str	r5, [sp, #16]
 8002da4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002da8:	9503      	str	r5, [sp, #12]
 8002daa:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002dae:	9502      	str	r5, [sp, #8]
 8002db0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002db4:	9501      	str	r5, [sp, #4]
 8002db6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002dba:	9500      	str	r5, [sp, #0]
 8002dbc:	f00c f8c8 	bl	800ef50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002dc0:	4b06      	ldr	r3, [pc, #24]	; (8002ddc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002dc2:	6023      	str	r3, [r4, #0]
 8002dc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002dc6:	61a3      	str	r3, [r4, #24]
 8002dc8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002dca:	61e3      	str	r3, [r4, #28]
 8002dcc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002dce:	6223      	str	r3, [r4, #32]
 8002dd0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002dd2:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	b009      	add	sp, #36	; 0x24
 8002dd8:	bd30      	pop	{r4, r5, pc}
 8002dda:	bf00      	nop
 8002ddc:	0801f248 	.word	0x0801f248

08002de0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002de0:	2000      	movs	r0, #0
 8002de2:	4770      	bx	lr

08002de4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002de4:	8081      	strh	r1, [r0, #4]
    }
 8002de6:	4770      	bx	lr

08002de8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002de8:	80c1      	strh	r1, [r0, #6]
    }
 8002dea:	4770      	bx	lr

08002dec <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002dec:	8101      	strh	r1, [r0, #8]
    }
 8002dee:	4770      	bx	lr

08002df0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002df0:	8141      	strh	r1, [r0, #10]
    }
 8002df2:	4770      	bx	lr

08002df4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002df4:	4770      	bx	lr

08002df6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002df6:	4770      	bx	lr

08002df8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002df8:	4770      	bx	lr

08002dfa <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002dfa:	4770      	bx	lr

08002dfc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002dfc:	4770      	bx	lr

08002dfe <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002dfe:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002e00:	88c4      	ldrh	r4, [r0, #6]
 8002e02:	6803      	ldr	r3, [r0, #0]
 8002e04:	1b12      	subs	r2, r2, r4
 8002e06:	8884      	ldrh	r4, [r0, #4]
 8002e08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e0a:	1b09      	subs	r1, r1, r4
 8002e0c:	b212      	sxth	r2, r2
    }
 8002e0e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002e12:	b209      	sxth	r1, r1
 8002e14:	4718      	bx	r3

08002e16 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002e16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e1a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002e1c:	f04f 33ff 	mov.w	r3, #4294967295
 8002e20:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002e22:	6813      	ldr	r3, [r2, #0]
 8002e24:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002e26:	6010      	str	r0, [r2, #0]
    }
 8002e28:	4770      	bx	lr

08002e2a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002e2a:	4770      	bx	lr

08002e2c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002e2c:	4770      	bx	lr

08002e2e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002e2e:	4770      	bx	lr

08002e30 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002e30:	4770      	bx	lr

08002e32 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002e32:	4770      	bx	lr

08002e34 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002e34:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002e38:	b11a      	cbz	r2, 8002e42 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002e3a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002e3e:	b102      	cbz	r2, 8002e42 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002e40:	6018      	str	r0, [r3, #0]
        }
    }
 8002e42:	4770      	bx	lr

08002e44 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002e44:	4770      	bx	lr

08002e46 <_ZN15Screen1ViewBase3ledEv>:
     * Virtual Action Handlers
     */
    virtual void led()
    {
        // Override and implement this function in Screen1
    }
 8002e46:	4770      	bx	lr

08002e48 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002e48:	4770      	bx	lr

08002e4a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e4a:	4770      	bx	lr

08002e4c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002e4c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002e4e:	68c2      	ldr	r2, [r0, #12]
 8002e50:	6844      	ldr	r4, [r0, #4]
 8002e52:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e54:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002e56:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e5a:	07d2      	lsls	r2, r2, #31
 8002e5c:	bf48      	it	mi
 8002e5e:	5962      	ldrmi	r2, [r4, r5]
 8002e60:	689b      	ldr	r3, [r3, #8]
    }
 8002e62:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002e64:	bf48      	it	mi
 8002e66:	58d3      	ldrmi	r3, [r2, r3]
 8002e68:	4718      	bx	r3

08002e6a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002e6a:	6843      	ldr	r3, [r0, #4]
 8002e6c:	b12b      	cbz	r3, 8002e7a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002e6e:	6883      	ldr	r3, [r0, #8]
 8002e70:	b92b      	cbnz	r3, 8002e7e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002e72:	68c0      	ldr	r0, [r0, #12]
 8002e74:	f000 0001 	and.w	r0, r0, #1
 8002e78:	4770      	bx	lr
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	4770      	bx	lr
 8002e7e:	2001      	movs	r0, #1
    }
 8002e80:	4770      	bx	lr

08002e82 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e82:	b510      	push	{r4, lr}
 8002e84:	2110      	movs	r1, #16
 8002e86:	4604      	mov	r4, r0
 8002e88:	f019 fdea 	bl	801ca60 <_ZdlPvj>
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	bd10      	pop	{r4, pc}

08002e90 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002e90:	b510      	push	{r4, lr}
 8002e92:	f44f 7192 	mov.w	r1, #292	; 0x124
 8002e96:	4604      	mov	r4, r0
 8002e98:	f019 fde2 	bl	801ca60 <_ZdlPvj>
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	bd10      	pop	{r4, pc}

08002ea0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002ea0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002ea4:	b112      	cbz	r2, 8002eac <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002ea6:	6803      	ldr	r3, [r0, #0]
 8002ea8:	695b      	ldr	r3, [r3, #20]
 8002eaa:	4718      	bx	r3
    }
 8002eac:	4770      	bx	lr

08002eae <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8002eae:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8002eb2:	428a      	cmp	r2, r1
 8002eb4:	d102      	bne.n	8002ebc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When button1 clicked call virtual function
        //Call led
        led();
 8002eb6:	6803      	ldr	r3, [r0, #0]
 8002eb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002eba:	4718      	bx	r3
    }
}
 8002ebc:	4770      	bx	lr

08002ebe <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002ebe:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002ec0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ec2:	4604      	mov	r4, r0
        setX(x);
 8002ec4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002ec6:	4615      	mov	r5, r2
        setX(x);
 8002ec8:	4798      	blx	r3
        setY(y);
 8002eca:	6823      	ldr	r3, [r4, #0]
 8002ecc:	4629      	mov	r1, r5
 8002ece:	4620      	mov	r0, r4
 8002ed0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002ed2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002ed6:	4718      	bx	r3

08002ed8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ed8:	b570      	push	{r4, r5, r6, lr}
 8002eda:	4604      	mov	r4, r0
 8002edc:	461d      	mov	r5, r3
 8002ede:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ee2:	f7ff ffec 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ee6:	6823      	ldr	r3, [r4, #0]
 8002ee8:	4629      	mov	r1, r5
 8002eea:	4620      	mov	r0, r4
 8002eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002eee:	4798      	blx	r3
        setHeight(height);
 8002ef0:	6823      	ldr	r3, [r4, #0]
 8002ef2:	4631      	mov	r1, r6
 8002ef4:	4620      	mov	r0, r4
 8002ef6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002ef8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002efc:	4718      	bx	r3
	...

08002f00 <_ZN8touchgfx6WidgetC1Ev>:
 8002f00:	2200      	movs	r2, #0
 8002f02:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002f06:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002f0a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002f0e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002f12:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f16:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002f18:	4a01      	ldr	r2, [pc, #4]	; (8002f20 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002f1a:	6002      	str	r2, [r0, #0]
 8002f1c:	4770      	bx	lr
 8002f1e:	bf00      	nop
 8002f20:	0801f2a0 	.word	0x0801f2a0

08002f24 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8002f24:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002f26:	2226      	movs	r2, #38	; 0x26
    Box()
 8002f28:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002f2a:	2100      	movs	r1, #0
 8002f2c:	f01a fbce 	bl	801d6cc <memset>
 8002f30:	4620      	mov	r0, r4
 8002f32:	f7ff ffe5 	bl	8002f00 <_ZN8touchgfx6WidgetC1Ev>
 8002f36:	4b04      	ldr	r3, [pc, #16]	; (8002f48 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002f38:	6023      	str	r3, [r4, #0]
 8002f3a:	23ff      	movs	r3, #255	; 0xff
 8002f3c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002f40:	2300      	movs	r3, #0
 8002f42:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8002f44:	4620      	mov	r0, r4
 8002f46:	bd10      	pop	{r4, pc}
 8002f48:	08020448 	.word	0x08020448

08002f4c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f50:	4604      	mov	r4, r0
 8002f52:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002f54:	46a0      	mov	r8, r4
        : presenter(0)
 8002f56:	2500      	movs	r5, #0
 8002f58:	f00c f9ee 	bl	800f338 <_ZN8touchgfx6ScreenC1Ev>
 8002f5c:	4b57      	ldr	r3, [pc, #348]	; (80030bc <_ZN15Screen1ViewBaseC1Ev+0x170>)
 8002f5e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002f60:	f848 3b40 	str.w	r3, [r8], #64
 8002f64:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8002f68:	4640      	mov	r0, r8
 8002f6a:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8002f6e:	f7ff ffd9 	bl	8002f24 <_ZN8touchgfx3BoxC1Ev>
 8002f72:	4648      	mov	r0, r9
 8002f74:	f7ff ffd6 	bl	8002f24 <_ZN8touchgfx3BoxC1Ev>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002f78:	4629      	mov	r1, r5
 8002f7a:	2226      	movs	r2, #38	; 0x26
 8002f7c:	4630      	mov	r0, r6
 8002f7e:	f01a fba5 	bl	801d6cc <memset>
 8002f82:	4630      	mov	r0, r6
 8002f84:	f7ff ffbc 	bl	8002f00 <_ZN8touchgfx6WidgetC1Ev>
 8002f88:	4b4d      	ldr	r3, [pc, #308]	; (80030c0 <_ZN15Screen1ViewBaseC1Ev+0x174>)
 8002f8a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 8002f8e:	4b4d      	ldr	r3, [pc, #308]	; (80030c4 <_ZN15Screen1ViewBaseC1Ev+0x178>)
 8002f90:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f94:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f98:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8002f9c:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8002fa0:	f04f 3aff 	mov.w	sl, #4294967295
 8002fa4:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002fa8:	4629      	mov	r1, r5
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002faa:	e9c4 a536 	strd	sl, r5, [r4, #216]	; 0xd8
 8002fae:	f8a4 b0c4 	strh.w	fp, [r4, #196]	; 0xc4
 8002fb2:	2226      	movs	r2, #38	; 0x26
        : color(col)
 8002fb4:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002fb8:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 8002fbc:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 8002fc0:	4638      	mov	r0, r7
 8002fc2:	f01a fb83 	bl	801d6cc <memset>
 8002fc6:	4638      	mov	r0, r7
 8002fc8:	f7ff ff9a 	bl	8002f00 <_ZN8touchgfx6WidgetC1Ev>
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002fcc:	4b3e      	ldr	r3, [pc, #248]	; (80030c8 <_ZN15Screen1ViewBaseC1Ev+0x17c>)
 8002fce:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002fd2:	4b3e      	ldr	r3, [pc, #248]	; (80030cc <_ZN15Screen1ViewBaseC1Ev+0x180>)
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002fd4:	f8a4 b110 	strh.w	fp, [r4, #272]	; 0x110
 8002fd8:	e9c4 3445 	strd	r3, r4, [r4, #276]	; 0x114
 8002fdc:	4b3c      	ldr	r3, [pc, #240]	; (80030d0 <_ZN15Screen1ViewBaseC1Ev+0x184>)
 8002fde:	f884 b112 	strb.w	fp, [r4, #274]	; 0x112
        touchable = touch;
 8002fe2:	f04f 0201 	mov.w	r2, #1
    __background.setPosition(0, 0, 800, 480);
 8002fe6:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
 8002fea:	e9c4 3547 	strd	r3, r5, [r4, #284]	; 0x11c
 8002fee:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002ff2:	f8a4 a10e 	strh.w	sl, [r4, #270]	; 0x10e
 8002ff6:	462a      	mov	r2, r5
 8002ff8:	4629      	mov	r1, r5
 8002ffa:	4640      	mov	r0, r8
 8002ffc:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8003000:	f884 510c 	strb.w	r5, [r4, #268]	; 0x10c
 8003004:	f8cd b000 	str.w	fp, [sp]
 8003008:	f44f 7348 	mov.w	r3, #800	; 0x320
 800300c:	f7ff ff64 	bl	8002ed8 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8003010:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003014:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 8003016:	462a      	mov	r2, r5
 8003018:	f44f 7348 	mov.w	r3, #800	; 0x320
 800301c:	4629      	mov	r1, r5
 800301e:	4648      	mov	r0, r9
 8003020:	f8cd b000 	str.w	fp, [sp]
 8003024:	f7ff ff58 	bl	8002ed8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003028:	f8c4 a094 	str.w	sl, [r4, #148]	; 0x94
    textArea1.setXY(217, 173);
 800302c:	22ad      	movs	r2, #173	; 0xad
 800302e:	4630      	mov	r0, r6
 8003030:	21d9      	movs	r1, #217	; 0xd9
 8003032:	f7ff ff44 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003036:	f10d 0a10 	add.w	sl, sp, #16
        this->color = color;
 800303a:	4b26      	ldr	r3, [pc, #152]	; (80030d4 <_ZN15Screen1ViewBaseC1Ev+0x188>)
 800303c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003040:	4631      	mov	r1, r6
 8003042:	4650      	mov	r0, sl
        linespace = space;
 8003044:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003048:	f008 fdb4 	bl	800bbb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800304c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8003050:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003054:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003058:	4b1a      	ldr	r3, [pc, #104]	; (80030c4 <_ZN15Screen1ViewBaseC1Ev+0x178>)
 800305a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2J9F));
 800305c:	a90a      	add	r1, sp, #40	; 0x28
 800305e:	4630      	mov	r0, r6
 8003060:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8003064:	f009 f8fa 	bl	800c25c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    button1.setXY(315, 247);
 8003068:	4638      	mov	r0, r7
 800306a:	22f7      	movs	r2, #247	; 0xf7
 800306c:	f240 113b 	movw	r1, #315	; 0x13b
 8003070:	f7ff ff25 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003074:	aa0a      	add	r2, sp, #40	; 0x28
 8003076:	f04f 0301 	mov.w	r3, #1
 800307a:	a909      	add	r1, sp, #36	; 0x24
 800307c:	4638      	mov	r0, r7
 800307e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003082:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003086:	f009 f947 	bl	800c318 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 800308a:	f504 738a 	add.w	r3, r4, #276	; 0x114
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800308e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003092:	1d20      	adds	r0, r4, #4
 8003094:	4641      	mov	r1, r8
 8003096:	9003      	str	r0, [sp, #12]
 8003098:	f007 f9f6 	bl	800a488 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800309c:	9803      	ldr	r0, [sp, #12]
 800309e:	4649      	mov	r1, r9
 80030a0:	f007 f9f2 	bl	800a488 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030a4:	9803      	ldr	r0, [sp, #12]
 80030a6:	4631      	mov	r1, r6
 80030a8:	f007 f9ee 	bl	800a488 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030ac:	9803      	ldr	r0, [sp, #12]
 80030ae:	4639      	mov	r1, r7
 80030b0:	f007 f9ea 	bl	800a488 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030b4:	4620      	mov	r0, r4
 80030b6:	b00d      	add	sp, #52	; 0x34
 80030b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030bc:	0801f320 	.word	0x0801f320
 80030c0:	08020388 	.word	0x08020388
 80030c4:	0801ee90 	.word	0x0801ee90
 80030c8:	08020514 	.word	0x08020514
 80030cc:	0801f308 	.word	0x0801f308
 80030d0:	08002eaf 	.word	0x08002eaf
 80030d4:	ff02075d 	.word	0xff02075d

080030d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80030d8:	4770      	bx	lr
	...

080030dc <_Z23getFont_verdana_10_4bppv>:
{
 80030dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80030de:	4d15      	ldr	r5, [pc, #84]	; (8003134 <_Z23getFont_verdana_10_4bppv+0x58>)
 80030e0:	782c      	ldrb	r4, [r5, #0]
 80030e2:	f3bf 8f5b 	dmb	ish
 80030e6:	f014 0401 	ands.w	r4, r4, #1
{
 80030ea:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80030ec:	d11e      	bne.n	800312c <_Z23getFont_verdana_10_4bppv+0x50>
 80030ee:	4628      	mov	r0, r5
 80030f0:	f019 fcb8 	bl	801ca64 <__cxa_guard_acquire>
 80030f4:	b1d0      	cbz	r0, 800312c <_Z23getFont_verdana_10_4bppv+0x50>
 80030f6:	233f      	movs	r3, #63	; 0x3f
 80030f8:	9307      	str	r3, [sp, #28]
 80030fa:	4b0f      	ldr	r3, [pc, #60]	; (8003138 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80030fc:	9306      	str	r3, [sp, #24]
 80030fe:	4b0f      	ldr	r3, [pc, #60]	; (800313c <_Z23getFont_verdana_10_4bppv+0x60>)
 8003100:	490f      	ldr	r1, [pc, #60]	; (8003140 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003102:	4810      	ldr	r0, [pc, #64]	; (8003144 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003104:	9408      	str	r4, [sp, #32]
 8003106:	2201      	movs	r2, #1
 8003108:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800310c:	2304      	movs	r3, #4
 800310e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003112:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003116:	230a      	movs	r3, #10
 8003118:	9403      	str	r4, [sp, #12]
 800311a:	9400      	str	r4, [sp, #0]
 800311c:	f7ff fe36 	bl	8002d8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003120:	4809      	ldr	r0, [pc, #36]	; (8003148 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003122:	f01a fa65 	bl	801d5f0 <atexit>
 8003126:	4628      	mov	r0, r5
 8003128:	f019 fca8 	bl	801ca7c <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800312c:	4805      	ldr	r0, [pc, #20]	; (8003144 <_Z23getFont_verdana_10_4bppv+0x68>)
 800312e:	b00d      	add	sp, #52	; 0x34
 8003130:	bd30      	pop	{r4, r5, pc}
 8003132:	bf00      	nop
 8003134:	200015e4 	.word	0x200015e4
 8003138:	0802215c 	.word	0x0802215c
 800313c:	0802218c 	.word	0x0802218c
 8003140:	90014f18 	.word	0x90014f18
 8003144:	200015e8 	.word	0x200015e8
 8003148:	080030d9 	.word	0x080030d9

0800314c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800314c:	4770      	bx	lr
	...

08003150 <_Z23getFont_verdana_20_4bppv>:
{
 8003150:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003152:	4d15      	ldr	r5, [pc, #84]	; (80031a8 <_Z23getFont_verdana_20_4bppv+0x58>)
 8003154:	782c      	ldrb	r4, [r5, #0]
 8003156:	f3bf 8f5b 	dmb	ish
 800315a:	f014 0401 	ands.w	r4, r4, #1
{
 800315e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003160:	d11e      	bne.n	80031a0 <_Z23getFont_verdana_20_4bppv+0x50>
 8003162:	4628      	mov	r0, r5
 8003164:	f019 fc7e 	bl	801ca64 <__cxa_guard_acquire>
 8003168:	b1d0      	cbz	r0, 80031a0 <_Z23getFont_verdana_20_4bppv+0x50>
 800316a:	233f      	movs	r3, #63	; 0x3f
 800316c:	9307      	str	r3, [sp, #28]
 800316e:	4b0f      	ldr	r3, [pc, #60]	; (80031ac <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003170:	9306      	str	r3, [sp, #24]
 8003172:	4b0f      	ldr	r3, [pc, #60]	; (80031b0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8003174:	490f      	ldr	r1, [pc, #60]	; (80031b4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003176:	4810      	ldr	r0, [pc, #64]	; (80031b8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003178:	9408      	str	r4, [sp, #32]
 800317a:	2201      	movs	r2, #1
 800317c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003180:	2304      	movs	r3, #4
 8003182:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003186:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800318a:	2314      	movs	r3, #20
 800318c:	9403      	str	r4, [sp, #12]
 800318e:	9400      	str	r4, [sp, #0]
 8003190:	f7ff fdfc 	bl	8002d8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003194:	4809      	ldr	r0, [pc, #36]	; (80031bc <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003196:	f01a fa2b 	bl	801d5f0 <atexit>
 800319a:	4628      	mov	r0, r5
 800319c:	f019 fc6e 	bl	801ca7c <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80031a0:	4805      	ldr	r0, [pc, #20]	; (80031b8 <_Z23getFont_verdana_20_4bppv+0x68>)
 80031a2:	b00d      	add	sp, #52	; 0x34
 80031a4:	bd30      	pop	{r4, r5, pc}
 80031a6:	bf00      	nop
 80031a8:	20001610 	.word	0x20001610
 80031ac:	08022160 	.word	0x08022160
 80031b0:	08022190 	.word	0x08022190
 80031b4:	90014f28 	.word	0x90014f28
 80031b8:	20001614 	.word	0x20001614
 80031bc:	0800314d 	.word	0x0800314d

080031c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 16, 40, 8, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80031c0:	4770      	bx	lr
	...

080031c4 <_Z23getFont_verdana_40_4bppv>:
{
 80031c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 16, 40, 8, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80031c6:	4d16      	ldr	r5, [pc, #88]	; (8003220 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80031c8:	782c      	ldrb	r4, [r5, #0]
 80031ca:	f3bf 8f5b 	dmb	ish
 80031ce:	f014 0401 	ands.w	r4, r4, #1
{
 80031d2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 16, 40, 8, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80031d4:	d120      	bne.n	8003218 <_Z23getFont_verdana_40_4bppv+0x54>
 80031d6:	4628      	mov	r0, r5
 80031d8:	f019 fc44 	bl	801ca64 <__cxa_guard_acquire>
 80031dc:	b1e0      	cbz	r0, 8003218 <_Z23getFont_verdana_40_4bppv+0x54>
 80031de:	233f      	movs	r3, #63	; 0x3f
 80031e0:	9307      	str	r3, [sp, #28]
 80031e2:	4b10      	ldr	r3, [pc, #64]	; (8003224 <_Z23getFont_verdana_40_4bppv+0x60>)
 80031e4:	9306      	str	r3, [sp, #24]
 80031e6:	4b10      	ldr	r3, [pc, #64]	; (8003228 <_Z23getFont_verdana_40_4bppv+0x64>)
 80031e8:	9305      	str	r3, [sp, #20]
 80031ea:	2301      	movs	r3, #1
 80031ec:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80031f0:	9302      	str	r3, [sp, #8]
 80031f2:	2204      	movs	r2, #4
 80031f4:	2308      	movs	r3, #8
 80031f6:	e9cd 3200 	strd	r3, r2, [sp]
 80031fa:	490c      	ldr	r1, [pc, #48]	; (800322c <_Z23getFont_verdana_40_4bppv+0x68>)
 80031fc:	480c      	ldr	r0, [pc, #48]	; (8003230 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80031fe:	9408      	str	r4, [sp, #32]
 8003200:	2328      	movs	r3, #40	; 0x28
 8003202:	2210      	movs	r2, #16
 8003204:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003208:	f7ff fdc0 	bl	8002d8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800320c:	4809      	ldr	r0, [pc, #36]	; (8003234 <_Z23getFont_verdana_40_4bppv+0x70>)
 800320e:	f01a f9ef 	bl	801d5f0 <atexit>
 8003212:	4628      	mov	r0, r5
 8003214:	f019 fc32 	bl	801ca7c <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003218:	4805      	ldr	r0, [pc, #20]	; (8003230 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800321a:	b00d      	add	sp, #52	; 0x34
 800321c:	bd30      	pop	{r4, r5, pc}
 800321e:	bf00      	nop
 8003220:	2000163c 	.word	0x2000163c
 8003224:	08022164 	.word	0x08022164
 8003228:	08022194 	.word	0x08022194
 800322c:	90014f38 	.word	0x90014f38
 8003230:	20001640 	.word	0x20001640
 8003234:	080031c1 	.word	0x080031c1

08003238 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003238:	2000      	movs	r0, #0
 800323a:	4770      	bx	lr

0800323c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800323c:	2000      	movs	r0, #0
 800323e:	4770      	bx	lr

08003240 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003240:	b40e      	push	{r1, r2, r3}
 8003242:	b503      	push	{r0, r1, lr}
 8003244:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003246:	2100      	movs	r1, #0
{
 8003248:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800324c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800324e:	f00b fcb1 	bl	800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003252:	b002      	add	sp, #8
 8003254:	f85d eb04 	ldr.w	lr, [sp], #4
 8003258:	b003      	add	sp, #12
 800325a:	4770      	bx	lr

0800325c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800325c:	b40c      	push	{r2, r3}
 800325e:	b507      	push	{r0, r1, r2, lr}
 8003260:	ab04      	add	r3, sp, #16
 8003262:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003266:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003268:	f00b fca4 	bl	800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800326c:	b003      	add	sp, #12
 800326e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003272:	b002      	add	sp, #8
 8003274:	4770      	bx	lr
	...

08003278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003278:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800327a:	b510      	push	{r4, lr}
 800327c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800327e:	b373      	cbz	r3, 80032de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003280:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8003282:	b92b      	cbnz	r3, 8003290 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003284:	4b18      	ldr	r3, [pc, #96]	; (80032e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003286:	4a19      	ldr	r2, [pc, #100]	; (80032ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003288:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800328a:	4819      	ldr	r0, [pc, #100]	; (80032f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800328c:	f01a f992 	bl	801d5b4 <__assert_func>
            return buffer[pos];
 8003290:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8003292:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003296:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8003298:	b30b      	cbz	r3, 80032de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800329a:	f00c ff91 	bl	80101c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800329e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80032a0:	2b01      	cmp	r3, #1
 80032a2:	d803      	bhi.n	80032ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80032a4:	4b13      	ldr	r3, [pc, #76]	; (80032f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80032a6:	4a14      	ldr	r2, [pc, #80]	; (80032f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80032a8:	21c5      	movs	r1, #197	; 0xc5
 80032aa:	e7ee      	b.n	800328a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80032ac:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80032ae:	1c53      	adds	r3, r2, #1
 80032b0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80032b2:	2b09      	cmp	r3, #9
 80032b4:	4619      	mov	r1, r3
 80032b6:	bf88      	it	hi
 80032b8:	f1a3 010a 	subhi.w	r1, r3, #10
 80032bc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80032c0:	f640 103f 	movw	r0, #2367	; 0x93f
 80032c4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80032c6:	4281      	cmp	r1, r0
 80032c8:	d109      	bne.n	80032de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80032ca:	2b0a      	cmp	r3, #10
 80032cc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80032d0:	bf28      	it	cs
 80032d2:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80032d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80032d8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80032da:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80032dc:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80032de:	4620      	mov	r0, r4
}
 80032e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80032e4:	f00c be50 	b.w	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80032e8:	0801f350 	.word	0x0801f350
 80032ec:	0801f359 	.word	0x0801f359
 80032f0:	0801f404 	.word	0x0801f404
 80032f4:	0801f44e 	.word	0x0801f44e
 80032f8:	0801f45c 	.word	0x0801f45c

080032fc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80032fc:	f00c bdfc 	b.w	800fef8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003300 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003300:	b510      	push	{r4, lr}
 8003302:	b086      	sub	sp, #24
 8003304:	ac02      	add	r4, sp, #8
 8003306:	e884 0006 	stmia.w	r4, {r1, r2}
 800330a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800330c:	ab0a      	add	r3, sp, #40	; 0x28
 800330e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003310:	9301      	str	r3, [sp, #4]
 8003312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003314:	9300      	str	r3, [sp, #0]
 8003316:	4621      	mov	r1, r4
 8003318:	9b08      	ldr	r3, [sp, #32]
 800331a:	f00a f901 	bl	800d520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800331e:	b006      	add	sp, #24
 8003320:	bd10      	pop	{r4, pc}
	...

08003324 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003324:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003326:	bb18      	cbnz	r0, 8003370 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003328:	4b12      	ldr	r3, [pc, #72]	; (8003374 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800332a:	4813      	ldr	r0, [pc, #76]	; (8003378 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	4913      	ldr	r1, [pc, #76]	; (800337c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003330:	b1b3      	cbz	r3, 8003360 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003332:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003334:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003336:	441a      	add	r2, r3
 8003338:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800333a:	685a      	ldr	r2, [r3, #4]
 800333c:	441a      	add	r2, r3
 800333e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003340:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003342:	4b0f      	ldr	r3, [pc, #60]	; (8003380 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003344:	2200      	movs	r2, #0
 8003346:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003348:	f000 f838 	bl	80033bc <_ZN17TypedTextDatabase8getFontsEv>
 800334c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800334e:	f000 f833 	bl	80033b8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003352:	4b0c      	ldr	r3, [pc, #48]	; (8003384 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003354:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003356:	4b0c      	ldr	r3, [pc, #48]	; (8003388 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003358:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800335a:	4b0c      	ldr	r3, [pc, #48]	; (800338c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800335c:	8018      	strh	r0, [r3, #0]
    }
}
 800335e:	e007      	b.n	8003370 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003360:	4b0b      	ldr	r3, [pc, #44]	; (8003390 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003362:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003364:	4b0b      	ldr	r3, [pc, #44]	; (8003394 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003366:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003368:	4b0b      	ldr	r3, [pc, #44]	; (8003398 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800336a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800336c:	2c00      	cmp	r4, #0
 800336e:	d1e8      	bne.n	8003342 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003370:	bd38      	pop	{r3, r4, r5, pc}
 8003372:	bf00      	nop
 8003374:	20001668 	.word	0x20001668
 8003378:	2000166c 	.word	0x2000166c
 800337c:	20001670 	.word	0x20001670
 8003380:	20001674 	.word	0x20001674
 8003384:	2000c01c 	.word	0x2000c01c
 8003388:	2000c024 	.word	0x2000c024
 800338c:	2000c020 	.word	0x2000c020
 8003390:	9001501c 	.word	0x9001501c
 8003394:	90015018 	.word	0x90015018
 8003398:	90015044 	.word	0x90015044

0800339c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800339c:	4b04      	ldr	r3, [pc, #16]	; (80033b0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80033a4:	4b03      	ldr	r3, [pc, #12]	; (80033b4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80033a6:	681b      	ldr	r3, [r3, #0]
}
 80033a8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80033ac:	4770      	bx	lr
 80033ae:	bf00      	nop
 80033b0:	20001670 	.word	0x20001670
 80033b4:	2000166c 	.word	0x2000166c

080033b8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80033b8:	2001      	movs	r0, #1
 80033ba:	4770      	bx	lr

080033bc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80033bc:	4800      	ldr	r0, [pc, #0]	; (80033c0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80033be:	4770      	bx	lr
 80033c0:	20001678 	.word	0x20001678

080033c4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80033c4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80033c6:	f7ff fec3 	bl	8003150 <_Z23getFont_verdana_20_4bppv>
};
 80033ca:	4c04      	ldr	r4, [pc, #16]	; (80033dc <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80033cc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80033ce:	f7ff fef9 	bl	80031c4 <_Z23getFont_verdana_40_4bppv>
};
 80033d2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80033d4:	f7ff fe82 	bl	80030dc <_Z23getFont_verdana_10_4bppv>
};
 80033d8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80033da:	bd10      	pop	{r4, pc}
 80033dc:	20001678 	.word	0x20001678

080033e0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80033e0:	4770      	bx	lr

080033e2 <_ZN19FrontendApplicationD0Ev>:
 80033e2:	b510      	push	{r4, lr}
 80033e4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80033e8:	4604      	mov	r4, r0
 80033ea:	f019 fb39 	bl	801ca60 <_ZdlPvj>
 80033ee:	4620      	mov	r0, r4
 80033f0:	bd10      	pop	{r4, pc}

080033f2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80033f2:	b510      	push	{r4, lr}
 80033f4:	4604      	mov	r4, r0
    {
        model.tick();
 80033f6:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80033fa:	f000 f812 	bl	8003422 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80033fe:	4620      	mov	r0, r4
    }
 8003400:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003404:	f00a bbea 	b.w	800dbdc <_ZN8touchgfx11Application15handleTickEventEv>

08003408 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003408:	b510      	push	{r4, lr}
 800340a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800340c:	f7ff fc4c 	bl	8002ca8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003410:	4b01      	ldr	r3, [pc, #4]	; (8003418 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003412:	6023      	str	r3, [r4, #0]
{

}
 8003414:	4620      	mov	r0, r4
 8003416:	bd10      	pop	{r4, pc}
 8003418:	0801f538 	.word	0x0801f538

0800341c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800341c:	2200      	movs	r2, #0
 800341e:	6002      	str	r2, [r0, #0]
{

}
 8003420:	4770      	bx	lr

08003422 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003422:	4770      	bx	lr

08003424 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8003424:	4770      	bx	lr

08003426 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003426:	3804      	subs	r0, #4
 8003428:	4770      	bx	lr

0800342a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800342a:	4770      	bx	lr

0800342c <_ZN16Screen1PresenterD0Ev>:
 800342c:	b510      	push	{r4, lr}
 800342e:	2110      	movs	r1, #16
 8003430:	4604      	mov	r4, r0
 8003432:	f019 fb15 	bl	801ca60 <_ZdlPvj>
 8003436:	4620      	mov	r0, r4
 8003438:	bd10      	pop	{r4, pc}

0800343a <_ZThn4_N16Screen1PresenterD0Ev>:
 800343a:	f1a0 0004 	sub.w	r0, r0, #4
 800343e:	e7f5      	b.n	800342c <_ZN16Screen1PresenterD0Ev>

08003440 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8003440:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8003442:	2200      	movs	r2, #0
 8003444:	6082      	str	r2, [r0, #8]
    : view(v)
 8003446:	4a04      	ldr	r2, [pc, #16]	; (8003458 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8003448:	60c1      	str	r1, [r0, #12]
 800344a:	f102 0408 	add.w	r4, r2, #8
 800344e:	3220      	adds	r2, #32
 8003450:	6004      	str	r4, [r0, #0]
 8003452:	6042      	str	r2, [r0, #4]
}
 8003454:	bd10      	pop	{r4, pc}
 8003456:	bf00      	nop
 8003458:	0801f57c 	.word	0x0801f57c

0800345c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800345c:	4770      	bx	lr

0800345e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800345e:	4770      	bx	lr

08003460 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003460:	f7ff bcf2 	b.w	8002e48 <_ZN15Screen1ViewBase11setupScreenEv>

08003464 <_ZN11Screen1ViewD0Ev>:
 8003464:	b510      	push	{r4, lr}
 8003466:	f44f 7192 	mov.w	r1, #292	; 0x124
 800346a:	4604      	mov	r4, r0
 800346c:	f019 faf8 	bl	801ca60 <_ZdlPvj>
 8003470:	4620      	mov	r0, r4
 8003472:	bd10      	pop	{r4, pc}

08003474 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003474:	b510      	push	{r4, lr}
 8003476:	4604      	mov	r4, r0
 8003478:	f7ff fd68 	bl	8002f4c <_ZN15Screen1ViewBaseC1Ev>
 800347c:	4b01      	ldr	r3, [pc, #4]	; (8003484 <_ZN11Screen1ViewC1Ev+0x10>)
 800347e:	6023      	str	r3, [r4, #0]
}
 8003480:	4620      	mov	r0, r4
 8003482:	bd10      	pop	{r4, pc}
 8003484:	0801f5ac 	.word	0x0801f5ac

08003488 <_Z7Set_LEDiiii>:
{
 8003488:	b510      	push	{r4, lr}
	LED_Data[LEDnum][0] = LEDnum;
 800348a:	4c04      	ldr	r4, [pc, #16]	; (800349c <_Z7Set_LEDiiii+0x14>)
 800348c:	f804 0020 	strb.w	r0, [r4, r0, lsl #2]
	LED_Data[LEDnum][1] = Green;
 8003490:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8003494:	7042      	strb	r2, [r0, #1]
	LED_Data[LEDnum][2] = Red;
 8003496:	7081      	strb	r1, [r0, #2]
	LED_Data[LEDnum][3] = Blue;
 8003498:	70c3      	strb	r3, [r0, #3]
}
 800349a:	bd10      	pop	{r4, pc}
 800349c:	20001684 	.word	0x20001684

080034a0 <_Z14Set_Brightnessi>:
			float angle = 90-brightness;  // in degrees
 80034a0:	282d      	cmp	r0, #45	; 0x2d
 80034a2:	bfa8      	it	ge
 80034a4:	202d      	movge	r0, #45	; 0x2d
 80034a6:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
			angle = angle*PI / 180;  // in rad
 80034aa:	ee07 0a90 	vmov	s15, r0
 80034ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 80034b2:	b510      	push	{r4, lr}
			angle = angle*PI / 180;  // in rad
 80034b4:	ee17 0a90 	vmov	r0, s15
 80034b8:	f7fd f856 	bl	8000568 <__aeabi_f2d>
 80034bc:	a319      	add	r3, pc, #100	; (adr r3, 8003524 <_Z14Set_Brightnessi+0x84>)
 80034be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034c2:	f7fd f8a9 	bl	8000618 <__aeabi_dmul>
 80034c6:	2200      	movs	r2, #0
 80034c8:	4b13      	ldr	r3, [pc, #76]	; (8003518 <_Z14Set_Brightnessi+0x78>)
 80034ca:	f7fd f9cf 	bl	800086c <__aeabi_ddiv>
 80034ce:	f7fd fab5 	bl	8000a3c <__aeabi_d2f>
  using ::tan;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  tan(float __x)
  { return __builtin_tanf(__x); }
 80034d2:	ee00 0a10 	vmov	s0, r0
 80034d6:	f019 faeb 	bl	801cab0 <tanf>
 80034da:	4910      	ldr	r1, [pc, #64]	; (800351c <_Z14Set_Brightnessi+0x7c>)
 80034dc:	4a10      	ldr	r2, [pc, #64]	; (8003520 <_Z14Set_Brightnessi+0x80>)
	for (int i=0; i<MAX_LED; i++)
 80034de:	2000      	movs	r0, #0
		LED_Mod[i][0] = LED_Data[i][0];
 80034e0:	780b      	ldrb	r3, [r1, #0]
 80034e2:	7013      	strb	r3, [r2, #0]
		for (int j=1; j<4; j++)
 80034e4:	2301      	movs	r3, #1
			LED_Mod[i][j] = (LED_Data[i][j])/(tan(angle));
 80034e6:	5ccc      	ldrb	r4, [r1, r3]
 80034e8:	ee07 4a10 	vmov	s14, r4
 80034ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80034f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80034f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80034f8:	ee17 4a90 	vmov	r4, s15
 80034fc:	54d4      	strb	r4, [r2, r3]
		for (int j=1; j<4; j++)
 80034fe:	3301      	adds	r3, #1
 8003500:	2b04      	cmp	r3, #4
 8003502:	d1f0      	bne.n	80034e6 <_Z14Set_Brightnessi+0x46>
	for (int i=0; i<MAX_LED; i++)
 8003504:	3001      	adds	r0, #1
 8003506:	2875      	cmp	r0, #117	; 0x75
 8003508:	f101 0104 	add.w	r1, r1, #4
 800350c:	f102 0204 	add.w	r2, r2, #4
 8003510:	d1e6      	bne.n	80034e0 <_Z14Set_Brightnessi+0x40>
}
 8003512:	bd10      	pop	{r4, pc}
 8003514:	f3af 8000 	nop.w
 8003518:	40668000 	.word	0x40668000
 800351c:	20001684 	.word	0x20001684
 8003520:	20001858 	.word	0x20001858
 8003524:	53c8d4f1 	.word	0x53c8d4f1
 8003528:	400921fb 	.word	0x400921fb

0800352c <_Z11WS2812_Sendv>:
{
 800352c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800352e:	4a18      	ldr	r2, [pc, #96]	; (8003590 <_Z11WS2812_Sendv+0x64>)
 8003530:	4c18      	ldr	r4, [pc, #96]	; (8003594 <_Z11WS2812_Sendv+0x68>)
	uint32_t indx=0;
 8003532:	2000      	movs	r0, #0
			if (color&(1<<i))
 8003534:	2701      	movs	r7, #1
	for (int i= 0; i<MAX_LED; i++)
 8003536:	f640 26f8 	movw	r6, #2808	; 0xaf8
		color = ((LED_Mod[i][1]<<16) | (LED_Mod[i][2]<<8) | (LED_Mod[i][3]));
 800353a:	7893      	ldrb	r3, [r2, #2]
 800353c:	7851      	ldrb	r1, [r2, #1]
 800353e:	021b      	lsls	r3, r3, #8
 8003540:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8003544:	78d1      	ldrb	r1, [r2, #3]
 8003546:	4625      	mov	r5, r4
 8003548:	430b      	orrs	r3, r1
		for (int i=23; i>=0; i--)
 800354a:	2117      	movs	r1, #23
			if (color&(1<<i))
 800354c:	fa07 fc01 	lsl.w	ip, r7, r1
			else pwmData[indx] = 75;  // 1/3 of 225
 8003550:	ea1c 0f03 	tst.w	ip, r3
 8003554:	bf14      	ite	ne
 8003556:	f04f 0c96 	movne.w	ip, #150	; 0x96
 800355a:	f04f 0c4b 	moveq.w	ip, #75	; 0x4b
		for (int i=23; i>=0; i--)
 800355e:	3901      	subs	r1, #1
 8003560:	f825 cb02 	strh.w	ip, [r5], #2
 8003564:	d2f2      	bcs.n	800354c <_Z11WS2812_Sendv+0x20>
			indx++;
 8003566:	3018      	adds	r0, #24
	for (int i= 0; i<MAX_LED; i++)
 8003568:	42b0      	cmp	r0, r6
 800356a:	f102 0204 	add.w	r2, r2, #4
 800356e:	f104 0430 	add.w	r4, r4, #48	; 0x30
 8003572:	d1e2      	bne.n	800353a <_Z11WS2812_Sendv+0xe>
		pwmData[indx] = 0;
 8003574:	2264      	movs	r2, #100	; 0x64
 8003576:	2100      	movs	r1, #0
 8003578:	4807      	ldr	r0, [pc, #28]	; (8003598 <_Z11WS2812_Sendv+0x6c>)
 800357a:	f01a f8a7 	bl	801d6cc <memset>
	pwm_on(pwmData, indx);
 800357e:	4805      	ldr	r0, [pc, #20]	; (8003594 <_Z11WS2812_Sendv+0x68>)
 8003580:	f640 312a 	movw	r1, #2858	; 0xb2a
 8003584:	f7fe fb74 	bl	8001c70 <pwm_on>
	datasentflag = 0;
 8003588:	4b04      	ldr	r3, [pc, #16]	; (800359c <_Z11WS2812_Sendv+0x70>)
 800358a:	2200      	movs	r2, #0
 800358c:	601a      	str	r2, [r3, #0]
}
 800358e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003590:	20001858 	.word	0x20001858
 8003594:	20001a30 	.word	0x20001a30
 8003598:	20003020 	.word	0x20003020
 800359c:	20001a2c 	.word	0x20001a2c

080035a0 <HAL_TIM_PWM_PulseFinishedCallback>:
{
 80035a0:	b508      	push	{r3, lr}
	pwm_off();
 80035a2:	f7fe fb6d 	bl	8001c80 <pwm_off>
	datasentflag=1;
 80035a6:	4b02      	ldr	r3, [pc, #8]	; (80035b0 <HAL_TIM_PWM_PulseFinishedCallback+0x10>)
 80035a8:	2201      	movs	r2, #1
 80035aa:	601a      	str	r2, [r3, #0]
}
 80035ac:	bd08      	pop	{r3, pc}
 80035ae:	bf00      	nop
 80035b0:	20001a2c 	.word	0x20001a2c

080035b4 <_Z10tur_on_ledv>:
void tur_on_led(){
 80035b4:	b510      	push	{r4, lr}
	for(int i = 0; i < MAX_LED; i++){
 80035b6:	2400      	movs	r4, #0
		if(i%2 != 0){
 80035b8:	f014 0301 	ands.w	r3, r4, #1
			Set_LED(i, 225, 255, 255);
 80035bc:	bf1d      	ittte	ne
 80035be:	23ff      	movne	r3, #255	; 0xff
 80035c0:	461a      	movne	r2, r3
 80035c2:	21e1      	movne	r1, #225	; 0xe1
			Set_LED(i, 0, 0, 0);
 80035c4:	461a      	moveq	r2, r3
 80035c6:	bf08      	it	eq
 80035c8:	4619      	moveq	r1, r3
 80035ca:	4620      	mov	r0, r4
	for(int i = 0; i < MAX_LED; i++){
 80035cc:	3401      	adds	r4, #1
			Set_LED(i, 0, 0, 0);
 80035ce:	f7ff ff5b 	bl	8003488 <_Z7Set_LEDiiii>
	for(int i = 0; i < MAX_LED; i++){
 80035d2:	2c75      	cmp	r4, #117	; 0x75
 80035d4:	d1f0      	bne.n	80035b8 <_Z10tur_on_ledv+0x4>
	Set_Brightness(45);
 80035d6:	202d      	movs	r0, #45	; 0x2d
 80035d8:	f7ff ff62 	bl	80034a0 <_Z14Set_Brightnessi>
}
 80035dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	WS2812_Send();
 80035e0:	f7ff bfa4 	b.w	800352c <_Z11WS2812_Sendv>

080035e4 <_ZN11Screen1View3ledEv>:

void Screen1View::led()
{
    tur_on_led();
 80035e4:	f7ff bfe6 	b.w	80035b4 <_Z10tur_on_ledv>

080035e8 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80035e8:	4770      	bx	lr

080035ea <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80035ea:	2000      	movs	r0, #0
 80035ec:	4770      	bx	lr

080035ee <ft6x06_ReadID>:
{
 80035ee:	b510      	push	{r4, lr}
 80035f0:	4604      	mov	r4, r0
  TS_IO_Init();
 80035f2:	f000 fb75 	bl	8003ce0 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80035f6:	21a8      	movs	r1, #168	; 0xa8
 80035f8:	b2e0      	uxtb	r0, r4
 80035fa:	f000 fb8d 	bl	8003d18 <TS_IO_Read>
}
 80035fe:	b280      	uxth	r0, r0
 8003600:	bd10      	pop	{r4, pc}
	...

08003604 <ft6x06_TS_DetectTouch>:
{
 8003604:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003606:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003608:	2102      	movs	r1, #2
 800360a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800360c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003610:	f000 fb82 	bl	8003d18 <TS_IO_Read>
 8003614:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8003618:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800361c:	f003 030f 	and.w	r3, r3, #15
 8003620:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8003624:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003628:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800362a:	bf88      	it	hi
 800362c:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003630:	4b04      	ldr	r3, [pc, #16]	; (8003644 <ft6x06_TS_DetectTouch+0x40>)
 8003632:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8003636:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800363a:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800363c:	2200      	movs	r2, #0
 800363e:	709a      	strb	r2, [r3, #2]
}
 8003640:	b002      	add	sp, #8
 8003642:	bd10      	pop	{r4, pc}
 8003644:	20003086 	.word	0x20003086

08003648 <ft6x06_TS_GetXY>:
{
 8003648:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800364a:	4c15      	ldr	r4, [pc, #84]	; (80036a0 <ft6x06_TS_GetXY+0x58>)
{
 800364c:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800364e:	78a3      	ldrb	r3, [r4, #2]
 8003650:	7862      	ldrb	r2, [r4, #1]
 8003652:	429a      	cmp	r2, r3
{
 8003654:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003656:	d91f      	bls.n	8003698 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8003658:	b303      	cbz	r3, 800369c <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800365a:	2b01      	cmp	r3, #1
 800365c:	bf14      	ite	ne
 800365e:	2100      	movne	r1, #0
 8003660:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8003662:	2304      	movs	r3, #4
 8003664:	eb0d 0203 	add.w	r2, sp, r3
 8003668:	b2c0      	uxtb	r0, r0
 800366a:	f000 fb73 	bl	8003d54 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800366e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8003672:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8003676:	021b      	lsls	r3, r3, #8
 8003678:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800367c:	4313      	orrs	r3, r2
 800367e:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8003680:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003684:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003688:	021b      	lsls	r3, r3, #8
 800368a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800368e:	4313      	orrs	r3, r2
 8003690:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8003692:	78a3      	ldrb	r3, [r4, #2]
 8003694:	3301      	adds	r3, #1
 8003696:	70a3      	strb	r3, [r4, #2]
}
 8003698:	b002      	add	sp, #8
 800369a:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 800369c:	2103      	movs	r1, #3
 800369e:	e7e0      	b.n	8003662 <ft6x06_TS_GetXY+0x1a>
 80036a0:	20003086 	.word	0x20003086

080036a4 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80036a4:	2201      	movs	r2, #1
 80036a6:	21a4      	movs	r1, #164	; 0xa4
 80036a8:	b2c0      	uxtb	r0, r0
 80036aa:	f000 bb1b 	b.w	8003ce4 <TS_IO_Write>

080036ae <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80036ae:	2200      	movs	r2, #0
 80036b0:	21a4      	movs	r1, #164	; 0xa4
 80036b2:	b2c0      	uxtb	r0, r0
 80036b4:	f000 bb16 	b.w	8003ce4 <TS_IO_Write>

080036b8 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 80036b8:	f7ff bff9 	b.w	80036ae <ft6x06_TS_DisableIT>

080036bc <ft6x06_TS_ClearIT>:
 80036bc:	4770      	bx	lr
	...

080036c0 <ft6x06_Init>:
{  
 80036c0:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 80036c2:	4b09      	ldr	r3, [pc, #36]	; (80036e8 <ft6x06_Init+0x28>)
 80036c4:	781a      	ldrb	r2, [r3, #0]
 80036c6:	4290      	cmp	r0, r2
 80036c8:	d00a      	beq.n	80036e0 <ft6x06_Init+0x20>
 80036ca:	7859      	ldrb	r1, [r3, #1]
 80036cc:	4288      	cmp	r0, r1
 80036ce:	d007      	beq.n	80036e0 <ft6x06_Init+0x20>
 80036d0:	b10a      	cbz	r2, 80036d6 <ft6x06_Init+0x16>
 80036d2:	b929      	cbnz	r1, 80036e0 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80036d4:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 80036d6:	5498      	strb	r0, [r3, r2]
}
 80036d8:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 80036dc:	f000 bb00 	b.w	8003ce0 <TS_IO_Init>
}
 80036e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80036e4:	4770      	bx	lr
 80036e6:	bf00      	nop
 80036e8:	20003084 	.word	0x20003084

080036ec <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80036ec:	b538      	push	{r3, r4, r5, lr}
 80036ee:	4604      	mov	r4, r0
 80036f0:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80036f2:	2000      	movs	r0, #0
 80036f4:	49c9      	ldr	r1, [pc, #804]	; (8003a1c <OTM8009A_Init+0x330>)
 80036f6:	f7fd fded 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80036fa:	49c9      	ldr	r1, [pc, #804]	; (8003a20 <OTM8009A_Init+0x334>)
 80036fc:	2003      	movs	r0, #3
 80036fe:	f7fd fde9 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8003702:	49c8      	ldr	r1, [pc, #800]	; (8003a24 <OTM8009A_Init+0x338>)
 8003704:	2000      	movs	r0, #0
 8003706:	f7fd fde5 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800370a:	49c7      	ldr	r1, [pc, #796]	; (8003a28 <OTM8009A_Init+0x33c>)
 800370c:	2002      	movs	r0, #2
 800370e:	f7fd fde1 	bl	80012d4 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003712:	49c4      	ldr	r1, [pc, #784]	; (8003a24 <OTM8009A_Init+0x338>)
 8003714:	2000      	movs	r0, #0
 8003716:	f7fd fddd 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800371a:	49c4      	ldr	r1, [pc, #784]	; (8003a2c <OTM8009A_Init+0x340>)
 800371c:	2000      	movs	r0, #0
 800371e:	f7fd fdd9 	bl	80012d4 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003722:	200a      	movs	r0, #10
 8003724:	f000 fb2e 	bl	8003d84 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8003728:	49c1      	ldr	r1, [pc, #772]	; (8003a30 <OTM8009A_Init+0x344>)
 800372a:	2000      	movs	r0, #0
 800372c:	f7fd fdd2 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8003730:	49c0      	ldr	r1, [pc, #768]	; (8003a34 <OTM8009A_Init+0x348>)
 8003732:	2000      	movs	r0, #0
 8003734:	f7fd fdce 	bl	80012d4 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003738:	200a      	movs	r0, #10
 800373a:	f000 fb23 	bl	8003d84 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800373e:	49be      	ldr	r1, [pc, #760]	; (8003a38 <OTM8009A_Init+0x34c>)
 8003740:	2000      	movs	r0, #0
 8003742:	f7fd fdc7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8003746:	49bd      	ldr	r1, [pc, #756]	; (8003a3c <OTM8009A_Init+0x350>)
 8003748:	2000      	movs	r0, #0
 800374a:	f7fd fdc3 	bl	80012d4 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800374e:	49bc      	ldr	r1, [pc, #752]	; (8003a40 <OTM8009A_Init+0x354>)
 8003750:	2000      	movs	r0, #0
 8003752:	f7fd fdbf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003756:	49bb      	ldr	r1, [pc, #748]	; (8003a44 <OTM8009A_Init+0x358>)
 8003758:	2000      	movs	r0, #0
 800375a:	f7fd fdbb 	bl	80012d4 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800375e:	49ba      	ldr	r1, [pc, #744]	; (8003a48 <OTM8009A_Init+0x35c>)
 8003760:	2000      	movs	r0, #0
 8003762:	f7fd fdb7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8003766:	49b9      	ldr	r1, [pc, #740]	; (8003a4c <OTM8009A_Init+0x360>)
 8003768:	2000      	movs	r0, #0
 800376a:	f7fd fdb3 	bl	80012d4 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800376e:	49ab      	ldr	r1, [pc, #684]	; (8003a1c <OTM8009A_Init+0x330>)
 8003770:	2000      	movs	r0, #0
 8003772:	f7fd fdaf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8003776:	49b6      	ldr	r1, [pc, #728]	; (8003a50 <OTM8009A_Init+0x364>)
 8003778:	2000      	movs	r0, #0
 800377a:	f7fd fdab 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800377e:	49b5      	ldr	r1, [pc, #724]	; (8003a54 <OTM8009A_Init+0x368>)
 8003780:	2000      	movs	r0, #0
 8003782:	f7fd fda7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8003786:	49b4      	ldr	r1, [pc, #720]	; (8003a58 <OTM8009A_Init+0x36c>)
 8003788:	2000      	movs	r0, #0
 800378a:	f7fd fda3 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800378e:	49b3      	ldr	r1, [pc, #716]	; (8003a5c <OTM8009A_Init+0x370>)
 8003790:	2000      	movs	r0, #0
 8003792:	f7fd fd9f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8003796:	49b2      	ldr	r1, [pc, #712]	; (8003a60 <OTM8009A_Init+0x374>)
 8003798:	2000      	movs	r0, #0
 800379a:	f7fd fd9b 	bl	80012d4 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800379e:	49b1      	ldr	r1, [pc, #708]	; (8003a64 <OTM8009A_Init+0x378>)
 80037a0:	2000      	movs	r0, #0
 80037a2:	f7fd fd97 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 80037a6:	49b0      	ldr	r1, [pc, #704]	; (8003a68 <OTM8009A_Init+0x37c>)
 80037a8:	2000      	movs	r0, #0
 80037aa:	f7fd fd93 	bl	80012d4 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 80037ae:	49af      	ldr	r1, [pc, #700]	; (8003a6c <OTM8009A_Init+0x380>)
 80037b0:	2000      	movs	r0, #0
 80037b2:	f7fd fd8f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 80037b6:	49a3      	ldr	r1, [pc, #652]	; (8003a44 <OTM8009A_Init+0x358>)
 80037b8:	2000      	movs	r0, #0
 80037ba:	f7fd fd8b 	bl	80012d4 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80037be:	4997      	ldr	r1, [pc, #604]	; (8003a1c <OTM8009A_Init+0x330>)
 80037c0:	2000      	movs	r0, #0
 80037c2:	f7fd fd87 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 80037c6:	49aa      	ldr	r1, [pc, #680]	; (8003a70 <OTM8009A_Init+0x384>)
 80037c8:	2002      	movs	r0, #2
 80037ca:	f7fd fd83 	bl	80012d4 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 80037ce:	49a9      	ldr	r1, [pc, #676]	; (8003a74 <OTM8009A_Init+0x388>)
 80037d0:	2000      	movs	r0, #0
 80037d2:	f7fd fd7f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 80037d6:	49a8      	ldr	r1, [pc, #672]	; (8003a78 <OTM8009A_Init+0x38c>)
 80037d8:	2000      	movs	r0, #0
 80037da:	f7fd fd7b 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 80037de:	49a7      	ldr	r1, [pc, #668]	; (8003a7c <OTM8009A_Init+0x390>)
 80037e0:	2000      	movs	r0, #0
 80037e2:	f7fd fd77 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 80037e6:	49a6      	ldr	r1, [pc, #664]	; (8003a80 <OTM8009A_Init+0x394>)
 80037e8:	2000      	movs	r0, #0
 80037ea:	f7fd fd73 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 80037ee:	49a5      	ldr	r1, [pc, #660]	; (8003a84 <OTM8009A_Init+0x398>)
 80037f0:	2000      	movs	r0, #0
 80037f2:	f7fd fd6f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80037f6:	49a4      	ldr	r1, [pc, #656]	; (8003a88 <OTM8009A_Init+0x39c>)
 80037f8:	2000      	movs	r0, #0
 80037fa:	f7fd fd6b 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80037fe:	4995      	ldr	r1, [pc, #596]	; (8003a54 <OTM8009A_Init+0x368>)
 8003800:	2000      	movs	r0, #0
 8003802:	f7fd fd67 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8003806:	49a1      	ldr	r1, [pc, #644]	; (8003a8c <OTM8009A_Init+0x3a0>)
 8003808:	2000      	movs	r0, #0
 800380a:	f7fd fd63 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800380e:	4993      	ldr	r1, [pc, #588]	; (8003a5c <OTM8009A_Init+0x370>)
 8003810:	2000      	movs	r0, #0
 8003812:	f7fd fd5f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8003816:	499e      	ldr	r1, [pc, #632]	; (8003a90 <OTM8009A_Init+0x3a4>)
 8003818:	2000      	movs	r0, #0
 800381a:	f7fd fd5b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800381e:	499d      	ldr	r1, [pc, #628]	; (8003a94 <OTM8009A_Init+0x3a8>)
 8003820:	2000      	movs	r0, #0
 8003822:	f7fd fd57 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8003826:	499c      	ldr	r1, [pc, #624]	; (8003a98 <OTM8009A_Init+0x3ac>)
 8003828:	2002      	movs	r0, #2
 800382a:	f7fd fd53 	bl	80012d4 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800382e:	497d      	ldr	r1, [pc, #500]	; (8003a24 <OTM8009A_Init+0x338>)
 8003830:	2000      	movs	r0, #0
 8003832:	f7fd fd4f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8003836:	4999      	ldr	r1, [pc, #612]	; (8003a9c <OTM8009A_Init+0x3b0>)
 8003838:	2006      	movs	r0, #6
 800383a:	f7fd fd4b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800383e:	4998      	ldr	r1, [pc, #608]	; (8003aa0 <OTM8009A_Init+0x3b4>)
 8003840:	2000      	movs	r0, #0
 8003842:	f7fd fd47 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8003846:	4997      	ldr	r1, [pc, #604]	; (8003aa4 <OTM8009A_Init+0x3b8>)
 8003848:	200e      	movs	r0, #14
 800384a:	f7fd fd43 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800384e:	4996      	ldr	r1, [pc, #600]	; (8003aa8 <OTM8009A_Init+0x3bc>)
 8003850:	2000      	movs	r0, #0
 8003852:	f7fd fd3f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8003856:	4995      	ldr	r1, [pc, #596]	; (8003aac <OTM8009A_Init+0x3c0>)
 8003858:	200e      	movs	r0, #14
 800385a:	f7fd fd3b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800385e:	4994      	ldr	r1, [pc, #592]	; (8003ab0 <OTM8009A_Init+0x3c4>)
 8003860:	2000      	movs	r0, #0
 8003862:	f7fd fd37 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8003866:	4993      	ldr	r1, [pc, #588]	; (8003ab4 <OTM8009A_Init+0x3c8>)
 8003868:	200a      	movs	r0, #10
 800386a:	f7fd fd33 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800386e:	4992      	ldr	r1, [pc, #584]	; (8003ab8 <OTM8009A_Init+0x3cc>)
 8003870:	2000      	movs	r0, #0
 8003872:	f7fd fd2f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8003876:	4991      	ldr	r1, [pc, #580]	; (8003abc <OTM8009A_Init+0x3d0>)
 8003878:	2000      	movs	r0, #0
 800387a:	f7fd fd2b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800387e:	4969      	ldr	r1, [pc, #420]	; (8003a24 <OTM8009A_Init+0x338>)
 8003880:	2000      	movs	r0, #0
 8003882:	f7fd fd27 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8003886:	498e      	ldr	r1, [pc, #568]	; (8003ac0 <OTM8009A_Init+0x3d4>)
 8003888:	200a      	movs	r0, #10
 800388a:	f7fd fd23 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800388e:	498d      	ldr	r1, [pc, #564]	; (8003ac4 <OTM8009A_Init+0x3d8>)
 8003890:	2000      	movs	r0, #0
 8003892:	f7fd fd1f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8003896:	498c      	ldr	r1, [pc, #560]	; (8003ac8 <OTM8009A_Init+0x3dc>)
 8003898:	200f      	movs	r0, #15
 800389a:	f7fd fd1b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800389e:	4980      	ldr	r1, [pc, #512]	; (8003aa0 <OTM8009A_Init+0x3b4>)
 80038a0:	2000      	movs	r0, #0
 80038a2:	f7fd fd17 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 80038a6:	4989      	ldr	r1, [pc, #548]	; (8003acc <OTM8009A_Init+0x3e0>)
 80038a8:	200f      	movs	r0, #15
 80038aa:	f7fd fd13 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80038ae:	497e      	ldr	r1, [pc, #504]	; (8003aa8 <OTM8009A_Init+0x3bc>)
 80038b0:	2000      	movs	r0, #0
 80038b2:	f7fd fd0f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 80038b6:	4986      	ldr	r1, [pc, #536]	; (8003ad0 <OTM8009A_Init+0x3e4>)
 80038b8:	200a      	movs	r0, #10
 80038ba:	f7fd fd0b 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80038be:	497c      	ldr	r1, [pc, #496]	; (8003ab0 <OTM8009A_Init+0x3c4>)
 80038c0:	2000      	movs	r0, #0
 80038c2:	f7fd fd07 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 80038c6:	4983      	ldr	r1, [pc, #524]	; (8003ad4 <OTM8009A_Init+0x3e8>)
 80038c8:	200f      	movs	r0, #15
 80038ca:	f7fd fd03 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80038ce:	497a      	ldr	r1, [pc, #488]	; (8003ab8 <OTM8009A_Init+0x3cc>)
 80038d0:	2000      	movs	r0, #0
 80038d2:	f7fd fcff 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 80038d6:	4980      	ldr	r1, [pc, #512]	; (8003ad8 <OTM8009A_Init+0x3ec>)
 80038d8:	200f      	movs	r0, #15
 80038da:	f7fd fcfb 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 80038de:	497f      	ldr	r1, [pc, #508]	; (8003adc <OTM8009A_Init+0x3f0>)
 80038e0:	2000      	movs	r0, #0
 80038e2:	f7fd fcf7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 80038e6:	497e      	ldr	r1, [pc, #504]	; (8003ae0 <OTM8009A_Init+0x3f4>)
 80038e8:	200a      	movs	r0, #10
 80038ea:	f7fd fcf3 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80038ee:	497d      	ldr	r1, [pc, #500]	; (8003ae4 <OTM8009A_Init+0x3f8>)
 80038f0:	2000      	movs	r0, #0
 80038f2:	f7fd fcef 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80038f6:	497c      	ldr	r1, [pc, #496]	; (8003ae8 <OTM8009A_Init+0x3fc>)
 80038f8:	200a      	movs	r0, #10
 80038fa:	f7fd fceb 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80038fe:	4949      	ldr	r1, [pc, #292]	; (8003a24 <OTM8009A_Init+0x338>)
 8003900:	2000      	movs	r0, #0
 8003902:	f7fd fce7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8003906:	4979      	ldr	r1, [pc, #484]	; (8003aec <OTM8009A_Init+0x400>)
 8003908:	200a      	movs	r0, #10
 800390a:	f7fd fce3 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800390e:	496d      	ldr	r1, [pc, #436]	; (8003ac4 <OTM8009A_Init+0x3d8>)
 8003910:	2000      	movs	r0, #0
 8003912:	f7fd fcdf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8003916:	4976      	ldr	r1, [pc, #472]	; (8003af0 <OTM8009A_Init+0x404>)
 8003918:	200f      	movs	r0, #15
 800391a:	f7fd fcdb 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800391e:	4960      	ldr	r1, [pc, #384]	; (8003aa0 <OTM8009A_Init+0x3b4>)
 8003920:	2000      	movs	r0, #0
 8003922:	f7fd fcd7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8003926:	4973      	ldr	r1, [pc, #460]	; (8003af4 <OTM8009A_Init+0x408>)
 8003928:	200f      	movs	r0, #15
 800392a:	f7fd fcd3 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800392e:	495e      	ldr	r1, [pc, #376]	; (8003aa8 <OTM8009A_Init+0x3bc>)
 8003930:	2000      	movs	r0, #0
 8003932:	f7fd fccf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8003936:	4970      	ldr	r1, [pc, #448]	; (8003af8 <OTM8009A_Init+0x40c>)
 8003938:	200a      	movs	r0, #10
 800393a:	f7fd fccb 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800393e:	495c      	ldr	r1, [pc, #368]	; (8003ab0 <OTM8009A_Init+0x3c4>)
 8003940:	2000      	movs	r0, #0
 8003942:	f7fd fcc7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8003946:	496d      	ldr	r1, [pc, #436]	; (8003afc <OTM8009A_Init+0x410>)
 8003948:	200f      	movs	r0, #15
 800394a:	f7fd fcc3 	bl	80012d4 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800394e:	495a      	ldr	r1, [pc, #360]	; (8003ab8 <OTM8009A_Init+0x3cc>)
 8003950:	2000      	movs	r0, #0
 8003952:	f7fd fcbf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8003956:	496a      	ldr	r1, [pc, #424]	; (8003b00 <OTM8009A_Init+0x414>)
 8003958:	200f      	movs	r0, #15
 800395a:	f7fd fcbb 	bl	80012d4 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800395e:	493d      	ldr	r1, [pc, #244]	; (8003a54 <OTM8009A_Init+0x368>)
 8003960:	2000      	movs	r0, #0
 8003962:	f7fd fcb7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8003966:	4967      	ldr	r1, [pc, #412]	; (8003b04 <OTM8009A_Init+0x418>)
 8003968:	2000      	movs	r0, #0
 800396a:	f7fd fcb3 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800396e:	4966      	ldr	r1, [pc, #408]	; (8003b08 <OTM8009A_Init+0x41c>)
 8003970:	2000      	movs	r0, #0
 8003972:	f7fd fcaf 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8003976:	4965      	ldr	r1, [pc, #404]	; (8003b0c <OTM8009A_Init+0x420>)
 8003978:	2000      	movs	r0, #0
 800397a:	f7fd fcab 	bl	80012d4 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800397e:	4964      	ldr	r1, [pc, #400]	; (8003b10 <OTM8009A_Init+0x424>)
 8003980:	2000      	movs	r0, #0
 8003982:	f7fd fca7 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8003986:	4963      	ldr	r1, [pc, #396]	; (8003b14 <OTM8009A_Init+0x428>)
 8003988:	2000      	movs	r0, #0
 800398a:	f7fd fca3 	bl	80012d4 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800398e:	4923      	ldr	r1, [pc, #140]	; (8003a1c <OTM8009A_Init+0x330>)
 8003990:	2000      	movs	r0, #0
 8003992:	f7fd fc9f 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8003996:	4960      	ldr	r1, [pc, #384]	; (8003b18 <OTM8009A_Init+0x42c>)
 8003998:	2003      	movs	r0, #3
 800399a:	f7fd fc9b 	bl	80012d4 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800399e:	491f      	ldr	r1, [pc, #124]	; (8003a1c <OTM8009A_Init+0x330>)
 80039a0:	2000      	movs	r0, #0
 80039a2:	f7fd fc97 	bl	80012d4 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80039a6:	491d      	ldr	r1, [pc, #116]	; (8003a1c <OTM8009A_Init+0x330>)
 80039a8:	2000      	movs	r0, #0
 80039aa:	f7fd fc93 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 80039ae:	495b      	ldr	r1, [pc, #364]	; (8003b1c <OTM8009A_Init+0x430>)
 80039b0:	2010      	movs	r0, #16
 80039b2:	f7fd fc8f 	bl	80012d4 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80039b6:	4919      	ldr	r1, [pc, #100]	; (8003a1c <OTM8009A_Init+0x330>)
 80039b8:	2000      	movs	r0, #0
 80039ba:	f7fd fc8b 	bl	80012d4 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 80039be:	4958      	ldr	r1, [pc, #352]	; (8003b20 <OTM8009A_Init+0x434>)
 80039c0:	2010      	movs	r0, #16
 80039c2:	f7fd fc87 	bl	80012d4 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 80039c6:	2000      	movs	r0, #0
 80039c8:	4956      	ldr	r1, [pc, #344]	; (8003b24 <OTM8009A_Init+0x438>)
 80039ca:	f7fd fc83 	bl	80012d4 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 80039ce:	2078      	movs	r0, #120	; 0x78
 80039d0:	f000 f9d8 	bl	8003d84 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 80039d4:	2c00      	cmp	r4, #0
 80039d6:	f000 80c7 	beq.w	8003b68 <OTM8009A_Init+0x47c>
 80039da:	2c02      	cmp	r4, #2
 80039dc:	d103      	bne.n	80039e6 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 80039de:	4952      	ldr	r1, [pc, #328]	; (8003b28 <OTM8009A_Init+0x43c>)
 80039e0:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80039e2:	f7fd fc77 	bl	80012d4 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 80039e6:	2d01      	cmp	r5, #1
 80039e8:	d10b      	bne.n	8003a02 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80039ea:	4950      	ldr	r1, [pc, #320]	; (8003b2c <OTM8009A_Init+0x440>)
 80039ec:	2000      	movs	r0, #0
 80039ee:	f7fd fc71 	bl	80012d4 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80039f2:	494f      	ldr	r1, [pc, #316]	; (8003b30 <OTM8009A_Init+0x444>)
 80039f4:	2004      	movs	r0, #4
 80039f6:	f7fd fc6d 	bl	80012d4 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80039fa:	494e      	ldr	r1, [pc, #312]	; (8003b34 <OTM8009A_Init+0x448>)
 80039fc:	2004      	movs	r0, #4
 80039fe:	f7fd fc69 	bl	80012d4 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8003a02:	494d      	ldr	r1, [pc, #308]	; (8003b38 <OTM8009A_Init+0x44c>)
 8003a04:	2000      	movs	r0, #0
 8003a06:	f7fd fc65 	bl	80012d4 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8003a0a:	494c      	ldr	r1, [pc, #304]	; (8003b3c <OTM8009A_Init+0x450>)
 8003a0c:	2000      	movs	r0, #0
 8003a0e:	f7fd fc61 	bl	80012d4 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8003a12:	494b      	ldr	r1, [pc, #300]	; (8003b40 <OTM8009A_Init+0x454>)
 8003a14:	2000      	movs	r0, #0
 8003a16:	f7fd fc5d 	bl	80012d4 <DSI_IO_WriteCmd>
 8003a1a:	e093      	b.n	8003b44 <OTM8009A_Init+0x458>
 8003a1c:	0801f5dc 	.word	0x0801f5dc
 8003a20:	0801f642 	.word	0x0801f642
 8003a24:	0801f5f2 	.word	0x0801f5f2
 8003a28:	0801f6c8 	.word	0x0801f6c8
 8003a2c:	0801f608 	.word	0x0801f608
 8003a30:	0801f61e 	.word	0x0801f61e
 8003a34:	0801f634 	.word	0x0801f634
 8003a38:	0801f63a 	.word	0x0801f63a
 8003a3c:	0801f63c 	.word	0x0801f63c
 8003a40:	0801f63e 	.word	0x0801f63e
 8003a44:	0801f640 	.word	0x0801f640
 8003a48:	0801f5de 	.word	0x0801f5de
 8003a4c:	0801f5e0 	.word	0x0801f5e0
 8003a50:	0801f5e2 	.word	0x0801f5e2
 8003a54:	0801f5e4 	.word	0x0801f5e4
 8003a58:	0801f5e6 	.word	0x0801f5e6
 8003a5c:	0801f5e8 	.word	0x0801f5e8
 8003a60:	0801f5ea 	.word	0x0801f5ea
 8003a64:	0801f5ec 	.word	0x0801f5ec
 8003a68:	0801f5ee 	.word	0x0801f5ee
 8003a6c:	0801f5f0 	.word	0x0801f5f0
 8003a70:	0801f746 	.word	0x0801f746
 8003a74:	0801f5f4 	.word	0x0801f5f4
 8003a78:	0801f5f6 	.word	0x0801f5f6
 8003a7c:	0801f5f8 	.word	0x0801f5f8
 8003a80:	0801f5fa 	.word	0x0801f5fa
 8003a84:	0801f5fc 	.word	0x0801f5fc
 8003a88:	0801f5fe 	.word	0x0801f5fe
 8003a8c:	0801f600 	.word	0x0801f600
 8003a90:	0801f602 	.word	0x0801f602
 8003a94:	0801f604 	.word	0x0801f604
 8003a98:	0801f749 	.word	0x0801f749
 8003a9c:	0801f74c 	.word	0x0801f74c
 8003aa0:	0801f606 	.word	0x0801f606
 8003aa4:	0801f753 	.word	0x0801f753
 8003aa8:	0801f60a 	.word	0x0801f60a
 8003aac:	0801f762 	.word	0x0801f762
 8003ab0:	0801f60c 	.word	0x0801f60c
 8003ab4:	0801f646 	.word	0x0801f646
 8003ab8:	0801f60e 	.word	0x0801f60e
 8003abc:	0801f62c 	.word	0x0801f62c
 8003ac0:	0801f651 	.word	0x0801f651
 8003ac4:	0801f610 	.word	0x0801f610
 8003ac8:	0801f65c 	.word	0x0801f65c
 8003acc:	0801f66c 	.word	0x0801f66c
 8003ad0:	0801f67c 	.word	0x0801f67c
 8003ad4:	0801f687 	.word	0x0801f687
 8003ad8:	0801f697 	.word	0x0801f697
 8003adc:	0801f612 	.word	0x0801f612
 8003ae0:	0801f6a7 	.word	0x0801f6a7
 8003ae4:	0801f614 	.word	0x0801f614
 8003ae8:	0801f6b2 	.word	0x0801f6b2
 8003aec:	0801f6bd 	.word	0x0801f6bd
 8003af0:	0801f6cb 	.word	0x0801f6cb
 8003af4:	0801f6db 	.word	0x0801f6db
 8003af8:	0801f6eb 	.word	0x0801f6eb
 8003afc:	0801f6f6 	.word	0x0801f6f6
 8003b00:	0801f706 	.word	0x0801f706
 8003b04:	0801f62e 	.word	0x0801f62e
 8003b08:	0801f630 	.word	0x0801f630
 8003b0c:	0801f632 	.word	0x0801f632
 8003b10:	0801f636 	.word	0x0801f636
 8003b14:	0801f638 	.word	0x0801f638
 8003b18:	0801f716 	.word	0x0801f716
 8003b1c:	0801f724 	.word	0x0801f724
 8003b20:	0801f735 	.word	0x0801f735
 8003b24:	0801f616 	.word	0x0801f616
 8003b28:	0801f618 	.word	0x0801f618
 8003b2c:	0801f61c 	.word	0x0801f61c
 8003b30:	0801f71a 	.word	0x0801f71a
 8003b34:	0801f71f 	.word	0x0801f71f
 8003b38:	0801f620 	.word	0x0801f620
 8003b3c:	0801f622 	.word	0x0801f622
 8003b40:	0801f624 	.word	0x0801f624

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8003b44:	490a      	ldr	r1, [pc, #40]	; (8003b70 <OTM8009A_Init+0x484>)
 8003b46:	2000      	movs	r0, #0
 8003b48:	f7fd fbc4 	bl	80012d4 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8003b4c:	4909      	ldr	r1, [pc, #36]	; (8003b74 <OTM8009A_Init+0x488>)
 8003b4e:	2000      	movs	r0, #0
 8003b50:	f7fd fbc0 	bl	80012d4 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003b54:	4908      	ldr	r1, [pc, #32]	; (8003b78 <OTM8009A_Init+0x48c>)
 8003b56:	2000      	movs	r0, #0
 8003b58:	f7fd fbbc 	bl	80012d4 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8003b5c:	4907      	ldr	r1, [pc, #28]	; (8003b7c <OTM8009A_Init+0x490>)
 8003b5e:	2000      	movs	r0, #0
 8003b60:	f7fd fbb8 	bl	80012d4 <DSI_IO_WriteCmd>

  return 0;
}
 8003b64:	2000      	movs	r0, #0
 8003b66:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003b68:	4905      	ldr	r1, [pc, #20]	; (8003b80 <OTM8009A_Init+0x494>)
 8003b6a:	4620      	mov	r0, r4
 8003b6c:	e739      	b.n	80039e2 <OTM8009A_Init+0x2f6>
 8003b6e:	bf00      	nop
 8003b70:	0801f626 	.word	0x0801f626
 8003b74:	0801f628 	.word	0x0801f628
 8003b78:	0801f5dc 	.word	0x0801f5dc
 8003b7c:	0801f62a 	.word	0x0801f62a
 8003b80:	0801f61a 	.word	0x0801f61a

08003b84 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8003b84:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003b86:	4d2f      	ldr	r5, [pc, #188]	; (8003c44 <I2C1_Init+0xc0>)
{
 8003b88:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003b8a:	4628      	mov	r0, r5
 8003b8c:	f002 fa6e 	bl	800606c <HAL_I2C_GetState>
 8003b90:	4604      	mov	r4, r0
 8003b92:	2800      	cmp	r0, #0
 8003b94:	d154      	bne.n	8003c40 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003b96:	4a2c      	ldr	r2, [pc, #176]	; (8003c48 <I2C1_Init+0xc4>)
 8003b98:	4b2c      	ldr	r3, [pc, #176]	; (8003c4c <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003b9a:	4e2d      	ldr	r6, [pc, #180]	; (8003c50 <I2C1_Init+0xcc>)
 8003b9c:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003b9e:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003ba2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8003ba6:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003baa:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003bae:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003bb2:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003bb4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8003bb6:	f043 0302 	orr.w	r3, r3, #2
 8003bba:	6333      	str	r3, [r6, #48]	; 0x30
 8003bbc:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8003bbe:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003bc0:	f003 0302 	and.w	r3, r3, #2
 8003bc4:	9301      	str	r3, [sp, #4]
 8003bc6:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003bc8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003bcc:	2312      	movs	r3, #18
 8003bce:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003bd2:	2002      	movs	r0, #2
 8003bd4:	2304      	movs	r3, #4
 8003bd6:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003bda:	a903      	add	r1, sp, #12
 8003bdc:	481d      	ldr	r0, [pc, #116]	; (8003c54 <I2C1_Init+0xd0>)
 8003bde:	f001 fc73 	bl	80054c8 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003be2:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003be6:	a903      	add	r1, sp, #12
 8003be8:	481a      	ldr	r0, [pc, #104]	; (8003c54 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003bea:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003bec:	f001 fc6c 	bl	80054c8 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003bf0:	9402      	str	r4, [sp, #8]
 8003bf2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003bf4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003bf8:	6433      	str	r3, [r6, #64]	; 0x40
 8003bfa:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003bfc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003c00:	9302      	str	r3, [sp, #8]
 8003c02:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003c04:	6a33      	ldr	r3, [r6, #32]
 8003c06:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003c0a:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8003c0c:	6a33      	ldr	r3, [r6, #32]
 8003c0e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003c12:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003c14:	4622      	mov	r2, r4
 8003c16:	2105      	movs	r1, #5
 8003c18:	201f      	movs	r0, #31
 8003c1a:	f000 fd15 	bl	8004648 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8003c1e:	201f      	movs	r0, #31
 8003c20:	f000 fd44 	bl	80046ac <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003c24:	4622      	mov	r2, r4
 8003c26:	2105      	movs	r1, #5
 8003c28:	2020      	movs	r0, #32
 8003c2a:	f000 fd0d 	bl	8004648 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8003c2e:	2020      	movs	r0, #32
 8003c30:	f000 fd3c 	bl	80046ac <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8003c34:	4628      	mov	r0, r5
  }
}
 8003c36:	b008      	add	sp, #32
 8003c38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8003c3c:	f001 bfbc 	b.w	8005bb8 <HAL_I2C_Init>
}
 8003c40:	b008      	add	sp, #32
 8003c42:	bd70      	pop	{r4, r5, r6, pc}
 8003c44:	2000308c 	.word	0x2000308c
 8003c48:	40005400 	.word	0x40005400
 8003c4c:	00061a80 	.word	0x00061a80
 8003c50:	40023800 	.word	0x40023800
 8003c54:	40020400 	.word	0x40020400

08003c58 <BSP_PB_Init>:
{
 8003c58:	b510      	push	{r4, lr}
 8003c5a:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8003c5c:	4b19      	ldr	r3, [pc, #100]	; (8003cc4 <BSP_PB_Init+0x6c>)
 8003c5e:	2400      	movs	r4, #0
 8003c60:	9400      	str	r4, [sp, #0]
 8003c62:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c64:	f042 0201 	orr.w	r2, r2, #1
 8003c68:	631a      	str	r2, [r3, #48]	; 0x30
 8003c6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c6c:	f003 0301 	and.w	r3, r3, #1
 8003c70:	9300      	str	r3, [sp, #0]
 8003c72:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003c74:	b969      	cbnz	r1, 8003c92 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003c76:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8003c78:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003c7c:	2302      	movs	r3, #2
 8003c7e:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c80:	4b11      	ldr	r3, [pc, #68]	; (8003cc8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003c82:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c84:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003c88:	a901      	add	r1, sp, #4
 8003c8a:	f001 fc1d 	bl	80054c8 <HAL_GPIO_Init>
}
 8003c8e:	b006      	add	sp, #24
 8003c90:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003c92:	2901      	cmp	r1, #1
 8003c94:	d1fb      	bne.n	8003c8e <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003c96:	2302      	movs	r3, #2
 8003c98:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8003c9a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8003c9e:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003ca0:	4b09      	ldr	r3, [pc, #36]	; (8003cc8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003ca2:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003ca4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003ca8:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003caa:	a901      	add	r1, sp, #4
 8003cac:	f001 fc0c 	bl	80054c8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003cb0:	4622      	mov	r2, r4
 8003cb2:	210f      	movs	r1, #15
 8003cb4:	2006      	movs	r0, #6
 8003cb6:	f000 fcc7 	bl	8004648 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8003cba:	2006      	movs	r0, #6
 8003cbc:	f000 fcf6 	bl	80046ac <HAL_NVIC_EnableIRQ>
}
 8003cc0:	e7e5      	b.n	8003c8e <BSP_PB_Init+0x36>
 8003cc2:	bf00      	nop
 8003cc4:	40023800 	.word	0x40023800
 8003cc8:	20000048 	.word	0x20000048

08003ccc <BSP_PB_GetState>:
{
 8003ccc:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8003cce:	4b03      	ldr	r3, [pc, #12]	; (8003cdc <BSP_PB_GetState+0x10>)
 8003cd0:	2101      	movs	r1, #1
 8003cd2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003cd6:	f001 fd7f 	bl	80057d8 <HAL_GPIO_ReadPin>
}
 8003cda:	bd08      	pop	{r3, pc}
 8003cdc:	20000048 	.word	0x20000048

08003ce0 <TS_IO_Init>:
 8003ce0:	f7ff bf50 	b.w	8003b84 <I2C1_Init>

08003ce4 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003ce4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003ce6:	2301      	movs	r3, #1
 8003ce8:	f88d 2017 	strb.w	r2, [sp, #23]
 8003cec:	2264      	movs	r2, #100	; 0x64
 8003cee:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003cf2:	f10d 0217 	add.w	r2, sp, #23
 8003cf6:	9200      	str	r2, [sp, #0]
 8003cf8:	460a      	mov	r2, r1
 8003cfa:	4601      	mov	r1, r0
 8003cfc:	4805      	ldr	r0, [pc, #20]	; (8003d14 <TS_IO_Write+0x30>)
 8003cfe:	f002 f81d 	bl	8005d3c <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003d02:	b120      	cbz	r0, 8003d0e <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8003d04:	4803      	ldr	r0, [pc, #12]	; (8003d14 <TS_IO_Write+0x30>)
 8003d06:	f001 ffff 	bl	8005d08 <HAL_I2C_DeInit>
  I2C1_Init();
 8003d0a:	f7ff ff3b 	bl	8003b84 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8003d0e:	b007      	add	sp, #28
 8003d10:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d14:	2000308c 	.word	0x2000308c

08003d18 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003d18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8003d1a:	2300      	movs	r3, #0
{
 8003d1c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8003d1e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003d22:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003d26:	2301      	movs	r3, #1
 8003d28:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003d2c:	f10d 0117 	add.w	r1, sp, #23
 8003d30:	9100      	str	r1, [sp, #0]
 8003d32:	4601      	mov	r1, r0
 8003d34:	4806      	ldr	r0, [pc, #24]	; (8003d50 <TS_IO_Read+0x38>)
 8003d36:	f002 f891 	bl	8005e5c <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003d3a:	b120      	cbz	r0, 8003d46 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003d3c:	4804      	ldr	r0, [pc, #16]	; (8003d50 <TS_IO_Read+0x38>)
 8003d3e:	f001 ffe3 	bl	8005d08 <HAL_I2C_DeInit>
  I2C1_Init();
 8003d42:	f7ff ff1f 	bl	8003b84 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8003d46:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8003d4a:	b007      	add	sp, #28
 8003d4c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d50:	2000308c 	.word	0x2000308c

08003d54 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8003d54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003d56:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003d5a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003d5e:	9200      	str	r2, [sp, #0]
 8003d60:	2301      	movs	r3, #1
 8003d62:	460a      	mov	r2, r1
 8003d64:	4601      	mov	r1, r0
 8003d66:	4806      	ldr	r0, [pc, #24]	; (8003d80 <TS_IO_ReadMultiple+0x2c>)
 8003d68:	f002 f878 	bl	8005e5c <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003d6c:	4604      	mov	r4, r0
 8003d6e:	b120      	cbz	r0, 8003d7a <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8003d70:	4803      	ldr	r0, [pc, #12]	; (8003d80 <TS_IO_ReadMultiple+0x2c>)
 8003d72:	f001 ffc9 	bl	8005d08 <HAL_I2C_DeInit>
  I2C1_Init();
 8003d76:	f7ff ff05 	bl	8003b84 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8003d7a:	b2a0      	uxth	r0, r4
 8003d7c:	b004      	add	sp, #16
 8003d7e:	bd10      	pop	{r4, pc}
 8003d80:	2000308c 	.word	0x2000308c

08003d84 <OTM8009A_IO_Delay>:
 8003d84:	f000 bc3a 	b.w	80045fc <HAL_Delay>

08003d88 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003d88:	b500      	push	{lr}
 8003d8a:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d8c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d90:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d92:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003d96:	2205      	movs	r2, #5
 8003d98:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d9a:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003d9c:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003d9e:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003da0:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003da4:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003da8:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003dac:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003dae:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003db0:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003db2:	2210      	movs	r2, #16
 8003db4:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003db6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003dba:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003dbc:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003dbe:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003dc0:	a906      	add	r1, sp, #24
 8003dc2:	466a      	mov	r2, sp
 8003dc4:	4804      	ldr	r0, [pc, #16]	; (8003dd8 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8003dc6:	f002 fcca 	bl	800675e <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003dca:	3800      	subs	r0, #0
 8003dcc:	bf18      	it	ne
 8003dce:	2001      	movne	r0, #1
 8003dd0:	b015      	add	sp, #84	; 0x54
 8003dd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8003dd6:	bf00      	nop
 8003dd8:	200030e0 	.word	0x200030e0

08003ddc <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003ddc:	b500      	push	{lr}
 8003dde:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003de0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003de4:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003de6:	2306      	movs	r3, #6
 8003de8:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dea:	4817      	ldr	r0, [pc, #92]	; (8003e48 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003dec:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dee:	f241 3288 	movw	r2, #5000	; 0x1388
 8003df2:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003df4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003df8:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003dfc:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003dfe:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e00:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e02:	f002 fc68 	bl	80066d6 <HAL_QSPI_Command>
 8003e06:	b9e0      	cbnz	r0, 8003e42 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003e08:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8003e0a:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003e0e:	2201      	movs	r2, #1
 8003e10:	2310      	movs	r3, #16
 8003e12:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003e16:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003e1a:	2305      	movs	r3, #5
 8003e1c:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003e20:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003e24:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003e26:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e28:	4807      	ldr	r0, [pc, #28]	; (8003e48 <QSPI_WriteEnable.constprop.0+0x6c>)
 8003e2a:	f241 3388 	movw	r3, #5000	; 0x1388
 8003e2e:	466a      	mov	r2, sp
 8003e30:	a906      	add	r1, sp, #24
 8003e32:	f002 fc94 	bl	800675e <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8003e36:	3800      	subs	r0, #0
 8003e38:	bf18      	it	ne
 8003e3a:	2001      	movne	r0, #1
}
 8003e3c:	b015      	add	sp, #84	; 0x54
 8003e3e:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8003e42:	2001      	movs	r0, #1
 8003e44:	e7fa      	b.n	8003e3c <QSPI_WriteEnable.constprop.0+0x60>
 8003e46:	bf00      	nop
 8003e48:	200030e0 	.word	0x200030e0

08003e4c <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003e4c:	b500      	push	{lr}
 8003e4e:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e50:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e54:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8003e56:	23eb      	movs	r3, #235	; 0xeb
 8003e58:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003e5a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003e5e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003e60:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003e64:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003e66:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003e6a:	2300      	movs	r3, #0
 8003e6c:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003e70:	220a      	movs	r2, #10
 8003e72:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e74:	a902      	add	r1, sp, #8
 8003e76:	466a      	mov	r2, sp
 8003e78:	4806      	ldr	r0, [pc, #24]	; (8003e94 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e7a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003e7c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003e80:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e82:	f002 fcbc 	bl	80067fe <HAL_QSPI_MemoryMapped>
}
 8003e86:	3800      	subs	r0, #0
 8003e88:	bf18      	it	ne
 8003e8a:	2001      	movne	r0, #1
 8003e8c:	b011      	add	sp, #68	; 0x44
 8003e8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003e92:	bf00      	nop
 8003e94:	200030e0 	.word	0x200030e0

08003e98 <BSP_QSPI_MspInit>:
{
 8003e98:	b570      	push	{r4, r5, r6, lr}
 8003e9a:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003e9c:	4b2c      	ldr	r3, [pc, #176]	; (8003f50 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003e9e:	482d      	ldr	r0, [pc, #180]	; (8003f54 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003ea0:	2400      	movs	r4, #0
 8003ea2:	9400      	str	r4, [sp, #0]
 8003ea4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003ea6:	f042 0202 	orr.w	r2, r2, #2
 8003eaa:	639a      	str	r2, [r3, #56]	; 0x38
 8003eac:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003eae:	f002 0202 	and.w	r2, r2, #2
 8003eb2:	9200      	str	r2, [sp, #0]
 8003eb4:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003eb6:	699a      	ldr	r2, [r3, #24]
 8003eb8:	f042 0202 	orr.w	r2, r2, #2
 8003ebc:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003ebe:	699a      	ldr	r2, [r3, #24]
 8003ec0:	f022 0202 	bic.w	r2, r2, #2
 8003ec4:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003ec6:	9401      	str	r4, [sp, #4]
 8003ec8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003eca:	f042 0202 	orr.w	r2, r2, #2
 8003ece:	631a      	str	r2, [r3, #48]	; 0x30
 8003ed0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ed2:	f002 0202 	and.w	r2, r2, #2
 8003ed6:	9201      	str	r2, [sp, #4]
 8003ed8:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003eda:	9402      	str	r4, [sp, #8]
 8003edc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003ede:	f042 0220 	orr.w	r2, r2, #32
 8003ee2:	631a      	str	r2, [r3, #48]	; 0x30
 8003ee4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ee6:	f003 0320 	and.w	r3, r3, #32
 8003eea:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003eec:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003eee:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003ef0:	2302      	movs	r3, #2
 8003ef2:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003ef6:	2101      	movs	r1, #1
 8003ef8:	2303      	movs	r3, #3
 8003efa:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003efe:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003f00:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003f02:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003f04:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003f06:	f001 fadf 	bl	80054c8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003f0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003f0e:	a903      	add	r1, sp, #12
 8003f10:	4811      	ldr	r0, [pc, #68]	; (8003f58 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003f12:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003f14:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003f16:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003f18:	f001 fad6 	bl	80054c8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003f1c:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003f20:	a903      	add	r1, sp, #12
 8003f22:	480d      	ldr	r0, [pc, #52]	; (8003f58 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003f24:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003f26:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003f28:	f001 face 	bl	80054c8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003f2c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003f2e:	a903      	add	r1, sp, #12
 8003f30:	4809      	ldr	r0, [pc, #36]	; (8003f58 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003f32:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003f34:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003f36:	f001 fac7 	bl	80054c8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003f3a:	4622      	mov	r2, r4
 8003f3c:	210f      	movs	r1, #15
 8003f3e:	205b      	movs	r0, #91	; 0x5b
 8003f40:	f000 fb82 	bl	8004648 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003f44:	205b      	movs	r0, #91	; 0x5b
 8003f46:	f000 fbb1 	bl	80046ac <HAL_NVIC_EnableIRQ>
}
 8003f4a:	b008      	add	sp, #32
 8003f4c:	bd70      	pop	{r4, r5, r6, pc}
 8003f4e:	bf00      	nop
 8003f50:	40023800 	.word	0x40023800
 8003f54:	40020400 	.word	0x40020400
 8003f58:	40021400 	.word	0x40021400

08003f5c <BSP_QSPI_Init>:
{
 8003f5c:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003f5e:	4c48      	ldr	r4, [pc, #288]	; (8004080 <BSP_QSPI_Init+0x124>)
 8003f60:	4b48      	ldr	r3, [pc, #288]	; (8004084 <BSP_QSPI_Init+0x128>)
 8003f62:	6023      	str	r3, [r4, #0]
{
 8003f64:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003f66:	4620      	mov	r0, r4
 8003f68:	f002 fba2 	bl	80066b0 <HAL_QSPI_DeInit>
 8003f6c:	4605      	mov	r5, r0
 8003f6e:	b110      	cbz	r0, 8003f76 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003f70:	2001      	movs	r0, #1
}
 8003f72:	b011      	add	sp, #68	; 0x44
 8003f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003f76:	4601      	mov	r1, r0
 8003f78:	4620      	mov	r0, r4
 8003f7a:	f7ff ff8d 	bl	8003e98 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003f7e:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003f80:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003f82:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003f86:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003f88:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003f8c:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003f90:	fab3 f383 	clz	r3, r3
 8003f94:	3b01      	subs	r3, #1
 8003f96:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003f98:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003f9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003f9e:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003fa2:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003fa6:	f002 fb2f 	bl	8006608 <HAL_QSPI_Init>
 8003faa:	2800      	cmp	r0, #0
 8003fac:	d1e0      	bne.n	8003f70 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003fae:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003fb2:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003fb6:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003fba:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003fbc:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003fbe:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003fc0:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fc2:	f241 3288 	movw	r2, #5000	; 0x1388
 8003fc6:	a902      	add	r1, sp, #8
 8003fc8:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003fca:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003fcc:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fce:	f002 fb82 	bl	80066d6 <HAL_QSPI_Command>
 8003fd2:	b108      	cbz	r0, 8003fd8 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003fd4:	2004      	movs	r0, #4
 8003fd6:	e7cc      	b.n	8003f72 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003fd8:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fda:	f241 3288 	movw	r2, #5000	; 0x1388
 8003fde:	a902      	add	r1, sp, #8
 8003fe0:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003fe2:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fe4:	f002 fb77 	bl	80066d6 <HAL_QSPI_Command>
 8003fe8:	2800      	cmp	r0, #0
 8003fea:	d1f3      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003fec:	f241 3088 	movw	r0, #5000	; 0x1388
 8003ff0:	f7ff feca 	bl	8003d88 <QSPI_AutoPollingMemReady.constprop.0>
 8003ff4:	2800      	cmp	r0, #0
 8003ff6:	d1ed      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003ff8:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003ffc:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004000:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004004:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8004006:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004008:	f241 3288 	movw	r2, #5000	; 0x1388
 800400c:	a902      	add	r1, sp, #8
 800400e:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004010:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004012:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004014:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004016:	f002 fb5e 	bl	80066d6 <HAL_QSPI_Command>
 800401a:	2800      	cmp	r0, #0
 800401c:	d1da      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800401e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004022:	f10d 0107 	add.w	r1, sp, #7
 8004026:	4620      	mov	r0, r4
 8004028:	f002 fcce 	bl	80069c8 <HAL_QSPI_Receive>
 800402c:	2800      	cmp	r0, #0
 800402e:	d1d1      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004030:	f7ff fed4 	bl	8003ddc <QSPI_WriteEnable.constprop.0>
 8004034:	2800      	cmp	r0, #0
 8004036:	d1cd      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004038:	2381      	movs	r3, #129	; 0x81
 800403a:	9302      	str	r3, [sp, #8]
 800403c:	22f0      	movs	r2, #240	; 0xf0
 800403e:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004042:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004046:	210a      	movs	r1, #10
 8004048:	fab2 f282 	clz	r2, r2
 800404c:	fa01 f202 	lsl.w	r2, r1, r2
 8004050:	f003 030f 	and.w	r3, r3, #15
 8004054:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004056:	a902      	add	r1, sp, #8
 8004058:	f241 3288 	movw	r2, #5000	; 0x1388
 800405c:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800405e:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004062:	f002 fb38 	bl	80066d6 <HAL_QSPI_Command>
 8004066:	2800      	cmp	r0, #0
 8004068:	d1b4      	bne.n	8003fd4 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800406a:	f241 3288 	movw	r2, #5000	; 0x1388
 800406e:	f10d 0107 	add.w	r1, sp, #7
 8004072:	4620      	mov	r0, r4
 8004074:	f002 fc4c 	bl	8006910 <HAL_QSPI_Transmit>
 8004078:	2800      	cmp	r0, #0
 800407a:	f43f af7a 	beq.w	8003f72 <BSP_QSPI_Init+0x16>
 800407e:	e7a9      	b.n	8003fd4 <BSP_QSPI_Init+0x78>
 8004080:	200030e0 	.word	0x200030e0
 8004084:	a0001000 	.word	0xa0001000

08004088 <BSP_QSPI_MspDeInit>:
{
 8004088:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800408a:	205b      	movs	r0, #91	; 0x5b
 800408c:	f000 fb1c 	bl	80046c8 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8004090:	4814      	ldr	r0, [pc, #80]	; (80040e4 <BSP_QSPI_MspDeInit+0x5c>)
 8004092:	2140      	movs	r1, #64	; 0x40
 8004094:	f001 fafe 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8004098:	4813      	ldr	r0, [pc, #76]	; (80040e8 <BSP_QSPI_MspDeInit+0x60>)
 800409a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800409e:	f001 faf9 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 80040a2:	4811      	ldr	r0, [pc, #68]	; (80040e8 <BSP_QSPI_MspDeInit+0x60>)
 80040a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80040a8:	f001 faf4 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 80040ac:	480e      	ldr	r0, [pc, #56]	; (80040e8 <BSP_QSPI_MspDeInit+0x60>)
 80040ae:	f44f 7100 	mov.w	r1, #512	; 0x200
 80040b2:	f001 faef 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 80040b6:	480c      	ldr	r0, [pc, #48]	; (80040e8 <BSP_QSPI_MspDeInit+0x60>)
 80040b8:	2180      	movs	r1, #128	; 0x80
 80040ba:	f001 faeb 	bl	8005694 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80040be:	480a      	ldr	r0, [pc, #40]	; (80040e8 <BSP_QSPI_MspDeInit+0x60>)
 80040c0:	2140      	movs	r1, #64	; 0x40
 80040c2:	f001 fae7 	bl	8005694 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80040c6:	4b09      	ldr	r3, [pc, #36]	; (80040ec <BSP_QSPI_MspDeInit+0x64>)
 80040c8:	699a      	ldr	r2, [r3, #24]
 80040ca:	f042 0202 	orr.w	r2, r2, #2
 80040ce:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80040d0:	699a      	ldr	r2, [r3, #24]
 80040d2:	f022 0202 	bic.w	r2, r2, #2
 80040d6:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80040d8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80040da:	f022 0202 	bic.w	r2, r2, #2
 80040de:	639a      	str	r2, [r3, #56]	; 0x38
}
 80040e0:	bd08      	pop	{r3, pc}
 80040e2:	bf00      	nop
 80040e4:	40020400 	.word	0x40020400
 80040e8:	40021400 	.word	0x40021400
 80040ec:	40023800 	.word	0x40023800

080040f0 <BSP_QSPI_DeInit>:
{
 80040f0:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80040f2:	4d08      	ldr	r5, [pc, #32]	; (8004114 <BSP_QSPI_DeInit+0x24>)
 80040f4:	4b08      	ldr	r3, [pc, #32]	; (8004118 <BSP_QSPI_DeInit+0x28>)
 80040f6:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80040f8:	4628      	mov	r0, r5
 80040fa:	f002 fad9 	bl	80066b0 <HAL_QSPI_DeInit>
 80040fe:	4604      	mov	r4, r0
 8004100:	b928      	cbnz	r0, 800410e <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8004102:	4601      	mov	r1, r0
 8004104:	4628      	mov	r0, r5
 8004106:	f7ff ffbf 	bl	8004088 <BSP_QSPI_MspDeInit>
}
 800410a:	4620      	mov	r0, r4
 800410c:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800410e:	2401      	movs	r4, #1
 8004110:	e7fb      	b.n	800410a <BSP_QSPI_DeInit+0x1a>
 8004112:	bf00      	nop
 8004114:	200030e0 	.word	0x200030e0
 8004118:	a0001000 	.word	0xa0001000

0800411c <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800411c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8004120:	4c21      	ldr	r4, [pc, #132]	; (80041a8 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004122:	4d22      	ldr	r5, [pc, #136]	; (80041ac <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004124:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8004126:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800412a:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800412c:	4621      	mov	r1, r4
{
 800412e:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004130:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004134:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004136:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800413a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800413e:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004142:	f003 f8e5 	bl	8007310 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8004146:	4630      	mov	r0, r6
 8004148:	f000 fa58 	bl	80045fc <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800414c:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800414e:	4621      	mov	r1, r4
 8004150:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004154:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004156:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800415a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800415e:	f003 f8d7 	bl	8007310 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8004162:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004164:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004168:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800416a:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800416c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004170:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8004172:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004176:	f003 f8cb 	bl	8007310 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800417a:	f44f 730c 	mov.w	r3, #560	; 0x230
 800417e:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8004180:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004182:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004186:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8004188:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800418a:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800418c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004190:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8004192:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004194:	f003 f8bc 	bl	8007310 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8004198:	4649      	mov	r1, r9
 800419a:	4628      	mov	r0, r5
}
 800419c:	b003      	add	sp, #12
 800419e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80041a2:	f003 b8d3 	b.w	800734c <HAL_SDRAM_ProgramRefreshRate>
 80041a6:	bf00      	nop
 80041a8:	2000312c 	.word	0x2000312c
 80041ac:	20003218 	.word	0x20003218

080041b0 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80041b0:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80041b2:	4606      	mov	r6, r0
{
 80041b4:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80041b6:	2800      	cmp	r0, #0
 80041b8:	f000 80bd 	beq.w	8004336 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80041bc:	4b5f      	ldr	r3, [pc, #380]	; (800433c <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80041be:	4860      	ldr	r0, [pc, #384]	; (8004340 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80041c0:	4c60      	ldr	r4, [pc, #384]	; (8004344 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80041c2:	2500      	movs	r5, #0
 80041c4:	9500      	str	r5, [sp, #0]
 80041c6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80041c8:	f042 0201 	orr.w	r2, r2, #1
 80041cc:	639a      	str	r2, [r3, #56]	; 0x38
 80041ce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80041d0:	f002 0201 	and.w	r2, r2, #1
 80041d4:	9200      	str	r2, [sp, #0]
 80041d6:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80041d8:	9501      	str	r5, [sp, #4]
 80041da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041dc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80041e0:	631a      	str	r2, [r3, #48]	; 0x30
 80041e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041e4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80041e8:	9201      	str	r2, [sp, #4]
 80041ea:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80041ec:	9502      	str	r5, [sp, #8]
 80041ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041f0:	f042 0204 	orr.w	r2, r2, #4
 80041f4:	631a      	str	r2, [r3, #48]	; 0x30
 80041f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041f8:	f002 0204 	and.w	r2, r2, #4
 80041fc:	9202      	str	r2, [sp, #8]
 80041fe:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004200:	9503      	str	r5, [sp, #12]
 8004202:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004204:	f042 0208 	orr.w	r2, r2, #8
 8004208:	631a      	str	r2, [r3, #48]	; 0x30
 800420a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800420c:	f002 0208 	and.w	r2, r2, #8
 8004210:	9203      	str	r2, [sp, #12]
 8004212:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8004214:	9504      	str	r5, [sp, #16]
 8004216:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004218:	f042 0210 	orr.w	r2, r2, #16
 800421c:	631a      	str	r2, [r3, #48]	; 0x30
 800421e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004220:	f002 0210 	and.w	r2, r2, #16
 8004224:	9204      	str	r2, [sp, #16]
 8004226:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004228:	9505      	str	r5, [sp, #20]
 800422a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800422c:	f042 0220 	orr.w	r2, r2, #32
 8004230:	631a      	str	r2, [r3, #48]	; 0x30
 8004232:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004234:	f002 0220 	and.w	r2, r2, #32
 8004238:	9205      	str	r2, [sp, #20]
 800423a:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800423c:	9506      	str	r5, [sp, #24]
 800423e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004240:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004244:	631a      	str	r2, [r3, #48]	; 0x30
 8004246:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004248:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800424c:	9206      	str	r2, [sp, #24]
 800424e:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8004250:	9507      	str	r5, [sp, #28]
 8004252:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004254:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004258:	631a      	str	r2, [r3, #48]	; 0x30
 800425a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800425c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004260:	9207      	str	r2, [sp, #28]
 8004262:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004264:	9508      	str	r5, [sp, #32]
 8004266:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004268:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800426c:	631a      	str	r2, [r3, #48]	; 0x30
 800426e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004270:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004274:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8004276:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004278:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800427a:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800427c:	2301      	movs	r3, #1
 800427e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8004282:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004284:	220c      	movs	r2, #12
 8004286:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8004288:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800428a:	f001 f91d 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800428e:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004292:	482d      	ldr	r0, [pc, #180]	; (8004348 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8004294:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004296:	a909      	add	r1, sp, #36	; 0x24
 8004298:	f001 f916 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800429c:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80042a0:	482a      	ldr	r0, [pc, #168]	; (800434c <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80042a2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80042a4:	a909      	add	r1, sp, #36	; 0x24
 80042a6:	f001 f90f 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80042aa:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80042ae:	4828      	ldr	r0, [pc, #160]	; (8004350 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80042b0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80042b2:	a909      	add	r1, sp, #36	; 0x24
 80042b4:	f001 f908 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80042b8:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80042bc:	4825      	ldr	r0, [pc, #148]	; (8004354 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80042be:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80042c0:	a909      	add	r1, sp, #36	; 0x24
 80042c2:	f001 f901 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80042c6:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80042ca:	4823      	ldr	r0, [pc, #140]	; (8004358 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80042cc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80042ce:	a909      	add	r1, sp, #36	; 0x24
 80042d0:	f001 f8fa 	bl	80054c8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80042d4:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80042d8:	4820      	ldr	r0, [pc, #128]	; (800435c <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80042da:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80042dc:	a909      	add	r1, sp, #36	; 0x24
 80042de:	f001 f8f3 	bl	80054c8 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80042e2:	2280      	movs	r2, #128	; 0x80
 80042e4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80042e8:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80042ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80042f0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80042f4:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80042f8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80042fc:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8004300:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8004304:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8004308:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800430a:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800430e:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8004310:	4b13      	ldr	r3, [pc, #76]	; (8004360 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8004312:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8004314:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8004316:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8004318:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800431a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 800431c:	f000 fa8e 	bl	800483c <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8004320:	4620      	mov	r0, r4
 8004322:	f000 fa0b 	bl	800473c <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8004326:	2038      	movs	r0, #56	; 0x38
 8004328:	462a      	mov	r2, r5
 800432a:	2105      	movs	r1, #5
 800432c:	f000 f98c 	bl	8004648 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8004330:	2038      	movs	r0, #56	; 0x38
 8004332:	f000 f9bb 	bl	80046ac <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8004336:	b00e      	add	sp, #56	; 0x38
 8004338:	bd70      	pop	{r4, r5, r6, pc}
 800433a:	bf00      	nop
 800433c:	40023800 	.word	0x40023800
 8004340:	40020800 	.word	0x40020800
 8004344:	200031b8 	.word	0x200031b8
 8004348:	40020c00 	.word	0x40020c00
 800434c:	40021000 	.word	0x40021000
 8004350:	40021400 	.word	0x40021400
 8004354:	40021800 	.word	0x40021800
 8004358:	40021c00 	.word	0x40021c00
 800435c:	40022000 	.word	0x40022000
 8004360:	40026410 	.word	0x40026410

08004364 <BSP_SDRAM_Init>:
{
 8004364:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004366:	4c19      	ldr	r4, [pc, #100]	; (80043cc <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8004368:	4d19      	ldr	r5, [pc, #100]	; (80043d0 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800436a:	4b1a      	ldr	r3, [pc, #104]	; (80043d4 <BSP_SDRAM_Init+0x70>)
 800436c:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800436e:	2107      	movs	r1, #7
 8004370:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8004372:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8004374:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8004378:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800437c:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8004380:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8004382:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8004384:	2340      	movs	r3, #64	; 0x40
 8004386:	2220      	movs	r2, #32
 8004388:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800438c:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800438e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8004392:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8004396:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800439a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800439e:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80043a2:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80043a4:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 80043a8:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80043aa:	f7ff ff01 	bl	80041b0 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80043ae:	4629      	mov	r1, r5
 80043b0:	4620      	mov	r0, r4
 80043b2:	f002 ff7f 	bl	80072b4 <HAL_SDRAM_Init>
 80043b6:	4c08      	ldr	r4, [pc, #32]	; (80043d8 <BSP_SDRAM_Init+0x74>)
 80043b8:	3800      	subs	r0, #0
 80043ba:	bf18      	it	ne
 80043bc:	2001      	movne	r0, #1
 80043be:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 80043c0:	f240 5069 	movw	r0, #1385	; 0x569
 80043c4:	f7ff feaa 	bl	800411c <BSP_SDRAM_Initialization_sequence>
}
 80043c8:	7820      	ldrb	r0, [r4, #0]
 80043ca:	bd38      	pop	{r3, r4, r5, pc}
 80043cc:	20003218 	.word	0x20003218
 80043d0:	2000313c 	.word	0x2000313c
 80043d4:	a0000140 	.word	0xa0000140
 80043d8:	2000004d 	.word	0x2000004d

080043dc <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80043dc:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80043de:	b148      	cbz	r0, 80043f4 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80043e0:	2038      	movs	r0, #56	; 0x38
 80043e2:	f000 f971 	bl	80046c8 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80043e6:	4804      	ldr	r0, [pc, #16]	; (80043f8 <BSP_SDRAM_MspDeInit+0x1c>)
 80043e8:	4b04      	ldr	r3, [pc, #16]	; (80043fc <BSP_SDRAM_MspDeInit+0x20>)
 80043ea:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80043ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80043f0:	f000 ba24 	b.w	800483c <HAL_DMA_DeInit>
}
 80043f4:	bd08      	pop	{r3, pc}
 80043f6:	bf00      	nop
 80043f8:	20003158 	.word	0x20003158
 80043fc:	40026410 	.word	0x40026410

08004400 <BSP_SDRAM_DeInit>:
{
 8004400:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004402:	4c07      	ldr	r4, [pc, #28]	; (8004420 <BSP_SDRAM_DeInit+0x20>)
 8004404:	4b07      	ldr	r3, [pc, #28]	; (8004424 <BSP_SDRAM_DeInit+0x24>)
 8004406:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8004408:	4620      	mov	r0, r4
 800440a:	f002 ff73 	bl	80072f4 <HAL_SDRAM_DeInit>
 800440e:	4d06      	ldr	r5, [pc, #24]	; (8004428 <BSP_SDRAM_DeInit+0x28>)
 8004410:	4601      	mov	r1, r0
 8004412:	b918      	cbnz	r0, 800441c <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8004414:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8004416:	4620      	mov	r0, r4
 8004418:	f7ff ffe0 	bl	80043dc <BSP_SDRAM_MspDeInit>
}
 800441c:	7828      	ldrb	r0, [r5, #0]
 800441e:	bd38      	pop	{r3, r4, r5, pc}
 8004420:	20003218 	.word	0x20003218
 8004424:	a0000140 	.word	0xa0000140
 8004428:	2000004c 	.word	0x2000004c

0800442c <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800442c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8004430:	4d16      	ldr	r5, [pc, #88]	; (800448c <BSP_TS_Init+0x60>)
 8004432:	4c17      	ldr	r4, [pc, #92]	; (8004490 <BSP_TS_Init+0x64>)
 8004434:	682b      	ldr	r3, [r5, #0]
{
 8004436:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8004438:	7820      	ldrb	r0, [r4, #0]
{
 800443a:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 800443c:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800443e:	686b      	ldr	r3, [r5, #4]
 8004440:	2054      	movs	r0, #84	; 0x54
 8004442:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8004444:	b2c0      	uxtb	r0, r0
 8004446:	2811      	cmp	r0, #17
 8004448:	d00a      	beq.n	8004460 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800444a:	686b      	ldr	r3, [r5, #4]
 800444c:	2070      	movs	r0, #112	; 0x70
 800444e:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004450:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8004452:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004454:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8004456:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004458:	d004      	beq.n	8004464 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800445a:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800445c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8004460:	2354      	movs	r3, #84	; 0x54
 8004462:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8004464:	4b0b      	ldr	r3, [pc, #44]	; (8004494 <BSP_TS_Init+0x68>)
 8004466:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004498 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 800446a:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 800446c:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8004470:	42be      	cmp	r6, r7
 8004472:	bf34      	ite	cc
 8004474:	2601      	movcc	r6, #1
 8004476:	260c      	movcs	r6, #12
 8004478:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800447a:	68ab      	ldr	r3, [r5, #8]
 800447c:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800447e:	f8d8 3000 	ldr.w	r3, [r8]
 8004482:	7820      	ldrb	r0, [r4, #0]
 8004484:	68db      	ldr	r3, [r3, #12]
 8004486:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8004488:	2000      	movs	r0, #0
 800448a:	e7e7      	b.n	800445c <BSP_TS_Init+0x30>
 800448c:	20000020 	.word	0x20000020
 8004490:	2000324c 	.word	0x2000324c
 8004494:	20003264 	.word	0x20003264
 8004498:	20003260 	.word	0x20003260

0800449c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800449c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 80044a0:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8004580 <BSP_TS_GetState+0xe4>
 80044a4:	4a33      	ldr	r2, [pc, #204]	; (8004574 <BSP_TS_GetState+0xd8>)
 80044a6:	f8db 3000 	ldr.w	r3, [fp]
{
 80044aa:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 80044ac:	691b      	ldr	r3, [r3, #16]
 80044ae:	7810      	ldrb	r0, [r2, #0]
{
 80044b0:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 80044b2:	4798      	blx	r3
 80044b4:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 80044b6:	b158      	cbz	r0, 80044d0 <BSP_TS_GetState+0x34>
 80044b8:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004584 <BSP_TS_GetState+0xe8>
 80044bc:	4f2e      	ldr	r7, [pc, #184]	; (8004578 <BSP_TS_GetState+0xdc>)
 80044be:	f106 0a02 	add.w	sl, r6, #2
 80044c2:	ad03      	add	r5, sp, #12
 80044c4:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 80044c6:	f04f 0900 	mov.w	r9, #0
 80044ca:	7833      	ldrb	r3, [r6, #0]
 80044cc:	454b      	cmp	r3, r9
 80044ce:	d803      	bhi.n	80044d8 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 80044d0:	2000      	movs	r0, #0
 80044d2:	b005      	add	sp, #20
 80044d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 80044d8:	f8db 3000 	ldr.w	r3, [fp]
 80044dc:	4825      	ldr	r0, [pc, #148]	; (8004574 <BSP_TS_GetState+0xd8>)
 80044de:	695b      	ldr	r3, [r3, #20]
 80044e0:	7800      	ldrb	r0, [r0, #0]
 80044e2:	9101      	str	r1, [sp, #4]
 80044e4:	462a      	mov	r2, r5
 80044e6:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80044e8:	4b24      	ldr	r3, [pc, #144]	; (800457c <BSP_TS_GetState+0xe0>)
 80044ea:	9901      	ldr	r1, [sp, #4]
 80044ec:	781b      	ldrb	r3, [r3, #0]
 80044ee:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80044f2:	bf1f      	itttt	ne
 80044f4:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80044f6:	8828      	ldrhne	r0, [r5, #0]
 80044f8:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80044fa:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80044fc:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80044fe:	bf41      	itttt	mi
 8004500:	880a      	ldrhmi	r2, [r1, #0]
 8004502:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8004506:	3203      	addmi	r2, #3
 8004508:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800450a:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800450c:	bf48      	it	mi
 800450e:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004510:	f8d8 2000 	ldr.w	r2, [r8]
 8004514:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8004518:	bf42      	ittt	mi
 800451a:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800451e:	3301      	addmi	r3, #1
 8004520:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004522:	b293      	uxth	r3, r2
 8004524:	4290      	cmp	r0, r2
 8004526:	bf8c      	ite	hi
 8004528:	1ac3      	subhi	r3, r0, r3
 800452a:	1a1b      	subls	r3, r3, r0
 800452c:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800452e:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004532:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004534:	683b      	ldr	r3, [r7, #0]
 8004536:	b29c      	uxth	r4, r3
 8004538:	429a      	cmp	r2, r3
 800453a:	bf88      	it	hi
 800453c:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800453e:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004540:	bf98      	it	ls
 8004542:	1aa4      	subls	r4, r4, r2
 8004544:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8004546:	441c      	add	r4, r3
 8004548:	46c4      	mov	ip, r8
 800454a:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800454c:	bfc8      	it	gt
 800454e:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8004552:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8004556:	bfc8      	it	gt
 8004558:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800455a:	46be      	mov	lr, r7
 800455c:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8004560:	f8de 3000 	ldr.w	r3, [lr]
 8004564:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8004568:	f108 0804 	add.w	r8, r8, #4
 800456c:	3704      	adds	r7, #4
 800456e:	f109 0901 	add.w	r9, r9, #1
 8004572:	e7aa      	b.n	80044ca <BSP_TS_GetState+0x2e>
 8004574:	2000324c 	.word	0x2000324c
 8004578:	20003258 	.word	0x20003258
 800457c:	20003264 	.word	0x20003264
 8004580:	20003260 	.word	0x20003260
 8004584:	20003250 	.word	0x20003250

08004588 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004588:	4b05      	ldr	r3, [pc, #20]	; (80045a0 <SystemInit+0x18>)
 800458a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800458e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004592:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004596:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800459a:	609a      	str	r2, [r3, #8]
#endif
}
 800459c:	4770      	bx	lr
 800459e:	bf00      	nop
 80045a0:	e000ed00 	.word	0xe000ed00

080045a4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80045a4:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80045a6:	4b0b      	ldr	r3, [pc, #44]	; (80045d4 <HAL_Init+0x30>)
 80045a8:	681a      	ldr	r2, [r3, #0]
 80045aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80045ae:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80045b0:	681a      	ldr	r2, [r3, #0]
 80045b2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80045b6:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80045b8:	681a      	ldr	r2, [r3, #0]
 80045ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80045be:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80045c0:	2003      	movs	r0, #3
 80045c2:	f000 f82f 	bl	8004624 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80045c6:	2000      	movs	r0, #0
 80045c8:	f7fe f958 	bl	800287c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80045cc:	f7fd fe94 	bl	80022f8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80045d0:	2000      	movs	r0, #0
 80045d2:	bd08      	pop	{r3, pc}
 80045d4:	40023c00 	.word	0x40023c00

080045d8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80045d8:	4a03      	ldr	r2, [pc, #12]	; (80045e8 <HAL_IncTick+0x10>)
 80045da:	4b04      	ldr	r3, [pc, #16]	; (80045ec <HAL_IncTick+0x14>)
 80045dc:	6811      	ldr	r1, [r2, #0]
 80045de:	781b      	ldrb	r3, [r3, #0]
 80045e0:	440b      	add	r3, r1
 80045e2:	6013      	str	r3, [r2, #0]
}
 80045e4:	4770      	bx	lr
 80045e6:	bf00      	nop
 80045e8:	20003268 	.word	0x20003268
 80045ec:	20000054 	.word	0x20000054

080045f0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80045f0:	4b01      	ldr	r3, [pc, #4]	; (80045f8 <HAL_GetTick+0x8>)
 80045f2:	6818      	ldr	r0, [r3, #0]
}
 80045f4:	4770      	bx	lr
 80045f6:	bf00      	nop
 80045f8:	20003268 	.word	0x20003268

080045fc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80045fc:	b538      	push	{r3, r4, r5, lr}
 80045fe:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004600:	f7ff fff6 	bl	80045f0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004604:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004606:	bf1c      	itt	ne
 8004608:	4b05      	ldrne	r3, [pc, #20]	; (8004620 <HAL_Delay+0x24>)
 800460a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800460c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800460e:	bf18      	it	ne
 8004610:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004612:	f7ff ffed 	bl	80045f0 <HAL_GetTick>
 8004616:	1b43      	subs	r3, r0, r5
 8004618:	42a3      	cmp	r3, r4
 800461a:	d3fa      	bcc.n	8004612 <HAL_Delay+0x16>
  {
  }
}
 800461c:	bd38      	pop	{r3, r4, r5, pc}
 800461e:	bf00      	nop
 8004620:	20000054 	.word	0x20000054

08004624 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004624:	4907      	ldr	r1, [pc, #28]	; (8004644 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004626:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004628:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800462c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800462e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004630:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004634:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004636:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004638:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800463c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004640:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004642:	4770      	bx	lr
 8004644:	e000ed00 	.word	0xe000ed00

08004648 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004648:	4b16      	ldr	r3, [pc, #88]	; (80046a4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800464a:	b530      	push	{r4, r5, lr}
 800464c:	68dc      	ldr	r4, [r3, #12]
 800464e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004652:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004656:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004658:	2d04      	cmp	r5, #4
 800465a:	bf28      	it	cs
 800465c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800465e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004660:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004664:	bf8c      	ite	hi
 8004666:	3c03      	subhi	r4, #3
 8004668:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800466a:	fa03 f505 	lsl.w	r5, r3, r5
 800466e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004672:	40a3      	lsls	r3, r4
 8004674:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004678:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800467a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800467c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004680:	bfac      	ite	ge
 8004682:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004686:	4a08      	ldrlt	r2, [pc, #32]	; (80046a8 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004688:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800468c:	bfb8      	it	lt
 800468e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004692:	b2db      	uxtb	r3, r3
 8004694:	bfaa      	itet	ge
 8004696:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800469a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800469c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80046a0:	bd30      	pop	{r4, r5, pc}
 80046a2:	bf00      	nop
 80046a4:	e000ed00 	.word	0xe000ed00
 80046a8:	e000ed14 	.word	0xe000ed14

080046ac <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80046ac:	2800      	cmp	r0, #0
 80046ae:	db08      	blt.n	80046c2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80046b0:	0942      	lsrs	r2, r0, #5
 80046b2:	2301      	movs	r3, #1
 80046b4:	f000 001f 	and.w	r0, r0, #31
 80046b8:	fa03 f000 	lsl.w	r0, r3, r0
 80046bc:	4b01      	ldr	r3, [pc, #4]	; (80046c4 <HAL_NVIC_EnableIRQ+0x18>)
 80046be:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80046c2:	4770      	bx	lr
 80046c4:	e000e100 	.word	0xe000e100

080046c8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80046c8:	2800      	cmp	r0, #0
 80046ca:	db0d      	blt.n	80046e8 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80046cc:	0943      	lsrs	r3, r0, #5
 80046ce:	2201      	movs	r2, #1
 80046d0:	f000 001f 	and.w	r0, r0, #31
 80046d4:	fa02 f000 	lsl.w	r0, r2, r0
 80046d8:	3320      	adds	r3, #32
 80046da:	4a04      	ldr	r2, [pc, #16]	; (80046ec <HAL_NVIC_DisableIRQ+0x24>)
 80046dc:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80046e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80046e4:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80046e8:	4770      	bx	lr
 80046ea:	bf00      	nop
 80046ec:	e000e100 	.word	0xe000e100

080046f0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80046f0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80046f2:	4604      	mov	r4, r0
 80046f4:	b150      	cbz	r0, 800470c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80046f6:	7943      	ldrb	r3, [r0, #5]
 80046f8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80046fc:	b913      	cbnz	r3, 8004704 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80046fe:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004700:	f7fd fe1a 	bl	8002338 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004704:	2301      	movs	r3, #1
 8004706:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004708:	2000      	movs	r0, #0
}
 800470a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800470c:	2001      	movs	r0, #1
 800470e:	e7fc      	b.n	800470a <HAL_CRC_Init+0x1a>

08004710 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004710:	6803      	ldr	r3, [r0, #0]
{
 8004712:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004714:	4c08      	ldr	r4, [pc, #32]	; (8004738 <DMA_CalcBaseAndBitshift+0x28>)
{
 8004716:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004718:	b2d9      	uxtb	r1, r3
 800471a:	3910      	subs	r1, #16
 800471c:	2018      	movs	r0, #24
 800471e:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004722:	5c20      	ldrb	r0, [r4, r0]
 8004724:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004726:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800472a:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 800472e:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004730:	bf88      	it	hi
 8004732:	3004      	addhi	r0, #4
 8004734:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8004736:	bd10      	pop	{r4, pc}
 8004738:	0801f789 	.word	0x0801f789

0800473c <HAL_DMA_Init>:
{
 800473c:	b570      	push	{r4, r5, r6, lr}
 800473e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004740:	f7ff ff56 	bl	80045f0 <HAL_GetTick>
 8004744:	4605      	mov	r5, r0
  if(hdma == NULL)
 8004746:	2c00      	cmp	r4, #0
 8004748:	d073      	beq.n	8004832 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 800474a:	2302      	movs	r3, #2
 800474c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8004750:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8004752:	2300      	movs	r3, #0
 8004754:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8004758:	6813      	ldr	r3, [r2, #0]
 800475a:	f023 0301 	bic.w	r3, r3, #1
 800475e:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004760:	6821      	ldr	r1, [r4, #0]
 8004762:	680b      	ldr	r3, [r1, #0]
 8004764:	07d8      	lsls	r0, r3, #31
 8004766:	d42f      	bmi.n	80047c8 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8004768:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800476a:	4d33      	ldr	r5, [pc, #204]	; (8004838 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800476c:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800476e:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004770:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8004774:	4313      	orrs	r3, r2
 8004776:	68e2      	ldr	r2, [r4, #12]
 8004778:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800477a:	6922      	ldr	r2, [r4, #16]
 800477c:	4313      	orrs	r3, r2
 800477e:	6962      	ldr	r2, [r4, #20]
 8004780:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004782:	69e2      	ldr	r2, [r4, #28]
 8004784:	4303      	orrs	r3, r0
 8004786:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8004788:	6a22      	ldr	r2, [r4, #32]
 800478a:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800478c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800478e:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004790:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004794:	bf02      	ittt	eq
 8004796:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800479a:	4335      	orreq	r5, r6
 800479c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800479e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 80047a0:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80047a2:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80047a4:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 80047a8:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80047ac:	d133      	bne.n	8004816 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 80047ae:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80047b0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 80047b2:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80047b4:	b37d      	cbz	r5, 8004816 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80047b6:	b990      	cbnz	r0, 80047de <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 80047b8:	2a01      	cmp	r2, #1
 80047ba:	d021      	beq.n	8004800 <HAL_DMA_Init+0xc4>
 80047bc:	f032 0202 	bics.w	r2, r2, #2
 80047c0:	d129      	bne.n	8004816 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80047c2:	01ea      	lsls	r2, r5, #7
 80047c4:	d527      	bpl.n	8004816 <HAL_DMA_Init+0xda>
 80047c6:	e01e      	b.n	8004806 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80047c8:	f7ff ff12 	bl	80045f0 <HAL_GetTick>
 80047cc:	1b40      	subs	r0, r0, r5
 80047ce:	2805      	cmp	r0, #5
 80047d0:	d9c6      	bls.n	8004760 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80047d2:	2320      	movs	r3, #32
 80047d4:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80047d6:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 80047d8:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 80047dc:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80047de:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 80047e2:	d114      	bne.n	800480e <HAL_DMA_Init+0xd2>
    switch (tmp)
 80047e4:	2a03      	cmp	r2, #3
 80047e6:	d816      	bhi.n	8004816 <HAL_DMA_Init+0xda>
 80047e8:	a001      	add	r0, pc, #4	; (adr r0, 80047f0 <HAL_DMA_Init+0xb4>)
 80047ea:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 80047ee:	bf00      	nop
 80047f0:	08004807 	.word	0x08004807
 80047f4:	080047c3 	.word	0x080047c3
 80047f8:	08004807 	.word	0x08004807
 80047fc:	08004801 	.word	0x08004801
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004800:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004804:	d107      	bne.n	8004816 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004806:	2340      	movs	r3, #64	; 0x40
 8004808:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800480a:	2001      	movs	r0, #1
 800480c:	e7e4      	b.n	80047d8 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800480e:	2a02      	cmp	r2, #2
 8004810:	d9f9      	bls.n	8004806 <HAL_DMA_Init+0xca>
 8004812:	2a03      	cmp	r2, #3
 8004814:	d0d5      	beq.n	80047c2 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8004816:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004818:	4620      	mov	r0, r4
 800481a:	f7ff ff79 	bl	8004710 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800481e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004820:	233f      	movs	r3, #63	; 0x3f
 8004822:	4093      	lsls	r3, r2
 8004824:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004826:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004828:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800482a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800482c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8004830:	e7d4      	b.n	80047dc <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8004832:	2001      	movs	r0, #1
 8004834:	e7d2      	b.n	80047dc <HAL_DMA_Init+0xa0>
 8004836:	bf00      	nop
 8004838:	f010803f 	.word	0xf010803f

0800483c <HAL_DMA_DeInit>:
{
 800483c:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800483e:	4605      	mov	r5, r0
 8004840:	b320      	cbz	r0, 800488c <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8004842:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004846:	2b02      	cmp	r3, #2
 8004848:	b2dc      	uxtb	r4, r3
 800484a:	d01d      	beq.n	8004888 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800484c:	6803      	ldr	r3, [r0, #0]
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8004854:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8004856:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8004858:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800485a:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800485c:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800485e:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8004860:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8004862:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8004864:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004866:	f7ff ff53 	bl	8004710 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800486a:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800486c:	233f      	movs	r3, #63	; 0x3f
 800486e:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8004870:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004874:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8004878:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800487c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800487e:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004880:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004884:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8004888:	4620      	mov	r0, r4
 800488a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800488c:	2401      	movs	r4, #1
 800488e:	e7fb      	b.n	8004888 <HAL_DMA_DeInit+0x4c>

08004890 <HAL_DMA_Start_IT>:
{
 8004890:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8004892:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004896:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __HAL_LOCK(hdma);
 8004898:	2c01      	cmp	r4, #1
 800489a:	d031      	beq.n	8004900 <HAL_DMA_Start_IT+0x70>
 800489c:	2401      	movs	r4, #1
 800489e:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 80048a2:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 80048a6:	2c01      	cmp	r4, #1
 80048a8:	f04f 0500 	mov.w	r5, #0
 80048ac:	f04f 0402 	mov.w	r4, #2
 80048b0:	d124      	bne.n	80048fc <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 80048b2:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80048b6:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80048b8:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80048ba:	6825      	ldr	r5, [r4, #0]
 80048bc:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 80048c0:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 80048c2:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80048c4:	6883      	ldr	r3, [r0, #8]
 80048c6:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 80048c8:	bf0e      	itee	eq
 80048ca:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 80048cc:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 80048ce:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80048d0:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 80048d2:	bf08      	it	eq
 80048d4:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80048d6:	233f      	movs	r3, #63	; 0x3f
 80048d8:	4093      	lsls	r3, r2
 80048da:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 80048dc:	6823      	ldr	r3, [r4, #0]
 80048de:	f043 0316 	orr.w	r3, r3, #22
 80048e2:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 80048e4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80048e6:	b11b      	cbz	r3, 80048f0 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 80048e8:	6823      	ldr	r3, [r4, #0]
 80048ea:	f043 0308 	orr.w	r3, r3, #8
 80048ee:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 80048f0:	6823      	ldr	r3, [r4, #0]
 80048f2:	f043 0301 	orr.w	r3, r3, #1
 80048f6:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80048f8:	2000      	movs	r0, #0
}
 80048fa:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 80048fc:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8004900:	2002      	movs	r0, #2
 8004902:	e7fa      	b.n	80048fa <HAL_DMA_Start_IT+0x6a>

08004904 <HAL_DMA_Abort>:
{
 8004904:	b570      	push	{r4, r5, r6, lr}
 8004906:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004908:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800490a:	f7ff fe71 	bl	80045f0 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800490e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8004912:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004914:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004916:	d006      	beq.n	8004926 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004918:	2380      	movs	r3, #128	; 0x80
 800491a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800491c:	2300      	movs	r3, #0
 800491e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8004922:	2001      	movs	r0, #1
}
 8004924:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004926:	6823      	ldr	r3, [r4, #0]
 8004928:	681a      	ldr	r2, [r3, #0]
 800492a:	f022 0216 	bic.w	r2, r2, #22
 800492e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004930:	695a      	ldr	r2, [r3, #20]
 8004932:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004936:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004938:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800493a:	b90a      	cbnz	r2, 8004940 <HAL_DMA_Abort+0x3c>
 800493c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800493e:	b11a      	cbz	r2, 8004948 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004940:	681a      	ldr	r2, [r3, #0]
 8004942:	f022 0208 	bic.w	r2, r2, #8
 8004946:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004948:	681a      	ldr	r2, [r3, #0]
 800494a:	f022 0201 	bic.w	r2, r2, #1
 800494e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004950:	6823      	ldr	r3, [r4, #0]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f013 0301 	ands.w	r3, r3, #1
 8004958:	d10a      	bne.n	8004970 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800495a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800495c:	223f      	movs	r2, #63	; 0x3f
 800495e:	408a      	lsls	r2, r1
 8004960:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004962:	2201      	movs	r2, #1
 8004964:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8004968:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800496c:	4618      	mov	r0, r3
 800496e:	e7d9      	b.n	8004924 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004970:	f7ff fe3e 	bl	80045f0 <HAL_GetTick>
 8004974:	1b40      	subs	r0, r0, r5
 8004976:	2805      	cmp	r0, #5
 8004978:	d9ea      	bls.n	8004950 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800497a:	2320      	movs	r3, #32
 800497c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800497e:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8004980:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004982:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8004986:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800498a:	e7cb      	b.n	8004924 <HAL_DMA_Abort+0x20>

0800498c <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800498c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004990:	2b02      	cmp	r3, #2
 8004992:	d003      	beq.n	800499c <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004994:	2380      	movs	r3, #128	; 0x80
 8004996:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8004998:	2001      	movs	r0, #1
 800499a:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800499c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800499e:	2305      	movs	r3, #5
 80049a0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80049a4:	6813      	ldr	r3, [r2, #0]
 80049a6:	f023 0301 	bic.w	r3, r3, #1
 80049aa:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 80049ac:	2000      	movs	r0, #0
}
 80049ae:	4770      	bx	lr

080049b0 <HAL_DMA_IRQHandler>:
{
 80049b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0U;
 80049b2:	2300      	movs	r3, #0
 80049b4:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600U;
 80049b6:	4b5c      	ldr	r3, [pc, #368]	; (8004b28 <HAL_DMA_IRQHandler+0x178>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80049b8:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 80049ba:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80049bc:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 80049be:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80049c0:	2208      	movs	r2, #8
 80049c2:	409a      	lsls	r2, r3
 80049c4:	4232      	tst	r2, r6
{
 80049c6:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80049c8:	d00c      	beq.n	80049e4 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80049ca:	6801      	ldr	r1, [r0, #0]
 80049cc:	6808      	ldr	r0, [r1, #0]
 80049ce:	0740      	lsls	r0, r0, #29
 80049d0:	d508      	bpl.n	80049e4 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 80049d2:	6808      	ldr	r0, [r1, #0]
 80049d4:	f020 0004 	bic.w	r0, r0, #4
 80049d8:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 80049da:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80049dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80049de:	f042 0201 	orr.w	r2, r2, #1
 80049e2:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80049e4:	2201      	movs	r2, #1
 80049e6:	409a      	lsls	r2, r3
 80049e8:	4232      	tst	r2, r6
 80049ea:	d008      	beq.n	80049fe <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80049ec:	6821      	ldr	r1, [r4, #0]
 80049ee:	6949      	ldr	r1, [r1, #20]
 80049f0:	0609      	lsls	r1, r1, #24
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80049f2:	bf41      	itttt	mi
 80049f4:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80049f6:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 80049f8:	f042 0202 	orrmi.w	r2, r2, #2
 80049fc:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80049fe:	2204      	movs	r2, #4
 8004a00:	409a      	lsls	r2, r3
 8004a02:	4232      	tst	r2, r6
 8004a04:	d008      	beq.n	8004a18 <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8004a06:	6821      	ldr	r1, [r4, #0]
 8004a08:	6809      	ldr	r1, [r1, #0]
 8004a0a:	0788      	lsls	r0, r1, #30
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8004a0c:	bf41      	itttt	mi
 8004a0e:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004a10:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 8004a12:	f042 0204 	orrmi.w	r2, r2, #4
 8004a16:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8004a18:	2210      	movs	r2, #16
 8004a1a:	409a      	lsls	r2, r3
 8004a1c:	4232      	tst	r2, r6
 8004a1e:	d010      	beq.n	8004a42 <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8004a20:	6823      	ldr	r3, [r4, #0]
 8004a22:	6819      	ldr	r1, [r3, #0]
 8004a24:	0709      	lsls	r1, r1, #28
 8004a26:	d50c      	bpl.n	8004a42 <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8004a28:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8004a2a:	681a      	ldr	r2, [r3, #0]
 8004a2c:	0350      	lsls	r0, r2, #13
 8004a2e:	d537      	bpl.n	8004aa0 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	0319      	lsls	r1, r3, #12
 8004a34:	d401      	bmi.n	8004a3a <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 8004a36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004a38:	e000      	b.n	8004a3c <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 8004a3a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 8004a3c:	b10b      	cbz	r3, 8004a42 <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 8004a3e:	4620      	mov	r0, r4
 8004a40:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8004a42:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8004a44:	2220      	movs	r2, #32
 8004a46:	408a      	lsls	r2, r1
 8004a48:	4232      	tst	r2, r6
 8004a4a:	d03a      	beq.n	8004ac2 <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8004a4c:	6823      	ldr	r3, [r4, #0]
 8004a4e:	6818      	ldr	r0, [r3, #0]
 8004a50:	06c6      	lsls	r6, r0, #27
 8004a52:	d536      	bpl.n	8004ac2 <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8004a54:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8004a56:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 8004a5a:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004a5c:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8004a5e:	d127      	bne.n	8004ab0 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004a60:	f022 0216 	bic.w	r2, r2, #22
 8004a64:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004a66:	695a      	ldr	r2, [r3, #20]
 8004a68:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004a6c:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004a6e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004a70:	b90a      	cbnz	r2, 8004a76 <HAL_DMA_IRQHandler+0xc6>
 8004a72:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8004a74:	b11a      	cbz	r2, 8004a7e <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004a76:	681a      	ldr	r2, [r3, #0]
 8004a78:	f022 0208 	bic.w	r2, r2, #8
 8004a7c:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004a7e:	233f      	movs	r3, #63	; 0x3f
 8004a80:	408b      	lsls	r3, r1
 8004a82:	60ab      	str	r3, [r5, #8]
        hdma->State = HAL_DMA_STATE_READY;
 8004a84:	2301      	movs	r3, #1
 8004a86:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8004a8a:	2300      	movs	r3, #0
 8004a8c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 8004a90:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d045      	beq.n	8004b22 <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 8004a96:	4620      	mov	r0, r4
}
 8004a98:	b003      	add	sp, #12
 8004a9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 8004a9e:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8004aa0:	681a      	ldr	r2, [r3, #0]
 8004aa2:	05d2      	lsls	r2, r2, #23
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004aa4:	bf5e      	ittt	pl
 8004aa6:	681a      	ldrpl	r2, [r3, #0]
 8004aa8:	f022 0208 	bicpl.w	r2, r2, #8
 8004aac:	601a      	strpl	r2, [r3, #0]
 8004aae:	e7c2      	b.n	8004a36 <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8004ab0:	0350      	lsls	r0, r2, #13
 8004ab2:	d527      	bpl.n	8004b04 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	0319      	lsls	r1, r3, #12
 8004ab8:	d431      	bmi.n	8004b1e <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 8004aba:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 8004abc:	b10b      	cbz	r3, 8004ac2 <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 8004abe:	4620      	mov	r0, r4
 8004ac0:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004ac2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004ac4:	b36b      	cbz	r3, 8004b22 <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8004ac6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004ac8:	07da      	lsls	r2, r3, #31
 8004aca:	d519      	bpl.n	8004b00 <HAL_DMA_IRQHandler+0x150>
      __HAL_DMA_DISABLE(hdma);
 8004acc:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8004ace:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8004ad2:	fbb7 f7f3 	udiv	r7, r7, r3
      hdma->State = HAL_DMA_STATE_ABORT;
 8004ad6:	2305      	movs	r3, #5
 8004ad8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8004adc:	6813      	ldr	r3, [r2, #0]
 8004ade:	f023 0301 	bic.w	r3, r3, #1
 8004ae2:	6013      	str	r3, [r2, #0]
        if (++count > timeout)
 8004ae4:	9b01      	ldr	r3, [sp, #4]
 8004ae6:	3301      	adds	r3, #1
 8004ae8:	42bb      	cmp	r3, r7
 8004aea:	9301      	str	r3, [sp, #4]
 8004aec:	d802      	bhi.n	8004af4 <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8004aee:	6813      	ldr	r3, [r2, #0]
 8004af0:	07db      	lsls	r3, r3, #31
 8004af2:	d4f7      	bmi.n	8004ae4 <HAL_DMA_IRQHandler+0x134>
      hdma->State = HAL_DMA_STATE_READY;
 8004af4:	2301      	movs	r3, #1
 8004af6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 8004afa:	2300      	movs	r3, #0
 8004afc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 8004b00:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8004b02:	e7c6      	b.n	8004a92 <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8004b04:	681a      	ldr	r2, [r3, #0]
 8004b06:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 8004b0a:	d108      	bne.n	8004b1e <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8004b0c:	6819      	ldr	r1, [r3, #0]
 8004b0e:	f021 0110 	bic.w	r1, r1, #16
 8004b12:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8004b14:	2301      	movs	r3, #1
 8004b16:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 8004b1a:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
        if(hdma->XferCpltCallback != NULL)
 8004b1e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b20:	e7cc      	b.n	8004abc <HAL_DMA_IRQHandler+0x10c>
}
 8004b22:	b003      	add	sp, #12
 8004b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b26:	bf00      	nop
 8004b28:	20000050 	.word	0x20000050

08004b2c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004b2c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004b2e:	4604      	mov	r4, r0
 8004b30:	b330      	cbz	r0, 8004b80 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004b32:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004b36:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b3a:	b91b      	cbnz	r3, 8004b44 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004b3c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004b40:	f7fd fc12 	bl	8002368 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004b44:	6822      	ldr	r2, [r4, #0]
 8004b46:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004b48:	2302      	movs	r3, #2
 8004b4a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004b4e:	6813      	ldr	r3, [r2, #0]
 8004b50:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004b54:	430b      	orrs	r3, r1
 8004b56:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004b58:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004b5a:	68a1      	ldr	r1, [r4, #8]
 8004b5c:	f023 0307 	bic.w	r3, r3, #7
 8004b60:	430b      	orrs	r3, r1
 8004b62:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004b64:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004b66:	68e1      	ldr	r1, [r4, #12]
 8004b68:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004b6c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004b70:	430b      	orrs	r3, r1
 8004b72:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004b74:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004b76:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004b78:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004b7a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8004b7e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004b80:	2001      	movs	r0, #1
 8004b82:	e7fc      	b.n	8004b7e <HAL_DMA2D_Init+0x52>

08004b84 <HAL_DMA2D_LineEventCallback>:
 8004b84:	4770      	bx	lr

08004b86 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004b86:	4770      	bx	lr

08004b88 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b88:	6803      	ldr	r3, [r0, #0]
{
 8004b8a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b8c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004b8e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b90:	07f2      	lsls	r2, r6, #31
{
 8004b92:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b94:	d514      	bpl.n	8004bc0 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004b96:	05e9      	lsls	r1, r5, #23
 8004b98:	d512      	bpl.n	8004bc0 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004b9a:	681a      	ldr	r2, [r3, #0]
 8004b9c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004ba0:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004ba2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004ba4:	f042 0201 	orr.w	r2, r2, #1
 8004ba8:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004baa:	2201      	movs	r2, #1
 8004bac:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004bae:	2304      	movs	r3, #4
 8004bb0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004bb4:	2300      	movs	r3, #0
 8004bb6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004bba:	6943      	ldr	r3, [r0, #20]
 8004bbc:	b103      	cbz	r3, 8004bc0 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004bbe:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004bc0:	06b2      	lsls	r2, r6, #26
 8004bc2:	d516      	bpl.n	8004bf2 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004bc4:	04ab      	lsls	r3, r5, #18
 8004bc6:	d514      	bpl.n	8004bf2 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004bc8:	6823      	ldr	r3, [r4, #0]
 8004bca:	681a      	ldr	r2, [r3, #0]
 8004bcc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004bd0:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004bd2:	2220      	movs	r2, #32
 8004bd4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004bd6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004bd8:	f043 0302 	orr.w	r3, r3, #2
 8004bdc:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004bde:	2304      	movs	r3, #4
 8004be0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004be4:	2300      	movs	r3, #0
 8004be6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004bea:	6963      	ldr	r3, [r4, #20]
 8004bec:	b10b      	cbz	r3, 8004bf2 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004bee:	4620      	mov	r0, r4
 8004bf0:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004bf2:	0730      	lsls	r0, r6, #28
 8004bf4:	d516      	bpl.n	8004c24 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004bf6:	0529      	lsls	r1, r5, #20
 8004bf8:	d514      	bpl.n	8004c24 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004bfa:	6823      	ldr	r3, [r4, #0]
 8004bfc:	681a      	ldr	r2, [r3, #0]
 8004bfe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004c02:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004c04:	2208      	movs	r2, #8
 8004c06:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004c08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c0a:	f043 0304 	orr.w	r3, r3, #4
 8004c0e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004c10:	2304      	movs	r3, #4
 8004c12:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004c16:	2300      	movs	r3, #0
 8004c18:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004c1c:	6963      	ldr	r3, [r4, #20]
 8004c1e:	b10b      	cbz	r3, 8004c24 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004c20:	4620      	mov	r0, r4
 8004c22:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004c24:	0772      	lsls	r2, r6, #29
 8004c26:	d50b      	bpl.n	8004c40 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004c28:	056b      	lsls	r3, r5, #21
 8004c2a:	d509      	bpl.n	8004c40 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004c2c:	6823      	ldr	r3, [r4, #0]
 8004c2e:	681a      	ldr	r2, [r3, #0]
 8004c30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c34:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004c36:	2204      	movs	r2, #4
 8004c38:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004c3a:	4620      	mov	r0, r4
 8004c3c:	f7ff ffa2 	bl	8004b84 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004c40:	07b0      	lsls	r0, r6, #30
 8004c42:	d514      	bpl.n	8004c6e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004c44:	05a9      	lsls	r1, r5, #22
 8004c46:	d512      	bpl.n	8004c6e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004c48:	6823      	ldr	r3, [r4, #0]
 8004c4a:	681a      	ldr	r2, [r3, #0]
 8004c4c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004c50:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004c52:	2202      	movs	r2, #2
 8004c54:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004c56:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c58:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c5a:	2301      	movs	r3, #1
 8004c5c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004c60:	2300      	movs	r3, #0
 8004c62:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8004c66:	6923      	ldr	r3, [r4, #16]
 8004c68:	b10b      	cbz	r3, 8004c6e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004c6a:	4620      	mov	r0, r4
 8004c6c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004c6e:	06f2      	lsls	r2, r6, #27
 8004c70:	d513      	bpl.n	8004c9a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004c72:	04eb      	lsls	r3, r5, #19
 8004c74:	d511      	bpl.n	8004c9a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004c76:	6823      	ldr	r3, [r4, #0]
 8004c78:	681a      	ldr	r2, [r3, #0]
 8004c7a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004c7e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004c80:	2210      	movs	r2, #16
 8004c82:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004c84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c86:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c88:	2301      	movs	r3, #1
 8004c8a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004c8e:	2300      	movs	r3, #0
 8004c90:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004c94:	4620      	mov	r0, r4
 8004c96:	f7ff ff76 	bl	8004b86 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004c9a:	bd70      	pop	{r4, r5, r6, pc}

08004c9c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004c9e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004ca2:	2b01      	cmp	r3, #1
 8004ca4:	f04f 0302 	mov.w	r3, #2
 8004ca8:	d02b      	beq.n	8004d02 <HAL_DMA2D_ConfigLayer+0x66>
 8004caa:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004cac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004cb0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004cb4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004cb8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004cbc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004cbe:	4f18      	ldr	r7, [pc, #96]	; (8004d20 <HAL_DMA2D_ConfigLayer+0x84>)
 8004cc0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004cc4:	3c09      	subs	r4, #9
 8004cc6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004cc8:	bf9c      	itt	ls
 8004cca:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004cce:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004cd0:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004cd4:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004cd6:	bf88      	it	hi
 8004cd8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004cdc:	b999      	cbnz	r1, 8004d06 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004cde:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004ce0:	4039      	ands	r1, r7
 8004ce2:	430a      	orrs	r2, r1
 8004ce4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ce6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004ce8:	6982      	ldr	r2, [r0, #24]
 8004cea:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004cec:	d803      	bhi.n	8004cf6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004cee:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004cf0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004cf4:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004cf6:	2301      	movs	r3, #1
 8004cf8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004cfc:	2300      	movs	r3, #0
 8004cfe:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004d02:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004d06:	69d9      	ldr	r1, [r3, #28]
 8004d08:	4039      	ands	r1, r7
 8004d0a:	430a      	orrs	r2, r1
 8004d0c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004d0e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004d10:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004d12:	6992      	ldr	r2, [r2, #24]
 8004d14:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004d16:	bf9c      	itt	ls
 8004d18:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004d1c:	621d      	strls	r5, [r3, #32]
 8004d1e:	e7ea      	b.n	8004cf6 <HAL_DMA2D_ConfigLayer+0x5a>
 8004d20:	00fcfff0 	.word	0x00fcfff0

08004d24 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8004d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d28:	4607      	mov	r7, r0
 8004d2a:	460d      	mov	r5, r1
 8004d2c:	4614      	mov	r4, r2
 8004d2e:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004d30:	f7ff fc5e 	bl	80045f0 <HAL_GetTick>
 8004d34:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004d36:	683b      	ldr	r3, [r7, #0]
 8004d38:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8004d3a:	07d2      	lsls	r2, r2, #31
 8004d3c:	d50a      	bpl.n	8004d54 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004d3e:	9906      	ldr	r1, [sp, #24]
 8004d40:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8004d44:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8004d48:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004d4c:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8004d4e:	2000      	movs	r0, #0
}
 8004d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004d54:	f7ff fc4c 	bl	80045f0 <HAL_GetTick>
 8004d58:	eba0 0008 	sub.w	r0, r0, r8
 8004d5c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004d60:	d9e9      	bls.n	8004d36 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8004d62:	2003      	movs	r0, #3
 8004d64:	e7f4      	b.n	8004d50 <DSI_ShortWrite+0x2c>

08004d66 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004d66:	7c03      	ldrb	r3, [r0, #16]
 8004d68:	2b01      	cmp	r3, #1
 8004d6a:	d05d      	beq.n	8004e28 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8004d6c:	6803      	ldr	r3, [r0, #0]
 8004d6e:	2200      	movs	r2, #0
 8004d70:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004d74:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004d78:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004d7a:	bf48      	it	mi
 8004d7c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004d80:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004d82:	bf42      	ittt	mi
 8004d84:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004d88:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004d8c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004d90:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8004d92:	bf42      	ittt	mi
 8004d94:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004d98:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004d9c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004da0:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8004da2:	bf42      	ittt	mi
 8004da4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004da8:	f042 0201 	orrmi.w	r2, r2, #1
 8004dac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8004db0:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8004db2:	bf42      	ittt	mi
 8004db4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004db8:	f042 0202 	orrmi.w	r2, r2, #2
 8004dbc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004dc0:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004dc2:	bf42      	ittt	mi
 8004dc4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004dc8:	f042 020c 	orrmi.w	r2, r2, #12
 8004dcc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004dd0:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004dd2:	bf42      	ittt	mi
 8004dd4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004dd8:	f042 0210 	orrmi.w	r2, r2, #16
 8004ddc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004de0:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004de2:	bf42      	ittt	mi
 8004de4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004de8:	f042 0220 	orrmi.w	r2, r2, #32
 8004dec:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004df0:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004df2:	bf42      	ittt	mi
 8004df4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004df8:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004dfc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004e00:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004e02:	bf42      	ittt	mi
 8004e04:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004e08:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004e0c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004e10:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8004e12:	bf42      	ittt	mi
 8004e14:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004e18:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004e1c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004e20:	2300      	movs	r3, #0
 8004e22:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004e24:	4618      	mov	r0, r3
 8004e26:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004e28:	2002      	movs	r0, #2
}
 8004e2a:	4770      	bx	lr

08004e2c <HAL_DSI_Init>:
{
 8004e2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004e2e:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004e30:	4604      	mov	r4, r0
 8004e32:	2800      	cmp	r0, #0
 8004e34:	f000 80a9 	beq.w	8004f8a <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004e38:	7c43      	ldrb	r3, [r0, #17]
 8004e3a:	b90b      	cbnz	r3, 8004e40 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004e3c:	f7fd fab6 	bl	80023ac <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004e40:	2303      	movs	r3, #3
 8004e42:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8004e44:	2300      	movs	r3, #0
 8004e46:	9300      	str	r3, [sp, #0]
 8004e48:	6823      	ldr	r3, [r4, #0]
 8004e4a:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8004e4e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004e52:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8004e56:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8004e5a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004e5e:	9300      	str	r3, [sp, #0]
 8004e60:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8004e62:	f7ff fbc5 	bl	80045f0 <HAL_GetTick>
 8004e66:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8004e68:	6822      	ldr	r2, [r4, #0]
 8004e6a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8004e6e:	04d9      	lsls	r1, r3, #19
 8004e70:	d57a      	bpl.n	8004f68 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8004e72:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004e76:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8004e7a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8004e7e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8004e82:	e9d5 0300 	ldrd	r0, r3, [r5]
 8004e86:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004e88:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 8004e8c:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004e8e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8004e92:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004e96:	430b      	orrs	r3, r1
 8004e98:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004e9c:	2300      	movs	r3, #0
 8004e9e:	9301      	str	r3, [sp, #4]
 8004ea0:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004ea4:	f043 0301 	orr.w	r3, r3, #1
 8004ea8:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004eac:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004eb0:	f003 0301 	and.w	r3, r3, #1
 8004eb4:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 8004eb6:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004eb8:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8004eba:	f7ff fb9f 	bl	80045fc <HAL_Delay>
  tickstart = HAL_GetTick();
 8004ebe:	f7ff fb97 	bl	80045f0 <HAL_GetTick>
 8004ec2:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004ec4:	6823      	ldr	r3, [r4, #0]
 8004ec6:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004eca:	05d2      	lsls	r2, r2, #23
 8004ecc:	d556      	bpl.n	8004f7c <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004ece:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004ed2:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004ed4:	f042 0206 	orr.w	r2, r2, #6
 8004ed8:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004edc:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004ee0:	f022 0203 	bic.w	r2, r2, #3
 8004ee4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004ee8:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004eec:	430a      	orrs	r2, r1
 8004eee:	f042 0201 	orr.w	r2, r2, #1
 8004ef2:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004ef6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004efa:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004efc:	f022 0203 	bic.w	r2, r2, #3
 8004f00:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004f04:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004f08:	430a      	orrs	r2, r1
 8004f0a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004f0e:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004f10:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004f12:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004f16:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004f18:	689a      	ldr	r2, [r3, #8]
 8004f1a:	430a      	orrs	r2, r1
 8004f1c:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004f1e:	686a      	ldr	r2, [r5, #4]
 8004f20:	491b      	ldr	r1, [pc, #108]	; (8004f90 <HAL_DSI_Init+0x164>)
 8004f22:	2a01      	cmp	r2, #1
 8004f24:	bf38      	it	cc
 8004f26:	2201      	movcc	r2, #1
 8004f28:	434a      	muls	r2, r1
 8004f2a:	68a9      	ldr	r1, [r5, #8]
 8004f2c:	f001 0103 	and.w	r1, r1, #3
 8004f30:	408a      	lsls	r2, r1
 8004f32:	6829      	ldr	r1, [r5, #0]
 8004f34:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8004f38:	4341      	muls	r1, r0
 8004f3a:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004f3e:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8004f42:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8004f46:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004f4a:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004f4e:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004f50:	430a      	orrs	r2, r1
 8004f52:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004f56:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004f5a:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004f5e:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004f60:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8004f62:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8004f64:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8004f66:	e007      	b.n	8004f78 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004f68:	f7ff fb42 	bl	80045f0 <HAL_GetTick>
 8004f6c:	1b80      	subs	r0, r0, r6
 8004f6e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004f72:	f67f af79 	bls.w	8004e68 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8004f76:	2003      	movs	r0, #3
}
 8004f78:	b002      	add	sp, #8
 8004f7a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004f7c:	f7ff fb38 	bl	80045f0 <HAL_GetTick>
 8004f80:	1b80      	subs	r0, r0, r6
 8004f82:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004f86:	d99d      	bls.n	8004ec4 <HAL_DSI_Init+0x98>
 8004f88:	e7f5      	b.n	8004f76 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 8004f8a:	2001      	movs	r0, #1
 8004f8c:	e7f4      	b.n	8004f78 <HAL_DSI_Init+0x14c>
 8004f8e:	bf00      	nop
 8004f90:	003d0900 	.word	0x003d0900

08004f94 <HAL_DSI_ErrorCallback>:
 8004f94:	4770      	bx	lr

08004f96 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004f96:	6803      	ldr	r3, [r0, #0]
 8004f98:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004f9c:	07d1      	lsls	r1, r2, #31
{
 8004f9e:	b510      	push	{r4, lr}
 8004fa0:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004fa2:	d508      	bpl.n	8004fb6 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004fa4:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004fa8:	07d2      	lsls	r2, r2, #31
 8004faa:	d504      	bpl.n	8004fb6 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004fac:	2201      	movs	r2, #1
 8004fae:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8004fb2:	f7fc f9e3 	bl	800137c <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8004fb6:	6823      	ldr	r3, [r4, #0]
 8004fb8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004fbc:	0791      	lsls	r1, r2, #30
 8004fbe:	d509      	bpl.n	8004fd4 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004fc0:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004fc4:	0792      	lsls	r2, r2, #30
 8004fc6:	d505      	bpl.n	8004fd4 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004fc8:	2202      	movs	r2, #2
 8004fca:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004fce:	4620      	mov	r0, r4
 8004fd0:	f7fc fa08 	bl	80013e4 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004fd4:	69a3      	ldr	r3, [r4, #24]
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d04e      	beq.n	8005078 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004fda:	6821      	ldr	r1, [r4, #0]
 8004fdc:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004fe0:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004fe4:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004fe8:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004fea:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004fee:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004ff0:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004ff2:	b119      	cbz	r1, 8004ffc <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004ff4:	6961      	ldr	r1, [r4, #20]
 8004ff6:	f041 0101 	orr.w	r1, r1, #1
 8004ffa:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004ffc:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8005000:	bf1e      	ittt	ne
 8005002:	6962      	ldrne	r2, [r4, #20]
 8005004:	f042 0202 	orrne.w	r2, r2, #2
 8005008:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800500a:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800500c:	bf42      	ittt	mi
 800500e:	6962      	ldrmi	r2, [r4, #20]
 8005010:	f042 0204 	orrmi.w	r2, r2, #4
 8005014:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8005016:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8005018:	bf42      	ittt	mi
 800501a:	6962      	ldrmi	r2, [r4, #20]
 800501c:	f042 0208 	orrmi.w	r2, r2, #8
 8005020:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8005022:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8005026:	bf1e      	ittt	ne
 8005028:	6962      	ldrne	r2, [r4, #20]
 800502a:	f042 0210 	orrne.w	r2, r2, #16
 800502e:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8005030:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8005032:	bf42      	ittt	mi
 8005034:	6962      	ldrmi	r2, [r4, #20]
 8005036:	f042 0220 	orrmi.w	r2, r2, #32
 800503a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800503c:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800503e:	bf42      	ittt	mi
 8005040:	6962      	ldrmi	r2, [r4, #20]
 8005042:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8005046:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8005048:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800504a:	bf42      	ittt	mi
 800504c:	6962      	ldrmi	r2, [r4, #20]
 800504e:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005052:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8005054:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8005056:	bf42      	ittt	mi
 8005058:	6962      	ldrmi	r2, [r4, #20]
 800505a:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800505e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8005060:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8005064:	bf1e      	ittt	ne
 8005066:	6963      	ldrne	r3, [r4, #20]
 8005068:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800506c:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800506e:	6963      	ldr	r3, [r4, #20]
 8005070:	b113      	cbz	r3, 8005078 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8005072:	4620      	mov	r0, r4
 8005074:	f7ff ff8e 	bl	8004f94 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8005078:	bd10      	pop	{r4, pc}

0800507a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800507a:	7c03      	ldrb	r3, [r0, #16]
 800507c:	2b01      	cmp	r3, #1
 800507e:	d00b      	beq.n	8005098 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8005080:	6803      	ldr	r3, [r0, #0]
 8005082:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005084:	f022 0203 	bic.w	r2, r2, #3
 8005088:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800508a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800508c:	4311      	orrs	r1, r2
 800508e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005090:	2300      	movs	r3, #0
 8005092:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005094:	4618      	mov	r0, r3
 8005096:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005098:	2002      	movs	r0, #2
}
 800509a:	4770      	bx	lr

0800509c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800509c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800509e:	7c03      	ldrb	r3, [r0, #16]
 80050a0:	2b01      	cmp	r3, #1
 80050a2:	d06a      	beq.n	800517a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80050a4:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80050a6:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80050a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80050aa:	f042 0201 	orr.w	r2, r2, #1
 80050ae:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80050b0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80050b4:	f022 0201 	bic.w	r2, r2, #1
 80050b8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80050bc:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80050c0:	f042 0201 	orr.w	r2, r2, #1
 80050c4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80050c8:	68da      	ldr	r2, [r3, #12]
 80050ca:	f022 0203 	bic.w	r2, r2, #3
 80050ce:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80050d0:	68da      	ldr	r2, [r3, #12]
 80050d2:	4322      	orrs	r2, r4
 80050d4:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80050d6:	695a      	ldr	r2, [r3, #20]
 80050d8:	f022 0207 	bic.w	r2, r2, #7
 80050dc:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80050de:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80050e2:	432a      	orrs	r2, r5
 80050e4:	694d      	ldr	r5, [r1, #20]
 80050e6:	695c      	ldr	r4, [r3, #20]
 80050e8:	432a      	orrs	r2, r5
 80050ea:	4322      	orrs	r2, r4
 80050ec:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80050ee:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80050f0:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80050f2:	f022 020f 	bic.w	r2, r2, #15
 80050f6:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80050f8:	691c      	ldr	r4, [r3, #16]
 80050fa:	432c      	orrs	r4, r5
 80050fc:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80050fe:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005102:	f024 040e 	bic.w	r4, r4, #14
 8005106:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800510a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800510e:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005110:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8005114:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8005118:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800511a:	0c12      	lsrs	r2, r2, #16
 800511c:	0412      	lsls	r2, r2, #16
 800511e:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005120:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005122:	4322      	orrs	r2, r4
 8005124:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8005126:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800512a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800512e:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005132:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8005136:	432a      	orrs	r2, r5
 8005138:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800513a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800513e:	432a      	orrs	r2, r5
 8005140:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005142:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005144:	432a      	orrs	r2, r5
 8005146:	4322      	orrs	r2, r4
 8005148:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800514c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800514e:	f022 0201 	bic.w	r2, r2, #1
 8005152:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005154:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005156:	430a      	orrs	r2, r1
 8005158:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800515a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800515e:	f042 0201 	orr.w	r2, r2, #1
 8005162:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8005166:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800516a:	f042 0202 	orr.w	r2, r2, #2
 800516e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005172:	2300      	movs	r3, #0
 8005174:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005176:	4618      	mov	r0, r3
}
 8005178:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800517a:	2002      	movs	r0, #2
 800517c:	e7fc      	b.n	8005178 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08005180 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8005180:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005182:	7c03      	ldrb	r3, [r0, #16]
 8005184:	2b01      	cmp	r3, #1
 8005186:	d02a      	beq.n	80051de <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8005188:	6802      	ldr	r2, [r0, #0]
 800518a:	4b16      	ldr	r3, [pc, #88]	; (80051e4 <HAL_DSI_ConfigCommand+0x64>)
 800518c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800518e:	4023      	ands	r3, r4
 8005190:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005192:	e9d1 3500 	ldrd	r3, r5, [r1]
 8005196:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8005198:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800519a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800519c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800519e:	68cd      	ldr	r5, [r1, #12]
 80051a0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 80051a2:	690d      	ldr	r5, [r1, #16]
 80051a4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 80051a6:	694d      	ldr	r5, [r1, #20]
 80051a8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80051aa:	698d      	ldr	r5, [r1, #24]
 80051ac:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80051ae:	69cd      	ldr	r5, [r1, #28]
 80051b0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80051b2:	6a0d      	ldr	r5, [r1, #32]
 80051b4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80051b6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80051b8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80051ba:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80051bc:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80051be:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80051c0:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80051c2:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80051c4:	4323      	orrs	r3, r4
 80051c6:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80051c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80051ca:	f023 0302 	bic.w	r3, r3, #2
 80051ce:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80051d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80051d2:	430b      	orrs	r3, r1
 80051d4:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80051d6:	2300      	movs	r3, #0
 80051d8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80051da:	4618      	mov	r0, r3
}
 80051dc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80051de:	2002      	movs	r0, #2
 80051e0:	e7fc      	b.n	80051dc <HAL_DSI_ConfigCommand+0x5c>
 80051e2:	bf00      	nop
 80051e4:	fef080ff 	.word	0xfef080ff

080051e8 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80051e8:	7c03      	ldrb	r3, [r0, #16]
 80051ea:	2b01      	cmp	r3, #1
 80051ec:	d00b      	beq.n	8005206 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80051f2:	f022 021f 	bic.w	r2, r2, #31
 80051f6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80051f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80051fa:	4311      	orrs	r1, r2
 80051fc:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80051fe:	2300      	movs	r3, #0
 8005200:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005202:	4618      	mov	r0, r3
 8005204:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005206:	2002      	movs	r0, #2
}
 8005208:	4770      	bx	lr

0800520a <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800520a:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800520c:	7c03      	ldrb	r3, [r0, #16]
 800520e:	2b01      	cmp	r3, #1
 8005210:	d035      	beq.n	800527e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005212:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005216:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005218:	4294      	cmp	r4, r2
 800521a:	bf38      	it	cc
 800521c:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800521e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005222:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8005226:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800522a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800522e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005232:	4322      	orrs	r2, r4
 8005234:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8005238:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800523c:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8005240:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8005244:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8005248:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800524a:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800524e:	690d      	ldr	r5, [r1, #16]
 8005250:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005254:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005256:	432a      	orrs	r2, r5
 8005258:	4322      	orrs	r2, r4
 800525a:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800525e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005262:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8005266:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800526a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800526e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005272:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005276:	2300      	movs	r3, #0
 8005278:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800527a:	4618      	mov	r0, r3
}
 800527c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800527e:	2002      	movs	r0, #2
 8005280:	e7fc      	b.n	800527c <HAL_DSI_ConfigPhyTimer+0x72>
	...

08005284 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8005284:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005286:	7c03      	ldrb	r3, [r0, #16]
 8005288:	2b01      	cmp	r3, #1
 800528a:	d05c      	beq.n	8005346 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800528c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800528e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005290:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005292:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005294:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8005298:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800529a:	689a      	ldr	r2, [r3, #8]
 800529c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80052a0:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80052a2:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80052a4:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80052a6:	b292      	uxth	r2, r2
 80052a8:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80052aa:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80052ac:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80052b0:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80052b2:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80052b4:	4a25      	ldr	r2, [pc, #148]	; (800534c <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80052b6:	4014      	ands	r4, r2
 80052b8:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80052ba:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80052bc:	432c      	orrs	r4, r5
 80052be:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80052c0:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80052c2:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80052c4:	4014      	ands	r4, r2
 80052c6:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80052c8:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80052ca:	432c      	orrs	r4, r5
 80052cc:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80052ce:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80052d2:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80052d4:	4014      	ands	r4, r2
 80052d6:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80052da:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80052de:	432c      	orrs	r4, r5
 80052e0:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80052e4:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80052e8:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80052ea:	4014      	ands	r4, r2
 80052ec:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80052f0:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80052f4:	432c      	orrs	r4, r5
 80052f6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80052fa:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80052fe:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8005302:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8005306:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800530a:	698d      	ldr	r5, [r1, #24]
 800530c:	432c      	orrs	r4, r5
 800530e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8005312:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8005316:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8005318:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800531a:	4014      	ands	r4, r2
 800531c:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8005320:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8005324:	432c      	orrs	r4, r5
 8005326:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800532a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800532e:	4022      	ands	r2, r4
 8005330:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8005334:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8005338:	430a      	orrs	r2, r1
 800533a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800533e:	2300      	movs	r3, #0
 8005340:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005342:	4618      	mov	r0, r3
}
 8005344:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005346:	2002      	movs	r0, #2
 8005348:	e7fc      	b.n	8005344 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800534a:	bf00      	nop
 800534c:	ffff0000 	.word	0xffff0000

08005350 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005350:	7c03      	ldrb	r3, [r0, #16]
 8005352:	2b01      	cmp	r3, #1
{
 8005354:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8005356:	d01c      	beq.n	8005392 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8005358:	6802      	ldr	r2, [r0, #0]
 800535a:	2300      	movs	r3, #0
 800535c:	9300      	str	r3, [sp, #0]
 800535e:	6851      	ldr	r1, [r2, #4]
 8005360:	f041 0101 	orr.w	r1, r1, #1
 8005364:	6051      	str	r1, [r2, #4]
 8005366:	6851      	ldr	r1, [r2, #4]
 8005368:	f001 0101 	and.w	r1, r1, #1
 800536c:	9100      	str	r1, [sp, #0]
 800536e:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005370:	9301      	str	r3, [sp, #4]
 8005372:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8005376:	f041 0108 	orr.w	r1, r1, #8
 800537a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800537e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005382:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005384:	f002 0208 	and.w	r2, r2, #8
 8005388:	9201      	str	r2, [sp, #4]
 800538a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800538c:	4618      	mov	r0, r3
}
 800538e:	b002      	add	sp, #8
 8005390:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005392:	2002      	movs	r0, #2
 8005394:	e7fb      	b.n	800538e <HAL_DSI_Start+0x3e>

08005396 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005396:	7c03      	ldrb	r3, [r0, #16]
 8005398:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800539a:	bf1f      	itttt	ne
 800539c:	6802      	ldrne	r2, [r0, #0]
 800539e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 80053a2:	f043 0304 	orrne.w	r3, r3, #4
 80053a6:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80053aa:	bf1d      	ittte	ne
 80053ac:	2300      	movne	r3, #0
 80053ae:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80053b0:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80053b2:	2002      	moveq	r0, #2
}
 80053b4:	4770      	bx	lr

080053b6 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80053b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80053b8:	7c05      	ldrb	r5, [r0, #16]
 80053ba:	2d01      	cmp	r5, #1
{
 80053bc:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80053be:	d009      	beq.n	80053d4 <HAL_DSI_ShortWrite+0x1e>
 80053c0:	2501      	movs	r5, #1
 80053c2:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80053c4:	9d06      	ldr	r5, [sp, #24]
 80053c6:	9500      	str	r5, [sp, #0]
 80053c8:	f7ff fcac 	bl	8004d24 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80053cc:	2300      	movs	r3, #0
 80053ce:	7423      	strb	r3, [r4, #16]

  return status;
}
 80053d0:	b003      	add	sp, #12
 80053d2:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80053d4:	2002      	movs	r0, #2
 80053d6:	e7fb      	b.n	80053d0 <HAL_DSI_ShortWrite+0x1a>

080053d8 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80053d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053dc:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80053de:	7c03      	ldrb	r3, [r0, #16]
 80053e0:	2b01      	cmp	r3, #1
{
 80053e2:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80053e6:	4606      	mov	r6, r0
 80053e8:	460f      	mov	r7, r1
 80053ea:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80053ec:	d053      	beq.n	8005496 <HAL_DSI_LongWrite+0xbe>
 80053ee:	2301      	movs	r3, #1
 80053f0:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80053f2:	f7ff f8fd 	bl	80045f0 <HAL_GetTick>
 80053f6:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80053f8:	6831      	ldr	r1, [r6, #0]
 80053fa:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80053fc:	f013 0a01 	ands.w	sl, r3, #1
 8005400:	d01a      	beq.n	8005438 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8005402:	2c03      	cmp	r4, #3
 8005404:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8005406:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800540a:	bf28      	it	cs
 800540c:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800540e:	4282      	cmp	r2, r0
 8005410:	d11e      	bne.n	8005450 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8005412:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8005414:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8005418:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800541a:	bb1b      	cbnz	r3, 8005464 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800541c:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800541e:	0222      	lsls	r2, r4, #8
 8005420:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8005424:	b292      	uxth	r2, r2
 8005426:	0224      	lsls	r4, r4, #8
 8005428:	4315      	orrs	r5, r2
 800542a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800542e:	432c      	orrs	r4, r5
 8005430:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8005432:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8005434:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8005436:	e009      	b.n	800544c <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005438:	f7ff f8da 	bl	80045f0 <HAL_GetTick>
 800543c:	eba0 000b 	sub.w	r0, r0, fp
 8005440:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005444:	d9d8      	bls.n	80053f8 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8005446:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800544a:	2003      	movs	r0, #3
}
 800544c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8005450:	f818 3002 	ldrb.w	r3, [r8, r2]
 8005454:	3201      	adds	r2, #1
 8005456:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800545a:	fa03 f30c 	lsl.w	r3, r3, ip
 800545e:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8005462:	e7d4      	b.n	800540e <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005464:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8005466:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800546a:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800546c:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800546e:	bf28      	it	cs
 8005470:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005474:	f812 8000 	ldrb.w	r8, [r2, r0]
 8005478:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800547c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800547e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8005482:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005484:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8005488:	d1f4      	bne.n	8005474 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800548a:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800548e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8005492:	4472      	add	r2, lr
 8005494:	e7c1      	b.n	800541a <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8005496:	2002      	movs	r0, #2
 8005498:	e7d8      	b.n	800544c <HAL_DSI_LongWrite+0x74>

0800549a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800549a:	7c03      	ldrb	r3, [r0, #16]
 800549c:	2b01      	cmp	r3, #1
 800549e:	d010      	beq.n	80054c2 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 80054a0:	6803      	ldr	r3, [r0, #0]
 80054a2:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80054a6:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80054aa:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 80054ae:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80054b2:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 80054b6:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80054ba:	2300      	movs	r3, #0
 80054bc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80054be:	4618      	mov	r0, r3
 80054c0:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80054c2:	2002      	movs	r0, #2
}
 80054c4:	4770      	bx	lr
	...

080054c8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80054c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80054cc:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005690 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80054d0:	4a6d      	ldr	r2, [pc, #436]	; (8005688 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80054d2:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80054d4:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80054d6:	2401      	movs	r4, #1
 80054d8:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80054da:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80054de:	43ac      	bics	r4, r5
 80054e0:	f040 80b9 	bne.w	8005656 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80054e4:	684d      	ldr	r5, [r1, #4]
 80054e6:	f005 0403 	and.w	r4, r5, #3
 80054ea:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054ee:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80054f0:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054f2:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80054f6:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054f8:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80054fc:	d834      	bhi.n	8005568 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80054fe:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005500:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005504:	68cf      	ldr	r7, [r1, #12]
 8005506:	fa07 f708 	lsl.w	r7, r7, r8
 800550a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800550e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005510:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005512:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005516:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800551a:	409f      	lsls	r7, r3
 800551c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005520:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005522:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005524:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005528:	688f      	ldr	r7, [r1, #8]
 800552a:	fa07 f708 	lsl.w	r7, r7, r8
 800552e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005532:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005534:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005536:	d119      	bne.n	800556c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005538:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800553c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005540:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005544:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005548:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800554c:	f04f 0e0f 	mov.w	lr, #15
 8005550:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005554:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005558:	690f      	ldr	r7, [r1, #16]
 800555a:	fa07 f70b 	lsl.w	r7, r7, fp
 800555e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005562:	f8ca 7020 	str.w	r7, [sl, #32]
 8005566:	e001      	b.n	800556c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005568:	2c03      	cmp	r4, #3
 800556a:	d1da      	bne.n	8005522 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800556c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800556e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005572:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005574:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005576:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800557a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800557c:	d06b      	beq.n	8005656 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800557e:	f04f 0a00 	mov.w	sl, #0
 8005582:	f8cd a004 	str.w	sl, [sp, #4]
 8005586:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800558a:	4c40      	ldr	r4, [pc, #256]	; (800568c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800558c:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005590:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8005594:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8005598:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800559c:	9601      	str	r6, [sp, #4]
 800559e:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80055a0:	f023 0603 	bic.w	r6, r3, #3
 80055a4:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 80055a8:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80055ac:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80055b0:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80055b4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80055b8:	270f      	movs	r7, #15
 80055ba:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80055be:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80055c0:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80055c4:	d04e      	beq.n	8005664 <HAL_GPIO_Init+0x19c>
 80055c6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055ca:	42a0      	cmp	r0, r4
 80055cc:	d04c      	beq.n	8005668 <HAL_GPIO_Init+0x1a0>
 80055ce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055d2:	42a0      	cmp	r0, r4
 80055d4:	d04a      	beq.n	800566c <HAL_GPIO_Init+0x1a4>
 80055d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055da:	42a0      	cmp	r0, r4
 80055dc:	d048      	beq.n	8005670 <HAL_GPIO_Init+0x1a8>
 80055de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055e2:	42a0      	cmp	r0, r4
 80055e4:	d046      	beq.n	8005674 <HAL_GPIO_Init+0x1ac>
 80055e6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055ea:	42a0      	cmp	r0, r4
 80055ec:	d044      	beq.n	8005678 <HAL_GPIO_Init+0x1b0>
 80055ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055f2:	42a0      	cmp	r0, r4
 80055f4:	d042      	beq.n	800567c <HAL_GPIO_Init+0x1b4>
 80055f6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80055fa:	42a0      	cmp	r0, r4
 80055fc:	d040      	beq.n	8005680 <HAL_GPIO_Init+0x1b8>
 80055fe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005602:	42a0      	cmp	r0, r4
 8005604:	d03e      	beq.n	8005684 <HAL_GPIO_Init+0x1bc>
 8005606:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800560a:	42a0      	cmp	r0, r4
 800560c:	bf0c      	ite	eq
 800560e:	2409      	moveq	r4, #9
 8005610:	240a      	movne	r4, #10
 8005612:	fa04 f40e 	lsl.w	r4, r4, lr
 8005616:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005618:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800561a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800561c:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005620:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8005622:	bf54      	ite	pl
 8005624:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005626:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800562a:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800562c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800562e:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8005630:	bf54      	ite	pl
 8005632:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005634:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8005638:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800563a:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800563c:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800563e:	bf54      	ite	pl
 8005640:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005642:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8005646:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005648:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800564a:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800564c:	bf54      	ite	pl
 800564e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005650:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8005654:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005656:	3301      	adds	r3, #1
 8005658:	2b10      	cmp	r3, #16
 800565a:	f47f af3b 	bne.w	80054d4 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800565e:	b003      	add	sp, #12
 8005660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005664:	4654      	mov	r4, sl
 8005666:	e7d4      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005668:	2401      	movs	r4, #1
 800566a:	e7d2      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 800566c:	2402      	movs	r4, #2
 800566e:	e7d0      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005670:	2403      	movs	r4, #3
 8005672:	e7ce      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005674:	2404      	movs	r4, #4
 8005676:	e7cc      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005678:	2405      	movs	r4, #5
 800567a:	e7ca      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 800567c:	2406      	movs	r4, #6
 800567e:	e7c8      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005680:	2407      	movs	r4, #7
 8005682:	e7c6      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005684:	2408      	movs	r4, #8
 8005686:	e7c4      	b.n	8005612 <HAL_GPIO_Init+0x14a>
 8005688:	40013c00 	.word	0x40013c00
 800568c:	40020000 	.word	0x40020000
 8005690:	40023800 	.word	0x40023800

08005694 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005698:	4c4a      	ldr	r4, [pc, #296]	; (80057c4 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800569a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 80057cc <HAL_GPIO_DeInit+0x138>
 800569e:	f8df a130 	ldr.w	sl, [pc, #304]	; 80057d0 <HAL_GPIO_DeInit+0x13c>
 80056a2:	f8df b130 	ldr.w	fp, [pc, #304]	; 80057d4 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80056a6:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 80056a8:	2301      	movs	r3, #1
 80056aa:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 80056ae:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 80056b2:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 80056b6:	d16e      	bne.n	8005796 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 80056b8:	f022 0503 	bic.w	r5, r2, #3
 80056bc:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80056c0:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80056c4:	4b40      	ldr	r3, [pc, #256]	; (80057c8 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 80056c6:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80056ca:	f002 0c03 	and.w	ip, r2, #3
 80056ce:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80056d2:	260f      	movs	r6, #15
 80056d4:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80056d8:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80056da:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80056de:	d05f      	beq.n	80057a0 <HAL_GPIO_DeInit+0x10c>
 80056e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056e4:	4298      	cmp	r0, r3
 80056e6:	d05d      	beq.n	80057a4 <HAL_GPIO_DeInit+0x110>
 80056e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056ec:	4298      	cmp	r0, r3
 80056ee:	d05b      	beq.n	80057a8 <HAL_GPIO_DeInit+0x114>
 80056f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056f4:	4298      	cmp	r0, r3
 80056f6:	d059      	beq.n	80057ac <HAL_GPIO_DeInit+0x118>
 80056f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056fc:	4298      	cmp	r0, r3
 80056fe:	d057      	beq.n	80057b0 <HAL_GPIO_DeInit+0x11c>
 8005700:	4548      	cmp	r0, r9
 8005702:	d057      	beq.n	80057b4 <HAL_GPIO_DeInit+0x120>
 8005704:	4550      	cmp	r0, sl
 8005706:	d057      	beq.n	80057b8 <HAL_GPIO_DeInit+0x124>
 8005708:	4558      	cmp	r0, fp
 800570a:	d057      	beq.n	80057bc <HAL_GPIO_DeInit+0x128>
 800570c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005710:	4298      	cmp	r0, r3
 8005712:	d055      	beq.n	80057c0 <HAL_GPIO_DeInit+0x12c>
 8005714:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005718:	4298      	cmp	r0, r3
 800571a:	bf0c      	ite	eq
 800571c:	2309      	moveq	r3, #9
 800571e:	230a      	movne	r3, #10
 8005720:	fa03 f30c 	lsl.w	r3, r3, ip
 8005724:	4543      	cmp	r3, r8
 8005726:	d113      	bne.n	8005750 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005728:	6823      	ldr	r3, [r4, #0]
 800572a:	ea23 0307 	bic.w	r3, r3, r7
 800572e:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8005730:	6863      	ldr	r3, [r4, #4]
 8005732:	ea23 0307 	bic.w	r3, r3, r7
 8005736:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8005738:	68e3      	ldr	r3, [r4, #12]
 800573a:	ea23 0307 	bic.w	r3, r3, r7
 800573e:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8005740:	68a3      	ldr	r3, [r4, #8]
 8005742:	ea23 0307 	bic.w	r3, r3, r7
 8005746:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005748:	68ab      	ldr	r3, [r5, #8]
 800574a:	ea23 0306 	bic.w	r3, r3, r6
 800574e:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005750:	6805      	ldr	r5, [r0, #0]
 8005752:	2603      	movs	r6, #3
 8005754:	0053      	lsls	r3, r2, #1
 8005756:	fa06 f303 	lsl.w	r3, r6, r3
 800575a:	ea25 0503 	bic.w	r5, r5, r3
 800575e:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005760:	fa22 f506 	lsr.w	r5, r2, r6
 8005764:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005768:	f002 0c07 	and.w	ip, r2, #7
 800576c:	6a2e      	ldr	r6, [r5, #32]
 800576e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005772:	270f      	movs	r7, #15
 8005774:	fa07 f70c 	lsl.w	r7, r7, ip
 8005778:	ea26 0707 	bic.w	r7, r6, r7
 800577c:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800577e:	68c5      	ldr	r5, [r0, #12]
 8005780:	ea25 0503 	bic.w	r5, r5, r3
 8005784:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005786:	6845      	ldr	r5, [r0, #4]
 8005788:	ea25 050e 	bic.w	r5, r5, lr
 800578c:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800578e:	6885      	ldr	r5, [r0, #8]
 8005790:	ea25 0303 	bic.w	r3, r5, r3
 8005794:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005796:	3201      	adds	r2, #1
 8005798:	2a10      	cmp	r2, #16
 800579a:	d185      	bne.n	80056a8 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800579c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80057a0:	2300      	movs	r3, #0
 80057a2:	e7bd      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057a4:	2301      	movs	r3, #1
 80057a6:	e7bb      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057a8:	2302      	movs	r3, #2
 80057aa:	e7b9      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057ac:	2303      	movs	r3, #3
 80057ae:	e7b7      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057b0:	2304      	movs	r3, #4
 80057b2:	e7b5      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057b4:	2305      	movs	r3, #5
 80057b6:	e7b3      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057b8:	2306      	movs	r3, #6
 80057ba:	e7b1      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057bc:	2307      	movs	r3, #7
 80057be:	e7af      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057c0:	2308      	movs	r3, #8
 80057c2:	e7ad      	b.n	8005720 <HAL_GPIO_DeInit+0x8c>
 80057c4:	40013c00 	.word	0x40013c00
 80057c8:	40020000 	.word	0x40020000
 80057cc:	40021400 	.word	0x40021400
 80057d0:	40021800 	.word	0x40021800
 80057d4:	40021c00 	.word	0x40021c00

080057d8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80057d8:	6903      	ldr	r3, [r0, #16]
 80057da:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80057dc:	bf14      	ite	ne
 80057de:	2001      	movne	r0, #1
 80057e0:	2000      	moveq	r0, #0
 80057e2:	4770      	bx	lr

080057e4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80057e4:	b10a      	cbz	r2, 80057ea <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80057e6:	6181      	str	r1, [r0, #24]
  }
}
 80057e8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80057ea:	0409      	lsls	r1, r1, #16
 80057ec:	e7fb      	b.n	80057e6 <HAL_GPIO_WritePin+0x2>

080057ee <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80057ee:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80057f0:	ea01 0203 	and.w	r2, r1, r3
 80057f4:	ea21 0103 	bic.w	r1, r1, r3
 80057f8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80057fc:	6181      	str	r1, [r0, #24]
}
 80057fe:	4770      	bx	lr

08005800 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005800:	6801      	ldr	r1, [r0, #0]
 8005802:	694b      	ldr	r3, [r1, #20]
 8005804:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005808:	f04f 0200 	mov.w	r2, #0
 800580c:	d010      	beq.n	8005830 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800580e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005812:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005814:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005816:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005818:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800581c:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005820:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005822:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005826:	f043 0304 	orr.w	r3, r3, #4
 800582a:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800582c:	2001      	movs	r0, #1
 800582e:	4770      	bx	lr
  }
  return HAL_OK;
 8005830:	4618      	mov	r0, r3
}
 8005832:	4770      	bx	lr

08005834 <I2C_WaitOnFlagUntilTimeout>:
{
 8005834:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005838:	4606      	mov	r6, r0
 800583a:	460f      	mov	r7, r1
 800583c:	4691      	mov	r9, r2
 800583e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005840:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005844:	6833      	ldr	r3, [r6, #0]
 8005846:	f1ba 0f01 	cmp.w	sl, #1
 800584a:	bf0c      	ite	eq
 800584c:	695c      	ldreq	r4, [r3, #20]
 800584e:	699c      	ldrne	r4, [r3, #24]
 8005850:	ea27 0404 	bic.w	r4, r7, r4
 8005854:	b2a4      	uxth	r4, r4
 8005856:	fab4 f484 	clz	r4, r4
 800585a:	0964      	lsrs	r4, r4, #5
 800585c:	45a1      	cmp	r9, r4
 800585e:	d001      	beq.n	8005864 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005860:	2000      	movs	r0, #0
 8005862:	e017      	b.n	8005894 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005864:	1c6a      	adds	r2, r5, #1
 8005866:	d0ee      	beq.n	8005846 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005868:	f7fe fec2 	bl	80045f0 <HAL_GetTick>
 800586c:	9b08      	ldr	r3, [sp, #32]
 800586e:	1ac0      	subs	r0, r0, r3
 8005870:	42a8      	cmp	r0, r5
 8005872:	d801      	bhi.n	8005878 <I2C_WaitOnFlagUntilTimeout+0x44>
 8005874:	2d00      	cmp	r5, #0
 8005876:	d1e5      	bne.n	8005844 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005878:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800587a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800587c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800587e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005882:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005886:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005888:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800588c:	f042 0220 	orr.w	r2, r2, #32
 8005890:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005892:	2001      	movs	r0, #1
}
 8005894:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005898 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800589c:	4604      	mov	r4, r0
 800589e:	460f      	mov	r7, r1
 80058a0:	4616      	mov	r6, r2
 80058a2:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80058a4:	6825      	ldr	r5, [r4, #0]
 80058a6:	6968      	ldr	r0, [r5, #20]
 80058a8:	ea27 0000 	bic.w	r0, r7, r0
 80058ac:	b280      	uxth	r0, r0
 80058ae:	b1b8      	cbz	r0, 80058e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80058b0:	696b      	ldr	r3, [r5, #20]
 80058b2:	055a      	lsls	r2, r3, #21
 80058b4:	d516      	bpl.n	80058e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058b6:	682b      	ldr	r3, [r5, #0]
 80058b8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80058bc:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80058be:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80058c2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80058c4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80058c6:	2300      	movs	r3, #0
 80058c8:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80058ca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80058ce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80058d2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80058d4:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80058d8:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80058da:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80058de:	2001      	movs	r0, #1
}
 80058e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80058e4:	1c73      	adds	r3, r6, #1
 80058e6:	d0de      	beq.n	80058a6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80058e8:	f7fe fe82 	bl	80045f0 <HAL_GetTick>
 80058ec:	eba0 0008 	sub.w	r0, r0, r8
 80058f0:	42b0      	cmp	r0, r6
 80058f2:	d801      	bhi.n	80058f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80058f4:	2e00      	cmp	r6, #0
 80058f6:	d1d5      	bne.n	80058a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80058f8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80058fa:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80058fc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80058fe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005902:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005906:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005908:	f042 0220 	orr.w	r2, r2, #32
 800590c:	e7e4      	b.n	80058d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800590e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800590e:	b570      	push	{r4, r5, r6, lr}
 8005910:	4604      	mov	r4, r0
 8005912:	460d      	mov	r5, r1
 8005914:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005916:	6821      	ldr	r1, [r4, #0]
 8005918:	694b      	ldr	r3, [r1, #20]
 800591a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800591e:	d001      	beq.n	8005924 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005920:	2000      	movs	r0, #0
 8005922:	e010      	b.n	8005946 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005924:	694a      	ldr	r2, [r1, #20]
 8005926:	06d2      	lsls	r2, r2, #27
 8005928:	d50e      	bpl.n	8005948 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800592a:	f06f 0210 	mvn.w	r2, #16
 800592e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005930:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005932:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005934:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005938:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800593c:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800593e:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8005940:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8005944:	2001      	movs	r0, #1
}
 8005946:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005948:	f7fe fe52 	bl	80045f0 <HAL_GetTick>
 800594c:	1b80      	subs	r0, r0, r6
 800594e:	42a8      	cmp	r0, r5
 8005950:	d801      	bhi.n	8005956 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005952:	2d00      	cmp	r5, #0
 8005954:	d1df      	bne.n	8005916 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005956:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8005958:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800595a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800595c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005960:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005964:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005966:	f042 0220 	orr.w	r2, r2, #32
 800596a:	e7e8      	b.n	800593e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800596c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800596c:	b570      	push	{r4, r5, r6, lr}
 800596e:	4604      	mov	r4, r0
 8005970:	460d      	mov	r5, r1
 8005972:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005974:	6823      	ldr	r3, [r4, #0]
 8005976:	695b      	ldr	r3, [r3, #20]
 8005978:	075b      	lsls	r3, r3, #29
 800597a:	d501      	bpl.n	8005980 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800597c:	2000      	movs	r0, #0
}
 800597e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005980:	4620      	mov	r0, r4
 8005982:	f7ff ff3d 	bl	8005800 <I2C_IsAcknowledgeFailed>
 8005986:	b9a8      	cbnz	r0, 80059b4 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005988:	1c6a      	adds	r2, r5, #1
 800598a:	d0f3      	beq.n	8005974 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800598c:	f7fe fe30 	bl	80045f0 <HAL_GetTick>
 8005990:	1b80      	subs	r0, r0, r6
 8005992:	42a8      	cmp	r0, r5
 8005994:	d801      	bhi.n	800599a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005996:	2d00      	cmp	r5, #0
 8005998:	d1ec      	bne.n	8005974 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800599a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800599c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800599e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80059a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80059a4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80059aa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059ae:	f042 0220 	orr.w	r2, r2, #32
 80059b2:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80059b4:	2001      	movs	r0, #1
 80059b6:	e7e2      	b.n	800597e <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080059b8 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80059b8:	b570      	push	{r4, r5, r6, lr}
 80059ba:	4604      	mov	r4, r0
 80059bc:	460d      	mov	r5, r1
 80059be:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80059c0:	6823      	ldr	r3, [r4, #0]
 80059c2:	695b      	ldr	r3, [r3, #20]
 80059c4:	061b      	lsls	r3, r3, #24
 80059c6:	d501      	bpl.n	80059cc <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80059c8:	2000      	movs	r0, #0
}
 80059ca:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80059cc:	4620      	mov	r0, r4
 80059ce:	f7ff ff17 	bl	8005800 <I2C_IsAcknowledgeFailed>
 80059d2:	b9a8      	cbnz	r0, 8005a00 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80059d4:	1c6a      	adds	r2, r5, #1
 80059d6:	d0f3      	beq.n	80059c0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80059d8:	f7fe fe0a 	bl	80045f0 <HAL_GetTick>
 80059dc:	1b80      	subs	r0, r0, r6
 80059de:	42a8      	cmp	r0, r5
 80059e0:	d801      	bhi.n	80059e6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80059e2:	2d00      	cmp	r5, #0
 80059e4:	d1ec      	bne.n	80059c0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80059e6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80059e8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80059ea:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80059ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80059f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80059f6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059fa:	f042 0220 	orr.w	r2, r2, #32
 80059fe:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005a00:	2001      	movs	r0, #1
 8005a02:	e7e2      	b.n	80059ca <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08005a04 <I2C_RequestMemoryWrite>:
{
 8005a04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005a08:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005a0a:	6802      	ldr	r2, [r0, #0]
{
 8005a0c:	b085      	sub	sp, #20
 8005a0e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005a12:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005a14:	6813      	ldr	r3, [r2, #0]
 8005a16:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005a1a:	6013      	str	r3, [r2, #0]
{
 8005a1c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005a1e:	463b      	mov	r3, r7
 8005a20:	f8cd 8000 	str.w	r8, [sp]
 8005a24:	2200      	movs	r2, #0
 8005a26:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005a2a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005a2c:	f7ff ff02 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005a30:	6823      	ldr	r3, [r4, #0]
 8005a32:	b138      	cbz	r0, 8005a44 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	05db      	lsls	r3, r3, #23
 8005a38:	d502      	bpl.n	8005a40 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005a3a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005a3e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005a40:	2003      	movs	r0, #3
 8005a42:	e00a      	b.n	8005a5a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005a44:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005a48:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005a4a:	4919      	ldr	r1, [pc, #100]	; (8005ab0 <I2C_RequestMemoryWrite+0xac>)
 8005a4c:	4643      	mov	r3, r8
 8005a4e:	463a      	mov	r2, r7
 8005a50:	4620      	mov	r0, r4
 8005a52:	f7ff ff21 	bl	8005898 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005a56:	b118      	cbz	r0, 8005a60 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005a58:	2001      	movs	r0, #1
}
 8005a5a:	b005      	add	sp, #20
 8005a5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a60:	6823      	ldr	r3, [r4, #0]
 8005a62:	9003      	str	r0, [sp, #12]
 8005a64:	695a      	ldr	r2, [r3, #20]
 8005a66:	9203      	str	r2, [sp, #12]
 8005a68:	699b      	ldr	r3, [r3, #24]
 8005a6a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a6c:	4642      	mov	r2, r8
 8005a6e:	4639      	mov	r1, r7
 8005a70:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a72:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a74:	f7ff ffa0 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005a78:	b140      	cbz	r0, 8005a8c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005a7a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a7c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a7e:	bf01      	itttt	eq
 8005a80:	6822      	ldreq	r2, [r4, #0]
 8005a82:	6813      	ldreq	r3, [r2, #0]
 8005a84:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005a88:	6013      	streq	r3, [r2, #0]
 8005a8a:	e7e5      	b.n	8005a58 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a8c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a90:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a92:	d102      	bne.n	8005a9a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005a94:	b2ed      	uxtb	r5, r5
 8005a96:	611d      	str	r5, [r3, #16]
 8005a98:	e7df      	b.n	8005a5a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005a9a:	0a2a      	lsrs	r2, r5, #8
 8005a9c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a9e:	4639      	mov	r1, r7
 8005aa0:	4642      	mov	r2, r8
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	f7ff ff88 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005aa8:	2800      	cmp	r0, #0
 8005aaa:	d1e6      	bne.n	8005a7a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005aac:	6823      	ldr	r3, [r4, #0]
 8005aae:	e7f1      	b.n	8005a94 <I2C_RequestMemoryWrite+0x90>
 8005ab0:	00010002 	.word	0x00010002

08005ab4 <I2C_RequestMemoryRead>:
{
 8005ab4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005ab8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005aba:	6803      	ldr	r3, [r0, #0]
{
 8005abc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005abe:	681a      	ldr	r2, [r3, #0]
 8005ac0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005ac4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005ac6:	681a      	ldr	r2, [r3, #0]
{
 8005ac8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005acc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ad0:	601a      	str	r2, [r3, #0]
{
 8005ad2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005ad4:	463b      	mov	r3, r7
 8005ad6:	f8cd 8000 	str.w	r8, [sp]
 8005ada:	2200      	movs	r2, #0
 8005adc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005ae0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005ae2:	f7ff fea7 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005ae6:	6823      	ldr	r3, [r4, #0]
 8005ae8:	b148      	cbz	r0, 8005afe <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005aea:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005aec:	05db      	lsls	r3, r3, #23
 8005aee:	d502      	bpl.n	8005af6 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005af0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005af4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005af6:	2003      	movs	r0, #3
}
 8005af8:	b004      	add	sp, #16
 8005afa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005afe:	fa5f f986 	uxtb.w	r9, r6
 8005b02:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005b06:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005b08:	492a      	ldr	r1, [pc, #168]	; (8005bb4 <I2C_RequestMemoryRead+0x100>)
 8005b0a:	4643      	mov	r3, r8
 8005b0c:	463a      	mov	r2, r7
 8005b0e:	4620      	mov	r0, r4
 8005b10:	f7ff fec2 	bl	8005898 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005b14:	b108      	cbz	r0, 8005b1a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005b16:	2001      	movs	r0, #1
 8005b18:	e7ee      	b.n	8005af8 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b1a:	6823      	ldr	r3, [r4, #0]
 8005b1c:	9003      	str	r0, [sp, #12]
 8005b1e:	695a      	ldr	r2, [r3, #20]
 8005b20:	9203      	str	r2, [sp, #12]
 8005b22:	699b      	ldr	r3, [r3, #24]
 8005b24:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b26:	4642      	mov	r2, r8
 8005b28:	4639      	mov	r1, r7
 8005b2a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b2c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b2e:	f7ff ff43 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005b32:	b140      	cbz	r0, 8005b46 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005b34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005b36:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b38:	bf01      	itttt	eq
 8005b3a:	6822      	ldreq	r2, [r4, #0]
 8005b3c:	6813      	ldreq	r3, [r2, #0]
 8005b3e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005b42:	6013      	streq	r3, [r2, #0]
 8005b44:	e7e7      	b.n	8005b16 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b46:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b4a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b4c:	d11a      	bne.n	8005b84 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005b4e:	b2ed      	uxtb	r5, r5
 8005b50:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b52:	4642      	mov	r2, r8
 8005b54:	4639      	mov	r1, r7
 8005b56:	4620      	mov	r0, r4
 8005b58:	f7ff ff2e 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005b5c:	2800      	cmp	r0, #0
 8005b5e:	d1e9      	bne.n	8005b34 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005b60:	6822      	ldr	r2, [r4, #0]
 8005b62:	6813      	ldr	r3, [r2, #0]
 8005b64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005b68:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005b6a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005b6e:	4602      	mov	r2, r0
 8005b70:	f8cd 8000 	str.w	r8, [sp]
 8005b74:	463b      	mov	r3, r7
 8005b76:	4620      	mov	r0, r4
 8005b78:	f7ff fe5c 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005b7c:	6822      	ldr	r2, [r4, #0]
 8005b7e:	b160      	cbz	r0, 8005b9a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005b80:	6813      	ldr	r3, [r2, #0]
 8005b82:	e7b3      	b.n	8005aec <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005b84:	0a2a      	lsrs	r2, r5, #8
 8005b86:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b88:	4639      	mov	r1, r7
 8005b8a:	4642      	mov	r2, r8
 8005b8c:	4620      	mov	r0, r4
 8005b8e:	f7ff ff13 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005b92:	2800      	cmp	r0, #0
 8005b94:	d1ce      	bne.n	8005b34 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005b96:	6823      	ldr	r3, [r4, #0]
 8005b98:	e7d9      	b.n	8005b4e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005b9a:	f049 0301 	orr.w	r3, r9, #1
 8005b9e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005ba0:	4904      	ldr	r1, [pc, #16]	; (8005bb4 <I2C_RequestMemoryRead+0x100>)
 8005ba2:	4643      	mov	r3, r8
 8005ba4:	463a      	mov	r2, r7
 8005ba6:	4620      	mov	r0, r4
 8005ba8:	f7ff fe76 	bl	8005898 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005bac:	3800      	subs	r0, #0
 8005bae:	bf18      	it	ne
 8005bb0:	2001      	movne	r0, #1
 8005bb2:	e7a1      	b.n	8005af8 <I2C_RequestMemoryRead+0x44>
 8005bb4:	00010002 	.word	0x00010002

08005bb8 <HAL_I2C_Init>:
{
 8005bb8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005bba:	4604      	mov	r4, r0
 8005bbc:	b908      	cbnz	r0, 8005bc2 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005bbe:	2001      	movs	r0, #1
}
 8005bc0:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005bc2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005bc6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005bca:	b91b      	cbnz	r3, 8005bd4 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005bcc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005bd0:	f7fc fc28 	bl	8002424 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005bd4:	2324      	movs	r3, #36	; 0x24
 8005bd6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005bda:	6823      	ldr	r3, [r4, #0]
 8005bdc:	681a      	ldr	r2, [r3, #0]
 8005bde:	f022 0201 	bic.w	r2, r2, #1
 8005be2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005be4:	681a      	ldr	r2, [r3, #0]
 8005be6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005bea:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005bec:	681a      	ldr	r2, [r3, #0]
 8005bee:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005bf2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005bf4:	f001 f814 	bl	8006c20 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005bf8:	4b3f      	ldr	r3, [pc, #252]	; (8005cf8 <HAL_I2C_Init+0x140>)
 8005bfa:	6865      	ldr	r5, [r4, #4]
 8005bfc:	429d      	cmp	r5, r3
 8005bfe:	bf94      	ite	ls
 8005c00:	4b3e      	ldrls	r3, [pc, #248]	; (8005cfc <HAL_I2C_Init+0x144>)
 8005c02:	4b3f      	ldrhi	r3, [pc, #252]	; (8005d00 <HAL_I2C_Init+0x148>)
 8005c04:	4298      	cmp	r0, r3
 8005c06:	bf8c      	ite	hi
 8005c08:	2300      	movhi	r3, #0
 8005c0a:	2301      	movls	r3, #1
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	d1d6      	bne.n	8005bbe <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005c10:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005c12:	4e39      	ldr	r6, [pc, #228]	; (8005cf8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005c14:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005c16:	493b      	ldr	r1, [pc, #236]	; (8005d04 <HAL_I2C_Init+0x14c>)
 8005c18:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005c1c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005c20:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005c22:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005c24:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005c26:	bf88      	it	hi
 8005c28:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005c2c:	6a13      	ldr	r3, [r2, #32]
 8005c2e:	bf88      	it	hi
 8005c30:	4371      	mulhi	r1, r6
 8005c32:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005c36:	bf84      	itt	hi
 8005c38:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005c3c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005c40:	3101      	adds	r1, #1
 8005c42:	4319      	orrs	r1, r3
 8005c44:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005c46:	69d1      	ldr	r1, [r2, #28]
 8005c48:	1e43      	subs	r3, r0, #1
 8005c4a:	482b      	ldr	r0, [pc, #172]	; (8005cf8 <HAL_I2C_Init+0x140>)
 8005c4c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005c50:	4285      	cmp	r5, r0
 8005c52:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c56:	d832      	bhi.n	8005cbe <HAL_I2C_Init+0x106>
 8005c58:	006d      	lsls	r5, r5, #1
 8005c5a:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005c5e:	fbb3 f3f5 	udiv	r3, r3, r5
 8005c62:	3301      	adds	r3, #1
 8005c64:	4203      	tst	r3, r0
 8005c66:	d042      	beq.n	8005cee <HAL_I2C_Init+0x136>
 8005c68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005c6c:	430b      	orrs	r3, r1
 8005c6e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005c70:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005c74:	6811      	ldr	r1, [r2, #0]
 8005c76:	4303      	orrs	r3, r0
 8005c78:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005c7c:	430b      	orrs	r3, r1
 8005c7e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005c80:	6891      	ldr	r1, [r2, #8]
 8005c82:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005c86:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005c8a:	4303      	orrs	r3, r0
 8005c8c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c90:	430b      	orrs	r3, r1
 8005c92:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005c94:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005c98:	68d1      	ldr	r1, [r2, #12]
 8005c9a:	4303      	orrs	r3, r0
 8005c9c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005ca0:	430b      	orrs	r3, r1
 8005ca2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005ca4:	6813      	ldr	r3, [r2, #0]
 8005ca6:	f043 0301 	orr.w	r3, r3, #1
 8005caa:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005cac:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005cae:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005cb0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005cb2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005cb6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005cb8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005cbc:	e780      	b.n	8005bc0 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005cbe:	68a0      	ldr	r0, [r4, #8]
 8005cc0:	b950      	cbnz	r0, 8005cd8 <HAL_I2C_Init+0x120>
 8005cc2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005cc6:	fbb3 f3f5 	udiv	r3, r3, r5
 8005cca:	3301      	adds	r3, #1
 8005ccc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005cd0:	b17b      	cbz	r3, 8005cf2 <HAL_I2C_Init+0x13a>
 8005cd2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005cd6:	e7c9      	b.n	8005c6c <HAL_I2C_Init+0xb4>
 8005cd8:	2019      	movs	r0, #25
 8005cda:	4345      	muls	r5, r0
 8005cdc:	fbb3 f3f5 	udiv	r3, r3, r5
 8005ce0:	3301      	adds	r3, #1
 8005ce2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ce6:	b123      	cbz	r3, 8005cf2 <HAL_I2C_Init+0x13a>
 8005ce8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005cec:	e7be      	b.n	8005c6c <HAL_I2C_Init+0xb4>
 8005cee:	2304      	movs	r3, #4
 8005cf0:	e7bc      	b.n	8005c6c <HAL_I2C_Init+0xb4>
 8005cf2:	2301      	movs	r3, #1
 8005cf4:	e7ba      	b.n	8005c6c <HAL_I2C_Init+0xb4>
 8005cf6:	bf00      	nop
 8005cf8:	000186a0 	.word	0x000186a0
 8005cfc:	001e847f 	.word	0x001e847f
 8005d00:	003d08ff 	.word	0x003d08ff
 8005d04:	000f4240 	.word	0x000f4240

08005d08 <HAL_I2C_DeInit>:
{
 8005d08:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005d0a:	4604      	mov	r4, r0
 8005d0c:	b198      	cbz	r0, 8005d36 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005d0e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005d10:	2324      	movs	r3, #36	; 0x24
 8005d12:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005d16:	6813      	ldr	r3, [r2, #0]
 8005d18:	f023 0301 	bic.w	r3, r3, #1
 8005d1c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005d1e:	f7fc fbc5 	bl	80024ac <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8005d22:	2000      	movs	r0, #0
 8005d24:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8005d26:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8005d2a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005d2e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8005d30:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8005d34:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005d36:	2001      	movs	r0, #1
 8005d38:	e7fc      	b.n	8005d34 <HAL_I2C_DeInit+0x2c>
	...

08005d3c <HAL_I2C_Mem_Write>:
{
 8005d3c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005d40:	4604      	mov	r4, r0
 8005d42:	4699      	mov	r9, r3
 8005d44:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005d46:	460f      	mov	r7, r1
 8005d48:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005d4a:	f7fe fc51 	bl	80045f0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d4e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005d52:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005d54:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d56:	d003      	beq.n	8005d60 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005d58:	2002      	movs	r0, #2
}
 8005d5a:	b003      	add	sp, #12
 8005d5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005d60:	9000      	str	r0, [sp, #0]
 8005d62:	493c      	ldr	r1, [pc, #240]	; (8005e54 <HAL_I2C_Mem_Write+0x118>)
 8005d64:	2319      	movs	r3, #25
 8005d66:	2201      	movs	r2, #1
 8005d68:	4620      	mov	r0, r4
 8005d6a:	f7ff fd63 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005d6e:	2800      	cmp	r0, #0
 8005d70:	d1f2      	bne.n	8005d58 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005d72:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005d76:	2b01      	cmp	r3, #1
 8005d78:	d0ee      	beq.n	8005d58 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005d7a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005d7c:	2301      	movs	r3, #1
 8005d7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005d82:	6803      	ldr	r3, [r0, #0]
 8005d84:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005d86:	bf5e      	ittt	pl
 8005d88:	6803      	ldrpl	r3, [r0, #0]
 8005d8a:	f043 0301 	orrpl.w	r3, r3, #1
 8005d8e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005d90:	6803      	ldr	r3, [r0, #0]
 8005d92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005d96:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005d98:	2321      	movs	r3, #33	; 0x21
 8005d9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005d9e:	2340      	movs	r3, #64	; 0x40
 8005da0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005da4:	2300      	movs	r3, #0
 8005da6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005da8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005daa:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005dac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005db0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005db2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005db4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005db6:	4b28      	ldr	r3, [pc, #160]	; (8005e58 <HAL_I2C_Mem_Write+0x11c>)
 8005db8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005dba:	e9cd 6500 	strd	r6, r5, [sp]
 8005dbe:	464b      	mov	r3, r9
 8005dc0:	4642      	mov	r2, r8
 8005dc2:	4639      	mov	r1, r7
 8005dc4:	4620      	mov	r0, r4
 8005dc6:	f7ff fe1d 	bl	8005a04 <I2C_RequestMemoryWrite>
 8005dca:	2800      	cmp	r0, #0
 8005dcc:	d02a      	beq.n	8005e24 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005dce:	2001      	movs	r0, #1
 8005dd0:	e7c3      	b.n	8005d5a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005dd2:	f7ff fdf1 	bl	80059b8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005dd6:	b140      	cbz	r0, 8005dea <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005dd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005dda:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005ddc:	bf01      	itttt	eq
 8005dde:	6822      	ldreq	r2, [r4, #0]
 8005de0:	6813      	ldreq	r3, [r2, #0]
 8005de2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005de6:	6013      	streq	r3, [r2, #0]
 8005de8:	e7f1      	b.n	8005dce <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005dea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005dec:	6827      	ldr	r7, [r4, #0]
 8005dee:	461a      	mov	r2, r3
 8005df0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005df4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005df6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005df8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005dfa:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005dfc:	3a01      	subs	r2, #1
 8005dfe:	b292      	uxth	r2, r2
 8005e00:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005e02:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005e04:	1e48      	subs	r0, r1, #1
 8005e06:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005e08:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005e0a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005e0c:	d50a      	bpl.n	8005e24 <HAL_I2C_Mem_Write+0xe8>
 8005e0e:	b148      	cbz	r0, 8005e24 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005e10:	785a      	ldrb	r2, [r3, #1]
 8005e12:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005e14:	3302      	adds	r3, #2
 8005e16:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005e18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e1a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005e1c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005e1e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005e20:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005e22:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005e24:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005e26:	462a      	mov	r2, r5
 8005e28:	4631      	mov	r1, r6
 8005e2a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d1d0      	bne.n	8005dd2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005e30:	f7ff fd9c 	bl	800596c <I2C_WaitOnBTFFlagUntilTimeout>
 8005e34:	2800      	cmp	r0, #0
 8005e36:	d1cf      	bne.n	8005dd8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005e38:	6822      	ldr	r2, [r4, #0]
 8005e3a:	6813      	ldr	r3, [r2, #0]
 8005e3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005e40:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005e42:	2320      	movs	r3, #32
 8005e44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005e48:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005e4c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005e50:	e783      	b.n	8005d5a <HAL_I2C_Mem_Write+0x1e>
 8005e52:	bf00      	nop
 8005e54:	00100002 	.word	0x00100002
 8005e58:	ffff0000 	.word	0xffff0000

08005e5c <HAL_I2C_Mem_Read>:
{
 8005e5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005e60:	4604      	mov	r4, r0
 8005e62:	b087      	sub	sp, #28
 8005e64:	4699      	mov	r9, r3
 8005e66:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005e68:	460d      	mov	r5, r1
 8005e6a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005e6c:	f7fe fbc0 	bl	80045f0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e70:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005e74:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005e76:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e78:	d004      	beq.n	8005e84 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005e7a:	2502      	movs	r5, #2
}
 8005e7c:	4628      	mov	r0, r5
 8005e7e:	b007      	add	sp, #28
 8005e80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005e84:	9000      	str	r0, [sp, #0]
 8005e86:	4976      	ldr	r1, [pc, #472]	; (8006060 <HAL_I2C_Mem_Read+0x204>)
 8005e88:	2319      	movs	r3, #25
 8005e8a:	2201      	movs	r2, #1
 8005e8c:	4620      	mov	r0, r4
 8005e8e:	f7ff fcd1 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005e92:	2800      	cmp	r0, #0
 8005e94:	d1f1      	bne.n	8005e7a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005e96:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005e9a:	2b01      	cmp	r3, #1
 8005e9c:	d0ed      	beq.n	8005e7a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005e9e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005ea0:	2301      	movs	r3, #1
 8005ea2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005ea6:	6803      	ldr	r3, [r0, #0]
 8005ea8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005eaa:	bf5e      	ittt	pl
 8005eac:	6803      	ldrpl	r3, [r0, #0]
 8005eae:	f043 0301 	orrpl.w	r3, r3, #1
 8005eb2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005eb4:	6803      	ldr	r3, [r0, #0]
 8005eb6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005eba:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005ebc:	2322      	movs	r3, #34	; 0x22
 8005ebe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005ec2:	2340      	movs	r3, #64	; 0x40
 8005ec4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ec8:	2300      	movs	r3, #0
 8005eca:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005ecc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ece:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005ed0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005ed4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005ed6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005ed8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005eda:	4b62      	ldr	r3, [pc, #392]	; (8006064 <HAL_I2C_Mem_Read+0x208>)
 8005edc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005ede:	4629      	mov	r1, r5
 8005ee0:	e9cd 7600 	strd	r7, r6, [sp]
 8005ee4:	464b      	mov	r3, r9
 8005ee6:	4642      	mov	r2, r8
 8005ee8:	4620      	mov	r0, r4
 8005eea:	f7ff fde3 	bl	8005ab4 <I2C_RequestMemoryRead>
 8005eee:	4605      	mov	r5, r0
 8005ef0:	b108      	cbz	r0, 8005ef6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005ef2:	2501      	movs	r5, #1
 8005ef4:	e7c2      	b.n	8005e7c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005ef6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ef8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005efa:	b9b2      	cbnz	r2, 8005f2a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005efc:	9002      	str	r0, [sp, #8]
 8005efe:	695a      	ldr	r2, [r3, #20]
 8005f00:	9202      	str	r2, [sp, #8]
 8005f02:	699a      	ldr	r2, [r3, #24]
 8005f04:	9202      	str	r2, [sp, #8]
 8005f06:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005f08:	681a      	ldr	r2, [r3, #0]
 8005f0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f0e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005f10:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006068 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005f14:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d12c      	bne.n	8005f74 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005f1a:	2220      	movs	r2, #32
 8005f1c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005f20:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005f24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005f28:	e7a8      	b.n	8005e7c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005f2a:	2a01      	cmp	r2, #1
 8005f2c:	d10a      	bne.n	8005f44 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005f2e:	681a      	ldr	r2, [r3, #0]
 8005f30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f34:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f36:	9003      	str	r0, [sp, #12]
 8005f38:	695a      	ldr	r2, [r3, #20]
 8005f3a:	9203      	str	r2, [sp, #12]
 8005f3c:	699a      	ldr	r2, [r3, #24]
 8005f3e:	9203      	str	r2, [sp, #12]
 8005f40:	9a03      	ldr	r2, [sp, #12]
 8005f42:	e7e1      	b.n	8005f08 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005f44:	2a02      	cmp	r2, #2
 8005f46:	d10e      	bne.n	8005f66 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005f48:	681a      	ldr	r2, [r3, #0]
 8005f4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f4e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005f50:	681a      	ldr	r2, [r3, #0]
 8005f52:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005f56:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f58:	9004      	str	r0, [sp, #16]
 8005f5a:	695a      	ldr	r2, [r3, #20]
 8005f5c:	9204      	str	r2, [sp, #16]
 8005f5e:	699b      	ldr	r3, [r3, #24]
 8005f60:	9304      	str	r3, [sp, #16]
 8005f62:	9b04      	ldr	r3, [sp, #16]
 8005f64:	e7d4      	b.n	8005f10 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f66:	9005      	str	r0, [sp, #20]
 8005f68:	695a      	ldr	r2, [r3, #20]
 8005f6a:	9205      	str	r2, [sp, #20]
 8005f6c:	699b      	ldr	r3, [r3, #24]
 8005f6e:	9305      	str	r3, [sp, #20]
 8005f70:	9b05      	ldr	r3, [sp, #20]
 8005f72:	e7cd      	b.n	8005f10 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005f74:	2b03      	cmp	r3, #3
 8005f76:	d856      	bhi.n	8006026 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005f78:	2b01      	cmp	r3, #1
 8005f7a:	d115      	bne.n	8005fa8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f7c:	4632      	mov	r2, r6
 8005f7e:	4639      	mov	r1, r7
 8005f80:	4620      	mov	r0, r4
 8005f82:	f7ff fcc4 	bl	800590e <I2C_WaitOnRXNEFlagUntilTimeout>
 8005f86:	2800      	cmp	r0, #0
 8005f88:	d1b3      	bne.n	8005ef2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005f8a:	6823      	ldr	r3, [r4, #0]
 8005f8c:	691a      	ldr	r2, [r3, #16]
 8005f8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f90:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005f92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f94:	3301      	adds	r3, #1
 8005f96:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005f98:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005f9a:	3b01      	subs	r3, #1
 8005f9c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005f9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005fa0:	3b01      	subs	r3, #1
 8005fa2:	b29b      	uxth	r3, r3
 8005fa4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005fa6:	e7b5      	b.n	8005f14 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005fa8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005faa:	9600      	str	r6, [sp, #0]
 8005fac:	463b      	mov	r3, r7
 8005fae:	f04f 0200 	mov.w	r2, #0
 8005fb2:	4641      	mov	r1, r8
 8005fb4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005fb6:	d119      	bne.n	8005fec <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005fb8:	f7ff fc3c 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005fbc:	2800      	cmp	r0, #0
 8005fbe:	d198      	bne.n	8005ef2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005fc0:	6823      	ldr	r3, [r4, #0]
 8005fc2:	681a      	ldr	r2, [r3, #0]
 8005fc4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005fc8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005fca:	691a      	ldr	r2, [r3, #16]
 8005fcc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005fce:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005fd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005fd2:	1c53      	adds	r3, r2, #1
 8005fd4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005fd6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005fd8:	3b01      	subs	r3, #1
 8005fda:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005fdc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005fde:	3b01      	subs	r3, #1
 8005fe0:	b29b      	uxth	r3, r3
 8005fe2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005fe4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005fe6:	691b      	ldr	r3, [r3, #16]
 8005fe8:	7053      	strb	r3, [r2, #1]
 8005fea:	e7d2      	b.n	8005f92 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005fec:	f7ff fc22 	bl	8005834 <I2C_WaitOnFlagUntilTimeout>
 8005ff0:	2800      	cmp	r0, #0
 8005ff2:	f47f af7e 	bne.w	8005ef2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005ff6:	6823      	ldr	r3, [r4, #0]
 8005ff8:	681a      	ldr	r2, [r3, #0]
 8005ffa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ffe:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006000:	691a      	ldr	r2, [r3, #16]
 8006002:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006004:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006006:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006008:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800600a:	3301      	adds	r3, #1
 800600c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800600e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006010:	3b01      	subs	r3, #1
 8006012:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006014:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006016:	3b01      	subs	r3, #1
 8006018:	b29b      	uxth	r3, r3
 800601a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800601c:	4602      	mov	r2, r0
 800601e:	463b      	mov	r3, r7
 8006020:	4641      	mov	r1, r8
 8006022:	4620      	mov	r0, r4
 8006024:	e7c8      	b.n	8005fb8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006026:	4632      	mov	r2, r6
 8006028:	4639      	mov	r1, r7
 800602a:	4620      	mov	r0, r4
 800602c:	f7ff fc6f 	bl	800590e <I2C_WaitOnRXNEFlagUntilTimeout>
 8006030:	2800      	cmp	r0, #0
 8006032:	f47f af5e 	bne.w	8005ef2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006036:	6823      	ldr	r3, [r4, #0]
 8006038:	691a      	ldr	r2, [r3, #16]
 800603a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800603c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800603e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006040:	1c53      	adds	r3, r2, #1
 8006042:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006044:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006046:	3b01      	subs	r3, #1
 8006048:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800604a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800604c:	3b01      	subs	r3, #1
 800604e:	b29b      	uxth	r3, r3
 8006050:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006052:	6823      	ldr	r3, [r4, #0]
 8006054:	6959      	ldr	r1, [r3, #20]
 8006056:	0749      	lsls	r1, r1, #29
 8006058:	f57f af5c 	bpl.w	8005f14 <HAL_I2C_Mem_Read+0xb8>
 800605c:	e7c3      	b.n	8005fe6 <HAL_I2C_Mem_Read+0x18a>
 800605e:	bf00      	nop
 8006060:	00100002 	.word	0x00100002
 8006064:	ffff0000 	.word	0xffff0000
 8006068:	00010004 	.word	0x00010004

0800606c <HAL_I2C_GetState>:
  return hi2c->State;
 800606c:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8006070:	4770      	bx	lr

08006072 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006072:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006074:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006078:	01d2      	lsls	r2, r2, #7
 800607a:	3284      	adds	r2, #132	; 0x84
 800607c:	1883      	adds	r3, r0, r2
{
 800607e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006082:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006084:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006086:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006088:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800608c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006090:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006092:	68c5      	ldr	r5, [r0, #12]
 8006094:	f10c 0701 	add.w	r7, ip, #1
 8006098:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800609c:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80060a0:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80060a2:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80060a4:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80060a8:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80060aa:	68c5      	ldr	r5, [r0, #12]
 80060ac:	68ce      	ldr	r6, [r1, #12]
 80060ae:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80060b2:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80060b4:	689d      	ldr	r5, [r3, #8]
 80060b6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80060ba:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80060bc:	68c7      	ldr	r7, [r0, #12]
 80060be:	688d      	ldr	r5, [r1, #8]
 80060c0:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80060c4:	3501      	adds	r5, #1
 80060c6:	443d      	add	r5, r7
 80060c8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80060cc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80060ce:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80060d0:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80060d2:	f025 0507 	bic.w	r5, r5, #7
 80060d6:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80060d8:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80060dc:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80060de:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80060e0:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80060e4:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80060e8:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80060ec:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80060f0:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80060f4:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80060f8:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80060fc:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80060fe:	695d      	ldr	r5, [r3, #20]
 8006100:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006104:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006106:	694d      	ldr	r5, [r1, #20]
 8006108:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800610a:	69dd      	ldr	r5, [r3, #28]
 800610c:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006110:	f025 0507 	bic.w	r5, r5, #7
 8006114:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006116:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800611a:	433d      	orrs	r5, r7
 800611c:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800611e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006120:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006122:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006126:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006128:	b31e      	cbz	r6, 8006172 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800612a:	2e01      	cmp	r6, #1
 800612c:	d023      	beq.n	8006176 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800612e:	1eb5      	subs	r5, r6, #2
 8006130:	2d02      	cmp	r5, #2
 8006132:	d922      	bls.n	800617a <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006134:	2e07      	cmp	r6, #7
 8006136:	bf0c      	ite	eq
 8006138:	2502      	moveq	r5, #2
 800613a:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800613c:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800613e:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006142:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006144:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006148:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800614a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800614c:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800614e:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006150:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006152:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006156:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006158:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800615a:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800615e:	f024 0407 	bic.w	r4, r4, #7
 8006162:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006164:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006166:	5883      	ldr	r3, [r0, r2]
 8006168:	f043 0301 	orr.w	r3, r3, #1
 800616c:	5083      	str	r3, [r0, r2]
}
 800616e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006172:	2504      	movs	r5, #4
 8006174:	e7e2      	b.n	800613c <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006176:	2503      	movs	r5, #3
 8006178:	e7e0      	b.n	800613c <LTDC_SetConfig+0xca>
    tmp = 2U;
 800617a:	2502      	movs	r5, #2
 800617c:	e7de      	b.n	800613c <LTDC_SetConfig+0xca>
	...

08006180 <HAL_LTDC_Init>:
{
 8006180:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006182:	4604      	mov	r4, r0
 8006184:	2800      	cmp	r0, #0
 8006186:	d063      	beq.n	8006250 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006188:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800618c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006190:	b91b      	cbnz	r3, 800619a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006192:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006196:	f7fc f9a7 	bl	80024e8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800619a:	2302      	movs	r3, #2
 800619c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80061a0:	6823      	ldr	r3, [r4, #0]
 80061a2:	699a      	ldr	r2, [r3, #24]
 80061a4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80061a8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80061aa:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80061ae:	4302      	orrs	r2, r0
 80061b0:	68e0      	ldr	r0, [r4, #12]
 80061b2:	6999      	ldr	r1, [r3, #24]
 80061b4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80061b6:	6920      	ldr	r0, [r4, #16]
 80061b8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80061ba:	430a      	orrs	r2, r1
 80061bc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80061be:	689a      	ldr	r2, [r3, #8]
 80061c0:	4924      	ldr	r1, [pc, #144]	; (8006254 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80061c2:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80061c4:	400a      	ands	r2, r1
 80061c6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80061c8:	689a      	ldr	r2, [r3, #8]
 80061ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061ce:	69a0      	ldr	r0, [r4, #24]
 80061d0:	4302      	orrs	r2, r0
 80061d2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80061d4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80061d6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80061d8:	400a      	ands	r2, r1
 80061da:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80061dc:	68da      	ldr	r2, [r3, #12]
 80061de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061e2:	6a20      	ldr	r0, [r4, #32]
 80061e4:	4302      	orrs	r2, r0
 80061e6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80061e8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80061ea:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80061ec:	400a      	ands	r2, r1
 80061ee:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80061f0:	691a      	ldr	r2, [r3, #16]
 80061f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061f6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80061f8:	4302      	orrs	r2, r0
 80061fa:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80061fc:	695a      	ldr	r2, [r3, #20]
 80061fe:	4011      	ands	r1, r2
 8006200:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006202:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006204:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006206:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800620a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800620c:	430a      	orrs	r2, r1
 800620e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006210:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006212:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006216:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800621a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800621e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006220:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006222:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006226:	430a      	orrs	r2, r1
 8006228:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800622c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006230:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006232:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006234:	f042 0206 	orr.w	r2, r2, #6
 8006238:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800623a:	699a      	ldr	r2, [r3, #24]
 800623c:	f042 0201 	orr.w	r2, r2, #1
 8006240:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006242:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006244:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006246:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800624a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800624e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006250:	2001      	movs	r0, #1
 8006252:	e7fc      	b.n	800624e <HAL_LTDC_Init+0xce>
 8006254:	f000f800 	.word	0xf000f800

08006258 <HAL_LTDC_ErrorCallback>:
 8006258:	4770      	bx	lr

0800625a <HAL_LTDC_LineEventCallback>:
 800625a:	4770      	bx	lr

0800625c <HAL_LTDC_ReloadEventCallback>:
 800625c:	4770      	bx	lr

0800625e <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800625e:	6803      	ldr	r3, [r0, #0]
{
 8006260:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006262:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006264:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006266:	0772      	lsls	r2, r6, #29
{
 8006268:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800626a:	d514      	bpl.n	8006296 <HAL_LTDC_IRQHandler+0x38>
 800626c:	0769      	lsls	r1, r5, #29
 800626e:	d512      	bpl.n	8006296 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006270:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006272:	f022 0204 	bic.w	r2, r2, #4
 8006276:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006278:	2204      	movs	r2, #4
 800627a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800627c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8006280:	f043 0301 	orr.w	r3, r3, #1
 8006284:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006288:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800628a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800628e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006292:	f7ff ffe1 	bl	8006258 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006296:	07b2      	lsls	r2, r6, #30
 8006298:	d516      	bpl.n	80062c8 <HAL_LTDC_IRQHandler+0x6a>
 800629a:	07ab      	lsls	r3, r5, #30
 800629c:	d514      	bpl.n	80062c8 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800629e:	6823      	ldr	r3, [r4, #0]
 80062a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80062a2:	f022 0202 	bic.w	r2, r2, #2
 80062a6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80062a8:	2202      	movs	r2, #2
 80062aa:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80062ac:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80062b0:	4313      	orrs	r3, r2
 80062b2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80062b6:	2304      	movs	r3, #4
 80062b8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80062bc:	2300      	movs	r3, #0
 80062be:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80062c2:	4620      	mov	r0, r4
 80062c4:	f7ff ffc8 	bl	8006258 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80062c8:	07f0      	lsls	r0, r6, #31
 80062ca:	d510      	bpl.n	80062ee <HAL_LTDC_IRQHandler+0x90>
 80062cc:	07e9      	lsls	r1, r5, #31
 80062ce:	d50e      	bpl.n	80062ee <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80062d0:	6823      	ldr	r3, [r4, #0]
 80062d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80062d4:	f022 0201 	bic.w	r2, r2, #1
 80062d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80062da:	2201      	movs	r2, #1
 80062dc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80062de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80062e0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80062e4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80062e8:	4620      	mov	r0, r4
 80062ea:	f7ff ffb6 	bl	800625a <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80062ee:	0732      	lsls	r2, r6, #28
 80062f0:	d511      	bpl.n	8006316 <HAL_LTDC_IRQHandler+0xb8>
 80062f2:	072b      	lsls	r3, r5, #28
 80062f4:	d50f      	bpl.n	8006316 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80062f6:	6823      	ldr	r3, [r4, #0]
 80062f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80062fa:	f022 0208 	bic.w	r2, r2, #8
 80062fe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006300:	2208      	movs	r2, #8
 8006302:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006304:	2301      	movs	r3, #1
 8006306:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800630a:	2300      	movs	r3, #0
 800630c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006310:	4620      	mov	r0, r4
 8006312:	f7ff ffa3 	bl	800625c <HAL_LTDC_ReloadEventCallback>
}
 8006316:	bd70      	pop	{r4, r5, r6, pc}

08006318 <HAL_LTDC_ConfigLayer>:
{
 8006318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800631c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006320:	2b01      	cmp	r3, #1
{
 8006322:	4606      	mov	r6, r0
 8006324:	460f      	mov	r7, r1
 8006326:	4694      	mov	ip, r2
 8006328:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800632c:	d01f      	beq.n	800636e <HAL_LTDC_ConfigLayer+0x56>
 800632e:	f04f 0801 	mov.w	r8, #1
 8006332:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006336:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800633a:	2434      	movs	r4, #52	; 0x34
 800633c:	460d      	mov	r5, r1
 800633e:	fb04 6402 	mla	r4, r4, r2, r6
 8006342:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006344:	3438      	adds	r4, #56	; 0x38
 8006346:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006348:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800634a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800634c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800634e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006350:	682b      	ldr	r3, [r5, #0]
 8006352:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006354:	4630      	mov	r0, r6
 8006356:	4662      	mov	r2, ip
 8006358:	4639      	mov	r1, r7
 800635a:	f7ff fe8a 	bl	8006072 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800635e:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006360:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006362:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006366:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800636a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800636e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006374 <HAL_LTDC_SetPitch>:
{
 8006374:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8006376:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800637a:	2b01      	cmp	r3, #1
 800637c:	f04f 0302 	mov.w	r3, #2
 8006380:	d02c      	beq.n	80063dc <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8006382:	2434      	movs	r4, #52	; 0x34
 8006384:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006388:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800638c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800638e:	b33c      	cbz	r4, 80063e0 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006390:	2c01      	cmp	r4, #1
 8006392:	d027      	beq.n	80063e4 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006394:	1ea5      	subs	r5, r4, #2
 8006396:	429d      	cmp	r5, r3
 8006398:	d902      	bls.n	80063a0 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800639a:	2c07      	cmp	r4, #7
 800639c:	bf18      	it	ne
 800639e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80063a0:	6804      	ldr	r4, [r0, #0]
 80063a2:	01d2      	lsls	r2, r2, #7
 80063a4:	3284      	adds	r2, #132	; 0x84
 80063a6:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80063a8:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80063aa:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80063ac:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80063b0:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80063b4:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80063b6:	4c0c      	ldr	r4, [pc, #48]	; (80063e8 <HAL_LTDC_SetPitch+0x74>)
 80063b8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80063ba:	f045 0501 	orr.w	r5, r5, #1
 80063be:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80063c0:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80063c2:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80063c6:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80063c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063ca:	f043 0301 	orr.w	r3, r3, #1
 80063ce:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80063d0:	2301      	movs	r3, #1
 80063d2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80063d6:	2300      	movs	r3, #0
 80063d8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80063dc:	4618      	mov	r0, r3
 80063de:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80063e0:	2304      	movs	r3, #4
 80063e2:	e7dd      	b.n	80063a0 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80063e4:	2303      	movs	r3, #3
 80063e6:	e7db      	b.n	80063a0 <HAL_LTDC_SetPitch+0x2c>
 80063e8:	40016800 	.word	0x40016800

080063ec <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80063ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80063ee:	2300      	movs	r3, #0
 80063f0:	9301      	str	r3, [sp, #4]
 80063f2:	4b18      	ldr	r3, [pc, #96]	; (8006454 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80063f4:	4d18      	ldr	r5, [pc, #96]	; (8006458 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80063f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80063f8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80063fc:	641a      	str	r2, [r3, #64]	; 0x40
 80063fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006400:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006404:	9301      	str	r3, [sp, #4]
 8006406:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8006408:	4b14      	ldr	r3, [pc, #80]	; (800645c <HAL_PWREx_EnableOverDrive+0x70>)
 800640a:	2201      	movs	r2, #1
 800640c:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800640e:	f7fe f8ef 	bl	80045f0 <HAL_GetTick>
 8006412:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006414:	686b      	ldr	r3, [r5, #4]
 8006416:	03da      	lsls	r2, r3, #15
 8006418:	d50b      	bpl.n	8006432 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800641a:	4b10      	ldr	r3, [pc, #64]	; (800645c <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800641c:	4d0e      	ldr	r5, [pc, #56]	; (8006458 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800641e:	2201      	movs	r2, #1
 8006420:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8006422:	f7fe f8e5 	bl	80045f0 <HAL_GetTick>
 8006426:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006428:	686b      	ldr	r3, [r5, #4]
 800642a:	039b      	lsls	r3, r3, #14
 800642c:	d50a      	bpl.n	8006444 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800642e:	2000      	movs	r0, #0
 8006430:	e006      	b.n	8006440 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006432:	f7fe f8dd 	bl	80045f0 <HAL_GetTick>
 8006436:	1b00      	subs	r0, r0, r4
 8006438:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800643c:	d9ea      	bls.n	8006414 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800643e:	2003      	movs	r0, #3
}
 8006440:	b003      	add	sp, #12
 8006442:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006444:	f7fe f8d4 	bl	80045f0 <HAL_GetTick>
 8006448:	1b00      	subs	r0, r0, r4
 800644a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800644e:	d9eb      	bls.n	8006428 <HAL_PWREx_EnableOverDrive+0x3c>
 8006450:	e7f5      	b.n	800643e <HAL_PWREx_EnableOverDrive+0x52>
 8006452:	bf00      	nop
 8006454:	40023800 	.word	0x40023800
 8006458:	40007000 	.word	0x40007000
 800645c:	420e0000 	.word	0x420e0000

08006460 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006464:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8006466:	b13e      	cbz	r6, 8006478 <QSPI_Config+0x18>
 8006468:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800646c:	bf1f      	itttt	ne
 800646e:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8006470:	6804      	ldrne	r4, [r0, #0]
 8006472:	f103 33ff 	addne.w	r3, r3, #4294967295
 8006476:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006478:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800647c:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006480:	f1b9 0f00 	cmp.w	r9, #0
 8006484:	d04f      	beq.n	8006526 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006486:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006488:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800648a:	f8d1 a000 	ldr.w	sl, [r1]
 800648e:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8006492:	ea46 0909 	orr.w	r9, r6, r9
 8006496:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800649a:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800649e:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80064a2:	b335      	cbz	r5, 80064f2 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064a4:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064a6:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064a8:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064aa:	ea49 0505 	orr.w	r5, r9, r5
 80064ae:	b19f      	cbz	r7, 80064d8 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064b0:	ea4a 0307 	orr.w	r3, sl, r7
 80064b4:	4323      	orrs	r3, r4
 80064b6:	ea43 0308 	orr.w	r3, r3, r8
 80064ba:	68cc      	ldr	r4, [r1, #12]
 80064bc:	ea43 030e 	orr.w	r3, r3, lr
 80064c0:	4333      	orrs	r3, r6
 80064c2:	4323      	orrs	r3, r4
 80064c4:	ea43 030c 	orr.w	r3, r3, ip
 80064c8:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064ca:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064ce:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064d0:	d00d      	beq.n	80064ee <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80064d2:	684b      	ldr	r3, [r1, #4]
 80064d4:	6183      	str	r3, [r0, #24]
 80064d6:	e00a      	b.n	80064ee <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064d8:	ea4a 0304 	orr.w	r3, sl, r4
 80064dc:	ea43 0308 	orr.w	r3, r3, r8
 80064e0:	ea43 030e 	orr.w	r3, r3, lr
 80064e4:	4333      	orrs	r3, r6
 80064e6:	ea43 030c 	orr.w	r3, r3, ip
 80064ea:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064ec:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80064ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064f2:	b16f      	cbz	r7, 8006510 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064f4:	ea4a 0307 	orr.w	r3, sl, r7
 80064f8:	4323      	orrs	r3, r4
 80064fa:	ea43 0308 	orr.w	r3, r3, r8
 80064fe:	68cc      	ldr	r4, [r1, #12]
 8006500:	ea43 030e 	orr.w	r3, r3, lr
 8006504:	4323      	orrs	r3, r4
 8006506:	ea43 030c 	orr.w	r3, r3, ip
 800650a:	ea43 0309 	orr.w	r3, r3, r9
 800650e:	e7dc      	b.n	80064ca <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006510:	ea4a 0304 	orr.w	r3, sl, r4
 8006514:	ea43 0308 	orr.w	r3, r3, r8
 8006518:	ea43 030e 	orr.w	r3, r3, lr
 800651c:	ea43 030c 	orr.w	r3, r3, ip
 8006520:	ea43 0309 	orr.w	r3, r3, r9
 8006524:	e7e2      	b.n	80064ec <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006526:	b345      	cbz	r5, 800657a <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006528:	6804      	ldr	r4, [r0, #0]
 800652a:	688b      	ldr	r3, [r1, #8]
 800652c:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800652e:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006532:	694e      	ldr	r6, [r1, #20]
 8006534:	6908      	ldr	r0, [r1, #16]
 8006536:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800653a:	ea43 0502 	orr.w	r5, r3, r2
 800653e:	04b6      	lsls	r6, r6, #18
 8006540:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006544:	b187      	cbz	r7, 8006568 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006546:	4338      	orrs	r0, r7
 8006548:	ea40 0008 	orr.w	r0, r0, r8
 800654c:	4303      	orrs	r3, r0
 800654e:	68c8      	ldr	r0, [r1, #12]
 8006550:	ea43 030c 	orr.w	r3, r3, ip
 8006554:	4303      	orrs	r3, r0
 8006556:	4333      	orrs	r3, r6
 8006558:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800655a:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800655e:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006560:	d0c5      	beq.n	80064ee <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006562:	684b      	ldr	r3, [r1, #4]
 8006564:	61a3      	str	r3, [r4, #24]
 8006566:	e7c2      	b.n	80064ee <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006568:	ea40 0008 	orr.w	r0, r0, r8
 800656c:	4303      	orrs	r3, r0
 800656e:	ea43 030c 	orr.w	r3, r3, ip
 8006572:	4333      	orrs	r3, r6
 8006574:	432b      	orrs	r3, r5
 8006576:	6163      	str	r3, [r4, #20]
 8006578:	e7b9      	b.n	80064ee <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800657a:	b17f      	cbz	r7, 800659c <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800657c:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800657e:	6800      	ldr	r0, [r0, #0]
 8006580:	ea46 0307 	orr.w	r3, r6, r7
 8006584:	4313      	orrs	r3, r2
 8006586:	4323      	orrs	r3, r4
 8006588:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800658a:	4323      	orrs	r3, r4
 800658c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800658e:	4323      	orrs	r3, r4
 8006590:	68cc      	ldr	r4, [r1, #12]
 8006592:	4323      	orrs	r3, r4
 8006594:	694c      	ldr	r4, [r1, #20]
 8006596:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800659a:	e796      	b.n	80064ca <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800659c:	2e00      	cmp	r6, #0
 800659e:	d0a6      	beq.n	80064ee <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80065a0:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80065a2:	6800      	ldr	r0, [r0, #0]
 80065a4:	4333      	orrs	r3, r6
 80065a6:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 80065a8:	431a      	orrs	r2, r3
 80065aa:	4332      	orrs	r2, r6
 80065ac:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 80065ae:	694b      	ldr	r3, [r1, #20]
 80065b0:	4332      	orrs	r2, r6
 80065b2:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 80065b6:	6142      	str	r2, [r0, #20]
}
 80065b8:	e799      	b.n	80064ee <QSPI_Config+0x8e>

080065ba <QSPI_WaitFlagStateUntilTimeout>:
{
 80065ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065be:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80065c2:	4604      	mov	r4, r0
 80065c4:	460e      	mov	r6, r1
 80065c6:	4615      	mov	r5, r2
 80065c8:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80065ca:	6822      	ldr	r2, [r4, #0]
 80065cc:	6893      	ldr	r3, [r2, #8]
 80065ce:	4233      	tst	r3, r6
 80065d0:	bf14      	ite	ne
 80065d2:	2301      	movne	r3, #1
 80065d4:	2300      	moveq	r3, #0
 80065d6:	42ab      	cmp	r3, r5
 80065d8:	d101      	bne.n	80065de <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80065da:	2000      	movs	r0, #0
 80065dc:	e012      	b.n	8006604 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80065de:	f1b8 3fff 	cmp.w	r8, #4294967295
 80065e2:	d0f3      	beq.n	80065cc <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065e4:	f7fe f804 	bl	80045f0 <HAL_GetTick>
 80065e8:	1bc0      	subs	r0, r0, r7
 80065ea:	4540      	cmp	r0, r8
 80065ec:	d802      	bhi.n	80065f4 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80065ee:	f1b8 0f00 	cmp.w	r8, #0
 80065f2:	d1ea      	bne.n	80065ca <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80065f4:	2304      	movs	r3, #4
 80065f6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80065fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80065fc:	f043 0301 	orr.w	r3, r3, #1
 8006600:	6463      	str	r3, [r4, #68]	; 0x44
 8006602:	2001      	movs	r0, #1
}
 8006604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006608 <HAL_QSPI_Init>:
{
 8006608:	b530      	push	{r4, r5, lr}
 800660a:	b085      	sub	sp, #20
 800660c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800660e:	f7fd ffef 	bl	80045f0 <HAL_GetTick>
 8006612:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8006614:	2c00      	cmp	r4, #0
 8006616:	d047      	beq.n	80066a8 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006618:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800661c:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8006620:	b94a      	cbnz	r2, 8006636 <HAL_QSPI_Init+0x2e>
 8006622:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8006624:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8006628:	4620      	mov	r0, r4
 800662a:	f7fb ff8f 	bl	800254c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800662e:	f241 3288 	movw	r2, #5000	; 0x1388
 8006632:	9b03      	ldr	r3, [sp, #12]
 8006634:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006636:	6820      	ldr	r0, [r4, #0]
 8006638:	68a1      	ldr	r1, [r4, #8]
 800663a:	6802      	ldr	r2, [r0, #0]
 800663c:	3901      	subs	r1, #1
 800663e:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8006642:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006646:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006648:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800664a:	9200      	str	r2, [sp, #0]
 800664c:	2120      	movs	r1, #32
 800664e:	2200      	movs	r2, #0
 8006650:	4620      	mov	r0, r4
 8006652:	f7ff ffb2 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006656:	bb10      	cbnz	r0, 800669e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006658:	69e5      	ldr	r5, [r4, #28]
 800665a:	68e3      	ldr	r3, [r4, #12]
 800665c:	6822      	ldr	r2, [r4, #0]
 800665e:	432b      	orrs	r3, r5
 8006660:	6a25      	ldr	r5, [r4, #32]
 8006662:	6811      	ldr	r1, [r2, #0]
 8006664:	432b      	orrs	r3, r5
 8006666:	6865      	ldr	r5, [r4, #4]
 8006668:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800666c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006670:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8006674:	430b      	orrs	r3, r1
 8006676:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006678:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800667c:	430b      	orrs	r3, r1
 800667e:	6921      	ldr	r1, [r4, #16]
 8006680:	6855      	ldr	r5, [r2, #4]
 8006682:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006686:	4909      	ldr	r1, [pc, #36]	; (80066ac <HAL_QSPI_Init+0xa4>)
 8006688:	4029      	ands	r1, r5
 800668a:	430b      	orrs	r3, r1
 800668c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800668e:	6813      	ldr	r3, [r2, #0]
 8006690:	f043 0301 	orr.w	r3, r3, #1
 8006694:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006696:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006698:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800669a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800669e:	2300      	movs	r3, #0
 80066a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80066a4:	b005      	add	sp, #20
 80066a6:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 80066a8:	2001      	movs	r0, #1
 80066aa:	e7fb      	b.n	80066a4 <HAL_QSPI_Init+0x9c>
 80066ac:	ffe0f8fe 	.word	0xffe0f8fe

080066b0 <HAL_QSPI_DeInit>:
{
 80066b0:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 80066b2:	4604      	mov	r4, r0
 80066b4:	b168      	cbz	r0, 80066d2 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 80066b6:	6802      	ldr	r2, [r0, #0]
 80066b8:	6813      	ldr	r3, [r2, #0]
 80066ba:	f023 0301 	bic.w	r3, r3, #1
 80066be:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 80066c0:	f7fb ff9e 	bl	8002600 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066c4:	2000      	movs	r0, #0
 80066c6:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 80066c8:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80066cc:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 80066d0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80066d2:	2001      	movs	r0, #1
 80066d4:	e7fc      	b.n	80066d0 <HAL_QSPI_DeInit+0x20>

080066d6 <HAL_QSPI_Command>:
{
 80066d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80066da:	4604      	mov	r4, r0
 80066dc:	b085      	sub	sp, #20
 80066de:	4617      	mov	r7, r2
 80066e0:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 80066e2:	f7fd ff85 	bl	80045f0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80066e6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80066ea:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80066ec:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80066ee:	d034      	beq.n	800675a <HAL_QSPI_Command+0x84>
 80066f0:	2201      	movs	r2, #1
 80066f2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80066f6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80066fa:	2a01      	cmp	r2, #1
 80066fc:	fa5f f882 	uxtb.w	r8, r2
 8006700:	f04f 0602 	mov.w	r6, #2
 8006704:	d127      	bne.n	8006756 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006706:	2200      	movs	r2, #0
 8006708:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800670a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800670c:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006710:	9700      	str	r7, [sp, #0]
 8006712:	2120      	movs	r1, #32
 8006714:	4620      	mov	r0, r4
 8006716:	f7ff ff50 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800671a:	4605      	mov	r5, r0
 800671c:	b9a0      	cbnz	r0, 8006748 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800671e:	4602      	mov	r2, r0
 8006720:	4649      	mov	r1, r9
 8006722:	4620      	mov	r0, r4
 8006724:	f7ff fe9c 	bl	8006460 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006728:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800672c:	9b03      	ldr	r3, [sp, #12]
 800672e:	b94a      	cbnz	r2, 8006744 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006730:	9700      	str	r7, [sp, #0]
 8006732:	4642      	mov	r2, r8
 8006734:	4631      	mov	r1, r6
 8006736:	4620      	mov	r0, r4
 8006738:	f7ff ff3f 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800673c:	4605      	mov	r5, r0
 800673e:	b918      	cbnz	r0, 8006748 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006740:	6823      	ldr	r3, [r4, #0]
 8006742:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006744:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006748:	2300      	movs	r3, #0
 800674a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800674e:	4628      	mov	r0, r5
 8006750:	b005      	add	sp, #20
 8006752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8006756:	4635      	mov	r5, r6
 8006758:	e7f6      	b.n	8006748 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800675a:	2502      	movs	r5, #2
 800675c:	e7f7      	b.n	800674e <HAL_QSPI_Command+0x78>

0800675e <HAL_QSPI_AutoPolling>:
{
 800675e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006762:	4604      	mov	r4, r0
 8006764:	4615      	mov	r5, r2
 8006766:	461e      	mov	r6, r3
 8006768:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800676a:	f7fd ff41 	bl	80045f0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800676e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006772:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006774:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006776:	d040      	beq.n	80067fa <HAL_QSPI_AutoPolling+0x9c>
 8006778:	2201      	movs	r2, #1
 800677a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800677e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006782:	2a01      	cmp	r2, #1
 8006784:	b2d7      	uxtb	r7, r2
 8006786:	d136      	bne.n	80067f6 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006788:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800678a:	2200      	movs	r2, #0
 800678c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800678e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006790:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006794:	9600      	str	r6, [sp, #0]
 8006796:	2120      	movs	r1, #32
 8006798:	4620      	mov	r0, r4
 800679a:	f7ff ff0e 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800679e:	bb20      	cbnz	r0, 80067ea <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80067a0:	6821      	ldr	r1, [r4, #0]
 80067a2:	682a      	ldr	r2, [r5, #0]
 80067a4:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 80067a6:	686a      	ldr	r2, [r5, #4]
 80067a8:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 80067aa:	68aa      	ldr	r2, [r5, #8]
 80067ac:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80067ae:	680a      	ldr	r2, [r1, #0]
 80067b0:	6928      	ldr	r0, [r5, #16]
 80067b2:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80067b6:	4302      	orrs	r2, r0
 80067b8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80067bc:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 80067be:	68ea      	ldr	r2, [r5, #12]
 80067c0:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80067c4:	4641      	mov	r1, r8
 80067c6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80067ca:	4620      	mov	r0, r4
 80067cc:	f7ff fe48 	bl	8006460 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80067d0:	9b03      	ldr	r3, [sp, #12]
 80067d2:	9600      	str	r6, [sp, #0]
 80067d4:	463a      	mov	r2, r7
 80067d6:	2108      	movs	r1, #8
 80067d8:	4620      	mov	r0, r4
 80067da:	f7ff feee 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80067de:	b920      	cbnz	r0, 80067ea <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80067e0:	6823      	ldr	r3, [r4, #0]
 80067e2:	2208      	movs	r2, #8
 80067e4:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80067e6:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80067ea:	2300      	movs	r3, #0
 80067ec:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80067f0:	b004      	add	sp, #16
 80067f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 80067f6:	2002      	movs	r0, #2
 80067f8:	e7f7      	b.n	80067ea <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 80067fa:	2002      	movs	r0, #2
 80067fc:	e7f8      	b.n	80067f0 <HAL_QSPI_AutoPolling+0x92>

080067fe <HAL_QSPI_MemoryMapped>:
{
 80067fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006800:	4604      	mov	r4, r0
 8006802:	4616      	mov	r6, r2
 8006804:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006806:	f7fd fef3 	bl	80045f0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800680a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800680e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006810:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006812:	d032      	beq.n	800687a <HAL_QSPI_MemoryMapped+0x7c>
 8006814:	2201      	movs	r2, #1
 8006816:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800681a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800681e:	2a01      	cmp	r2, #1
 8006820:	d129      	bne.n	8006876 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006822:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006824:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006826:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006828:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800682c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800682e:	9100      	str	r1, [sp, #0]
 8006830:	4620      	mov	r0, r4
 8006832:	2120      	movs	r1, #32
 8006834:	f7ff fec1 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006838:	4605      	mov	r5, r0
 800683a:	b9b0      	cbnz	r0, 800686a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800683c:	6823      	ldr	r3, [r4, #0]
 800683e:	6872      	ldr	r2, [r6, #4]
 8006840:	6818      	ldr	r0, [r3, #0]
 8006842:	f020 0008 	bic.w	r0, r0, #8
 8006846:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006848:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800684a:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800684c:	d107      	bne.n	800685e <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800684e:	6832      	ldr	r2, [r6, #0]
 8006850:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006852:	2210      	movs	r2, #16
 8006854:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8006856:	681a      	ldr	r2, [r3, #0]
 8006858:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800685c:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800685e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8006862:	4639      	mov	r1, r7
 8006864:	4620      	mov	r0, r4
 8006866:	f7ff fdfb 	bl	8006460 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800686a:	2300      	movs	r3, #0
 800686c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006870:	4628      	mov	r0, r5
 8006872:	b003      	add	sp, #12
 8006874:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006876:	2502      	movs	r5, #2
 8006878:	e7f7      	b.n	800686a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800687a:	2502      	movs	r5, #2
 800687c:	e7f8      	b.n	8006870 <HAL_QSPI_MemoryMapped+0x72>

0800687e <HAL_QSPI_Abort>:
{
 800687e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006880:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006882:	f7fd feb5 	bl	80045f0 <HAL_GetTick>
 8006886:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006888:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 800688c:	f010 0002 	ands.w	r0, r0, #2
 8006890:	d03a      	beq.n	8006908 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8006892:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006894:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8006896:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800689a:	680a      	ldr	r2, [r1, #0]
 800689c:	f012 0204 	ands.w	r2, r2, #4
 80068a0:	d034      	beq.n	800690c <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80068a2:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80068a4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80068a6:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80068a8:	f022 0204 	bic.w	r2, r2, #4
 80068ac:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80068ae:	f7fe f829 	bl	8004904 <HAL_DMA_Abort>
      if(status != HAL_OK)
 80068b2:	9b03      	ldr	r3, [sp, #12]
 80068b4:	b118      	cbz	r0, 80068be <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80068b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80068b8:	f042 0204 	orr.w	r2, r2, #4
 80068bc:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 80068be:	6822      	ldr	r2, [r4, #0]
 80068c0:	6891      	ldr	r1, [r2, #8]
 80068c2:	0689      	lsls	r1, r1, #26
 80068c4:	d51d      	bpl.n	8006902 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80068c6:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80068c8:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80068ca:	f041 0102 	orr.w	r1, r1, #2
 80068ce:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80068d0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80068d2:	9200      	str	r2, [sp, #0]
 80068d4:	2102      	movs	r1, #2
 80068d6:	2201      	movs	r2, #1
 80068d8:	4620      	mov	r0, r4
 80068da:	f7ff fe6e 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80068de:	9b03      	ldr	r3, [sp, #12]
 80068e0:	b990      	cbnz	r0, 8006908 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80068e2:	6822      	ldr	r2, [r4, #0]
 80068e4:	2102      	movs	r1, #2
 80068e6:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80068e8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80068ea:	9200      	str	r2, [sp, #0]
 80068ec:	2120      	movs	r1, #32
 80068ee:	4602      	mov	r2, r0
 80068f0:	4620      	mov	r0, r4
 80068f2:	f7ff fe62 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80068f6:	b938      	cbnz	r0, 8006908 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 80068f8:	6822      	ldr	r2, [r4, #0]
 80068fa:	6953      	ldr	r3, [r2, #20]
 80068fc:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006900:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006902:	2301      	movs	r3, #1
 8006904:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8006908:	b004      	add	sp, #16
 800690a:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 800690c:	4610      	mov	r0, r2
 800690e:	e7d6      	b.n	80068be <HAL_QSPI_Abort+0x40>

08006910 <HAL_QSPI_Transmit>:
{
 8006910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006912:	4604      	mov	r4, r0
 8006914:	b085      	sub	sp, #20
 8006916:	4616      	mov	r6, r2
 8006918:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800691a:	f7fd fe69 	bl	80045f0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800691e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006922:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8006924:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006926:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006928:	d04c      	beq.n	80069c4 <HAL_QSPI_Transmit+0xb4>
 800692a:	2201      	movs	r2, #1
 800692c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006930:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006934:	2a01      	cmp	r2, #1
 8006936:	b2d0      	uxtb	r0, r2
 8006938:	d142      	bne.n	80069c0 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800693a:	2200      	movs	r2, #0
 800693c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800693e:	2f00      	cmp	r7, #0
 8006940:	d039      	beq.n	80069b6 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8006942:	2212      	movs	r2, #18
 8006944:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006948:	692a      	ldr	r2, [r5, #16]
 800694a:	3201      	adds	r2, #1
 800694c:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800694e:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006950:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006952:	3201      	adds	r2, #1
 8006954:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006956:	696a      	ldr	r2, [r5, #20]
 8006958:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800695c:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800695e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006960:	b9a2      	cbnz	r2, 800698c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006962:	9600      	str	r6, [sp, #0]
 8006964:	2201      	movs	r2, #1
 8006966:	2102      	movs	r1, #2
 8006968:	4620      	mov	r0, r4
 800696a:	f7ff fe26 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800696e:	b928      	cbnz	r0, 800697c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006970:	6823      	ldr	r3, [r4, #0]
 8006972:	2202      	movs	r2, #2
 8006974:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006976:	4620      	mov	r0, r4
 8006978:	f7ff ff81 	bl	800687e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800697c:	2301      	movs	r3, #1
 800697e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006982:	2300      	movs	r3, #0
 8006984:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006988:	b005      	add	sp, #20
 800698a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800698c:	9600      	str	r6, [sp, #0]
 800698e:	2201      	movs	r2, #1
 8006990:	2104      	movs	r1, #4
 8006992:	4620      	mov	r0, r4
 8006994:	9303      	str	r3, [sp, #12]
 8006996:	f7ff fe10 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800699a:	2800      	cmp	r0, #0
 800699c:	d1ee      	bne.n	800697c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800699e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 80069a0:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 80069a2:	7812      	ldrb	r2, [r2, #0]
 80069a4:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 80069a8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80069aa:	3201      	adds	r2, #1
 80069ac:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 80069ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80069b0:	3a01      	subs	r2, #1
 80069b2:	62e2      	str	r2, [r4, #44]	; 0x2c
 80069b4:	e7d3      	b.n	800695e <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80069b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80069b8:	f043 0308 	orr.w	r3, r3, #8
 80069bc:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 80069be:	e7e0      	b.n	8006982 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 80069c0:	2002      	movs	r0, #2
 80069c2:	e7de      	b.n	8006982 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 80069c4:	2002      	movs	r0, #2
 80069c6:	e7df      	b.n	8006988 <HAL_QSPI_Transmit+0x78>

080069c8 <HAL_QSPI_Receive>:
{
 80069c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069ca:	4604      	mov	r4, r0
 80069cc:	b085      	sub	sp, #20
 80069ce:	4616      	mov	r6, r2
 80069d0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80069d2:	f7fd fe0d 	bl	80045f0 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80069d6:	6825      	ldr	r5, [r4, #0]
 80069d8:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 80069dc:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80069e0:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80069e2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80069e4:	d050      	beq.n	8006a88 <HAL_QSPI_Receive+0xc0>
 80069e6:	2201      	movs	r2, #1
 80069e8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80069ec:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80069f0:	2a01      	cmp	r2, #1
 80069f2:	b2d0      	uxtb	r0, r2
 80069f4:	d146      	bne.n	8006a84 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80069f6:	2200      	movs	r2, #0
 80069f8:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80069fa:	2f00      	cmp	r7, #0
 80069fc:	d03d      	beq.n	8006a7a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80069fe:	2222      	movs	r2, #34	; 0x22
 8006a00:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006a04:	692a      	ldr	r2, [r5, #16]
 8006a06:	3201      	adds	r2, #1
 8006a08:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006a0a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8006a0c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006a0e:	3201      	adds	r2, #1
 8006a10:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006a12:	6969      	ldr	r1, [r5, #20]
 8006a14:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006a18:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8006a1c:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006a1e:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006a22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006a24:	b9a2      	cbnz	r2, 8006a50 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006a26:	9600      	str	r6, [sp, #0]
 8006a28:	2201      	movs	r2, #1
 8006a2a:	2102      	movs	r1, #2
 8006a2c:	4620      	mov	r0, r4
 8006a2e:	f7ff fdc4 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006a32:	b928      	cbnz	r0, 8006a40 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006a34:	6823      	ldr	r3, [r4, #0]
 8006a36:	2202      	movs	r2, #2
 8006a38:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006a3a:	4620      	mov	r0, r4
 8006a3c:	f7ff ff1f 	bl	800687e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006a40:	2301      	movs	r3, #1
 8006a42:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006a46:	2300      	movs	r3, #0
 8006a48:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006a4c:	b005      	add	sp, #20
 8006a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006a50:	9600      	str	r6, [sp, #0]
 8006a52:	2201      	movs	r2, #1
 8006a54:	2106      	movs	r1, #6
 8006a56:	4620      	mov	r0, r4
 8006a58:	9303      	str	r3, [sp, #12]
 8006a5a:	f7ff fdae 	bl	80065ba <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006a5e:	2800      	cmp	r0, #0
 8006a60:	d1ee      	bne.n	8006a40 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006a62:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006a64:	f895 1020 	ldrb.w	r1, [r5, #32]
 8006a68:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8006a6a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006a6c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006a6e:	3201      	adds	r2, #1
 8006a70:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006a72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006a74:	3a01      	subs	r2, #1
 8006a76:	63a2      	str	r2, [r4, #56]	; 0x38
 8006a78:	e7d3      	b.n	8006a22 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006a7a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006a7c:	f043 0308 	orr.w	r3, r3, #8
 8006a80:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006a82:	e7e0      	b.n	8006a46 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006a84:	2002      	movs	r0, #2
 8006a86:	e7de      	b.n	8006a46 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8006a88:	2002      	movs	r0, #2
 8006a8a:	e7df      	b.n	8006a4c <HAL_QSPI_Receive+0x84>

08006a8c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a8c:	4913      	ldr	r1, [pc, #76]	; (8006adc <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006a8e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a90:	688b      	ldr	r3, [r1, #8]
 8006a92:	f003 030c 	and.w	r3, r3, #12
 8006a96:	2b04      	cmp	r3, #4
 8006a98:	d01c      	beq.n	8006ad4 <HAL_RCC_GetSysClockFreq+0x48>
 8006a9a:	2b08      	cmp	r3, #8
 8006a9c:	d11c      	bne.n	8006ad8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a9e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006aa0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aa2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006aa4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aa8:	bf14      	ite	ne
 8006aaa:	480d      	ldrne	r0, [pc, #52]	; (8006ae0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aac:	480d      	ldreq	r0, [pc, #52]	; (8006ae4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aae:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006ab2:	bf18      	it	ne
 8006ab4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006ab6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aba:	fba1 0100 	umull	r0, r1, r1, r0
 8006abe:	f7fa f80d 	bl	8000adc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006ac2:	4b06      	ldr	r3, [pc, #24]	; (8006adc <HAL_RCC_GetSysClockFreq+0x50>)
 8006ac4:	685b      	ldr	r3, [r3, #4]
 8006ac6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006aca:	3301      	adds	r3, #1
 8006acc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006ace:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006ad2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ad4:	4802      	ldr	r0, [pc, #8]	; (8006ae0 <HAL_RCC_GetSysClockFreq+0x54>)
 8006ad6:	e7fc      	b.n	8006ad2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006ad8:	4802      	ldr	r0, [pc, #8]	; (8006ae4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006ada:	e7fa      	b.n	8006ad2 <HAL_RCC_GetSysClockFreq+0x46>
 8006adc:	40023800 	.word	0x40023800
 8006ae0:	007a1200 	.word	0x007a1200
 8006ae4:	00f42400 	.word	0x00f42400

08006ae8 <HAL_RCC_ClockConfig>:
{
 8006ae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aec:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006aee:	4604      	mov	r4, r0
 8006af0:	b910      	cbnz	r0, 8006af8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006af2:	2001      	movs	r0, #1
}
 8006af4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006af8:	4b44      	ldr	r3, [pc, #272]	; (8006c0c <HAL_RCC_ClockConfig+0x124>)
 8006afa:	681a      	ldr	r2, [r3, #0]
 8006afc:	f002 020f 	and.w	r2, r2, #15
 8006b00:	428a      	cmp	r2, r1
 8006b02:	d328      	bcc.n	8006b56 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006b04:	6822      	ldr	r2, [r4, #0]
 8006b06:	0797      	lsls	r7, r2, #30
 8006b08:	d42d      	bmi.n	8006b66 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006b0a:	07d0      	lsls	r0, r2, #31
 8006b0c:	d441      	bmi.n	8006b92 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006b0e:	4b3f      	ldr	r3, [pc, #252]	; (8006c0c <HAL_RCC_ClockConfig+0x124>)
 8006b10:	681a      	ldr	r2, [r3, #0]
 8006b12:	f002 020f 	and.w	r2, r2, #15
 8006b16:	42aa      	cmp	r2, r5
 8006b18:	d866      	bhi.n	8006be8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b1a:	6822      	ldr	r2, [r4, #0]
 8006b1c:	0751      	lsls	r1, r2, #29
 8006b1e:	d46c      	bmi.n	8006bfa <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b20:	0713      	lsls	r3, r2, #28
 8006b22:	d507      	bpl.n	8006b34 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006b24:	4a3a      	ldr	r2, [pc, #232]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006b26:	6921      	ldr	r1, [r4, #16]
 8006b28:	6893      	ldr	r3, [r2, #8]
 8006b2a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006b2e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006b32:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006b34:	f7ff ffaa 	bl	8006a8c <HAL_RCC_GetSysClockFreq>
 8006b38:	4b35      	ldr	r3, [pc, #212]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006b3a:	4a36      	ldr	r2, [pc, #216]	; (8006c14 <HAL_RCC_ClockConfig+0x12c>)
 8006b3c:	689b      	ldr	r3, [r3, #8]
 8006b3e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006b42:	5cd3      	ldrb	r3, [r2, r3]
 8006b44:	40d8      	lsrs	r0, r3
 8006b46:	4b34      	ldr	r3, [pc, #208]	; (8006c18 <HAL_RCC_ClockConfig+0x130>)
 8006b48:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006b4a:	4b34      	ldr	r3, [pc, #208]	; (8006c1c <HAL_RCC_ClockConfig+0x134>)
 8006b4c:	6818      	ldr	r0, [r3, #0]
 8006b4e:	f7fb fe95 	bl	800287c <HAL_InitTick>
  return HAL_OK;
 8006b52:	2000      	movs	r0, #0
 8006b54:	e7ce      	b.n	8006af4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b56:	b2ca      	uxtb	r2, r1
 8006b58:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	f003 030f 	and.w	r3, r3, #15
 8006b60:	428b      	cmp	r3, r1
 8006b62:	d1c6      	bne.n	8006af2 <HAL_RCC_ClockConfig+0xa>
 8006b64:	e7ce      	b.n	8006b04 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b66:	4b2a      	ldr	r3, [pc, #168]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006b68:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006b6c:	bf1e      	ittt	ne
 8006b6e:	6899      	ldrne	r1, [r3, #8]
 8006b70:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006b74:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b76:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006b78:	bf42      	ittt	mi
 8006b7a:	6899      	ldrmi	r1, [r3, #8]
 8006b7c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006b80:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006b82:	4923      	ldr	r1, [pc, #140]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006b84:	68a0      	ldr	r0, [r4, #8]
 8006b86:	688b      	ldr	r3, [r1, #8]
 8006b88:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b8c:	4303      	orrs	r3, r0
 8006b8e:	608b      	str	r3, [r1, #8]
 8006b90:	e7bb      	b.n	8006b0a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006b92:	6862      	ldr	r2, [r4, #4]
 8006b94:	4b1e      	ldr	r3, [pc, #120]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006b96:	2a01      	cmp	r2, #1
 8006b98:	d11c      	bne.n	8006bd4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006ba0:	d0a7      	beq.n	8006af2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006ba2:	4e1b      	ldr	r6, [pc, #108]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006ba4:	68b3      	ldr	r3, [r6, #8]
 8006ba6:	f023 0303 	bic.w	r3, r3, #3
 8006baa:	4313      	orrs	r3, r2
 8006bac:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006bae:	f7fd fd1f 	bl	80045f0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006bb2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006bb6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006bb8:	68b3      	ldr	r3, [r6, #8]
 8006bba:	6862      	ldr	r2, [r4, #4]
 8006bbc:	f003 030c 	and.w	r3, r3, #12
 8006bc0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006bc4:	d0a3      	beq.n	8006b0e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006bc6:	f7fd fd13 	bl	80045f0 <HAL_GetTick>
 8006bca:	1bc0      	subs	r0, r0, r7
 8006bcc:	4540      	cmp	r0, r8
 8006bce:	d9f3      	bls.n	8006bb8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006bd0:	2003      	movs	r0, #3
 8006bd2:	e78f      	b.n	8006af4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006bd4:	1e91      	subs	r1, r2, #2
 8006bd6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006bd8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006bda:	d802      	bhi.n	8006be2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006bdc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006be0:	e7de      	b.n	8006ba0 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006be2:	f013 0f02 	tst.w	r3, #2
 8006be6:	e7db      	b.n	8006ba0 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006be8:	b2ea      	uxtb	r2, r5
 8006bea:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	f003 030f 	and.w	r3, r3, #15
 8006bf2:	42ab      	cmp	r3, r5
 8006bf4:	f47f af7d 	bne.w	8006af2 <HAL_RCC_ClockConfig+0xa>
 8006bf8:	e78f      	b.n	8006b1a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006bfa:	4905      	ldr	r1, [pc, #20]	; (8006c10 <HAL_RCC_ClockConfig+0x128>)
 8006bfc:	68e0      	ldr	r0, [r4, #12]
 8006bfe:	688b      	ldr	r3, [r1, #8]
 8006c00:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006c04:	4303      	orrs	r3, r0
 8006c06:	608b      	str	r3, [r1, #8]
 8006c08:	e78a      	b.n	8006b20 <HAL_RCC_ClockConfig+0x38>
 8006c0a:	bf00      	nop
 8006c0c:	40023c00 	.word	0x40023c00
 8006c10:	40023800 	.word	0x40023800
 8006c14:	0801f771 	.word	0x0801f771
 8006c18:	20000050 	.word	0x20000050
 8006c1c:	20000058 	.word	0x20000058

08006c20 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006c20:	4b04      	ldr	r3, [pc, #16]	; (8006c34 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006c22:	4a05      	ldr	r2, [pc, #20]	; (8006c38 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006c24:	689b      	ldr	r3, [r3, #8]
 8006c26:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006c2a:	5cd3      	ldrb	r3, [r2, r3]
 8006c2c:	4a03      	ldr	r2, [pc, #12]	; (8006c3c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006c2e:	6810      	ldr	r0, [r2, #0]
}
 8006c30:	40d8      	lsrs	r0, r3
 8006c32:	4770      	bx	lr
 8006c34:	40023800 	.word	0x40023800
 8006c38:	0801f781 	.word	0x0801f781
 8006c3c:	20000050 	.word	0x20000050

08006c40 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006c40:	230f      	movs	r3, #15
 8006c42:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006c44:	4b0b      	ldr	r3, [pc, #44]	; (8006c74 <HAL_RCC_GetClockConfig+0x34>)
 8006c46:	689a      	ldr	r2, [r3, #8]
 8006c48:	f002 0203 	and.w	r2, r2, #3
 8006c4c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006c4e:	689a      	ldr	r2, [r3, #8]
 8006c50:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006c54:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006c56:	689a      	ldr	r2, [r3, #8]
 8006c58:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006c5c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006c5e:	689b      	ldr	r3, [r3, #8]
 8006c60:	08db      	lsrs	r3, r3, #3
 8006c62:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006c66:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006c68:	4b03      	ldr	r3, [pc, #12]	; (8006c78 <HAL_RCC_GetClockConfig+0x38>)
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	f003 030f 	and.w	r3, r3, #15
 8006c70:	600b      	str	r3, [r1, #0]
}
 8006c72:	4770      	bx	lr
 8006c74:	40023800 	.word	0x40023800
 8006c78:	40023c00 	.word	0x40023c00

08006c7c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006c7e:	6802      	ldr	r2, [r0, #0]
{
 8006c80:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006c82:	0610      	lsls	r0, r2, #24
 8006c84:	d508      	bpl.n	8006c98 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006c86:	49aa      	ldr	r1, [pc, #680]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006c88:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8006c8a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006c8e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8006c92:	4303      	orrs	r3, r0
 8006c94:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8006c98:	05d1      	lsls	r1, r2, #23
 8006c9a:	d508      	bpl.n	8006cae <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8006c9c:	49a4      	ldr	r1, [pc, #656]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006c9e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006ca0:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006ca4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006ca8:	4303      	orrs	r3, r0
 8006caa:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006cae:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006cb2:	d173      	bne.n	8006d9c <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006cb4:	6823      	ldr	r3, [r4, #0]
 8006cb6:	f013 0f0c 	tst.w	r3, #12
 8006cba:	f000 80c1 	beq.w	8006e40 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006cbe:	4b9d      	ldr	r3, [pc, #628]	; (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006cc0:	4d9b      	ldr	r5, [pc, #620]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006cc2:	2200      	movs	r2, #0
 8006cc4:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006cc6:	f7fd fc93 	bl	80045f0 <HAL_GetTick>
 8006cca:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006ccc:	682b      	ldr	r3, [r5, #0]
 8006cce:	009b      	lsls	r3, r3, #2
 8006cd0:	f100 80fc 	bmi.w	8006ecc <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006cd4:	6821      	ldr	r1, [r4, #0]
 8006cd6:	074f      	lsls	r7, r1, #29
 8006cd8:	d51a      	bpl.n	8006d10 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006cda:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006cde:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006ce2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006ce6:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006cea:	4313      	orrs	r3, r2
 8006cec:	6922      	ldr	r2, [r4, #16]
 8006cee:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006cf2:	69a2      	ldr	r2, [r4, #24]
 8006cf4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006cf8:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006cfc:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006d00:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d02:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006d06:	3a01      	subs	r2, #1
 8006d08:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d0c:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006d10:	070e      	lsls	r6, r1, #28
 8006d12:	d519      	bpl.n	8006d48 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006d14:	4a86      	ldr	r2, [pc, #536]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006d16:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006d1a:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8006d1e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006d22:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8006d26:	4303      	orrs	r3, r0
 8006d28:	6920      	ldr	r0, [r4, #16]
 8006d2a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006d2e:	69e0      	ldr	r0, [r4, #28]
 8006d30:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8006d34:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006d38:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006d3c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006d3e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006d42:	4303      	orrs	r3, r0
 8006d44:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8006d48:	060d      	lsls	r5, r1, #24
 8006d4a:	d517      	bpl.n	8006d7c <HAL_RCCEx_PeriphCLKConfig+0x100>
 8006d4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006d4e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006d52:	d113      	bne.n	8006d7c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006d54:	4976      	ldr	r1, [pc, #472]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006d56:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006d5a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8006d5e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8006d62:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006d66:	4313      	orrs	r3, r2
 8006d68:	6922      	ldr	r2, [r4, #16]
 8006d6a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006d6e:	6962      	ldr	r2, [r4, #20]
 8006d70:	0852      	lsrs	r2, r2, #1
 8006d72:	3a01      	subs	r2, #1
 8006d74:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006d78:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006d7c:	4b6d      	ldr	r3, [pc, #436]	; (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d7e:	4e6c      	ldr	r6, [pc, #432]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006d80:	2201      	movs	r2, #1
 8006d82:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006d84:	f7fd fc34 	bl	80045f0 <HAL_GetTick>
 8006d88:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d8a:	6833      	ldr	r3, [r6, #0]
 8006d8c:	0098      	lsls	r0, r3, #2
 8006d8e:	d459      	bmi.n	8006e44 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006d90:	f7fd fc2e 	bl	80045f0 <HAL_GetTick>
 8006d94:	1b40      	subs	r0, r0, r5
 8006d96:	2802      	cmp	r0, #2
 8006d98:	d9f7      	bls.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8006d9a:	e04e      	b.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006d9c:	4b65      	ldr	r3, [pc, #404]	; (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006d9e:	4e64      	ldr	r6, [pc, #400]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006da0:	2200      	movs	r2, #0
 8006da2:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006da4:	f7fd fc24 	bl	80045f0 <HAL_GetTick>
 8006da8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006daa:	6833      	ldr	r3, [r6, #0]
 8006dac:	011b      	lsls	r3, r3, #4
 8006dae:	d43f      	bmi.n	8006e30 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006db0:	6821      	ldr	r1, [r4, #0]
 8006db2:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006db4:	bf41      	itttt	mi
 8006db6:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006dba:	071b      	lslmi	r3, r3, #28
 8006dbc:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006dc0:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006dc4:	078e      	lsls	r6, r1, #30
 8006dc6:	d515      	bpl.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006dc8:	4a59      	ldr	r2, [pc, #356]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006dca:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006dcc:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006dd0:	6865      	ldr	r5, [r4, #4]
 8006dd2:	061b      	lsls	r3, r3, #24
 8006dd4:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006dd8:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006ddc:	4303      	orrs	r3, r0
 8006dde:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006de2:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006de6:	6a23      	ldr	r3, [r4, #32]
 8006de8:	f020 001f 	bic.w	r0, r0, #31
 8006dec:	3b01      	subs	r3, #1
 8006dee:	4303      	orrs	r3, r0
 8006df0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006df4:	064d      	lsls	r5, r1, #25
 8006df6:	d50a      	bpl.n	8006e0e <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006df8:	68e3      	ldr	r3, [r4, #12]
 8006dfa:	6862      	ldr	r2, [r4, #4]
 8006dfc:	061b      	lsls	r3, r3, #24
 8006dfe:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006e02:	68a2      	ldr	r2, [r4, #8]
 8006e04:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006e08:	4a49      	ldr	r2, [pc, #292]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006e0a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006e0e:	4b49      	ldr	r3, [pc, #292]	; (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e10:	4e47      	ldr	r6, [pc, #284]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006e12:	2201      	movs	r2, #1
 8006e14:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006e16:	f7fd fbeb 	bl	80045f0 <HAL_GetTick>
 8006e1a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e1c:	6833      	ldr	r3, [r6, #0]
 8006e1e:	0118      	lsls	r0, r3, #4
 8006e20:	f53f af48 	bmi.w	8006cb4 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006e24:	f7fd fbe4 	bl	80045f0 <HAL_GetTick>
 8006e28:	1b40      	subs	r0, r0, r5
 8006e2a:	2802      	cmp	r0, #2
 8006e2c:	d9f6      	bls.n	8006e1c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006e2e:	e004      	b.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006e30:	f7fd fbde 	bl	80045f0 <HAL_GetTick>
 8006e34:	1b40      	subs	r0, r0, r5
 8006e36:	2802      	cmp	r0, #2
 8006e38:	d9b7      	bls.n	8006daa <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8006e3a:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006e3c:	b003      	add	sp, #12
 8006e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8006e40:	0619      	lsls	r1, r3, #24
 8006e42:	d43e      	bmi.n	8006ec2 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006e44:	6823      	ldr	r3, [r4, #0]
 8006e46:	069a      	lsls	r2, r3, #26
 8006e48:	d530      	bpl.n	8006eac <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006e4a:	2300      	movs	r3, #0
 8006e4c:	9301      	str	r3, [sp, #4]
 8006e4e:	4b38      	ldr	r3, [pc, #224]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8006e50:	4d39      	ldr	r5, [pc, #228]	; (8006f38 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006e52:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006e54:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006e58:	641a      	str	r2, [r3, #64]	; 0x40
 8006e5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e5c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006e60:	9301      	str	r3, [sp, #4]
 8006e62:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006e64:	682b      	ldr	r3, [r5, #0]
 8006e66:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e6a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006e6c:	f7fd fbc0 	bl	80045f0 <HAL_GetTick>
 8006e70:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006e72:	682b      	ldr	r3, [r5, #0]
 8006e74:	05d9      	lsls	r1, r3, #23
 8006e76:	d530      	bpl.n	8006eda <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006e78:	4d2d      	ldr	r5, [pc, #180]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006e7a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006e7c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006e80:	d131      	bne.n	8006ee6 <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006e82:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e84:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006e88:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006e8c:	4a28      	ldr	r2, [pc, #160]	; (8006f30 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006e8e:	d14b      	bne.n	8006f28 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8006e90:	6891      	ldr	r1, [r2, #8]
 8006e92:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006e96:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006e9a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006e9e:	4301      	orrs	r1, r0
 8006ea0:	6091      	str	r1, [r2, #8]
 8006ea2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006ea4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ea8:	430b      	orrs	r3, r1
 8006eaa:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006eac:	6820      	ldr	r0, [r4, #0]
 8006eae:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006eb2:	bf1f      	itttt	ne
 8006eb4:	4b21      	ldrne	r3, [pc, #132]	; (8006f3c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8006eb6:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006eba:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8006ebe:	2000      	movne	r0, #0
 8006ec0:	e7bc      	b.n	8006e3c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8006ec2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006ec4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006ec8:	d1bc      	bne.n	8006e44 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8006eca:	e6f8      	b.n	8006cbe <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006ecc:	f7fd fb90 	bl	80045f0 <HAL_GetTick>
 8006ed0:	1b80      	subs	r0, r0, r6
 8006ed2:	2802      	cmp	r0, #2
 8006ed4:	f67f aefa 	bls.w	8006ccc <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006ed8:	e7af      	b.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006eda:	f7fd fb89 	bl	80045f0 <HAL_GetTick>
 8006ede:	1b80      	subs	r0, r0, r6
 8006ee0:	2802      	cmp	r0, #2
 8006ee2:	d9c6      	bls.n	8006e72 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8006ee4:	e7a9      	b.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006ee6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006ee8:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006eec:	4293      	cmp	r3, r2
 8006eee:	d0c8      	beq.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ef0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006ef2:	4a10      	ldr	r2, [pc, #64]	; (8006f34 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8006ef4:	2101      	movs	r1, #1
 8006ef6:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006efa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006efe:	2100      	movs	r1, #0
 8006f00:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006f04:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006f06:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006f08:	07da      	lsls	r2, r3, #31
 8006f0a:	d5ba      	bpl.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006f0c:	f7fd fb70 	bl	80045f0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006f10:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006f14:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006f16:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006f18:	079b      	lsls	r3, r3, #30
 8006f1a:	d4b2      	bmi.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006f1c:	f7fd fb68 	bl	80045f0 <HAL_GetTick>
 8006f20:	1b80      	subs	r0, r0, r6
 8006f22:	42b8      	cmp	r0, r7
 8006f24:	d9f7      	bls.n	8006f16 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8006f26:	e788      	b.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006f28:	6891      	ldr	r1, [r2, #8]
 8006f2a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006f2e:	e7b7      	b.n	8006ea0 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006f30:	40023800 	.word	0x40023800
 8006f34:	42470000 	.word	0x42470000
 8006f38:	40007000 	.word	0x40007000
 8006f3c:	42471000 	.word	0x42471000

08006f40 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006f40:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006f44:	4604      	mov	r4, r0
 8006f46:	b340      	cbz	r0, 8006f9a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006f48:	6803      	ldr	r3, [r0, #0]
 8006f4a:	07dd      	lsls	r5, r3, #31
 8006f4c:	d410      	bmi.n	8006f70 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006f4e:	6823      	ldr	r3, [r4, #0]
 8006f50:	0798      	lsls	r0, r3, #30
 8006f52:	d45e      	bmi.n	8007012 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006f54:	6823      	ldr	r3, [r4, #0]
 8006f56:	071a      	lsls	r2, r3, #28
 8006f58:	f100 80a0 	bmi.w	800709c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006f5c:	6823      	ldr	r3, [r4, #0]
 8006f5e:	075b      	lsls	r3, r3, #29
 8006f60:	f100 80c0 	bmi.w	80070e4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006f64:	69a0      	ldr	r0, [r4, #24]
 8006f66:	2800      	cmp	r0, #0
 8006f68:	f040 8128 	bne.w	80071bc <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006f6c:	2000      	movs	r0, #0
 8006f6e:	e02b      	b.n	8006fc8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006f70:	4b8f      	ldr	r3, [pc, #572]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8006f72:	689a      	ldr	r2, [r3, #8]
 8006f74:	f002 020c 	and.w	r2, r2, #12
 8006f78:	2a04      	cmp	r2, #4
 8006f7a:	d007      	beq.n	8006f8c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006f7c:	689a      	ldr	r2, [r3, #8]
 8006f7e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006f82:	2a08      	cmp	r2, #8
 8006f84:	d10b      	bne.n	8006f9e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006f86:	685a      	ldr	r2, [r3, #4]
 8006f88:	0251      	lsls	r1, r2, #9
 8006f8a:	d508      	bpl.n	8006f9e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006f8c:	4b88      	ldr	r3, [pc, #544]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	039a      	lsls	r2, r3, #14
 8006f92:	d5dc      	bpl.n	8006f4e <HAL_RCC_OscConfig+0xe>
 8006f94:	6863      	ldr	r3, [r4, #4]
 8006f96:	2b00      	cmp	r3, #0
 8006f98:	d1d9      	bne.n	8006f4e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8006f9a:	2001      	movs	r0, #1
 8006f9c:	e014      	b.n	8006fc8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006f9e:	6862      	ldr	r2, [r4, #4]
 8006fa0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006fa4:	d113      	bne.n	8006fce <HAL_RCC_OscConfig+0x8e>
 8006fa6:	681a      	ldr	r2, [r3, #0]
 8006fa8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006fac:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006fae:	f7fd fb1f 	bl	80045f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006fb2:	4e7f      	ldr	r6, [pc, #508]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006fb4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006fb6:	6833      	ldr	r3, [r6, #0]
 8006fb8:	039b      	lsls	r3, r3, #14
 8006fba:	d4c8      	bmi.n	8006f4e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006fbc:	f7fd fb18 	bl	80045f0 <HAL_GetTick>
 8006fc0:	1b40      	subs	r0, r0, r5
 8006fc2:	2864      	cmp	r0, #100	; 0x64
 8006fc4:	d9f7      	bls.n	8006fb6 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006fc6:	2003      	movs	r0, #3
}
 8006fc8:	b002      	add	sp, #8
 8006fca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006fce:	4d78      	ldr	r5, [pc, #480]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8006fd0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006fd4:	682b      	ldr	r3, [r5, #0]
 8006fd6:	d107      	bne.n	8006fe8 <HAL_RCC_OscConfig+0xa8>
 8006fd8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006fdc:	602b      	str	r3, [r5, #0]
 8006fde:	682b      	ldr	r3, [r5, #0]
 8006fe0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006fe4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006fe6:	e7e2      	b.n	8006fae <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006fe8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006fec:	602b      	str	r3, [r5, #0]
 8006fee:	682b      	ldr	r3, [r5, #0]
 8006ff0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006ff4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006ff6:	2a00      	cmp	r2, #0
 8006ff8:	d1d9      	bne.n	8006fae <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006ffa:	f7fd faf9 	bl	80045f0 <HAL_GetTick>
 8006ffe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007000:	682b      	ldr	r3, [r5, #0]
 8007002:	039f      	lsls	r7, r3, #14
 8007004:	d5a3      	bpl.n	8006f4e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007006:	f7fd faf3 	bl	80045f0 <HAL_GetTick>
 800700a:	1b80      	subs	r0, r0, r6
 800700c:	2864      	cmp	r0, #100	; 0x64
 800700e:	d9f7      	bls.n	8007000 <HAL_RCC_OscConfig+0xc0>
 8007010:	e7d9      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007012:	4b67      	ldr	r3, [pc, #412]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8007014:	689a      	ldr	r2, [r3, #8]
 8007016:	f012 0f0c 	tst.w	r2, #12
 800701a:	d007      	beq.n	800702c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800701c:	689a      	ldr	r2, [r3, #8]
 800701e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007022:	2a08      	cmp	r2, #8
 8007024:	d111      	bne.n	800704a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007026:	685b      	ldr	r3, [r3, #4]
 8007028:	025e      	lsls	r6, r3, #9
 800702a:	d40e      	bmi.n	800704a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800702c:	4a60      	ldr	r2, [pc, #384]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 800702e:	6813      	ldr	r3, [r2, #0]
 8007030:	079d      	lsls	r5, r3, #30
 8007032:	d502      	bpl.n	800703a <HAL_RCC_OscConfig+0xfa>
 8007034:	68e3      	ldr	r3, [r4, #12]
 8007036:	2b01      	cmp	r3, #1
 8007038:	d1af      	bne.n	8006f9a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800703a:	6813      	ldr	r3, [r2, #0]
 800703c:	6921      	ldr	r1, [r4, #16]
 800703e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007042:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007046:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007048:	e784      	b.n	8006f54 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800704a:	68e2      	ldr	r2, [r4, #12]
 800704c:	4b59      	ldr	r3, [pc, #356]	; (80071b4 <HAL_RCC_OscConfig+0x274>)
 800704e:	b1b2      	cbz	r2, 800707e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007050:	2201      	movs	r2, #1
 8007052:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007054:	f7fd facc 	bl	80045f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007058:	4d55      	ldr	r5, [pc, #340]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800705a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800705c:	682b      	ldr	r3, [r5, #0]
 800705e:	0798      	lsls	r0, r3, #30
 8007060:	d507      	bpl.n	8007072 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007062:	682b      	ldr	r3, [r5, #0]
 8007064:	6922      	ldr	r2, [r4, #16]
 8007066:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800706a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800706e:	602b      	str	r3, [r5, #0]
 8007070:	e770      	b.n	8006f54 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007072:	f7fd fabd 	bl	80045f0 <HAL_GetTick>
 8007076:	1b80      	subs	r0, r0, r6
 8007078:	2802      	cmp	r0, #2
 800707a:	d9ef      	bls.n	800705c <HAL_RCC_OscConfig+0x11c>
 800707c:	e7a3      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800707e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007080:	f7fd fab6 	bl	80045f0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007084:	4e4a      	ldr	r6, [pc, #296]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007086:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007088:	6833      	ldr	r3, [r6, #0]
 800708a:	0799      	lsls	r1, r3, #30
 800708c:	f57f af62 	bpl.w	8006f54 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007090:	f7fd faae 	bl	80045f0 <HAL_GetTick>
 8007094:	1b40      	subs	r0, r0, r5
 8007096:	2802      	cmp	r0, #2
 8007098:	d9f6      	bls.n	8007088 <HAL_RCC_OscConfig+0x148>
 800709a:	e794      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800709c:	6962      	ldr	r2, [r4, #20]
 800709e:	4b45      	ldr	r3, [pc, #276]	; (80071b4 <HAL_RCC_OscConfig+0x274>)
 80070a0:	b182      	cbz	r2, 80070c4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80070a2:	2201      	movs	r2, #1
 80070a4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80070a8:	f7fd faa2 	bl	80045f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80070ac:	4e40      	ldr	r6, [pc, #256]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80070ae:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80070b0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80070b2:	079f      	lsls	r7, r3, #30
 80070b4:	f53f af52 	bmi.w	8006f5c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80070b8:	f7fd fa9a 	bl	80045f0 <HAL_GetTick>
 80070bc:	1b40      	subs	r0, r0, r5
 80070be:	2802      	cmp	r0, #2
 80070c0:	d9f6      	bls.n	80070b0 <HAL_RCC_OscConfig+0x170>
 80070c2:	e780      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80070c4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80070c8:	f7fd fa92 	bl	80045f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80070cc:	4e38      	ldr	r6, [pc, #224]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80070ce:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80070d0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80070d2:	0798      	lsls	r0, r3, #30
 80070d4:	f57f af42 	bpl.w	8006f5c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80070d8:	f7fd fa8a 	bl	80045f0 <HAL_GetTick>
 80070dc:	1b40      	subs	r0, r0, r5
 80070de:	2802      	cmp	r0, #2
 80070e0:	d9f6      	bls.n	80070d0 <HAL_RCC_OscConfig+0x190>
 80070e2:	e770      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80070e4:	4b32      	ldr	r3, [pc, #200]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 80070e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80070e8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80070ec:	d128      	bne.n	8007140 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80070ee:	9201      	str	r2, [sp, #4]
 80070f0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80070f2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80070f6:	641a      	str	r2, [r3, #64]	; 0x40
 80070f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80070fe:	9301      	str	r3, [sp, #4]
 8007100:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007102:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007104:	4d2c      	ldr	r5, [pc, #176]	; (80071b8 <HAL_RCC_OscConfig+0x278>)
 8007106:	682b      	ldr	r3, [r5, #0]
 8007108:	05d9      	lsls	r1, r3, #23
 800710a:	d51b      	bpl.n	8007144 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800710c:	68a3      	ldr	r3, [r4, #8]
 800710e:	4d28      	ldr	r5, [pc, #160]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8007110:	2b01      	cmp	r3, #1
 8007112:	d127      	bne.n	8007164 <HAL_RCC_OscConfig+0x224>
 8007114:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007116:	f043 0301 	orr.w	r3, r3, #1
 800711a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800711c:	f7fd fa68 	bl	80045f0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007120:	4e23      	ldr	r6, [pc, #140]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007122:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007124:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007128:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800712a:	079b      	lsls	r3, r3, #30
 800712c:	d539      	bpl.n	80071a2 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800712e:	2f00      	cmp	r7, #0
 8007130:	f43f af18 	beq.w	8006f64 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007134:	4a1e      	ldr	r2, [pc, #120]	; (80071b0 <HAL_RCC_OscConfig+0x270>)
 8007136:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007138:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800713c:	6413      	str	r3, [r2, #64]	; 0x40
 800713e:	e711      	b.n	8006f64 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007140:	2700      	movs	r7, #0
 8007142:	e7df      	b.n	8007104 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007144:	682b      	ldr	r3, [r5, #0]
 8007146:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800714a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800714c:	f7fd fa50 	bl	80045f0 <HAL_GetTick>
 8007150:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007152:	682b      	ldr	r3, [r5, #0]
 8007154:	05da      	lsls	r2, r3, #23
 8007156:	d4d9      	bmi.n	800710c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007158:	f7fd fa4a 	bl	80045f0 <HAL_GetTick>
 800715c:	1b80      	subs	r0, r0, r6
 800715e:	2802      	cmp	r0, #2
 8007160:	d9f7      	bls.n	8007152 <HAL_RCC_OscConfig+0x212>
 8007162:	e730      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007164:	2b05      	cmp	r3, #5
 8007166:	d104      	bne.n	8007172 <HAL_RCC_OscConfig+0x232>
 8007168:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800716a:	f043 0304 	orr.w	r3, r3, #4
 800716e:	672b      	str	r3, [r5, #112]	; 0x70
 8007170:	e7d0      	b.n	8007114 <HAL_RCC_OscConfig+0x1d4>
 8007172:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007174:	f022 0201 	bic.w	r2, r2, #1
 8007178:	672a      	str	r2, [r5, #112]	; 0x70
 800717a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800717c:	f022 0204 	bic.w	r2, r2, #4
 8007180:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007182:	2b00      	cmp	r3, #0
 8007184:	d1ca      	bne.n	800711c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007186:	f7fd fa33 	bl	80045f0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800718a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800718e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007190:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007192:	0798      	lsls	r0, r3, #30
 8007194:	d5cb      	bpl.n	800712e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007196:	f7fd fa2b 	bl	80045f0 <HAL_GetTick>
 800719a:	1b80      	subs	r0, r0, r6
 800719c:	4540      	cmp	r0, r8
 800719e:	d9f7      	bls.n	8007190 <HAL_RCC_OscConfig+0x250>
 80071a0:	e711      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80071a2:	f7fd fa25 	bl	80045f0 <HAL_GetTick>
 80071a6:	1b40      	subs	r0, r0, r5
 80071a8:	4540      	cmp	r0, r8
 80071aa:	d9bd      	bls.n	8007128 <HAL_RCC_OscConfig+0x1e8>
 80071ac:	e70b      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
 80071ae:	bf00      	nop
 80071b0:	40023800 	.word	0x40023800
 80071b4:	42470000 	.word	0x42470000
 80071b8:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80071bc:	4d3b      	ldr	r5, [pc, #236]	; (80072ac <HAL_RCC_OscConfig+0x36c>)
 80071be:	68ab      	ldr	r3, [r5, #8]
 80071c0:	f003 030c 	and.w	r3, r3, #12
 80071c4:	2b08      	cmp	r3, #8
 80071c6:	d040      	beq.n	800724a <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071c8:	4b39      	ldr	r3, [pc, #228]	; (80072b0 <HAL_RCC_OscConfig+0x370>)
 80071ca:	2200      	movs	r2, #0
 80071cc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80071ce:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071d0:	d12e      	bne.n	8007230 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80071d2:	f7fd fa0d 	bl	80045f0 <HAL_GetTick>
 80071d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80071d8:	682b      	ldr	r3, [r5, #0]
 80071da:	0199      	lsls	r1, r3, #6
 80071dc:	d422      	bmi.n	8007224 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80071de:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80071e2:	4313      	orrs	r3, r2
 80071e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80071e6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80071ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80071ec:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80071f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80071f2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80071f6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80071f8:	0852      	lsrs	r2, r2, #1
 80071fa:	3a01      	subs	r2, #1
 80071fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007200:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007202:	4b2b      	ldr	r3, [pc, #172]	; (80072b0 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007204:	4d29      	ldr	r5, [pc, #164]	; (80072ac <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 8007206:	2201      	movs	r2, #1
 8007208:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800720a:	f7fd f9f1 	bl	80045f0 <HAL_GetTick>
 800720e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007210:	682b      	ldr	r3, [r5, #0]
 8007212:	019a      	lsls	r2, r3, #6
 8007214:	f53f aeaa 	bmi.w	8006f6c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007218:	f7fd f9ea 	bl	80045f0 <HAL_GetTick>
 800721c:	1b00      	subs	r0, r0, r4
 800721e:	2802      	cmp	r0, #2
 8007220:	d9f6      	bls.n	8007210 <HAL_RCC_OscConfig+0x2d0>
 8007222:	e6d0      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007224:	f7fd f9e4 	bl	80045f0 <HAL_GetTick>
 8007228:	1b80      	subs	r0, r0, r6
 800722a:	2802      	cmp	r0, #2
 800722c:	d9d4      	bls.n	80071d8 <HAL_RCC_OscConfig+0x298>
 800722e:	e6ca      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007230:	f7fd f9de 	bl	80045f0 <HAL_GetTick>
 8007234:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007236:	682b      	ldr	r3, [r5, #0]
 8007238:	019b      	lsls	r3, r3, #6
 800723a:	f57f ae97 	bpl.w	8006f6c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800723e:	f7fd f9d7 	bl	80045f0 <HAL_GetTick>
 8007242:	1b00      	subs	r0, r0, r4
 8007244:	2802      	cmp	r0, #2
 8007246:	d9f6      	bls.n	8007236 <HAL_RCC_OscConfig+0x2f6>
 8007248:	e6bd      	b.n	8006fc6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800724a:	2801      	cmp	r0, #1
 800724c:	f43f aebc 	beq.w	8006fc8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007250:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007252:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007254:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007258:	4291      	cmp	r1, r2
 800725a:	f47f ae9e 	bne.w	8006f9a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800725e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007260:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007264:	428a      	cmp	r2, r1
 8007266:	f47f ae98 	bne.w	8006f9a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800726a:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800726c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007270:	401a      	ands	r2, r3
 8007272:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8007276:	f47f ae90 	bne.w	8006f9a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800727a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800727c:	0852      	lsrs	r2, r2, #1
 800727e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8007282:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8007284:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8007288:	f47f ae87 	bne.w	8006f9a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800728c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800728e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8007292:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8007296:	f47f ae80 	bne.w	8006f9a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800729a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800729c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80072a0:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 80072a4:	f43f ae62 	beq.w	8006f6c <HAL_RCC_OscConfig+0x2c>
 80072a8:	e677      	b.n	8006f9a <HAL_RCC_OscConfig+0x5a>
 80072aa:	bf00      	nop
 80072ac:	40023800 	.word	0x40023800
 80072b0:	42470000 	.word	0x42470000

080072b4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80072b4:	b538      	push	{r3, r4, r5, lr}
 80072b6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80072b8:	4604      	mov	r4, r0
 80072ba:	b1c8      	cbz	r0, 80072f0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80072bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80072c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80072c4:	b91b      	cbnz	r3, 80072ce <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80072c6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80072ca:	f7fb fa1d 	bl	8002708 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80072ce:	2302      	movs	r3, #2
 80072d0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80072d4:	1d21      	adds	r1, r4, #4
 80072d6:	6820      	ldr	r0, [r4, #0]
 80072d8:	f000 fdf8 	bl	8007ecc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80072dc:	6862      	ldr	r2, [r4, #4]
 80072de:	6820      	ldr	r0, [r4, #0]
 80072e0:	4629      	mov	r1, r5
 80072e2:	f000 fe2e 	bl	8007f42 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80072e6:	2301      	movs	r3, #1
 80072e8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 80072ec:	2000      	movs	r0, #0
}
 80072ee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80072f0:	2001      	movs	r0, #1
 80072f2:	e7fc      	b.n	80072ee <HAL_SDRAM_Init+0x3a>

080072f4 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80072f4:	b510      	push	{r4, lr}
 80072f6:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80072f8:	f7fb fa7e 	bl	80027f8 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80072fc:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007300:	f000 fe55 	bl	8007fae <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8007304:	2000      	movs	r0, #0
 8007306:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800730a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800730e:	bd10      	pop	{r4, pc}

08007310 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8007310:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007312:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8007316:	2b02      	cmp	r3, #2
{
 8007318:	4605      	mov	r5, r0
 800731a:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800731c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800731e:	d012      	beq.n	8007346 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8007320:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8007324:	2c01      	cmp	r4, #1
 8007326:	d10f      	bne.n	8007348 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007328:	2302      	movs	r3, #2
 800732a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800732e:	6828      	ldr	r0, [r5, #0]
 8007330:	f000 fe4c 	bl	8007fcc <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007334:	6833      	ldr	r3, [r6, #0]
 8007336:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007338:	bf06      	itte	eq
 800733a:	2305      	moveq	r3, #5
 800733c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8007340:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007344:	2000      	movs	r0, #0
}
 8007346:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8007348:	2001      	movs	r0, #1
 800734a:	e7fc      	b.n	8007346 <HAL_SDRAM_SendCommand+0x36>

0800734c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800734c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800734e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007352:	2b02      	cmp	r3, #2
{
 8007354:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007356:	b2d8      	uxtb	r0, r3
 8007358:	d00d      	beq.n	8007376 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800735a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800735e:	2b01      	cmp	r3, #1
 8007360:	b2dd      	uxtb	r5, r3
 8007362:	d109      	bne.n	8007378 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007364:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007366:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007368:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800736c:	f000 fe54 	bl	8008018 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007370:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007374:	2000      	movs	r0, #0
}
 8007376:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007378:	2001      	movs	r0, #1
 800737a:	e7fc      	b.n	8007376 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800737c <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800737c:	6a03      	ldr	r3, [r0, #32]
 800737e:	f023 0301 	bic.w	r3, r3, #1
 8007382:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007384:	6a03      	ldr	r3, [r0, #32]
{
 8007386:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007388:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800738a:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800738c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800738e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8007392:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007394:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8007396:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800739a:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800739c:	4d0e      	ldr	r5, [pc, #56]	; (80073d8 <TIM_OC1_SetConfig+0x5c>)
 800739e:	42a8      	cmp	r0, r5
 80073a0:	d002      	beq.n	80073a8 <TIM_OC1_SetConfig+0x2c>
 80073a2:	4e0e      	ldr	r6, [pc, #56]	; (80073dc <TIM_OC1_SetConfig+0x60>)
 80073a4:	42b0      	cmp	r0, r6
 80073a6:	d110      	bne.n	80073ca <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 80073a8:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 80073aa:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 80073ae:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80073b0:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 80073b2:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80073b6:	d002      	beq.n	80073be <TIM_OC1_SetConfig+0x42>
 80073b8:	4d08      	ldr	r5, [pc, #32]	; (80073dc <TIM_OC1_SetConfig+0x60>)
 80073ba:	42a8      	cmp	r0, r5
 80073bc:	d105      	bne.n	80073ca <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80073be:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80073c2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 80073c6:	4335      	orrs	r5, r6
 80073c8:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80073ca:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80073cc:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80073ce:	684a      	ldr	r2, [r1, #4]
 80073d0:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80073d2:	6203      	str	r3, [r0, #32]
}
 80073d4:	bd70      	pop	{r4, r5, r6, pc}
 80073d6:	bf00      	nop
 80073d8:	40010000 	.word	0x40010000
 80073dc:	40010400 	.word	0x40010400

080073e0 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80073e0:	6a03      	ldr	r3, [r0, #32]
 80073e2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80073e6:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80073e8:	6a03      	ldr	r3, [r0, #32]
{
 80073ea:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80073ec:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80073ee:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80073f0:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80073f2:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 80073f6:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80073f8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 80073fa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80073fe:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007402:	4d11      	ldr	r5, [pc, #68]	; (8007448 <TIM_OC3_SetConfig+0x68>)
 8007404:	42a8      	cmp	r0, r5
 8007406:	d003      	beq.n	8007410 <TIM_OC3_SetConfig+0x30>
 8007408:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800740c:	42a8      	cmp	r0, r5
 800740e:	d114      	bne.n	800743a <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007410:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8007412:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007416:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800741a:	4d0b      	ldr	r5, [pc, #44]	; (8007448 <TIM_OC3_SetConfig+0x68>)
 800741c:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800741e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007422:	d003      	beq.n	800742c <TIM_OC3_SetConfig+0x4c>
 8007424:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007428:	42a8      	cmp	r0, r5
 800742a:	d106      	bne.n	800743a <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800742c:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007430:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007434:	4335      	orrs	r5, r6
 8007436:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800743a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800743c:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800743e:	684a      	ldr	r2, [r1, #4]
 8007440:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007442:	6203      	str	r3, [r0, #32]
}
 8007444:	bd70      	pop	{r4, r5, r6, pc}
 8007446:	bf00      	nop
 8007448:	40010000 	.word	0x40010000

0800744c <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800744c:	6a03      	ldr	r3, [r0, #32]
 800744e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007452:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007454:	6a03      	ldr	r3, [r0, #32]
{
 8007456:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007458:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800745a:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800745c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800745e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007462:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007466:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8007468:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800746c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007470:	4d08      	ldr	r5, [pc, #32]	; (8007494 <TIM_OC4_SetConfig+0x48>)
 8007472:	42a8      	cmp	r0, r5
 8007474:	d003      	beq.n	800747e <TIM_OC4_SetConfig+0x32>
 8007476:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800747a:	42a8      	cmp	r0, r5
 800747c:	d104      	bne.n	8007488 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800747e:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007480:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007484:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007488:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800748a:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800748c:	684a      	ldr	r2, [r1, #4]
 800748e:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007490:	6203      	str	r3, [r0, #32]
}
 8007492:	bd30      	pop	{r4, r5, pc}
 8007494:	40010000 	.word	0x40010000

08007498 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 8007498:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800749c:	2b01      	cmp	r3, #1
 800749e:	d130      	bne.n	8007502 <HAL_TIM_Base_Start_IT+0x6a>
  htim->State = HAL_TIM_STATE_BUSY;
 80074a0:	2302      	movs	r3, #2
 80074a2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80074a6:	6803      	ldr	r3, [r0, #0]
 80074a8:	68da      	ldr	r2, [r3, #12]
 80074aa:	f042 0201 	orr.w	r2, r2, #1
 80074ae:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80074b0:	4a15      	ldr	r2, [pc, #84]	; (8007508 <HAL_TIM_Base_Start_IT+0x70>)
 80074b2:	4293      	cmp	r3, r2
 80074b4:	d01a      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80074ba:	d017      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074bc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80074c0:	4293      	cmp	r3, r2
 80074c2:	d013      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80074c8:	4293      	cmp	r3, r2
 80074ca:	d00f      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80074d0:	4293      	cmp	r3, r2
 80074d2:	d00b      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074d4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80074d8:	4293      	cmp	r3, r2
 80074da:	d007      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074dc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80074e0:	4293      	cmp	r3, r2
 80074e2:	d003      	beq.n	80074ec <HAL_TIM_Base_Start_IT+0x54>
 80074e4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80074e8:	4293      	cmp	r3, r2
 80074ea:	d104      	bne.n	80074f6 <HAL_TIM_Base_Start_IT+0x5e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80074ec:	689a      	ldr	r2, [r3, #8]
 80074ee:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80074f2:	2a06      	cmp	r2, #6
 80074f4:	d003      	beq.n	80074fe <HAL_TIM_Base_Start_IT+0x66>
    __HAL_TIM_ENABLE(htim);
 80074f6:	681a      	ldr	r2, [r3, #0]
 80074f8:	f042 0201 	orr.w	r2, r2, #1
 80074fc:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80074fe:	2000      	movs	r0, #0
}
 8007500:	4770      	bx	lr
    return HAL_ERROR;
 8007502:	2001      	movs	r0, #1
 8007504:	4770      	bx	lr
 8007506:	bf00      	nop
 8007508:	40010000 	.word	0x40010000

0800750c <HAL_TIM_PWM_MspInit>:
 800750c:	4770      	bx	lr

0800750e <HAL_TIM_OC_DelayElapsedCallback>:
 800750e:	4770      	bx	lr

08007510 <HAL_TIM_IC_CaptureCallback>:
 8007510:	4770      	bx	lr

08007512 <TIM_DMADelayPulseCplt>:
{
 8007512:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007514:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8007516:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007518:	4282      	cmp	r2, r0
 800751a:	d10b      	bne.n	8007534 <TIM_DMADelayPulseCplt+0x22>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800751c:	2301      	movs	r3, #1
 800751e:	7723      	strb	r3, [r4, #28]
    if (hdma->Init.Mode == DMA_NORMAL)
 8007520:	69d2      	ldr	r2, [r2, #28]
 8007522:	b90a      	cbnz	r2, 8007528 <TIM_DMADelayPulseCplt+0x16>
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8007524:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007528:	4620      	mov	r0, r4
 800752a:	f7fc f839 	bl	80035a0 <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800752e:	2300      	movs	r3, #0
 8007530:	7723      	strb	r3, [r4, #28]
}
 8007532:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 8007534:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007536:	4283      	cmp	r3, r0
 8007538:	d108      	bne.n	800754c <TIM_DMADelayPulseCplt+0x3a>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800753a:	2202      	movs	r2, #2
 800753c:	7722      	strb	r2, [r4, #28]
    if (hdma->Init.Mode == DMA_NORMAL)
 800753e:	69db      	ldr	r3, [r3, #28]
 8007540:	2b00      	cmp	r3, #0
 8007542:	d1f1      	bne.n	8007528 <TIM_DMADelayPulseCplt+0x16>
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8007544:	2301      	movs	r3, #1
 8007546:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800754a:	e7ed      	b.n	8007528 <TIM_DMADelayPulseCplt+0x16>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 800754c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800754e:	4283      	cmp	r3, r0
 8007550:	d108      	bne.n	8007564 <TIM_DMADelayPulseCplt+0x52>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007552:	2204      	movs	r2, #4
 8007554:	7722      	strb	r2, [r4, #28]
    if (hdma->Init.Mode == DMA_NORMAL)
 8007556:	69db      	ldr	r3, [r3, #28]
 8007558:	2b00      	cmp	r3, #0
 800755a:	d1e5      	bne.n	8007528 <TIM_DMADelayPulseCplt+0x16>
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 800755c:	2301      	movs	r3, #1
 800755e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007562:	e7e1      	b.n	8007528 <TIM_DMADelayPulseCplt+0x16>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8007564:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007566:	4283      	cmp	r3, r0
 8007568:	d1de      	bne.n	8007528 <TIM_DMADelayPulseCplt+0x16>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800756a:	2208      	movs	r2, #8
 800756c:	7722      	strb	r2, [r4, #28]
    if (hdma->Init.Mode == DMA_NORMAL)
 800756e:	69db      	ldr	r3, [r3, #28]
 8007570:	2b00      	cmp	r3, #0
 8007572:	d1d9      	bne.n	8007528 <TIM_DMADelayPulseCplt+0x16>
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 8007574:	2301      	movs	r3, #1
 8007576:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 800757a:	e7d5      	b.n	8007528 <TIM_DMADelayPulseCplt+0x16>

0800757c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800757c:	4770      	bx	lr

0800757e <TIM_DMADelayPulseHalfCplt>:
{
 800757e:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007580:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8007582:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007584:	4283      	cmp	r3, r0
 8007586:	d107      	bne.n	8007598 <TIM_DMADelayPulseHalfCplt+0x1a>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007588:	2301      	movs	r3, #1
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800758a:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 800758c:	4620      	mov	r0, r4
 800758e:	f7ff fff5 	bl	800757c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007592:	2300      	movs	r3, #0
 8007594:	7723      	strb	r3, [r4, #28]
}
 8007596:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 8007598:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800759a:	4283      	cmp	r3, r0
 800759c:	d101      	bne.n	80075a2 <TIM_DMADelayPulseHalfCplt+0x24>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800759e:	2302      	movs	r3, #2
 80075a0:	e7f3      	b.n	800758a <TIM_DMADelayPulseHalfCplt+0xc>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 80075a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075a4:	4283      	cmp	r3, r0
 80075a6:	d101      	bne.n	80075ac <TIM_DMADelayPulseHalfCplt+0x2e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80075a8:	2304      	movs	r3, #4
 80075aa:	e7ee      	b.n	800758a <TIM_DMADelayPulseHalfCplt+0xc>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 80075ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80075ae:	4283      	cmp	r3, r0
 80075b0:	d1ec      	bne.n	800758c <TIM_DMADelayPulseHalfCplt+0xe>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80075b2:	2308      	movs	r3, #8
 80075b4:	e7e9      	b.n	800758a <TIM_DMADelayPulseHalfCplt+0xc>

080075b6 <HAL_TIM_TriggerCallback>:
 80075b6:	4770      	bx	lr

080075b8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80075b8:	6803      	ldr	r3, [r0, #0]
 80075ba:	691a      	ldr	r2, [r3, #16]
 80075bc:	0791      	lsls	r1, r2, #30
{
 80075be:	b510      	push	{r4, lr}
 80075c0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80075c2:	d50e      	bpl.n	80075e2 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80075c4:	68da      	ldr	r2, [r3, #12]
 80075c6:	0792      	lsls	r2, r2, #30
 80075c8:	d50b      	bpl.n	80075e2 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80075ca:	f06f 0202 	mvn.w	r2, #2
 80075ce:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80075d0:	2201      	movs	r2, #1
 80075d2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80075d4:	699b      	ldr	r3, [r3, #24]
 80075d6:	079b      	lsls	r3, r3, #30
 80075d8:	d077      	beq.n	80076ca <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 80075da:	f7ff ff99 	bl	8007510 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80075de:	2300      	movs	r3, #0
 80075e0:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80075e2:	6823      	ldr	r3, [r4, #0]
 80075e4:	691a      	ldr	r2, [r3, #16]
 80075e6:	0750      	lsls	r0, r2, #29
 80075e8:	d510      	bpl.n	800760c <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80075ea:	68da      	ldr	r2, [r3, #12]
 80075ec:	0751      	lsls	r1, r2, #29
 80075ee:	d50d      	bpl.n	800760c <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80075f0:	f06f 0204 	mvn.w	r2, #4
 80075f4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80075f6:	2202      	movs	r2, #2
 80075f8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80075fa:	699b      	ldr	r3, [r3, #24]
 80075fc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007600:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007602:	d068      	beq.n	80076d6 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007604:	f7ff ff84 	bl	8007510 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007608:	2300      	movs	r3, #0
 800760a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800760c:	6823      	ldr	r3, [r4, #0]
 800760e:	691a      	ldr	r2, [r3, #16]
 8007610:	0712      	lsls	r2, r2, #28
 8007612:	d50f      	bpl.n	8007634 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007614:	68da      	ldr	r2, [r3, #12]
 8007616:	0710      	lsls	r0, r2, #28
 8007618:	d50c      	bpl.n	8007634 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800761a:	f06f 0208 	mvn.w	r2, #8
 800761e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007620:	2204      	movs	r2, #4
 8007622:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007624:	69db      	ldr	r3, [r3, #28]
 8007626:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8007628:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800762a:	d05a      	beq.n	80076e2 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800762c:	f7ff ff70 	bl	8007510 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007630:	2300      	movs	r3, #0
 8007632:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007634:	6823      	ldr	r3, [r4, #0]
 8007636:	691a      	ldr	r2, [r3, #16]
 8007638:	06d2      	lsls	r2, r2, #27
 800763a:	d510      	bpl.n	800765e <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800763c:	68da      	ldr	r2, [r3, #12]
 800763e:	06d0      	lsls	r0, r2, #27
 8007640:	d50d      	bpl.n	800765e <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007642:	f06f 0210 	mvn.w	r2, #16
 8007646:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007648:	2208      	movs	r2, #8
 800764a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800764c:	69db      	ldr	r3, [r3, #28]
 800764e:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007652:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007654:	d04b      	beq.n	80076ee <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007656:	f7ff ff5b 	bl	8007510 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800765a:	2300      	movs	r3, #0
 800765c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800765e:	6823      	ldr	r3, [r4, #0]
 8007660:	691a      	ldr	r2, [r3, #16]
 8007662:	07d1      	lsls	r1, r2, #31
 8007664:	d508      	bpl.n	8007678 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007666:	68da      	ldr	r2, [r3, #12]
 8007668:	07d2      	lsls	r2, r2, #31
 800766a:	d505      	bpl.n	8007678 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800766c:	f06f 0201 	mvn.w	r2, #1
 8007670:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007672:	4620      	mov	r0, r4
 8007674:	f7fa fe34 	bl	80022e0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8007678:	6823      	ldr	r3, [r4, #0]
 800767a:	691a      	ldr	r2, [r3, #16]
 800767c:	0610      	lsls	r0, r2, #24
 800767e:	d508      	bpl.n	8007692 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007680:	68da      	ldr	r2, [r3, #12]
 8007682:	0611      	lsls	r1, r2, #24
 8007684:	d505      	bpl.n	8007692 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007686:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800768a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800768c:	4620      	mov	r0, r4
 800768e:	f000 fc1c 	bl	8007eca <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007692:	6823      	ldr	r3, [r4, #0]
 8007694:	691a      	ldr	r2, [r3, #16]
 8007696:	0652      	lsls	r2, r2, #25
 8007698:	d508      	bpl.n	80076ac <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800769a:	68da      	ldr	r2, [r3, #12]
 800769c:	0650      	lsls	r0, r2, #25
 800769e:	d505      	bpl.n	80076ac <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80076a0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80076a4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80076a6:	4620      	mov	r0, r4
 80076a8:	f7ff ff85 	bl	80075b6 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80076ac:	6823      	ldr	r3, [r4, #0]
 80076ae:	691a      	ldr	r2, [r3, #16]
 80076b0:	0691      	lsls	r1, r2, #26
 80076b2:	d522      	bpl.n	80076fa <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80076b4:	68da      	ldr	r2, [r3, #12]
 80076b6:	0692      	lsls	r2, r2, #26
 80076b8:	d51f      	bpl.n	80076fa <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80076ba:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80076be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80076c0:	611a      	str	r2, [r3, #16]
}
 80076c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80076c6:	f000 bbff 	b.w	8007ec8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80076ca:	f7ff ff20 	bl	800750e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076ce:	4620      	mov	r0, r4
 80076d0:	f7fb ff66 	bl	80035a0 <HAL_TIM_PWM_PulseFinishedCallback>
 80076d4:	e783      	b.n	80075de <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076d6:	f7ff ff1a 	bl	800750e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076da:	4620      	mov	r0, r4
 80076dc:	f7fb ff60 	bl	80035a0 <HAL_TIM_PWM_PulseFinishedCallback>
 80076e0:	e792      	b.n	8007608 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076e2:	f7ff ff14 	bl	800750e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076e6:	4620      	mov	r0, r4
 80076e8:	f7fb ff5a 	bl	80035a0 <HAL_TIM_PWM_PulseFinishedCallback>
 80076ec:	e7a0      	b.n	8007630 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80076ee:	f7ff ff0e 	bl	800750e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80076f2:	4620      	mov	r0, r4
 80076f4:	f7fb ff54 	bl	80035a0 <HAL_TIM_PWM_PulseFinishedCallback>
 80076f8:	e7af      	b.n	800765a <HAL_TIM_IRQHandler+0xa2>
}
 80076fa:	bd10      	pop	{r4, pc}

080076fc <HAL_TIM_ErrorCallback>:
 80076fc:	4770      	bx	lr

080076fe <TIM_DMAError>:
{
 80076fe:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007700:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8007702:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007704:	4283      	cmp	r3, r0
 8007706:	d109      	bne.n	800771c <TIM_DMAError+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007708:	2301      	movs	r3, #1
 800770a:	7723      	strb	r3, [r4, #28]
    TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 800770c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  HAL_TIM_ErrorCallback(htim);
 8007710:	4620      	mov	r0, r4
 8007712:	f7ff fff3 	bl	80076fc <HAL_TIM_ErrorCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007716:	2300      	movs	r3, #0
 8007718:	7723      	strb	r3, [r4, #28]
}
 800771a:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800771c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800771e:	4283      	cmp	r3, r0
 8007720:	d105      	bne.n	800772e <TIM_DMAError+0x30>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007722:	2302      	movs	r3, #2
 8007724:	7723      	strb	r3, [r4, #28]
    TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8007726:	2301      	movs	r3, #1
 8007728:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800772c:	e7f0      	b.n	8007710 <TIM_DMAError+0x12>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 800772e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007730:	4283      	cmp	r3, r0
 8007732:	f04f 0301 	mov.w	r3, #1
 8007736:	d104      	bne.n	8007742 <TIM_DMAError+0x44>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007738:	2204      	movs	r2, #4
 800773a:	7722      	strb	r2, [r4, #28]
    TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 800773c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007740:	e7e6      	b.n	8007710 <TIM_DMAError+0x12>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8007742:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007744:	4282      	cmp	r2, r0
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007746:	bf03      	ittte	eq
 8007748:	2208      	moveq	r2, #8
 800774a:	7722      	strbeq	r2, [r4, #28]
    TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 800774c:	f884 3041 	strbeq.w	r3, [r4, #65]	; 0x41
    htim->State = HAL_TIM_STATE_READY;
 8007750:	f884 303d 	strbne.w	r3, [r4, #61]	; 0x3d
 8007754:	e7dc      	b.n	8007710 <TIM_DMAError+0x12>
	...

08007758 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007758:	4a30      	ldr	r2, [pc, #192]	; (800781c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800775a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800775c:	4290      	cmp	r0, r2
 800775e:	d012      	beq.n	8007786 <TIM_Base_SetConfig+0x2e>
 8007760:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007764:	d00f      	beq.n	8007786 <TIM_Base_SetConfig+0x2e>
 8007766:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800776a:	4290      	cmp	r0, r2
 800776c:	d00b      	beq.n	8007786 <TIM_Base_SetConfig+0x2e>
 800776e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007772:	4290      	cmp	r0, r2
 8007774:	d007      	beq.n	8007786 <TIM_Base_SetConfig+0x2e>
 8007776:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800777a:	4290      	cmp	r0, r2
 800777c:	d003      	beq.n	8007786 <TIM_Base_SetConfig+0x2e>
 800777e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007782:	4290      	cmp	r0, r2
 8007784:	d119      	bne.n	80077ba <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 8007786:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007788:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800778c:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800778e:	4a23      	ldr	r2, [pc, #140]	; (800781c <TIM_Base_SetConfig+0xc4>)
 8007790:	4290      	cmp	r0, r2
 8007792:	d029      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 8007794:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007798:	d026      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 800779a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800779e:	4290      	cmp	r0, r2
 80077a0:	d022      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077a2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077a6:	4290      	cmp	r0, r2
 80077a8:	d01e      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077aa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077ae:	4290      	cmp	r0, r2
 80077b0:	d01a      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077b2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80077b6:	4290      	cmp	r0, r2
 80077b8:	d016      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077ba:	4a19      	ldr	r2, [pc, #100]	; (8007820 <TIM_Base_SetConfig+0xc8>)
 80077bc:	4290      	cmp	r0, r2
 80077be:	d013      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077c4:	4290      	cmp	r0, r2
 80077c6:	d00f      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077c8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077cc:	4290      	cmp	r0, r2
 80077ce:	d00b      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077d0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80077d4:	4290      	cmp	r0, r2
 80077d6:	d007      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077d8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077dc:	4290      	cmp	r0, r2
 80077de:	d003      	beq.n	80077e8 <TIM_Base_SetConfig+0x90>
 80077e0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077e4:	4290      	cmp	r0, r2
 80077e6:	d103      	bne.n	80077f0 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80077e8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80077ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80077ee:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80077f0:	694a      	ldr	r2, [r1, #20]
 80077f2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80077f6:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 80077f8:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80077fa:	688b      	ldr	r3, [r1, #8]
 80077fc:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80077fe:	680b      	ldr	r3, [r1, #0]
 8007800:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007802:	4b06      	ldr	r3, [pc, #24]	; (800781c <TIM_Base_SetConfig+0xc4>)
 8007804:	4298      	cmp	r0, r3
 8007806:	d003      	beq.n	8007810 <TIM_Base_SetConfig+0xb8>
 8007808:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800780c:	4298      	cmp	r0, r3
 800780e:	d101      	bne.n	8007814 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 8007810:	690b      	ldr	r3, [r1, #16]
 8007812:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8007814:	2301      	movs	r3, #1
 8007816:	6143      	str	r3, [r0, #20]
}
 8007818:	4770      	bx	lr
 800781a:	bf00      	nop
 800781c:	40010000 	.word	0x40010000
 8007820:	40014000 	.word	0x40014000

08007824 <HAL_TIM_Base_Init>:
{
 8007824:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007826:	4604      	mov	r4, r0
 8007828:	b330      	cbz	r0, 8007878 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800782a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800782e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007832:	b91b      	cbnz	r3, 800783c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007834:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007838:	f7fa ff00 	bl	800263c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800783c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800783e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007840:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007844:	1d21      	adds	r1, r4, #4
 8007846:	f7ff ff87 	bl	8007758 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800784a:	2301      	movs	r3, #1
 800784c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8007850:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007852:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8007856:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800785a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800785e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007862:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007866:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800786a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800786e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007872:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8007876:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007878:	2001      	movs	r0, #1
 800787a:	e7fc      	b.n	8007876 <HAL_TIM_Base_Init+0x52>

0800787c <HAL_TIM_PWM_Init>:
{
 800787c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800787e:	4604      	mov	r4, r0
 8007880:	b330      	cbz	r0, 80078d0 <HAL_TIM_PWM_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007882:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007886:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800788a:	b91b      	cbnz	r3, 8007894 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800788c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8007890:	f7ff fe3c 	bl	800750c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007894:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007896:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007898:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800789c:	1d21      	adds	r1, r4, #4
 800789e:	f7ff ff5b 	bl	8007758 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80078a2:	2301      	movs	r3, #1
 80078a4:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80078a8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80078aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80078ae:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80078b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80078b6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80078ba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80078be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80078c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80078c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80078ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80078ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80078d0:	2001      	movs	r0, #1
 80078d2:	e7fc      	b.n	80078ce <HAL_TIM_PWM_Init+0x52>

080078d4 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80078d4:	6a03      	ldr	r3, [r0, #32]
 80078d6:	f023 0310 	bic.w	r3, r3, #16
 80078da:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 80078dc:	6a03      	ldr	r3, [r0, #32]
{
 80078de:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 80078e0:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 80078e2:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80078e4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80078e6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80078ea:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80078ee:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 80078f0:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80078f4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80078f8:	4d10      	ldr	r5, [pc, #64]	; (800793c <TIM_OC2_SetConfig+0x68>)
 80078fa:	42a8      	cmp	r0, r5
 80078fc:	d003      	beq.n	8007906 <TIM_OC2_SetConfig+0x32>
 80078fe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007902:	42a8      	cmp	r0, r5
 8007904:	d114      	bne.n	8007930 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007906:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 8007908:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800790c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007910:	4d0a      	ldr	r5, [pc, #40]	; (800793c <TIM_OC2_SetConfig+0x68>)
 8007912:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 8007914:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007918:	d003      	beq.n	8007922 <TIM_OC2_SetConfig+0x4e>
 800791a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800791e:	42a8      	cmp	r0, r5
 8007920:	d106      	bne.n	8007930 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007922:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007926:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800792a:	4335      	orrs	r5, r6
 800792c:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8007930:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8007932:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8007934:	684a      	ldr	r2, [r1, #4]
 8007936:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8007938:	6203      	str	r3, [r0, #32]
}
 800793a:	bd70      	pop	{r4, r5, r6, pc}
 800793c:	40010000 	.word	0x40010000

08007940 <HAL_TIM_PWM_ConfigChannel>:
{
 8007940:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 8007942:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007946:	2b01      	cmp	r3, #1
{
 8007948:	4605      	mov	r5, r0
  __HAL_LOCK(htim);
 800794a:	d053      	beq.n	80079f4 <HAL_TIM_PWM_ConfigChannel+0xb4>
 800794c:	2001      	movs	r0, #1
  switch (Channel)
 800794e:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 8007950:	f885 003c 	strb.w	r0, [r5, #60]	; 0x3c
  switch (Channel)
 8007954:	d03d      	beq.n	80079d2 <HAL_TIM_PWM_ConfigChannel+0x92>
 8007956:	d806      	bhi.n	8007966 <HAL_TIM_PWM_ConfigChannel+0x26>
 8007958:	b1c2      	cbz	r2, 800798c <HAL_TIM_PWM_ConfigChannel+0x4c>
 800795a:	2a04      	cmp	r2, #4
 800795c:	d028      	beq.n	80079b0 <HAL_TIM_PWM_ConfigChannel+0x70>
  __HAL_UNLOCK(htim);
 800795e:	2300      	movs	r3, #0
 8007960:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
}
 8007964:	bd70      	pop	{r4, r5, r6, pc}
  switch (Channel)
 8007966:	2a0c      	cmp	r2, #12
 8007968:	d1f9      	bne.n	800795e <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800796a:	6828      	ldr	r0, [r5, #0]
 800796c:	f7ff fd6e 	bl	800744c <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8007970:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007972:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8007974:	69da      	ldr	r2, [r3, #28]
 8007976:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800797a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800797c:	69da      	ldr	r2, [r3, #28]
 800797e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007982:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007984:	69da      	ldr	r2, [r3, #28]
 8007986:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800798a:	e031      	b.n	80079f0 <HAL_TIM_PWM_ConfigChannel+0xb0>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800798c:	6828      	ldr	r0, [r5, #0]
 800798e:	f7ff fcf5 	bl	800737c <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007992:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007994:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007996:	699a      	ldr	r2, [r3, #24]
 8007998:	f042 0208 	orr.w	r2, r2, #8
 800799c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800799e:	699a      	ldr	r2, [r3, #24]
 80079a0:	f022 0204 	bic.w	r2, r2, #4
 80079a4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80079a6:	699a      	ldr	r2, [r3, #24]
 80079a8:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079aa:	619a      	str	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
 80079ac:	2000      	movs	r0, #0
      break;
 80079ae:	e7d6      	b.n	800795e <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80079b0:	6828      	ldr	r0, [r5, #0]
 80079b2:	f7ff ff8f 	bl	80078d4 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80079b6:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079b8:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80079ba:	699a      	ldr	r2, [r3, #24]
 80079bc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80079c0:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80079c2:	699a      	ldr	r2, [r3, #24]
 80079c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80079c8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079ca:	699a      	ldr	r2, [r3, #24]
 80079cc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80079d0:	e7eb      	b.n	80079aa <HAL_TIM_PWM_ConfigChannel+0x6a>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80079d2:	6828      	ldr	r0, [r5, #0]
 80079d4:	f7ff fd04 	bl	80073e0 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80079d8:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80079da:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80079dc:	69da      	ldr	r2, [r3, #28]
 80079de:	f042 0208 	orr.w	r2, r2, #8
 80079e2:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80079e4:	69da      	ldr	r2, [r3, #28]
 80079e6:	f022 0204 	bic.w	r2, r2, #4
 80079ea:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80079ec:	69da      	ldr	r2, [r3, #28]
 80079ee:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80079f0:	61da      	str	r2, [r3, #28]
 80079f2:	e7db      	b.n	80079ac <HAL_TIM_PWM_ConfigChannel+0x6c>
  __HAL_LOCK(htim);
 80079f4:	2002      	movs	r0, #2
 80079f6:	e7b5      	b.n	8007964 <HAL_TIM_PWM_ConfigChannel+0x24>

080079f8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80079f8:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80079fa:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80079fc:	4311      	orrs	r1, r2
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80079fe:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007a02:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 8007a06:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a08:	6083      	str	r3, [r0, #8]
}
 8007a0a:	bd10      	pop	{r4, pc}

08007a0c <HAL_TIM_ConfigClockSource>:
{
 8007a0c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 8007a0e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007a12:	2b01      	cmp	r3, #1
{
 8007a14:	4604      	mov	r4, r0
 8007a16:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 8007a1a:	f000 8091 	beq.w	8007b40 <HAL_TIM_ConfigClockSource+0x134>
 8007a1e:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8007a20:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_LOCK(htim);
 8007a24:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8007a28:	6800      	ldr	r0, [r0, #0]
 8007a2a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007a2c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a30:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8007a34:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 8007a36:	680b      	ldr	r3, [r1, #0]
 8007a38:	2b60      	cmp	r3, #96	; 0x60
 8007a3a:	d052      	beq.n	8007ae2 <HAL_TIM_ConfigClockSource+0xd6>
 8007a3c:	d833      	bhi.n	8007aa6 <HAL_TIM_ConfigClockSource+0x9a>
 8007a3e:	2b40      	cmp	r3, #64	; 0x40
 8007a40:	d067      	beq.n	8007b12 <HAL_TIM_ConfigClockSource+0x106>
 8007a42:	d816      	bhi.n	8007a72 <HAL_TIM_ConfigClockSource+0x66>
 8007a44:	2b20      	cmp	r3, #32
 8007a46:	d00d      	beq.n	8007a64 <HAL_TIM_ConfigClockSource+0x58>
 8007a48:	d80a      	bhi.n	8007a60 <HAL_TIM_ConfigClockSource+0x54>
 8007a4a:	f033 0110 	bics.w	r1, r3, #16
 8007a4e:	d009      	beq.n	8007a64 <HAL_TIM_ConfigClockSource+0x58>
  htim->State = HAL_TIM_STATE_READY;
 8007a50:	2301      	movs	r3, #1
 8007a52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8007a56:	2300      	movs	r3, #0
 8007a58:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8007a5c:	4610      	mov	r0, r2
 8007a5e:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 8007a60:	2b30      	cmp	r3, #48	; 0x30
 8007a62:	d1f5      	bne.n	8007a50 <HAL_TIM_ConfigClockSource+0x44>
  tmpsmcr = TIMx->SMCR;
 8007a64:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007a66:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a6a:	4313      	orrs	r3, r2
 8007a6c:	f043 0307 	orr.w	r3, r3, #7
 8007a70:	e017      	b.n	8007aa2 <HAL_TIM_ConfigClockSource+0x96>
  switch (sClockSourceConfig->ClockSource)
 8007a72:	2b50      	cmp	r3, #80	; 0x50
 8007a74:	d1ec      	bne.n	8007a50 <HAL_TIM_ConfigClockSource+0x44>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007a76:	684a      	ldr	r2, [r1, #4]
 8007a78:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8007a7a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007a7c:	6a05      	ldr	r5, [r0, #32]
 8007a7e:	f025 0501 	bic.w	r5, r5, #1
 8007a82:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007a84:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007a86:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007a8a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007a8e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8007a92:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8007a94:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8007a96:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007a98:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007a9a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a9e:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8007aa2:	6083      	str	r3, [r0, #8]
 8007aa4:	e011      	b.n	8007aca <HAL_TIM_ConfigClockSource+0xbe>
  switch (sClockSourceConfig->ClockSource)
 8007aa6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007aaa:	d00e      	beq.n	8007aca <HAL_TIM_ConfigClockSource+0xbe>
 8007aac:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ab0:	d00d      	beq.n	8007ace <HAL_TIM_ConfigClockSource+0xc2>
 8007ab2:	2b70      	cmp	r3, #112	; 0x70
 8007ab4:	d1cc      	bne.n	8007a50 <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 8007ab6:	68cb      	ldr	r3, [r1, #12]
 8007ab8:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8007abc:	f7ff ff9c 	bl	80079f8 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8007ac0:	6822      	ldr	r2, [r4, #0]
 8007ac2:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007ac4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007ac8:	6093      	str	r3, [r2, #8]
  HAL_StatusTypeDef status = HAL_OK;
 8007aca:	2200      	movs	r2, #0
 8007acc:	e7c0      	b.n	8007a50 <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 8007ace:	68cb      	ldr	r3, [r1, #12]
 8007ad0:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8007ad4:	f7ff ff90 	bl	80079f8 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007ad8:	6822      	ldr	r2, [r4, #0]
 8007ada:	6893      	ldr	r3, [r2, #8]
 8007adc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007ae0:	e7f2      	b.n	8007ac8 <HAL_TIM_ConfigClockSource+0xbc>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007ae2:	684d      	ldr	r5, [r1, #4]
 8007ae4:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007ae6:	6a01      	ldr	r1, [r0, #32]
 8007ae8:	f021 0110 	bic.w	r1, r1, #16
 8007aec:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007aee:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 8007af0:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007af2:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007af6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 8007afa:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007afe:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8007b02:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 8007b04:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007b06:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007b08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007b0c:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 8007b10:	e7c7      	b.n	8007aa2 <HAL_TIM_ConfigClockSource+0x96>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007b12:	684a      	ldr	r2, [r1, #4]
 8007b14:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8007b16:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007b18:	6a05      	ldr	r5, [r0, #32]
 8007b1a:	f025 0501 	bic.w	r5, r5, #1
 8007b1e:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007b20:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007b22:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007b26:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007b2a:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8007b2e:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8007b30:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8007b32:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007b34:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007b36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007b3a:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 8007b3e:	e7b0      	b.n	8007aa2 <HAL_TIM_ConfigClockSource+0x96>
  __HAL_LOCK(htim);
 8007b40:	461a      	mov	r2, r3
 8007b42:	e78b      	b.n	8007a5c <HAL_TIM_ConfigClockSource+0x50>

08007b44 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007b44:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007b46:	f001 011f 	and.w	r1, r1, #31
{
 8007b4a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007b4c:	2401      	movs	r4, #1
 8007b4e:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8007b50:	ea23 0304 	bic.w	r3, r3, r4
 8007b54:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007b56:	6a03      	ldr	r3, [r0, #32]
 8007b58:	408a      	lsls	r2, r1
 8007b5a:	431a      	orrs	r2, r3
 8007b5c:	6202      	str	r2, [r0, #32]
}
 8007b5e:	bd10      	pop	{r4, pc}

08007b60 <HAL_TIM_OC_Start_DMA>:
{
 8007b60:	b538      	push	{r3, r4, r5, lr}
 8007b62:	460d      	mov	r5, r1
 8007b64:	4604      	mov	r4, r0
 8007b66:	4611      	mov	r1, r2
  if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
 8007b68:	b955      	cbnz	r5, 8007b80 <HAL_TIM_OC_Start_DMA+0x20>
 8007b6a:	f890 003e 	ldrb.w	r0, [r0, #62]	; 0x3e
 8007b6e:	f1a0 0c02 	sub.w	ip, r0, #2
 8007b72:	f1dc 0000 	rsbs	r0, ip, #0
 8007b76:	eb40 000c 	adc.w	r0, r0, ip
 8007b7a:	b170      	cbz	r0, 8007b9a <HAL_TIM_OC_Start_DMA+0x3a>
    return HAL_BUSY;
 8007b7c:	2002      	movs	r0, #2
 8007b7e:	e04f      	b.n	8007c20 <HAL_TIM_OC_Start_DMA+0xc0>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
 8007b80:	2d04      	cmp	r5, #4
 8007b82:	d102      	bne.n	8007b8a <HAL_TIM_OC_Start_DMA+0x2a>
 8007b84:	f890 003f 	ldrb.w	r0, [r0, #63]	; 0x3f
 8007b88:	e7f1      	b.n	8007b6e <HAL_TIM_OC_Start_DMA+0xe>
 8007b8a:	2d08      	cmp	r5, #8
 8007b8c:	d102      	bne.n	8007b94 <HAL_TIM_OC_Start_DMA+0x34>
 8007b8e:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
 8007b92:	e7ec      	b.n	8007b6e <HAL_TIM_OC_Start_DMA+0xe>
 8007b94:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
 8007b98:	e7e9      	b.n	8007b6e <HAL_TIM_OC_Start_DMA+0xe>
  else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
 8007b9a:	b93d      	cbnz	r5, 8007bac <HAL_TIM_OC_Start_DMA+0x4c>
 8007b9c:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8007ba0:	1e50      	subs	r0, r2, #1
 8007ba2:	4242      	negs	r2, r0
 8007ba4:	4142      	adcs	r2, r0
 8007ba6:	b962      	cbnz	r2, 8007bc2 <HAL_TIM_OC_Start_DMA+0x62>
  switch (Channel)
 8007ba8:	2001      	movs	r0, #1
 8007baa:	e039      	b.n	8007c20 <HAL_TIM_OC_Start_DMA+0xc0>
  else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
 8007bac:	2d04      	cmp	r5, #4
 8007bae:	d102      	bne.n	8007bb6 <HAL_TIM_OC_Start_DMA+0x56>
 8007bb0:	f894 203f 	ldrb.w	r2, [r4, #63]	; 0x3f
 8007bb4:	e7f4      	b.n	8007ba0 <HAL_TIM_OC_Start_DMA+0x40>
 8007bb6:	2d08      	cmp	r5, #8
 8007bb8:	d133      	bne.n	8007c22 <HAL_TIM_OC_Start_DMA+0xc2>
 8007bba:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007bbe:	2a01      	cmp	r2, #1
 8007bc0:	d1f2      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
    if ((pData == NULL) && (Length > 0U))
 8007bc2:	b909      	cbnz	r1, 8007bc8 <HAL_TIM_OC_Start_DMA+0x68>
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	d1ef      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007bc8:	2202      	movs	r2, #2
 8007bca:	2d00      	cmp	r5, #0
 8007bcc:	d13e      	bne.n	8007c4c <HAL_TIM_OC_Start_DMA+0xec>
 8007bce:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007bd2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007bd4:	4a4e      	ldr	r2, [pc, #312]	; (8007d10 <HAL_TIM_OC_Start_DMA+0x1b0>)
 8007bd6:	63c2      	str	r2, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007bd8:	4a4e      	ldr	r2, [pc, #312]	; (8007d14 <HAL_TIM_OC_Start_DMA+0x1b4>)
 8007bda:	6402      	str	r2, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8007bdc:	4a4e      	ldr	r2, [pc, #312]	; (8007d18 <HAL_TIM_OC_Start_DMA+0x1b8>)
 8007bde:	64c2      	str	r2, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1,
 8007be0:	6822      	ldr	r2, [r4, #0]
 8007be2:	3234      	adds	r2, #52	; 0x34
 8007be4:	f7fc fe54 	bl	8004890 <HAL_DMA_Start_IT>
 8007be8:	2800      	cmp	r0, #0
 8007bea:	d1dd      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8007bec:	6822      	ldr	r2, [r4, #0]
 8007bee:	68d3      	ldr	r3, [r2, #12]
 8007bf0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8007bf4:	60d3      	str	r3, [r2, #12]
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007bf6:	4629      	mov	r1, r5
 8007bf8:	6820      	ldr	r0, [r4, #0]
 8007bfa:	2201      	movs	r2, #1
 8007bfc:	f7ff ffa2 	bl	8007b44 <TIM_CCxChannelCmd>
    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007c00:	6823      	ldr	r3, [r4, #0]
 8007c02:	4946      	ldr	r1, [pc, #280]	; (8007d1c <HAL_TIM_OC_Start_DMA+0x1bc>)
 8007c04:	428b      	cmp	r3, r1
 8007c06:	d060      	beq.n	8007cca <HAL_TIM_OC_Start_DMA+0x16a>
 8007c08:	4a45      	ldr	r2, [pc, #276]	; (8007d20 <HAL_TIM_OC_Start_DMA+0x1c0>)
 8007c0a:	4293      	cmp	r3, r2
 8007c0c:	d05d      	beq.n	8007cca <HAL_TIM_OC_Start_DMA+0x16a>
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007c0e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007c12:	d161      	bne.n	8007cd8 <HAL_TIM_OC_Start_DMA+0x178>
      tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007c14:	689a      	ldr	r2, [r3, #8]
 8007c16:	f002 0207 	and.w	r2, r2, #7
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007c1a:	2a06      	cmp	r2, #6
 8007c1c:	d173      	bne.n	8007d06 <HAL_TIM_OC_Start_DMA+0x1a6>
      __HAL_TIM_ENABLE(htim);
 8007c1e:	2000      	movs	r0, #0
}
 8007c20:	bd38      	pop	{r3, r4, r5, pc}
  else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
 8007c22:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007c26:	2a01      	cmp	r2, #1
 8007c28:	d1be      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
    if ((pData == NULL) && (Length > 0U))
 8007c2a:	b909      	cbnz	r1, 8007c30 <HAL_TIM_OC_Start_DMA+0xd0>
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d1bb      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007c30:	2202      	movs	r2, #2
  switch (Channel)
 8007c32:	2d0c      	cmp	r5, #12
      TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007c34:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
  switch (Channel)
 8007c38:	d034      	beq.n	8007ca4 <HAL_TIM_OC_Start_DMA+0x144>
 8007c3a:	d8b5      	bhi.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
 8007c3c:	2d08      	cmp	r5, #8
 8007c3e:	d01f      	beq.n	8007c80 <HAL_TIM_OC_Start_DMA+0x120>
 8007c40:	d8b2      	bhi.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
 8007c42:	2d00      	cmp	r5, #0
 8007c44:	d0c5      	beq.n	8007bd2 <HAL_TIM_OC_Start_DMA+0x72>
 8007c46:	2d04      	cmp	r5, #4
 8007c48:	d1ae      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
 8007c4a:	e003      	b.n	8007c54 <HAL_TIM_OC_Start_DMA+0xf4>
      TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007c4c:	2d04      	cmp	r5, #4
 8007c4e:	d113      	bne.n	8007c78 <HAL_TIM_OC_Start_DMA+0x118>
 8007c50:	f884 203f 	strb.w	r2, [r4, #63]	; 0x3f
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007c54:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007c56:	4a2e      	ldr	r2, [pc, #184]	; (8007d10 <HAL_TIM_OC_Start_DMA+0x1b0>)
 8007c58:	63c2      	str	r2, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007c5a:	4a2e      	ldr	r2, [pc, #184]	; (8007d14 <HAL_TIM_OC_Start_DMA+0x1b4>)
 8007c5c:	6402      	str	r2, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8007c5e:	4a2e      	ldr	r2, [pc, #184]	; (8007d18 <HAL_TIM_OC_Start_DMA+0x1b8>)
 8007c60:	64c2      	str	r2, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2,
 8007c62:	6822      	ldr	r2, [r4, #0]
 8007c64:	3238      	adds	r2, #56	; 0x38
 8007c66:	f7fc fe13 	bl	8004890 <HAL_DMA_Start_IT>
 8007c6a:	2800      	cmp	r0, #0
 8007c6c:	d19c      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8007c6e:	6822      	ldr	r2, [r4, #0]
 8007c70:	68d3      	ldr	r3, [r2, #12]
 8007c72:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8007c76:	e7bd      	b.n	8007bf4 <HAL_TIM_OC_Start_DMA+0x94>
      TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007c78:	2d08      	cmp	r5, #8
 8007c7a:	d1d9      	bne.n	8007c30 <HAL_TIM_OC_Start_DMA+0xd0>
 8007c7c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007c80:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8007c82:	4a23      	ldr	r2, [pc, #140]	; (8007d10 <HAL_TIM_OC_Start_DMA+0x1b0>)
 8007c84:	63c2      	str	r2, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007c86:	4a23      	ldr	r2, [pc, #140]	; (8007d14 <HAL_TIM_OC_Start_DMA+0x1b4>)
 8007c88:	6402      	str	r2, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 8007c8a:	4a23      	ldr	r2, [pc, #140]	; (8007d18 <HAL_TIM_OC_Start_DMA+0x1b8>)
 8007c8c:	64c2      	str	r2, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3,
 8007c8e:	6822      	ldr	r2, [r4, #0]
 8007c90:	323c      	adds	r2, #60	; 0x3c
 8007c92:	f7fc fdfd 	bl	8004890 <HAL_DMA_Start_IT>
 8007c96:	2800      	cmp	r0, #0
 8007c98:	d186      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 8007c9a:	6822      	ldr	r2, [r4, #0]
 8007c9c:	68d3      	ldr	r3, [r2, #12]
 8007c9e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8007ca2:	e7a7      	b.n	8007bf4 <HAL_TIM_OC_Start_DMA+0x94>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007ca4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007ca6:	4a1a      	ldr	r2, [pc, #104]	; (8007d10 <HAL_TIM_OC_Start_DMA+0x1b0>)
 8007ca8:	63c2      	str	r2, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007caa:	4a1a      	ldr	r2, [pc, #104]	; (8007d14 <HAL_TIM_OC_Start_DMA+0x1b4>)
 8007cac:	6402      	str	r2, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8007cae:	4a1a      	ldr	r2, [pc, #104]	; (8007d18 <HAL_TIM_OC_Start_DMA+0x1b8>)
 8007cb0:	64c2      	str	r2, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4,
 8007cb2:	6822      	ldr	r2, [r4, #0]
 8007cb4:	3240      	adds	r2, #64	; 0x40
 8007cb6:	f7fc fdeb 	bl	8004890 <HAL_DMA_Start_IT>
 8007cba:	2800      	cmp	r0, #0
 8007cbc:	f47f af74 	bne.w	8007ba8 <HAL_TIM_OC_Start_DMA+0x48>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8007cc0:	6822      	ldr	r2, [r4, #0]
 8007cc2:	68d3      	ldr	r3, [r2, #12]
 8007cc4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007cc8:	e794      	b.n	8007bf4 <HAL_TIM_OC_Start_DMA+0x94>
      __HAL_TIM_MOE_ENABLE(htim);
 8007cca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007ccc:	428b      	cmp	r3, r1
      __HAL_TIM_MOE_ENABLE(htim);
 8007cce:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007cd2:	645a      	str	r2, [r3, #68]	; 0x44
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007cd4:	d09e      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007cd6:	e79a      	b.n	8007c0e <HAL_TIM_OC_Start_DMA+0xae>
 8007cd8:	4a12      	ldr	r2, [pc, #72]	; (8007d24 <HAL_TIM_OC_Start_DMA+0x1c4>)
 8007cda:	4293      	cmp	r3, r2
 8007cdc:	d09a      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007cde:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ce2:	4293      	cmp	r3, r2
 8007ce4:	d096      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007ce6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007cea:	4293      	cmp	r3, r2
 8007cec:	d092      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007cee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007cf2:	4293      	cmp	r3, r2
 8007cf4:	d08e      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007cf6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8007cfa:	4293      	cmp	r3, r2
 8007cfc:	d08a      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
 8007cfe:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8007d02:	4293      	cmp	r3, r2
 8007d04:	d086      	beq.n	8007c14 <HAL_TIM_OC_Start_DMA+0xb4>
      __HAL_TIM_ENABLE(htim);
 8007d06:	681a      	ldr	r2, [r3, #0]
 8007d08:	f042 0201 	orr.w	r2, r2, #1
 8007d0c:	601a      	str	r2, [r3, #0]
 8007d0e:	e786      	b.n	8007c1e <HAL_TIM_OC_Start_DMA+0xbe>
 8007d10:	08007513 	.word	0x08007513
 8007d14:	0800757f 	.word	0x0800757f
 8007d18:	080076ff 	.word	0x080076ff
 8007d1c:	40010000 	.word	0x40010000
 8007d20:	40010400 	.word	0x40010400
 8007d24:	40000400 	.word	0x40000400

08007d28 <HAL_TIM_PWM_Start_DMA>:
 8007d28:	f7ff bf1a 	b.w	8007b60 <HAL_TIM_OC_Start_DMA>

08007d2c <HAL_TIM_OC_Stop_DMA>:
  switch (Channel)
 8007d2c:	2908      	cmp	r1, #8
{
 8007d2e:	b538      	push	{r3, r4, r5, lr}
 8007d30:	4605      	mov	r5, r0
 8007d32:	460c      	mov	r4, r1
  switch (Channel)
 8007d34:	d04c      	beq.n	8007dd0 <HAL_TIM_OC_Stop_DMA+0xa4>
 8007d36:	d804      	bhi.n	8007d42 <HAL_TIM_OC_Stop_DMA+0x16>
 8007d38:	b161      	cbz	r1, 8007d54 <HAL_TIM_OC_Stop_DMA+0x28>
 8007d3a:	2904      	cmp	r1, #4
 8007d3c:	d041      	beq.n	8007dc2 <HAL_TIM_OC_Stop_DMA+0x96>
 8007d3e:	2001      	movs	r0, #1
}
 8007d40:	bd38      	pop	{r3, r4, r5, pc}
  switch (Channel)
 8007d42:	290c      	cmp	r1, #12
 8007d44:	d1fb      	bne.n	8007d3e <HAL_TIM_OC_Stop_DMA+0x12>
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 8007d46:	6802      	ldr	r2, [r0, #0]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 8007d48:	6b00      	ldr	r0, [r0, #48]	; 0x30
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 8007d4a:	68d3      	ldr	r3, [r2, #12]
 8007d4c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007d50:	60d3      	str	r3, [r2, #12]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 8007d52:	e005      	b.n	8007d60 <HAL_TIM_OC_Stop_DMA+0x34>
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 8007d54:	6802      	ldr	r2, [r0, #0]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 8007d56:	6a40      	ldr	r0, [r0, #36]	; 0x24
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 8007d58:	68d3      	ldr	r3, [r2, #12]
 8007d5a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007d5e:	60d3      	str	r3, [r2, #12]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 8007d60:	f7fc fe14 	bl	800498c <HAL_DMA_Abort_IT>
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8007d64:	2200      	movs	r2, #0
 8007d66:	6828      	ldr	r0, [r5, #0]
 8007d68:	4621      	mov	r1, r4
 8007d6a:	f7ff feeb 	bl	8007b44 <TIM_CCxChannelCmd>
    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007d6e:	682b      	ldr	r3, [r5, #0]
 8007d70:	4a21      	ldr	r2, [pc, #132]	; (8007df8 <HAL_TIM_OC_Stop_DMA+0xcc>)
 8007d72:	4293      	cmp	r3, r2
 8007d74:	d003      	beq.n	8007d7e <HAL_TIM_OC_Stop_DMA+0x52>
 8007d76:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d7a:	4293      	cmp	r3, r2
 8007d7c:	d10d      	bne.n	8007d9a <HAL_TIM_OC_Stop_DMA+0x6e>
      __HAL_TIM_MOE_DISABLE(htim);
 8007d7e:	6a19      	ldr	r1, [r3, #32]
 8007d80:	f241 1211 	movw	r2, #4369	; 0x1111
 8007d84:	4211      	tst	r1, r2
 8007d86:	d108      	bne.n	8007d9a <HAL_TIM_OC_Stop_DMA+0x6e>
 8007d88:	6a19      	ldr	r1, [r3, #32]
 8007d8a:	f240 4244 	movw	r2, #1092	; 0x444
 8007d8e:	4211      	tst	r1, r2
 8007d90:	bf02      	ittt	eq
 8007d92:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 8007d94:	f422 4200 	biceq.w	r2, r2, #32768	; 0x8000
 8007d98:	645a      	streq	r2, [r3, #68]	; 0x44
    __HAL_TIM_DISABLE(htim);
 8007d9a:	6a19      	ldr	r1, [r3, #32]
 8007d9c:	f241 1211 	movw	r2, #4369	; 0x1111
 8007da0:	4211      	tst	r1, r2
 8007da2:	d108      	bne.n	8007db6 <HAL_TIM_OC_Stop_DMA+0x8a>
 8007da4:	6a19      	ldr	r1, [r3, #32]
 8007da6:	f240 4244 	movw	r2, #1092	; 0x444
 8007daa:	4211      	tst	r1, r2
 8007dac:	bf02      	ittt	eq
 8007dae:	681a      	ldreq	r2, [r3, #0]
 8007db0:	f022 0201 	biceq.w	r2, r2, #1
 8007db4:	601a      	streq	r2, [r3, #0]
    TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8007db6:	2301      	movs	r3, #1
 8007db8:	b98c      	cbnz	r4, 8007dde <HAL_TIM_OC_Stop_DMA+0xb2>
 8007dba:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
 8007dbe:	2000      	movs	r0, #0
 8007dc0:	e7be      	b.n	8007d40 <HAL_TIM_OC_Stop_DMA+0x14>
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 8007dc2:	6802      	ldr	r2, [r0, #0]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 8007dc4:	6a80      	ldr	r0, [r0, #40]	; 0x28
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 8007dc6:	68d3      	ldr	r3, [r2, #12]
 8007dc8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007dcc:	60d3      	str	r3, [r2, #12]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 8007dce:	e7c7      	b.n	8007d60 <HAL_TIM_OC_Stop_DMA+0x34>
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 8007dd0:	6802      	ldr	r2, [r0, #0]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 8007dd2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
      __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 8007dd4:	68d3      	ldr	r3, [r2, #12]
 8007dd6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007dda:	60d3      	str	r3, [r2, #12]
      (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 8007ddc:	e7c0      	b.n	8007d60 <HAL_TIM_OC_Stop_DMA+0x34>
    TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8007dde:	2c04      	cmp	r4, #4
 8007de0:	d102      	bne.n	8007de8 <HAL_TIM_OC_Stop_DMA+0xbc>
 8007de2:	f885 303f 	strb.w	r3, [r5, #63]	; 0x3f
 8007de6:	e7ea      	b.n	8007dbe <HAL_TIM_OC_Stop_DMA+0x92>
 8007de8:	2c08      	cmp	r4, #8
 8007dea:	bf0c      	ite	eq
 8007dec:	f885 3040 	strbeq.w	r3, [r5, #64]	; 0x40
 8007df0:	f885 3041 	strbne.w	r3, [r5, #65]	; 0x41
 8007df4:	e7e3      	b.n	8007dbe <HAL_TIM_OC_Stop_DMA+0x92>
 8007df6:	bf00      	nop
 8007df8:	40010000 	.word	0x40010000

08007dfc <HAL_TIM_PWM_Stop_DMA>:
 8007dfc:	f7ff bf96 	b.w	8007d2c <HAL_TIM_OC_Stop_DMA>

08007e00 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007e00:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007e02:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007e06:	2b01      	cmp	r3, #1
 8007e08:	f04f 0302 	mov.w	r3, #2
 8007e0c:	d032      	beq.n	8007e74 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007e0e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007e12:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007e14:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8007e16:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8007e18:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8007e1a:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007e1e:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007e20:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007e22:	4c15      	ldr	r4, [pc, #84]	; (8007e78 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8007e24:	42a3      	cmp	r3, r4
 8007e26:	d01a      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e28:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007e2c:	d017      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e2e:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007e32:	42a3      	cmp	r3, r4
 8007e34:	d013      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e36:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007e3a:	42a3      	cmp	r3, r4
 8007e3c:	d00f      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e3e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007e42:	42a3      	cmp	r3, r4
 8007e44:	d00b      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e46:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8007e4a:	42a3      	cmp	r3, r4
 8007e4c:	d007      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e4e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007e52:	42a3      	cmp	r3, r4
 8007e54:	d003      	beq.n	8007e5e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007e56:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8007e5a:	42a3      	cmp	r3, r4
 8007e5c:	d104      	bne.n	8007e68 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007e5e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007e60:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007e64:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007e66:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007e68:	2301      	movs	r3, #1
 8007e6a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007e6e:	2300      	movs	r3, #0
 8007e70:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8007e74:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007e76:	bd30      	pop	{r4, r5, pc}
 8007e78:	40010000 	.word	0x40010000

08007e7c <HAL_TIMEx_ConfigBreakDeadTime>:
  assert_param(IS_TIM_BREAK_STATE(sBreakDeadTimeConfig->BreakState));
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
 8007e7c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007e80:	2b01      	cmp	r3, #1
 8007e82:	d01f      	beq.n	8007ec4 <HAL_TIMEx_ConfigBreakDeadTime+0x48>
  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 8007e84:	68cb      	ldr	r3, [r1, #12]
 8007e86:	688a      	ldr	r2, [r1, #8]
 8007e88:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007e8c:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 8007e8e:	684a      	ldr	r2, [r1, #4]
 8007e90:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007e94:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 8007e96:	680a      	ldr	r2, [r1, #0]
 8007e98:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007e9c:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 8007e9e:	690a      	ldr	r2, [r1, #16]
 8007ea0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007ea4:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 8007ea6:	694a      	ldr	r2, [r1, #20]
 8007ea8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007eac:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 8007eae:	69ca      	ldr	r2, [r1, #28]
 8007eb0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007eb4:	4313      	orrs	r3, r2


  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 8007eb6:	6802      	ldr	r2, [r0, #0]
 8007eb8:	6453      	str	r3, [r2, #68]	; 0x44

  __HAL_UNLOCK(htim);
 8007eba:	2300      	movs	r3, #0
 8007ebc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
 8007ec0:	4618      	mov	r0, r3
 8007ec2:	4770      	bx	lr
  __HAL_LOCK(htim);
 8007ec4:	2002      	movs	r0, #2
}
 8007ec6:	4770      	bx	lr

08007ec8 <HAL_TIMEx_CommutCallback>:
 8007ec8:	4770      	bx	lr

08007eca <HAL_TIMEx_BreakCallback>:
 8007eca:	4770      	bx	lr

08007ecc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007ecc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007ed0:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007ed4:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007ed6:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8007eda:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8007ede:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8007ee2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8007ee6:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007ee8:	b9a2      	cbnz	r2, 8007f14 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007eea:	ea43 0209 	orr.w	r2, r3, r9
 8007eee:	432a      	orrs	r2, r5
 8007ef0:	ea42 0308 	orr.w	r3, r2, r8
 8007ef4:	6801      	ldr	r1, [r0, #0]
 8007ef6:	ea43 030e 	orr.w	r3, r3, lr
 8007efa:	ea43 030c 	orr.w	r3, r3, ip
 8007efe:	433b      	orrs	r3, r7
 8007f00:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8007f04:	4333      	orrs	r3, r6
 8007f06:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8007f0a:	430b      	orrs	r3, r1
 8007f0c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007f0e:	2000      	movs	r0, #0
 8007f10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007f14:	6802      	ldr	r2, [r0, #0]
 8007f16:	ea43 0309 	orr.w	r3, r3, r9
 8007f1a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007f1e:	4313      	orrs	r3, r2
 8007f20:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8007f22:	ea45 0308 	orr.w	r3, r5, r8
 8007f26:	6842      	ldr	r2, [r0, #4]
 8007f28:	ea43 030e 	orr.w	r3, r3, lr
 8007f2c:	ea43 030c 	orr.w	r3, r3, ip
 8007f30:	433b      	orrs	r3, r7
 8007f32:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8007f36:	4333      	orrs	r3, r6
 8007f38:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007f3c:	4313      	orrs	r3, r2
 8007f3e:	6043      	str	r3, [r0, #4]
 8007f40:	e7e5      	b.n	8007f0e <FMC_SDRAM_Init+0x42>

08007f42 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007f42:	68cb      	ldr	r3, [r1, #12]
 8007f44:	f103 3cff 	add.w	ip, r3, #4294967295
 8007f48:	694b      	ldr	r3, [r1, #20]
{
 8007f4a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007f4c:	680f      	ldr	r7, [r1, #0]
 8007f4e:	684c      	ldr	r4, [r1, #4]
 8007f50:	688e      	ldr	r6, [r1, #8]
 8007f52:	690d      	ldr	r5, [r1, #16]
 8007f54:	6989      	ldr	r1, [r1, #24]
 8007f56:	3b01      	subs	r3, #1
 8007f58:	051b      	lsls	r3, r3, #20
 8007f5a:	3c01      	subs	r4, #1
 8007f5c:	3e01      	subs	r6, #1
 8007f5e:	3d01      	subs	r5, #1
 8007f60:	3901      	subs	r1, #1
 8007f62:	3f01      	subs	r7, #1
 8007f64:	0124      	lsls	r4, r4, #4
 8007f66:	0236      	lsls	r6, r6, #8
 8007f68:	042d      	lsls	r5, r5, #16
 8007f6a:	0609      	lsls	r1, r1, #24
 8007f6c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007f70:	b95a      	cbnz	r2, 8007f8a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007f72:	433b      	orrs	r3, r7
 8007f74:	4323      	orrs	r3, r4
 8007f76:	6882      	ldr	r2, [r0, #8]
 8007f78:	4333      	orrs	r3, r6
 8007f7a:	432b      	orrs	r3, r5
 8007f7c:	430b      	orrs	r3, r1
 8007f7e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007f82:	4313      	orrs	r3, r2
 8007f84:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007f86:	2000      	movs	r0, #0
 8007f88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007f8a:	6882      	ldr	r2, [r0, #8]
 8007f8c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007f90:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8007f94:	431a      	orrs	r2, r3
 8007f96:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007f98:	ea44 0306 	orr.w	r3, r4, r6
 8007f9c:	68c2      	ldr	r2, [r0, #12]
 8007f9e:	433b      	orrs	r3, r7
 8007fa0:	432b      	orrs	r3, r5
 8007fa2:	430b      	orrs	r3, r1
 8007fa4:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007fa8:	4313      	orrs	r3, r2
 8007faa:	60c3      	str	r3, [r0, #12]
 8007fac:	e7eb      	b.n	8007f86 <FMC_SDRAM_Timing_Init+0x44>

08007fae <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8007fae:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8007fb2:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8007fb6:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8007fba:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8007fbe:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8007fc0:	2300      	movs	r3, #0
 8007fc2:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8007fc4:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8007fc6:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8007fc8:	4618      	mov	r0, r3
 8007fca:	4770      	bx	lr

08007fcc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007fcc:	b570      	push	{r4, r5, r6, lr}
 8007fce:	4604      	mov	r4, r0
 8007fd0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007fd2:	6902      	ldr	r2, [r0, #16]
 8007fd4:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007fd8:	4303      	orrs	r3, r0
 8007fda:	68c8      	ldr	r0, [r1, #12]
 8007fdc:	0d92      	lsrs	r2, r2, #22
 8007fde:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007fe2:	0592      	lsls	r2, r2, #22
 8007fe4:	4313      	orrs	r3, r2
 8007fe6:	688a      	ldr	r2, [r1, #8]
 8007fe8:	3a01      	subs	r2, #1
 8007fea:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007fee:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007ff0:	f7fc fafe 	bl	80045f0 <HAL_GetTick>
 8007ff4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007ff6:	69a3      	ldr	r3, [r4, #24]
 8007ff8:	f013 0320 	ands.w	r3, r3, #32
 8007ffc:	d101      	bne.n	8008002 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8007ffe:	4618      	mov	r0, r3
 8008000:	e003      	b.n	800800a <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8008002:	1c6b      	adds	r3, r5, #1
 8008004:	d0f7      	beq.n	8007ff6 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008006:	b90d      	cbnz	r5, 800800c <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8008008:	2003      	movs	r0, #3
}
 800800a:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800800c:	f7fc faf0 	bl	80045f0 <HAL_GetTick>
 8008010:	1b80      	subs	r0, r0, r6
 8008012:	42a8      	cmp	r0, r5
 8008014:	d9ef      	bls.n	8007ff6 <FMC_SDRAM_SendCommand+0x2a>
 8008016:	e7f7      	b.n	8008008 <FMC_SDRAM_SendCommand+0x3c>

08008018 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008018:	6943      	ldr	r3, [r0, #20]
 800801a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800801e:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8008022:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008026:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8008028:	2000      	movs	r0, #0
 800802a:	4770      	bx	lr

0800802c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800802c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800802e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008032:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008034:	f001 fe3e 	bl	8009cb4 <xTaskGetSchedulerState>
 8008038:	2801      	cmp	r0, #1
 800803a:	d003      	beq.n	8008044 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800803c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008040:	f000 bbe0 	b.w	8008804 <xPortSysTickHandler>
}
 8008044:	bd08      	pop	{r3, pc}
	...

08008048 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008048:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800804c:	b92b      	cbnz	r3, 800805a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800804e:	4b06      	ldr	r3, [pc, #24]	; (8008068 <osKernelInitialize+0x20>)
 8008050:	6818      	ldr	r0, [r3, #0]
 8008052:	b928      	cbnz	r0, 8008060 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008054:	2201      	movs	r2, #1
 8008056:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008058:	4770      	bx	lr
    stat = osErrorISR;
 800805a:	f06f 0005 	mvn.w	r0, #5
 800805e:	4770      	bx	lr
    } else {
      stat = osError;
 8008060:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008064:	4770      	bx	lr
 8008066:	bf00      	nop
 8008068:	200034cc 	.word	0x200034cc

0800806c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800806c:	b510      	push	{r4, lr}
 800806e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008072:	b95c      	cbnz	r4, 800808c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008074:	4b08      	ldr	r3, [pc, #32]	; (8008098 <osKernelStart+0x2c>)
 8008076:	681a      	ldr	r2, [r3, #0]
 8008078:	2a01      	cmp	r2, #1
 800807a:	d10a      	bne.n	8008092 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800807c:	4a07      	ldr	r2, [pc, #28]	; (800809c <osKernelStart+0x30>)
 800807e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8008080:	2202      	movs	r2, #2
 8008082:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008084:	f001 fcba 	bl	80099fc <vTaskStartScheduler>
      stat = osOK;
 8008088:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800808a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800808c:	f06f 0005 	mvn.w	r0, #5
 8008090:	e7fb      	b.n	800808a <osKernelStart+0x1e>
      stat = osError;
 8008092:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008096:	e7f8      	b.n	800808a <osKernelStart+0x1e>
 8008098:	200034cc 	.word	0x200034cc
 800809c:	e000ed00 	.word	0xe000ed00

080080a0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80080a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080a2:	b087      	sub	sp, #28
 80080a4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80080a6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80080a8:	460b      	mov	r3, r1
  hTask = NULL;
 80080aa:	9205      	str	r2, [sp, #20]
 80080ac:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80080b0:	b9d2      	cbnz	r2, 80080e8 <osThreadNew+0x48>
 80080b2:	b1c8      	cbz	r0, 80080e8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80080b4:	2c00      	cmp	r4, #0
 80080b6:	d02f      	beq.n	8008118 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80080b8:	69a5      	ldr	r5, [r4, #24]
 80080ba:	2d00      	cmp	r5, #0
 80080bc:	bf08      	it	eq
 80080be:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80080c0:	1e69      	subs	r1, r5, #1
 80080c2:	2937      	cmp	r1, #55	; 0x37
 80080c4:	46ac      	mov	ip, r5
 80080c6:	d82b      	bhi.n	8008120 <osThreadNew+0x80>
 80080c8:	6861      	ldr	r1, [r4, #4]
 80080ca:	07c9      	lsls	r1, r1, #31
 80080cc:	d428      	bmi.n	8008120 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80080ce:	6966      	ldr	r6, [r4, #20]
 80080d0:	b16e      	cbz	r6, 80080ee <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80080d2:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80080d4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80080d8:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80080da:	b157      	cbz	r7, 80080f2 <osThreadNew+0x52>
 80080dc:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80080e0:	d902      	bls.n	80080e8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80080e2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80080e4:	b104      	cbz	r4, 80080e8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80080e6:	b9ee      	cbnz	r6, 8008124 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80080e8:	9805      	ldr	r0, [sp, #20]
}
 80080ea:	b007      	add	sp, #28
 80080ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80080ee:	2280      	movs	r2, #128	; 0x80
 80080f0:	e7f0      	b.n	80080d4 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80080f2:	f1be 0f00 	cmp.w	lr, #0
 80080f6:	d1f7      	bne.n	80080e8 <osThreadNew+0x48>
      if (mem == 0) {
 80080f8:	6924      	ldr	r4, [r4, #16]
 80080fa:	2c00      	cmp	r4, #0
 80080fc:	d1f4      	bne.n	80080e8 <osThreadNew+0x48>
 80080fe:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008100:	a905      	add	r1, sp, #20
 8008102:	e9cd c100 	strd	ip, r1, [sp]
 8008106:	b292      	uxth	r2, r2
 8008108:	4621      	mov	r1, r4
 800810a:	f001 faf2 	bl	80096f2 <xTaskCreate>
 800810e:	2801      	cmp	r0, #1
            hTask = NULL;
 8008110:	bf1c      	itt	ne
 8008112:	2300      	movne	r3, #0
 8008114:	9305      	strne	r3, [sp, #20]
 8008116:	e7e7      	b.n	80080e8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8008118:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800811c:	2280      	movs	r2, #128	; 0x80
 800811e:	e7ef      	b.n	8008100 <osThreadNew+0x60>
        return (NULL);
 8008120:	4610      	mov	r0, r2
 8008122:	e7e2      	b.n	80080ea <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008124:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008128:	9500      	str	r5, [sp, #0]
 800812a:	f001 faaa 	bl	8009682 <xTaskCreateStatic>
 800812e:	9005      	str	r0, [sp, #20]
 8008130:	e7da      	b.n	80080e8 <osThreadNew+0x48>

08008132 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008132:	b510      	push	{r4, lr}
 8008134:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008138:	b924      	cbnz	r4, 8008144 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800813a:	b110      	cbz	r0, 8008142 <osDelay+0x10>
      vTaskDelay(ticks);
 800813c:	f001 fc1e 	bl	800997c <vTaskDelay>
    stat = osOK;
 8008140:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8008142:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008144:	f06f 0005 	mvn.w	r0, #5
 8008148:	e7fb      	b.n	8008142 <osDelay+0x10>

0800814a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800814a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800814c:	4604      	mov	r4, r0
 800814e:	460e      	mov	r6, r1
 8008150:	4615      	mov	r5, r2
 8008152:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008156:	b11a      	cbz	r2, 8008160 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008158:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800815a:	4620      	mov	r0, r4
 800815c:	b003      	add	sp, #12
 800815e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008160:	2800      	cmp	r0, #0
 8008162:	d0f9      	beq.n	8008158 <osSemaphoreNew+0xe>
 8008164:	4288      	cmp	r0, r1
 8008166:	d3f7      	bcc.n	8008158 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8008168:	b1e5      	cbz	r5, 80081a4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800816a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800816e:	b1bb      	cbz	r3, 80081a0 <osSemaphoreNew+0x56>
 8008170:	2f4f      	cmp	r7, #79	; 0x4f
 8008172:	d9f1      	bls.n	8008158 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008174:	2801      	cmp	r0, #1
 8008176:	d12a      	bne.n	80081ce <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008178:	2103      	movs	r1, #3
 800817a:	9100      	str	r1, [sp, #0]
 800817c:	4611      	mov	r1, r2
 800817e:	f000 fcea 	bl	8008b56 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008182:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008184:	2800      	cmp	r0, #0
 8008186:	d0e7      	beq.n	8008158 <osSemaphoreNew+0xe>
 8008188:	b1de      	cbz	r6, 80081c2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800818a:	2300      	movs	r3, #0
 800818c:	461a      	mov	r2, r3
 800818e:	4619      	mov	r1, r3
 8008190:	f000 fd96 	bl	8008cc0 <xQueueGenericSend>
 8008194:	2801      	cmp	r0, #1
 8008196:	d014      	beq.n	80081c2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8008198:	4620      	mov	r0, r4
 800819a:	f001 f8d1 	bl	8009340 <vQueueDelete>
 800819e:	e7db      	b.n	8008158 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80081a0:	2f00      	cmp	r7, #0
 80081a2:	d1d9      	bne.n	8008158 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80081a4:	2c01      	cmp	r4, #1
 80081a6:	d105      	bne.n	80081b4 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80081a8:	2203      	movs	r2, #3
 80081aa:	2100      	movs	r1, #0
 80081ac:	4620      	mov	r0, r4
 80081ae:	f000 fd20 	bl	8008bf2 <xQueueGenericCreate>
 80081b2:	e7e6      	b.n	8008182 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80081b4:	4620      	mov	r0, r4
 80081b6:	4631      	mov	r1, r6
 80081b8:	f000 fd64 	bl	8008c84 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80081bc:	4604      	mov	r4, r0
 80081be:	2800      	cmp	r0, #0
 80081c0:	d0ca      	beq.n	8008158 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80081c2:	b955      	cbnz	r5, 80081da <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80081c4:	4629      	mov	r1, r5
 80081c6:	4620      	mov	r0, r4
 80081c8:	f001 f894 	bl	80092f4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80081cc:	e7c5      	b.n	800815a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80081ce:	461a      	mov	r2, r3
 80081d0:	f000 fd36 	bl	8008c40 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80081d4:	4604      	mov	r4, r0
 80081d6:	2800      	cmp	r0, #0
 80081d8:	d0be      	beq.n	8008158 <osSemaphoreNew+0xe>
          name = attr->name;
 80081da:	682d      	ldr	r5, [r5, #0]
 80081dc:	e7f2      	b.n	80081c4 <osSemaphoreNew+0x7a>

080081de <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80081de:	b513      	push	{r0, r1, r4, lr}
 80081e0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80081e2:	b308      	cbz	r0, 8008228 <osSemaphoreAcquire+0x4a>
 80081e4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80081e8:	b1b3      	cbz	r3, 8008218 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80081ea:	b9e9      	cbnz	r1, 8008228 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80081ec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80081ee:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80081f0:	f001 f831 	bl	8009256 <xQueueReceiveFromISR>
 80081f4:	2801      	cmp	r0, #1
 80081f6:	d114      	bne.n	8008222 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80081f8:	9b01      	ldr	r3, [sp, #4]
 80081fa:	b913      	cbnz	r3, 8008202 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80081fc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80081fe:	b002      	add	sp, #8
 8008200:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8008202:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008206:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800820a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800820e:	f3bf 8f4f 	dsb	sy
 8008212:	f3bf 8f6f 	isb	sy
 8008216:	e7f1      	b.n	80081fc <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008218:	f000 ff5a 	bl	80090d0 <xQueueSemaphoreTake>
 800821c:	2801      	cmp	r0, #1
 800821e:	d0ed      	beq.n	80081fc <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8008220:	b92c      	cbnz	r4, 800822e <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8008222:	f06f 0002 	mvn.w	r0, #2
 8008226:	e7ea      	b.n	80081fe <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8008228:	f06f 0003 	mvn.w	r0, #3
 800822c:	e7e7      	b.n	80081fe <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800822e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008232:	e7e4      	b.n	80081fe <osSemaphoreAcquire+0x20>

08008234 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008234:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008236:	b310      	cbz	r0, 800827e <osSemaphoreRelease+0x4a>
 8008238:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800823c:	b1b3      	cbz	r3, 800826c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800823e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008240:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008242:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008244:	f000 fe51 	bl	8008eea <xQueueGiveFromISR>
 8008248:	2801      	cmp	r0, #1
 800824a:	d115      	bne.n	8008278 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800824c:	9b01      	ldr	r3, [sp, #4]
 800824e:	b913      	cbnz	r3, 8008256 <osSemaphoreRelease+0x22>
  stat = osOK;
 8008250:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8008252:	b002      	add	sp, #8
 8008254:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008256:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800825a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800825e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008262:	f3bf 8f4f 	dsb	sy
 8008266:	f3bf 8f6f 	isb	sy
 800826a:	e7f1      	b.n	8008250 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800826c:	461a      	mov	r2, r3
 800826e:	4619      	mov	r1, r3
 8008270:	f000 fd26 	bl	8008cc0 <xQueueGenericSend>
 8008274:	2801      	cmp	r0, #1
 8008276:	d0eb      	beq.n	8008250 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8008278:	f06f 0002 	mvn.w	r0, #2
 800827c:	e7e9      	b.n	8008252 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800827e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008282:	e7e6      	b.n	8008252 <osSemaphoreRelease+0x1e>

08008284 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008284:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008286:	4605      	mov	r5, r0
 8008288:	460e      	mov	r6, r1
 800828a:	4614      	mov	r4, r2
 800828c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008290:	b11f      	cbz	r7, 800829a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008292:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008294:	4628      	mov	r0, r5
 8008296:	b003      	add	sp, #12
 8008298:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800829a:	2800      	cmp	r0, #0
 800829c:	d0f9      	beq.n	8008292 <osMessageQueueNew+0xe>
 800829e:	2900      	cmp	r1, #0
 80082a0:	d0f7      	beq.n	8008292 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80082a2:	b1da      	cbz	r2, 80082dc <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80082a4:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80082a8:	b183      	cbz	r3, 80082cc <osMessageQueueNew+0x48>
 80082aa:	2a4f      	cmp	r2, #79	; 0x4f
 80082ac:	d9f1      	bls.n	8008292 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80082ae:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80082b0:	2a00      	cmp	r2, #0
 80082b2:	d0ee      	beq.n	8008292 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80082b4:	6966      	ldr	r6, [r4, #20]
 80082b6:	434d      	muls	r5, r1
 80082b8:	42ae      	cmp	r6, r5
 80082ba:	d3ea      	bcc.n	8008292 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80082bc:	9700      	str	r7, [sp, #0]
 80082be:	f000 fc4a 	bl	8008b56 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80082c2:	4605      	mov	r5, r0
 80082c4:	2800      	cmp	r0, #0
 80082c6:	d0e4      	beq.n	8008292 <osMessageQueueNew+0xe>
        name = attr->name;
 80082c8:	6824      	ldr	r4, [r4, #0]
 80082ca:	e011      	b.n	80082f0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80082cc:	2a00      	cmp	r2, #0
 80082ce:	d1e0      	bne.n	8008292 <osMessageQueueNew+0xe>
 80082d0:	6923      	ldr	r3, [r4, #16]
 80082d2:	2b00      	cmp	r3, #0
 80082d4:	d1dd      	bne.n	8008292 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80082d6:	6963      	ldr	r3, [r4, #20]
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d1da      	bne.n	8008292 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80082dc:	4628      	mov	r0, r5
 80082de:	2200      	movs	r2, #0
 80082e0:	4631      	mov	r1, r6
 80082e2:	f000 fc86 	bl	8008bf2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80082e6:	4605      	mov	r5, r0
 80082e8:	2800      	cmp	r0, #0
 80082ea:	d0d2      	beq.n	8008292 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80082ec:	2c00      	cmp	r4, #0
 80082ee:	d1eb      	bne.n	80082c8 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80082f0:	4621      	mov	r1, r4
 80082f2:	4628      	mov	r0, r5
 80082f4:	f000 fffe 	bl	80092f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80082f8:	e7cc      	b.n	8008294 <osMessageQueueNew+0x10>

080082fa <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80082fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80082fc:	461c      	mov	r4, r3
 80082fe:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008302:	b1c6      	cbz	r6, 8008336 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008304:	b318      	cbz	r0, 800834e <osMessageQueuePut+0x54>
 8008306:	b311      	cbz	r1, 800834e <osMessageQueuePut+0x54>
 8008308:	bb0b      	cbnz	r3, 800834e <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800830a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800830c:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800830e:	f000 fd8a 	bl	8008e26 <xQueueGenericSendFromISR>
 8008312:	2801      	cmp	r0, #1
 8008314:	d118      	bne.n	8008348 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008316:	9b01      	ldr	r3, [sp, #4]
 8008318:	b913      	cbnz	r3, 8008320 <osMessageQueuePut+0x26>
  stat = osOK;
 800831a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800831c:	b002      	add	sp, #8
 800831e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008320:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008324:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008328:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800832c:	f3bf 8f4f 	dsb	sy
 8008330:	f3bf 8f6f 	isb	sy
 8008334:	e7f1      	b.n	800831a <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008336:	b150      	cbz	r0, 800834e <osMessageQueuePut+0x54>
 8008338:	b149      	cbz	r1, 800834e <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800833a:	4633      	mov	r3, r6
 800833c:	4622      	mov	r2, r4
 800833e:	f000 fcbf 	bl	8008cc0 <xQueueGenericSend>
 8008342:	2801      	cmp	r0, #1
 8008344:	d0e9      	beq.n	800831a <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008346:	b92c      	cbnz	r4, 8008354 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008348:	f06f 0002 	mvn.w	r0, #2
 800834c:	e7e6      	b.n	800831c <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800834e:	f06f 0003 	mvn.w	r0, #3
 8008352:	e7e3      	b.n	800831c <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8008354:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008358:	e7e0      	b.n	800831c <osMessageQueuePut+0x22>

0800835a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800835a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800835c:	461c      	mov	r4, r3
 800835e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008362:	b1c3      	cbz	r3, 8008396 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008364:	b310      	cbz	r0, 80083ac <osMessageQueueGet+0x52>
 8008366:	b309      	cbz	r1, 80083ac <osMessageQueueGet+0x52>
 8008368:	bb04      	cbnz	r4, 80083ac <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800836a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800836c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800836e:	f000 ff72 	bl	8009256 <xQueueReceiveFromISR>
 8008372:	2801      	cmp	r0, #1
 8008374:	d117      	bne.n	80083a6 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008376:	9b01      	ldr	r3, [sp, #4]
 8008378:	b913      	cbnz	r3, 8008380 <osMessageQueueGet+0x26>
  stat = osOK;
 800837a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800837c:	b003      	add	sp, #12
 800837e:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008380:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008384:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008388:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800838c:	f3bf 8f4f 	dsb	sy
 8008390:	f3bf 8f6f 	isb	sy
 8008394:	e7f1      	b.n	800837a <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008396:	b148      	cbz	r0, 80083ac <osMessageQueueGet+0x52>
 8008398:	b141      	cbz	r1, 80083ac <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800839a:	4622      	mov	r2, r4
 800839c:	f000 fdf9 	bl	8008f92 <xQueueReceive>
 80083a0:	2801      	cmp	r0, #1
 80083a2:	d0ea      	beq.n	800837a <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80083a4:	b92c      	cbnz	r4, 80083b2 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 80083a6:	f06f 0002 	mvn.w	r0, #2
 80083aa:	e7e7      	b.n	800837c <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80083ac:	f06f 0003 	mvn.w	r0, #3
 80083b0:	e7e4      	b.n	800837c <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80083b2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80083b6:	e7e1      	b.n	800837c <osMessageQueueGet+0x22>

080083b8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80083b8:	4b03      	ldr	r3, [pc, #12]	; (80083c8 <vApplicationGetIdleTaskMemory+0x10>)
 80083ba:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80083bc:	4b03      	ldr	r3, [pc, #12]	; (80083cc <vApplicationGetIdleTaskMemory+0x14>)
 80083be:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80083c0:	2380      	movs	r3, #128	; 0x80
 80083c2:	6013      	str	r3, [r2, #0]
}
 80083c4:	4770      	bx	lr
 80083c6:	bf00      	nop
 80083c8:	2000346c 	.word	0x2000346c
 80083cc:	2000326c 	.word	0x2000326c

080083d0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80083d0:	4b03      	ldr	r3, [pc, #12]	; (80083e0 <vApplicationGetTimerTaskMemory+0x10>)
 80083d2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80083d4:	4b03      	ldr	r3, [pc, #12]	; (80083e4 <vApplicationGetTimerTaskMemory+0x14>)
 80083d6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80083d8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80083dc:	6013      	str	r3, [r2, #0]
}
 80083de:	4770      	bx	lr
 80083e0:	200038d0 	.word	0x200038d0
 80083e4:	200034d0 	.word	0x200034d0

080083e8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80083e8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80083ea:	4b0f      	ldr	r3, [pc, #60]	; (8008428 <prvInsertBlockIntoFreeList+0x40>)
 80083ec:	461a      	mov	r2, r3
 80083ee:	681b      	ldr	r3, [r3, #0]
 80083f0:	4283      	cmp	r3, r0
 80083f2:	d3fb      	bcc.n	80083ec <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80083f4:	6854      	ldr	r4, [r2, #4]
 80083f6:	1911      	adds	r1, r2, r4
 80083f8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80083fa:	bf01      	itttt	eq
 80083fc:	6841      	ldreq	r1, [r0, #4]
 80083fe:	4610      	moveq	r0, r2
 8008400:	1909      	addeq	r1, r1, r4
 8008402:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008404:	6844      	ldr	r4, [r0, #4]
 8008406:	1901      	adds	r1, r0, r4
 8008408:	428b      	cmp	r3, r1
 800840a:	d107      	bne.n	800841c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800840c:	4907      	ldr	r1, [pc, #28]	; (800842c <prvInsertBlockIntoFreeList+0x44>)
 800840e:	6809      	ldr	r1, [r1, #0]
 8008410:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008412:	bf1f      	itttt	ne
 8008414:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008416:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008418:	1909      	addne	r1, r1, r4
 800841a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800841c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800841e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008420:	bf18      	it	ne
 8008422:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008424:	bd10      	pop	{r4, pc}
 8008426:	bf00      	nop
 8008428:	2000b948 	.word	0x2000b948
 800842c:	20003930 	.word	0x20003930

08008430 <pvPortMalloc>:
{
 8008430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008434:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008436:	f001 f989 	bl	800974c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800843a:	4842      	ldr	r0, [pc, #264]	; (8008544 <pvPortMalloc+0x114>)
 800843c:	4d42      	ldr	r5, [pc, #264]	; (8008548 <pvPortMalloc+0x118>)
 800843e:	6803      	ldr	r3, [r0, #0]
 8008440:	bb0b      	cbnz	r3, 8008486 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008442:	4942      	ldr	r1, [pc, #264]	; (800854c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008444:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008446:	bf1f      	itttt	ne
 8008448:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800844a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800844e:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8008452:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008454:	bf14      	ite	ne
 8008456:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008458:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800845c:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800845e:	4e3c      	ldr	r6, [pc, #240]	; (8008550 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008460:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008462:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008466:	2300      	movs	r3, #0
 8008468:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800846a:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800846c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008470:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008472:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008476:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008478:	4a36      	ldr	r2, [pc, #216]	; (8008554 <pvPortMalloc+0x124>)
 800847a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800847c:	4a36      	ldr	r2, [pc, #216]	; (8008558 <pvPortMalloc+0x128>)
 800847e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008480:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008484:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008486:	682f      	ldr	r7, [r5, #0]
 8008488:	4227      	tst	r7, r4
 800848a:	d155      	bne.n	8008538 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800848c:	2c00      	cmp	r4, #0
 800848e:	d046      	beq.n	800851e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008490:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008494:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008496:	bf1c      	itt	ne
 8008498:	f023 0307 	bicne.w	r3, r3, #7
 800849c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800849e:	2b00      	cmp	r3, #0
 80084a0:	d04a      	beq.n	8008538 <pvPortMalloc+0x108>
 80084a2:	4c2d      	ldr	r4, [pc, #180]	; (8008558 <pvPortMalloc+0x128>)
 80084a4:	6826      	ldr	r6, [r4, #0]
 80084a6:	429e      	cmp	r6, r3
 80084a8:	d346      	bcc.n	8008538 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80084aa:	4a29      	ldr	r2, [pc, #164]	; (8008550 <pvPortMalloc+0x120>)
 80084ac:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80084ae:	6869      	ldr	r1, [r5, #4]
 80084b0:	4299      	cmp	r1, r3
 80084b2:	d204      	bcs.n	80084be <pvPortMalloc+0x8e>
 80084b4:	f8d5 c000 	ldr.w	ip, [r5]
 80084b8:	f1bc 0f00 	cmp.w	ip, #0
 80084bc:	d115      	bne.n	80084ea <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80084be:	6800      	ldr	r0, [r0, #0]
 80084c0:	42a8      	cmp	r0, r5
 80084c2:	d039      	beq.n	8008538 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80084c4:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80084c6:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80084c8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80084cc:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80084ce:	2910      	cmp	r1, #16
 80084d0:	d912      	bls.n	80084f8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80084d2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80084d4:	0742      	lsls	r2, r0, #29
 80084d6:	d00b      	beq.n	80084f0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80084d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084dc:	f383 8811 	msr	BASEPRI, r3
 80084e0:	f3bf 8f6f 	isb	sy
 80084e4:	f3bf 8f4f 	dsb	sy
 80084e8:	e7fe      	b.n	80084e8 <pvPortMalloc+0xb8>
 80084ea:	462a      	mov	r2, r5
 80084ec:	4665      	mov	r5, ip
 80084ee:	e7de      	b.n	80084ae <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80084f0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80084f2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80084f4:	f7ff ff78 	bl	80083e8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80084f8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80084fa:	4916      	ldr	r1, [pc, #88]	; (8008554 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 80084fc:	4a17      	ldr	r2, [pc, #92]	; (800855c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80084fe:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008500:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008502:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8008504:	2300      	movs	r3, #0
 8008506:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8008508:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800850a:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800850c:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800850e:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008512:	bf38      	it	cc
 8008514:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008516:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800851a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800851c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800851e:	f001 f9b9 	bl	8009894 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008522:	0763      	lsls	r3, r4, #29
 8008524:	d00a      	beq.n	800853c <pvPortMalloc+0x10c>
 8008526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800852a:	f383 8811 	msr	BASEPRI, r3
 800852e:	f3bf 8f6f 	isb	sy
 8008532:	f3bf 8f4f 	dsb	sy
 8008536:	e7fe      	b.n	8008536 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008538:	2400      	movs	r4, #0
 800853a:	e7f0      	b.n	800851e <pvPortMalloc+0xee>
}
 800853c:	4620      	mov	r0, r4
 800853e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008542:	bf00      	nop
 8008544:	20003930 	.word	0x20003930
 8008548:	2000b934 	.word	0x2000b934
 800854c:	20003934 	.word	0x20003934
 8008550:	2000b948 	.word	0x2000b948
 8008554:	2000b93c 	.word	0x2000b93c
 8008558:	2000b938 	.word	0x2000b938
 800855c:	2000b940 	.word	0x2000b940

08008560 <vPortFree>:
{
 8008560:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008562:	4604      	mov	r4, r0
 8008564:	b390      	cbz	r0, 80085cc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008566:	4a1a      	ldr	r2, [pc, #104]	; (80085d0 <vPortFree+0x70>)
 8008568:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800856c:	6812      	ldr	r2, [r2, #0]
 800856e:	4213      	tst	r3, r2
 8008570:	d108      	bne.n	8008584 <vPortFree+0x24>
 8008572:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008576:	f383 8811 	msr	BASEPRI, r3
 800857a:	f3bf 8f6f 	isb	sy
 800857e:	f3bf 8f4f 	dsb	sy
 8008582:	e7fe      	b.n	8008582 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008584:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008588:	b141      	cbz	r1, 800859c <vPortFree+0x3c>
 800858a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800858e:	f383 8811 	msr	BASEPRI, r3
 8008592:	f3bf 8f6f 	isb	sy
 8008596:	f3bf 8f4f 	dsb	sy
 800859a:	e7fe      	b.n	800859a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800859c:	ea23 0302 	bic.w	r3, r3, r2
 80085a0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80085a4:	f001 f8d2 	bl	800974c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80085a8:	4a0a      	ldr	r2, [pc, #40]	; (80085d4 <vPortFree+0x74>)
 80085aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80085ae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80085b0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80085b4:	440b      	add	r3, r1
 80085b6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80085b8:	f7ff ff16 	bl	80083e8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80085bc:	4a06      	ldr	r2, [pc, #24]	; (80085d8 <vPortFree+0x78>)
 80085be:	6813      	ldr	r3, [r2, #0]
}
 80085c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80085c4:	3301      	adds	r3, #1
 80085c6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80085c8:	f001 b964 	b.w	8009894 <xTaskResumeAll>
}
 80085cc:	bd10      	pop	{r4, pc}
 80085ce:	bf00      	nop
 80085d0:	2000b934 	.word	0x2000b934
 80085d4:	2000b938 	.word	0x2000b938
 80085d8:	2000b944 	.word	0x2000b944

080085dc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085dc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80085e0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085e4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085e8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80085ea:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80085ec:	2300      	movs	r3, #0
 80085ee:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80085f0:	4770      	bx	lr

080085f2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80085f2:	2300      	movs	r3, #0
 80085f4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80085f6:	4770      	bx	lr

080085f8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80085f8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80085fa:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80085fc:	689a      	ldr	r2, [r3, #8]
 80085fe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008600:	689a      	ldr	r2, [r3, #8]
 8008602:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008604:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008606:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008608:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800860a:	3301      	adds	r3, #1
 800860c:	6003      	str	r3, [r0, #0]
}
 800860e:	4770      	bx	lr

08008610 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008610:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008612:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008614:	1c63      	adds	r3, r4, #1
 8008616:	d10a      	bne.n	800862e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008618:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800861a:	685a      	ldr	r2, [r3, #4]
 800861c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800861e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008620:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008622:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008624:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008626:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008628:	3301      	adds	r3, #1
 800862a:	6003      	str	r3, [r0, #0]
}
 800862c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800862e:	f100 0208 	add.w	r2, r0, #8
 8008632:	4613      	mov	r3, r2
 8008634:	6852      	ldr	r2, [r2, #4]
 8008636:	6815      	ldr	r5, [r2, #0]
 8008638:	42a5      	cmp	r5, r4
 800863a:	d9fa      	bls.n	8008632 <vListInsert+0x22>
 800863c:	e7ed      	b.n	800861a <vListInsert+0xa>

0800863e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800863e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008642:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008644:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008646:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008648:	6859      	ldr	r1, [r3, #4]
 800864a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800864c:	bf08      	it	eq
 800864e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008650:	2200      	movs	r2, #0
 8008652:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008654:	681a      	ldr	r2, [r3, #0]
 8008656:	3a01      	subs	r2, #1
 8008658:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800865a:	6818      	ldr	r0, [r3, #0]
}
 800865c:	4770      	bx	lr
	...

08008660 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008660:	4808      	ldr	r0, [pc, #32]	; (8008684 <prvPortStartFirstTask+0x24>)
 8008662:	6800      	ldr	r0, [r0, #0]
 8008664:	6800      	ldr	r0, [r0, #0]
 8008666:	f380 8808 	msr	MSP, r0
 800866a:	f04f 0000 	mov.w	r0, #0
 800866e:	f380 8814 	msr	CONTROL, r0
 8008672:	b662      	cpsie	i
 8008674:	b661      	cpsie	f
 8008676:	f3bf 8f4f 	dsb	sy
 800867a:	f3bf 8f6f 	isb	sy
 800867e:	df00      	svc	0
 8008680:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008682:	0000      	.short	0x0000
 8008684:	e000ed08 	.word	0xe000ed08

08008688 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008688:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008698 <vPortEnableVFP+0x10>
 800868c:	6801      	ldr	r1, [r0, #0]
 800868e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008692:	6001      	str	r1, [r0, #0]
 8008694:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008696:	0000      	.short	0x0000
 8008698:	e000ed88 	.word	0xe000ed88

0800869c <prvTaskExitError>:
{
 800869c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800869e:	2300      	movs	r3, #0
 80086a0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80086a2:	4b0d      	ldr	r3, [pc, #52]	; (80086d8 <prvTaskExitError+0x3c>)
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	3301      	adds	r3, #1
 80086a8:	d008      	beq.n	80086bc <prvTaskExitError+0x20>
 80086aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ae:	f383 8811 	msr	BASEPRI, r3
 80086b2:	f3bf 8f6f 	isb	sy
 80086b6:	f3bf 8f4f 	dsb	sy
 80086ba:	e7fe      	b.n	80086ba <prvTaskExitError+0x1e>
 80086bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086c0:	f383 8811 	msr	BASEPRI, r3
 80086c4:	f3bf 8f6f 	isb	sy
 80086c8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80086cc:	9b01      	ldr	r3, [sp, #4]
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	d0fc      	beq.n	80086cc <prvTaskExitError+0x30>
}
 80086d2:	b002      	add	sp, #8
 80086d4:	4770      	bx	lr
 80086d6:	bf00      	nop
 80086d8:	2000005c 	.word	0x2000005c

080086dc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80086dc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80086e0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80086e4:	4b07      	ldr	r3, [pc, #28]	; (8008704 <pxPortInitialiseStack+0x28>)
 80086e6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80086ea:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80086ee:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80086f2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80086f6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80086fa:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80086fe:	3844      	subs	r0, #68	; 0x44
 8008700:	4770      	bx	lr
 8008702:	bf00      	nop
 8008704:	0800869d 	.word	0x0800869d
	...

08008710 <SVC_Handler>:
	__asm volatile (
 8008710:	4b07      	ldr	r3, [pc, #28]	; (8008730 <pxCurrentTCBConst2>)
 8008712:	6819      	ldr	r1, [r3, #0]
 8008714:	6808      	ldr	r0, [r1, #0]
 8008716:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800871a:	f380 8809 	msr	PSP, r0
 800871e:	f3bf 8f6f 	isb	sy
 8008722:	f04f 0000 	mov.w	r0, #0
 8008726:	f380 8811 	msr	BASEPRI, r0
 800872a:	4770      	bx	lr
 800872c:	f3af 8000 	nop.w

08008730 <pxCurrentTCBConst2>:
 8008730:	2000b998 	.word	0x2000b998

08008734 <vPortEnterCritical>:
 8008734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008738:	f383 8811 	msr	BASEPRI, r3
 800873c:	f3bf 8f6f 	isb	sy
 8008740:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008744:	4a0a      	ldr	r2, [pc, #40]	; (8008770 <vPortEnterCritical+0x3c>)
 8008746:	6813      	ldr	r3, [r2, #0]
 8008748:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800874a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800874c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800874e:	d10e      	bne.n	800876e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008750:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008754:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008758:	b2db      	uxtb	r3, r3
 800875a:	b143      	cbz	r3, 800876e <vPortEnterCritical+0x3a>
 800875c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008760:	f383 8811 	msr	BASEPRI, r3
 8008764:	f3bf 8f6f 	isb	sy
 8008768:	f3bf 8f4f 	dsb	sy
 800876c:	e7fe      	b.n	800876c <vPortEnterCritical+0x38>
}
 800876e:	4770      	bx	lr
 8008770:	2000005c 	.word	0x2000005c

08008774 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008774:	4a08      	ldr	r2, [pc, #32]	; (8008798 <vPortExitCritical+0x24>)
 8008776:	6813      	ldr	r3, [r2, #0]
 8008778:	b943      	cbnz	r3, 800878c <vPortExitCritical+0x18>
 800877a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800877e:	f383 8811 	msr	BASEPRI, r3
 8008782:	f3bf 8f6f 	isb	sy
 8008786:	f3bf 8f4f 	dsb	sy
 800878a:	e7fe      	b.n	800878a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800878c:	3b01      	subs	r3, #1
 800878e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008790:	b90b      	cbnz	r3, 8008796 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008792:	f383 8811 	msr	BASEPRI, r3
}
 8008796:	4770      	bx	lr
 8008798:	2000005c 	.word	0x2000005c
 800879c:	00000000 	.word	0x00000000

080087a0 <PendSV_Handler>:
	__asm volatile
 80087a0:	f3ef 8009 	mrs	r0, PSP
 80087a4:	f3bf 8f6f 	isb	sy
 80087a8:	4b15      	ldr	r3, [pc, #84]	; (8008800 <pxCurrentTCBConst>)
 80087aa:	681a      	ldr	r2, [r3, #0]
 80087ac:	f01e 0f10 	tst.w	lr, #16
 80087b0:	bf08      	it	eq
 80087b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80087b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087ba:	6010      	str	r0, [r2, #0]
 80087bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80087c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80087c4:	f380 8811 	msr	BASEPRI, r0
 80087c8:	f3bf 8f4f 	dsb	sy
 80087cc:	f3bf 8f6f 	isb	sy
 80087d0:	f001 f962 	bl	8009a98 <vTaskSwitchContext>
 80087d4:	f04f 0000 	mov.w	r0, #0
 80087d8:	f380 8811 	msr	BASEPRI, r0
 80087dc:	bc09      	pop	{r0, r3}
 80087de:	6819      	ldr	r1, [r3, #0]
 80087e0:	6808      	ldr	r0, [r1, #0]
 80087e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087e6:	f01e 0f10 	tst.w	lr, #16
 80087ea:	bf08      	it	eq
 80087ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80087f0:	f380 8809 	msr	PSP, r0
 80087f4:	f3bf 8f6f 	isb	sy
 80087f8:	4770      	bx	lr
 80087fa:	bf00      	nop
 80087fc:	f3af 8000 	nop.w

08008800 <pxCurrentTCBConst>:
 8008800:	2000b998 	.word	0x2000b998

08008804 <xPortSysTickHandler>:
{
 8008804:	b508      	push	{r3, lr}
	__asm volatile
 8008806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800880a:	f383 8811 	msr	BASEPRI, r3
 800880e:	f3bf 8f6f 	isb	sy
 8008812:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008816:	f000 ffa7 	bl	8009768 <xTaskIncrementTick>
 800881a:	b128      	cbz	r0, 8008828 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800881c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008820:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008824:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008828:	2300      	movs	r3, #0
 800882a:	f383 8811 	msr	BASEPRI, r3
}
 800882e:	bd08      	pop	{r3, pc}

08008830 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008830:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008834:	2300      	movs	r3, #0
 8008836:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008838:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800883a:	4b05      	ldr	r3, [pc, #20]	; (8008850 <vPortSetupTimerInterrupt+0x20>)
 800883c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008840:	681b      	ldr	r3, [r3, #0]
 8008842:	fbb3 f3f1 	udiv	r3, r3, r1
 8008846:	3b01      	subs	r3, #1
 8008848:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800884a:	2307      	movs	r3, #7
 800884c:	6113      	str	r3, [r2, #16]
}
 800884e:	4770      	bx	lr
 8008850:	20000050 	.word	0x20000050

08008854 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008854:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008858:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800885a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800885e:	4a3a      	ldr	r2, [pc, #232]	; (8008948 <xPortStartScheduler+0xf4>)
 8008860:	4291      	cmp	r1, r2
 8008862:	d108      	bne.n	8008876 <xPortStartScheduler+0x22>
	__asm volatile
 8008864:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008868:	f383 8811 	msr	BASEPRI, r3
 800886c:	f3bf 8f6f 	isb	sy
 8008870:	f3bf 8f4f 	dsb	sy
 8008874:	e7fe      	b.n	8008874 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008876:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800887a:	4b34      	ldr	r3, [pc, #208]	; (800894c <xPortStartScheduler+0xf8>)
 800887c:	429a      	cmp	r2, r3
 800887e:	d108      	bne.n	8008892 <xPortStartScheduler+0x3e>
 8008880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008892:	4b2f      	ldr	r3, [pc, #188]	; (8008950 <xPortStartScheduler+0xfc>)
 8008894:	781a      	ldrb	r2, [r3, #0]
 8008896:	b2d2      	uxtb	r2, r2
 8008898:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800889a:	22ff      	movs	r2, #255	; 0xff
 800889c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800889e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80088a0:	4a2c      	ldr	r2, [pc, #176]	; (8008954 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80088a2:	b2db      	uxtb	r3, r3
 80088a4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80088a8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80088ac:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80088b0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80088b2:	4a29      	ldr	r2, [pc, #164]	; (8008958 <xPortStartScheduler+0x104>)
 80088b4:	2307      	movs	r3, #7
 80088b6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80088b8:	2100      	movs	r1, #0
 80088ba:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80088be:	0600      	lsls	r0, r0, #24
 80088c0:	f103 34ff 	add.w	r4, r3, #4294967295
 80088c4:	d40c      	bmi.n	80088e0 <xPortStartScheduler+0x8c>
 80088c6:	b111      	cbz	r1, 80088ce <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80088c8:	2b03      	cmp	r3, #3
 80088ca:	6013      	str	r3, [r2, #0]
 80088cc:	d011      	beq.n	80088f2 <xPortStartScheduler+0x9e>
 80088ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d2:	f383 8811 	msr	BASEPRI, r3
 80088d6:	f3bf 8f6f 	isb	sy
 80088da:	f3bf 8f4f 	dsb	sy
 80088de:	e7fe      	b.n	80088de <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80088e0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80088e4:	005b      	lsls	r3, r3, #1
 80088e6:	b2db      	uxtb	r3, r3
 80088e8:	f88d 3003 	strb.w	r3, [sp, #3]
 80088ec:	2101      	movs	r1, #1
 80088ee:	4623      	mov	r3, r4
 80088f0:	e7e3      	b.n	80088ba <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80088f2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80088f6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80088f8:	9b01      	ldr	r3, [sp, #4]
 80088fa:	4a15      	ldr	r2, [pc, #84]	; (8008950 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80088fc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008900:	b2db      	uxtb	r3, r3
 8008902:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008904:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008908:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800890c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008910:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008914:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008918:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800891c:	f7ff ff88 	bl	8008830 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008920:	4b0e      	ldr	r3, [pc, #56]	; (800895c <xPortStartScheduler+0x108>)
 8008922:	2500      	movs	r5, #0
 8008924:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008926:	f7ff feaf 	bl	8008688 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800892a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800892e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008932:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008936:	f7ff fe93 	bl	8008660 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800893a:	f001 f8ad 	bl	8009a98 <vTaskSwitchContext>
	prvTaskExitError();
 800893e:	f7ff fead 	bl	800869c <prvTaskExitError>
}
 8008942:	4628      	mov	r0, r5
 8008944:	b003      	add	sp, #12
 8008946:	bd30      	pop	{r4, r5, pc}
 8008948:	410fc271 	.word	0x410fc271
 800894c:	410fc270 	.word	0x410fc270
 8008950:	e000e400 	.word	0xe000e400
 8008954:	2000b950 	.word	0x2000b950
 8008958:	2000b954 	.word	0x2000b954
 800895c:	2000005c 	.word	0x2000005c

08008960 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008960:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008964:	2b0f      	cmp	r3, #15
 8008966:	d90e      	bls.n	8008986 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008968:	4a11      	ldr	r2, [pc, #68]	; (80089b0 <vPortValidateInterruptPriority+0x50>)
 800896a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800896c:	4a11      	ldr	r2, [pc, #68]	; (80089b4 <vPortValidateInterruptPriority+0x54>)
 800896e:	7812      	ldrb	r2, [r2, #0]
 8008970:	429a      	cmp	r2, r3
 8008972:	d908      	bls.n	8008986 <vPortValidateInterruptPriority+0x26>
 8008974:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008978:	f383 8811 	msr	BASEPRI, r3
 800897c:	f3bf 8f6f 	isb	sy
 8008980:	f3bf 8f4f 	dsb	sy
 8008984:	e7fe      	b.n	8008984 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008986:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800898a:	4a0b      	ldr	r2, [pc, #44]	; (80089b8 <vPortValidateInterruptPriority+0x58>)
 800898c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008990:	6812      	ldr	r2, [r2, #0]
 8008992:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008996:	4293      	cmp	r3, r2
 8008998:	d908      	bls.n	80089ac <vPortValidateInterruptPriority+0x4c>
 800899a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800899e:	f383 8811 	msr	BASEPRI, r3
 80089a2:	f3bf 8f6f 	isb	sy
 80089a6:	f3bf 8f4f 	dsb	sy
 80089aa:	e7fe      	b.n	80089aa <vPortValidateInterruptPriority+0x4a>
	}
 80089ac:	4770      	bx	lr
 80089ae:	bf00      	nop
 80089b0:	e000e3f0 	.word	0xe000e3f0
 80089b4:	2000b950 	.word	0x2000b950
 80089b8:	2000b954 	.word	0x2000b954

080089bc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80089bc:	b510      	push	{r4, lr}
 80089be:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80089c0:	f7ff feb8 	bl	8008734 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80089c4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80089c6:	f7ff fed5 	bl	8008774 <vPortExitCritical>

	return xReturn;
}
 80089ca:	fab4 f084 	clz	r0, r4
 80089ce:	0940      	lsrs	r0, r0, #5
 80089d0:	bd10      	pop	{r4, pc}

080089d2 <prvCopyDataToQueue>:
{
 80089d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80089d4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80089d6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80089d8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80089da:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80089dc:	b952      	cbnz	r2, 80089f4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80089de:	6807      	ldr	r7, [r0, #0]
 80089e0:	bb47      	cbnz	r7, 8008a34 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80089e2:	6880      	ldr	r0, [r0, #8]
 80089e4:	f001 f9b8 	bl	8009d58 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80089e8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80089ea:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80089ec:	3601      	adds	r6, #1
 80089ee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80089f0:	4628      	mov	r0, r5
 80089f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80089f4:	b965      	cbnz	r5, 8008a10 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80089f6:	6840      	ldr	r0, [r0, #4]
 80089f8:	f014 fe5a 	bl	801d6b0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80089fc:	6863      	ldr	r3, [r4, #4]
 80089fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008a00:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a02:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a04:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a06:	4293      	cmp	r3, r2
 8008a08:	d3f0      	bcc.n	80089ec <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008a0a:	6823      	ldr	r3, [r4, #0]
 8008a0c:	6063      	str	r3, [r4, #4]
 8008a0e:	e7ed      	b.n	80089ec <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008a10:	68c0      	ldr	r0, [r0, #12]
 8008a12:	f014 fe4d 	bl	801d6b0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008a16:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008a18:	68e3      	ldr	r3, [r4, #12]
 8008a1a:	4251      	negs	r1, r2
 8008a1c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a1e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008a20:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008a22:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008a24:	bf3e      	ittt	cc
 8008a26:	68a3      	ldrcc	r3, [r4, #8]
 8008a28:	185b      	addcc	r3, r3, r1
 8008a2a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008a2c:	2d02      	cmp	r5, #2
 8008a2e:	d101      	bne.n	8008a34 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008a30:	b116      	cbz	r6, 8008a38 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008a32:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008a34:	2500      	movs	r5, #0
 8008a36:	e7d9      	b.n	80089ec <prvCopyDataToQueue+0x1a>
 8008a38:	4635      	mov	r5, r6
 8008a3a:	e7d7      	b.n	80089ec <prvCopyDataToQueue+0x1a>

08008a3c <prvCopyDataFromQueue>:
{
 8008a3c:	4603      	mov	r3, r0
 8008a3e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008a40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008a42:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008a44:	b16a      	cbz	r2, 8008a62 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a46:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008a48:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a4a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008a4c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008a4e:	bf28      	it	cs
 8008a50:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008a52:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008a54:	bf28      	it	cs
 8008a56:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008a58:	68d9      	ldr	r1, [r3, #12]
}
 8008a5a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008a5e:	f014 be27 	b.w	801d6b0 <memcpy>
}
 8008a62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a66:	4770      	bx	lr

08008a68 <prvUnlockQueue>:
{
 8008a68:	b570      	push	{r4, r5, r6, lr}
 8008a6a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008a6c:	f7ff fe62 	bl	8008734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008a70:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a74:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008a78:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008a7a:	2d00      	cmp	r5, #0
 8008a7c:	dc14      	bgt.n	8008aa8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008a7e:	23ff      	movs	r3, #255	; 0xff
 8008a80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008a84:	f7ff fe76 	bl	8008774 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008a88:	f7ff fe54 	bl	8008734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008a8c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008a90:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008a94:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008a96:	2d00      	cmp	r5, #0
 8008a98:	dc12      	bgt.n	8008ac0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008a9a:	23ff      	movs	r3, #255	; 0xff
 8008a9c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008aa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008aa4:	f7ff be66 	b.w	8008774 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008aa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008aaa:	2b00      	cmp	r3, #0
 8008aac:	d0e7      	beq.n	8008a7e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008aae:	4630      	mov	r0, r6
 8008ab0:	f001 f86e 	bl	8009b90 <xTaskRemoveFromEventList>
 8008ab4:	b108      	cbz	r0, 8008aba <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008ab6:	f001 f8f7 	bl	8009ca8 <vTaskMissedYield>
			--cTxLock;
 8008aba:	3d01      	subs	r5, #1
 8008abc:	b26d      	sxtb	r5, r5
 8008abe:	e7dc      	b.n	8008a7a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ac0:	6923      	ldr	r3, [r4, #16]
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	d0e9      	beq.n	8008a9a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ac6:	4630      	mov	r0, r6
 8008ac8:	f001 f862 	bl	8009b90 <xTaskRemoveFromEventList>
 8008acc:	b108      	cbz	r0, 8008ad2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008ace:	f001 f8eb 	bl	8009ca8 <vTaskMissedYield>
				--cRxLock;
 8008ad2:	3d01      	subs	r5, #1
 8008ad4:	b26d      	sxtb	r5, r5
 8008ad6:	e7de      	b.n	8008a96 <prvUnlockQueue+0x2e>

08008ad8 <xQueueGenericReset>:
{
 8008ad8:	b538      	push	{r3, r4, r5, lr}
 8008ada:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008adc:	4604      	mov	r4, r0
 8008ade:	b940      	cbnz	r0, 8008af2 <xQueueGenericReset+0x1a>
 8008ae0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ae4:	f383 8811 	msr	BASEPRI, r3
 8008ae8:	f3bf 8f6f 	isb	sy
 8008aec:	f3bf 8f4f 	dsb	sy
 8008af0:	e7fe      	b.n	8008af0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008af2:	f7ff fe1f 	bl	8008734 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008af6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8008afa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008afc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008afe:	434b      	muls	r3, r1
 8008b00:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b02:	1a5b      	subs	r3, r3, r1
 8008b04:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b06:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b08:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008b0a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008b0c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008b0e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008b10:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008b14:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008b18:	b9a5      	cbnz	r5, 8008b44 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008b1a:	6923      	ldr	r3, [r4, #16]
 8008b1c:	b173      	cbz	r3, 8008b3c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b1e:	f104 0010 	add.w	r0, r4, #16
 8008b22:	f001 f835 	bl	8009b90 <xTaskRemoveFromEventList>
 8008b26:	b148      	cbz	r0, 8008b3c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008b28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b30:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b34:	f3bf 8f4f 	dsb	sy
 8008b38:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008b3c:	f7ff fe1a 	bl	8008774 <vPortExitCritical>
}
 8008b40:	2001      	movs	r0, #1
 8008b42:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008b44:	f104 0010 	add.w	r0, r4, #16
 8008b48:	f7ff fd48 	bl	80085dc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008b4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008b50:	f7ff fd44 	bl	80085dc <vListInitialise>
 8008b54:	e7f2      	b.n	8008b3c <xQueueGenericReset+0x64>

08008b56 <xQueueGenericCreateStatic>:
	{
 8008b56:	b513      	push	{r0, r1, r4, lr}
 8008b58:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008b5a:	b940      	cbnz	r0, 8008b6e <xQueueGenericCreateStatic+0x18>
 8008b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b60:	f383 8811 	msr	BASEPRI, r3
 8008b64:	f3bf 8f6f 	isb	sy
 8008b68:	f3bf 8f4f 	dsb	sy
 8008b6c:	e7fe      	b.n	8008b6c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8008b6e:	b943      	cbnz	r3, 8008b82 <xQueueGenericCreateStatic+0x2c>
 8008b70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b74:	f383 8811 	msr	BASEPRI, r3
 8008b78:	f3bf 8f6f 	isb	sy
 8008b7c:	f3bf 8f4f 	dsb	sy
 8008b80:	e7fe      	b.n	8008b80 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008b82:	b14a      	cbz	r2, 8008b98 <xQueueGenericCreateStatic+0x42>
 8008b84:	b991      	cbnz	r1, 8008bac <xQueueGenericCreateStatic+0x56>
 8008b86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b8a:	f383 8811 	msr	BASEPRI, r3
 8008b8e:	f3bf 8f6f 	isb	sy
 8008b92:	f3bf 8f4f 	dsb	sy
 8008b96:	e7fe      	b.n	8008b96 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008b98:	b141      	cbz	r1, 8008bac <xQueueGenericCreateStatic+0x56>
 8008b9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b9e:	f383 8811 	msr	BASEPRI, r3
 8008ba2:	f3bf 8f6f 	isb	sy
 8008ba6:	f3bf 8f4f 	dsb	sy
 8008baa:	e7fe      	b.n	8008baa <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008bac:	2350      	movs	r3, #80	; 0x50
 8008bae:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008bb0:	9b01      	ldr	r3, [sp, #4]
 8008bb2:	2b50      	cmp	r3, #80	; 0x50
 8008bb4:	d008      	beq.n	8008bc8 <xQueueGenericCreateStatic+0x72>
 8008bb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bba:	f383 8811 	msr	BASEPRI, r3
 8008bbe:	f3bf 8f6f 	isb	sy
 8008bc2:	f3bf 8f4f 	dsb	sy
 8008bc6:	e7fe      	b.n	8008bc6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008bc8:	2900      	cmp	r1, #0
 8008bca:	bf08      	it	eq
 8008bcc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008bce:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008bd0:	6022      	str	r2, [r4, #0]
 8008bd2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008bd4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008bd8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008bdc:	4619      	mov	r1, r3
 8008bde:	4620      	mov	r0, r4
 8008be0:	f7ff ff7a 	bl	8008ad8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008be4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008be8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8008bec:	4620      	mov	r0, r4
 8008bee:	b002      	add	sp, #8
 8008bf0:	bd10      	pop	{r4, pc}

08008bf2 <xQueueGenericCreate>:
	{
 8008bf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008bf4:	460d      	mov	r5, r1
 8008bf6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008bf8:	4606      	mov	r6, r0
 8008bfa:	b940      	cbnz	r0, 8008c0e <xQueueGenericCreate+0x1c>
 8008bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c00:	f383 8811 	msr	BASEPRI, r3
 8008c04:	f3bf 8f6f 	isb	sy
 8008c08:	f3bf 8f4f 	dsb	sy
 8008c0c:	e7fe      	b.n	8008c0c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c0e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008c10:	3050      	adds	r0, #80	; 0x50
 8008c12:	f7ff fc0d 	bl	8008430 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008c16:	4604      	mov	r4, r0
 8008c18:	b170      	cbz	r0, 8008c38 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008c1a:	2300      	movs	r3, #0
 8008c1c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008c20:	b165      	cbz	r5, 8008c3c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008c22:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008c26:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8008c2a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008c2c:	2101      	movs	r1, #1
 8008c2e:	4620      	mov	r0, r4
 8008c30:	f7ff ff52 	bl	8008ad8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008c34:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008c38:	4620      	mov	r0, r4
 8008c3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008c3c:	4603      	mov	r3, r0
 8008c3e:	e7f2      	b.n	8008c26 <xQueueGenericCreate+0x34>

08008c40 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008c40:	b513      	push	{r0, r1, r4, lr}
 8008c42:	4613      	mov	r3, r2
 8008c44:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008c46:	b940      	cbnz	r0, 8008c5a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008c48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c4c:	f383 8811 	msr	BASEPRI, r3
 8008c50:	f3bf 8f6f 	isb	sy
 8008c54:	f3bf 8f4f 	dsb	sy
 8008c58:	e7fe      	b.n	8008c58 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008c5a:	4288      	cmp	r0, r1
 8008c5c:	d208      	bcs.n	8008c70 <xQueueCreateCountingSemaphoreStatic+0x30>
 8008c5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c62:	f383 8811 	msr	BASEPRI, r3
 8008c66:	f3bf 8f6f 	isb	sy
 8008c6a:	f3bf 8f4f 	dsb	sy
 8008c6e:	e7fe      	b.n	8008c6e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008c70:	2202      	movs	r2, #2
 8008c72:	9200      	str	r2, [sp, #0]
 8008c74:	2200      	movs	r2, #0
 8008c76:	4611      	mov	r1, r2
 8008c78:	f7ff ff6d 	bl	8008b56 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008c7c:	b100      	cbz	r0, 8008c80 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008c7e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008c80:	b002      	add	sp, #8
 8008c82:	bd10      	pop	{r4, pc}

08008c84 <xQueueCreateCountingSemaphore>:
	{
 8008c84:	b510      	push	{r4, lr}
 8008c86:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008c88:	b940      	cbnz	r0, 8008c9c <xQueueCreateCountingSemaphore+0x18>
 8008c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c8e:	f383 8811 	msr	BASEPRI, r3
 8008c92:	f3bf 8f6f 	isb	sy
 8008c96:	f3bf 8f4f 	dsb	sy
 8008c9a:	e7fe      	b.n	8008c9a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008c9c:	4288      	cmp	r0, r1
 8008c9e:	d208      	bcs.n	8008cb2 <xQueueCreateCountingSemaphore+0x2e>
 8008ca0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ca4:	f383 8811 	msr	BASEPRI, r3
 8008ca8:	f3bf 8f6f 	isb	sy
 8008cac:	f3bf 8f4f 	dsb	sy
 8008cb0:	e7fe      	b.n	8008cb0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008cb2:	2202      	movs	r2, #2
 8008cb4:	2100      	movs	r1, #0
 8008cb6:	f7ff ff9c 	bl	8008bf2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008cba:	b100      	cbz	r0, 8008cbe <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008cbc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008cbe:	bd10      	pop	{r4, pc}

08008cc0 <xQueueGenericSend>:
{
 8008cc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008cc4:	b085      	sub	sp, #20
 8008cc6:	4688      	mov	r8, r1
 8008cc8:	9201      	str	r2, [sp, #4]
 8008cca:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008ccc:	4604      	mov	r4, r0
 8008cce:	b940      	cbnz	r0, 8008ce2 <xQueueGenericSend+0x22>
 8008cd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cd4:	f383 8811 	msr	BASEPRI, r3
 8008cd8:	f3bf 8f6f 	isb	sy
 8008cdc:	f3bf 8f4f 	dsb	sy
 8008ce0:	e7fe      	b.n	8008ce0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008ce2:	b951      	cbnz	r1, 8008cfa <xQueueGenericSend+0x3a>
 8008ce4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008ce6:	b143      	cbz	r3, 8008cfa <xQueueGenericSend+0x3a>
 8008ce8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cec:	f383 8811 	msr	BASEPRI, r3
 8008cf0:	f3bf 8f6f 	isb	sy
 8008cf4:	f3bf 8f4f 	dsb	sy
 8008cf8:	e7fe      	b.n	8008cf8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008cfa:	2f02      	cmp	r7, #2
 8008cfc:	d10b      	bne.n	8008d16 <xQueueGenericSend+0x56>
 8008cfe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d00:	2b01      	cmp	r3, #1
 8008d02:	d008      	beq.n	8008d16 <xQueueGenericSend+0x56>
 8008d04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d08:	f383 8811 	msr	BASEPRI, r3
 8008d0c:	f3bf 8f6f 	isb	sy
 8008d10:	f3bf 8f4f 	dsb	sy
 8008d14:	e7fe      	b.n	8008d14 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d16:	f000 ffcd 	bl	8009cb4 <xTaskGetSchedulerState>
 8008d1a:	4606      	mov	r6, r0
 8008d1c:	b950      	cbnz	r0, 8008d34 <xQueueGenericSend+0x74>
 8008d1e:	9b01      	ldr	r3, [sp, #4]
 8008d20:	b14b      	cbz	r3, 8008d36 <xQueueGenericSend+0x76>
 8008d22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d26:	f383 8811 	msr	BASEPRI, r3
 8008d2a:	f3bf 8f6f 	isb	sy
 8008d2e:	f3bf 8f4f 	dsb	sy
 8008d32:	e7fe      	b.n	8008d32 <xQueueGenericSend+0x72>
 8008d34:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008d36:	f04f 0900 	mov.w	r9, #0
 8008d3a:	e037      	b.n	8008dac <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d3c:	9d01      	ldr	r5, [sp, #4]
 8008d3e:	b91d      	cbnz	r5, 8008d48 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008d40:	f7ff fd18 	bl	8008774 <vPortExitCritical>
			return errQUEUE_FULL;
 8008d44:	2000      	movs	r0, #0
 8008d46:	e052      	b.n	8008dee <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008d48:	b916      	cbnz	r6, 8008d50 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d4a:	a802      	add	r0, sp, #8
 8008d4c:	f000 ff64 	bl	8009c18 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d50:	f7ff fd10 	bl	8008774 <vPortExitCritical>
		vTaskSuspendAll();
 8008d54:	f000 fcfa 	bl	800974c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d58:	f7ff fcec 	bl	8008734 <vPortEnterCritical>
 8008d5c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008d60:	2bff      	cmp	r3, #255	; 0xff
 8008d62:	bf08      	it	eq
 8008d64:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008d68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008d6c:	2bff      	cmp	r3, #255	; 0xff
 8008d6e:	bf08      	it	eq
 8008d70:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008d74:	f7ff fcfe 	bl	8008774 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d78:	a901      	add	r1, sp, #4
 8008d7a:	a802      	add	r0, sp, #8
 8008d7c:	f000 ff58 	bl	8009c30 <xTaskCheckForTimeOut>
 8008d80:	2800      	cmp	r0, #0
 8008d82:	d14a      	bne.n	8008e1a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008d84:	f7ff fcd6 	bl	8008734 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008d88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008d8a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d8c:	429a      	cmp	r2, r3
 8008d8e:	d131      	bne.n	8008df4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008d90:	f7ff fcf0 	bl	8008774 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008d94:	9901      	ldr	r1, [sp, #4]
 8008d96:	f104 0010 	add.w	r0, r4, #16
 8008d9a:	f000 fec1 	bl	8009b20 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008d9e:	4620      	mov	r0, r4
 8008da0:	f7ff fe62 	bl	8008a68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008da4:	f000 fd76 	bl	8009894 <xTaskResumeAll>
 8008da8:	b360      	cbz	r0, 8008e04 <xQueueGenericSend+0x144>
 8008daa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008dac:	f7ff fcc2 	bl	8008734 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008db0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008db2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008db4:	429a      	cmp	r2, r3
 8008db6:	d301      	bcc.n	8008dbc <xQueueGenericSend+0xfc>
 8008db8:	2f02      	cmp	r7, #2
 8008dba:	d1bf      	bne.n	8008d3c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008dbc:	463a      	mov	r2, r7
 8008dbe:	4641      	mov	r1, r8
 8008dc0:	4620      	mov	r0, r4
 8008dc2:	f7ff fe06 	bl	80089d2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008dc8:	b11b      	cbz	r3, 8008dd2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008dca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008dce:	f000 fedf 	bl	8009b90 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008dd2:	b148      	cbz	r0, 8008de8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008dd4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008dd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ddc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008de0:	f3bf 8f4f 	dsb	sy
 8008de4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008de8:	f7ff fcc4 	bl	8008774 <vPortExitCritical>
				return pdPASS;
 8008dec:	2001      	movs	r0, #1
}
 8008dee:	b005      	add	sp, #20
 8008df0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008df4:	f7ff fcbe 	bl	8008774 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008df8:	4620      	mov	r0, r4
 8008dfa:	f7ff fe35 	bl	8008a68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008dfe:	f000 fd49 	bl	8009894 <xTaskResumeAll>
 8008e02:	e7d2      	b.n	8008daa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008e04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e10:	f3bf 8f4f 	dsb	sy
 8008e14:	f3bf 8f6f 	isb	sy
 8008e18:	e7c7      	b.n	8008daa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008e1a:	4620      	mov	r0, r4
 8008e1c:	f7ff fe24 	bl	8008a68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008e20:	f000 fd38 	bl	8009894 <xTaskResumeAll>
 8008e24:	e78e      	b.n	8008d44 <xQueueGenericSend+0x84>

08008e26 <xQueueGenericSendFromISR>:
{
 8008e26:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008e2a:	4689      	mov	r9, r1
 8008e2c:	4690      	mov	r8, r2
 8008e2e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008e30:	4604      	mov	r4, r0
 8008e32:	b940      	cbnz	r0, 8008e46 <xQueueGenericSendFromISR+0x20>
 8008e34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e38:	f383 8811 	msr	BASEPRI, r3
 8008e3c:	f3bf 8f6f 	isb	sy
 8008e40:	f3bf 8f4f 	dsb	sy
 8008e44:	e7fe      	b.n	8008e44 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e46:	b951      	cbnz	r1, 8008e5e <xQueueGenericSendFromISR+0x38>
 8008e48:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008e4a:	b143      	cbz	r3, 8008e5e <xQueueGenericSendFromISR+0x38>
 8008e4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e50:	f383 8811 	msr	BASEPRI, r3
 8008e54:	f3bf 8f6f 	isb	sy
 8008e58:	f3bf 8f4f 	dsb	sy
 8008e5c:	e7fe      	b.n	8008e5c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008e5e:	2f02      	cmp	r7, #2
 8008e60:	d10b      	bne.n	8008e7a <xQueueGenericSendFromISR+0x54>
 8008e62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008e64:	2b01      	cmp	r3, #1
 8008e66:	d008      	beq.n	8008e7a <xQueueGenericSendFromISR+0x54>
 8008e68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e6c:	f383 8811 	msr	BASEPRI, r3
 8008e70:	f3bf 8f6f 	isb	sy
 8008e74:	f3bf 8f4f 	dsb	sy
 8008e78:	e7fe      	b.n	8008e78 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e7a:	f7ff fd71 	bl	8008960 <vPortValidateInterruptPriority>
	__asm volatile
 8008e7e:	f3ef 8611 	mrs	r6, BASEPRI
 8008e82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e86:	f383 8811 	msr	BASEPRI, r3
 8008e8a:	f3bf 8f6f 	isb	sy
 8008e8e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008e92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008e94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008e96:	429a      	cmp	r2, r3
 8008e98:	d301      	bcc.n	8008e9e <xQueueGenericSendFromISR+0x78>
 8008e9a:	2f02      	cmp	r7, #2
 8008e9c:	d123      	bne.n	8008ee6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e9e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ea2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008ea4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008ea6:	463a      	mov	r2, r7
 8008ea8:	4649      	mov	r1, r9
 8008eaa:	4620      	mov	r0, r4
 8008eac:	f7ff fd91 	bl	80089d2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008eb0:	1c6b      	adds	r3, r5, #1
 8008eb2:	d113      	bne.n	8008edc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008eb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008eb6:	b90b      	cbnz	r3, 8008ebc <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008eb8:	2001      	movs	r0, #1
 8008eba:	e00b      	b.n	8008ed4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ebc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008ec0:	f000 fe66 	bl	8009b90 <xTaskRemoveFromEventList>
 8008ec4:	2800      	cmp	r0, #0
 8008ec6:	d0f7      	beq.n	8008eb8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008ec8:	f1b8 0f00 	cmp.w	r8, #0
 8008ecc:	d0f4      	beq.n	8008eb8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008ece:	2001      	movs	r0, #1
 8008ed0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008ed4:	f386 8811 	msr	BASEPRI, r6
}
 8008ed8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008edc:	3501      	adds	r5, #1
 8008ede:	b26d      	sxtb	r5, r5
 8008ee0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008ee4:	e7e8      	b.n	8008eb8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008ee6:	2000      	movs	r0, #0
 8008ee8:	e7f4      	b.n	8008ed4 <xQueueGenericSendFromISR+0xae>

08008eea <xQueueGiveFromISR>:
{
 8008eea:	b570      	push	{r4, r5, r6, lr}
 8008eec:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008eee:	4604      	mov	r4, r0
 8008ef0:	b940      	cbnz	r0, 8008f04 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008ef2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ef6:	f383 8811 	msr	BASEPRI, r3
 8008efa:	f3bf 8f6f 	isb	sy
 8008efe:	f3bf 8f4f 	dsb	sy
 8008f02:	e7fe      	b.n	8008f02 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008f04:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008f06:	b143      	cbz	r3, 8008f1a <xQueueGiveFromISR+0x30>
 8008f08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f0c:	f383 8811 	msr	BASEPRI, r3
 8008f10:	f3bf 8f6f 	isb	sy
 8008f14:	f3bf 8f4f 	dsb	sy
 8008f18:	e7fe      	b.n	8008f18 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008f1a:	6803      	ldr	r3, [r0, #0]
 8008f1c:	b953      	cbnz	r3, 8008f34 <xQueueGiveFromISR+0x4a>
 8008f1e:	6883      	ldr	r3, [r0, #8]
 8008f20:	b143      	cbz	r3, 8008f34 <xQueueGiveFromISR+0x4a>
 8008f22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f26:	f383 8811 	msr	BASEPRI, r3
 8008f2a:	f3bf 8f6f 	isb	sy
 8008f2e:	f3bf 8f4f 	dsb	sy
 8008f32:	e7fe      	b.n	8008f32 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008f34:	f7ff fd14 	bl	8008960 <vPortValidateInterruptPriority>
	__asm volatile
 8008f38:	f3ef 8611 	mrs	r6, BASEPRI
 8008f3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f40:	f383 8811 	msr	BASEPRI, r3
 8008f44:	f3bf 8f6f 	isb	sy
 8008f48:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f4c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008f4e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008f50:	4293      	cmp	r3, r2
 8008f52:	d91c      	bls.n	8008f8e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008f54:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f58:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008f5a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008f5c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f5e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008f60:	d110      	bne.n	8008f84 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008f64:	b90b      	cbnz	r3, 8008f6a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008f66:	2001      	movs	r0, #1
 8008f68:	e009      	b.n	8008f7e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f6a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f6e:	f000 fe0f 	bl	8009b90 <xTaskRemoveFromEventList>
 8008f72:	2800      	cmp	r0, #0
 8008f74:	d0f7      	beq.n	8008f66 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008f76:	2d00      	cmp	r5, #0
 8008f78:	d0f5      	beq.n	8008f66 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008f7a:	2001      	movs	r0, #1
 8008f7c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008f7e:	f386 8811 	msr	BASEPRI, r6
}
 8008f82:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008f84:	3301      	adds	r3, #1
 8008f86:	b25b      	sxtb	r3, r3
 8008f88:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008f8c:	e7eb      	b.n	8008f66 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008f8e:	2000      	movs	r0, #0
 8008f90:	e7f5      	b.n	8008f7e <xQueueGiveFromISR+0x94>

08008f92 <xQueueReceive>:
{
 8008f92:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008f96:	460f      	mov	r7, r1
 8008f98:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008f9a:	4604      	mov	r4, r0
 8008f9c:	b940      	cbnz	r0, 8008fb0 <xQueueReceive+0x1e>
	__asm volatile
 8008f9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa2:	f383 8811 	msr	BASEPRI, r3
 8008fa6:	f3bf 8f6f 	isb	sy
 8008faa:	f3bf 8f4f 	dsb	sy
 8008fae:	e7fe      	b.n	8008fae <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008fb0:	b951      	cbnz	r1, 8008fc8 <xQueueReceive+0x36>
 8008fb2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008fb4:	b143      	cbz	r3, 8008fc8 <xQueueReceive+0x36>
 8008fb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fba:	f383 8811 	msr	BASEPRI, r3
 8008fbe:	f3bf 8f6f 	isb	sy
 8008fc2:	f3bf 8f4f 	dsb	sy
 8008fc6:	e7fe      	b.n	8008fc6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008fc8:	f000 fe74 	bl	8009cb4 <xTaskGetSchedulerState>
 8008fcc:	4606      	mov	r6, r0
 8008fce:	b950      	cbnz	r0, 8008fe6 <xQueueReceive+0x54>
 8008fd0:	9b01      	ldr	r3, [sp, #4]
 8008fd2:	b14b      	cbz	r3, 8008fe8 <xQueueReceive+0x56>
 8008fd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fd8:	f383 8811 	msr	BASEPRI, r3
 8008fdc:	f3bf 8f6f 	isb	sy
 8008fe0:	f3bf 8f4f 	dsb	sy
 8008fe4:	e7fe      	b.n	8008fe4 <xQueueReceive+0x52>
 8008fe6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008fe8:	f04f 0800 	mov.w	r8, #0
 8008fec:	e03d      	b.n	800906a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008fee:	9d01      	ldr	r5, [sp, #4]
 8008ff0:	b91d      	cbnz	r5, 8008ffa <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008ff2:	f7ff fbbf 	bl	8008774 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008ff6:	2000      	movs	r0, #0
 8008ff8:	e056      	b.n	80090a8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008ffa:	b916      	cbnz	r6, 8009002 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008ffc:	a802      	add	r0, sp, #8
 8008ffe:	f000 fe0b 	bl	8009c18 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009002:	f7ff fbb7 	bl	8008774 <vPortExitCritical>
		vTaskSuspendAll();
 8009006:	f000 fba1 	bl	800974c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800900a:	f7ff fb93 	bl	8008734 <vPortEnterCritical>
 800900e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009012:	2bff      	cmp	r3, #255	; 0xff
 8009014:	bf08      	it	eq
 8009016:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800901a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800901e:	2bff      	cmp	r3, #255	; 0xff
 8009020:	bf08      	it	eq
 8009022:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009026:	f7ff fba5 	bl	8008774 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800902a:	a901      	add	r1, sp, #4
 800902c:	a802      	add	r0, sp, #8
 800902e:	f000 fdff 	bl	8009c30 <xTaskCheckForTimeOut>
 8009032:	2800      	cmp	r0, #0
 8009034:	d141      	bne.n	80090ba <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009036:	4620      	mov	r0, r4
 8009038:	f7ff fcc0 	bl	80089bc <prvIsQueueEmpty>
 800903c:	b3b8      	cbz	r0, 80090ae <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800903e:	9901      	ldr	r1, [sp, #4]
 8009040:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009044:	f000 fd6c 	bl	8009b20 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009048:	4620      	mov	r0, r4
 800904a:	f7ff fd0d 	bl	8008a68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800904e:	f000 fc21 	bl	8009894 <xTaskResumeAll>
 8009052:	b948      	cbnz	r0, 8009068 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009054:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009058:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800905c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009060:	f3bf 8f4f 	dsb	sy
 8009064:	f3bf 8f6f 	isb	sy
 8009068:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800906a:	f7ff fb63 	bl	8008734 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800906e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009070:	2d00      	cmp	r5, #0
 8009072:	d0bc      	beq.n	8008fee <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009074:	4639      	mov	r1, r7
 8009076:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009078:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800907a:	f7ff fcdf 	bl	8008a3c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800907e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009080:	6923      	ldr	r3, [r4, #16]
 8009082:	b173      	cbz	r3, 80090a2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009084:	f104 0010 	add.w	r0, r4, #16
 8009088:	f000 fd82 	bl	8009b90 <xTaskRemoveFromEventList>
 800908c:	b148      	cbz	r0, 80090a2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800908e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009092:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009096:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800909a:	f3bf 8f4f 	dsb	sy
 800909e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80090a2:	f7ff fb67 	bl	8008774 <vPortExitCritical>
				return pdPASS;
 80090a6:	2001      	movs	r0, #1
}
 80090a8:	b004      	add	sp, #16
 80090aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80090ae:	4620      	mov	r0, r4
 80090b0:	f7ff fcda 	bl	8008a68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80090b4:	f000 fbee 	bl	8009894 <xTaskResumeAll>
 80090b8:	e7d6      	b.n	8009068 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80090ba:	4620      	mov	r0, r4
 80090bc:	f7ff fcd4 	bl	8008a68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80090c0:	f000 fbe8 	bl	8009894 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80090c4:	4620      	mov	r0, r4
 80090c6:	f7ff fc79 	bl	80089bc <prvIsQueueEmpty>
 80090ca:	2800      	cmp	r0, #0
 80090cc:	d0cc      	beq.n	8009068 <xQueueReceive+0xd6>
 80090ce:	e792      	b.n	8008ff6 <xQueueReceive+0x64>

080090d0 <xQueueSemaphoreTake>:
{
 80090d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090d2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80090d4:	4604      	mov	r4, r0
{
 80090d6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80090d8:	b940      	cbnz	r0, 80090ec <xQueueSemaphoreTake+0x1c>
 80090da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090de:	f383 8811 	msr	BASEPRI, r3
 80090e2:	f3bf 8f6f 	isb	sy
 80090e6:	f3bf 8f4f 	dsb	sy
 80090ea:	e7fe      	b.n	80090ea <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80090ec:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80090ee:	b145      	cbz	r5, 8009102 <xQueueSemaphoreTake+0x32>
 80090f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090f4:	f383 8811 	msr	BASEPRI, r3
 80090f8:	f3bf 8f6f 	isb	sy
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	e7fe      	b.n	8009100 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009102:	f000 fdd7 	bl	8009cb4 <xTaskGetSchedulerState>
 8009106:	4606      	mov	r6, r0
 8009108:	b950      	cbnz	r0, 8009120 <xQueueSemaphoreTake+0x50>
 800910a:	9b01      	ldr	r3, [sp, #4]
 800910c:	b15b      	cbz	r3, 8009126 <xQueueSemaphoreTake+0x56>
 800910e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009112:	f383 8811 	msr	BASEPRI, r3
 8009116:	f3bf 8f6f 	isb	sy
 800911a:	f3bf 8f4f 	dsb	sy
 800911e:	e7fe      	b.n	800911e <xQueueSemaphoreTake+0x4e>
 8009120:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009122:	2700      	movs	r7, #0
 8009124:	e053      	b.n	80091ce <xQueueSemaphoreTake+0xfe>
 8009126:	4605      	mov	r5, r0
 8009128:	e7fb      	b.n	8009122 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800912a:	9b01      	ldr	r3, [sp, #4]
 800912c:	b963      	cbnz	r3, 8009148 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800912e:	b145      	cbz	r5, 8009142 <xQueueSemaphoreTake+0x72>
 8009130:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009134:	f383 8811 	msr	BASEPRI, r3
 8009138:	f3bf 8f6f 	isb	sy
 800913c:	f3bf 8f4f 	dsb	sy
 8009140:	e7fe      	b.n	8009140 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009142:	f7ff fb17 	bl	8008774 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009146:	e062      	b.n	800920e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009148:	b916      	cbnz	r6, 8009150 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800914a:	a802      	add	r0, sp, #8
 800914c:	f000 fd64 	bl	8009c18 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009150:	f7ff fb10 	bl	8008774 <vPortExitCritical>
		vTaskSuspendAll();
 8009154:	f000 fafa 	bl	800974c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009158:	f7ff faec 	bl	8008734 <vPortEnterCritical>
 800915c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009160:	2bff      	cmp	r3, #255	; 0xff
 8009162:	bf08      	it	eq
 8009164:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009168:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800916c:	2bff      	cmp	r3, #255	; 0xff
 800916e:	bf08      	it	eq
 8009170:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009174:	f7ff fafe 	bl	8008774 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009178:	a901      	add	r1, sp, #4
 800917a:	a802      	add	r0, sp, #8
 800917c:	f000 fd58 	bl	8009c30 <xTaskCheckForTimeOut>
 8009180:	2800      	cmp	r0, #0
 8009182:	d14d      	bne.n	8009220 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009184:	4620      	mov	r0, r4
 8009186:	f7ff fc19 	bl	80089bc <prvIsQueueEmpty>
 800918a:	2800      	cmp	r0, #0
 800918c:	d042      	beq.n	8009214 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800918e:	6823      	ldr	r3, [r4, #0]
 8009190:	b93b      	cbnz	r3, 80091a2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009192:	f7ff facf 	bl	8008734 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009196:	68a0      	ldr	r0, [r4, #8]
 8009198:	f000 fd9c 	bl	8009cd4 <xTaskPriorityInherit>
 800919c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800919e:	f7ff fae9 	bl	8008774 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80091a2:	9901      	ldr	r1, [sp, #4]
 80091a4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80091a8:	f000 fcba 	bl	8009b20 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80091ac:	4620      	mov	r0, r4
 80091ae:	f7ff fc5b 	bl	8008a68 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80091b2:	f000 fb6f 	bl	8009894 <xTaskResumeAll>
 80091b6:	b948      	cbnz	r0, 80091cc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80091b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80091bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80091c4:	f3bf 8f4f 	dsb	sy
 80091c8:	f3bf 8f6f 	isb	sy
 80091cc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80091ce:	f7ff fab1 	bl	8008734 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80091d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80091d4:	2b00      	cmp	r3, #0
 80091d6:	d0a8      	beq.n	800912a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80091d8:	3b01      	subs	r3, #1
 80091da:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80091dc:	6823      	ldr	r3, [r4, #0]
 80091de:	b913      	cbnz	r3, 80091e6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80091e0:	f000 fe50 	bl	8009e84 <pvTaskIncrementMutexHeldCount>
 80091e4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091e6:	6923      	ldr	r3, [r4, #16]
 80091e8:	b173      	cbz	r3, 8009208 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091ea:	f104 0010 	add.w	r0, r4, #16
 80091ee:	f000 fccf 	bl	8009b90 <xTaskRemoveFromEventList>
 80091f2:	b148      	cbz	r0, 8009208 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80091f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80091f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009200:	f3bf 8f4f 	dsb	sy
 8009204:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009208:	f7ff fab4 	bl	8008774 <vPortExitCritical>
				return pdPASS;
 800920c:	2501      	movs	r5, #1
}
 800920e:	4628      	mov	r0, r5
 8009210:	b005      	add	sp, #20
 8009212:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009214:	4620      	mov	r0, r4
 8009216:	f7ff fc27 	bl	8008a68 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800921a:	f000 fb3b 	bl	8009894 <xTaskResumeAll>
 800921e:	e7d5      	b.n	80091cc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8009220:	4620      	mov	r0, r4
 8009222:	f7ff fc21 	bl	8008a68 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009226:	f000 fb35 	bl	8009894 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800922a:	4620      	mov	r0, r4
 800922c:	f7ff fbc6 	bl	80089bc <prvIsQueueEmpty>
 8009230:	2800      	cmp	r0, #0
 8009232:	d0cb      	beq.n	80091cc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009234:	2d00      	cmp	r5, #0
 8009236:	d0ea      	beq.n	800920e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009238:	f7ff fa7c 	bl	8008734 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800923c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800923e:	b119      	cbz	r1, 8009248 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009240:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009242:	6819      	ldr	r1, [r3, #0]
 8009244:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009248:	68a0      	ldr	r0, [r4, #8]
 800924a:	f000 fdc9 	bl	8009de0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800924e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009250:	f7ff fa90 	bl	8008774 <vPortExitCritical>
 8009254:	e7db      	b.n	800920e <xQueueSemaphoreTake+0x13e>

08009256 <xQueueReceiveFromISR>:
{
 8009256:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800925a:	4689      	mov	r9, r1
 800925c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800925e:	4605      	mov	r5, r0
 8009260:	b940      	cbnz	r0, 8009274 <xQueueReceiveFromISR+0x1e>
 8009262:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009266:	f383 8811 	msr	BASEPRI, r3
 800926a:	f3bf 8f6f 	isb	sy
 800926e:	f3bf 8f4f 	dsb	sy
 8009272:	e7fe      	b.n	8009272 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009274:	b951      	cbnz	r1, 800928c <xQueueReceiveFromISR+0x36>
 8009276:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009278:	b143      	cbz	r3, 800928c <xQueueReceiveFromISR+0x36>
 800927a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800927e:	f383 8811 	msr	BASEPRI, r3
 8009282:	f3bf 8f6f 	isb	sy
 8009286:	f3bf 8f4f 	dsb	sy
 800928a:	e7fe      	b.n	800928a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800928c:	f7ff fb68 	bl	8008960 <vPortValidateInterruptPriority>
	__asm volatile
 8009290:	f3ef 8711 	mrs	r7, BASEPRI
 8009294:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009298:	f383 8811 	msr	BASEPRI, r3
 800929c:	f3bf 8f6f 	isb	sy
 80092a0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80092a4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80092a6:	b31c      	cbz	r4, 80092f0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80092a8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80092ac:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80092ae:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80092b0:	4628      	mov	r0, r5
 80092b2:	f7ff fbc3 	bl	8008a3c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80092b6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80092b8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80092ba:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80092bc:	d113      	bne.n	80092e6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80092be:	692b      	ldr	r3, [r5, #16]
 80092c0:	b90b      	cbnz	r3, 80092c6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80092c2:	2001      	movs	r0, #1
 80092c4:	e00b      	b.n	80092de <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80092c6:	f105 0010 	add.w	r0, r5, #16
 80092ca:	f000 fc61 	bl	8009b90 <xTaskRemoveFromEventList>
 80092ce:	2800      	cmp	r0, #0
 80092d0:	d0f7      	beq.n	80092c2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80092d2:	f1b8 0f00 	cmp.w	r8, #0
 80092d6:	d0f4      	beq.n	80092c2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80092d8:	2001      	movs	r0, #1
 80092da:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80092de:	f387 8811 	msr	BASEPRI, r7
}
 80092e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80092e6:	3601      	adds	r6, #1
 80092e8:	b276      	sxtb	r6, r6
 80092ea:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80092ee:	e7e8      	b.n	80092c2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80092f0:	4620      	mov	r0, r4
 80092f2:	e7f4      	b.n	80092de <xQueueReceiveFromISR+0x88>

080092f4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80092f4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092f6:	4a07      	ldr	r2, [pc, #28]	; (8009314 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80092f8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80092fa:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80092fe:	b92c      	cbnz	r4, 800930c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009300:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009304:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009308:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800930a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800930c:	3301      	adds	r3, #1
 800930e:	2b08      	cmp	r3, #8
 8009310:	d1f3      	bne.n	80092fa <vQueueAddToRegistry+0x6>
 8009312:	e7fa      	b.n	800930a <vQueueAddToRegistry+0x16>
 8009314:	2000b958 	.word	0x2000b958

08009318 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009318:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800931a:	4a08      	ldr	r2, [pc, #32]	; (800933c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800931c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800931e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009322:	684c      	ldr	r4, [r1, #4]
 8009324:	4284      	cmp	r4, r0
 8009326:	d104      	bne.n	8009332 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009328:	2000      	movs	r0, #0
 800932a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800932e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009330:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009332:	3301      	adds	r3, #1
 8009334:	2b08      	cmp	r3, #8
 8009336:	d1f2      	bne.n	800931e <vQueueUnregisterQueue+0x6>
 8009338:	e7fa      	b.n	8009330 <vQueueUnregisterQueue+0x18>
 800933a:	bf00      	nop
 800933c:	2000b958 	.word	0x2000b958

08009340 <vQueueDelete>:
{
 8009340:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009342:	4604      	mov	r4, r0
 8009344:	b940      	cbnz	r0, 8009358 <vQueueDelete+0x18>
	__asm volatile
 8009346:	f04f 0350 	mov.w	r3, #80	; 0x50
 800934a:	f383 8811 	msr	BASEPRI, r3
 800934e:	f3bf 8f6f 	isb	sy
 8009352:	f3bf 8f4f 	dsb	sy
 8009356:	e7fe      	b.n	8009356 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009358:	f7ff ffde 	bl	8009318 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800935c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009360:	b923      	cbnz	r3, 800936c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009362:	4620      	mov	r0, r4
}
 8009364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009368:	f7ff b8fa 	b.w	8008560 <vPortFree>
}
 800936c:	bd10      	pop	{r4, pc}

0800936e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800936e:	b570      	push	{r4, r5, r6, lr}
 8009370:	4604      	mov	r4, r0
 8009372:	460d      	mov	r5, r1
 8009374:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009376:	f7ff f9dd 	bl	8008734 <vPortEnterCritical>
 800937a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800937e:	2bff      	cmp	r3, #255	; 0xff
 8009380:	bf04      	itt	eq
 8009382:	2300      	moveq	r3, #0
 8009384:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009388:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800938c:	2bff      	cmp	r3, #255	; 0xff
 800938e:	bf04      	itt	eq
 8009390:	2300      	moveq	r3, #0
 8009392:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009396:	f7ff f9ed 	bl	8008774 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800939a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800939c:	b92b      	cbnz	r3, 80093aa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800939e:	4632      	mov	r2, r6
 80093a0:	4629      	mov	r1, r5
 80093a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093a6:	f000 fbd5 	bl	8009b54 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80093aa:	4620      	mov	r0, r4
	}
 80093ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80093b0:	f7ff bb5a 	b.w	8008a68 <prvUnlockQueue>

080093b4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80093b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80093b8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80093ba:	f7ff f9bb 	bl	8008734 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80093be:	4b30      	ldr	r3, [pc, #192]	; (8009480 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80093c0:	4e30      	ldr	r6, [pc, #192]	; (8009484 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80093c2:	681a      	ldr	r2, [r3, #0]
 80093c4:	4f30      	ldr	r7, [pc, #192]	; (8009488 <prvAddNewTaskToReadyList+0xd4>)
 80093c6:	3201      	adds	r2, #1
 80093c8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80093ca:	6835      	ldr	r5, [r6, #0]
 80093cc:	2d00      	cmp	r5, #0
 80093ce:	d14b      	bne.n	8009468 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80093d0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	2b01      	cmp	r3, #1
 80093d6:	d11f      	bne.n	8009418 <prvAddNewTaskToReadyList+0x64>
 80093d8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80093da:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093dc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80093de:	f7ff f8fd 	bl	80085dc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80093e2:	2d38      	cmp	r5, #56	; 0x38
 80093e4:	f108 0814 	add.w	r8, r8, #20
 80093e8:	d1f7      	bne.n	80093da <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80093ea:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80094b0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80093ee:	4d27      	ldr	r5, [pc, #156]	; (800948c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80093f0:	4640      	mov	r0, r8
 80093f2:	f7ff f8f3 	bl	80085dc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80093f6:	4628      	mov	r0, r5
 80093f8:	f7ff f8f0 	bl	80085dc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80093fc:	4824      	ldr	r0, [pc, #144]	; (8009490 <prvAddNewTaskToReadyList+0xdc>)
 80093fe:	f7ff f8ed 	bl	80085dc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009402:	4824      	ldr	r0, [pc, #144]	; (8009494 <prvAddNewTaskToReadyList+0xe0>)
 8009404:	f7ff f8ea 	bl	80085dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009408:	4823      	ldr	r0, [pc, #140]	; (8009498 <prvAddNewTaskToReadyList+0xe4>)
 800940a:	f7ff f8e7 	bl	80085dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800940e:	4b23      	ldr	r3, [pc, #140]	; (800949c <prvAddNewTaskToReadyList+0xe8>)
 8009410:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009414:	4b22      	ldr	r3, [pc, #136]	; (80094a0 <prvAddNewTaskToReadyList+0xec>)
 8009416:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009418:	4a22      	ldr	r2, [pc, #136]	; (80094a4 <prvAddNewTaskToReadyList+0xf0>)
 800941a:	6813      	ldr	r3, [r2, #0]
 800941c:	3301      	adds	r3, #1
 800941e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009420:	4a21      	ldr	r2, [pc, #132]	; (80094a8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009422:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009424:	6811      	ldr	r1, [r2, #0]
 8009426:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009428:	2014      	movs	r0, #20
 800942a:	428b      	cmp	r3, r1
 800942c:	fb00 7003 	mla	r0, r0, r3, r7
 8009430:	f104 0104 	add.w	r1, r4, #4
 8009434:	bf88      	it	hi
 8009436:	6013      	strhi	r3, [r2, #0]
 8009438:	f7ff f8de 	bl	80085f8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800943c:	f7ff f99a 	bl	8008774 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009440:	4b1a      	ldr	r3, [pc, #104]	; (80094ac <prvAddNewTaskToReadyList+0xf8>)
 8009442:	681b      	ldr	r3, [r3, #0]
 8009444:	b173      	cbz	r3, 8009464 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009446:	6833      	ldr	r3, [r6, #0]
 8009448:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800944a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800944c:	429a      	cmp	r2, r3
 800944e:	d209      	bcs.n	8009464 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009450:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009454:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009458:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800945c:	f3bf 8f4f 	dsb	sy
 8009460:	f3bf 8f6f 	isb	sy
}
 8009464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009468:	4b10      	ldr	r3, [pc, #64]	; (80094ac <prvAddNewTaskToReadyList+0xf8>)
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	2b00      	cmp	r3, #0
 800946e:	d1d3      	bne.n	8009418 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009470:	6833      	ldr	r3, [r6, #0]
 8009472:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009474:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009476:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009478:	bf98      	it	ls
 800947a:	6034      	strls	r4, [r6, #0]
 800947c:	e7cc      	b.n	8009418 <prvAddNewTaskToReadyList+0x64>
 800947e:	bf00      	nop
 8009480:	2000be04 	.word	0x2000be04
 8009484:	2000b998 	.word	0x2000b998
 8009488:	2000b9a4 	.word	0x2000b9a4
 800948c:	2000be2c 	.word	0x2000be2c
 8009490:	2000be4c 	.word	0x2000be4c
 8009494:	2000be78 	.word	0x2000be78
 8009498:	2000be64 	.word	0x2000be64
 800949c:	2000b99c 	.word	0x2000b99c
 80094a0:	2000b9a0 	.word	0x2000b9a0
 80094a4:	2000be10 	.word	0x2000be10
 80094a8:	2000be14 	.word	0x2000be14
 80094ac:	2000be60 	.word	0x2000be60
 80094b0:	2000be18 	.word	0x2000be18

080094b4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80094b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80094b6:	4b15      	ldr	r3, [pc, #84]	; (800950c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094b8:	4e15      	ldr	r6, [pc, #84]	; (8009510 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80094ba:	681d      	ldr	r5, [r3, #0]
{
 80094bc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094be:	6830      	ldr	r0, [r6, #0]
 80094c0:	3004      	adds	r0, #4
{
 80094c2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094c4:	f7ff f8bb 	bl	800863e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80094c8:	1c63      	adds	r3, r4, #1
 80094ca:	d107      	bne.n	80094dc <prvAddCurrentTaskToDelayedList+0x28>
 80094cc:	b137      	cbz	r7, 80094dc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094ce:	6831      	ldr	r1, [r6, #0]
 80094d0:	4810      	ldr	r0, [pc, #64]	; (8009514 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80094d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094d6:	3104      	adds	r1, #4
 80094d8:	f7ff b88e 	b.w	80085f8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80094dc:	6833      	ldr	r3, [r6, #0]
 80094de:	192c      	adds	r4, r5, r4
 80094e0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80094e2:	d307      	bcc.n	80094f4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094e4:	4b0c      	ldr	r3, [pc, #48]	; (8009518 <prvAddCurrentTaskToDelayedList+0x64>)
 80094e6:	6818      	ldr	r0, [r3, #0]
 80094e8:	6831      	ldr	r1, [r6, #0]
}
 80094ea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094ee:	3104      	adds	r1, #4
 80094f0:	f7ff b88e 	b.w	8008610 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094f4:	4b09      	ldr	r3, [pc, #36]	; (800951c <prvAddCurrentTaskToDelayedList+0x68>)
 80094f6:	6818      	ldr	r0, [r3, #0]
 80094f8:	6831      	ldr	r1, [r6, #0]
 80094fa:	3104      	adds	r1, #4
 80094fc:	f7ff f888 	bl	8008610 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009500:	4b07      	ldr	r3, [pc, #28]	; (8009520 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009502:	681a      	ldr	r2, [r3, #0]
 8009504:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009506:	bf88      	it	hi
 8009508:	601c      	strhi	r4, [r3, #0]
}
 800950a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800950c:	2000be8c 	.word	0x2000be8c
 8009510:	2000b998 	.word	0x2000b998
 8009514:	2000be64 	.word	0x2000be64
 8009518:	2000b9a0 	.word	0x2000b9a0
 800951c:	2000b99c 	.word	0x2000b99c
 8009520:	2000be40 	.word	0x2000be40

08009524 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009524:	4a06      	ldr	r2, [pc, #24]	; (8009540 <prvResetNextTaskUnblockTime+0x1c>)
 8009526:	6813      	ldr	r3, [r2, #0]
 8009528:	6819      	ldr	r1, [r3, #0]
 800952a:	4b06      	ldr	r3, [pc, #24]	; (8009544 <prvResetNextTaskUnblockTime+0x20>)
 800952c:	b919      	cbnz	r1, 8009536 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800952e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009532:	601a      	str	r2, [r3, #0]
}
 8009534:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009536:	6812      	ldr	r2, [r2, #0]
 8009538:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800953a:	68d2      	ldr	r2, [r2, #12]
 800953c:	6852      	ldr	r2, [r2, #4]
 800953e:	e7f8      	b.n	8009532 <prvResetNextTaskUnblockTime+0xe>
 8009540:	2000b99c 	.word	0x2000b99c
 8009544:	2000be40 	.word	0x2000be40

08009548 <prvDeleteTCB>:
	{
 8009548:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800954a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800954e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009550:	b93b      	cbnz	r3, 8009562 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009552:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009554:	f7ff f804 	bl	8008560 <vPortFree>
				vPortFree( pxTCB );
 8009558:	4620      	mov	r0, r4
	}
 800955a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800955e:	f7fe bfff 	b.w	8008560 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009562:	2b01      	cmp	r3, #1
 8009564:	d0f9      	beq.n	800955a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009566:	2b02      	cmp	r3, #2
 8009568:	d008      	beq.n	800957c <prvDeleteTCB+0x34>
 800956a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800956e:	f383 8811 	msr	BASEPRI, r3
 8009572:	f3bf 8f6f 	isb	sy
 8009576:	f3bf 8f4f 	dsb	sy
 800957a:	e7fe      	b.n	800957a <prvDeleteTCB+0x32>
	}
 800957c:	bd10      	pop	{r4, pc}
	...

08009580 <prvIdleTask>:
{
 8009580:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009582:	4c14      	ldr	r4, [pc, #80]	; (80095d4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009584:	4f14      	ldr	r7, [pc, #80]	; (80095d8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009586:	4d15      	ldr	r5, [pc, #84]	; (80095dc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009588:	6823      	ldr	r3, [r4, #0]
 800958a:	b983      	cbnz	r3, 80095ae <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800958c:	4b14      	ldr	r3, [pc, #80]	; (80095e0 <prvIdleTask+0x60>)
 800958e:	681b      	ldr	r3, [r3, #0]
 8009590:	2b01      	cmp	r3, #1
 8009592:	d909      	bls.n	80095a8 <prvIdleTask+0x28>
				taskYIELD();
 8009594:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009598:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800959c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095a0:	f3bf 8f4f 	dsb	sy
 80095a4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80095a8:	f7f8 fb56 	bl	8001c58 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80095ac:	e7eb      	b.n	8009586 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80095ae:	f7ff f8c1 	bl	8008734 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095b2:	68fb      	ldr	r3, [r7, #12]
 80095b4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80095b6:	1d30      	adds	r0, r6, #4
 80095b8:	f7ff f841 	bl	800863e <uxListRemove>
				--uxCurrentNumberOfTasks;
 80095bc:	682b      	ldr	r3, [r5, #0]
 80095be:	3b01      	subs	r3, #1
 80095c0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80095c2:	6823      	ldr	r3, [r4, #0]
 80095c4:	3b01      	subs	r3, #1
 80095c6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80095c8:	f7ff f8d4 	bl	8008774 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80095cc:	4630      	mov	r0, r6
 80095ce:	f7ff ffbb 	bl	8009548 <prvDeleteTCB>
 80095d2:	e7d9      	b.n	8009588 <prvIdleTask+0x8>
 80095d4:	2000be08 	.word	0x2000be08
 80095d8:	2000be78 	.word	0x2000be78
 80095dc:	2000be04 	.word	0x2000be04
 80095e0:	2000b9a4 	.word	0x2000b9a4

080095e4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095e8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095ec:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80095f0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095f2:	4606      	mov	r6, r0
 80095f4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80095f8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80095fa:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80095fc:	f014 f866 	bl	801d6cc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009600:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009602:	f1a9 0904 	sub.w	r9, r9, #4
 8009606:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009608:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800960c:	b3b5      	cbz	r5, 800967c <prvInitialiseNewTask.constprop.0+0x98>
 800960e:	1e6b      	subs	r3, r5, #1
 8009610:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009614:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009616:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800961a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800961e:	b108      	cbz	r0, 8009624 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009620:	42ab      	cmp	r3, r5
 8009622:	d1f8      	bne.n	8009616 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009624:	2300      	movs	r3, #0
 8009626:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800962a:	9d08      	ldr	r5, [sp, #32]
 800962c:	2d37      	cmp	r5, #55	; 0x37
 800962e:	bf28      	it	cs
 8009630:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009632:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009636:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009638:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800963a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800963c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009640:	f7fe ffd7 	bl	80085f2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009644:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009648:	f104 0018 	add.w	r0, r4, #24
 800964c:	f7fe ffd1 	bl	80085f2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009650:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009654:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009656:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009658:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800965a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800965e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009662:	463a      	mov	r2, r7
 8009664:	4631      	mov	r1, r6
 8009666:	4648      	mov	r0, r9
 8009668:	f7ff f838 	bl	80086dc <pxPortInitialiseStack>
 800966c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800966e:	f1b8 0f00 	cmp.w	r8, #0
 8009672:	d001      	beq.n	8009678 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009674:	f8c8 4000 	str.w	r4, [r8]
}
 8009678:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800967c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009680:	e7d3      	b.n	800962a <prvInitialiseNewTask.constprop.0+0x46>

08009682 <xTaskCreateStatic>:
	{
 8009682:	b570      	push	{r4, r5, r6, lr}
 8009684:	b086      	sub	sp, #24
 8009686:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800968a:	b945      	cbnz	r5, 800969e <xTaskCreateStatic+0x1c>
 800968c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009690:	f383 8811 	msr	BASEPRI, r3
 8009694:	f3bf 8f6f 	isb	sy
 8009698:	f3bf 8f4f 	dsb	sy
 800969c:	e7fe      	b.n	800969c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800969e:	b944      	cbnz	r4, 80096b2 <xTaskCreateStatic+0x30>
 80096a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096a4:	f383 8811 	msr	BASEPRI, r3
 80096a8:	f3bf 8f6f 	isb	sy
 80096ac:	f3bf 8f4f 	dsb	sy
 80096b0:	e7fe      	b.n	80096b0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80096b2:	2660      	movs	r6, #96	; 0x60
 80096b4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80096b6:	9e05      	ldr	r6, [sp, #20]
 80096b8:	2e60      	cmp	r6, #96	; 0x60
 80096ba:	d008      	beq.n	80096ce <xTaskCreateStatic+0x4c>
 80096bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c0:	f383 8811 	msr	BASEPRI, r3
 80096c4:	f3bf 8f6f 	isb	sy
 80096c8:	f3bf 8f4f 	dsb	sy
 80096cc:	e7fe      	b.n	80096cc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80096ce:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80096d0:	2502      	movs	r5, #2
 80096d2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80096d6:	ad04      	add	r5, sp, #16
 80096d8:	9501      	str	r5, [sp, #4]
 80096da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80096dc:	9402      	str	r4, [sp, #8]
 80096de:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80096e0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80096e2:	f7ff ff7f 	bl	80095e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80096e6:	4620      	mov	r0, r4
 80096e8:	f7ff fe64 	bl	80093b4 <prvAddNewTaskToReadyList>
	}
 80096ec:	9804      	ldr	r0, [sp, #16]
 80096ee:	b006      	add	sp, #24
 80096f0:	bd70      	pop	{r4, r5, r6, pc}

080096f2 <xTaskCreate>:
	{
 80096f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096f6:	4607      	mov	r7, r0
 80096f8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80096fa:	0090      	lsls	r0, r2, #2
	{
 80096fc:	4688      	mov	r8, r1
 80096fe:	4616      	mov	r6, r2
 8009700:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009702:	f7fe fe95 	bl	8008430 <pvPortMalloc>
			if( pxStack != NULL )
 8009706:	4605      	mov	r5, r0
 8009708:	b1e8      	cbz	r0, 8009746 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800970a:	2060      	movs	r0, #96	; 0x60
 800970c:	f7fe fe90 	bl	8008430 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009710:	4604      	mov	r4, r0
 8009712:	b1a8      	cbz	r0, 8009740 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009714:	2300      	movs	r3, #0
 8009716:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800971a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800971c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800971e:	9301      	str	r3, [sp, #4]
 8009720:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009722:	9002      	str	r0, [sp, #8]
 8009724:	9300      	str	r3, [sp, #0]
 8009726:	4632      	mov	r2, r6
 8009728:	464b      	mov	r3, r9
 800972a:	4641      	mov	r1, r8
 800972c:	4638      	mov	r0, r7
 800972e:	f7ff ff59 	bl	80095e4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009732:	4620      	mov	r0, r4
 8009734:	f7ff fe3e 	bl	80093b4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009738:	2001      	movs	r0, #1
	}
 800973a:	b005      	add	sp, #20
 800973c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009740:	4628      	mov	r0, r5
 8009742:	f7fe ff0d 	bl	8008560 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009746:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800974a:	e7f6      	b.n	800973a <xTaskCreate+0x48>

0800974c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800974c:	4a02      	ldr	r2, [pc, #8]	; (8009758 <vTaskSuspendAll+0xc>)
 800974e:	6813      	ldr	r3, [r2, #0]
 8009750:	3301      	adds	r3, #1
 8009752:	6013      	str	r3, [r2, #0]
}
 8009754:	4770      	bx	lr
 8009756:	bf00      	nop
 8009758:	2000be0c 	.word	0x2000be0c

0800975c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800975c:	4b01      	ldr	r3, [pc, #4]	; (8009764 <xTaskGetTickCount+0x8>)
 800975e:	6818      	ldr	r0, [r3, #0]
}
 8009760:	4770      	bx	lr
 8009762:	bf00      	nop
 8009764:	2000be8c 	.word	0x2000be8c

08009768 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009768:	4b3f      	ldr	r3, [pc, #252]	; (8009868 <xTaskIncrementTick+0x100>)
 800976a:	681b      	ldr	r3, [r3, #0]
{
 800976c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009770:	2b00      	cmp	r3, #0
 8009772:	d173      	bne.n	800985c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009774:	4b3d      	ldr	r3, [pc, #244]	; (800986c <xTaskIncrementTick+0x104>)
 8009776:	681d      	ldr	r5, [r3, #0]
 8009778:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800977a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800977c:	b9bd      	cbnz	r5, 80097ae <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800977e:	4b3c      	ldr	r3, [pc, #240]	; (8009870 <xTaskIncrementTick+0x108>)
 8009780:	681a      	ldr	r2, [r3, #0]
 8009782:	6812      	ldr	r2, [r2, #0]
 8009784:	b142      	cbz	r2, 8009798 <xTaskIncrementTick+0x30>
 8009786:	f04f 0350 	mov.w	r3, #80	; 0x50
 800978a:	f383 8811 	msr	BASEPRI, r3
 800978e:	f3bf 8f6f 	isb	sy
 8009792:	f3bf 8f4f 	dsb	sy
 8009796:	e7fe      	b.n	8009796 <xTaskIncrementTick+0x2e>
 8009798:	4a36      	ldr	r2, [pc, #216]	; (8009874 <xTaskIncrementTick+0x10c>)
 800979a:	6819      	ldr	r1, [r3, #0]
 800979c:	6810      	ldr	r0, [r2, #0]
 800979e:	6018      	str	r0, [r3, #0]
 80097a0:	6011      	str	r1, [r2, #0]
 80097a2:	4a35      	ldr	r2, [pc, #212]	; (8009878 <xTaskIncrementTick+0x110>)
 80097a4:	6813      	ldr	r3, [r2, #0]
 80097a6:	3301      	adds	r3, #1
 80097a8:	6013      	str	r3, [r2, #0]
 80097aa:	f7ff febb 	bl	8009524 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80097ae:	4e33      	ldr	r6, [pc, #204]	; (800987c <xTaskIncrementTick+0x114>)
 80097b0:	4f33      	ldr	r7, [pc, #204]	; (8009880 <xTaskIncrementTick+0x118>)
 80097b2:	6833      	ldr	r3, [r6, #0]
 80097b4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800988c <xTaskIncrementTick+0x124>
 80097b8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 80097ba:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80097be:	d211      	bcs.n	80097e4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80097c0:	f8d8 3000 	ldr.w	r3, [r8]
 80097c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097c6:	2214      	movs	r2, #20
 80097c8:	4353      	muls	r3, r2
 80097ca:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80097cc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80097ce:	4b2d      	ldr	r3, [pc, #180]	; (8009884 <xTaskIncrementTick+0x11c>)
 80097d0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80097d2:	bf28      	it	cs
 80097d4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	bf18      	it	ne
 80097da:	2401      	movne	r4, #1
}
 80097dc:	4620      	mov	r0, r4
 80097de:	b003      	add	sp, #12
 80097e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097e4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009870 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80097e8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009890 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097ec:	f8d9 3000 	ldr.w	r3, [r9]
 80097f0:	681b      	ldr	r3, [r3, #0]
 80097f2:	b91b      	cbnz	r3, 80097fc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80097f4:	f04f 33ff 	mov.w	r3, #4294967295
 80097f8:	6033      	str	r3, [r6, #0]
					break;
 80097fa:	e7e1      	b.n	80097c0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097fc:	f8d9 3000 	ldr.w	r3, [r9]
 8009800:	68db      	ldr	r3, [r3, #12]
 8009802:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009806:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800980a:	4295      	cmp	r5, r2
 800980c:	d201      	bcs.n	8009812 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800980e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009810:	e7d6      	b.n	80097c0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009812:	f10b 0104 	add.w	r1, fp, #4
 8009816:	4608      	mov	r0, r1
 8009818:	9101      	str	r1, [sp, #4]
 800981a:	f7fe ff10 	bl	800863e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800981e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009822:	9901      	ldr	r1, [sp, #4]
 8009824:	b122      	cbz	r2, 8009830 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009826:	f10b 0018 	add.w	r0, fp, #24
 800982a:	f7fe ff08 	bl	800863e <uxListRemove>
 800982e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009830:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009834:	f8da 2000 	ldr.w	r2, [sl]
 8009838:	2314      	movs	r3, #20
 800983a:	4290      	cmp	r0, r2
 800983c:	bf88      	it	hi
 800983e:	f8ca 0000 	strhi.w	r0, [sl]
 8009842:	fb03 7000 	mla	r0, r3, r0, r7
 8009846:	f7fe fed7 	bl	80085f8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800984a:	f8d8 1000 	ldr.w	r1, [r8]
 800984e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009852:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009854:	429a      	cmp	r2, r3
 8009856:	bf28      	it	cs
 8009858:	2401      	movcs	r4, #1
 800985a:	e7c7      	b.n	80097ec <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800985c:	4a0a      	ldr	r2, [pc, #40]	; (8009888 <xTaskIncrementTick+0x120>)
 800985e:	6813      	ldr	r3, [r2, #0]
 8009860:	3301      	adds	r3, #1
 8009862:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009864:	2400      	movs	r4, #0
	return xSwitchRequired;
 8009866:	e7b9      	b.n	80097dc <xTaskIncrementTick+0x74>
 8009868:	2000be0c 	.word	0x2000be0c
 800986c:	2000be8c 	.word	0x2000be8c
 8009870:	2000b99c 	.word	0x2000b99c
 8009874:	2000b9a0 	.word	0x2000b9a0
 8009878:	2000be44 	.word	0x2000be44
 800987c:	2000be40 	.word	0x2000be40
 8009880:	2000b9a4 	.word	0x2000b9a4
 8009884:	2000be90 	.word	0x2000be90
 8009888:	2000be48 	.word	0x2000be48
 800988c:	2000b998 	.word	0x2000b998
 8009890:	2000be14 	.word	0x2000be14

08009894 <xTaskResumeAll>:
{
 8009894:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009896:	4c31      	ldr	r4, [pc, #196]	; (800995c <xTaskResumeAll+0xc8>)
 8009898:	6823      	ldr	r3, [r4, #0]
 800989a:	b943      	cbnz	r3, 80098ae <xTaskResumeAll+0x1a>
 800989c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098a0:	f383 8811 	msr	BASEPRI, r3
 80098a4:	f3bf 8f6f 	isb	sy
 80098a8:	f3bf 8f4f 	dsb	sy
 80098ac:	e7fe      	b.n	80098ac <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80098ae:	f7fe ff41 	bl	8008734 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80098b2:	6823      	ldr	r3, [r4, #0]
 80098b4:	3b01      	subs	r3, #1
 80098b6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80098b8:	6824      	ldr	r4, [r4, #0]
 80098ba:	b12c      	cbz	r4, 80098c8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80098bc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80098be:	f7fe ff59 	bl	8008774 <vPortExitCritical>
}
 80098c2:	4620      	mov	r0, r4
 80098c4:	b003      	add	sp, #12
 80098c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80098c8:	4b25      	ldr	r3, [pc, #148]	; (8009960 <xTaskResumeAll+0xcc>)
 80098ca:	681b      	ldr	r3, [r3, #0]
 80098cc:	2b00      	cmp	r3, #0
 80098ce:	d0f5      	beq.n	80098bc <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80098d0:	4d24      	ldr	r5, [pc, #144]	; (8009964 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80098d2:	4e25      	ldr	r6, [pc, #148]	; (8009968 <xTaskResumeAll+0xd4>)
 80098d4:	4f25      	ldr	r7, [pc, #148]	; (800996c <xTaskResumeAll+0xd8>)
 80098d6:	e01e      	b.n	8009916 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098d8:	68eb      	ldr	r3, [r5, #12]
 80098da:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80098dc:	f104 0018 	add.w	r0, r4, #24
 80098e0:	f7fe fead 	bl	800863e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80098e4:	1d21      	adds	r1, r4, #4
 80098e6:	4608      	mov	r0, r1
 80098e8:	9101      	str	r1, [sp, #4]
 80098ea:	f7fe fea8 	bl	800863e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80098ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80098f0:	6832      	ldr	r2, [r6, #0]
 80098f2:	9901      	ldr	r1, [sp, #4]
 80098f4:	2014      	movs	r0, #20
 80098f6:	4293      	cmp	r3, r2
 80098f8:	fb00 7003 	mla	r0, r0, r3, r7
 80098fc:	bf88      	it	hi
 80098fe:	6033      	strhi	r3, [r6, #0]
 8009900:	f7fe fe7a 	bl	80085f8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009904:	4b1a      	ldr	r3, [pc, #104]	; (8009970 <xTaskResumeAll+0xdc>)
 8009906:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009908:	681b      	ldr	r3, [r3, #0]
 800990a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800990c:	429a      	cmp	r2, r3
 800990e:	d302      	bcc.n	8009916 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009910:	4b18      	ldr	r3, [pc, #96]	; (8009974 <xTaskResumeAll+0xe0>)
 8009912:	2201      	movs	r2, #1
 8009914:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009916:	682b      	ldr	r3, [r5, #0]
 8009918:	2b00      	cmp	r3, #0
 800991a:	d1dd      	bne.n	80098d8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800991c:	b10c      	cbz	r4, 8009922 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800991e:	f7ff fe01 	bl	8009524 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009922:	4d15      	ldr	r5, [pc, #84]	; (8009978 <xTaskResumeAll+0xe4>)
 8009924:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009926:	b144      	cbz	r4, 800993a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009928:	4e12      	ldr	r6, [pc, #72]	; (8009974 <xTaskResumeAll+0xe0>)
 800992a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800992c:	f7ff ff1c 	bl	8009768 <xTaskIncrementTick>
 8009930:	b100      	cbz	r0, 8009934 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009932:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009934:	3c01      	subs	r4, #1
 8009936:	d1f9      	bne.n	800992c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8009938:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800993a:	4b0e      	ldr	r3, [pc, #56]	; (8009974 <xTaskResumeAll+0xe0>)
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	2b00      	cmp	r3, #0
 8009940:	d0bc      	beq.n	80098bc <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009942:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009946:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800994a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800994e:	f3bf 8f4f 	dsb	sy
 8009952:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009956:	2401      	movs	r4, #1
 8009958:	e7b1      	b.n	80098be <xTaskResumeAll+0x2a>
 800995a:	bf00      	nop
 800995c:	2000be0c 	.word	0x2000be0c
 8009960:	2000be04 	.word	0x2000be04
 8009964:	2000be4c 	.word	0x2000be4c
 8009968:	2000be14 	.word	0x2000be14
 800996c:	2000b9a4 	.word	0x2000b9a4
 8009970:	2000b998 	.word	0x2000b998
 8009974:	2000be90 	.word	0x2000be90
 8009978:	2000be48 	.word	0x2000be48

0800997c <vTaskDelay>:
	{
 800997c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800997e:	b950      	cbnz	r0, 8009996 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009980:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009984:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009988:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800998c:	f3bf 8f4f 	dsb	sy
 8009990:	f3bf 8f6f 	isb	sy
	}
 8009994:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009996:	4b0a      	ldr	r3, [pc, #40]	; (80099c0 <vTaskDelay+0x44>)
 8009998:	6819      	ldr	r1, [r3, #0]
 800999a:	b141      	cbz	r1, 80099ae <vTaskDelay+0x32>
 800999c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099a0:	f383 8811 	msr	BASEPRI, r3
 80099a4:	f3bf 8f6f 	isb	sy
 80099a8:	f3bf 8f4f 	dsb	sy
 80099ac:	e7fe      	b.n	80099ac <vTaskDelay+0x30>
			vTaskSuspendAll();
 80099ae:	f7ff fecd 	bl	800974c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80099b2:	f7ff fd7f 	bl	80094b4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80099b6:	f7ff ff6d 	bl	8009894 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80099ba:	2800      	cmp	r0, #0
 80099bc:	d0e0      	beq.n	8009980 <vTaskDelay+0x4>
 80099be:	e7e9      	b.n	8009994 <vTaskDelay+0x18>
 80099c0:	2000be0c 	.word	0x2000be0c

080099c4 <vTaskSetApplicationTaskTag>:
	{
 80099c4:	b538      	push	{r3, r4, r5, lr}
 80099c6:	460d      	mov	r5, r1
		if( xTask == NULL )
 80099c8:	4604      	mov	r4, r0
 80099ca:	b908      	cbnz	r0, 80099d0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80099cc:	4b04      	ldr	r3, [pc, #16]	; (80099e0 <vTaskSetApplicationTaskTag+0x1c>)
 80099ce:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80099d0:	f7fe feb0 	bl	8008734 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80099d4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80099d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80099da:	f7fe becb 	b.w	8008774 <vPortExitCritical>
 80099de:	bf00      	nop
 80099e0:	2000b998 	.word	0x2000b998

080099e4 <xTaskCallApplicationTaskHook>:
	{
 80099e4:	4603      	mov	r3, r0
 80099e6:	4608      	mov	r0, r1
		if( xTask == NULL )
 80099e8:	b90b      	cbnz	r3, 80099ee <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80099ea:	4b03      	ldr	r3, [pc, #12]	; (80099f8 <xTaskCallApplicationTaskHook+0x14>)
 80099ec:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80099ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80099f0:	b103      	cbz	r3, 80099f4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80099f2:	4718      	bx	r3
	}
 80099f4:	4618      	mov	r0, r3
 80099f6:	4770      	bx	lr
 80099f8:	2000b998 	.word	0x2000b998

080099fc <vTaskStartScheduler>:
{
 80099fc:	b510      	push	{r4, lr}
 80099fe:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009a00:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009a02:	aa07      	add	r2, sp, #28
 8009a04:	a906      	add	r1, sp, #24
 8009a06:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009a08:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009a0c:	f7fe fcd4 	bl	80083b8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009a10:	9b05      	ldr	r3, [sp, #20]
 8009a12:	9302      	str	r3, [sp, #8]
 8009a14:	9b06      	ldr	r3, [sp, #24]
 8009a16:	9a07      	ldr	r2, [sp, #28]
 8009a18:	4919      	ldr	r1, [pc, #100]	; (8009a80 <vTaskStartScheduler+0x84>)
 8009a1a:	481a      	ldr	r0, [pc, #104]	; (8009a84 <vTaskStartScheduler+0x88>)
 8009a1c:	e9cd 4300 	strd	r4, r3, [sp]
 8009a20:	4623      	mov	r3, r4
 8009a22:	f7ff fe2e 	bl	8009682 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009a26:	b340      	cbz	r0, 8009a7a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009a28:	f000 fa8a 	bl	8009f40 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009a2c:	2801      	cmp	r0, #1
 8009a2e:	d119      	bne.n	8009a64 <vTaskStartScheduler+0x68>
 8009a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a34:	f383 8811 	msr	BASEPRI, r3
 8009a38:	f3bf 8f6f 	isb	sy
 8009a3c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a40:	4b11      	ldr	r3, [pc, #68]	; (8009a88 <vTaskStartScheduler+0x8c>)
 8009a42:	f04f 32ff 	mov.w	r2, #4294967295
 8009a46:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009a48:	4b10      	ldr	r3, [pc, #64]	; (8009a8c <vTaskStartScheduler+0x90>)
 8009a4a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009a4c:	4b10      	ldr	r3, [pc, #64]	; (8009a90 <vTaskStartScheduler+0x94>)
 8009a4e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009a50:	4b10      	ldr	r3, [pc, #64]	; (8009a94 <vTaskStartScheduler+0x98>)
 8009a52:	4621      	mov	r1, r4
 8009a54:	6818      	ldr	r0, [r3, #0]
 8009a56:	f7ff ffc5 	bl	80099e4 <xTaskCallApplicationTaskHook>
}
 8009a5a:	b008      	add	sp, #32
 8009a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009a60:	f7fe bef8 	b.w	8008854 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009a64:	3001      	adds	r0, #1
 8009a66:	d108      	bne.n	8009a7a <vTaskStartScheduler+0x7e>
 8009a68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a6c:	f383 8811 	msr	BASEPRI, r3
 8009a70:	f3bf 8f6f 	isb	sy
 8009a74:	f3bf 8f4f 	dsb	sy
 8009a78:	e7fe      	b.n	8009a78 <vTaskStartScheduler+0x7c>
}
 8009a7a:	b008      	add	sp, #32
 8009a7c:	bd10      	pop	{r4, pc}
 8009a7e:	bf00      	nop
 8009a80:	0801f791 	.word	0x0801f791
 8009a84:	08009581 	.word	0x08009581
 8009a88:	2000be40 	.word	0x2000be40
 8009a8c:	2000be60 	.word	0x2000be60
 8009a90:	2000be8c 	.word	0x2000be8c
 8009a94:	2000b998 	.word	0x2000b998

08009a98 <vTaskSwitchContext>:
{
 8009a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009a9a:	4b1c      	ldr	r3, [pc, #112]	; (8009b0c <vTaskSwitchContext+0x74>)
 8009a9c:	681a      	ldr	r2, [r3, #0]
 8009a9e:	4b1c      	ldr	r3, [pc, #112]	; (8009b10 <vTaskSwitchContext+0x78>)
 8009aa0:	b112      	cbz	r2, 8009aa8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009aa2:	2201      	movs	r2, #1
 8009aa4:	601a      	str	r2, [r3, #0]
}
 8009aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009aa8:	4c1a      	ldr	r4, [pc, #104]	; (8009b14 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 8009aaa:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009aac:	4e1a      	ldr	r6, [pc, #104]	; (8009b18 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 8009aae:	6820      	ldr	r0, [r4, #0]
 8009ab0:	2101      	movs	r1, #1
 8009ab2:	f7ff ff97 	bl	80099e4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ab6:	6832      	ldr	r2, [r6, #0]
 8009ab8:	4918      	ldr	r1, [pc, #96]	; (8009b1c <vTaskSwitchContext+0x84>)
 8009aba:	2714      	movs	r7, #20
 8009abc:	fb07 f302 	mul.w	r3, r7, r2
 8009ac0:	18c8      	adds	r0, r1, r3
 8009ac2:	58cd      	ldr	r5, [r1, r3]
 8009ac4:	b1ad      	cbz	r5, 8009af2 <vTaskSwitchContext+0x5a>
 8009ac6:	6845      	ldr	r5, [r0, #4]
 8009ac8:	3308      	adds	r3, #8
 8009aca:	686d      	ldr	r5, [r5, #4]
 8009acc:	6045      	str	r5, [r0, #4]
 8009ace:	440b      	add	r3, r1
 8009ad0:	429d      	cmp	r5, r3
 8009ad2:	bf04      	itt	eq
 8009ad4:	686b      	ldreq	r3, [r5, #4]
 8009ad6:	6043      	streq	r3, [r0, #4]
 8009ad8:	2314      	movs	r3, #20
 8009ada:	fb03 1102 	mla	r1, r3, r2, r1
 8009ade:	684b      	ldr	r3, [r1, #4]
 8009ae0:	68db      	ldr	r3, [r3, #12]
 8009ae2:	6023      	str	r3, [r4, #0]
 8009ae4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009ae6:	6820      	ldr	r0, [r4, #0]
 8009ae8:	2100      	movs	r1, #0
}
 8009aea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009aee:	f7ff bf79 	b.w	80099e4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009af2:	b942      	cbnz	r2, 8009b06 <vTaskSwitchContext+0x6e>
 8009af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009af8:	f383 8811 	msr	BASEPRI, r3
 8009afc:	f3bf 8f6f 	isb	sy
 8009b00:	f3bf 8f4f 	dsb	sy
 8009b04:	e7fe      	b.n	8009b04 <vTaskSwitchContext+0x6c>
 8009b06:	3a01      	subs	r2, #1
 8009b08:	e7d8      	b.n	8009abc <vTaskSwitchContext+0x24>
 8009b0a:	bf00      	nop
 8009b0c:	2000be0c 	.word	0x2000be0c
 8009b10:	2000be90 	.word	0x2000be90
 8009b14:	2000b998 	.word	0x2000b998
 8009b18:	2000be14 	.word	0x2000be14
 8009b1c:	2000b9a4 	.word	0x2000b9a4

08009b20 <vTaskPlaceOnEventList>:
{
 8009b20:	b510      	push	{r4, lr}
 8009b22:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009b24:	b940      	cbnz	r0, 8009b38 <vTaskPlaceOnEventList+0x18>
 8009b26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b2a:	f383 8811 	msr	BASEPRI, r3
 8009b2e:	f3bf 8f6f 	isb	sy
 8009b32:	f3bf 8f4f 	dsb	sy
 8009b36:	e7fe      	b.n	8009b36 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009b38:	4b05      	ldr	r3, [pc, #20]	; (8009b50 <vTaskPlaceOnEventList+0x30>)
 8009b3a:	6819      	ldr	r1, [r3, #0]
 8009b3c:	3118      	adds	r1, #24
 8009b3e:	f7fe fd67 	bl	8008610 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009b42:	4620      	mov	r0, r4
 8009b44:	2101      	movs	r1, #1
}
 8009b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009b4a:	f7ff bcb3 	b.w	80094b4 <prvAddCurrentTaskToDelayedList>
 8009b4e:	bf00      	nop
 8009b50:	2000b998 	.word	0x2000b998

08009b54 <vTaskPlaceOnEventListRestricted>:
	{
 8009b54:	b538      	push	{r3, r4, r5, lr}
 8009b56:	460d      	mov	r5, r1
 8009b58:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009b5a:	b940      	cbnz	r0, 8009b6e <vTaskPlaceOnEventListRestricted+0x1a>
 8009b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b60:	f383 8811 	msr	BASEPRI, r3
 8009b64:	f3bf 8f6f 	isb	sy
 8009b68:	f3bf 8f4f 	dsb	sy
 8009b6c:	e7fe      	b.n	8009b6c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009b6e:	4b07      	ldr	r3, [pc, #28]	; (8009b8c <vTaskPlaceOnEventListRestricted+0x38>)
 8009b70:	6819      	ldr	r1, [r3, #0]
 8009b72:	3118      	adds	r1, #24
 8009b74:	f7fe fd40 	bl	80085f8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009b78:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009b7a:	4621      	mov	r1, r4
 8009b7c:	bf0c      	ite	eq
 8009b7e:	4628      	moveq	r0, r5
 8009b80:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009b84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009b88:	f7ff bc94 	b.w	80094b4 <prvAddCurrentTaskToDelayedList>
 8009b8c:	2000b998 	.word	0x2000b998

08009b90 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b90:	68c3      	ldr	r3, [r0, #12]
{
 8009b92:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b94:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009b96:	b944      	cbnz	r4, 8009baa <xTaskRemoveFromEventList+0x1a>
 8009b98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b9c:	f383 8811 	msr	BASEPRI, r3
 8009ba0:	f3bf 8f6f 	isb	sy
 8009ba4:	f3bf 8f4f 	dsb	sy
 8009ba8:	e7fe      	b.n	8009ba8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009baa:	f104 0118 	add.w	r1, r4, #24
 8009bae:	4608      	mov	r0, r1
 8009bb0:	9101      	str	r1, [sp, #4]
 8009bb2:	f7fe fd44 	bl	800863e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009bb6:	4b12      	ldr	r3, [pc, #72]	; (8009c00 <xTaskRemoveFromEventList+0x70>)
 8009bb8:	9901      	ldr	r1, [sp, #4]
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	b9eb      	cbnz	r3, 8009bfa <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009bbe:	1d21      	adds	r1, r4, #4
 8009bc0:	4608      	mov	r0, r1
 8009bc2:	9101      	str	r1, [sp, #4]
 8009bc4:	f7fe fd3b 	bl	800863e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009bc8:	4a0e      	ldr	r2, [pc, #56]	; (8009c04 <xTaskRemoveFromEventList+0x74>)
 8009bca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009bcc:	6810      	ldr	r0, [r2, #0]
 8009bce:	9901      	ldr	r1, [sp, #4]
 8009bd0:	4283      	cmp	r3, r0
 8009bd2:	bf88      	it	hi
 8009bd4:	6013      	strhi	r3, [r2, #0]
 8009bd6:	4a0c      	ldr	r2, [pc, #48]	; (8009c08 <xTaskRemoveFromEventList+0x78>)
 8009bd8:	2014      	movs	r0, #20
 8009bda:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009bde:	f7fe fd0b 	bl	80085f8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009be2:	4b0a      	ldr	r3, [pc, #40]	; (8009c0c <xTaskRemoveFromEventList+0x7c>)
 8009be4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009be6:	681b      	ldr	r3, [r3, #0]
 8009be8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bea:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009bec:	bf85      	ittet	hi
 8009bee:	4b08      	ldrhi	r3, [pc, #32]	; (8009c10 <xTaskRemoveFromEventList+0x80>)
 8009bf0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8009bf2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009bf4:	6018      	strhi	r0, [r3, #0]
}
 8009bf6:	b002      	add	sp, #8
 8009bf8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009bfa:	4806      	ldr	r0, [pc, #24]	; (8009c14 <xTaskRemoveFromEventList+0x84>)
 8009bfc:	e7ef      	b.n	8009bde <xTaskRemoveFromEventList+0x4e>
 8009bfe:	bf00      	nop
 8009c00:	2000be0c 	.word	0x2000be0c
 8009c04:	2000be14 	.word	0x2000be14
 8009c08:	2000b9a4 	.word	0x2000b9a4
 8009c0c:	2000b998 	.word	0x2000b998
 8009c10:	2000be90 	.word	0x2000be90
 8009c14:	2000be4c 	.word	0x2000be4c

08009c18 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009c18:	4b03      	ldr	r3, [pc, #12]	; (8009c28 <vTaskInternalSetTimeOutState+0x10>)
 8009c1a:	681b      	ldr	r3, [r3, #0]
 8009c1c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009c1e:	4b03      	ldr	r3, [pc, #12]	; (8009c2c <vTaskInternalSetTimeOutState+0x14>)
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	6043      	str	r3, [r0, #4]
}
 8009c24:	4770      	bx	lr
 8009c26:	bf00      	nop
 8009c28:	2000be44 	.word	0x2000be44
 8009c2c:	2000be8c 	.word	0x2000be8c

08009c30 <xTaskCheckForTimeOut>:
{
 8009c30:	b570      	push	{r4, r5, r6, lr}
 8009c32:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009c34:	4605      	mov	r5, r0
 8009c36:	b940      	cbnz	r0, 8009c4a <xTaskCheckForTimeOut+0x1a>
 8009c38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c3c:	f383 8811 	msr	BASEPRI, r3
 8009c40:	f3bf 8f6f 	isb	sy
 8009c44:	f3bf 8f4f 	dsb	sy
 8009c48:	e7fe      	b.n	8009c48 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009c4a:	b941      	cbnz	r1, 8009c5e <xTaskCheckForTimeOut+0x2e>
 8009c4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c50:	f383 8811 	msr	BASEPRI, r3
 8009c54:	f3bf 8f6f 	isb	sy
 8009c58:	f3bf 8f4f 	dsb	sy
 8009c5c:	e7fe      	b.n	8009c5c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009c5e:	f7fe fd69 	bl	8008734 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009c62:	4b0f      	ldr	r3, [pc, #60]	; (8009ca0 <xTaskCheckForTimeOut+0x70>)
 8009c64:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009c66:	6823      	ldr	r3, [r4, #0]
 8009c68:	1c5a      	adds	r2, r3, #1
 8009c6a:	d010      	beq.n	8009c8e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009c6c:	480d      	ldr	r0, [pc, #52]	; (8009ca4 <xTaskCheckForTimeOut+0x74>)
 8009c6e:	682e      	ldr	r6, [r5, #0]
 8009c70:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009c72:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009c74:	4286      	cmp	r6, r0
 8009c76:	d001      	beq.n	8009c7c <xTaskCheckForTimeOut+0x4c>
 8009c78:	428a      	cmp	r2, r1
 8009c7a:	d90f      	bls.n	8009c9c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009c7c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009c7e:	4283      	cmp	r3, r0
 8009c80:	d90a      	bls.n	8009c98 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009c82:	1a5b      	subs	r3, r3, r1
 8009c84:	4413      	add	r3, r2
 8009c86:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009c88:	4628      	mov	r0, r5
 8009c8a:	f7ff ffc5 	bl	8009c18 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009c8e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009c90:	f7fe fd70 	bl	8008774 <vPortExitCritical>
}
 8009c94:	4620      	mov	r0, r4
 8009c96:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009c98:	2300      	movs	r3, #0
 8009c9a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009c9c:	2401      	movs	r4, #1
 8009c9e:	e7f7      	b.n	8009c90 <xTaskCheckForTimeOut+0x60>
 8009ca0:	2000be8c 	.word	0x2000be8c
 8009ca4:	2000be44 	.word	0x2000be44

08009ca8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009ca8:	4b01      	ldr	r3, [pc, #4]	; (8009cb0 <vTaskMissedYield+0x8>)
 8009caa:	2201      	movs	r2, #1
 8009cac:	601a      	str	r2, [r3, #0]
}
 8009cae:	4770      	bx	lr
 8009cb0:	2000be90 	.word	0x2000be90

08009cb4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009cb4:	4b05      	ldr	r3, [pc, #20]	; (8009ccc <xTaskGetSchedulerState+0x18>)
 8009cb6:	681b      	ldr	r3, [r3, #0]
 8009cb8:	b133      	cbz	r3, 8009cc8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009cba:	4b05      	ldr	r3, [pc, #20]	; (8009cd0 <xTaskGetSchedulerState+0x1c>)
 8009cbc:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8009cbe:	2b00      	cmp	r3, #0
 8009cc0:	bf0c      	ite	eq
 8009cc2:	2002      	moveq	r0, #2
 8009cc4:	2000      	movne	r0, #0
 8009cc6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009cc8:	2001      	movs	r0, #1
	}
 8009cca:	4770      	bx	lr
 8009ccc:	2000be60 	.word	0x2000be60
 8009cd0:	2000be0c 	.word	0x2000be0c

08009cd4 <xTaskPriorityInherit>:
	{
 8009cd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009cd6:	4604      	mov	r4, r0
 8009cd8:	b348      	cbz	r0, 8009d2e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009cda:	4d1c      	ldr	r5, [pc, #112]	; (8009d4c <xTaskPriorityInherit+0x78>)
 8009cdc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009cde:	682a      	ldr	r2, [r5, #0]
 8009ce0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009ce2:	4293      	cmp	r3, r2
 8009ce4:	d229      	bcs.n	8009d3a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009ce6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009ce8:	4e19      	ldr	r6, [pc, #100]	; (8009d50 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009cea:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cec:	bfa1      	itttt	ge
 8009cee:	682a      	ldrge	r2, [r5, #0]
 8009cf0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8009cf2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009cf6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009cf8:	2214      	movs	r2, #20
 8009cfa:	fb02 6303 	mla	r3, r2, r3, r6
 8009cfe:	6942      	ldr	r2, [r0, #20]
 8009d00:	429a      	cmp	r2, r3
 8009d02:	d116      	bne.n	8009d32 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d04:	1d01      	adds	r1, r0, #4
 8009d06:	4608      	mov	r0, r1
 8009d08:	9101      	str	r1, [sp, #4]
 8009d0a:	f7fe fc98 	bl	800863e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d0e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d10:	4a10      	ldr	r2, [pc, #64]	; (8009d54 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d14:	6810      	ldr	r0, [r2, #0]
 8009d16:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d18:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009d1a:	4283      	cmp	r3, r0
 8009d1c:	f04f 0014 	mov.w	r0, #20
 8009d20:	fb00 6003 	mla	r0, r0, r3, r6
 8009d24:	bf88      	it	hi
 8009d26:	6013      	strhi	r3, [r2, #0]
 8009d28:	f7fe fc66 	bl	80085f8 <vListInsertEnd>
				xReturn = pdTRUE;
 8009d2c:	2001      	movs	r0, #1
	}
 8009d2e:	b002      	add	sp, #8
 8009d30:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009d32:	682b      	ldr	r3, [r5, #0]
 8009d34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d36:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009d38:	e7f8      	b.n	8009d2c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009d3a:	682b      	ldr	r3, [r5, #0]
 8009d3c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009d3e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009d40:	42a0      	cmp	r0, r4
 8009d42:	bf2c      	ite	cs
 8009d44:	2000      	movcs	r0, #0
 8009d46:	2001      	movcc	r0, #1
 8009d48:	e7f1      	b.n	8009d2e <xTaskPriorityInherit+0x5a>
 8009d4a:	bf00      	nop
 8009d4c:	2000b998 	.word	0x2000b998
 8009d50:	2000b9a4 	.word	0x2000b9a4
 8009d54:	2000be14 	.word	0x2000be14

08009d58 <xTaskPriorityDisinherit>:
	{
 8009d58:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009d5a:	b910      	cbnz	r0, 8009d62 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009d5c:	2000      	movs	r0, #0
	}
 8009d5e:	b002      	add	sp, #8
 8009d60:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009d62:	4b1c      	ldr	r3, [pc, #112]	; (8009dd4 <xTaskPriorityDisinherit+0x7c>)
 8009d64:	681c      	ldr	r4, [r3, #0]
 8009d66:	4284      	cmp	r4, r0
 8009d68:	d008      	beq.n	8009d7c <xTaskPriorityDisinherit+0x24>
 8009d6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d6e:	f383 8811 	msr	BASEPRI, r3
 8009d72:	f3bf 8f6f 	isb	sy
 8009d76:	f3bf 8f4f 	dsb	sy
 8009d7a:	e7fe      	b.n	8009d7a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009d7c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009d7e:	b943      	cbnz	r3, 8009d92 <xTaskPriorityDisinherit+0x3a>
 8009d80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d84:	f383 8811 	msr	BASEPRI, r3
 8009d88:	f3bf 8f6f 	isb	sy
 8009d8c:	f3bf 8f4f 	dsb	sy
 8009d90:	e7fe      	b.n	8009d90 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009d92:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009d94:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009d96:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009d98:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009d9a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009d9c:	d0de      	beq.n	8009d5c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	d1dc      	bne.n	8009d5c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009da2:	1d21      	adds	r1, r4, #4
 8009da4:	4608      	mov	r0, r1
 8009da6:	9101      	str	r1, [sp, #4]
 8009da8:	f7fe fc49 	bl	800863e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009dac:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009dae:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009db0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009db2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009db6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009db8:	4a07      	ldr	r2, [pc, #28]	; (8009dd8 <xTaskPriorityDisinherit+0x80>)
 8009dba:	6810      	ldr	r0, [r2, #0]
 8009dbc:	4283      	cmp	r3, r0
 8009dbe:	bf88      	it	hi
 8009dc0:	6013      	strhi	r3, [r2, #0]
 8009dc2:	4a06      	ldr	r2, [pc, #24]	; (8009ddc <xTaskPriorityDisinherit+0x84>)
 8009dc4:	2014      	movs	r0, #20
 8009dc6:	fb00 2003 	mla	r0, r0, r3, r2
 8009dca:	f7fe fc15 	bl	80085f8 <vListInsertEnd>
					xReturn = pdTRUE;
 8009dce:	2001      	movs	r0, #1
		return xReturn;
 8009dd0:	e7c5      	b.n	8009d5e <xTaskPriorityDisinherit+0x6>
 8009dd2:	bf00      	nop
 8009dd4:	2000b998 	.word	0x2000b998
 8009dd8:	2000be14 	.word	0x2000be14
 8009ddc:	2000b9a4 	.word	0x2000b9a4

08009de0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009de0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009de2:	4604      	mov	r4, r0
 8009de4:	2800      	cmp	r0, #0
 8009de6:	d044      	beq.n	8009e72 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009de8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009dea:	b942      	cbnz	r2, 8009dfe <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009dec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009df0:	f383 8811 	msr	BASEPRI, r3
 8009df4:	f3bf 8f6f 	isb	sy
 8009df8:	f3bf 8f4f 	dsb	sy
 8009dfc:	e7fe      	b.n	8009dfc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009dfe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009e00:	4299      	cmp	r1, r3
 8009e02:	bf38      	it	cc
 8009e04:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009e06:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009e08:	428b      	cmp	r3, r1
 8009e0a:	d032      	beq.n	8009e72 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009e0c:	2a01      	cmp	r2, #1
 8009e0e:	d130      	bne.n	8009e72 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009e10:	4a19      	ldr	r2, [pc, #100]	; (8009e78 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009e12:	6812      	ldr	r2, [r2, #0]
 8009e14:	4282      	cmp	r2, r0
 8009e16:	d108      	bne.n	8009e2a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009e18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e1c:	f383 8811 	msr	BASEPRI, r3
 8009e20:	f3bf 8f6f 	isb	sy
 8009e24:	f3bf 8f4f 	dsb	sy
 8009e28:	e7fe      	b.n	8009e28 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009e2a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e2c:	4d13      	ldr	r5, [pc, #76]	; (8009e7c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009e2e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009e30:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e32:	f04f 0214 	mov.w	r2, #20
 8009e36:	fb02 5303 	mla	r3, r2, r3, r5
 8009e3a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e3c:	bfa4      	itt	ge
 8009e3e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009e42:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009e44:	429a      	cmp	r2, r3
 8009e46:	d114      	bne.n	8009e72 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009e48:	1d01      	adds	r1, r0, #4
 8009e4a:	4608      	mov	r0, r1
 8009e4c:	9101      	str	r1, [sp, #4]
 8009e4e:	f7fe fbf6 	bl	800863e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009e52:	4a0b      	ldr	r2, [pc, #44]	; (8009e80 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009e54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e56:	6810      	ldr	r0, [r2, #0]
 8009e58:	9901      	ldr	r1, [sp, #4]
 8009e5a:	4283      	cmp	r3, r0
 8009e5c:	f04f 0014 	mov.w	r0, #20
 8009e60:	fb00 5003 	mla	r0, r0, r3, r5
 8009e64:	bf88      	it	hi
 8009e66:	6013      	strhi	r3, [r2, #0]
	}
 8009e68:	b003      	add	sp, #12
 8009e6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009e6e:	f7fe bbc3 	b.w	80085f8 <vListInsertEnd>
	}
 8009e72:	b003      	add	sp, #12
 8009e74:	bd30      	pop	{r4, r5, pc}
 8009e76:	bf00      	nop
 8009e78:	2000b998 	.word	0x2000b998
 8009e7c:	2000b9a4 	.word	0x2000b9a4
 8009e80:	2000be14 	.word	0x2000be14

08009e84 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009e84:	4b04      	ldr	r3, [pc, #16]	; (8009e98 <pvTaskIncrementMutexHeldCount+0x14>)
 8009e86:	681a      	ldr	r2, [r3, #0]
 8009e88:	b11a      	cbz	r2, 8009e92 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009e8a:	6819      	ldr	r1, [r3, #0]
 8009e8c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009e8e:	3201      	adds	r2, #1
 8009e90:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009e92:	6818      	ldr	r0, [r3, #0]
	}
 8009e94:	4770      	bx	lr
 8009e96:	bf00      	nop
 8009e98:	2000b998 	.word	0x2000b998

08009e9c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009e9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009e9e:	4c11      	ldr	r4, [pc, #68]	; (8009ee4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009ea0:	f7fe fc48 	bl	8008734 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009ea4:	6825      	ldr	r5, [r4, #0]
 8009ea6:	b9bd      	cbnz	r5, 8009ed8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009ea8:	4f0f      	ldr	r7, [pc, #60]	; (8009ee8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009eaa:	4e10      	ldr	r6, [pc, #64]	; (8009eec <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009eac:	4638      	mov	r0, r7
 8009eae:	f7fe fb95 	bl	80085dc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009eb2:	4630      	mov	r0, r6
 8009eb4:	f7fe fb92 	bl	80085dc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009eb8:	4b0d      	ldr	r3, [pc, #52]	; (8009ef0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009eba:	4a0e      	ldr	r2, [pc, #56]	; (8009ef4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009ebc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009ebe:	4b0e      	ldr	r3, [pc, #56]	; (8009ef8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009ec0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009ec2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009ec4:	200a      	movs	r0, #10
 8009ec6:	4b0d      	ldr	r3, [pc, #52]	; (8009efc <prvCheckForValidListAndQueue+0x60>)
 8009ec8:	9500      	str	r5, [sp, #0]
 8009eca:	f7fe fe44 	bl	8008b56 <xQueueGenericCreateStatic>
 8009ece:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009ed0:	b110      	cbz	r0, 8009ed8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009ed2:	490b      	ldr	r1, [pc, #44]	; (8009f00 <prvCheckForValidListAndQueue+0x64>)
 8009ed4:	f7ff fa0e 	bl	80092f4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009ed8:	b003      	add	sp, #12
 8009eda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009ede:	f7fe bc49 	b.w	8008774 <vPortExitCritical>
 8009ee2:	bf00      	nop
 8009ee4:	2000bfb8 	.word	0x2000bfb8
 8009ee8:	2000bf3c 	.word	0x2000bf3c
 8009eec:	2000bf50 	.word	0x2000bf50
 8009ef0:	2000be94 	.word	0x2000be94
 8009ef4:	2000be9c 	.word	0x2000be9c
 8009ef8:	2000be98 	.word	0x2000be98
 8009efc:	2000bf68 	.word	0x2000bf68
 8009f00:	0801f796 	.word	0x0801f796

08009f04 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009f04:	4291      	cmp	r1, r2
{
 8009f06:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009f08:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009f0a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009f0c:	d80a      	bhi.n	8009f24 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009f0e:	1ad2      	subs	r2, r2, r3
 8009f10:	6983      	ldr	r3, [r0, #24]
 8009f12:	429a      	cmp	r2, r3
 8009f14:	d20d      	bcs.n	8009f32 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009f16:	4b08      	ldr	r3, [pc, #32]	; (8009f38 <prvInsertTimerInActiveList+0x34>)
 8009f18:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009f1a:	6818      	ldr	r0, [r3, #0]
 8009f1c:	f7fe fb78 	bl	8008610 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009f20:	2000      	movs	r0, #0
}
 8009f22:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009f24:	429a      	cmp	r2, r3
 8009f26:	d201      	bcs.n	8009f2c <prvInsertTimerInActiveList+0x28>
 8009f28:	4299      	cmp	r1, r3
 8009f2a:	d202      	bcs.n	8009f32 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009f2c:	4b03      	ldr	r3, [pc, #12]	; (8009f3c <prvInsertTimerInActiveList+0x38>)
 8009f2e:	1d01      	adds	r1, r0, #4
 8009f30:	e7f3      	b.n	8009f1a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009f32:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009f34:	e7f5      	b.n	8009f22 <prvInsertTimerInActiveList+0x1e>
 8009f36:	bf00      	nop
 8009f38:	2000be98 	.word	0x2000be98
 8009f3c:	2000be94 	.word	0x2000be94

08009f40 <xTimerCreateTimerTask>:
{
 8009f40:	b510      	push	{r4, lr}
 8009f42:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009f44:	f7ff ffaa 	bl	8009e9c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009f48:	4b12      	ldr	r3, [pc, #72]	; (8009f94 <xTimerCreateTimerTask+0x54>)
 8009f4a:	681b      	ldr	r3, [r3, #0]
 8009f4c:	b1b3      	cbz	r3, 8009f7c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009f4e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009f50:	aa07      	add	r2, sp, #28
 8009f52:	a906      	add	r1, sp, #24
 8009f54:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009f56:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009f5a:	f7fe fa39 	bl	80083d0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009f5e:	9b05      	ldr	r3, [sp, #20]
 8009f60:	9302      	str	r3, [sp, #8]
 8009f62:	9b06      	ldr	r3, [sp, #24]
 8009f64:	9301      	str	r3, [sp, #4]
 8009f66:	2302      	movs	r3, #2
 8009f68:	9300      	str	r3, [sp, #0]
 8009f6a:	9a07      	ldr	r2, [sp, #28]
 8009f6c:	490a      	ldr	r1, [pc, #40]	; (8009f98 <xTimerCreateTimerTask+0x58>)
 8009f6e:	480b      	ldr	r0, [pc, #44]	; (8009f9c <xTimerCreateTimerTask+0x5c>)
 8009f70:	4623      	mov	r3, r4
 8009f72:	f7ff fb86 	bl	8009682 <xTaskCreateStatic>
 8009f76:	4b0a      	ldr	r3, [pc, #40]	; (8009fa0 <xTimerCreateTimerTask+0x60>)
 8009f78:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009f7a:	b940      	cbnz	r0, 8009f8e <xTimerCreateTimerTask+0x4e>
 8009f7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f80:	f383 8811 	msr	BASEPRI, r3
 8009f84:	f3bf 8f6f 	isb	sy
 8009f88:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009f8c:	e7fe      	b.n	8009f8c <xTimerCreateTimerTask+0x4c>
}
 8009f8e:	2001      	movs	r0, #1
 8009f90:	b008      	add	sp, #32
 8009f92:	bd10      	pop	{r4, pc}
 8009f94:	2000bfb8 	.word	0x2000bfb8
 8009f98:	0801f79b 	.word	0x0801f79b
 8009f9c:	0800a0a9 	.word	0x0800a0a9
 8009fa0:	2000bfbc 	.word	0x2000bfbc

08009fa4 <xTimerGenericCommand>:
{
 8009fa4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009fa6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009fa8:	4604      	mov	r4, r0
{
 8009faa:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009fac:	b940      	cbnz	r0, 8009fc0 <xTimerGenericCommand+0x1c>
 8009fae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb2:	f383 8811 	msr	BASEPRI, r3
 8009fb6:	f3bf 8f6f 	isb	sy
 8009fba:	f3bf 8f4f 	dsb	sy
 8009fbe:	e7fe      	b.n	8009fbe <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009fc0:	4d0d      	ldr	r5, [pc, #52]	; (8009ff8 <xTimerGenericCommand+0x54>)
 8009fc2:	6828      	ldr	r0, [r5, #0]
 8009fc4:	b180      	cbz	r0, 8009fe8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009fc6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009fc8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009fcc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009fce:	dc0d      	bgt.n	8009fec <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009fd0:	f7ff fe70 	bl	8009cb4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009fd4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009fd6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009fd8:	bf08      	it	eq
 8009fda:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009fdc:	6828      	ldr	r0, [r5, #0]
 8009fde:	bf18      	it	ne
 8009fe0:	461a      	movne	r2, r3
 8009fe2:	4669      	mov	r1, sp
 8009fe4:	f7fe fe6c 	bl	8008cc0 <xQueueGenericSend>
}
 8009fe8:	b004      	add	sp, #16
 8009fea:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009fec:	2300      	movs	r3, #0
 8009fee:	4669      	mov	r1, sp
 8009ff0:	f7fe ff19 	bl	8008e26 <xQueueGenericSendFromISR>
 8009ff4:	e7f8      	b.n	8009fe8 <xTimerGenericCommand+0x44>
 8009ff6:	bf00      	nop
 8009ff8:	2000bfb8 	.word	0x2000bfb8

08009ffc <prvSampleTimeNow>:
{
 8009ffc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a000:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a0a4 <prvSampleTimeNow+0xa8>
{
 800a004:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a006:	f7ff fba9 	bl	800975c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a00a:	f8d8 3000 	ldr.w	r3, [r8]
 800a00e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a010:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a012:	d940      	bls.n	800a096 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a014:	4f21      	ldr	r7, [pc, #132]	; (800a09c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a016:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a01a:	683b      	ldr	r3, [r7, #0]
 800a01c:	681a      	ldr	r2, [r3, #0]
 800a01e:	b95a      	cbnz	r2, 800a038 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a020:	4a1f      	ldr	r2, [pc, #124]	; (800a0a0 <prvSampleTimeNow+0xa4>)
 800a022:	6811      	ldr	r1, [r2, #0]
 800a024:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a026:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a028:	2301      	movs	r3, #1
}
 800a02a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a02c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a02e:	f8c8 5000 	str.w	r5, [r8]
}
 800a032:	b004      	add	sp, #16
 800a034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a038:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a03a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a03c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a040:	1d21      	adds	r1, r4, #4
 800a042:	4608      	mov	r0, r1
 800a044:	9103      	str	r1, [sp, #12]
 800a046:	f7fe fafa 	bl	800863e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a04a:	6a23      	ldr	r3, [r4, #32]
 800a04c:	4620      	mov	r0, r4
 800a04e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a050:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a054:	9903      	ldr	r1, [sp, #12]
 800a056:	f013 0f04 	tst.w	r3, #4
 800a05a:	d0de      	beq.n	800a01a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a05c:	69a3      	ldr	r3, [r4, #24]
 800a05e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a060:	459a      	cmp	sl, r3
 800a062:	d205      	bcs.n	800a070 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a064:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a066:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a068:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a06a:	f7fe fad1 	bl	8008610 <vListInsert>
 800a06e:	e7d4      	b.n	800a01a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a070:	2300      	movs	r3, #0
 800a072:	f8cd 9000 	str.w	r9, [sp]
 800a076:	4652      	mov	r2, sl
 800a078:	4619      	mov	r1, r3
 800a07a:	4620      	mov	r0, r4
 800a07c:	f7ff ff92 	bl	8009fa4 <xTimerGenericCommand>
				configASSERT( xResult );
 800a080:	2800      	cmp	r0, #0
 800a082:	d1ca      	bne.n	800a01a <prvSampleTimeNow+0x1e>
 800a084:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a088:	f383 8811 	msr	BASEPRI, r3
 800a08c:	f3bf 8f6f 	isb	sy
 800a090:	f3bf 8f4f 	dsb	sy
 800a094:	e7fe      	b.n	800a094 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a096:	2300      	movs	r3, #0
 800a098:	e7c7      	b.n	800a02a <prvSampleTimeNow+0x2e>
 800a09a:	bf00      	nop
 800a09c:	2000be94 	.word	0x2000be94
 800a0a0:	2000be98 	.word	0x2000be98
 800a0a4:	2000bf64 	.word	0x2000bf64

0800a0a8 <prvTimerTask>:
{
 800a0a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0ac:	4d6e      	ldr	r5, [pc, #440]	; (800a268 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a0ae:	4e6f      	ldr	r6, [pc, #444]	; (800a26c <prvTimerTask+0x1c4>)
{
 800a0b0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0b2:	682b      	ldr	r3, [r5, #0]
 800a0b4:	f8d3 8000 	ldr.w	r8, [r3]
 800a0b8:	f1b8 0f00 	cmp.w	r8, #0
 800a0bc:	d035      	beq.n	800a12a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a0be:	68db      	ldr	r3, [r3, #12]
 800a0c0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a0c4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a0c6:	f7ff fb41 	bl	800974c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0ca:	a804      	add	r0, sp, #16
 800a0cc:	f7ff ff96 	bl	8009ffc <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a0d0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a0d2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a0d4:	2b00      	cmp	r3, #0
 800a0d6:	d169      	bne.n	800a1ac <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a0d8:	2c00      	cmp	r4, #0
 800a0da:	d14c      	bne.n	800a176 <prvTimerTask+0xce>
 800a0dc:	4540      	cmp	r0, r8
 800a0de:	d350      	bcc.n	800a182 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a0e0:	f7ff fbd8 	bl	8009894 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0e4:	682b      	ldr	r3, [r5, #0]
 800a0e6:	68db      	ldr	r3, [r3, #12]
 800a0e8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a0ea:	1d38      	adds	r0, r7, #4
 800a0ec:	f7fe faa7 	bl	800863e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a0f0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a0f4:	0758      	lsls	r0, r3, #29
 800a0f6:	d51a      	bpl.n	800a12e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a0f8:	69b9      	ldr	r1, [r7, #24]
 800a0fa:	4643      	mov	r3, r8
 800a0fc:	464a      	mov	r2, r9
 800a0fe:	4441      	add	r1, r8
 800a100:	4638      	mov	r0, r7
 800a102:	f7ff feff 	bl	8009f04 <prvInsertTimerInActiveList>
 800a106:	b1b0      	cbz	r0, 800a136 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a108:	9400      	str	r4, [sp, #0]
 800a10a:	4623      	mov	r3, r4
 800a10c:	4642      	mov	r2, r8
 800a10e:	4621      	mov	r1, r4
 800a110:	4638      	mov	r0, r7
 800a112:	f7ff ff47 	bl	8009fa4 <xTimerGenericCommand>
			configASSERT( xResult );
 800a116:	b970      	cbnz	r0, 800a136 <prvTimerTask+0x8e>
 800a118:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a11c:	f383 8811 	msr	BASEPRI, r3
 800a120:	f3bf 8f6f 	isb	sy
 800a124:	f3bf 8f4f 	dsb	sy
 800a128:	e7fe      	b.n	800a128 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a12a:	2401      	movs	r4, #1
 800a12c:	e7cb      	b.n	800a0c6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a12e:	f023 0301 	bic.w	r3, r3, #1
 800a132:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a136:	6a3b      	ldr	r3, [r7, #32]
 800a138:	4638      	mov	r0, r7
 800a13a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a13c:	6830      	ldr	r0, [r6, #0]
 800a13e:	2200      	movs	r2, #0
 800a140:	a904      	add	r1, sp, #16
 800a142:	f7fe ff26 	bl	8008f92 <xQueueReceive>
 800a146:	2800      	cmp	r0, #0
 800a148:	d0b3      	beq.n	800a0b2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a14a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a14c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a14e:	2b00      	cmp	r3, #0
 800a150:	db2f      	blt.n	800a1b2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a152:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a154:	6963      	ldr	r3, [r4, #20]
 800a156:	2b00      	cmp	r3, #0
 800a158:	d132      	bne.n	800a1c0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a15a:	a803      	add	r0, sp, #12
 800a15c:	f7ff ff4e 	bl	8009ffc <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a160:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a162:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a164:	2b09      	cmp	r3, #9
 800a166:	d8e9      	bhi.n	800a13c <prvTimerTask+0x94>
 800a168:	e8df f003 	tbb	[pc, r3]
 800a16c:	572e2e2e 	.word	0x572e2e2e
 800a170:	2e2e765e 	.word	0x2e2e765e
 800a174:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a176:	4b3e      	ldr	r3, [pc, #248]	; (800a270 <prvTimerTask+0x1c8>)
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	681c      	ldr	r4, [r3, #0]
 800a17c:	fab4 f484 	clz	r4, r4
 800a180:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a182:	6830      	ldr	r0, [r6, #0]
 800a184:	4622      	mov	r2, r4
 800a186:	eba8 0109 	sub.w	r1, r8, r9
 800a18a:	f7ff f8f0 	bl	800936e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a18e:	f7ff fb81 	bl	8009894 <xTaskResumeAll>
 800a192:	2800      	cmp	r0, #0
 800a194:	d1d2      	bne.n	800a13c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a196:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a19a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a19e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a1a2:	f3bf 8f4f 	dsb	sy
 800a1a6:	f3bf 8f6f 	isb	sy
 800a1aa:	e7c7      	b.n	800a13c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a1ac:	f7ff fb72 	bl	8009894 <xTaskResumeAll>
}
 800a1b0:	e7c4      	b.n	800a13c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a1b2:	9b05      	ldr	r3, [sp, #20]
 800a1b4:	9907      	ldr	r1, [sp, #28]
 800a1b6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a1b8:	9b04      	ldr	r3, [sp, #16]
 800a1ba:	2b00      	cmp	r3, #0
 800a1bc:	dbbe      	blt.n	800a13c <prvTimerTask+0x94>
 800a1be:	e7c8      	b.n	800a152 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a1c0:	1d20      	adds	r0, r4, #4
 800a1c2:	f7fe fa3c 	bl	800863e <uxListRemove>
 800a1c6:	e7c8      	b.n	800a15a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a1c8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a1cc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a1ce:	f043 0301 	orr.w	r3, r3, #1
 800a1d2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a1d6:	9b05      	ldr	r3, [sp, #20]
 800a1d8:	4620      	mov	r0, r4
 800a1da:	4419      	add	r1, r3
 800a1dc:	f7ff fe92 	bl	8009f04 <prvInsertTimerInActiveList>
 800a1e0:	2800      	cmp	r0, #0
 800a1e2:	d0ab      	beq.n	800a13c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a1e4:	6a23      	ldr	r3, [r4, #32]
 800a1e6:	4620      	mov	r0, r4
 800a1e8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a1ea:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a1ee:	0759      	lsls	r1, r3, #29
 800a1f0:	d5a4      	bpl.n	800a13c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a1f2:	69a2      	ldr	r2, [r4, #24]
 800a1f4:	9905      	ldr	r1, [sp, #20]
 800a1f6:	2300      	movs	r3, #0
 800a1f8:	440a      	add	r2, r1
 800a1fa:	9300      	str	r3, [sp, #0]
 800a1fc:	4619      	mov	r1, r3
 800a1fe:	4620      	mov	r0, r4
 800a200:	f7ff fed0 	bl	8009fa4 <xTimerGenericCommand>
							configASSERT( xResult );
 800a204:	2800      	cmp	r0, #0
 800a206:	d199      	bne.n	800a13c <prvTimerTask+0x94>
 800a208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a20c:	f383 8811 	msr	BASEPRI, r3
 800a210:	f3bf 8f6f 	isb	sy
 800a214:	f3bf 8f4f 	dsb	sy
 800a218:	e7fe      	b.n	800a218 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a21a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a21e:	f023 0301 	bic.w	r3, r3, #1
 800a222:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a226:	e789      	b.n	800a13c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a228:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a22c:	f043 0301 	orr.w	r3, r3, #1
 800a230:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a234:	9905      	ldr	r1, [sp, #20]
 800a236:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a238:	b941      	cbnz	r1, 800a24c <prvTimerTask+0x1a4>
 800a23a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a23e:	f383 8811 	msr	BASEPRI, r3
 800a242:	f3bf 8f6f 	isb	sy
 800a246:	f3bf 8f4f 	dsb	sy
 800a24a:	e7fe      	b.n	800a24a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a24c:	4603      	mov	r3, r0
 800a24e:	4401      	add	r1, r0
 800a250:	4620      	mov	r0, r4
 800a252:	f7ff fe57 	bl	8009f04 <prvInsertTimerInActiveList>
					break;
 800a256:	e771      	b.n	800a13c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a258:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a25c:	079a      	lsls	r2, r3, #30
 800a25e:	d4de      	bmi.n	800a21e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a260:	4620      	mov	r0, r4
 800a262:	f7fe f97d 	bl	8008560 <vPortFree>
 800a266:	e769      	b.n	800a13c <prvTimerTask+0x94>
 800a268:	2000be94 	.word	0x2000be94
 800a26c:	2000bfb8 	.word	0x2000bfb8
 800a270:	2000be98 	.word	0x2000be98

0800a274 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a274:	8880      	ldrh	r0, [r0, #4]
 800a276:	4770      	bx	lr

0800a278 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a278:	2300      	movs	r3, #0
 800a27a:	8083      	strh	r3, [r0, #4]
 800a27c:	4770      	bx	lr
	...

0800a280 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a282:	6803      	ldr	r3, [r0, #0]
 800a284:	4605      	mov	r5, r0
 800a286:	460e      	mov	r6, r1
 800a288:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a28a:	2100      	movs	r1, #0
 800a28c:	4798      	blx	r3
 800a28e:	682b      	ldr	r3, [r5, #0]
 800a290:	4604      	mov	r4, r0
 800a292:	6a1b      	ldr	r3, [r3, #32]
 800a294:	4628      	mov	r0, r5
 800a296:	4798      	blx	r3
 800a298:	88ab      	ldrh	r3, [r5, #4]
 800a29a:	1b34      	subs	r4, r6, r4
 800a29c:	b2a4      	uxth	r4, r4
 800a29e:	fbb4 f4f0 	udiv	r4, r4, r0
 800a2a2:	42a3      	cmp	r3, r4
 800a2a4:	d805      	bhi.n	800a2b2 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a2a6:	4b0e      	ldr	r3, [pc, #56]	; (800a2e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a2a8:	4a0e      	ldr	r2, [pc, #56]	; (800a2e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a2aa:	211d      	movs	r1, #29
 800a2ac:	480e      	ldr	r0, [pc, #56]	; (800a2e8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a2ae:	f013 f981 	bl	801d5b4 <__assert_func>
 800a2b2:	682b      	ldr	r3, [r5, #0]
 800a2b4:	2100      	movs	r1, #0
 800a2b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a2b8:	4628      	mov	r0, r5
 800a2ba:	4798      	blx	r3
 800a2bc:	682b      	ldr	r3, [r5, #0]
 800a2be:	4607      	mov	r7, r0
 800a2c0:	6a1b      	ldr	r3, [r3, #32]
 800a2c2:	4628      	mov	r0, r5
 800a2c4:	4798      	blx	r3
 800a2c6:	1bf3      	subs	r3, r6, r7
 800a2c8:	b29b      	uxth	r3, r3
 800a2ca:	fbb3 f2f0 	udiv	r2, r3, r0
 800a2ce:	fb02 3010 	mls	r0, r2, r0, r3
 800a2d2:	b118      	cbz	r0, 800a2dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a2d4:	4b05      	ldr	r3, [pc, #20]	; (800a2ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a2d6:	4a03      	ldr	r2, [pc, #12]	; (800a2e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a2d8:	211e      	movs	r1, #30
 800a2da:	e7e7      	b.n	800a2ac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a2dc:	4620      	mov	r0, r4
 800a2de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2e0:	0801f7a3 	.word	0x0801f7a3
 800a2e4:	0801f90e 	.word	0x0801f90e
 800a2e8:	0801f7b8 	.word	0x0801f7b8
 800a2ec:	0801f7e6 	.word	0x0801f7e6

0800a2f0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a2f0:	b538      	push	{r3, r4, r5, lr}
 800a2f2:	6803      	ldr	r3, [r0, #0]
 800a2f4:	6a1b      	ldr	r3, [r3, #32]
 800a2f6:	460d      	mov	r5, r1
 800a2f8:	4604      	mov	r4, r0
 800a2fa:	4798      	blx	r3
 800a2fc:	4285      	cmp	r5, r0
 800a2fe:	d905      	bls.n	800a30c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a300:	4b0c      	ldr	r3, [pc, #48]	; (800a334 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a302:	4a0d      	ldr	r2, [pc, #52]	; (800a338 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a304:	212f      	movs	r1, #47	; 0x2f
 800a306:	480d      	ldr	r0, [pc, #52]	; (800a33c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a308:	f013 f954 	bl	801d5b4 <__assert_func>
 800a30c:	6823      	ldr	r3, [r4, #0]
 800a30e:	88a5      	ldrh	r5, [r4, #4]
 800a310:	69db      	ldr	r3, [r3, #28]
 800a312:	4620      	mov	r0, r4
 800a314:	4798      	blx	r3
 800a316:	4285      	cmp	r5, r0
 800a318:	d303      	bcc.n	800a322 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a31a:	4b09      	ldr	r3, [pc, #36]	; (800a340 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a31c:	4a06      	ldr	r2, [pc, #24]	; (800a338 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a31e:	2130      	movs	r1, #48	; 0x30
 800a320:	e7f1      	b.n	800a306 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a322:	6823      	ldr	r3, [r4, #0]
 800a324:	88a1      	ldrh	r1, [r4, #4]
 800a326:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a328:	4620      	mov	r0, r4
 800a32a:	4798      	blx	r3
 800a32c:	88a3      	ldrh	r3, [r4, #4]
 800a32e:	3301      	adds	r3, #1
 800a330:	80a3      	strh	r3, [r4, #4]
 800a332:	bd38      	pop	{r3, r4, r5, pc}
 800a334:	0801f860 	.word	0x0801f860
 800a338:	0801f951 	.word	0x0801f951
 800a33c:	0801f7b8 	.word	0x0801f7b8
 800a340:	0801f877 	.word	0x0801f877

0800a344 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a344:	b570      	push	{r4, r5, r6, lr}
 800a346:	6803      	ldr	r3, [r0, #0]
 800a348:	6a1b      	ldr	r3, [r3, #32]
 800a34a:	4616      	mov	r6, r2
 800a34c:	4604      	mov	r4, r0
 800a34e:	460d      	mov	r5, r1
 800a350:	4798      	blx	r3
 800a352:	4286      	cmp	r6, r0
 800a354:	d905      	bls.n	800a362 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a356:	4b06      	ldr	r3, [pc, #24]	; (800a370 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a358:	4a06      	ldr	r2, [pc, #24]	; (800a374 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a35a:	4807      	ldr	r0, [pc, #28]	; (800a378 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a35c:	2139      	movs	r1, #57	; 0x39
 800a35e:	f013 f929 	bl	801d5b4 <__assert_func>
 800a362:	6823      	ldr	r3, [r4, #0]
 800a364:	4629      	mov	r1, r5
 800a366:	4620      	mov	r0, r4
 800a368:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a36a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a36e:	4718      	bx	r3
 800a370:	0801f860 	.word	0x0801f860
 800a374:	0801f8c4 	.word	0x0801f8c4
 800a378:	0801f7b8 	.word	0x0801f7b8

0800a37c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a37c:	4770      	bx	lr
	...

0800a380 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a380:	4a02      	ldr	r2, [pc, #8]	; (800a38c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a382:	6002      	str	r2, [r0, #0]
 800a384:	2200      	movs	r2, #0
 800a386:	8082      	strh	r2, [r0, #4]
 800a388:	4770      	bx	lr
 800a38a:	bf00      	nop
 800a38c:	0801f898 	.word	0x0801f898

0800a390 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a390:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a392:	4770      	bx	lr

0800a394 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a394:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a396:	2000      	movs	r0, #0
 800a398:	b12b      	cbz	r3, 800a3a6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a39a:	b920      	cbnz	r0, 800a3a6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a39c:	1a5a      	subs	r2, r3, r1
 800a39e:	4250      	negs	r0, r2
 800a3a0:	4150      	adcs	r0, r2
 800a3a2:	699b      	ldr	r3, [r3, #24]
 800a3a4:	e7f8      	b.n	800a398 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a3a6:	4770      	bx	lr

0800a3a8 <_ZN8touchgfx9Container9removeAllEv>:
 800a3a8:	2200      	movs	r2, #0
 800a3aa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a3ac:	b123      	cbz	r3, 800a3b8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a3ae:	6999      	ldr	r1, [r3, #24]
 800a3b0:	6281      	str	r1, [r0, #40]	; 0x28
 800a3b2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a3b6:	e7f8      	b.n	800a3aa <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a3b8:	4770      	bx	lr

0800a3ba <_ZN8touchgfx9Container6unlinkEv>:
 800a3ba:	2300      	movs	r3, #0
 800a3bc:	6283      	str	r3, [r0, #40]	; 0x28
 800a3be:	4770      	bx	lr

0800a3c0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a3c0:	2200      	movs	r2, #0
 800a3c2:	8002      	strh	r2, [r0, #0]
 800a3c4:	8042      	strh	r2, [r0, #2]
 800a3c6:	8082      	strh	r2, [r0, #4]
 800a3c8:	80c2      	strh	r2, [r0, #6]
 800a3ca:	4770      	bx	lr

0800a3cc <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a3cc:	b570      	push	{r4, r5, r6, lr}
 800a3ce:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a3d0:	460d      	mov	r5, r1
 800a3d2:	4616      	mov	r6, r2
 800a3d4:	b13c      	cbz	r4, 800a3e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a3d6:	6823      	ldr	r3, [r4, #0]
 800a3d8:	4620      	mov	r0, r4
 800a3da:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a3dc:	4632      	mov	r2, r6
 800a3de:	4629      	mov	r1, r5
 800a3e0:	4798      	blx	r3
 800a3e2:	69a4      	ldr	r4, [r4, #24]
 800a3e4:	e7f6      	b.n	800a3d4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a3e6:	bd70      	pop	{r4, r5, r6, pc}

0800a3e8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a3e8:	b538      	push	{r3, r4, r5, lr}
 800a3ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a3ec:	460d      	mov	r5, r1
 800a3ee:	b134      	cbz	r4, 800a3fe <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a3f0:	682b      	ldr	r3, [r5, #0]
 800a3f2:	4621      	mov	r1, r4
 800a3f4:	689b      	ldr	r3, [r3, #8]
 800a3f6:	4628      	mov	r0, r5
 800a3f8:	4798      	blx	r3
 800a3fa:	69a4      	ldr	r4, [r4, #24]
 800a3fc:	e7f7      	b.n	800a3ee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a3fe:	bd38      	pop	{r3, r4, r5, pc}

0800a400 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a400:	b510      	push	{r4, lr}
 800a402:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a404:	b12c      	cbz	r4, 800a412 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a406:	6823      	ldr	r3, [r4, #0]
 800a408:	4620      	mov	r0, r4
 800a40a:	699b      	ldr	r3, [r3, #24]
 800a40c:	4798      	blx	r3
 800a40e:	69a4      	ldr	r4, [r4, #24]
 800a410:	e7f8      	b.n	800a404 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a412:	bd10      	pop	{r4, pc}

0800a414 <_ZN8touchgfx9ContainerD1Ev>:
 800a414:	4770      	bx	lr

0800a416 <_ZN8touchgfx9ContainerD0Ev>:
 800a416:	b510      	push	{r4, lr}
 800a418:	212c      	movs	r1, #44	; 0x2c
 800a41a:	4604      	mov	r4, r0
 800a41c:	f012 fb20 	bl	801ca60 <_ZdlPvj>
 800a420:	4620      	mov	r0, r4
 800a422:	bd10      	pop	{r4, pc}

0800a424 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a424:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a426:	b19b      	cbz	r3, 800a450 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a428:	428b      	cmp	r3, r1
 800a42a:	d109      	bne.n	800a440 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a42c:	699a      	ldr	r2, [r3, #24]
 800a42e:	2100      	movs	r1, #0
 800a430:	6159      	str	r1, [r3, #20]
 800a432:	6282      	str	r2, [r0, #40]	; 0x28
 800a434:	b902      	cbnz	r2, 800a438 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a436:	4770      	bx	lr
 800a438:	6199      	str	r1, [r3, #24]
 800a43a:	4770      	bx	lr
 800a43c:	4613      	mov	r3, r2
 800a43e:	b13a      	cbz	r2, 800a450 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a440:	699a      	ldr	r2, [r3, #24]
 800a442:	428a      	cmp	r2, r1
 800a444:	d1fa      	bne.n	800a43c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a446:	698a      	ldr	r2, [r1, #24]
 800a448:	619a      	str	r2, [r3, #24]
 800a44a:	2300      	movs	r3, #0
 800a44c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a450:	4770      	bx	lr

0800a452 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a452:	b410      	push	{r4}
 800a454:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a456:	4604      	mov	r4, r0
 800a458:	b92b      	cbnz	r3, 800a466 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a45a:	6803      	ldr	r3, [r0, #0]
 800a45c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a460:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a462:	4611      	mov	r1, r2
 800a464:	4718      	bx	r3
 800a466:	b941      	cbnz	r1, 800a47a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a468:	6193      	str	r3, [r2, #24]
 800a46a:	6282      	str	r2, [r0, #40]	; 0x28
 800a46c:	6154      	str	r4, [r2, #20]
 800a46e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a472:	4770      	bx	lr
 800a474:	4603      	mov	r3, r0
 800a476:	2800      	cmp	r0, #0
 800a478:	d0f9      	beq.n	800a46e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a47a:	4299      	cmp	r1, r3
 800a47c:	6998      	ldr	r0, [r3, #24]
 800a47e:	d1f9      	bne.n	800a474 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a480:	6190      	str	r0, [r2, #24]
 800a482:	618a      	str	r2, [r1, #24]
 800a484:	e7f2      	b.n	800a46c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800a488 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a488:	4288      	cmp	r0, r1
 800a48a:	b508      	push	{r3, lr}
 800a48c:	d105      	bne.n	800a49a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a48e:	4b11      	ldr	r3, [pc, #68]	; (800a4d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a490:	4a11      	ldr	r2, [pc, #68]	; (800a4d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a492:	2120      	movs	r1, #32
 800a494:	4811      	ldr	r0, [pc, #68]	; (800a4dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a496:	f013 f88d 	bl	801d5b4 <__assert_func>
 800a49a:	694b      	ldr	r3, [r1, #20]
 800a49c:	b11b      	cbz	r3, 800a4a6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a49e:	4b10      	ldr	r3, [pc, #64]	; (800a4e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a4a0:	4a0d      	ldr	r2, [pc, #52]	; (800a4d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a4a2:	2121      	movs	r1, #33	; 0x21
 800a4a4:	e7f6      	b.n	800a494 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a4a6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a4aa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a4ac:	b913      	cbnz	r3, 800a4b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a4ae:	6281      	str	r1, [r0, #40]	; 0x28
 800a4b0:	bd08      	pop	{r3, pc}
 800a4b2:	4613      	mov	r3, r2
 800a4b4:	699a      	ldr	r2, [r3, #24]
 800a4b6:	b12a      	cbz	r2, 800a4c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a4b8:	428b      	cmp	r3, r1
 800a4ba:	d1fa      	bne.n	800a4b2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a4bc:	4b09      	ldr	r3, [pc, #36]	; (800a4e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a4be:	4a06      	ldr	r2, [pc, #24]	; (800a4d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a4c0:	2132      	movs	r1, #50	; 0x32
 800a4c2:	e7e7      	b.n	800a494 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a4c4:	428b      	cmp	r3, r1
 800a4c6:	d103      	bne.n	800a4d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a4c8:	4b06      	ldr	r3, [pc, #24]	; (800a4e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a4ca:	4a03      	ldr	r2, [pc, #12]	; (800a4d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a4cc:	2135      	movs	r1, #53	; 0x35
 800a4ce:	e7e1      	b.n	800a494 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a4d0:	6199      	str	r1, [r3, #24]
 800a4d2:	e7ed      	b.n	800a4b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a4d4:	0801f98f 	.word	0x0801f98f
 800a4d8:	0801fae8 	.word	0x0801fae8
 800a4dc:	0801f9bb 	.word	0x0801f9bb
 800a4e0:	0801f9ee 	.word	0x0801f9ee
 800a4e4:	0801fa24 	.word	0x0801fa24

0800a4e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a4e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4ec:	461f      	mov	r7, r3
 800a4ee:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a4f2:	460d      	mov	r5, r1
 800a4f4:	4616      	mov	r6, r2
 800a4f6:	b103      	cbz	r3, 800a4fa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a4f8:	6038      	str	r0, [r7, #0]
 800a4fa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a4fc:	b314      	cbz	r4, 800a544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a4fe:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a502:	b1eb      	cbz	r3, 800a540 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a504:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a508:	428d      	cmp	r5, r1
 800a50a:	db19      	blt.n	800a540 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a50c:	8923      	ldrh	r3, [r4, #8]
 800a50e:	b289      	uxth	r1, r1
 800a510:	440b      	add	r3, r1
 800a512:	b21b      	sxth	r3, r3
 800a514:	429d      	cmp	r5, r3
 800a516:	da13      	bge.n	800a540 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a518:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a51c:	4296      	cmp	r6, r2
 800a51e:	db0f      	blt.n	800a540 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a520:	8963      	ldrh	r3, [r4, #10]
 800a522:	b292      	uxth	r2, r2
 800a524:	4413      	add	r3, r2
 800a526:	b21b      	sxth	r3, r3
 800a528:	429e      	cmp	r6, r3
 800a52a:	da09      	bge.n	800a540 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a52c:	6823      	ldr	r3, [r4, #0]
 800a52e:	1ab2      	subs	r2, r6, r2
 800a530:	1a69      	subs	r1, r5, r1
 800a532:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a536:	b212      	sxth	r2, r2
 800a538:	463b      	mov	r3, r7
 800a53a:	b209      	sxth	r1, r1
 800a53c:	4620      	mov	r0, r4
 800a53e:	47c0      	blx	r8
 800a540:	69a4      	ldr	r4, [r4, #24]
 800a542:	e7db      	b.n	800a4fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a544:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a548 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a54c:	4c6e      	ldr	r4, [pc, #440]	; (800a708 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a54e:	b0a1      	sub	sp, #132	; 0x84
 800a550:	6824      	ldr	r4, [r4, #0]
 800a552:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a554:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a558:	9303      	str	r3, [sp, #12]
 800a55a:	2400      	movs	r4, #0
 800a55c:	802c      	strh	r4, [r5, #0]
 800a55e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a560:	802c      	strh	r4, [r5, #0]
 800a562:	601c      	str	r4, [r3, #0]
 800a564:	4606      	mov	r6, r0
 800a566:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a56a:	f7ff ffbd 	bl	800a4e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a56e:	f1b9 0f03 	cmp.w	r9, #3
 800a572:	f340 80c2 	ble.w	800a6fa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a576:	4631      	mov	r1, r6
 800a578:	a80c      	add	r0, sp, #48	; 0x30
 800a57a:	f004 fcd7 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a57e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a582:	9306      	str	r3, [sp, #24]
 800a584:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a588:	9307      	str	r3, [sp, #28]
 800a58a:	9b03      	ldr	r3, [sp, #12]
 800a58c:	f8d3 a000 	ldr.w	sl, [r3]
 800a590:	f1ba 0f00 	cmp.w	sl, #0
 800a594:	f000 80b4 	beq.w	800a700 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a598:	4651      	mov	r1, sl
 800a59a:	a810      	add	r0, sp, #64	; 0x40
 800a59c:	f004 fcc6 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a5a0:	9b01      	ldr	r3, [sp, #4]
 800a5a2:	9a06      	ldr	r2, [sp, #24]
 800a5a4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a5a8:	189d      	adds	r5, r3, r2
 800a5aa:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a5ae:	9a07      	ldr	r2, [sp, #28]
 800a5b0:	2002      	movs	r0, #2
 800a5b2:	fb91 f1f0 	sdiv	r1, r1, r0
 800a5b6:	4419      	add	r1, r3
 800a5b8:	1a6d      	subs	r5, r5, r1
 800a5ba:	9b02      	ldr	r3, [sp, #8]
 800a5bc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a5c0:	4413      	add	r3, r2
 800a5c2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a5c6:	fb92 f2f0 	sdiv	r2, r2, r0
 800a5ca:	440a      	add	r2, r1
 800a5cc:	1a9b      	subs	r3, r3, r2
 800a5ce:	435b      	muls	r3, r3
 800a5d0:	fb05 3505 	mla	r5, r5, r5, r3
 800a5d4:	4f4d      	ldr	r7, [pc, #308]	; (800a70c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a5d6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a5d8:	ac10      	add	r4, sp, #64	; 0x40
 800a5da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a5dc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a5de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a5e0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a5e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a5e4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a5e8:	f1b9 0f0c 	cmp.w	r9, #12
 800a5ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a5f0:	f04f 0303 	mov.w	r3, #3
 800a5f4:	bfc8      	it	gt
 800a5f6:	4698      	movgt	r8, r3
 800a5f8:	f8cd 9000 	str.w	r9, [sp]
 800a5fc:	f04f 0400 	mov.w	r4, #0
 800a600:	bfdc      	itt	le
 800a602:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a606:	fb92 f8f3 	sdivle	r8, r2, r3
 800a60a:	1c63      	adds	r3, r4, #1
 800a60c:	aa10      	add	r2, sp, #64	; 0x40
 800a60e:	f004 0401 	and.w	r4, r4, #1
 800a612:	9308      	str	r3, [sp, #32]
 800a614:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a618:	9b00      	ldr	r3, [sp, #0]
 800a61a:	fb93 f3f8 	sdiv	r3, r3, r8
 800a61e:	b29b      	uxth	r3, r3
 800a620:	3404      	adds	r4, #4
 800a622:	f04f 0b00 	mov.w	fp, #0
 800a626:	9304      	str	r3, [sp, #16]
 800a628:	9a04      	ldr	r2, [sp, #16]
 800a62a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a62e:	fb13 f302 	smulbb	r3, r3, r2
 800a632:	9a01      	ldr	r2, [sp, #4]
 800a634:	b29b      	uxth	r3, r3
 800a636:	1899      	adds	r1, r3, r2
 800a638:	9305      	str	r3, [sp, #20]
 800a63a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a63e:	b209      	sxth	r1, r1
 800a640:	4299      	cmp	r1, r3
 800a642:	db4d      	blt.n	800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a644:	8932      	ldrh	r2, [r6, #8]
 800a646:	4413      	add	r3, r2
 800a648:	b21b      	sxth	r3, r3
 800a64a:	4299      	cmp	r1, r3
 800a64c:	da48      	bge.n	800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a64e:	9b04      	ldr	r3, [sp, #16]
 800a650:	6827      	ldr	r7, [r4, #0]
 800a652:	fb17 f703 	smulbb	r7, r7, r3
 800a656:	9b02      	ldr	r3, [sp, #8]
 800a658:	b2bf      	uxth	r7, r7
 800a65a:	18fa      	adds	r2, r7, r3
 800a65c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a660:	b212      	sxth	r2, r2
 800a662:	429a      	cmp	r2, r3
 800a664:	db3c      	blt.n	800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a666:	8970      	ldrh	r0, [r6, #10]
 800a668:	4403      	add	r3, r0
 800a66a:	b21b      	sxth	r3, r3
 800a66c:	429a      	cmp	r2, r3
 800a66e:	da37      	bge.n	800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a670:	2300      	movs	r3, #0
 800a672:	930b      	str	r3, [sp, #44]	; 0x2c
 800a674:	4630      	mov	r0, r6
 800a676:	ab0b      	add	r3, sp, #44	; 0x2c
 800a678:	f7ff ff36 	bl	800a4e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a67c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a67e:	b37a      	cbz	r2, 800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a680:	4552      	cmp	r2, sl
 800a682:	d02d      	beq.n	800a6e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a684:	4611      	mov	r1, r2
 800a686:	a80e      	add	r0, sp, #56	; 0x38
 800a688:	9209      	str	r2, [sp, #36]	; 0x24
 800a68a:	f004 fc4f 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a68e:	9a06      	ldr	r2, [sp, #24]
 800a690:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a694:	9b01      	ldr	r3, [sp, #4]
 800a696:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a69a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a69e:	4413      	add	r3, r2
 800a6a0:	f04f 0e02 	mov.w	lr, #2
 800a6a4:	fb91 f1fe 	sdiv	r1, r1, lr
 800a6a8:	4401      	add	r1, r0
 800a6aa:	1a58      	subs	r0, r3, r1
 800a6ac:	9a07      	ldr	r2, [sp, #28]
 800a6ae:	9b02      	ldr	r3, [sp, #8]
 800a6b0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a6b4:	fb9c fcfe 	sdiv	ip, ip, lr
 800a6b8:	4413      	add	r3, r2
 800a6ba:	448c      	add	ip, r1
 800a6bc:	eba3 030c 	sub.w	r3, r3, ip
 800a6c0:	435b      	muls	r3, r3
 800a6c2:	fb00 3300 	mla	r3, r0, r0, r3
 800a6c6:	42ab      	cmp	r3, r5
 800a6c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a6ca:	d208      	bcs.n	800a6de <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a6cc:	9803      	ldr	r0, [sp, #12]
 800a6ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a6d0:	6001      	str	r1, [r0, #0]
 800a6d2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a6d4:	9805      	ldr	r0, [sp, #20]
 800a6d6:	8008      	strh	r0, [r1, #0]
 800a6d8:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a6da:	461d      	mov	r5, r3
 800a6dc:	800f      	strh	r7, [r1, #0]
 800a6de:	4692      	mov	sl, r2
 800a6e0:	f10b 0b01 	add.w	fp, fp, #1
 800a6e4:	f1bb 0f04 	cmp.w	fp, #4
 800a6e8:	f104 0408 	add.w	r4, r4, #8
 800a6ec:	d19c      	bne.n	800a628 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a6ee:	9b00      	ldr	r3, [sp, #0]
 800a6f0:	9c08      	ldr	r4, [sp, #32]
 800a6f2:	444b      	add	r3, r9
 800a6f4:	4544      	cmp	r4, r8
 800a6f6:	9300      	str	r3, [sp, #0]
 800a6f8:	d187      	bne.n	800a60a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a6fa:	b021      	add	sp, #132	; 0x84
 800a6fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a700:	f04f 35ff 	mov.w	r5, #4294967295
 800a704:	e766      	b.n	800a5d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a706:	bf00      	nop
 800a708:	2000bfcc 	.word	0x2000bfcc
 800a70c:	0801e72c 	.word	0x0801e72c

0800a710 <_ZN8touchgfx4RectaNERKS0_>:
 800a710:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a714:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a718:	888c      	ldrh	r4, [r1, #4]
 800a71a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a71e:	443c      	add	r4, r7
 800a720:	b2a4      	uxth	r4, r4
 800a722:	fa0f f884 	sxth.w	r8, r4
 800a726:	45c1      	cmp	r9, r8
 800a728:	da2f      	bge.n	800a78a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a72a:	8882      	ldrh	r2, [r0, #4]
 800a72c:	444a      	add	r2, r9
 800a72e:	b292      	uxth	r2, r2
 800a730:	fa0f fe82 	sxth.w	lr, r2
 800a734:	4577      	cmp	r7, lr
 800a736:	da28      	bge.n	800a78a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a738:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a73c:	88cb      	ldrh	r3, [r1, #6]
 800a73e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a742:	442b      	add	r3, r5
 800a744:	b21b      	sxth	r3, r3
 800a746:	429e      	cmp	r6, r3
 800a748:	da1f      	bge.n	800a78a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a74a:	88c3      	ldrh	r3, [r0, #6]
 800a74c:	4433      	add	r3, r6
 800a74e:	b29b      	uxth	r3, r3
 800a750:	fa0f fc83 	sxth.w	ip, r3
 800a754:	4565      	cmp	r5, ip
 800a756:	da18      	bge.n	800a78a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a758:	454f      	cmp	r7, r9
 800a75a:	bfb8      	it	lt
 800a75c:	464f      	movlt	r7, r9
 800a75e:	42b5      	cmp	r5, r6
 800a760:	bfb8      	it	lt
 800a762:	4635      	movlt	r5, r6
 800a764:	45f0      	cmp	r8, lr
 800a766:	bfd8      	it	le
 800a768:	4622      	movle	r2, r4
 800a76a:	1bd2      	subs	r2, r2, r7
 800a76c:	8082      	strh	r2, [r0, #4]
 800a76e:	884a      	ldrh	r2, [r1, #2]
 800a770:	88c9      	ldrh	r1, [r1, #6]
 800a772:	8007      	strh	r7, [r0, #0]
 800a774:	440a      	add	r2, r1
 800a776:	b292      	uxth	r2, r2
 800a778:	b211      	sxth	r1, r2
 800a77a:	458c      	cmp	ip, r1
 800a77c:	bfa8      	it	ge
 800a77e:	4613      	movge	r3, r2
 800a780:	1b5b      	subs	r3, r3, r5
 800a782:	80c3      	strh	r3, [r0, #6]
 800a784:	8045      	strh	r5, [r0, #2]
 800a786:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a78a:	2300      	movs	r3, #0
 800a78c:	8003      	strh	r3, [r0, #0]
 800a78e:	8043      	strh	r3, [r0, #2]
 800a790:	8083      	strh	r3, [r0, #4]
 800a792:	80c3      	strh	r3, [r0, #6]
 800a794:	e7f7      	b.n	800a786 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a796 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a796:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a79a:	2b00      	cmp	r3, #0
 800a79c:	dd06      	ble.n	800a7ac <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a79e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a7a2:	2800      	cmp	r0, #0
 800a7a4:	bfcc      	ite	gt
 800a7a6:	2000      	movgt	r0, #0
 800a7a8:	2001      	movle	r0, #1
 800a7aa:	4770      	bx	lr
 800a7ac:	2001      	movs	r0, #1
 800a7ae:	4770      	bx	lr

0800a7b0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a7b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7b4:	2300      	movs	r3, #0
 800a7b6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a7b8:	8003      	strh	r3, [r0, #0]
 800a7ba:	4604      	mov	r4, r0
 800a7bc:	8043      	strh	r3, [r0, #2]
 800a7be:	8083      	strh	r3, [r0, #4]
 800a7c0:	80c3      	strh	r3, [r0, #6]
 800a7c2:	2d00      	cmp	r5, #0
 800a7c4:	d040      	beq.n	800a848 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a7c6:	1d28      	adds	r0, r5, #4
 800a7c8:	f7ff ffe5 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a7cc:	b988      	cbnz	r0, 800a7f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a7ce:	4620      	mov	r0, r4
 800a7d0:	f7ff ffe1 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a7d4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a7d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a7dc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a7e0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a7e4:	b138      	cbz	r0, 800a7f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a7e6:	8022      	strh	r2, [r4, #0]
 800a7e8:	8063      	strh	r3, [r4, #2]
 800a7ea:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a7ee:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a7f2:	69ad      	ldr	r5, [r5, #24]
 800a7f4:	e7e5      	b.n	800a7c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a7f6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a7fa:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a7fe:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a802:	4290      	cmp	r0, r2
 800a804:	4607      	mov	r7, r0
 800a806:	bfa8      	it	ge
 800a808:	4617      	movge	r7, r2
 800a80a:	4472      	add	r2, lr
 800a80c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a810:	8027      	strh	r7, [r4, #0]
 800a812:	4299      	cmp	r1, r3
 800a814:	460e      	mov	r6, r1
 800a816:	4440      	add	r0, r8
 800a818:	bfa8      	it	ge
 800a81a:	461e      	movge	r6, r3
 800a81c:	4471      	add	r1, lr
 800a81e:	4463      	add	r3, ip
 800a820:	b200      	sxth	r0, r0
 800a822:	b212      	sxth	r2, r2
 800a824:	b209      	sxth	r1, r1
 800a826:	b21b      	sxth	r3, r3
 800a828:	4290      	cmp	r0, r2
 800a82a:	bfac      	ite	ge
 800a82c:	ebc7 0200 	rsbge	r2, r7, r0
 800a830:	ebc7 0202 	rsblt	r2, r7, r2
 800a834:	4299      	cmp	r1, r3
 800a836:	bfac      	ite	ge
 800a838:	ebc6 0301 	rsbge	r3, r6, r1
 800a83c:	ebc6 0303 	rsblt	r3, r6, r3
 800a840:	8066      	strh	r6, [r4, #2]
 800a842:	80a2      	strh	r2, [r4, #4]
 800a844:	80e3      	strh	r3, [r4, #6]
 800a846:	e7d4      	b.n	800a7f2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a848:	4620      	mov	r0, r4
 800a84a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a84e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a84e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a852:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a856:	b383      	cbz	r3, 800a8ba <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a858:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a85a:	b374      	cbz	r4, 800a8ba <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a85c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a860:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a864:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a868:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a86c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a870:	b303      	cbz	r3, 800a8b4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a872:	4668      	mov	r0, sp
 800a874:	1d21      	adds	r1, r4, #4
 800a876:	f8ad 5000 	strh.w	r5, [sp]
 800a87a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a87e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a882:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a886:	f7ff ff43 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800a88a:	4668      	mov	r0, sp
 800a88c:	f7ff ff83 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a890:	b980      	cbnz	r0, 800a8b4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a892:	f8bd 3000 	ldrh.w	r3, [sp]
 800a896:	88a2      	ldrh	r2, [r4, #4]
 800a898:	1a9b      	subs	r3, r3, r2
 800a89a:	f8ad 3000 	strh.w	r3, [sp]
 800a89e:	88e2      	ldrh	r2, [r4, #6]
 800a8a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a8a4:	1a9b      	subs	r3, r3, r2
 800a8a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a8aa:	6823      	ldr	r3, [r4, #0]
 800a8ac:	4669      	mov	r1, sp
 800a8ae:	689b      	ldr	r3, [r3, #8]
 800a8b0:	4620      	mov	r0, r4
 800a8b2:	4798      	blx	r3
 800a8b4:	69a4      	ldr	r4, [r4, #24]
 800a8b6:	2c00      	cmp	r4, #0
 800a8b8:	d1d8      	bne.n	800a86c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a8ba:	b002      	add	sp, #8
 800a8bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a8c0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a8c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8c2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a8c6:	460d      	mov	r5, r1
 800a8c8:	4616      	mov	r6, r2
 800a8ca:	b323      	cbz	r3, 800a916 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a8cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a8ce:	b314      	cbz	r4, 800a916 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a8d0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a8d4:	b1eb      	cbz	r3, 800a912 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a8d6:	6828      	ldr	r0, [r5, #0]
 800a8d8:	6869      	ldr	r1, [r5, #4]
 800a8da:	466b      	mov	r3, sp
 800a8dc:	c303      	stmia	r3!, {r0, r1}
 800a8de:	4668      	mov	r0, sp
 800a8e0:	1d21      	adds	r1, r4, #4
 800a8e2:	f7ff ff15 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800a8e6:	4668      	mov	r0, sp
 800a8e8:	f7ff ff55 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a8ec:	b988      	cbnz	r0, 800a912 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a8ee:	f8bd 3000 	ldrh.w	r3, [sp]
 800a8f2:	88a2      	ldrh	r2, [r4, #4]
 800a8f4:	1a9b      	subs	r3, r3, r2
 800a8f6:	f8ad 3000 	strh.w	r3, [sp]
 800a8fa:	88e2      	ldrh	r2, [r4, #6]
 800a8fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a900:	1a9b      	subs	r3, r3, r2
 800a902:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a906:	6823      	ldr	r3, [r4, #0]
 800a908:	4632      	mov	r2, r6
 800a90a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a90c:	4669      	mov	r1, sp
 800a90e:	4620      	mov	r0, r4
 800a910:	4798      	blx	r3
 800a912:	69a4      	ldr	r4, [r4, #24]
 800a914:	e7db      	b.n	800a8ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a916:	b002      	add	sp, #8
 800a918:	bd70      	pop	{r4, r5, r6, pc}

0800a91a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a91a:	b513      	push	{r0, r1, r4, lr}
 800a91c:	6803      	ldr	r3, [r0, #0]
 800a91e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800a922:	2300      	movs	r3, #0
 800a924:	e9cd 3300 	strd	r3, r3, [sp]
 800a928:	466b      	mov	r3, sp
 800a92a:	47a0      	blx	r4
 800a92c:	b002      	add	sp, #8
 800a92e:	bd10      	pop	{r4, pc}

0800a930 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a930:	2301      	movs	r3, #1
 800a932:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a936:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a93a:	4770      	bx	lr

0800a93c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a93c:	2301      	movs	r3, #1
 800a93e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a942:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a946:	4770      	bx	lr

0800a948 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a948:	6843      	ldr	r3, [r0, #4]
 800a94a:	2201      	movs	r2, #1
 800a94c:	725a      	strb	r2, [r3, #9]
 800a94e:	6840      	ldr	r0, [r0, #4]
 800a950:	6803      	ldr	r3, [r0, #0]
 800a952:	691b      	ldr	r3, [r3, #16]
 800a954:	4718      	bx	r3

0800a956 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a956:	6840      	ldr	r0, [r0, #4]
 800a958:	6803      	ldr	r3, [r0, #0]
 800a95a:	689b      	ldr	r3, [r3, #8]
 800a95c:	4718      	bx	r3

0800a95e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a95e:	b530      	push	{r4, r5, lr}
 800a960:	b08b      	sub	sp, #44	; 0x2c
 800a962:	6804      	ldr	r4, [r0, #0]
 800a964:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800a968:	9509      	str	r5, [sp, #36]	; 0x24
 800a96a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800a96e:	9508      	str	r5, [sp, #32]
 800a970:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800a974:	9507      	str	r5, [sp, #28]
 800a976:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800a97a:	9506      	str	r5, [sp, #24]
 800a97c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800a980:	9505      	str	r5, [sp, #20]
 800a982:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800a986:	9504      	str	r5, [sp, #16]
 800a988:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800a98c:	9503      	str	r5, [sp, #12]
 800a98e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a992:	9502      	str	r5, [sp, #8]
 800a994:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800a998:	e9cd 3500 	strd	r3, r5, [sp]
 800a99c:	4613      	mov	r3, r2
 800a99e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800a9a0:	2200      	movs	r2, #0
 800a9a2:	47a0      	blx	r4
 800a9a4:	b00b      	add	sp, #44	; 0x2c
 800a9a6:	bd30      	pop	{r4, r5, pc}

0800a9a8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a9a8:	4b04      	ldr	r3, [pc, #16]	; (800a9bc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a9aa:	781b      	ldrb	r3, [r3, #0]
 800a9ac:	b123      	cbz	r3, 800a9b8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a9ae:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a9b2:	f080 0001 	eor.w	r0, r0, #1
 800a9b6:	4770      	bx	lr
 800a9b8:	2001      	movs	r0, #1
 800a9ba:	4770      	bx	lr
 800a9bc:	2000bfca 	.word	0x2000bfca

0800a9c0 <_ZN8touchgfx3HAL8endFrameEv>:
 800a9c0:	b510      	push	{r4, lr}
 800a9c2:	4604      	mov	r4, r0
 800a9c4:	6840      	ldr	r0, [r0, #4]
 800a9c6:	6803      	ldr	r3, [r0, #0]
 800a9c8:	689b      	ldr	r3, [r3, #8]
 800a9ca:	4798      	blx	r3
 800a9cc:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a9d0:	b113      	cbz	r3, 800a9d8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a9d2:	2301      	movs	r3, #1
 800a9d4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a9d8:	bd10      	pop	{r4, pc}

0800a9da <_ZN8touchgfx3HAL10initializeEv>:
 800a9da:	b510      	push	{r4, lr}
 800a9dc:	4604      	mov	r4, r0
 800a9de:	f7f6 fd9d 	bl	800151c <_ZN8touchgfx10OSWrappers10initializeEv>
 800a9e2:	6860      	ldr	r0, [r4, #4]
 800a9e4:	6803      	ldr	r3, [r0, #0]
 800a9e6:	68db      	ldr	r3, [r3, #12]
 800a9e8:	4798      	blx	r3
 800a9ea:	68e0      	ldr	r0, [r4, #12]
 800a9ec:	6803      	ldr	r3, [r0, #0]
 800a9ee:	689b      	ldr	r3, [r3, #8]
 800a9f0:	4798      	blx	r3
 800a9f2:	6823      	ldr	r3, [r4, #0]
 800a9f4:	4620      	mov	r0, r4
 800a9f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a9f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a9fc:	4718      	bx	r3
	...

0800aa00 <_ZN8touchgfx3HAL4tickEv>:
 800aa00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	4d5b      	ldr	r5, [pc, #364]	; (800ab74 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800aa06:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800aa0a:	4604      	mov	r4, r0
 800aa0c:	4798      	blx	r3
 800aa0e:	2800      	cmp	r0, #0
 800aa10:	f000 8095 	beq.w	800ab3e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800aa14:	2001      	movs	r0, #1
 800aa16:	f7f6 fac1 	bl	8000f9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800aa1a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800aa1e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800aa22:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800aa26:	2600      	movs	r6, #0
 800aa28:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800aa2c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800aa30:	b133      	cbz	r3, 800aa40 <_ZN8touchgfx3HAL4tickEv+0x40>
 800aa32:	6823      	ldr	r3, [r4, #0]
 800aa34:	4620      	mov	r0, r4
 800aa36:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800aa3a:	4798      	blx	r3
 800aa3c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800aa40:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800aa44:	6862      	ldr	r2, [r4, #4]
 800aa46:	f083 0301 	eor.w	r3, r3, #1
 800aa4a:	7253      	strb	r3, [r2, #9]
 800aa4c:	2601      	movs	r6, #1
 800aa4e:	702e      	strb	r6, [r5, #0]
 800aa50:	f003 fa44 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 800aa54:	6803      	ldr	r3, [r0, #0]
 800aa56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa58:	4798      	blx	r3
 800aa5a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800aa5e:	b90b      	cbnz	r3, 800aa64 <_ZN8touchgfx3HAL4tickEv+0x64>
 800aa60:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800aa64:	f003 fa3a 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 800aa68:	6803      	ldr	r3, [r0, #0]
 800aa6a:	695b      	ldr	r3, [r3, #20]
 800aa6c:	4798      	blx	r3
 800aa6e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800aa70:	6803      	ldr	r3, [r0, #0]
 800aa72:	691b      	ldr	r3, [r3, #16]
 800aa74:	4798      	blx	r3
 800aa76:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800aa7a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800aa7e:	3b01      	subs	r3, #1
 800aa80:	b2db      	uxtb	r3, r3
 800aa82:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800aa86:	b10a      	cbz	r2, 800aa8c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800aa88:	2b00      	cmp	r3, #0
 800aa8a:	d1eb      	bne.n	800aa64 <_ZN8touchgfx3HAL4tickEv+0x64>
 800aa8c:	4a3a      	ldr	r2, [pc, #232]	; (800ab78 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800aa8e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800aa92:	7813      	ldrb	r3, [r2, #0]
 800aa94:	3301      	adds	r3, #1
 800aa96:	b25b      	sxtb	r3, r3
 800aa98:	4299      	cmp	r1, r3
 800aa9a:	7013      	strb	r3, [r2, #0]
 800aa9c:	dc10      	bgt.n	800aac0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800aa9e:	68e0      	ldr	r0, [r4, #12]
 800aaa0:	2300      	movs	r3, #0
 800aaa2:	7013      	strb	r3, [r2, #0]
 800aaa4:	6803      	ldr	r3, [r0, #0]
 800aaa6:	aa03      	add	r2, sp, #12
 800aaa8:	68db      	ldr	r3, [r3, #12]
 800aaaa:	a902      	add	r1, sp, #8
 800aaac:	4798      	blx	r3
 800aaae:	6823      	ldr	r3, [r4, #0]
 800aab0:	2800      	cmp	r0, #0
 800aab2:	d050      	beq.n	800ab56 <_ZN8touchgfx3HAL4tickEv+0x156>
 800aab4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800aab8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800aabc:	4620      	mov	r0, r4
 800aabe:	4798      	blx	r3
 800aac0:	6960      	ldr	r0, [r4, #20]
 800aac2:	2300      	movs	r3, #0
 800aac4:	f88d 3007 	strb.w	r3, [sp, #7]
 800aac8:	b158      	cbz	r0, 800aae2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aaca:	6803      	ldr	r3, [r0, #0]
 800aacc:	f10d 0107 	add.w	r1, sp, #7
 800aad0:	68db      	ldr	r3, [r3, #12]
 800aad2:	4798      	blx	r3
 800aad4:	b128      	cbz	r0, 800aae2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aad6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800aad8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800aadc:	6803      	ldr	r3, [r0, #0]
 800aade:	68db      	ldr	r3, [r3, #12]
 800aae0:	4798      	blx	r3
 800aae2:	f104 001c 	add.w	r0, r4, #28
 800aae6:	f011 fee7 	bl	801c8b8 <_ZN8touchgfx8Gestures4tickEv>
 800aaea:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800aaee:	b30b      	cbz	r3, 800ab34 <_ZN8touchgfx3HAL4tickEv+0x134>
 800aaf0:	6920      	ldr	r0, [r4, #16]
 800aaf2:	6803      	ldr	r3, [r0, #0]
 800aaf4:	691b      	ldr	r3, [r3, #16]
 800aaf6:	4798      	blx	r3
 800aaf8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800aafa:	4606      	mov	r6, r0
 800aafc:	b903      	cbnz	r3, 800ab00 <_ZN8touchgfx3HAL4tickEv+0x100>
 800aafe:	6720      	str	r0, [r4, #112]	; 0x70
 800ab00:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ab02:	4a1e      	ldr	r2, [pc, #120]	; (800ab7c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ab04:	1af3      	subs	r3, r6, r3
 800ab06:	4293      	cmp	r3, r2
 800ab08:	d914      	bls.n	800ab34 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ab0a:	6920      	ldr	r0, [r4, #16]
 800ab0c:	6803      	ldr	r3, [r0, #0]
 800ab0e:	699b      	ldr	r3, [r3, #24]
 800ab10:	4798      	blx	r3
 800ab12:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ab14:	2264      	movs	r2, #100	; 0x64
 800ab16:	1af3      	subs	r3, r6, r3
 800ab18:	fbb3 f3f2 	udiv	r3, r3, r2
 800ab1c:	fbb0 f0f3 	udiv	r0, r0, r3
 800ab20:	2800      	cmp	r0, #0
 800ab22:	dc1d      	bgt.n	800ab60 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ab24:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ab28:	6920      	ldr	r0, [r4, #16]
 800ab2a:	6803      	ldr	r3, [r0, #0]
 800ab2c:	2100      	movs	r1, #0
 800ab2e:	69db      	ldr	r3, [r3, #28]
 800ab30:	4798      	blx	r3
 800ab32:	6726      	str	r6, [r4, #112]	; 0x70
 800ab34:	f003 f9d2 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 800ab38:	6803      	ldr	r3, [r0, #0]
 800ab3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab3c:	4798      	blx	r3
 800ab3e:	6823      	ldr	r3, [r4, #0]
 800ab40:	4620      	mov	r0, r4
 800ab42:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ab46:	4798      	blx	r3
 800ab48:	2001      	movs	r0, #1
 800ab4a:	f7f6 fa4d 	bl	8000fe8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ab4e:	2300      	movs	r3, #0
 800ab50:	702b      	strb	r3, [r5, #0]
 800ab52:	b004      	add	sp, #16
 800ab54:	bd70      	pop	{r4, r5, r6, pc}
 800ab56:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ab5a:	4620      	mov	r0, r4
 800ab5c:	4798      	blx	r3
 800ab5e:	e7af      	b.n	800aac0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ab60:	2863      	cmp	r0, #99	; 0x63
 800ab62:	bfcb      	itete	gt
 800ab64:	2300      	movgt	r3, #0
 800ab66:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ab6a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ab6e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ab72:	e7d9      	b.n	800ab28 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ab74:	2000bfd0 	.word	0x2000bfd0
 800ab78:	2000bfd1 	.word	0x2000bfd1
 800ab7c:	05f5e100 	.word	0x05f5e100

0800ab80 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ab80:	f7f6 bcfc 	b.w	800157c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ab84 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ab84:	6581      	str	r1, [r0, #88]	; 0x58
 800ab86:	301c      	adds	r0, #28
 800ab88:	f011 be94 	b.w	801c8b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ab8c <_ZN8touchgfx3HAL5touchEll>:
 800ab8c:	b530      	push	{r4, r5, lr}
 800ab8e:	b087      	sub	sp, #28
 800ab90:	4604      	mov	r4, r0
 800ab92:	a804      	add	r0, sp, #16
 800ab94:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ab98:	f002 fefe 	bl	800d998 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ab9c:	9b04      	ldr	r3, [sp, #16]
 800ab9e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800aba2:	a906      	add	r1, sp, #24
 800aba4:	9b05      	ldr	r3, [sp, #20]
 800aba6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800abaa:	a803      	add	r0, sp, #12
 800abac:	f002 ff46 	bl	800da3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800abb0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800abb4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800abb8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800abbc:	f104 001c 	add.w	r0, r4, #28
 800abc0:	b189      	cbz	r1, 800abe6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800abc2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800abc6:	9300      	str	r3, [sp, #0]
 800abc8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800abcc:	4613      	mov	r3, r2
 800abce:	462a      	mov	r2, r5
 800abd0:	f011 fe80 	bl	801c8d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800abd4:	b128      	cbz	r0, 800abe2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800abd6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800abda:	65e3      	str	r3, [r4, #92]	; 0x5c
 800abdc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800abe0:	6623      	str	r3, [r4, #96]	; 0x60
 800abe2:	b007      	add	sp, #28
 800abe4:	bd30      	pop	{r4, r5, pc}
 800abe6:	f011 feb5 	bl	801c954 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800abea:	2301      	movs	r3, #1
 800abec:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800abf0:	e7f1      	b.n	800abd6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800abf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800abf2:	b510      	push	{r4, lr}
 800abf4:	2b00      	cmp	r3, #0
 800abf6:	d046      	beq.n	800ac86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800abf8:	ea81 0002 	eor.w	r0, r1, r2
 800abfc:	07c4      	lsls	r4, r0, #31
 800abfe:	d508      	bpl.n	800ac12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ac00:	440b      	add	r3, r1
 800ac02:	3a01      	subs	r2, #1
 800ac04:	428b      	cmp	r3, r1
 800ac06:	d93e      	bls.n	800ac86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ac08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ac0c:	f801 0b01 	strb.w	r0, [r1], #1
 800ac10:	e7f8      	b.n	800ac04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ac12:	07d0      	lsls	r0, r2, #31
 800ac14:	bf42      	ittt	mi
 800ac16:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ac1a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ac1e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ac22:	2b01      	cmp	r3, #1
 800ac24:	d911      	bls.n	800ac4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ac26:	ea81 0402 	eor.w	r4, r1, r2
 800ac2a:	07a4      	lsls	r4, r4, #30
 800ac2c:	4610      	mov	r0, r2
 800ac2e:	d022      	beq.n	800ac76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ac30:	f023 0401 	bic.w	r4, r3, #1
 800ac34:	440c      	add	r4, r1
 800ac36:	428c      	cmp	r4, r1
 800ac38:	4602      	mov	r2, r0
 800ac3a:	d904      	bls.n	800ac46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ac3c:	8812      	ldrh	r2, [r2, #0]
 800ac3e:	f821 2b02 	strh.w	r2, [r1], #2
 800ac42:	3002      	adds	r0, #2
 800ac44:	e7f7      	b.n	800ac36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ac46:	f003 0301 	and.w	r3, r3, #1
 800ac4a:	f023 0003 	bic.w	r0, r3, #3
 800ac4e:	4408      	add	r0, r1
 800ac50:	4288      	cmp	r0, r1
 800ac52:	4614      	mov	r4, r2
 800ac54:	d904      	bls.n	800ac60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ac56:	6824      	ldr	r4, [r4, #0]
 800ac58:	f841 4b04 	str.w	r4, [r1], #4
 800ac5c:	3204      	adds	r2, #4
 800ac5e:	e7f7      	b.n	800ac50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ac60:	f003 0303 	and.w	r3, r3, #3
 800ac64:	440b      	add	r3, r1
 800ac66:	3a01      	subs	r2, #1
 800ac68:	428b      	cmp	r3, r1
 800ac6a:	d90c      	bls.n	800ac86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ac6c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ac70:	f801 0b01 	strb.w	r0, [r1], #1
 800ac74:	e7f8      	b.n	800ac68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ac76:	0790      	lsls	r0, r2, #30
 800ac78:	d0e7      	beq.n	800ac4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ac7a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ac7e:	f821 0b02 	strh.w	r0, [r1], #2
 800ac82:	3b02      	subs	r3, #2
 800ac84:	e7e1      	b.n	800ac4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ac86:	2001      	movs	r0, #1
 800ac88:	bd10      	pop	{r4, pc}

0800ac8a <_ZN8touchgfx3HAL7noTouchEv>:
 800ac8a:	b510      	push	{r4, lr}
 800ac8c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800ac90:	4604      	mov	r4, r0
 800ac92:	b153      	cbz	r3, 800acaa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ac94:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800ac98:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800ac9c:	2101      	movs	r1, #1
 800ac9e:	301c      	adds	r0, #28
 800aca0:	f011 fe58 	bl	801c954 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aca4:	2300      	movs	r3, #0
 800aca6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800acaa:	bd10      	pop	{r4, pc}

0800acac <_ZN8touchgfx3HAL3lcdEv>:
 800acac:	4b04      	ldr	r3, [pc, #16]	; (800acc0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800acae:	681b      	ldr	r3, [r3, #0]
 800acb0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800acb4:	b10a      	cbz	r2, 800acba <_ZN8touchgfx3HAL3lcdEv+0xe>
 800acb6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800acb8:	b900      	cbnz	r0, 800acbc <_ZN8touchgfx3HAL3lcdEv+0x10>
 800acba:	6898      	ldr	r0, [r3, #8]
 800acbc:	4770      	bx	lr
 800acbe:	bf00      	nop
 800acc0:	2000bfcc 	.word	0x2000bfcc

0800acc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800acc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acc8:	4604      	mov	r4, r0
 800acca:	6980      	ldr	r0, [r0, #24]
 800accc:	b085      	sub	sp, #20
 800acce:	460f      	mov	r7, r1
 800acd0:	4690      	mov	r8, r2
 800acd2:	4699      	mov	r9, r3
 800acd4:	b930      	cbnz	r0, 800ace4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800acd6:	4b1c      	ldr	r3, [pc, #112]	; (800ad48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800acd8:	4a1c      	ldr	r2, [pc, #112]	; (800ad4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800acda:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800acde:	481c      	ldr	r0, [pc, #112]	; (800ad50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800ace0:	f012 fc68 	bl	801d5b4 <__assert_func>
 800ace4:	ad04      	add	r5, sp, #16
 800ace6:	2600      	movs	r6, #0
 800ace8:	f845 6d04 	str.w	r6, [r5, #-4]!
 800acec:	6806      	ldr	r6, [r0, #0]
 800acee:	9501      	str	r5, [sp, #4]
 800acf0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800acf4:	9500      	str	r5, [sp, #0]
 800acf6:	6835      	ldr	r5, [r6, #0]
 800acf8:	47a8      	blx	r5
 800acfa:	4d16      	ldr	r5, [pc, #88]	; (800ad54 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800acfc:	4606      	mov	r6, r0
 800acfe:	f8a5 9000 	strh.w	r9, [r5]
 800ad02:	f7ff ffd3 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800ad06:	6803      	ldr	r3, [r0, #0]
 800ad08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad0a:	4798      	blx	r3
 800ad0c:	2801      	cmp	r0, #1
 800ad0e:	d012      	beq.n	800ad36 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800ad10:	d306      	bcc.n	800ad20 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800ad12:	280d      	cmp	r0, #13
 800ad14:	d80b      	bhi.n	800ad2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800ad16:	4b10      	ldr	r3, [pc, #64]	; (800ad58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800ad18:	4a0c      	ldr	r2, [pc, #48]	; (800ad4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800ad1a:	f240 115b 	movw	r1, #347	; 0x15b
 800ad1e:	e7de      	b.n	800acde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800ad20:	882b      	ldrh	r3, [r5, #0]
 800ad22:	fb08 7203 	mla	r2, r8, r3, r7
 800ad26:	9b03      	ldr	r3, [sp, #12]
 800ad28:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ad2c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ad2e:	4630      	mov	r0, r6
 800ad30:	b005      	add	sp, #20
 800ad32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad36:	882a      	ldrh	r2, [r5, #0]
 800ad38:	9b03      	ldr	r3, [sp, #12]
 800ad3a:	fb08 7202 	mla	r2, r8, r2, r7
 800ad3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ad42:	1a9a      	subs	r2, r3, r2
 800ad44:	63e2      	str	r2, [r4, #60]	; 0x3c
 800ad46:	e7f2      	b.n	800ad2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800ad48:	0801fc89 	.word	0x0801fc89
 800ad4c:	0801ff47 	.word	0x0801ff47
 800ad50:	0801fcce 	.word	0x0801fcce
 800ad54:	2000bfc6 	.word	0x2000bfc6
 800ad58:	0801fcf4 	.word	0x0801fcf4

0800ad5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800ad5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad5e:	b08b      	sub	sp, #44	; 0x2c
 800ad60:	4617      	mov	r7, r2
 800ad62:	4604      	mov	r4, r0
 800ad64:	460e      	mov	r6, r1
 800ad66:	461d      	mov	r5, r3
 800ad68:	f7ff ffa0 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800ad6c:	6803      	ldr	r3, [r0, #0]
 800ad6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad70:	4798      	blx	r3
 800ad72:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ad76:	9007      	str	r0, [sp, #28]
 800ad78:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ad7c:	4b0d      	ldr	r3, [pc, #52]	; (800adb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ad7e:	6822      	ldr	r2, [r4, #0]
 800ad80:	881b      	ldrh	r3, [r3, #0]
 800ad82:	9306      	str	r3, [sp, #24]
 800ad84:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ad88:	9305      	str	r3, [sp, #20]
 800ad8a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ad8e:	9304      	str	r3, [sp, #16]
 800ad90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ad94:	9303      	str	r3, [sp, #12]
 800ad96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ad9a:	9302      	str	r3, [sp, #8]
 800ad9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ada0:	e9cd 5300 	strd	r5, r3, [sp]
 800ada4:	4631      	mov	r1, r6
 800ada6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800ada8:	463b      	mov	r3, r7
 800adaa:	2200      	movs	r2, #0
 800adac:	4620      	mov	r0, r4
 800adae:	47a8      	blx	r5
 800adb0:	b00b      	add	sp, #44	; 0x2c
 800adb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800adb4:	2000bfc6 	.word	0x2000bfc6

0800adb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800adb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800adbc:	4698      	mov	r8, r3
 800adbe:	6803      	ldr	r3, [r0, #0]
 800adc0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800adc2:	4b15      	ldr	r3, [pc, #84]	; (800ae18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800adc4:	b08b      	sub	sp, #44	; 0x2c
 800adc6:	4617      	mov	r7, r2
 800adc8:	f8b3 9000 	ldrh.w	r9, [r3]
 800adcc:	460e      	mov	r6, r1
 800adce:	4604      	mov	r4, r0
 800add0:	f7ff ff6c 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800add4:	6803      	ldr	r3, [r0, #0]
 800add6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800add8:	4798      	blx	r3
 800adda:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800adde:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ade2:	2302      	movs	r3, #2
 800ade4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ade8:	2301      	movs	r3, #1
 800adea:	9305      	str	r3, [sp, #20]
 800adec:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800adf0:	9304      	str	r3, [sp, #16]
 800adf2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800adf6:	9303      	str	r3, [sp, #12]
 800adf8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800adfc:	9302      	str	r3, [sp, #8]
 800adfe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ae02:	2200      	movs	r2, #0
 800ae04:	e9cd 8300 	strd	r8, r3, [sp]
 800ae08:	4631      	mov	r1, r6
 800ae0a:	463b      	mov	r3, r7
 800ae0c:	4620      	mov	r0, r4
 800ae0e:	47a8      	blx	r5
 800ae10:	b00b      	add	sp, #44	; 0x2c
 800ae12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae16:	bf00      	nop
 800ae18:	2000bfc6 	.word	0x2000bfc6

0800ae1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ae1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae20:	4698      	mov	r8, r3
 800ae22:	6803      	ldr	r3, [r0, #0]
 800ae24:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ae26:	4b11      	ldr	r3, [pc, #68]	; (800ae6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ae28:	b087      	sub	sp, #28
 800ae2a:	f8b3 9000 	ldrh.w	r9, [r3]
 800ae2e:	460e      	mov	r6, r1
 800ae30:	4617      	mov	r7, r2
 800ae32:	4604      	mov	r4, r0
 800ae34:	f7ff ff3a 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800ae38:	6803      	ldr	r3, [r0, #0]
 800ae3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae3c:	4798      	blx	r3
 800ae3e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ae42:	f8cd 900c 	str.w	r9, [sp, #12]
 800ae46:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ae4a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ae4e:	9302      	str	r3, [sp, #8]
 800ae50:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ae54:	9301      	str	r3, [sp, #4]
 800ae56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ae5a:	9300      	str	r3, [sp, #0]
 800ae5c:	463a      	mov	r2, r7
 800ae5e:	4643      	mov	r3, r8
 800ae60:	4631      	mov	r1, r6
 800ae62:	4620      	mov	r0, r4
 800ae64:	47a8      	blx	r5
 800ae66:	b007      	add	sp, #28
 800ae68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae6c:	2000bfc6 	.word	0x2000bfc6

0800ae70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ae70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae74:	4604      	mov	r4, r0
 800ae76:	b08f      	sub	sp, #60	; 0x3c
 800ae78:	4610      	mov	r0, r2
 800ae7a:	460d      	mov	r5, r1
 800ae7c:	4691      	mov	r9, r2
 800ae7e:	461e      	mov	r6, r3
 800ae80:	f005 fc0a 	bl	8010698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ae84:	2800      	cmp	r0, #0
 800ae86:	f000 809c 	beq.w	800afc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800ae8a:	6823      	ldr	r3, [r4, #0]
 800ae8c:	f8df b194 	ldr.w	fp, [pc, #404]	; 800b024 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800ae90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae92:	f8df a194 	ldr.w	sl, [pc, #404]	; 800b028 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ae96:	4f60      	ldr	r7, [pc, #384]	; (800b018 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ae98:	4620      	mov	r0, r4
 800ae9a:	4798      	blx	r3
 800ae9c:	6823      	ldr	r3, [r4, #0]
 800ae9e:	4620      	mov	r0, r4
 800aea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aea2:	4798      	blx	r3
 800aea4:	f8bb 3000 	ldrh.w	r3, [fp]
 800aea8:	9301      	str	r3, [sp, #4]
 800aeaa:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800aeae:	f8ba 3000 	ldrh.w	r3, [sl]
 800aeb2:	9302      	str	r3, [sp, #8]
 800aeb4:	883b      	ldrh	r3, [r7, #0]
 800aeb6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800aeba:	9303      	str	r3, [sp, #12]
 800aebc:	4b57      	ldr	r3, [pc, #348]	; (800b01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800aebe:	9305      	str	r3, [sp, #20]
 800aec0:	881a      	ldrh	r2, [r3, #0]
 800aec2:	9204      	str	r2, [sp, #16]
 800aec4:	4640      	mov	r0, r8
 800aec6:	f005 fc97 	bl	80107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aeca:	8038      	strh	r0, [r7, #0]
 800aecc:	4640      	mov	r0, r8
 800aece:	f005 fcd7 	bl	8010880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aed2:	9b05      	ldr	r3, [sp, #20]
 800aed4:	8018      	strh	r0, [r3, #0]
 800aed6:	4b52      	ldr	r3, [pc, #328]	; (800b020 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800aed8:	781b      	ldrb	r3, [r3, #0]
 800aeda:	2b00      	cmp	r3, #0
 800aedc:	d174      	bne.n	800afc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800aede:	883b      	ldrh	r3, [r7, #0]
 800aee0:	f8ab 3000 	strh.w	r3, [fp]
 800aee4:	f8aa 0000 	strh.w	r0, [sl]
 800aee8:	4648      	mov	r0, r9
 800aeea:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800aeee:	f005 fbd3 	bl	8010698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aef2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800aef6:	2200      	movs	r2, #0
 800aef8:	4611      	mov	r1, r2
 800aefa:	4628      	mov	r0, r5
 800aefc:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800af00:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800af04:	f7f7 ffdb 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
 800af08:	2301      	movs	r3, #1
 800af0a:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800af0e:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800af12:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800af16:	2b00      	cmp	r3, #0
 800af18:	dd5c      	ble.n	800afd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800af1a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800af1e:	2b00      	cmp	r3, #0
 800af20:	dd58      	ble.n	800afd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800af22:	462a      	mov	r2, r5
 800af24:	ab0a      	add	r3, sp, #40	; 0x28
 800af26:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800af2a:	6851      	ldr	r1, [r2, #4]
 800af2c:	c303      	stmia	r3!, {r0, r1}
 800af2e:	4631      	mov	r1, r6
 800af30:	a80a      	add	r0, sp, #40	; 0x28
 800af32:	f7ff fbed 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800af36:	4b38      	ldr	r3, [pc, #224]	; (800b018 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800af38:	f9b3 2000 	ldrsh.w	r2, [r3]
 800af3c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800af40:	2100      	movs	r1, #0
 800af42:	aa0a      	add	r2, sp, #40	; 0x28
 800af44:	4b35      	ldr	r3, [pc, #212]	; (800b01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800af46:	910c      	str	r1, [sp, #48]	; 0x30
 800af48:	e892 0003 	ldmia.w	r2, {r0, r1}
 800af4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800af50:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800af54:	ab08      	add	r3, sp, #32
 800af56:	e883 0003 	stmia.w	r3, {r0, r1}
 800af5a:	4618      	mov	r0, r3
 800af5c:	a90c      	add	r1, sp, #48	; 0x30
 800af5e:	f7ff fbd7 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800af62:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800af64:	2b00      	cmp	r3, #0
 800af66:	d13c      	bne.n	800afe2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800af68:	2000      	movs	r0, #0
 800af6a:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800af6e:	2600      	movs	r6, #0
 800af70:	682a      	ldr	r2, [r5, #0]
 800af72:	696b      	ldr	r3, [r5, #20]
 800af74:	616e      	str	r6, [r5, #20]
 800af76:	9305      	str	r3, [sp, #20]
 800af78:	6892      	ldr	r2, [r2, #8]
 800af7a:	a908      	add	r1, sp, #32
 800af7c:	4628      	mov	r0, r5
 800af7e:	4790      	blx	r2
 800af80:	9b05      	ldr	r3, [sp, #20]
 800af82:	616b      	str	r3, [r5, #20]
 800af84:	4652      	mov	r2, sl
 800af86:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800af8a:	4649      	mov	r1, r9
 800af8c:	4628      	mov	r0, r5
 800af8e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800af92:	f7f7 ff94 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
 800af96:	4b23      	ldr	r3, [pc, #140]	; (800b024 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800af98:	9a01      	ldr	r2, [sp, #4]
 800af9a:	801a      	strh	r2, [r3, #0]
 800af9c:	4b22      	ldr	r3, [pc, #136]	; (800b028 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800af9e:	9a02      	ldr	r2, [sp, #8]
 800afa0:	801a      	strh	r2, [r3, #0]
 800afa2:	4b1d      	ldr	r3, [pc, #116]	; (800b018 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800afa4:	9a03      	ldr	r2, [sp, #12]
 800afa6:	801a      	strh	r2, [r3, #0]
 800afa8:	4b1c      	ldr	r3, [pc, #112]	; (800b01c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800afaa:	9a04      	ldr	r2, [sp, #16]
 800afac:	801a      	strh	r2, [r3, #0]
 800afae:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800afb2:	6823      	ldr	r3, [r4, #0]
 800afb4:	4620      	mov	r0, r4
 800afb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afb8:	4798      	blx	r3
 800afba:	6823      	ldr	r3, [r4, #0]
 800afbc:	4620      	mov	r0, r4
 800afbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afc0:	4798      	blx	r3
 800afc2:	b00f      	add	sp, #60	; 0x3c
 800afc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afc8:	883b      	ldrh	r3, [r7, #0]
 800afca:	f8ab 0000 	strh.w	r0, [fp]
 800afce:	f8aa 3000 	strh.w	r3, [sl]
 800afd2:	e789      	b.n	800aee8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800afd4:	462a      	mov	r2, r5
 800afd6:	ab0a      	add	r3, sp, #40	; 0x28
 800afd8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800afdc:	6851      	ldr	r1, [r2, #4]
 800afde:	c303      	stmia	r3!, {r0, r1}
 800afe0:	e7a9      	b.n	800af36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800afe2:	a807      	add	r0, sp, #28
 800afe4:	f005 fdae 	bl	8010b44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800afe8:	4606      	mov	r6, r0
 800afea:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800afec:	6803      	ldr	r3, [r0, #0]
 800afee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aff0:	4798      	blx	r3
 800aff2:	4286      	cmp	r6, r0
 800aff4:	d1b8      	bne.n	800af68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800aff6:	f7ff fe59 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800affa:	6803      	ldr	r3, [r0, #0]
 800affc:	4606      	mov	r6, r0
 800affe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b000:	9305      	str	r3, [sp, #20]
 800b002:	a807      	add	r0, sp, #28
 800b004:	f005 fd9e 	bl	8010b44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b008:	9b05      	ldr	r3, [sp, #20]
 800b00a:	4601      	mov	r1, r0
 800b00c:	4630      	mov	r0, r6
 800b00e:	4798      	blx	r3
 800b010:	f080 0001 	eor.w	r0, r0, #1
 800b014:	b2c0      	uxtb	r0, r0
 800b016:	e7a8      	b.n	800af6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b018:	2000bfc0 	.word	0x2000bfc0
 800b01c:	2000bfc2 	.word	0x2000bfc2
 800b020:	2000bfc4 	.word	0x2000bfc4
 800b024:	2000bfc6 	.word	0x2000bfc6
 800b028:	2000bfc8 	.word	0x2000bfc8

0800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b02c:	b510      	push	{r4, lr}
 800b02e:	4b07      	ldr	r3, [pc, #28]	; (800b04c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b030:	781b      	ldrb	r3, [r3, #0]
 800b032:	4604      	mov	r4, r0
 800b034:	b13b      	cbz	r3, 800b046 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b036:	6803      	ldr	r3, [r0, #0]
 800b038:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b03a:	4798      	blx	r3
 800b03c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b03e:	4283      	cmp	r3, r0
 800b040:	d101      	bne.n	800b046 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b042:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b044:	bd10      	pop	{r4, pc}
 800b046:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b048:	e7fc      	b.n	800b044 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b04a:	bf00      	nop
 800b04c:	2000bfca 	.word	0x2000bfca

0800b050 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b050:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b054:	b08a      	sub	sp, #40	; 0x28
 800b056:	461d      	mov	r5, r3
 800b058:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b05c:	2400      	movs	r4, #0
 800b05e:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800b062:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800b066:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 800b06a:	9404      	str	r4, [sp, #16]
 800b06c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b070:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b074:	f8ad 8018 	strh.w	r8, [sp, #24]
 800b078:	4692      	mov	sl, r2
 800b07a:	4606      	mov	r6, r0
 800b07c:	f8ad 701a 	strh.w	r7, [sp, #26]
 800b080:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b084:	f88d 4020 	strb.w	r4, [sp, #32]
 800b088:	f7ff ffd0 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b08c:	fb09 a505 	mla	r5, r9, r5, sl
 800b090:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b094:	9505      	str	r5, [sp, #20]
 800b096:	f8ad 901e 	strh.w	r9, [sp, #30]
 800b09a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b09e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b0a2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b0a6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b0aa:	f1b8 0f00 	cmp.w	r8, #0
 800b0ae:	d000      	beq.n	800b0b2 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800b0b0:	b937      	cbnz	r7, 800b0c0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800b0b2:	4b0d      	ldr	r3, [pc, #52]	; (800b0e8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800b0b4:	4a0d      	ldr	r2, [pc, #52]	; (800b0ec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800b0b6:	f240 2102 	movw	r1, #514	; 0x202
 800b0ba:	480d      	ldr	r0, [pc, #52]	; (800b0f0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800b0bc:	f012 fa7a 	bl	801d5b4 <__assert_func>
 800b0c0:	6833      	ldr	r3, [r6, #0]
 800b0c2:	9c01      	ldr	r4, [sp, #4]
 800b0c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0c6:	4630      	mov	r0, r6
 800b0c8:	4798      	blx	r3
 800b0ca:	4220      	tst	r0, r4
 800b0cc:	d104      	bne.n	800b0d8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800b0ce:	4b09      	ldr	r3, [pc, #36]	; (800b0f4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800b0d0:	4a06      	ldr	r2, [pc, #24]	; (800b0ec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800b0d2:	f240 2103 	movw	r1, #515	; 0x203
 800b0d6:	e7f0      	b.n	800b0ba <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 800b0d8:	6870      	ldr	r0, [r6, #4]
 800b0da:	6803      	ldr	r3, [r0, #0]
 800b0dc:	a901      	add	r1, sp, #4
 800b0de:	685b      	ldr	r3, [r3, #4]
 800b0e0:	4798      	blx	r3
 800b0e2:	b00a      	add	sp, #40	; 0x28
 800b0e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b0e8:	0801fb23 	.word	0x0801fb23
 800b0ec:	0801fd7c 	.word	0x0801fd7c
 800b0f0:	0801fcce 	.word	0x0801fcce
 800b0f4:	0801fb5b 	.word	0x0801fb5b

0800b0f8 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0fc:	b08b      	sub	sp, #44	; 0x2c
 800b0fe:	2400      	movs	r4, #0
 800b100:	461d      	mov	r5, r3
 800b102:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b106:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 800b10a:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800b10e:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800b112:	9404      	str	r4, [sp, #16]
 800b114:	468a      	mov	sl, r1
 800b116:	4693      	mov	fp, r2
 800b118:	4606      	mov	r6, r0
 800b11a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b11e:	f7ff ff85 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b122:	fb09 b505 	mla	r5, r9, r5, fp
 800b126:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b12a:	9505      	str	r5, [sp, #20]
 800b12c:	f8ad 8018 	strh.w	r8, [sp, #24]
 800b130:	f8ad 701a 	strh.w	r7, [sp, #26]
 800b134:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b138:	f8ad 901e 	strh.w	r9, [sp, #30]
 800b13c:	f8cd a010 	str.w	sl, [sp, #16]
 800b140:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b144:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b148:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b14c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b150:	f1b8 0f00 	cmp.w	r8, #0
 800b154:	d000      	beq.n	800b158 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800b156:	b937      	cbnz	r7, 800b166 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 800b158:	4b0d      	ldr	r3, [pc, #52]	; (800b190 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800b15a:	4a0e      	ldr	r2, [pc, #56]	; (800b194 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800b15c:	f240 2119 	movw	r1, #537	; 0x219
 800b160:	480d      	ldr	r0, [pc, #52]	; (800b198 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800b162:	f012 fa27 	bl	801d5b4 <__assert_func>
 800b166:	6833      	ldr	r3, [r6, #0]
 800b168:	9c01      	ldr	r4, [sp, #4]
 800b16a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b16c:	4630      	mov	r0, r6
 800b16e:	4798      	blx	r3
 800b170:	4220      	tst	r0, r4
 800b172:	d104      	bne.n	800b17e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 800b174:	4b09      	ldr	r3, [pc, #36]	; (800b19c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 800b176:	4a07      	ldr	r2, [pc, #28]	; (800b194 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800b178:	f240 211a 	movw	r1, #538	; 0x21a
 800b17c:	e7f0      	b.n	800b160 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 800b17e:	6870      	ldr	r0, [r6, #4]
 800b180:	6803      	ldr	r3, [r0, #0]
 800b182:	a901      	add	r1, sp, #4
 800b184:	685b      	ldr	r3, [r3, #4]
 800b186:	4798      	blx	r3
 800b188:	b00b      	add	sp, #44	; 0x2c
 800b18a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b18e:	bf00      	nop
 800b190:	0801fba0 	.word	0x0801fba0
 800b194:	0801fdf2 	.word	0x0801fdf2
 800b198:	0801fcce 	.word	0x0801fcce
 800b19c:	0801fbd8 	.word	0x0801fbd8

0800b1a0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800b1a0:	b508      	push	{r3, lr}
 800b1a2:	290d      	cmp	r1, #13
 800b1a4:	d817      	bhi.n	800b1d6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800b1a6:	e8df f001 	tbb	[pc, r1]
 800b1aa:	090b      	.short	0x090b
 800b1ac:	0d0d0d07 	.word	0x0d0d0d07
 800b1b0:	1414140d 	.word	0x1414140d
 800b1b4:	0d0d1414 	.word	0x0d0d1414
 800b1b8:	2020      	movs	r0, #32
 800b1ba:	bd08      	pop	{r3, pc}
 800b1bc:	2018      	movs	r0, #24
 800b1be:	e7fc      	b.n	800b1ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b1c0:	2010      	movs	r0, #16
 800b1c2:	e7fa      	b.n	800b1ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b1c4:	4b05      	ldr	r3, [pc, #20]	; (800b1dc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800b1c6:	4a06      	ldr	r2, [pc, #24]	; (800b1e0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800b1c8:	4806      	ldr	r0, [pc, #24]	; (800b1e4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800b1ca:	f240 2183 	movw	r1, #643	; 0x283
 800b1ce:	f012 f9f1 	bl	801d5b4 <__assert_func>
 800b1d2:	2008      	movs	r0, #8
 800b1d4:	e7f1      	b.n	800b1ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b1d6:	2000      	movs	r0, #0
 800b1d8:	e7ef      	b.n	800b1ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b1da:	bf00      	nop
 800b1dc:	0801fd4a 	.word	0x0801fd4a
 800b1e0:	0802011d 	.word	0x0802011d
 800b1e4:	0801fcce 	.word	0x0801fcce

0800b1e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800b1e8:	b570      	push	{r4, r5, r6, lr}
 800b1ea:	460d      	mov	r5, r1
 800b1ec:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800b1f0:	4616      	mov	r6, r2
 800b1f2:	461c      	mov	r4, r3
 800b1f4:	f7ff ffd4 	bl	800b1a0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800b1f8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800b1fc:	10c0      	asrs	r0, r0, #3
 800b1fe:	fb06 5101 	mla	r1, r6, r1, r5
 800b202:	fb00 4001 	mla	r0, r0, r1, r4
 800b206:	bd70      	pop	{r4, r5, r6, pc}

0800b208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b20c:	b08c      	sub	sp, #48	; 0x30
 800b20e:	f04f 0c00 	mov.w	ip, #0
 800b212:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800b216:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800b21a:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 800b21e:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 800b222:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 800b226:	f8cd c018 	str.w	ip, [sp, #24]
 800b22a:	2d0b      	cmp	r5, #11
 800b22c:	4604      	mov	r4, r0
 800b22e:	469a      	mov	sl, r3
 800b230:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 800b234:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800b238:	d130      	bne.n	800b29c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 800b23a:	2080      	movs	r0, #128	; 0x80
 800b23c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 800b240:	9205      	str	r2, [sp, #20]
 800b242:	4620      	mov	r0, r4
 800b244:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 800b248:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800b24c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b250:	f8ad 7020 	strh.w	r7, [sp, #32]
 800b254:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 800b258:	f7ff fee8 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b25c:	e9cd 9800 	strd	r9, r8, [sp]
 800b260:	4603      	mov	r3, r0
 800b262:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800b266:	4651      	mov	r1, sl
 800b268:	4620      	mov	r0, r4
 800b26a:	f7ff ffbd 	bl	800b1e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b26e:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800b272:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b276:	2300      	movs	r3, #0
 800b278:	9007      	str	r0, [sp, #28]
 800b27a:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800b27e:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800b282:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800b286:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b28a:	b107      	cbz	r7, 800b28e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800b28c:	b9d6      	cbnz	r6, 800b2c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800b28e:	4b17      	ldr	r3, [pc, #92]	; (800b2ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800b290:	4a17      	ldr	r2, [pc, #92]	; (800b2f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800b292:	f240 11c9 	movw	r1, #457	; 0x1c9
 800b296:	4817      	ldr	r0, [pc, #92]	; (800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800b298:	f012 f98c 	bl	801d5b4 <__assert_func>
 800b29c:	2d02      	cmp	r5, #2
 800b29e:	d108      	bne.n	800b2b2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b2a0:	2bff      	cmp	r3, #255	; 0xff
 800b2a2:	d104      	bne.n	800b2ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800b2a4:	2800      	cmp	r0, #0
 800b2a6:	bf14      	ite	ne
 800b2a8:	2040      	movne	r0, #64	; 0x40
 800b2aa:	2020      	moveq	r0, #32
 800b2ac:	e7c6      	b.n	800b23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800b2ae:	2040      	movs	r0, #64	; 0x40
 800b2b0:	e7c4      	b.n	800b23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800b2b2:	2bff      	cmp	r3, #255	; 0xff
 800b2b4:	d104      	bne.n	800b2c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800b2b6:	2800      	cmp	r0, #0
 800b2b8:	bf14      	ite	ne
 800b2ba:	2004      	movne	r0, #4
 800b2bc:	2001      	moveq	r0, #1
 800b2be:	e7bd      	b.n	800b23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800b2c0:	2004      	movs	r0, #4
 800b2c2:	e7bb      	b.n	800b23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800b2c4:	6823      	ldr	r3, [r4, #0]
 800b2c6:	9d03      	ldr	r5, [sp, #12]
 800b2c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b2ca:	4620      	mov	r0, r4
 800b2cc:	4798      	blx	r3
 800b2ce:	4228      	tst	r0, r5
 800b2d0:	d104      	bne.n	800b2dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800b2d2:	4b09      	ldr	r3, [pc, #36]	; (800b2f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800b2d4:	4a06      	ldr	r2, [pc, #24]	; (800b2f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800b2d6:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800b2da:	e7dc      	b.n	800b296 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800b2dc:	6860      	ldr	r0, [r4, #4]
 800b2de:	6803      	ldr	r3, [r0, #0]
 800b2e0:	a903      	add	r1, sp, #12
 800b2e2:	685b      	ldr	r3, [r3, #4]
 800b2e4:	4798      	blx	r3
 800b2e6:	b00c      	add	sp, #48	; 0x30
 800b2e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b2ec:	0801fb23 	.word	0x0801fb23
 800b2f0:	0801ffab 	.word	0x0801ffab
 800b2f4:	0801fcce 	.word	0x0801fcce
 800b2f8:	0801fb5b 	.word	0x0801fb5b

0800b2fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b2fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b300:	b08d      	sub	sp, #52	; 0x34
 800b302:	469b      	mov	fp, r3
 800b304:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800b308:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800b30c:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800b310:	2fff      	cmp	r7, #255	; 0xff
 800b312:	bf14      	ite	ne
 800b314:	2308      	movne	r3, #8
 800b316:	2302      	moveq	r3, #2
 800b318:	2500      	movs	r5, #0
 800b31a:	4604      	mov	r4, r0
 800b31c:	4689      	mov	r9, r1
 800b31e:	4692      	mov	sl, r2
 800b320:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800b324:	9506      	str	r5, [sp, #24]
 800b326:	f7ff fe81 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b32a:	465a      	mov	r2, fp
 800b32c:	4603      	mov	r3, r0
 800b32e:	4651      	mov	r1, sl
 800b330:	e9cd 8600 	strd	r8, r6, [sp]
 800b334:	4620      	mov	r0, r4
 800b336:	f7ff ff57 	bl	800b1e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b33a:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800b33e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b342:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800b346:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b34a:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800b34e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b352:	6823      	ldr	r3, [r4, #0]
 800b354:	9007      	str	r0, [sp, #28]
 800b356:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800b35a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b35e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800b362:	f8cd 9018 	str.w	r9, [sp, #24]
 800b366:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800b36a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800b36e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800b372:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b374:	9d03      	ldr	r5, [sp, #12]
 800b376:	4620      	mov	r0, r4
 800b378:	4798      	blx	r3
 800b37a:	4228      	tst	r0, r5
 800b37c:	d106      	bne.n	800b38c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800b37e:	4b07      	ldr	r3, [pc, #28]	; (800b39c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800b380:	4a07      	ldr	r2, [pc, #28]	; (800b3a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800b382:	4808      	ldr	r0, [pc, #32]	; (800b3a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800b384:	f44f 710c 	mov.w	r1, #560	; 0x230
 800b388:	f012 f914 	bl	801d5b4 <__assert_func>
 800b38c:	6860      	ldr	r0, [r4, #4]
 800b38e:	6803      	ldr	r3, [r0, #0]
 800b390:	a903      	add	r1, sp, #12
 800b392:	685b      	ldr	r3, [r3, #4]
 800b394:	4798      	blx	r3
 800b396:	b00d      	add	sp, #52	; 0x34
 800b398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b39c:	0801fb5b 	.word	0x0801fb5b
 800b3a0:	08020082 	.word	0x08020082
 800b3a4:	0801fcce 	.word	0x0801fcce

0800b3a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b3a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b3ac:	461f      	mov	r7, r3
 800b3ae:	4b0b      	ldr	r3, [pc, #44]	; (800b3dc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b3b0:	460d      	mov	r5, r1
 800b3b2:	f8b3 8000 	ldrh.w	r8, [r3]
 800b3b6:	4616      	mov	r6, r2
 800b3b8:	4604      	mov	r4, r0
 800b3ba:	f7ff fc77 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800b3be:	6803      	ldr	r3, [r0, #0]
 800b3c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3c2:	4798      	blx	r3
 800b3c4:	463b      	mov	r3, r7
 800b3c6:	e9cd 8000 	strd	r8, r0, [sp]
 800b3ca:	4632      	mov	r2, r6
 800b3cc:	4629      	mov	r1, r5
 800b3ce:	4620      	mov	r0, r4
 800b3d0:	f7ff ff0a 	bl	800b1e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b3d4:	b002      	add	sp, #8
 800b3d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3da:	bf00      	nop
 800b3dc:	2000bfc6 	.word	0x2000bfc6

0800b3e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b3e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3e4:	b08b      	sub	sp, #44	; 0x2c
 800b3e6:	4699      	mov	r9, r3
 800b3e8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800b3ec:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800b3f0:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b3f4:	f8ad 7018 	strh.w	r7, [sp, #24]
 800b3f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b3fc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b400:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b404:	2500      	movs	r5, #0
 800b406:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b40a:	f88d 3020 	strb.w	r3, [sp, #32]
 800b40e:	4690      	mov	r8, r2
 800b410:	4604      	mov	r4, r0
 800b412:	9504      	str	r5, [sp, #16]
 800b414:	f8ad 601a 	strh.w	r6, [sp, #26]
 800b418:	f7ff fe08 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b41c:	464a      	mov	r2, r9
 800b41e:	4603      	mov	r3, r0
 800b420:	4641      	mov	r1, r8
 800b422:	4620      	mov	r0, r4
 800b424:	f7ff ffc0 	bl	800b3a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b428:	4b19      	ldr	r3, [pc, #100]	; (800b490 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800b42a:	9005      	str	r0, [sp, #20]
 800b42c:	881b      	ldrh	r3, [r3, #0]
 800b42e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b432:	f7ff fc3b 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800b436:	6803      	ldr	r3, [r0, #0]
 800b438:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b43a:	4798      	blx	r3
 800b43c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b440:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b444:	b107      	cbz	r7, 800b448 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800b446:	b936      	cbnz	r6, 800b456 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800b448:	4b12      	ldr	r3, [pc, #72]	; (800b494 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800b44a:	4a13      	ldr	r2, [pc, #76]	; (800b498 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800b44c:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800b450:	4812      	ldr	r0, [pc, #72]	; (800b49c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800b452:	f012 f8af 	bl	801d5b4 <__assert_func>
 800b456:	6823      	ldr	r3, [r4, #0]
 800b458:	9e01      	ldr	r6, [sp, #4]
 800b45a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b45c:	4620      	mov	r0, r4
 800b45e:	4798      	blx	r3
 800b460:	4230      	tst	r0, r6
 800b462:	d104      	bne.n	800b46e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800b464:	4b0e      	ldr	r3, [pc, #56]	; (800b4a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800b466:	4a0c      	ldr	r2, [pc, #48]	; (800b498 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800b468:	f240 11e7 	movw	r1, #487	; 0x1e7
 800b46c:	e7f0      	b.n	800b450 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800b46e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b470:	9304      	str	r3, [sp, #16]
 800b472:	6860      	ldr	r0, [r4, #4]
 800b474:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800b478:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b47c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b480:	6803      	ldr	r3, [r0, #0]
 800b482:	a901      	add	r1, sp, #4
 800b484:	685b      	ldr	r3, [r3, #4]
 800b486:	4798      	blx	r3
 800b488:	b00b      	add	sp, #44	; 0x2c
 800b48a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b48e:	bf00      	nop
 800b490:	2000bfc6 	.word	0x2000bfc6
 800b494:	0801fb23 	.word	0x0801fb23
 800b498:	0801fe57 	.word	0x0801fe57
 800b49c:	0801fcce 	.word	0x0801fcce
 800b4a0:	0801fb5b 	.word	0x0801fb5b

0800b4a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b4a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4a6:	b08d      	sub	sp, #52	; 0x34
 800b4a8:	466b      	mov	r3, sp
 800b4aa:	e883 0006 	stmia.w	r3, {r1, r2}
 800b4ae:	4b22      	ldr	r3, [pc, #136]	; (800b538 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b4b0:	781b      	ldrb	r3, [r3, #0]
 800b4b2:	4604      	mov	r4, r0
 800b4b4:	b933      	cbnz	r3, 800b4c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b4b6:	4b21      	ldr	r3, [pc, #132]	; (800b53c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b4b8:	4a21      	ldr	r2, [pc, #132]	; (800b540 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b4ba:	4822      	ldr	r0, [pc, #136]	; (800b544 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800b4bc:	f240 2141 	movw	r1, #577	; 0x241
 800b4c0:	f012 f878 	bl	801d5b4 <__assert_func>
 800b4c4:	2300      	movs	r3, #0
 800b4c6:	9306      	str	r3, [sp, #24]
 800b4c8:	6803      	ldr	r3, [r0, #0]
 800b4ca:	f8bd 6000 	ldrh.w	r6, [sp]
 800b4ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4d0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b4d4:	2501      	movs	r5, #1
 800b4d6:	9503      	str	r5, [sp, #12]
 800b4d8:	4798      	blx	r3
 800b4da:	463a      	mov	r2, r7
 800b4dc:	4631      	mov	r1, r6
 800b4de:	4603      	mov	r3, r0
 800b4e0:	4620      	mov	r0, r4
 800b4e2:	f7ff ff61 	bl	800b3a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b4e6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b4e8:	9307      	str	r3, [sp, #28]
 800b4ea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b4ee:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b4f2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b4f6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b4fa:	4b13      	ldr	r3, [pc, #76]	; (800b548 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800b4fc:	9004      	str	r0, [sp, #16]
 800b4fe:	881b      	ldrh	r3, [r3, #0]
 800b500:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b504:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b508:	f7ff fbd0 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800b50c:	6803      	ldr	r3, [r0, #0]
 800b50e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b510:	4798      	blx	r3
 800b512:	23ff      	movs	r3, #255	; 0xff
 800b514:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b518:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b51c:	6860      	ldr	r0, [r4, #4]
 800b51e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b522:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b526:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b52a:	6803      	ldr	r3, [r0, #0]
 800b52c:	a903      	add	r1, sp, #12
 800b52e:	685b      	ldr	r3, [r3, #4]
 800b530:	4798      	blx	r3
 800b532:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b534:	b00d      	add	sp, #52	; 0x34
 800b536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b538:	2000bfcb 	.word	0x2000bfcb
 800b53c:	0801fc22 	.word	0x0801fc22
 800b540:	0801ff01 	.word	0x0801ff01
 800b544:	0801fcce 	.word	0x0801fcce
 800b548:	2000bfc6 	.word	0x2000bfc6

0800b54c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b54c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b550:	b08c      	sub	sp, #48	; 0x30
 800b552:	461e      	mov	r6, r3
 800b554:	466d      	mov	r5, sp
 800b556:	2300      	movs	r3, #0
 800b558:	e885 0006 	stmia.w	r5, {r1, r2}
 800b55c:	9306      	str	r3, [sp, #24]
 800b55e:	6803      	ldr	r3, [r0, #0]
 800b560:	f8bd 7000 	ldrh.w	r7, [sp]
 800b564:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b566:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b56a:	2501      	movs	r5, #1
 800b56c:	9503      	str	r5, [sp, #12]
 800b56e:	4604      	mov	r4, r0
 800b570:	4798      	blx	r3
 800b572:	4642      	mov	r2, r8
 800b574:	4639      	mov	r1, r7
 800b576:	4603      	mov	r3, r0
 800b578:	4620      	mov	r0, r4
 800b57a:	f7ff ff15 	bl	800b3a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b57e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b582:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b586:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b58a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b58e:	4b11      	ldr	r3, [pc, #68]	; (800b5d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b590:	9004      	str	r0, [sp, #16]
 800b592:	881b      	ldrh	r3, [r3, #0]
 800b594:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b598:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b59a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b59e:	9607      	str	r6, [sp, #28]
 800b5a0:	f7ff fb84 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 800b5a4:	6803      	ldr	r3, [r0, #0]
 800b5a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5a8:	4798      	blx	r3
 800b5aa:	23ff      	movs	r3, #255	; 0xff
 800b5ac:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b5b0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b5b4:	6860      	ldr	r0, [r4, #4]
 800b5b6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b5ba:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b5be:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b5c2:	6803      	ldr	r3, [r0, #0]
 800b5c4:	a903      	add	r1, sp, #12
 800b5c6:	685b      	ldr	r3, [r3, #4]
 800b5c8:	4798      	blx	r3
 800b5ca:	4630      	mov	r0, r6
 800b5cc:	b00c      	add	sp, #48	; 0x30
 800b5ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5d2:	bf00      	nop
 800b5d4:	2000bfc6 	.word	0x2000bfc6

0800b5d8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b5d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5da:	b085      	sub	sp, #20
 800b5dc:	ac02      	add	r4, sp, #8
 800b5de:	e884 0006 	stmia.w	r4, {r1, r2}
 800b5e2:	4605      	mov	r5, r0
 800b5e4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b5e8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b5ec:	f7ff fd1e 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5f0:	463a      	mov	r2, r7
 800b5f2:	4603      	mov	r3, r0
 800b5f4:	4631      	mov	r1, r6
 800b5f6:	4628      	mov	r0, r5
 800b5f8:	f7ff fed6 	bl	800b3a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b5fc:	4a05      	ldr	r2, [pc, #20]	; (800b614 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b5fe:	682b      	ldr	r3, [r5, #0]
 800b600:	8812      	ldrh	r2, [r2, #0]
 800b602:	9200      	str	r2, [sp, #0]
 800b604:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b606:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b60a:	4603      	mov	r3, r0
 800b60c:	4628      	mov	r0, r5
 800b60e:	47b0      	blx	r6
 800b610:	b005      	add	sp, #20
 800b612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b614:	2000bfc6 	.word	0x2000bfc6

0800b618 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b618:	b570      	push	{r4, r5, r6, lr}
 800b61a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b61e:	4604      	mov	r4, r0
 800b620:	b19b      	cbz	r3, 800b64a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b622:	2002      	movs	r0, #2
 800b624:	f7f5 fd06 	bl	8001034 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b628:	2300      	movs	r3, #0
 800b62a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b62e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b632:	6823      	ldr	r3, [r4, #0]
 800b634:	4620      	mov	r0, r4
 800b636:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b63a:	f7ff fcf7 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b63e:	462b      	mov	r3, r5
 800b640:	4601      	mov	r1, r0
 800b642:	4620      	mov	r0, r4
 800b644:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b648:	4718      	bx	r3
 800b64a:	bd70      	pop	{r4, r5, r6, pc}

0800b64c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b64c:	b570      	push	{r4, r5, r6, lr}
 800b64e:	4605      	mov	r5, r0
 800b650:	460c      	mov	r4, r1
 800b652:	2003      	movs	r0, #3
 800b654:	b149      	cbz	r1, 800b66a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b656:	f7f5 fca1 	bl	8000f9c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b65a:	6928      	ldr	r0, [r5, #16]
 800b65c:	b168      	cbz	r0, 800b67a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b65e:	6803      	ldr	r3, [r0, #0]
 800b660:	695b      	ldr	r3, [r3, #20]
 800b662:	2101      	movs	r1, #1
 800b664:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b668:	4718      	bx	r3
 800b66a:	f7f5 fcbd 	bl	8000fe8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b66e:	6928      	ldr	r0, [r5, #16]
 800b670:	b118      	cbz	r0, 800b67a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b672:	6803      	ldr	r3, [r0, #0]
 800b674:	4621      	mov	r1, r4
 800b676:	695b      	ldr	r3, [r3, #20]
 800b678:	e7f4      	b.n	800b664 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b67a:	bd70      	pop	{r4, r5, r6, pc}

0800b67c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b67c:	b538      	push	{r3, r4, r5, lr}
 800b67e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b682:	428b      	cmp	r3, r1
 800b684:	4604      	mov	r4, r0
 800b686:	460d      	mov	r5, r1
 800b688:	d006      	beq.n	800b698 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b68a:	6803      	ldr	r3, [r0, #0]
 800b68c:	b929      	cbnz	r1, 800b69a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b68e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b692:	4798      	blx	r3
 800b694:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b698:	bd38      	pop	{r3, r4, r5, pc}
 800b69a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b69e:	e7f8      	b.n	800b692 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b6a0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b6a0:	b510      	push	{r4, lr}
 800b6a2:	4b0d      	ldr	r3, [pc, #52]	; (800b6d8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b6a4:	781b      	ldrb	r3, [r3, #0]
 800b6a6:	4604      	mov	r4, r0
 800b6a8:	b95b      	cbnz	r3, 800b6c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6aa:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b6ae:	2b02      	cmp	r3, #2
 800b6b0:	d007      	beq.n	800b6c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6b2:	6840      	ldr	r0, [r0, #4]
 800b6b4:	f000 f93c 	bl	800b930 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b6b8:	b118      	cbz	r0, 800b6c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6ba:	6862      	ldr	r2, [r4, #4]
 800b6bc:	7a53      	ldrb	r3, [r2, #9]
 800b6be:	2b00      	cmp	r3, #0
 800b6c0:	d0fc      	beq.n	800b6bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b6c2:	f7f5 ff53 	bl	800156c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b6c6:	4620      	mov	r0, r4
 800b6c8:	2100      	movs	r1, #0
 800b6ca:	f7ff ffd7 	bl	800b67c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b6ce:	4620      	mov	r0, r4
 800b6d0:	f7ff fcac 	bl	800b02c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6d4:	bd10      	pop	{r4, pc}
 800b6d6:	bf00      	nop
 800b6d8:	2000bfca 	.word	0x2000bfca

0800b6dc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b6dc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b6e0:	1a13      	subs	r3, r2, r0
 800b6e2:	4258      	negs	r0, r3
 800b6e4:	4158      	adcs	r0, r3
 800b6e6:	4770      	bx	lr

0800b6e8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b6e8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b6ec:	1a9b      	subs	r3, r3, r2
 800b6ee:	2b00      	cmp	r3, #0
 800b6f0:	bfdc      	itt	le
 800b6f2:	6882      	ldrle	r2, [r0, #8]
 800b6f4:	189b      	addle	r3, r3, r2
 800b6f6:	2b01      	cmp	r3, #1
 800b6f8:	bfcc      	ite	gt
 800b6fa:	2000      	movgt	r0, #0
 800b6fc:	2001      	movle	r0, #1
 800b6fe:	4770      	bx	lr

0800b700 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b700:	6902      	ldr	r2, [r0, #16]
 800b702:	6843      	ldr	r3, [r0, #4]
 800b704:	2024      	movs	r0, #36	; 0x24
 800b706:	fb00 3002 	mla	r0, r0, r2, r3
 800b70a:	4770      	bx	lr

0800b70c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b70c:	6803      	ldr	r3, [r0, #0]
 800b70e:	691b      	ldr	r3, [r3, #16]
 800b710:	4718      	bx	r3

0800b712 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b712:	4770      	bx	lr

0800b714 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b714:	4770      	bx	lr

0800b716 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b716:	4770      	bx	lr

0800b718 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b718:	b570      	push	{r4, r5, r6, lr}
 800b71a:	2301      	movs	r3, #1
 800b71c:	7203      	strb	r3, [r0, #8]
 800b71e:	4604      	mov	r4, r0
 800b720:	6840      	ldr	r0, [r0, #4]
 800b722:	6803      	ldr	r3, [r0, #0]
 800b724:	699b      	ldr	r3, [r3, #24]
 800b726:	4798      	blx	r3
 800b728:	6803      	ldr	r3, [r0, #0]
 800b72a:	2b40      	cmp	r3, #64	; 0x40
 800b72c:	4605      	mov	r5, r0
 800b72e:	d039      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b730:	d815      	bhi.n	800b75e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b732:	2b04      	cmp	r3, #4
 800b734:	d022      	beq.n	800b77c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b736:	d808      	bhi.n	800b74a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b738:	2b01      	cmp	r3, #1
 800b73a:	d033      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b73c:	2b02      	cmp	r3, #2
 800b73e:	d108      	bne.n	800b752 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800b740:	6823      	ldr	r3, [r4, #0]
 800b742:	4620      	mov	r0, r4
 800b744:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b746:	4798      	blx	r3
 800b748:	e025      	b.n	800b796 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800b74a:	2b08      	cmp	r3, #8
 800b74c:	d01e      	beq.n	800b78c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800b74e:	2b20      	cmp	r3, #32
 800b750:	d028      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b752:	4b17      	ldr	r3, [pc, #92]	; (800b7b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800b754:	4a17      	ldr	r2, [pc, #92]	; (800b7b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800b756:	4818      	ldr	r0, [pc, #96]	; (800b7b8 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800b758:	2188      	movs	r1, #136	; 0x88
 800b75a:	f011 ff2b 	bl	801d5b4 <__assert_func>
 800b75e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b762:	d01f      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b764:	d804      	bhi.n	800b770 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800b766:	2b80      	cmp	r3, #128	; 0x80
 800b768:	d01c      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b76a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b76e:	e7ef      	b.n	800b750 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800b770:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b774:	d016      	beq.n	800b7a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b776:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b77a:	e7e0      	b.n	800b73e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b77c:	6823      	ldr	r3, [r4, #0]
 800b77e:	7f01      	ldrb	r1, [r0, #28]
 800b780:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b782:	4620      	mov	r0, r4
 800b784:	4798      	blx	r3
 800b786:	6823      	ldr	r3, [r4, #0]
 800b788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b78a:	e006      	b.n	800b79a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b78c:	6823      	ldr	r3, [r4, #0]
 800b78e:	7f01      	ldrb	r1, [r0, #28]
 800b790:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b792:	4620      	mov	r0, r4
 800b794:	4798      	blx	r3
 800b796:	6823      	ldr	r3, [r4, #0]
 800b798:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b79a:	4629      	mov	r1, r5
 800b79c:	4620      	mov	r0, r4
 800b79e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7a2:	4718      	bx	r3
 800b7a4:	6823      	ldr	r3, [r4, #0]
 800b7a6:	4620      	mov	r0, r4
 800b7a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7aa:	4798      	blx	r3
 800b7ac:	e7eb      	b.n	800b786 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b7ae:	bf00      	nop
 800b7b0:	08020166 	.word	0x08020166
 800b7b4:	08020228 	.word	0x08020228
 800b7b8:	0802018b 	.word	0x0802018b

0800b7bc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b7bc:	b570      	push	{r4, r5, r6, lr}
 800b7be:	4604      	mov	r4, r0
 800b7c0:	460e      	mov	r6, r1
 800b7c2:	6860      	ldr	r0, [r4, #4]
 800b7c4:	6803      	ldr	r3, [r0, #0]
 800b7c6:	685b      	ldr	r3, [r3, #4]
 800b7c8:	4798      	blx	r3
 800b7ca:	2800      	cmp	r0, #0
 800b7cc:	d1f9      	bne.n	800b7c2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b7ce:	4d0d      	ldr	r5, [pc, #52]	; (800b804 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b7d0:	6828      	ldr	r0, [r5, #0]
 800b7d2:	6803      	ldr	r3, [r0, #0]
 800b7d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b7d6:	4798      	blx	r3
 800b7d8:	f7f5 fed6 	bl	8001588 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b7dc:	6828      	ldr	r0, [r5, #0]
 800b7de:	2101      	movs	r1, #1
 800b7e0:	f7ff ff4c 	bl	800b67c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b7e4:	6860      	ldr	r0, [r4, #4]
 800b7e6:	6803      	ldr	r3, [r0, #0]
 800b7e8:	4631      	mov	r1, r6
 800b7ea:	689b      	ldr	r3, [r3, #8]
 800b7ec:	4798      	blx	r3
 800b7ee:	6823      	ldr	r3, [r4, #0]
 800b7f0:	4620      	mov	r0, r4
 800b7f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7f4:	4798      	blx	r3
 800b7f6:	6828      	ldr	r0, [r5, #0]
 800b7f8:	6803      	ldr	r3, [r0, #0]
 800b7fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7fe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b800:	4718      	bx	r3
 800b802:	bf00      	nop
 800b804:	2000bfcc 	.word	0x2000bfcc

0800b808 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b808:	b508      	push	{r3, lr}
 800b80a:	f7f5 feaf 	bl	800156c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b80e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b812:	f7f5 beb3 	b.w	800157c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b816 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b816:	b510      	push	{r4, lr}
 800b818:	2114      	movs	r1, #20
 800b81a:	4604      	mov	r4, r0
 800b81c:	f011 f920 	bl	801ca60 <_ZdlPvj>
 800b820:	4620      	mov	r0, r4
 800b822:	bd10      	pop	{r4, pc}

0800b824 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b824:	b510      	push	{r4, lr}
 800b826:	4604      	mov	r4, r0
 800b828:	6840      	ldr	r0, [r0, #4]
 800b82a:	6803      	ldr	r3, [r0, #0]
 800b82c:	681b      	ldr	r3, [r3, #0]
 800b82e:	4798      	blx	r3
 800b830:	b948      	cbnz	r0, 800b846 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b832:	7a63      	ldrb	r3, [r4, #9]
 800b834:	b13b      	cbz	r3, 800b846 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b836:	7a23      	ldrb	r3, [r4, #8]
 800b838:	b92b      	cbnz	r3, 800b846 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b83a:	6823      	ldr	r3, [r4, #0]
 800b83c:	4620      	mov	r0, r4
 800b83e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b840:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b844:	4718      	bx	r3
 800b846:	bd10      	pop	{r4, pc}

0800b848 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b848:	b510      	push	{r4, lr}
 800b84a:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b84e:	1ad2      	subs	r2, r2, r3
 800b850:	2a00      	cmp	r2, #0
 800b852:	bfdc      	itt	le
 800b854:	6884      	ldrle	r4, [r0, #8]
 800b856:	1912      	addle	r2, r2, r4
 800b858:	2a01      	cmp	r2, #1
 800b85a:	dd17      	ble.n	800b88c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800b85c:	6842      	ldr	r2, [r0, #4]
 800b85e:	2424      	movs	r4, #36	; 0x24
 800b860:	fb04 2303 	mla	r3, r4, r3, r2
 800b864:	f101 0220 	add.w	r2, r1, #32
 800b868:	f851 4b04 	ldr.w	r4, [r1], #4
 800b86c:	f843 4b04 	str.w	r4, [r3], #4
 800b870:	4291      	cmp	r1, r2
 800b872:	d1f9      	bne.n	800b868 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b874:	780a      	ldrb	r2, [r1, #0]
 800b876:	701a      	strb	r2, [r3, #0]
 800b878:	68c3      	ldr	r3, [r0, #12]
 800b87a:	6882      	ldr	r2, [r0, #8]
 800b87c:	f3bf 8f5b 	dmb	ish
 800b880:	3301      	adds	r3, #1
 800b882:	429a      	cmp	r2, r3
 800b884:	bfd8      	it	le
 800b886:	1a9b      	suble	r3, r3, r2
 800b888:	60c3      	str	r3, [r0, #12]
 800b88a:	bd10      	pop	{r4, pc}
 800b88c:	4b02      	ldr	r3, [pc, #8]	; (800b898 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800b88e:	4a03      	ldr	r2, [pc, #12]	; (800b89c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b890:	4803      	ldr	r0, [pc, #12]	; (800b8a0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b892:	2136      	movs	r1, #54	; 0x36
 800b894:	f011 fe8e 	bl	801d5b4 <__assert_func>
 800b898:	080201b1 	.word	0x080201b1
 800b89c:	08020258 	.word	0x08020258
 800b8a0:	0802018b 	.word	0x0802018b

0800b8a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b8a4:	b510      	push	{r4, lr}
 800b8a6:	6803      	ldr	r3, [r0, #0]
 800b8a8:	681b      	ldr	r3, [r3, #0]
 800b8aa:	4604      	mov	r4, r0
 800b8ac:	4798      	blx	r3
 800b8ae:	b128      	cbz	r0, 800b8bc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b8b0:	4b07      	ldr	r3, [pc, #28]	; (800b8d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b8b2:	4a08      	ldr	r2, [pc, #32]	; (800b8d4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b8b4:	4808      	ldr	r0, [pc, #32]	; (800b8d8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b8b6:	213c      	movs	r1, #60	; 0x3c
 800b8b8:	f011 fe7c 	bl	801d5b4 <__assert_func>
 800b8bc:	6923      	ldr	r3, [r4, #16]
 800b8be:	68a2      	ldr	r2, [r4, #8]
 800b8c0:	f3bf 8f5b 	dmb	ish
 800b8c4:	3301      	adds	r3, #1
 800b8c6:	429a      	cmp	r2, r3
 800b8c8:	bfd8      	it	le
 800b8ca:	1a9b      	suble	r3, r3, r2
 800b8cc:	6123      	str	r3, [r4, #16]
 800b8ce:	bd10      	pop	{r4, pc}
 800b8d0:	080201d4 	.word	0x080201d4
 800b8d4:	080202a6 	.word	0x080202a6
 800b8d8:	0802018b 	.word	0x0802018b

0800b8dc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b8dc:	b570      	push	{r4, r5, r6, lr}
 800b8de:	4604      	mov	r4, r0
 800b8e0:	6840      	ldr	r0, [r0, #4]
 800b8e2:	6803      	ldr	r3, [r0, #0]
 800b8e4:	681b      	ldr	r3, [r3, #0]
 800b8e6:	4798      	blx	r3
 800b8e8:	4605      	mov	r5, r0
 800b8ea:	b930      	cbnz	r0, 800b8fa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b8ec:	7a23      	ldrb	r3, [r4, #8]
 800b8ee:	b123      	cbz	r3, 800b8fa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b8f0:	6860      	ldr	r0, [r4, #4]
 800b8f2:	6803      	ldr	r3, [r0, #0]
 800b8f4:	695b      	ldr	r3, [r3, #20]
 800b8f6:	4798      	blx	r3
 800b8f8:	7225      	strb	r5, [r4, #8]
 800b8fa:	6860      	ldr	r0, [r4, #4]
 800b8fc:	6803      	ldr	r3, [r0, #0]
 800b8fe:	681b      	ldr	r3, [r3, #0]
 800b900:	4798      	blx	r3
 800b902:	b928      	cbnz	r0, 800b910 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b904:	6823      	ldr	r3, [r4, #0]
 800b906:	4620      	mov	r0, r4
 800b908:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b90a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b90e:	4718      	bx	r3
 800b910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b914:	f7f5 be40 	b.w	8001598 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b918 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b918:	b510      	push	{r4, lr}
 800b91a:	4c04      	ldr	r4, [pc, #16]	; (800b92c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b91c:	6082      	str	r2, [r0, #8]
 800b91e:	2200      	movs	r2, #0
 800b920:	e9c0 4100 	strd	r4, r1, [r0]
 800b924:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b928:	bd10      	pop	{r4, pc}
 800b92a:	bf00      	nop
 800b92c:	0802020c 	.word	0x0802020c

0800b930 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b930:	6840      	ldr	r0, [r0, #4]
 800b932:	6803      	ldr	r3, [r0, #0]
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	4718      	bx	r3

0800b938 <_ZN8touchgfx8TextArea8setWidthEs>:
 800b938:	b530      	push	{r4, r5, lr}
 800b93a:	b085      	sub	sp, #20
 800b93c:	6803      	ldr	r3, [r0, #0]
 800b93e:	8101      	strh	r1, [r0, #8]
 800b940:	466d      	mov	r5, sp
 800b942:	4601      	mov	r1, r0
 800b944:	4604      	mov	r4, r0
 800b946:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b94a:	4628      	mov	r0, r5
 800b94c:	4798      	blx	r3
 800b94e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800b952:	343c      	adds	r4, #60	; 0x3c
 800b954:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800b958:	b005      	add	sp, #20
 800b95a:	bd30      	pop	{r4, r5, pc}

0800b95c <_ZN8touchgfx8TextArea9setHeightEs>:
 800b95c:	b530      	push	{r4, r5, lr}
 800b95e:	b085      	sub	sp, #20
 800b960:	6803      	ldr	r3, [r0, #0]
 800b962:	8141      	strh	r1, [r0, #10]
 800b964:	466d      	mov	r5, sp
 800b966:	4601      	mov	r1, r0
 800b968:	4604      	mov	r4, r0
 800b96a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b96e:	4628      	mov	r0, r5
 800b970:	4798      	blx	r3
 800b972:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800b976:	343c      	adds	r4, #60	; 0x3c
 800b978:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800b97c:	b005      	add	sp, #20
 800b97e:	bd30      	pop	{r4, r5, pc}

0800b980 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800b980:	2200      	movs	r2, #0
 800b982:	8002      	strh	r2, [r0, #0]
 800b984:	8042      	strh	r2, [r0, #2]
 800b986:	8082      	strh	r2, [r0, #4]
 800b988:	80c2      	strh	r2, [r0, #6]
 800b98a:	4770      	bx	lr

0800b98c <_ZN8touchgfx8TextArea8setAlphaEh>:
 800b98c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800b990:	4770      	bx	lr

0800b992 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800b992:	b570      	push	{r4, r5, r6, lr}
 800b994:	6803      	ldr	r3, [r0, #0]
 800b996:	4604      	mov	r4, r0
 800b998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b99a:	4615      	mov	r5, r2
 800b99c:	4798      	blx	r3
 800b99e:	6823      	ldr	r3, [r4, #0]
 800b9a0:	4629      	mov	r1, r5
 800b9a2:	4620      	mov	r0, r4
 800b9a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b9a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9aa:	4718      	bx	r3

0800b9ac <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800b9ac:	2000      	movs	r0, #0
 800b9ae:	4770      	bx	lr

0800b9b0 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800b9b0:	2000      	movs	r0, #0
 800b9b2:	4770      	bx	lr

0800b9b4 <_ZN8touchgfx8TextAreaD1Ev>:
 800b9b4:	4770      	bx	lr
	...

0800b9b8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800b9b8:	b570      	push	{r4, r5, r6, lr}
 800b9ba:	6803      	ldr	r3, [r0, #0]
 800b9bc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b9be:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800b9c0:	4b11      	ldr	r3, [pc, #68]	; (800ba08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800b9c2:	681b      	ldr	r3, [r3, #0]
 800b9c4:	4604      	mov	r4, r0
 800b9c6:	b28d      	uxth	r5, r1
 800b9c8:	b92b      	cbnz	r3, 800b9d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800b9ca:	4b10      	ldr	r3, [pc, #64]	; (800ba0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800b9cc:	4a10      	ldr	r2, [pc, #64]	; (800ba10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b9ce:	21ae      	movs	r1, #174	; 0xae
 800b9d0:	4810      	ldr	r0, [pc, #64]	; (800ba14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800b9d2:	f011 fdef 	bl	801d5b4 <__assert_func>
 800b9d6:	4910      	ldr	r1, [pc, #64]	; (800ba18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800b9d8:	8809      	ldrh	r1, [r1, #0]
 800b9da:	4291      	cmp	r1, r2
 800b9dc:	d803      	bhi.n	800b9e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800b9de:	4b0f      	ldr	r3, [pc, #60]	; (800ba1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800b9e0:	4a0b      	ldr	r2, [pc, #44]	; (800ba10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b9e2:	21af      	movs	r1, #175	; 0xaf
 800b9e4:	e7f4      	b.n	800b9d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800b9e6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b9ea:	4b0d      	ldr	r3, [pc, #52]	; (800ba20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800b9ec:	681b      	ldr	r3, [r3, #0]
 800b9ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b9f2:	6803      	ldr	r3, [r0, #0]
 800b9f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9f6:	4798      	blx	r3
 800b9f8:	1a29      	subs	r1, r5, r0
 800b9fa:	4633      	mov	r3, r6
 800b9fc:	4620      	mov	r0, r4
 800b9fe:	b209      	sxth	r1, r1
 800ba00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba04:	4718      	bx	r3
 800ba06:	bf00      	nop
 800ba08:	2000c01c 	.word	0x2000c01c
 800ba0c:	080202d6 	.word	0x080202d6
 800ba10:	08020410 	.word	0x08020410
 800ba14:	08020318 	.word	0x08020318
 800ba18:	2000c020 	.word	0x2000c020
 800ba1c:	08020341 	.word	0x08020341
 800ba20:	2000c024 	.word	0x2000c024

0800ba24 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ba24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ba28:	4b1a      	ldr	r3, [pc, #104]	; (800ba94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ba2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ba2c:	881b      	ldrh	r3, [r3, #0]
 800ba2e:	428b      	cmp	r3, r1
 800ba30:	4604      	mov	r4, r0
 800ba32:	d92d      	bls.n	800ba90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800ba34:	4b18      	ldr	r3, [pc, #96]	; (800ba98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800ba36:	681b      	ldr	r3, [r3, #0]
 800ba38:	b92b      	cbnz	r3, 800ba46 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800ba3a:	4b18      	ldr	r3, [pc, #96]	; (800ba9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800ba3c:	4a18      	ldr	r2, [pc, #96]	; (800baa0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800ba3e:	4819      	ldr	r0, [pc, #100]	; (800baa4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800ba40:	21ae      	movs	r1, #174	; 0xae
 800ba42:	f011 fdb7 	bl	801d5b4 <__assert_func>
 800ba46:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ba4a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ba4e:	4b16      	ldr	r3, [pc, #88]	; (800baa8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800ba50:	7855      	ldrb	r5, [r2, #1]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ba58:	6833      	ldr	r3, [r6, #0]
 800ba5a:	69df      	ldr	r7, [r3, #28]
 800ba5c:	4b13      	ldr	r3, [pc, #76]	; (800baac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800ba5e:	6818      	ldr	r0, [r3, #0]
 800ba60:	f7f7 fc9c 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800ba64:	6823      	ldr	r3, [r4, #0]
 800ba66:	4680      	mov	r8, r0
 800ba68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ba6a:	4620      	mov	r0, r4
 800ba6c:	4798      	blx	r3
 800ba6e:	6823      	ldr	r3, [r4, #0]
 800ba70:	4681      	mov	r9, r0
 800ba72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ba76:	4620      	mov	r0, r4
 800ba78:	4798      	blx	r3
 800ba7a:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ba7e:	9000      	str	r0, [sp, #0]
 800ba80:	464b      	mov	r3, r9
 800ba82:	4642      	mov	r2, r8
 800ba84:	4629      	mov	r1, r5
 800ba86:	4630      	mov	r0, r6
 800ba88:	47b8      	blx	r7
 800ba8a:	b003      	add	sp, #12
 800ba8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ba90:	2000      	movs	r0, #0
 800ba92:	e7fa      	b.n	800ba8a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800ba94:	2000c020 	.word	0x2000c020
 800ba98:	2000c01c 	.word	0x2000c01c
 800ba9c:	080202d6 	.word	0x080202d6
 800baa0:	08020410 	.word	0x08020410
 800baa4:	08020318 	.word	0x08020318
 800baa8:	2000c024 	.word	0x2000c024
 800baac:	2000c028 	.word	0x2000c028

0800bab0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800bab0:	b40e      	push	{r1, r2, r3}
 800bab2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bab6:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800bba8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800baba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800babc:	f8b9 3000 	ldrh.w	r3, [r9]
 800bac0:	4293      	cmp	r3, r2
 800bac2:	b09c      	sub	sp, #112	; 0x70
 800bac4:	4604      	mov	r4, r0
 800bac6:	d965      	bls.n	800bb94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800bac8:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800bbac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800bacc:	ab26      	add	r3, sp, #152	; 0x98
 800bace:	9302      	str	r3, [sp, #8]
 800bad0:	f8da 3000 	ldr.w	r3, [sl]
 800bad4:	b92b      	cbnz	r3, 800bae2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800bad6:	4b30      	ldr	r3, [pc, #192]	; (800bb98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800bad8:	4a30      	ldr	r2, [pc, #192]	; (800bb9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800bada:	21ae      	movs	r1, #174	; 0xae
 800badc:	4830      	ldr	r0, [pc, #192]	; (800bba0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800bade:	f011 fd69 	bl	801d5b4 <__assert_func>
 800bae2:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800bbb0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800bae6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800baea:	f8d8 3000 	ldr.w	r3, [r8]
 800baee:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800baf2:	682b      	ldr	r3, [r5, #0]
 800baf4:	4628      	mov	r0, r5
 800baf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800baf8:	4798      	blx	r3
 800bafa:	4606      	mov	r6, r0
 800bafc:	b207      	sxth	r7, r0
 800bafe:	a803      	add	r0, sp, #12
 800bb00:	f003 fdcc 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800bb04:	682b      	ldr	r3, [r5, #0]
 800bb06:	4628      	mov	r0, r5
 800bb08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bb0a:	4798      	blx	r3
 800bb0c:	682b      	ldr	r3, [r5, #0]
 800bb0e:	4683      	mov	fp, r0
 800bb10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bb12:	4628      	mov	r0, r5
 800bb14:	4798      	blx	r3
 800bb16:	465b      	mov	r3, fp
 800bb18:	9000      	str	r0, [sp, #0]
 800bb1a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800bb1c:	9a02      	ldr	r2, [sp, #8]
 800bb1e:	a803      	add	r0, sp, #12
 800bb20:	f003 fe28 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bb24:	f8da 3000 	ldr.w	r3, [sl]
 800bb28:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800bb2c:	2b00      	cmp	r3, #0
 800bb2e:	d0d2      	beq.n	800bad6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800bb30:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800bb32:	f8b9 0000 	ldrh.w	r0, [r9]
 800bb36:	4290      	cmp	r0, r2
 800bb38:	d926      	bls.n	800bb88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800bb3a:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800bb3e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800bb42:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800bb46:	786a      	ldrb	r2, [r5, #1]
 800bb48:	8925      	ldrh	r5, [r4, #8]
 800bb4a:	f8d8 3000 	ldr.w	r3, [r8]
 800bb4e:	eba5 050c 	sub.w	r5, r5, ip
 800bb52:	b22d      	sxth	r5, r5
 800bb54:	9500      	str	r5, [sp, #0]
 800bb56:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bb5a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800bb5e:	a803      	add	r0, sp, #12
 800bb60:	f001 fcb9 	bl	800d4d6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800bb64:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800bb68:	18b9      	adds	r1, r7, r2
 800bb6a:	2900      	cmp	r1, #0
 800bb6c:	b203      	sxth	r3, r0
 800bb6e:	dd0f      	ble.n	800bb90 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800bb70:	3b01      	subs	r3, #1
 800bb72:	fb13 f302 	smulbb	r3, r3, r2
 800bb76:	fb16 3300 	smlabb	r3, r6, r0, r3
 800bb7a:	b21f      	sxth	r7, r3
 800bb7c:	4638      	mov	r0, r7
 800bb7e:	b01c      	add	sp, #112	; 0x70
 800bb80:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb84:	b003      	add	sp, #12
 800bb86:	4770      	bx	lr
 800bb88:	4b06      	ldr	r3, [pc, #24]	; (800bba4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800bb8a:	4a04      	ldr	r2, [pc, #16]	; (800bb9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800bb8c:	21af      	movs	r1, #175	; 0xaf
 800bb8e:	e7a5      	b.n	800badc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800bb90:	2b00      	cmp	r3, #0
 800bb92:	dcf3      	bgt.n	800bb7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800bb94:	2700      	movs	r7, #0
 800bb96:	e7f1      	b.n	800bb7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800bb98:	080202d6 	.word	0x080202d6
 800bb9c:	08020410 	.word	0x08020410
 800bba0:	08020318 	.word	0x08020318
 800bba4:	08020341 	.word	0x08020341
 800bba8:	2000c020 	.word	0x2000c020
 800bbac:	2000c01c 	.word	0x2000c01c
 800bbb0:	2000c024 	.word	0x2000c024

0800bbb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800bbb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbb8:	4b6d      	ldr	r3, [pc, #436]	; (800bd70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800bbba:	460c      	mov	r4, r1
 800bbbc:	881a      	ldrh	r2, [r3, #0]
 800bbbe:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800bbc0:	b0b9      	sub	sp, #228	; 0xe4
 800bbc2:	428a      	cmp	r2, r1
 800bbc4:	4681      	mov	r9, r0
 800bbc6:	9302      	str	r3, [sp, #8]
 800bbc8:	d809      	bhi.n	800bbde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800bbca:	2300      	movs	r3, #0
 800bbcc:	f04f 32ff 	mov.w	r2, #4294967295
 800bbd0:	e9c0 3200 	strd	r3, r2, [r0]
 800bbd4:	6083      	str	r3, [r0, #8]
 800bbd6:	4648      	mov	r0, r9
 800bbd8:	b039      	add	sp, #228	; 0xe4
 800bbda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbde:	4a65      	ldr	r2, [pc, #404]	; (800bd74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800bbe0:	6813      	ldr	r3, [r2, #0]
 800bbe2:	4692      	mov	sl, r2
 800bbe4:	b92b      	cbnz	r3, 800bbf2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800bbe6:	4b64      	ldr	r3, [pc, #400]	; (800bd78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800bbe8:	4a64      	ldr	r2, [pc, #400]	; (800bd7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800bbea:	21ae      	movs	r1, #174	; 0xae
 800bbec:	4864      	ldr	r0, [pc, #400]	; (800bd80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800bbee:	f011 fce1 	bl	801d5b4 <__assert_func>
 800bbf2:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800bbf6:	4b63      	ldr	r3, [pc, #396]	; (800bd84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800bbf8:	f8df b190 	ldr.w	fp, [pc, #400]	; 800bd8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800bbfc:	681b      	ldr	r3, [r3, #0]
 800bbfe:	f8db 0000 	ldr.w	r0, [fp]
 800bc02:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800bc06:	f7f7 fbc9 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800bc0a:	682b      	ldr	r3, [r5, #0]
 800bc0c:	4680      	mov	r8, r0
 800bc0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc10:	4628      	mov	r0, r5
 800bc12:	4798      	blx	r3
 800bc14:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800bc16:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800bc1a:	f8cd b00c 	str.w	fp, [sp, #12]
 800bc1e:	4406      	add	r6, r0
 800bc20:	b2b6      	uxth	r6, r6
 800bc22:	2f00      	cmp	r7, #0
 800bc24:	f040 80b4 	bne.w	800bd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 800bc28:	a806      	add	r0, sp, #24
 800bc2a:	f003 fd37 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800bc2e:	682b      	ldr	r3, [r5, #0]
 800bc30:	4628      	mov	r0, r5
 800bc32:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bc34:	4798      	blx	r3
 800bc36:	682b      	ldr	r3, [r5, #0]
 800bc38:	4683      	mov	fp, r0
 800bc3a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bc3c:	4628      	mov	r0, r5
 800bc3e:	4798      	blx	r3
 800bc40:	6822      	ldr	r2, [r4, #0]
 800bc42:	9005      	str	r0, [sp, #20]
 800bc44:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800bc46:	4620      	mov	r0, r4
 800bc48:	4790      	blx	r2
 800bc4a:	6821      	ldr	r1, [r4, #0]
 800bc4c:	9004      	str	r0, [sp, #16]
 800bc4e:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800bc52:	4620      	mov	r0, r4
 800bc54:	4788      	blx	r1
 800bc56:	9a04      	ldr	r2, [sp, #16]
 800bc58:	9001      	str	r0, [sp, #4]
 800bc5a:	9200      	str	r2, [sp, #0]
 800bc5c:	4641      	mov	r1, r8
 800bc5e:	9b05      	ldr	r3, [sp, #20]
 800bc60:	465a      	mov	r2, fp
 800bc62:	a806      	add	r0, sp, #24
 800bc64:	f003 fd9b 	bl	800f79e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bc68:	46b8      	mov	r8, r7
 800bc6a:	f8da 3000 	ldr.w	r3, [sl]
 800bc6e:	2b00      	cmp	r3, #0
 800bc70:	d0b9      	beq.n	800bbe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800bc72:	9902      	ldr	r1, [sp, #8]
 800bc74:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800bc76:	8809      	ldrh	r1, [r1, #0]
 800bc78:	4291      	cmp	r1, r2
 800bc7a:	d803      	bhi.n	800bc84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800bc7c:	4b42      	ldr	r3, [pc, #264]	; (800bd88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 800bc7e:	4a3f      	ldr	r2, [pc, #252]	; (800bd7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800bc80:	21af      	movs	r1, #175	; 0xaf
 800bc82:	e7b3      	b.n	800bbec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800bc84:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bc88:	4629      	mov	r1, r5
 800bc8a:	785b      	ldrb	r3, [r3, #1]
 800bc8c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800bc90:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bc94:	a806      	add	r0, sp, #24
 800bc96:	f001 f973 	bl	800cf80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800bc9a:	4580      	cmp	r8, r0
 800bc9c:	bfb8      	it	lt
 800bc9e:	fa0f f880 	sxthlt.w	r8, r0
 800bca2:	3701      	adds	r7, #1
 800bca4:	a806      	add	r0, sp, #24
 800bca6:	b2bf      	uxth	r7, r7
 800bca8:	f003 fd20 	bl	800f6ec <_ZN8touchgfx12TextProvider11endOfStringEv>
 800bcac:	2800      	cmp	r0, #0
 800bcae:	d0dc      	beq.n	800bc6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800bcb0:	fb16 f607 	smulbb	r6, r6, r7
 800bcb4:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800bcb6:	1bf6      	subs	r6, r6, r7
 800bcb8:	b2b6      	uxth	r6, r6
 800bcba:	fa0f fb86 	sxth.w	fp, r6
 800bcbe:	f1bb 0f00 	cmp.w	fp, #0
 800bcc2:	dd06      	ble.n	800bcd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800bcc4:	682b      	ldr	r3, [r5, #0]
 800bcc6:	4628      	mov	r0, r5
 800bcc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bcca:	4798      	blx	r3
 800bccc:	4430      	add	r0, r6
 800bcce:	fa0f fb80 	sxth.w	fp, r0
 800bcd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bcd6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bcda:	6823      	ldr	r3, [r4, #0]
 800bcdc:	bf08      	it	eq
 800bcde:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800bce2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bce4:	bf18      	it	ne
 800bce6:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800bcea:	4620      	mov	r0, r4
 800bcec:	4798      	blx	r3
 800bcee:	2801      	cmp	r0, #1
 800bcf0:	fa1f f288 	uxth.w	r2, r8
 800bcf4:	f000 80f7 	beq.w	800bee6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800bcf8:	2802      	cmp	r0, #2
 800bcfa:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800bcfe:	f000 80f9 	beq.w	800bef4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 800bd02:	7a29      	ldrb	r1, [r5, #8]
 800bd04:	7a68      	ldrb	r0, [r5, #9]
 800bd06:	b21b      	sxth	r3, r3
 800bd08:	1a5b      	subs	r3, r3, r1
 800bd0a:	4401      	add	r1, r0
 800bd0c:	440a      	add	r2, r1
 800bd0e:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800bd12:	b29b      	uxth	r3, r3
 800bd14:	b292      	uxth	r2, r2
 800bd16:	2902      	cmp	r1, #2
 800bd18:	b21e      	sxth	r6, r3
 800bd1a:	b217      	sxth	r7, r2
 800bd1c:	f000 80ed 	beq.w	800befa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 800bd20:	2903      	cmp	r1, #3
 800bd22:	f000 80f3 	beq.w	800bf0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 800bd26:	2901      	cmp	r1, #1
 800bd28:	f040 80f9 	bne.w	800bf1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 800bd2c:	8923      	ldrh	r3, [r4, #8]
 800bd2e:	463a      	mov	r2, r7
 800bd30:	eba3 030b 	sub.w	r3, r3, fp
 800bd34:	465f      	mov	r7, fp
 800bd36:	4635      	mov	r5, r6
 800bd38:	4693      	mov	fp, r2
 800bd3a:	b21e      	sxth	r6, r3
 800bd3c:	f8da 3000 	ldr.w	r3, [sl]
 800bd40:	2b00      	cmp	r3, #0
 800bd42:	f43f af50 	beq.w	800bbe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800bd46:	9b02      	ldr	r3, [sp, #8]
 800bd48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bd4a:	881b      	ldrh	r3, [r3, #0]
 800bd4c:	428b      	cmp	r3, r1
 800bd4e:	d995      	bls.n	800bc7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800bd50:	9b03      	ldr	r3, [sp, #12]
 800bd52:	6818      	ldr	r0, [r3, #0]
 800bd54:	f7f7 fb22 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800bd58:	f8a9 6000 	strh.w	r6, [r9]
 800bd5c:	f8a9 5002 	strh.w	r5, [r9, #2]
 800bd60:	f8a9 7004 	strh.w	r7, [r9, #4]
 800bd64:	f8a9 b006 	strh.w	fp, [r9, #6]
 800bd68:	f8c9 0008 	str.w	r0, [r9, #8]
 800bd6c:	e733      	b.n	800bbd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800bd6e:	bf00      	nop
 800bd70:	2000c020 	.word	0x2000c020
 800bd74:	2000c01c 	.word	0x2000c01c
 800bd78:	080202d6 	.word	0x080202d6
 800bd7c:	08020410 	.word	0x08020410
 800bd80:	08020318 	.word	0x08020318
 800bd84:	2000c024 	.word	0x2000c024
 800bd88:	08020341 	.word	0x08020341
 800bd8c:	2000c028 	.word	0x2000c028
 800bd90:	af1f      	add	r7, sp, #124	; 0x7c
 800bd92:	4638      	mov	r0, r7
 800bd94:	f003 fc82 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800bd98:	682b      	ldr	r3, [r5, #0]
 800bd9a:	4628      	mov	r0, r5
 800bd9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd9e:	4798      	blx	r3
 800bda0:	682b      	ldr	r3, [r5, #0]
 800bda2:	4683      	mov	fp, r0
 800bda4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bda6:	4628      	mov	r0, r5
 800bda8:	4798      	blx	r3
 800bdaa:	6822      	ldr	r2, [r4, #0]
 800bdac:	9005      	str	r0, [sp, #20]
 800bdae:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800bdb0:	4620      	mov	r0, r4
 800bdb2:	4790      	blx	r2
 800bdb4:	6821      	ldr	r1, [r4, #0]
 800bdb6:	9004      	str	r0, [sp, #16]
 800bdb8:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800bdbc:	4620      	mov	r0, r4
 800bdbe:	4788      	blx	r1
 800bdc0:	9a04      	ldr	r2, [sp, #16]
 800bdc2:	9001      	str	r0, [sp, #4]
 800bdc4:	9200      	str	r2, [sp, #0]
 800bdc6:	9b05      	ldr	r3, [sp, #20]
 800bdc8:	465a      	mov	r2, fp
 800bdca:	4641      	mov	r1, r8
 800bdcc:	4638      	mov	r0, r7
 800bdce:	f003 fce6 	bl	800f79e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bdd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bdd6:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800bdda:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800bdde:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bde2:	bf0a      	itet	eq
 800bde4:	465b      	moveq	r3, fp
 800bde6:	4613      	movne	r3, r2
 800bde8:	4693      	moveq	fp, r2
 800bdea:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800bdee:	1a9b      	subs	r3, r3, r2
 800bdf0:	b29a      	uxth	r2, r3
 800bdf2:	f8da 3000 	ldr.w	r3, [sl]
 800bdf6:	2b00      	cmp	r3, #0
 800bdf8:	f43f aef5 	beq.w	800bbe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800bdfc:	9802      	ldr	r0, [sp, #8]
 800bdfe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800be00:	8800      	ldrh	r0, [r0, #0]
 800be02:	4288      	cmp	r0, r1
 800be04:	f67f af3a 	bls.w	800bc7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800be08:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800be0c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800be10:	7859      	ldrb	r1, [r3, #1]
 800be12:	9707      	str	r7, [sp, #28]
 800be14:	2300      	movs	r3, #0
 800be16:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800be1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800be1e:	f88d 1020 	strb.w	r1, [sp, #32]
 800be22:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800be26:	9509      	str	r5, [sp, #36]	; 0x24
 800be28:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800be2c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800be30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800be34:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800be38:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800be3c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800be40:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800be44:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800be48:	b350      	cbz	r0, 800bea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800be4a:	682b      	ldr	r3, [r5, #0]
 800be4c:	4628      	mov	r0, r5
 800be4e:	695b      	ldr	r3, [r3, #20]
 800be50:	4798      	blx	r3
 800be52:	4680      	mov	r8, r0
 800be54:	b320      	cbz	r0, 800bea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800be56:	9809      	ldr	r0, [sp, #36]	; 0x24
 800be58:	6803      	ldr	r3, [r0, #0]
 800be5a:	4641      	mov	r1, r8
 800be5c:	68db      	ldr	r3, [r3, #12]
 800be5e:	4798      	blx	r3
 800be60:	4607      	mov	r7, r0
 800be62:	b1e8      	cbz	r0, 800bea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800be64:	7b43      	ldrb	r3, [r0, #13]
 800be66:	7a82      	ldrb	r2, [r0, #10]
 800be68:	005b      	lsls	r3, r3, #1
 800be6a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800be6e:	4313      	orrs	r3, r2
 800be70:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800be74:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800be78:	2b04      	cmp	r3, #4
 800be7a:	d111      	bne.n	800bea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800be7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800be7e:	6803      	ldr	r3, [r0, #0]
 800be80:	463a      	mov	r2, r7
 800be82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be84:	4641      	mov	r1, r8
 800be86:	4798      	blx	r3
 800be88:	7b7b      	ldrb	r3, [r7, #13]
 800be8a:	005b      	lsls	r3, r3, #1
 800be8c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800be90:	7abb      	ldrb	r3, [r7, #10]
 800be92:	4313      	orrs	r3, r2
 800be94:	4418      	add	r0, r3
 800be96:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800be9a:	4418      	add	r0, r3
 800be9c:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800bea0:	b233      	sxth	r3, r6
 800bea2:	2700      	movs	r7, #0
 800bea4:	005a      	lsls	r2, r3, #1
 800bea6:	46b8      	mov	r8, r7
 800bea8:	455a      	cmp	r2, fp
 800beaa:	bfd4      	ite	le
 800beac:	2100      	movle	r1, #0
 800beae:	2101      	movgt	r1, #1
 800beb0:	a806      	add	r0, sp, #24
 800beb2:	9305      	str	r3, [sp, #20]
 800beb4:	9204      	str	r2, [sp, #16]
 800beb6:	f001 fa3f 	bl	800d338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800beba:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800bebe:	4588      	cmp	r8, r1
 800bec0:	bfb8      	it	lt
 800bec2:	fa0f f881 	sxthlt.w	r8, r1
 800bec6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800beca:	3701      	adds	r7, #1
 800becc:	ebab 0b06 	sub.w	fp, fp, r6
 800bed0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800bed4:	b2bf      	uxth	r7, r7
 800bed6:	fa0f fb8b 	sxth.w	fp, fp
 800beda:	2900      	cmp	r1, #0
 800bedc:	f43f aee8 	beq.w	800bcb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bee0:	455b      	cmp	r3, fp
 800bee2:	dbe1      	blt.n	800bea8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 800bee4:	e6e4      	b.n	800bcb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bee6:	eba6 0308 	sub.w	r3, r6, r8
 800beea:	f04f 0802 	mov.w	r8, #2
 800beee:	fb93 f3f8 	sdiv	r3, r3, r8
 800bef2:	e706      	b.n	800bd02 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800bef4:	4413      	add	r3, r2
 800bef6:	1af3      	subs	r3, r6, r3
 800bef8:	e703      	b.n	800bd02 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800befa:	8926      	ldrh	r6, [r4, #8]
 800befc:	8965      	ldrh	r5, [r4, #10]
 800befe:	1ab2      	subs	r2, r6, r2
 800bf00:	1ad3      	subs	r3, r2, r3
 800bf02:	eba5 050b 	sub.w	r5, r5, fp
 800bf06:	b21e      	sxth	r6, r3
 800bf08:	b22d      	sxth	r5, r5
 800bf0a:	e717      	b.n	800bd3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bf0c:	8965      	ldrh	r5, [r4, #10]
 800bf0e:	1aaa      	subs	r2, r5, r2
 800bf10:	1ad3      	subs	r3, r2, r3
 800bf12:	b21d      	sxth	r5, r3
 800bf14:	463b      	mov	r3, r7
 800bf16:	2600      	movs	r6, #0
 800bf18:	465f      	mov	r7, fp
 800bf1a:	469b      	mov	fp, r3
 800bf1c:	e70e      	b.n	800bd3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bf1e:	2500      	movs	r5, #0
 800bf20:	e70c      	b.n	800bd3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bf22:	bf00      	nop

0800bf24 <_ZN8touchgfx8TextAreaD0Ev>:
 800bf24:	b510      	push	{r4, lr}
 800bf26:	2148      	movs	r1, #72	; 0x48
 800bf28:	4604      	mov	r4, r0
 800bf2a:	f010 fd99 	bl	801ca60 <_ZdlPvj>
 800bf2e:	4620      	mov	r0, r4
 800bf30:	bd10      	pop	{r4, pc}
	...

0800bf34 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800bf34:	b508      	push	{r3, lr}
 800bf36:	4b0b      	ldr	r3, [pc, #44]	; (800bf64 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800bf38:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bf3a:	881b      	ldrh	r3, [r3, #0]
 800bf3c:	4293      	cmp	r3, r2
 800bf3e:	d90e      	bls.n	800bf5e <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800bf40:	4b09      	ldr	r3, [pc, #36]	; (800bf68 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	b92b      	cbnz	r3, 800bf52 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800bf46:	4b09      	ldr	r3, [pc, #36]	; (800bf6c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800bf48:	4a09      	ldr	r2, [pc, #36]	; (800bf70 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800bf4a:	480a      	ldr	r0, [pc, #40]	; (800bf74 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800bf4c:	21ae      	movs	r1, #174	; 0xae
 800bf4e:	f011 fb31 	bl	801d5b4 <__assert_func>
 800bf52:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bf56:	7858      	ldrb	r0, [r3, #1]
 800bf58:	f000 0003 	and.w	r0, r0, #3
 800bf5c:	bd08      	pop	{r3, pc}
 800bf5e:	2000      	movs	r0, #0
 800bf60:	e7fc      	b.n	800bf5c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800bf62:	bf00      	nop
 800bf64:	2000c020 	.word	0x2000c020
 800bf68:	2000c01c 	.word	0x2000c01c
 800bf6c:	080202d6 	.word	0x080202d6
 800bf70:	08020410 	.word	0x08020410
 800bf74:	08020318 	.word	0x08020318

0800bf78 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800bf78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf7c:	4b15      	ldr	r3, [pc, #84]	; (800bfd4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800bf7e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bf80:	881b      	ldrh	r3, [r3, #0]
 800bf82:	428b      	cmp	r3, r1
 800bf84:	4604      	mov	r4, r0
 800bf86:	d921      	bls.n	800bfcc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800bf88:	6803      	ldr	r3, [r0, #0]
 800bf8a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800bf8c:	4b12      	ldr	r3, [pc, #72]	; (800bfd8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800bf8e:	681b      	ldr	r3, [r3, #0]
 800bf90:	b92b      	cbnz	r3, 800bf9e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800bf92:	4b12      	ldr	r3, [pc, #72]	; (800bfdc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800bf94:	4a12      	ldr	r2, [pc, #72]	; (800bfe0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800bf96:	4813      	ldr	r0, [pc, #76]	; (800bfe4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800bf98:	21ae      	movs	r1, #174	; 0xae
 800bf9a:	f011 fb0b 	bl	801d5b4 <__assert_func>
 800bf9e:	4b12      	ldr	r3, [pc, #72]	; (800bfe8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800bfa0:	6818      	ldr	r0, [r3, #0]
 800bfa2:	f7f7 f9fb 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800bfa6:	6823      	ldr	r3, [r4, #0]
 800bfa8:	4606      	mov	r6, r0
 800bfaa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bfac:	4620      	mov	r0, r4
 800bfae:	4798      	blx	r3
 800bfb0:	6823      	ldr	r3, [r4, #0]
 800bfb2:	4607      	mov	r7, r0
 800bfb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bfb8:	4620      	mov	r0, r4
 800bfba:	4798      	blx	r3
 800bfbc:	463a      	mov	r2, r7
 800bfbe:	4603      	mov	r3, r0
 800bfc0:	4631      	mov	r1, r6
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	46ac      	mov	ip, r5
 800bfc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bfca:	4760      	bx	ip
 800bfcc:	2000      	movs	r0, #0
 800bfce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfd2:	bf00      	nop
 800bfd4:	2000c020 	.word	0x2000c020
 800bfd8:	2000c01c 	.word	0x2000c01c
 800bfdc:	080202d6 	.word	0x080202d6
 800bfe0:	08020410 	.word	0x08020410
 800bfe4:	08020318 	.word	0x08020318
 800bfe8:	2000c028 	.word	0x2000c028

0800bfec <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800bfec:	b513      	push	{r0, r1, r4, lr}
 800bfee:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800bff2:	4604      	mov	r4, r0
 800bff4:	b343      	cbz	r3, 800c048 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800bff6:	4b1b      	ldr	r3, [pc, #108]	; (800c064 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 800bff8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bffa:	881b      	ldrh	r3, [r3, #0]
 800bffc:	428b      	cmp	r3, r1
 800bffe:	d923      	bls.n	800c048 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800c000:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c004:	2b00      	cmp	r3, #0
 800c006:	dd1f      	ble.n	800c048 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800c008:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c00c:	2b00      	cmp	r3, #0
 800c00e:	dd1b      	ble.n	800c048 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800c010:	4b15      	ldr	r3, [pc, #84]	; (800c068 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 800c012:	681b      	ldr	r3, [r3, #0]
 800c014:	b92b      	cbnz	r3, 800c022 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 800c016:	4b15      	ldr	r3, [pc, #84]	; (800c06c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 800c018:	4a15      	ldr	r2, [pc, #84]	; (800c070 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 800c01a:	4816      	ldr	r0, [pc, #88]	; (800c074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 800c01c:	21ae      	movs	r1, #174	; 0xae
 800c01e:	f011 fac9 	bl	801d5b4 <__assert_func>
 800c022:	4b15      	ldr	r3, [pc, #84]	; (800c078 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 800c024:	6818      	ldr	r0, [r3, #0]
 800c026:	f7f7 f9b9 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800c02a:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800c02e:	6822      	ldr	r2, [r4, #0]
 800c030:	2b00      	cmp	r3, #0
 800c032:	db06      	blt.n	800c042 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800c034:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c038:	2b00      	cmp	r3, #0
 800c03a:	db02      	blt.n	800c042 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800c03c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c03e:	4298      	cmp	r0, r3
 800c040:	d004      	beq.n	800c04c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 800c042:	6953      	ldr	r3, [r2, #20]
 800c044:	4620      	mov	r0, r4
 800c046:	4798      	blx	r3
 800c048:	b002      	add	sp, #8
 800c04a:	bd10      	pop	{r4, pc}
 800c04c:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800c050:	c903      	ldmia	r1, {r0, r1}
 800c052:	466b      	mov	r3, sp
 800c054:	e883 0003 	stmia.w	r3, {r0, r1}
 800c058:	6912      	ldr	r2, [r2, #16]
 800c05a:	4619      	mov	r1, r3
 800c05c:	4620      	mov	r0, r4
 800c05e:	4790      	blx	r2
 800c060:	e7f2      	b.n	800c048 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800c062:	bf00      	nop
 800c064:	2000c020 	.word	0x2000c020
 800c068:	2000c01c 	.word	0x2000c01c
 800c06c:	080202d6 	.word	0x080202d6
 800c070:	08020410 	.word	0x08020410
 800c074:	08020318 	.word	0x08020318
 800c078:	2000c028 	.word	0x2000c028

0800c07c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800c07c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c080:	4d56      	ldr	r5, [pc, #344]	; (800c1dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 800c082:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c084:	882b      	ldrh	r3, [r5, #0]
 800c086:	4293      	cmp	r3, r2
 800c088:	b08e      	sub	sp, #56	; 0x38
 800c08a:	4604      	mov	r4, r0
 800c08c:	f240 80a3 	bls.w	800c1d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800c090:	6808      	ldr	r0, [r1, #0]
 800c092:	4e53      	ldr	r6, [pc, #332]	; (800c1e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 800c094:	6849      	ldr	r1, [r1, #4]
 800c096:	ab05      	add	r3, sp, #20
 800c098:	c303      	stmia	r3!, {r0, r1}
 800c09a:	6833      	ldr	r3, [r6, #0]
 800c09c:	b92b      	cbnz	r3, 800c0aa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800c09e:	4b51      	ldr	r3, [pc, #324]	; (800c1e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 800c0a0:	4a51      	ldr	r2, [pc, #324]	; (800c1e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800c0a2:	21ae      	movs	r1, #174	; 0xae
 800c0a4:	4851      	ldr	r0, [pc, #324]	; (800c1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 800c0a6:	f011 fa85 	bl	801d5b4 <__assert_func>
 800c0aa:	4f51      	ldr	r7, [pc, #324]	; (800c1f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 800c0ac:	4611      	mov	r1, r2
 800c0ae:	6838      	ldr	r0, [r7, #0]
 800c0b0:	f7f7 f974 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800c0b4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800c0b8:	2b00      	cmp	r3, #0
 800c0ba:	db11      	blt.n	800c0e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800c0bc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c0c0:	2b00      	cmp	r3, #0
 800c0c2:	db0d      	blt.n	800c0e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800c0c4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c0c6:	4298      	cmp	r0, r3
 800c0c8:	d10a      	bne.n	800c0e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800c0ca:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800c0ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c0d2:	ab09      	add	r3, sp, #36	; 0x24
 800c0d4:	e883 0003 	stmia.w	r3, {r0, r1}
 800c0d8:	4619      	mov	r1, r3
 800c0da:	a805      	add	r0, sp, #20
 800c0dc:	f7fe fb18 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800c0e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c0e4:	2b00      	cmp	r3, #0
 800c0e6:	dd76      	ble.n	800c1d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800c0e8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c0ec:	2b00      	cmp	r3, #0
 800c0ee:	dd72      	ble.n	800c1d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800c0f0:	6833      	ldr	r3, [r6, #0]
 800c0f2:	2b00      	cmp	r3, #0
 800c0f4:	d0d3      	beq.n	800c09e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800c0f6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c0f8:	8829      	ldrh	r1, [r5, #0]
 800c0fa:	4291      	cmp	r1, r2
 800c0fc:	d803      	bhi.n	800c106 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 800c0fe:	4b3d      	ldr	r3, [pc, #244]	; (800c1f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 800c100:	4a39      	ldr	r2, [pc, #228]	; (800c1e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800c102:	21af      	movs	r1, #175	; 0xaf
 800c104:	e7ce      	b.n	800c0a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 800c106:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c10a:	4b3b      	ldr	r3, [pc, #236]	; (800c1f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 800c10c:	681b      	ldr	r3, [r3, #0]
 800c10e:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c112:	f1b8 0f00 	cmp.w	r8, #0
 800c116:	d05e      	beq.n	800c1d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800c118:	6823      	ldr	r3, [r4, #0]
 800c11a:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 800c11e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c120:	4620      	mov	r0, r4
 800c122:	4798      	blx	r3
 800c124:	6833      	ldr	r3, [r6, #0]
 800c126:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800c12a:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 800c12e:	2b00      	cmp	r3, #0
 800c130:	d0b5      	beq.n	800c09e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800c132:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c134:	f8b5 e000 	ldrh.w	lr, [r5]
 800c138:	4596      	cmp	lr, r2
 800c13a:	d9e0      	bls.n	800c0fe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800c13c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c140:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 800c144:	785b      	ldrb	r3, [r3, #1]
 800c146:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c148:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 800c14c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800c150:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c154:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c158:	4b28      	ldr	r3, [pc, #160]	; (800c1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 800c15a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800c164:	920b      	str	r2, [sp, #44]	; 0x2c
 800c166:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800c16a:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 800c16e:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800c172:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 800c176:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c17a:	b122      	cbz	r2, 800c186 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 800c17c:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800c180:	f1b8 0f00 	cmp.w	r8, #0
 800c184:	d101      	bne.n	800c18a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 800c186:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800c18a:	f10d 091c 	add.w	r9, sp, #28
 800c18e:	4621      	mov	r1, r4
 800c190:	4648      	mov	r0, r9
 800c192:	f002 fecb 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c196:	6833      	ldr	r3, [r6, #0]
 800c198:	2b00      	cmp	r3, #0
 800c19a:	d080      	beq.n	800c09e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800c19c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c19e:	882b      	ldrh	r3, [r5, #0]
 800c1a0:	428b      	cmp	r3, r1
 800c1a2:	d9ac      	bls.n	800c0fe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800c1a4:	6838      	ldr	r0, [r7, #0]
 800c1a6:	f7f7 f8f9 	bl	800339c <_ZNK8touchgfx5Texts7getTextEt>
 800c1aa:	6823      	ldr	r3, [r4, #0]
 800c1ac:	4605      	mov	r5, r0
 800c1ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c1b0:	4620      	mov	r0, r4
 800c1b2:	4798      	blx	r3
 800c1b4:	6823      	ldr	r3, [r4, #0]
 800c1b6:	4606      	mov	r6, r0
 800c1b8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c1bc:	4620      	mov	r0, r4
 800c1be:	4798      	blx	r3
 800c1c0:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800c1c4:	ab09      	add	r3, sp, #36	; 0x24
 800c1c6:	9300      	str	r3, [sp, #0]
 800c1c8:	9501      	str	r5, [sp, #4]
 800c1ca:	ab05      	add	r3, sp, #20
 800c1cc:	e899 0006 	ldmia.w	r9, {r1, r2}
 800c1d0:	4640      	mov	r0, r8
 800c1d2:	f7f7 f895 	bl	8003300 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c1d6:	b00e      	add	sp, #56	; 0x38
 800c1d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c1dc:	2000c020 	.word	0x2000c020
 800c1e0:	2000c01c 	.word	0x2000c01c
 800c1e4:	080202d6 	.word	0x080202d6
 800c1e8:	08020410 	.word	0x08020410
 800c1ec:	08020318 	.word	0x08020318
 800c1f0:	2000c028 	.word	0x2000c028
 800c1f4:	08020341 	.word	0x08020341
 800c1f8:	2000c024 	.word	0x2000c024
 800c1fc:	2000bfcc 	.word	0x2000bfcc

0800c200 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c200:	b570      	push	{r4, r5, r6, lr}
 800c202:	6803      	ldr	r3, [r0, #0]
 800c204:	4604      	mov	r4, r0
 800c206:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c208:	4615      	mov	r5, r2
 800c20a:	4798      	blx	r3
 800c20c:	6823      	ldr	r3, [r4, #0]
 800c20e:	4629      	mov	r1, r5
 800c210:	4620      	mov	r0, r4
 800c212:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c214:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c218:	4718      	bx	r3
	...

0800c21c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c21c:	b538      	push	{r3, r4, r5, lr}
 800c21e:	4b0e      	ldr	r3, [pc, #56]	; (800c258 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c220:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c222:	881b      	ldrh	r3, [r3, #0]
 800c224:	429a      	cmp	r2, r3
 800c226:	4604      	mov	r4, r0
 800c228:	d214      	bcs.n	800c254 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c22a:	6803      	ldr	r3, [r0, #0]
 800c22c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c22e:	4798      	blx	r3
 800c230:	6823      	ldr	r3, [r4, #0]
 800c232:	4605      	mov	r5, r0
 800c234:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c236:	4620      	mov	r0, r4
 800c238:	4798      	blx	r3
 800c23a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c23e:	b22d      	sxth	r5, r5
 800c240:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c244:	4601      	mov	r1, r0
 800c246:	bf06      	itte	eq
 800c248:	4602      	moveq	r2, r0
 800c24a:	4629      	moveq	r1, r5
 800c24c:	462a      	movne	r2, r5
 800c24e:	4620      	mov	r0, r4
 800c250:	f7ff ffd6 	bl	800c200 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c254:	bd38      	pop	{r3, r4, r5, pc}
 800c256:	bf00      	nop
 800c258:	2000c020 	.word	0x2000c020

0800c25c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c25c:	b530      	push	{r4, r5, lr}
 800c25e:	888b      	ldrh	r3, [r1, #4]
 800c260:	8583      	strh	r3, [r0, #44]	; 0x2c
 800c262:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c266:	b085      	sub	sp, #20
 800c268:	4604      	mov	r4, r0
 800c26a:	b923      	cbnz	r3, 800c276 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c26c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c270:	b90b      	cbnz	r3, 800c276 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c272:	f7ff ffd3 	bl	800c21c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c276:	6823      	ldr	r3, [r4, #0]
 800c278:	466d      	mov	r5, sp
 800c27a:	4621      	mov	r1, r4
 800c27c:	4628      	mov	r0, r5
 800c27e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c282:	4798      	blx	r3
 800c284:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c288:	343c      	adds	r4, #60	; 0x3c
 800c28a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c28e:	b005      	add	sp, #20
 800c290:	bd30      	pop	{r4, r5, pc}

0800c292 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c292:	2300      	movs	r3, #0
 800c294:	8083      	strh	r3, [r0, #4]
 800c296:	80c3      	strh	r3, [r0, #6]
 800c298:	8003      	strh	r3, [r0, #0]
 800c29a:	8043      	strh	r3, [r0, #2]
 800c29c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c2a0:	2bff      	cmp	r3, #255	; 0xff
 800c2a2:	bf01      	itttt	eq
 800c2a4:	890b      	ldrheq	r3, [r1, #8]
 800c2a6:	8083      	strheq	r3, [r0, #4]
 800c2a8:	894b      	ldrheq	r3, [r1, #10]
 800c2aa:	80c3      	strheq	r3, [r0, #6]
 800c2ac:	4770      	bx	lr
	...

0800c2b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c2b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2b2:	4604      	mov	r4, r0
 800c2b4:	6808      	ldr	r0, [r1, #0]
 800c2b6:	6849      	ldr	r1, [r1, #4]
 800c2b8:	466b      	mov	r3, sp
 800c2ba:	c303      	stmia	r3!, {r0, r1}
 800c2bc:	6823      	ldr	r3, [r4, #0]
 800c2be:	4669      	mov	r1, sp
 800c2c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c2c2:	4620      	mov	r0, r4
 800c2c4:	4798      	blx	r3
 800c2c6:	4b08      	ldr	r3, [pc, #32]	; (800c2e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c2c8:	681b      	ldr	r3, [r3, #0]
 800c2ca:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c2ce:	b10a      	cbz	r2, 800c2d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c2d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c2d2:	b900      	cbnz	r0, 800c2d6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c2d4:	6898      	ldr	r0, [r3, #8]
 800c2d6:	6803      	ldr	r3, [r0, #0]
 800c2d8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c2da:	6a1d      	ldr	r5, [r3, #32]
 800c2dc:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2e0:	4669      	mov	r1, sp
 800c2e2:	47a8      	blx	r5
 800c2e4:	b003      	add	sp, #12
 800c2e6:	bd30      	pop	{r4, r5, pc}
 800c2e8:	2000bfcc 	.word	0x2000bfcc

0800c2ec <_ZN8touchgfx3BoxD1Ev>:
 800c2ec:	4770      	bx	lr

0800c2ee <_ZN8touchgfx3BoxD0Ev>:
 800c2ee:	b510      	push	{r4, lr}
 800c2f0:	212c      	movs	r1, #44	; 0x2c
 800c2f2:	4604      	mov	r4, r0
 800c2f4:	f010 fbb4 	bl	801ca60 <_ZdlPvj>
 800c2f8:	4620      	mov	r0, r4
 800c2fa:	bd10      	pop	{r4, pc}

0800c2fc <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c2fc:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800c300:	b12a      	cbz	r2, 800c30e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c302:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c306:	b112      	cbz	r2, 800c30e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c308:	6803      	ldr	r3, [r0, #0]
 800c30a:	695b      	ldr	r3, [r3, #20]
 800c30c:	4718      	bx	r3
 800c30e:	4770      	bx	lr

0800c310 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c310:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c314:	4770      	bx	lr

0800c316 <_ZN8touchgfx6ButtonD1Ev>:
 800c316:	4770      	bx	lr

0800c318 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c318:	b570      	push	{r4, r5, r6, lr}
 800c31a:	880b      	ldrh	r3, [r1, #0]
 800c31c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c31e:	4605      	mov	r5, r0
 800c320:	8813      	ldrh	r3, [r2, #0]
 800c322:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c326:	4604      	mov	r4, r0
 800c328:	4628      	mov	r0, r5
 800c32a:	f004 fa65 	bl	80107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c32e:	4606      	mov	r6, r0
 800c330:	4628      	mov	r0, r5
 800c332:	f004 faa5 	bl	8010880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c336:	6823      	ldr	r3, [r4, #0]
 800c338:	4605      	mov	r5, r0
 800c33a:	b231      	sxth	r1, r6
 800c33c:	4620      	mov	r0, r4
 800c33e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c340:	4798      	blx	r3
 800c342:	6823      	ldr	r3, [r4, #0]
 800c344:	b229      	sxth	r1, r5
 800c346:	4620      	mov	r0, r4
 800c348:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c34a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c34e:	4718      	bx	r3

0800c350 <_ZN8touchgfx6ButtonD0Ev>:
 800c350:	b510      	push	{r4, lr}
 800c352:	2134      	movs	r1, #52	; 0x34
 800c354:	4604      	mov	r4, r0
 800c356:	f010 fb83 	bl	801ca60 <_ZdlPvj>
 800c35a:	4620      	mov	r0, r4
 800c35c:	bd10      	pop	{r4, pc}

0800c35e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c35e:	b510      	push	{r4, lr}
 800c360:	4604      	mov	r4, r0
 800c362:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c364:	b150      	cbz	r0, 800c37c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c366:	6803      	ldr	r3, [r0, #0]
 800c368:	68db      	ldr	r3, [r3, #12]
 800c36a:	4798      	blx	r3
 800c36c:	b130      	cbz	r0, 800c37c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c36e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c370:	6803      	ldr	r3, [r0, #0]
 800c372:	4621      	mov	r1, r4
 800c374:	689b      	ldr	r3, [r3, #8]
 800c376:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c37a:	4718      	bx	r3
 800c37c:	bd10      	pop	{r4, pc}

0800c37e <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c37e:	b510      	push	{r4, lr}
 800c380:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800c384:	2bff      	cmp	r3, #255	; 0xff
 800c386:	4604      	mov	r4, r0
 800c388:	d006      	beq.n	800c398 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c38a:	2300      	movs	r3, #0
 800c38c:	8003      	strh	r3, [r0, #0]
 800c38e:	8043      	strh	r3, [r0, #2]
 800c390:	8083      	strh	r3, [r0, #4]
 800c392:	80c3      	strh	r3, [r0, #6]
 800c394:	4620      	mov	r0, r4
 800c396:	bd10      	pop	{r4, pc}
 800c398:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c39c:	b11b      	cbz	r3, 800c3a6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c39e:	3130      	adds	r1, #48	; 0x30
 800c3a0:	f004 fab2 	bl	8010908 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c3a4:	e7f6      	b.n	800c394 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c3a6:	312e      	adds	r1, #46	; 0x2e
 800c3a8:	e7fa      	b.n	800c3a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800c3ac <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c3ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3b0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c3b4:	b08a      	sub	sp, #40	; 0x28
 800c3b6:	4604      	mov	r4, r0
 800c3b8:	4688      	mov	r8, r1
 800c3ba:	2b00      	cmp	r3, #0
 800c3bc:	d044      	beq.n	800c448 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800c3be:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c3c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c3c4:	a805      	add	r0, sp, #20
 800c3c6:	f004 fa17 	bl	80107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c3ca:	4605      	mov	r5, r0
 800c3cc:	b206      	sxth	r6, r0
 800c3ce:	a805      	add	r0, sp, #20
 800c3d0:	f004 fa56 	bl	8010880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c3d4:	f9b8 2000 	ldrsh.w	r2, [r8]
 800c3d8:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800c3dc:	4417      	add	r7, r2
 800c3de:	b2bf      	uxth	r7, r7
 800c3e0:	2300      	movs	r3, #0
 800c3e2:	fa0f fe87 	sxth.w	lr, r7
 800c3e6:	459e      	cmp	lr, r3
 800c3e8:	fa0f fc80 	sxth.w	ip, r0
 800c3ec:	9306      	str	r3, [sp, #24]
 800c3ee:	dd2d      	ble.n	800c44c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c3f0:	4296      	cmp	r6, r2
 800c3f2:	dd2b      	ble.n	800c44c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c3f4:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800c3f8:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800c3fc:	4419      	add	r1, r3
 800c3fe:	b289      	uxth	r1, r1
 800c400:	fa0f f881 	sxth.w	r8, r1
 800c404:	f1b8 0f00 	cmp.w	r8, #0
 800c408:	dd20      	ble.n	800c44c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c40a:	459c      	cmp	ip, r3
 800c40c:	dd1e      	ble.n	800c44c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c40e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c412:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c416:	4576      	cmp	r6, lr
 800c418:	bfa8      	it	ge
 800c41a:	463d      	movge	r5, r7
 800c41c:	45c4      	cmp	ip, r8
 800c41e:	bfa8      	it	ge
 800c420:	4608      	movge	r0, r1
 800c422:	1aad      	subs	r5, r5, r2
 800c424:	1ac0      	subs	r0, r0, r3
 800c426:	f8ad 501c 	strh.w	r5, [sp, #28]
 800c42a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c42e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c432:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c436:	4b1f      	ldr	r3, [pc, #124]	; (800c4b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800c438:	681b      	ldr	r3, [r3, #0]
 800c43a:	b953      	cbnz	r3, 800c452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800c43c:	4b1e      	ldr	r3, [pc, #120]	; (800c4b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800c43e:	4a1f      	ldr	r2, [pc, #124]	; (800c4bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800c440:	481f      	ldr	r0, [pc, #124]	; (800c4c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800c442:	2187      	movs	r1, #135	; 0x87
 800c444:	f011 f8b6 	bl	801d5b4 <__assert_func>
 800c448:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c44a:	e7b9      	b.n	800c3c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c44c:	2300      	movs	r3, #0
 800c44e:	9307      	str	r3, [sp, #28]
 800c450:	e7f1      	b.n	800c436 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800c452:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c456:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c45a:	429a      	cmp	r2, r3
 800c45c:	d026      	beq.n	800c4ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c45e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c462:	2b00      	cmp	r3, #0
 800c464:	dd22      	ble.n	800c4ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c466:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c46a:	2b00      	cmp	r3, #0
 800c46c:	dd1e      	ble.n	800c4ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c46e:	2300      	movs	r3, #0
 800c470:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c474:	6823      	ldr	r3, [r4, #0]
 800c476:	a908      	add	r1, sp, #32
 800c478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c47a:	4620      	mov	r0, r4
 800c47c:	4798      	blx	r3
 800c47e:	4b11      	ldr	r3, [pc, #68]	; (800c4c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800c480:	681b      	ldr	r3, [r3, #0]
 800c482:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c486:	b10a      	cbz	r2, 800c48c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c488:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c48a:	b900      	cbnz	r0, 800c48e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800c48c:	6898      	ldr	r0, [r3, #8]
 800c48e:	6801      	ldr	r1, [r0, #0]
 800c490:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c494:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c498:	2501      	movs	r5, #1
 800c49a:	9502      	str	r5, [sp, #8]
 800c49c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c4a0:	9401      	str	r4, [sp, #4]
 800c4a2:	ac06      	add	r4, sp, #24
 800c4a4:	9400      	str	r4, [sp, #0]
 800c4a6:	688c      	ldr	r4, [r1, #8]
 800c4a8:	a905      	add	r1, sp, #20
 800c4aa:	47a0      	blx	r4
 800c4ac:	b00a      	add	sp, #40	; 0x28
 800c4ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c4b2:	bf00      	nop
 800c4b4:	2000c054 	.word	0x2000c054
 800c4b8:	080204a8 	.word	0x080204a8
 800c4bc:	08020580 	.word	0x08020580
 800c4c0:	080204e4 	.word	0x080204e4
 800c4c4:	2000bfcc 	.word	0x2000bfcc

0800c4c8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800c4c8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800c4cc:	b12a      	cbz	r2, 800c4da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c4ce:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c4d2:	b112      	cbz	r2, 800c4da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c4d4:	6803      	ldr	r3, [r0, #0]
 800c4d6:	695b      	ldr	r3, [r3, #20]
 800c4d8:	4718      	bx	r3
 800c4da:	4770      	bx	lr

0800c4dc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c4dc:	b510      	push	{r4, lr}
 800c4de:	6803      	ldr	r3, [r0, #0]
 800c4e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c4e2:	460c      	mov	r4, r1
 800c4e4:	4798      	blx	r3
 800c4e6:	1b03      	subs	r3, r0, r4
 800c4e8:	4258      	negs	r0, r3
 800c4ea:	4158      	adcs	r0, r3
 800c4ec:	bd10      	pop	{r4, pc}
	...

0800c4f0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c4f0:	4b01      	ldr	r3, [pc, #4]	; (800c4f8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c4f2:	6019      	str	r1, [r3, #0]
 800c4f4:	4770      	bx	lr
 800c4f6:	bf00      	nop
 800c4f8:	2000bfd4 	.word	0x2000bfd4

0800c4fc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c4fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c500:	4696      	mov	lr, r2
 800c502:	4605      	mov	r5, r0
 800c504:	4614      	mov	r4, r2
 800c506:	460e      	mov	r6, r1
 800c508:	461f      	mov	r7, r3
 800c50a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c50e:	b097      	sub	sp, #92	; 0x5c
 800c510:	f10d 0c1c 	add.w	ip, sp, #28
 800c514:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c518:	f8de 3000 	ldr.w	r3, [lr]
 800c51c:	f8cc 3000 	str.w	r3, [ip]
 800c520:	f104 0e14 	add.w	lr, r4, #20
 800c524:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c528:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c52c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c530:	f8de 3000 	ldr.w	r3, [lr]
 800c534:	f8cc 3000 	str.w	r3, [ip]
 800c538:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c53c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c540:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c544:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c548:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800c54c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800c550:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800c554:	f8de 3000 	ldr.w	r3, [lr]
 800c558:	f8cc 3000 	str.w	r3, [ip]
 800c55c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c55e:	682b      	ldr	r3, [r5, #0]
 800c560:	9201      	str	r2, [sp, #4]
 800c562:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c566:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c568:	9200      	str	r2, [sp, #0]
 800c56a:	f8cd 8008 	str.w	r8, [sp, #8]
 800c56e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800c572:	aa07      	add	r2, sp, #28
 800c574:	463b      	mov	r3, r7
 800c576:	4631      	mov	r1, r6
 800c578:	4628      	mov	r0, r5
 800c57a:	47d8      	blx	fp
 800c57c:	46a6      	mov	lr, r4
 800c57e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c582:	f10d 0c1c 	add.w	ip, sp, #28
 800c586:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c58a:	f8de 3000 	ldr.w	r3, [lr]
 800c58e:	f8cc 3000 	str.w	r3, [ip]
 800c592:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c596:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c59a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c59e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c5a2:	343c      	adds	r4, #60	; 0x3c
 800c5a4:	f8de 3000 	ldr.w	r3, [lr]
 800c5a8:	f8cc 3000 	str.w	r3, [ip]
 800c5ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c5ae:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c5b2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c5b6:	6823      	ldr	r3, [r4, #0]
 800c5b8:	f8cc 3000 	str.w	r3, [ip]
 800c5bc:	682b      	ldr	r3, [r5, #0]
 800c5be:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c5c2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c5c4:	9201      	str	r2, [sp, #4]
 800c5c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c5c8:	9200      	str	r2, [sp, #0]
 800c5ca:	f8cd 8008 	str.w	r8, [sp, #8]
 800c5ce:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800c5d0:	aa07      	add	r2, sp, #28
 800c5d2:	463b      	mov	r3, r7
 800c5d4:	4631      	mov	r1, r6
 800c5d6:	4628      	mov	r0, r5
 800c5d8:	47a0      	blx	r4
 800c5da:	b017      	add	sp, #92	; 0x5c
 800c5dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c5e0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e4:	b08d      	sub	sp, #52	; 0x34
 800c5e6:	4688      	mov	r8, r1
 800c5e8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c5ea:	f8d3 c000 	ldr.w	ip, [r3]
 800c5ee:	680f      	ldr	r7, [r1, #0]
 800c5f0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800c5f4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800c5f8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800c5fc:	edd3 6a07 	vldr	s13, [r3, #28]
 800c600:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c602:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800c606:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c60a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c60e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800c612:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800c616:	eba7 070c 	sub.w	r7, r7, ip
 800c61a:	42bc      	cmp	r4, r7
 800c61c:	bfa8      	it	ge
 800c61e:	463c      	movge	r4, r7
 800c620:	ee07 4a90 	vmov	s15, r4
 800c624:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c628:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800c62c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c630:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c634:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c638:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c63c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c640:	eb09 0e0c 	add.w	lr, r9, ip
 800c644:	4571      	cmp	r1, lr
 800c646:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c64a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c64e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c652:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c656:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c65a:	f340 808d 	ble.w	800c778 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800c65e:	eba1 060e 	sub.w	r6, r1, lr
 800c662:	fb96 f5f4 	sdiv	r5, r6, r4
 800c666:	ee07 5a10 	vmov	s14, r5
 800c66a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c66e:	2d00      	cmp	r5, #0
 800c670:	fb04 6615 	mls	r6, r4, r5, r6
 800c674:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c678:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c67c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c680:	dd13      	ble.n	800c6aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800c682:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c686:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c68a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c68e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c692:	bf18      	it	ne
 800c694:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c698:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c69c:	bf08      	it	eq
 800c69e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c6a2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c6a6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c6aa:	fb05 f204 	mul.w	r2, r5, r4
 800c6ae:	1abf      	subs	r7, r7, r2
 800c6b0:	4494      	add	ip, r2
 800c6b2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c6b6:	4411      	add	r1, r2
 800c6b8:	eb09 020c 	add.w	r2, r9, ip
 800c6bc:	443a      	add	r2, r7
 800c6be:	b209      	sxth	r1, r1
 800c6c0:	428a      	cmp	r2, r1
 800c6c2:	bfc4      	itt	gt
 800c6c4:	eba1 0209 	subgt.w	r2, r1, r9
 800c6c8:	eba2 070c 	subgt.w	r7, r2, ip
 800c6cc:	2f00      	cmp	r7, #0
 800c6ce:	dd50      	ble.n	800c772 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800c6d0:	fb97 f1f4 	sdiv	r1, r7, r4
 800c6d4:	fb04 7211 	mls	r2, r4, r1, r7
 800c6d8:	b90a      	cbnz	r2, 800c6de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800c6da:	3901      	subs	r1, #1
 800c6dc:	4622      	mov	r2, r4
 800c6de:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c6e2:	6840      	ldr	r0, [r0, #4]
 800c6e4:	900b      	str	r0, [sp, #44]	; 0x2c
 800c6e6:	f8d0 a000 	ldr.w	sl, [r0]
 800c6ea:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c6ec:	9008      	str	r0, [sp, #32]
 800c6ee:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800c6f2:	9818      	ldr	r0, [sp, #96]	; 0x60
 800c6f4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800c6f8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c6fc:	695b      	ldr	r3, [r3, #20]
 800c6fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c700:	445b      	add	r3, fp
 800c702:	eef0 6a42 	vmov.f32	s13, s4
 800c706:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c70a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c70e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c716:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c71a:	9307      	str	r3, [sp, #28]
 800c71c:	ee17 7a90 	vmov	r7, s15
 800c720:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c724:	eeb0 7a61 	vmov.f32	s14, s3
 800c728:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c72c:	ee16 3a90 	vmov	r3, s13
 800c730:	fb97 f7f4 	sdiv	r7, r7, r4
 800c734:	ee17 ca90 	vmov	ip, s15
 800c738:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c73c:	fb9c fcf4 	sdiv	ip, ip, r4
 800c740:	fb0c 3306 	mla	r3, ip, r6, r3
 800c744:	9302      	str	r3, [sp, #8]
 800c746:	ee17 3a10 	vmov	r3, s14
 800c74a:	44b6      	add	lr, r6
 800c74c:	fb04 e505 	mla	r5, r4, r5, lr
 800c750:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c754:	fb07 3706 	mla	r7, r7, r6, r3
 800c758:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c75c:	e9cd 4700 	strd	r4, r7, [sp]
 800c760:	2900      	cmp	r1, #0
 800c762:	bfcc      	ite	gt
 800c764:	46a1      	movgt	r9, r4
 800c766:	4691      	movle	r9, r2
 800c768:	eba9 0306 	sub.w	r3, r9, r6
 800c76c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c770:	47a0      	blx	r4
 800c772:	b00d      	add	sp, #52	; 0x34
 800c774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c778:	2500      	movs	r5, #0
 800c77a:	462e      	mov	r6, r5
 800c77c:	e799      	b.n	800c6b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800c780 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c784:	b0db      	sub	sp, #364	; 0x16c
 800c786:	461d      	mov	r5, r3
 800c788:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800c78c:	930a      	str	r3, [sp, #40]	; 0x28
 800c78e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800c792:	930b      	str	r3, [sp, #44]	; 0x2c
 800c794:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800c798:	9310      	str	r3, [sp, #64]	; 0x40
 800c79a:	6803      	ldr	r3, [r0, #0]
 800c79c:	910f      	str	r1, [sp, #60]	; 0x3c
 800c79e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800c7a0:	9009      	str	r0, [sp, #36]	; 0x24
 800c7a2:	4614      	mov	r4, r2
 800c7a4:	4629      	mov	r1, r5
 800c7a6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c7aa:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800c7ae:	47b8      	blx	r7
 800c7b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c7b2:	6058      	str	r0, [r3, #4]
 800c7b4:	2800      	cmp	r0, #0
 800c7b6:	f000 83a1 	beq.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c7ba:	682b      	ldr	r3, [r5, #0]
 800c7bc:	9314      	str	r3, [sp, #80]	; 0x50
 800c7be:	686b      	ldr	r3, [r5, #4]
 800c7c0:	9315      	str	r3, [sp, #84]	; 0x54
 800c7c2:	4bc4      	ldr	r3, [pc, #784]	; (800cad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c7c4:	ed94 7a02 	vldr	s14, [r4, #8]
 800c7c8:	7819      	ldrb	r1, [r3, #0]
 800c7ca:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c7ce:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c7d2:	2900      	cmp	r1, #0
 800c7d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c7d8:	bf16      	itet	ne
 800c7da:	4619      	movne	r1, r3
 800c7dc:	4611      	moveq	r1, r2
 800c7de:	4613      	movne	r3, r2
 800c7e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7e4:	9116      	str	r1, [sp, #88]	; 0x58
 800c7e6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800c7ea:	f240 8387 	bls.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c7ee:	ed94 7a07 	vldr	s14, [r4, #28]
 800c7f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c7f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7fa:	f240 837f 	bls.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c7fe:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c802:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c80a:	f240 8377 	bls.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c80e:	6822      	ldr	r2, [r4, #0]
 800c810:	4bb1      	ldr	r3, [pc, #708]	; (800cad8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c812:	429a      	cmp	r2, r3
 800c814:	f2c0 8372 	blt.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c818:	49b0      	ldr	r1, [pc, #704]	; (800cadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c81a:	6963      	ldr	r3, [r4, #20]
 800c81c:	428a      	cmp	r2, r1
 800c81e:	f300 836d 	bgt.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c822:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c826:	48ae      	ldr	r0, [pc, #696]	; (800cae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c828:	33ff      	adds	r3, #255	; 0xff
 800c82a:	4283      	cmp	r3, r0
 800c82c:	f200 8366 	bhi.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c830:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c832:	4dac      	ldr	r5, [pc, #688]	; (800cae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c834:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c838:	33ff      	adds	r3, #255	; 0xff
 800c83a:	42ab      	cmp	r3, r5
 800c83c:	f200 835e 	bhi.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c840:	6862      	ldr	r2, [r4, #4]
 800c842:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800c846:	33ff      	adds	r3, #255	; 0xff
 800c848:	4283      	cmp	r3, r0
 800c84a:	f200 8357 	bhi.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c84e:	69a1      	ldr	r1, [r4, #24]
 800c850:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800c854:	33ff      	adds	r3, #255	; 0xff
 800c856:	4283      	cmp	r3, r0
 800c858:	f200 8350 	bhi.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c85c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c85e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800c862:	30ff      	adds	r0, #255	; 0xff
 800c864:	42a8      	cmp	r0, r5
 800c866:	f200 8349 	bhi.w	800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c86a:	428a      	cmp	r2, r1
 800c86c:	f280 8110 	bge.w	800ca90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c870:	429a      	cmp	r2, r3
 800c872:	f300 8119 	bgt.w	800caa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c876:	4299      	cmp	r1, r3
 800c878:	f280 811d 	bge.w	800cab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c87c:	2502      	movs	r5, #2
 800c87e:	2701      	movs	r7, #1
 800c880:	46a9      	mov	r9, r5
 800c882:	46b8      	mov	r8, r7
 800c884:	f04f 0a00 	mov.w	sl, #0
 800c888:	4621      	mov	r1, r4
 800c88a:	a849      	add	r0, sp, #292	; 0x124
 800c88c:	f003 fcc6 	bl	801021c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c890:	4622      	mov	r2, r4
 800c892:	4653      	mov	r3, sl
 800c894:	a949      	add	r1, sp, #292	; 0x124
 800c896:	f8cd 9000 	str.w	r9, [sp]
 800c89a:	a819      	add	r0, sp, #100	; 0x64
 800c89c:	f003 fdee 	bl	801047c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c8a0:	4622      	mov	r2, r4
 800c8a2:	4653      	mov	r3, sl
 800c8a4:	a949      	add	r1, sp, #292	; 0x124
 800c8a6:	f8cd 8000 	str.w	r8, [sp]
 800c8aa:	a829      	add	r0, sp, #164	; 0xa4
 800c8ac:	f003 fde6 	bl	801047c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c8b0:	4643      	mov	r3, r8
 800c8b2:	4622      	mov	r2, r4
 800c8b4:	a949      	add	r1, sp, #292	; 0x124
 800c8b6:	f8cd 9000 	str.w	r9, [sp]
 800c8ba:	a839      	add	r0, sp, #228	; 0xe4
 800c8bc:	f003 fdde 	bl	801047c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c8c0:	42af      	cmp	r7, r5
 800c8c2:	bfb5      	itete	lt
 800c8c4:	2300      	movlt	r3, #0
 800c8c6:	2301      	movge	r3, #1
 800c8c8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800c8ca:	930e      	strge	r3, [sp, #56]	; 0x38
 800c8cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c8ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c8d2:	af12      	add	r7, sp, #72	; 0x48
 800c8d4:	bfb9      	ittee	lt
 800c8d6:	ad29      	addlt	r5, sp, #164	; 0xa4
 800c8d8:	ac19      	addlt	r4, sp, #100	; 0x64
 800c8da:	ad19      	addge	r5, sp, #100	; 0x64
 800c8dc:	ac29      	addge	r4, sp, #164	; 0xa4
 800c8de:	e887 0003 	stmia.w	r7, {r0, r1}
 800c8e2:	b928      	cbnz	r0, 800c8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c8e4:	4b80      	ldr	r3, [pc, #512]	; (800cae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c8e6:	6818      	ldr	r0, [r3, #0]
 800c8e8:	6803      	ldr	r3, [r0, #0]
 800c8ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c8ec:	4798      	blx	r3
 800c8ee:	6038      	str	r0, [r7, #0]
 800c8f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800c8f2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c8f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c8fa:	930c      	str	r3, [sp, #48]	; 0x30
 800c8fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c8fe:	6963      	ldr	r3, [r4, #20]
 800c900:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800c902:	440b      	add	r3, r1
 800c904:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c908:	4408      	add	r0, r1
 800c90a:	b200      	sxth	r0, r0
 800c90c:	4283      	cmp	r3, r0
 800c90e:	900d      	str	r0, [sp, #52]	; 0x34
 800c910:	f280 80dd 	bge.w	800cace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c914:	428b      	cmp	r3, r1
 800c916:	da08      	bge.n	800c92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c918:	2a00      	cmp	r2, #0
 800c91a:	dd06      	ble.n	800c92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c91c:	1acb      	subs	r3, r1, r3
 800c91e:	429a      	cmp	r2, r3
 800c920:	f2c0 80e4 	blt.w	800caec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c924:	2b00      	cmp	r3, #0
 800c926:	f300 80e2 	bgt.w	800caee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c92a:	6967      	ldr	r7, [r4, #20]
 800c92c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c92e:	443b      	add	r3, r7
 800c930:	461f      	mov	r7, r3
 800c932:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c934:	1bdf      	subs	r7, r3, r7
 800c936:	4297      	cmp	r7, r2
 800c938:	bfa8      	it	ge
 800c93a:	4617      	movge	r7, r2
 800c93c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800c940:	2f00      	cmp	r7, #0
 800c942:	f340 8166 	ble.w	800cc12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c946:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800c948:	6829      	ldr	r1, [r5, #0]
 800c94a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c94e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c952:	6820      	ldr	r0, [r4, #0]
 800c954:	4411      	add	r1, r2
 800c956:	4299      	cmp	r1, r3
 800c958:	dd1a      	ble.n	800c990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c95a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c95e:	440b      	add	r3, r1
 800c960:	4402      	add	r2, r0
 800c962:	b21b      	sxth	r3, r3
 800c964:	429a      	cmp	r2, r3
 800c966:	dc13      	bgt.n	800c990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c96a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c96c:	681b      	ldr	r3, [r3, #0]
 800c96e:	9206      	str	r2, [sp, #24]
 800c970:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c972:	9205      	str	r2, [sp, #20]
 800c974:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c976:	9500      	str	r5, [sp, #0]
 800c978:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c97c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800c97e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c980:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c984:	a912      	add	r1, sp, #72	; 0x48
 800c986:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800c98a:	aa49      	add	r2, sp, #292	; 0x124
 800c98c:	4623      	mov	r3, r4
 800c98e:	47c8      	blx	r9
 800c990:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c994:	441a      	add	r2, r3
 800c996:	6963      	ldr	r3, [r4, #20]
 800c998:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800c99c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800c9a0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800c9a4:	68a1      	ldr	r1, [r4, #8]
 800c9a6:	ed94 6a08 	vldr	s12, [r4, #32]
 800c9aa:	6022      	str	r2, [r4, #0]
 800c9ac:	3301      	adds	r3, #1
 800c9ae:	6163      	str	r3, [r4, #20]
 800c9b0:	69a3      	ldr	r3, [r4, #24]
 800c9b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c9b6:	3b01      	subs	r3, #1
 800c9b8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800c9bc:	61a3      	str	r3, [r4, #24]
 800c9be:	6923      	ldr	r3, [r4, #16]
 800c9c0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800c9c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c9c8:	edd4 6a07 	vldr	s13, [r4, #28]
 800c9cc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800c9d0:	440b      	add	r3, r1
 800c9d2:	68e1      	ldr	r1, [r4, #12]
 800c9d4:	6123      	str	r3, [r4, #16]
 800c9d6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c9da:	428b      	cmp	r3, r1
 800c9dc:	edc4 6a07 	vstr	s13, [r4, #28]
 800c9e0:	db15      	blt.n	800ca0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c9e2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800c9e6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c9ea:	3201      	adds	r2, #1
 800c9ec:	edc4 6a07 	vstr	s13, [r4, #28]
 800c9f0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800c9f4:	6022      	str	r2, [r4, #0]
 800c9f6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c9fa:	1a5b      	subs	r3, r3, r1
 800c9fc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ca00:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ca04:	6123      	str	r3, [r4, #16]
 800ca06:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ca0a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ca0e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ca12:	441a      	add	r2, r3
 800ca14:	696b      	ldr	r3, [r5, #20]
 800ca16:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ca1a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ca1e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ca22:	68a9      	ldr	r1, [r5, #8]
 800ca24:	ed95 6a08 	vldr	s12, [r5, #32]
 800ca28:	602a      	str	r2, [r5, #0]
 800ca2a:	3301      	adds	r3, #1
 800ca2c:	616b      	str	r3, [r5, #20]
 800ca2e:	69ab      	ldr	r3, [r5, #24]
 800ca30:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ca34:	3b01      	subs	r3, #1
 800ca36:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ca3a:	61ab      	str	r3, [r5, #24]
 800ca3c:	692b      	ldr	r3, [r5, #16]
 800ca3e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ca42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca46:	edd5 6a07 	vldr	s13, [r5, #28]
 800ca4a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ca4e:	440b      	add	r3, r1
 800ca50:	68e9      	ldr	r1, [r5, #12]
 800ca52:	612b      	str	r3, [r5, #16]
 800ca54:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ca58:	428b      	cmp	r3, r1
 800ca5a:	edc5 6a07 	vstr	s13, [r5, #28]
 800ca5e:	db15      	blt.n	800ca8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ca60:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ca64:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ca68:	3201      	adds	r2, #1
 800ca6a:	edc5 6a07 	vstr	s13, [r5, #28]
 800ca6e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ca72:	602a      	str	r2, [r5, #0]
 800ca74:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ca78:	1a5b      	subs	r3, r3, r1
 800ca7a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ca7e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ca82:	612b      	str	r3, [r5, #16]
 800ca84:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ca88:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ca8c:	3f01      	subs	r7, #1
 800ca8e:	e757      	b.n	800c940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ca90:	4299      	cmp	r1, r3
 800ca92:	dc13      	bgt.n	800cabc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ca94:	429a      	cmp	r2, r3
 800ca96:	da14      	bge.n	800cac2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ca98:	2502      	movs	r5, #2
 800ca9a:	2703      	movs	r7, #3
 800ca9c:	46a9      	mov	r9, r5
 800ca9e:	f04f 0800 	mov.w	r8, #0
 800caa2:	f04f 0a01 	mov.w	sl, #1
 800caa6:	e6ef      	b.n	800c888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800caa8:	2501      	movs	r5, #1
 800caaa:	2700      	movs	r7, #0
 800caac:	46a9      	mov	r9, r5
 800caae:	46b8      	mov	r8, r7
 800cab0:	f04f 0a02 	mov.w	sl, #2
 800cab4:	e6e8      	b.n	800c888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cab6:	2501      	movs	r5, #1
 800cab8:	2702      	movs	r7, #2
 800caba:	e6e1      	b.n	800c880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cabc:	2500      	movs	r5, #0
 800cabe:	2701      	movs	r7, #1
 800cac0:	e7f4      	b.n	800caac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cac2:	2702      	movs	r7, #2
 800cac4:	2503      	movs	r5, #3
 800cac6:	f04f 0900 	mov.w	r9, #0
 800caca:	46b8      	mov	r8, r7
 800cacc:	e7e9      	b.n	800caa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cace:	4613      	mov	r3, r2
 800cad0:	e728      	b.n	800c924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cad2:	bf00      	nop
 800cad4:	2000bfc4 	.word	0x2000bfc4
 800cad8:	fffd8f01 	.word	0xfffd8f01
 800cadc:	00027100 	.word	0x00027100
 800cae0:	0004e1ff 	.word	0x0004e1ff
 800cae4:	0004e1fe 	.word	0x0004e1fe
 800cae8:	2000bfcc 	.word	0x2000bfcc
 800caec:	4613      	mov	r3, r2
 800caee:	992b      	ldr	r1, [sp, #172]	; 0xac
 800caf0:	9111      	str	r1, [sp, #68]	; 0x44
 800caf2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800caf6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800cafa:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800cafc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800cb00:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800cb04:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800cb08:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cb0c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800cb10:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800cb14:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800cb18:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800cb1c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800cb20:	469e      	mov	lr, r3
 800cb22:	469c      	mov	ip, r3
 800cb24:	f04f 0900 	mov.w	r9, #0
 800cb28:	f1bc 0f00 	cmp.w	ip, #0
 800cb2c:	d147      	bne.n	800cbbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cb2e:	eb03 0c07 	add.w	ip, r3, r7
 800cb32:	1ad7      	subs	r7, r2, r3
 800cb34:	f1b9 0f00 	cmp.w	r9, #0
 800cb38:	d009      	beq.n	800cb4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cb3a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800cb3e:	9029      	str	r0, [sp, #164]	; 0xa4
 800cb40:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cb44:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cb48:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cb4c:	912d      	str	r1, [sp, #180]	; 0xb4
 800cb4e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cb50:	9111      	str	r1, [sp, #68]	; 0x44
 800cb52:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cb56:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cb5a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cb5e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cb62:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cb66:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cb6a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cb6e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cb72:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cb76:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cb7a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cb7e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cb82:	f04f 0800 	mov.w	r8, #0
 800cb86:	f1be 0f00 	cmp.w	lr, #0
 800cb8a:	d031      	beq.n	800cbf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cb8c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cb8e:	4431      	add	r1, r6
 800cb90:	4549      	cmp	r1, r9
 800cb92:	4450      	add	r0, sl
 800cb94:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cb98:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cb9c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cba0:	db08      	blt.n	800cbb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800cba2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cba6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cbaa:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cbae:	3001      	adds	r0, #1
 800cbb0:	eba1 0109 	sub.w	r1, r1, r9
 800cbb4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cbb8:	f04f 0801 	mov.w	r8, #1
 800cbbc:	e7e3      	b.n	800cb86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cbbe:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cbc0:	4431      	add	r1, r6
 800cbc2:	4541      	cmp	r1, r8
 800cbc4:	4450      	add	r0, sl
 800cbc6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cbca:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cbce:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cbd2:	db08      	blt.n	800cbe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cbd4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cbd8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cbdc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cbe0:	3001      	adds	r0, #1
 800cbe2:	eba1 0108 	sub.w	r1, r1, r8
 800cbe6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cbea:	f04f 0901 	mov.w	r9, #1
 800cbee:	e79b      	b.n	800cb28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cbf0:	449c      	add	ip, r3
 800cbf2:	1aff      	subs	r7, r7, r3
 800cbf4:	f1b8 0f00 	cmp.w	r8, #0
 800cbf8:	d009      	beq.n	800cc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cbfa:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800cbfe:	9019      	str	r0, [sp, #100]	; 0x64
 800cc00:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cc04:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cc08:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cc0c:	911d      	str	r1, [sp, #116]	; 0x74
 800cc0e:	1ad2      	subs	r2, r2, r3
 800cc10:	e68b      	b.n	800c92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cc12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cc14:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800cc16:	2b00      	cmp	r3, #0
 800cc18:	f000 80d1 	beq.w	800cdbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cc1c:	ad19      	add	r5, sp, #100	; 0x64
 800cc1e:	ac39      	add	r4, sp, #228	; 0xe4
 800cc20:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cc22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cc26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cc2a:	930c      	str	r3, [sp, #48]	; 0x30
 800cc2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cc2e:	6963      	ldr	r3, [r4, #20]
 800cc30:	440b      	add	r3, r1
 800cc32:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cc36:	4408      	add	r0, r1
 800cc38:	b200      	sxth	r0, r0
 800cc3a:	4283      	cmp	r3, r0
 800cc3c:	900d      	str	r0, [sp, #52]	; 0x34
 800cc3e:	f280 80c1 	bge.w	800cdc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cc42:	428b      	cmp	r3, r1
 800cc44:	da08      	bge.n	800cc58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cc46:	2a00      	cmp	r2, #0
 800cc48:	dd06      	ble.n	800cc58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cc4a:	1acb      	subs	r3, r1, r3
 800cc4c:	429a      	cmp	r2, r3
 800cc4e:	f2c0 80bb 	blt.w	800cdc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cc52:	2b00      	cmp	r3, #0
 800cc54:	f300 80b9 	bgt.w	800cdca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cc58:	6967      	ldr	r7, [r4, #20]
 800cc5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cc5c:	443b      	add	r3, r7
 800cc5e:	461f      	mov	r7, r3
 800cc60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc62:	1bdf      	subs	r7, r3, r7
 800cc64:	4297      	cmp	r7, r2
 800cc66:	bfa8      	it	ge
 800cc68:	4617      	movge	r7, r2
 800cc6a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cc6e:	2f00      	cmp	r7, #0
 800cc70:	f340 813c 	ble.w	800ceec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800cc74:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cc76:	6829      	ldr	r1, [r5, #0]
 800cc78:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cc7c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cc80:	6820      	ldr	r0, [r4, #0]
 800cc82:	4411      	add	r1, r2
 800cc84:	4299      	cmp	r1, r3
 800cc86:	dd1a      	ble.n	800ccbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cc88:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cc8c:	440b      	add	r3, r1
 800cc8e:	4402      	add	r2, r0
 800cc90:	b21b      	sxth	r3, r3
 800cc92:	429a      	cmp	r2, r3
 800cc94:	dc13      	bgt.n	800ccbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cc96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cc98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cc9a:	681b      	ldr	r3, [r3, #0]
 800cc9c:	9206      	str	r2, [sp, #24]
 800cc9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cca0:	9205      	str	r2, [sp, #20]
 800cca2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cca4:	9500      	str	r5, [sp, #0]
 800cca6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ccaa:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ccac:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ccae:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ccb2:	a912      	add	r1, sp, #72	; 0x48
 800ccb4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ccb8:	aa49      	add	r2, sp, #292	; 0x124
 800ccba:	4623      	mov	r3, r4
 800ccbc:	47c8      	blx	r9
 800ccbe:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ccc2:	441a      	add	r2, r3
 800ccc4:	6963      	ldr	r3, [r4, #20]
 800ccc6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ccca:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ccce:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ccd2:	68a1      	ldr	r1, [r4, #8]
 800ccd4:	ed94 6a08 	vldr	s12, [r4, #32]
 800ccd8:	6022      	str	r2, [r4, #0]
 800ccda:	3301      	adds	r3, #1
 800ccdc:	6163      	str	r3, [r4, #20]
 800ccde:	69a3      	ldr	r3, [r4, #24]
 800cce0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cce4:	3b01      	subs	r3, #1
 800cce6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ccea:	61a3      	str	r3, [r4, #24]
 800ccec:	6923      	ldr	r3, [r4, #16]
 800ccee:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ccf2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ccf6:	edd4 6a07 	vldr	s13, [r4, #28]
 800ccfa:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ccfe:	440b      	add	r3, r1
 800cd00:	68e1      	ldr	r1, [r4, #12]
 800cd02:	6123      	str	r3, [r4, #16]
 800cd04:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cd08:	428b      	cmp	r3, r1
 800cd0a:	edc4 6a07 	vstr	s13, [r4, #28]
 800cd0e:	db15      	blt.n	800cd3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cd10:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cd14:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cd18:	3201      	adds	r2, #1
 800cd1a:	edc4 6a07 	vstr	s13, [r4, #28]
 800cd1e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cd22:	6022      	str	r2, [r4, #0]
 800cd24:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cd28:	1a5b      	subs	r3, r3, r1
 800cd2a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cd2e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cd32:	6123      	str	r3, [r4, #16]
 800cd34:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cd38:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cd3c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cd40:	441a      	add	r2, r3
 800cd42:	696b      	ldr	r3, [r5, #20]
 800cd44:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cd48:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cd4c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cd50:	68a9      	ldr	r1, [r5, #8]
 800cd52:	ed95 6a08 	vldr	s12, [r5, #32]
 800cd56:	602a      	str	r2, [r5, #0]
 800cd58:	3301      	adds	r3, #1
 800cd5a:	616b      	str	r3, [r5, #20]
 800cd5c:	69ab      	ldr	r3, [r5, #24]
 800cd5e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cd62:	3b01      	subs	r3, #1
 800cd64:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cd68:	61ab      	str	r3, [r5, #24]
 800cd6a:	692b      	ldr	r3, [r5, #16]
 800cd6c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cd70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cd74:	edd5 6a07 	vldr	s13, [r5, #28]
 800cd78:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cd7c:	440b      	add	r3, r1
 800cd7e:	68e9      	ldr	r1, [r5, #12]
 800cd80:	612b      	str	r3, [r5, #16]
 800cd82:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cd86:	428b      	cmp	r3, r1
 800cd88:	edc5 6a07 	vstr	s13, [r5, #28]
 800cd8c:	db15      	blt.n	800cdba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cd8e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cd92:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cd96:	3201      	adds	r2, #1
 800cd98:	edc5 6a07 	vstr	s13, [r5, #28]
 800cd9c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cda0:	602a      	str	r2, [r5, #0]
 800cda2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cda6:	1a5b      	subs	r3, r3, r1
 800cda8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cdac:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cdb0:	612b      	str	r3, [r5, #16]
 800cdb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cdb6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cdba:	3f01      	subs	r7, #1
 800cdbc:	e757      	b.n	800cc6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cdbe:	ad39      	add	r5, sp, #228	; 0xe4
 800cdc0:	ac19      	add	r4, sp, #100	; 0x64
 800cdc2:	e72d      	b.n	800cc20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cdc4:	4613      	mov	r3, r2
 800cdc6:	e744      	b.n	800cc52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cdc8:	4613      	mov	r3, r2
 800cdca:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800cdce:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800cdd0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800cdd4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800cdd8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800cddc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800cde0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800cde4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800cde8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800cdec:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800cdee:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800cdf2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800cdf6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800cdfa:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800cdfe:	960e      	str	r6, [sp, #56]	; 0x38
 800ce00:	469e      	mov	lr, r3
 800ce02:	461f      	mov	r7, r3
 800ce04:	f04f 0900 	mov.w	r9, #0
 800ce08:	2f00      	cmp	r7, #0
 800ce0a:	d146      	bne.n	800ce9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ce0c:	449c      	add	ip, r3
 800ce0e:	1ad7      	subs	r7, r2, r3
 800ce10:	f1b9 0f00 	cmp.w	r9, #0
 800ce14:	d009      	beq.n	800ce2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ce16:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800ce1a:	9039      	str	r0, [sp, #228]	; 0xe4
 800ce1c:	913d      	str	r1, [sp, #244]	; 0xf4
 800ce1e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ce22:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ce26:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ce2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ce2c:	910e      	str	r1, [sp, #56]	; 0x38
 800ce2e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ce32:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ce36:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ce3a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ce3e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ce42:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ce46:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ce4a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ce4e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ce52:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ce56:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ce5a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ce5e:	f04f 0800 	mov.w	r8, #0
 800ce62:	f1be 0f00 	cmp.w	lr, #0
 800ce66:	d030      	beq.n	800ceca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ce68:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ce6a:	4431      	add	r1, r6
 800ce6c:	4549      	cmp	r1, r9
 800ce6e:	4450      	add	r0, sl
 800ce70:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ce74:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ce78:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ce7c:	db08      	blt.n	800ce90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ce7e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ce82:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ce86:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ce8a:	3001      	adds	r0, #1
 800ce8c:	eba1 0109 	sub.w	r1, r1, r9
 800ce90:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ce94:	f04f 0801 	mov.w	r8, #1
 800ce98:	e7e3      	b.n	800ce62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ce9a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ce9c:	4431      	add	r1, r6
 800ce9e:	4541      	cmp	r1, r8
 800cea0:	4450      	add	r0, sl
 800cea2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cea6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ceaa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ceae:	db08      	blt.n	800cec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ceb0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ceb4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ceb8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cebc:	3001      	adds	r0, #1
 800cebe:	eba1 0108 	sub.w	r1, r1, r8
 800cec2:	3f01      	subs	r7, #1
 800cec4:	f04f 0901 	mov.w	r9, #1
 800cec8:	e79e      	b.n	800ce08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ceca:	449c      	add	ip, r3
 800cecc:	1aff      	subs	r7, r7, r3
 800cece:	f1b8 0f00 	cmp.w	r8, #0
 800ced2:	d009      	beq.n	800cee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ced4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ced8:	9019      	str	r0, [sp, #100]	; 0x64
 800ceda:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cede:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cee2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cee6:	911d      	str	r1, [sp, #116]	; 0x74
 800cee8:	1ad2      	subs	r2, r2, r3
 800ceea:	e6b5      	b.n	800cc58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ceec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ceee:	681b      	ldr	r3, [r3, #0]
 800cef0:	b923      	cbnz	r3, 800cefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cef2:	4b04      	ldr	r3, [pc, #16]	; (800cf04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800cef4:	6818      	ldr	r0, [r3, #0]
 800cef6:	6803      	ldr	r3, [r0, #0]
 800cef8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cefa:	4798      	blx	r3
 800cefc:	b05b      	add	sp, #364	; 0x16c
 800cefe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf02:	bf00      	nop
 800cf04:	2000bfcc 	.word	0x2000bfcc

0800cf08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800cf08:	b570      	push	{r4, r5, r6, lr}
 800cf0a:	4604      	mov	r4, r0
 800cf0c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800cf10:	9804      	ldr	r0, [sp, #16]
 800cf12:	6061      	str	r1, [r4, #4]
 800cf14:	2500      	movs	r5, #0
 800cf16:	8025      	strh	r5, [r4, #0]
 800cf18:	7223      	strb	r3, [r4, #8]
 800cf1a:	7266      	strb	r6, [r4, #9]
 800cf1c:	60e0      	str	r0, [r4, #12]
 800cf1e:	8222      	strh	r2, [r4, #16]
 800cf20:	8265      	strh	r5, [r4, #18]
 800cf22:	82a5      	strh	r5, [r4, #20]
 800cf24:	82e5      	strh	r5, [r4, #22]
 800cf26:	8325      	strh	r5, [r4, #24]
 800cf28:	8365      	strh	r5, [r4, #26]
 800cf2a:	83a5      	strh	r5, [r4, #28]
 800cf2c:	77a5      	strb	r5, [r4, #30]
 800cf2e:	b32e      	cbz	r6, 800cf7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800cf30:	6803      	ldr	r3, [r0, #0]
 800cf32:	695b      	ldr	r3, [r3, #20]
 800cf34:	4798      	blx	r3
 800cf36:	4606      	mov	r6, r0
 800cf38:	b300      	cbz	r0, 800cf7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800cf3a:	68e0      	ldr	r0, [r4, #12]
 800cf3c:	6803      	ldr	r3, [r0, #0]
 800cf3e:	4631      	mov	r1, r6
 800cf40:	68db      	ldr	r3, [r3, #12]
 800cf42:	4798      	blx	r3
 800cf44:	4605      	mov	r5, r0
 800cf46:	b1c8      	cbz	r0, 800cf7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800cf48:	7b43      	ldrb	r3, [r0, #13]
 800cf4a:	7a82      	ldrb	r2, [r0, #10]
 800cf4c:	005b      	lsls	r3, r3, #1
 800cf4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cf52:	4313      	orrs	r3, r2
 800cf54:	83a3      	strh	r3, [r4, #28]
 800cf56:	7a63      	ldrb	r3, [r4, #9]
 800cf58:	2b04      	cmp	r3, #4
 800cf5a:	d10f      	bne.n	800cf7c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800cf5c:	68e0      	ldr	r0, [r4, #12]
 800cf5e:	6803      	ldr	r3, [r0, #0]
 800cf60:	462a      	mov	r2, r5
 800cf62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cf64:	4631      	mov	r1, r6
 800cf66:	4798      	blx	r3
 800cf68:	7b6b      	ldrb	r3, [r5, #13]
 800cf6a:	005b      	lsls	r3, r3, #1
 800cf6c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cf70:	7aab      	ldrb	r3, [r5, #10]
 800cf72:	4313      	orrs	r3, r2
 800cf74:	4418      	add	r0, r3
 800cf76:	8ba3      	ldrh	r3, [r4, #28]
 800cf78:	4418      	add	r0, r3
 800cf7a:	83a0      	strh	r0, [r4, #28]
 800cf7c:	4620      	mov	r0, r4
 800cf7e:	bd70      	pop	{r4, r5, r6, pc}

0800cf80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800cf80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf84:	2400      	movs	r4, #0
 800cf86:	b085      	sub	sp, #20
 800cf88:	4681      	mov	r9, r0
 800cf8a:	4688      	mov	r8, r1
 800cf8c:	4692      	mov	sl, r2
 800cf8e:	469b      	mov	fp, r3
 800cf90:	4627      	mov	r7, r4
 800cf92:	4625      	mov	r5, r4
 800cf94:	4626      	mov	r6, r4
 800cf96:	4554      	cmp	r4, sl
 800cf98:	da2a      	bge.n	800cff0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800cf9a:	2300      	movs	r3, #0
 800cf9c:	9303      	str	r3, [sp, #12]
 800cf9e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800cfa2:	429d      	cmp	r5, r3
 800cfa4:	d004      	beq.n	800cfb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800cfa6:	f242 030b 	movw	r3, #8203	; 0x200b
 800cfaa:	429d      	cmp	r5, r3
 800cfac:	bf18      	it	ne
 800cfae:	462f      	movne	r7, r5
 800cfb0:	ab03      	add	r3, sp, #12
 800cfb2:	4642      	mov	r2, r8
 800cfb4:	4659      	mov	r1, fp
 800cfb6:	4648      	mov	r0, r9
 800cfb8:	f002 feec 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cfbc:	4605      	mov	r5, r0
 800cfbe:	b1b8      	cbz	r0, 800cff0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800cfc0:	280a      	cmp	r0, #10
 800cfc2:	d015      	beq.n	800cff0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800cfc4:	9a03      	ldr	r2, [sp, #12]
 800cfc6:	b18a      	cbz	r2, 800cfec <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800cfc8:	7b50      	ldrb	r0, [r2, #13]
 800cfca:	7a93      	ldrb	r3, [r2, #10]
 800cfcc:	8895      	ldrh	r5, [r2, #4]
 800cfce:	0040      	lsls	r0, r0, #1
 800cfd0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800cfd4:	4303      	orrs	r3, r0
 800cfd6:	9301      	str	r3, [sp, #4]
 800cfd8:	f8d8 3000 	ldr.w	r3, [r8]
 800cfdc:	4639      	mov	r1, r7
 800cfde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cfe0:	4640      	mov	r0, r8
 800cfe2:	4798      	blx	r3
 800cfe4:	9b01      	ldr	r3, [sp, #4]
 800cfe6:	4418      	add	r0, r3
 800cfe8:	4406      	add	r6, r0
 800cfea:	b2b6      	uxth	r6, r6
 800cfec:	3401      	adds	r4, #1
 800cfee:	e7d2      	b.n	800cf96 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800cff0:	4630      	mov	r0, r6
 800cff2:	b005      	add	sp, #20
 800cff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cff8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800cff8:	2a02      	cmp	r2, #2
 800cffa:	b530      	push	{r4, r5, lr}
 800cffc:	d011      	beq.n	800d022 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800cffe:	2a03      	cmp	r2, #3
 800d000:	d01c      	beq.n	800d03c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d002:	2a01      	cmp	r2, #1
 800d004:	d10c      	bne.n	800d020 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d006:	888b      	ldrh	r3, [r1, #4]
 800d008:	8801      	ldrh	r1, [r0, #0]
 800d00a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d00e:	8844      	ldrh	r4, [r0, #2]
 800d010:	8004      	strh	r4, [r0, #0]
 800d012:	1a5b      	subs	r3, r3, r1
 800d014:	1a9b      	subs	r3, r3, r2
 800d016:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d01a:	8043      	strh	r3, [r0, #2]
 800d01c:	8081      	strh	r1, [r0, #4]
 800d01e:	80c2      	strh	r2, [r0, #6]
 800d020:	bd30      	pop	{r4, r5, pc}
 800d022:	88cb      	ldrh	r3, [r1, #6]
 800d024:	8842      	ldrh	r2, [r0, #2]
 800d026:	1a9b      	subs	r3, r3, r2
 800d028:	88c2      	ldrh	r2, [r0, #6]
 800d02a:	1a9b      	subs	r3, r3, r2
 800d02c:	888a      	ldrh	r2, [r1, #4]
 800d02e:	8801      	ldrh	r1, [r0, #0]
 800d030:	8043      	strh	r3, [r0, #2]
 800d032:	1a52      	subs	r2, r2, r1
 800d034:	8881      	ldrh	r1, [r0, #4]
 800d036:	1a52      	subs	r2, r2, r1
 800d038:	8002      	strh	r2, [r0, #0]
 800d03a:	e7f1      	b.n	800d020 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d03c:	88cb      	ldrh	r3, [r1, #6]
 800d03e:	8841      	ldrh	r1, [r0, #2]
 800d040:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d044:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d048:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d04c:	8045      	strh	r5, [r0, #2]
 800d04e:	1a5b      	subs	r3, r3, r1
 800d050:	1a9b      	subs	r3, r3, r2
 800d052:	8003      	strh	r3, [r0, #0]
 800d054:	8082      	strh	r2, [r0, #4]
 800d056:	80c4      	strh	r4, [r0, #6]
 800d058:	e7e2      	b.n	800d020 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d05a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d05a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d05e:	b09f      	sub	sp, #124	; 0x7c
 800d060:	9116      	str	r1, [sp, #88]	; 0x58
 800d062:	9317      	str	r3, [sp, #92]	; 0x5c
 800d064:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d066:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d068:	8809      	ldrh	r1, [r1, #0]
 800d06a:	889b      	ldrh	r3, [r3, #4]
 800d06c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d070:	9212      	str	r2, [sp, #72]	; 0x48
 800d072:	440b      	add	r3, r1
 800d074:	b21b      	sxth	r3, r3
 800d076:	9310      	str	r3, [sp, #64]	; 0x40
 800d078:	f8d8 3000 	ldr.w	r3, [r8]
 800d07c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d080:	7a59      	ldrb	r1, [r3, #9]
 800d082:	7a1b      	ldrb	r3, [r3, #8]
 800d084:	9011      	str	r0, [sp, #68]	; 0x44
 800d086:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d08a:	9114      	str	r1, [sp, #80]	; 0x50
 800d08c:	9315      	str	r3, [sp, #84]	; 0x54
 800d08e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800d092:	2a00      	cmp	r2, #0
 800d094:	d067      	beq.n	800d166 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800d096:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d09a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d09c:	2b04      	cmp	r3, #4
 800d09e:	bf14      	ite	ne
 800d0a0:	2301      	movne	r3, #1
 800d0a2:	2302      	moveq	r3, #2
 800d0a4:	4413      	add	r3, r2
 800d0a6:	f04f 0900 	mov.w	r9, #0
 800d0aa:	930f      	str	r3, [sp, #60]	; 0x3c
 800d0ac:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d0b0:	464c      	mov	r4, r9
 800d0b2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d0b6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d0ba:	4293      	cmp	r3, r2
 800d0bc:	f280 808c 	bge.w	800d1d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800d0c0:	2300      	movs	r3, #0
 800d0c2:	931c      	str	r3, [sp, #112]	; 0x70
 800d0c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d0c8:	429c      	cmp	r4, r3
 800d0ca:	d006      	beq.n	800d0da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800d0cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0ce:	f242 020b 	movw	r2, #8203	; 0x200b
 800d0d2:	4294      	cmp	r4, r2
 800d0d4:	bf18      	it	ne
 800d0d6:	4623      	movne	r3, r4
 800d0d8:	930d      	str	r3, [sp, #52]	; 0x34
 800d0da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d0dc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d0de:	f8d8 2000 	ldr.w	r2, [r8]
 800d0e2:	428b      	cmp	r3, r1
 800d0e4:	db41      	blt.n	800d16a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800d0e6:	6813      	ldr	r3, [r2, #0]
 800d0e8:	4610      	mov	r0, r2
 800d0ea:	695b      	ldr	r3, [r3, #20]
 800d0ec:	4798      	blx	r3
 800d0ee:	4604      	mov	r4, r0
 800d0f0:	f8d8 0000 	ldr.w	r0, [r8]
 800d0f4:	6803      	ldr	r3, [r0, #0]
 800d0f6:	aa1d      	add	r2, sp, #116	; 0x74
 800d0f8:	689e      	ldr	r6, [r3, #8]
 800d0fa:	4621      	mov	r1, r4
 800d0fc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d100:	47b0      	blx	r6
 800d102:	901c      	str	r0, [sp, #112]	; 0x70
 800d104:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d108:	429c      	cmp	r4, r3
 800d10a:	f000 80e9 	beq.w	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d10e:	f242 030b 	movw	r3, #8203	; 0x200b
 800d112:	429c      	cmp	r4, r3
 800d114:	f000 80e4 	beq.w	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d118:	2c00      	cmp	r4, #0
 800d11a:	f000 80f6 	beq.w	800d30a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d11e:	2c0a      	cmp	r4, #10
 800d120:	d060      	beq.n	800d1e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800d122:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d124:	b36a      	cbz	r2, 800d182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800d126:	8894      	ldrh	r4, [r2, #4]
 800d128:	f1bb 0f00 	cmp.w	fp, #0
 800d12c:	d03b      	beq.n	800d1a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800d12e:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d132:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d136:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d13a:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d13e:	f1bb 0f01 	cmp.w	fp, #1
 800d142:	ea49 0903 	orr.w	r9, r9, r3
 800d146:	d134      	bne.n	800d1b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800d148:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d14a:	eba5 0509 	sub.w	r5, r5, r9
 800d14e:	2b00      	cmp	r3, #0
 800d150:	d14f      	bne.n	800d1f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800d152:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d154:	eb09 0305 	add.w	r3, r9, r5
 800d158:	4413      	add	r3, r2
 800d15a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d15c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d160:	4293      	cmp	r3, r2
 800d162:	da51      	bge.n	800d208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d164:	e038      	b.n	800d1d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800d166:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d168:	e79d      	b.n	800d0a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800d16a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d16e:	9301      	str	r3, [sp, #4]
 800d170:	ab1d      	add	r3, sp, #116	; 0x74
 800d172:	9300      	str	r3, [sp, #0]
 800d174:	4659      	mov	r1, fp
 800d176:	ab1c      	add	r3, sp, #112	; 0x70
 800d178:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d17a:	f002 fe63 	bl	800fe44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d17e:	4604      	mov	r4, r0
 800d180:	e7c0      	b.n	800d104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800d182:	f8d8 0000 	ldr.w	r0, [r8]
 800d186:	6803      	ldr	r3, [r0, #0]
 800d188:	691b      	ldr	r3, [r3, #16]
 800d18a:	4798      	blx	r3
 800d18c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d190:	4298      	cmp	r0, r3
 800d192:	f000 80a5 	beq.w	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d196:	f242 030b 	movw	r3, #8203	; 0x200b
 800d19a:	4298      	cmp	r0, r3
 800d19c:	f000 80a0 	beq.w	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d1a0:	f1bb 0f00 	cmp.w	fp, #0
 800d1a4:	d100      	bne.n	800d1a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800d1a6:	444d      	add	r5, r9
 800d1a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d1aa:	2a00      	cmp	r2, #0
 800d1ac:	d1bf      	bne.n	800d12e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800d1ae:	4691      	mov	r9, r2
 800d1b0:	e096      	b.n	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d1b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d1b4:	2b00      	cmp	r3, #0
 800d1b6:	f000 80aa 	beq.w	800d30e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800d1ba:	f1bb 0f00 	cmp.w	fp, #0
 800d1be:	d118      	bne.n	800d1f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800d1c0:	f8d8 0000 	ldr.w	r0, [r8]
 800d1c4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d1c6:	6803      	ldr	r3, [r0, #0]
 800d1c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1ca:	4798      	blx	r3
 800d1cc:	4405      	add	r5, r0
 800d1ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d1d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d1d2:	1aeb      	subs	r3, r5, r3
 800d1d4:	4293      	cmp	r3, r2
 800d1d6:	dd17      	ble.n	800d208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d1d8:	2c00      	cmp	r4, #0
 800d1da:	f000 8096 	beq.w	800d30a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d1de:	2c0a      	cmp	r4, #10
 800d1e0:	f040 8084 	bne.w	800d2ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d1e4:	240a      	movs	r4, #10
 800d1e6:	fab4 f084 	clz	r0, r4
 800d1ea:	0940      	lsrs	r0, r0, #5
 800d1ec:	b01f      	add	sp, #124	; 0x7c
 800d1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1f2:	f8d8 0000 	ldr.w	r0, [r8]
 800d1f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d1f8:	6803      	ldr	r3, [r0, #0]
 800d1fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1fc:	4798      	blx	r3
 800d1fe:	f1bb 0f01 	cmp.w	fp, #1
 800d202:	eba5 0500 	sub.w	r5, r5, r0
 800d206:	d0a4      	beq.n	800d152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800d208:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d20a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d20c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d210:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d214:	7b43      	ldrb	r3, [r0, #13]
 800d216:	015b      	lsls	r3, r3, #5
 800d218:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d21c:	7983      	ldrb	r3, [r0, #6]
 800d21e:	4429      	add	r1, r5
 800d220:	4313      	orrs	r3, r2
 800d222:	440b      	add	r3, r1
 800d224:	42b3      	cmp	r3, r6
 800d226:	db5b      	blt.n	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d228:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d22a:	4299      	cmp	r1, r3
 800d22c:	da58      	bge.n	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d22e:	f8d8 0000 	ldr.w	r0, [r8]
 800d232:	6803      	ldr	r3, [r0, #0]
 800d234:	42ae      	cmp	r6, r5
 800d236:	bfc8      	it	gt
 800d238:	1b76      	subgt	r6, r6, r5
 800d23a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d23c:	bfcc      	ite	gt
 800d23e:	b2b6      	uxthgt	r6, r6
 800d240:	2600      	movle	r6, #0
 800d242:	4798      	blx	r3
 800d244:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d246:	7b5a      	ldrb	r2, [r3, #13]
 800d248:	00d1      	lsls	r1, r2, #3
 800d24a:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d24e:	7a19      	ldrb	r1, [r3, #8]
 800d250:	4339      	orrs	r1, r7
 800d252:	0657      	lsls	r7, r2, #25
 800d254:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d256:	bf44      	itt	mi
 800d258:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d25c:	b209      	sxthmi	r1, r1
 800d25e:	19c7      	adds	r7, r0, r7
 800d260:	1a7f      	subs	r7, r7, r1
 800d262:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d264:	b2bf      	uxth	r7, r7
 800d266:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d26a:	fa0f fa87 	sxth.w	sl, r7
 800d26e:	4551      	cmp	r1, sl
 800d270:	dd3a      	ble.n	800d2e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d272:	0112      	lsls	r2, r2, #4
 800d274:	79d8      	ldrb	r0, [r3, #7]
 800d276:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d27a:	4302      	orrs	r2, r0
 800d27c:	4492      	add	sl, r2
 800d27e:	4551      	cmp	r1, sl
 800d280:	dc2e      	bgt.n	800d2e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d282:	1bcf      	subs	r7, r1, r7
 800d284:	b2bf      	uxth	r7, r7
 800d286:	468a      	mov	sl, r1
 800d288:	9319      	str	r3, [sp, #100]	; 0x64
 800d28a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d28c:	f8d8 0000 	ldr.w	r0, [r8]
 800d290:	681a      	ldr	r2, [r3, #0]
 800d292:	6801      	ldr	r1, [r0, #0]
 800d294:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800d296:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d298:	9313      	str	r3, [sp, #76]	; 0x4c
 800d29a:	9218      	str	r2, [sp, #96]	; 0x60
 800d29c:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d29e:	4788      	blx	r1
 800d2a0:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d2a4:	910b      	str	r1, [sp, #44]	; 0x2c
 800d2a6:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d2aa:	910a      	str	r1, [sp, #40]	; 0x28
 800d2ac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d2b0:	9109      	str	r1, [sp, #36]	; 0x24
 800d2b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d2b4:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d2b8:	9305      	str	r3, [sp, #20]
 800d2ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d2bc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d2be:	9206      	str	r2, [sp, #24]
 800d2c0:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d2c4:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d2c8:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d2cc:	442e      	add	r6, r5
 800d2ce:	b236      	sxth	r6, r6
 800d2d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d2d2:	9600      	str	r6, [sp, #0]
 800d2d4:	681a      	ldr	r2, [r3, #0]
 800d2d6:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d2d8:	685b      	ldr	r3, [r3, #4]
 800d2da:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d2dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d2de:	47b0      	blx	r6
 800d2e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d2e2:	3301      	adds	r3, #1
 800d2e4:	930e      	str	r3, [sp, #56]	; 0x38
 800d2e6:	e6e6      	b.n	800d0b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800d2e8:	2700      	movs	r7, #0
 800d2ea:	e7cd      	b.n	800d288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800d2ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d2ee:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d2f0:	3501      	adds	r5, #1
 800d2f2:	429d      	cmp	r5, r3
 800d2f4:	f6bf af77 	bge.w	800d1e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d2f8:	4659      	mov	r1, fp
 800d2fa:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d2fc:	f7f5 ffbc 	bl	8003278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d300:	4604      	mov	r4, r0
 800d302:	b110      	cbz	r0, 800d30a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d304:	280a      	cmp	r0, #10
 800d306:	d1f2      	bne.n	800d2ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800d308:	e76c      	b.n	800d1e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800d30a:	2400      	movs	r4, #0
 800d30c:	e76b      	b.n	800d1e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d30e:	f1bb 0f00 	cmp.w	fp, #0
 800d312:	f43f af5c 	beq.w	800d1ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800d316:	e777      	b.n	800d208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800d318 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d318:	b530      	push	{r4, r5, lr}
 800d31a:	8a44      	ldrh	r4, [r0, #18]
 800d31c:	8ac5      	ldrh	r5, [r0, #22]
 800d31e:	82c3      	strh	r3, [r0, #22]
 800d320:	442c      	add	r4, r5
 800d322:	1ae4      	subs	r4, r4, r3
 800d324:	8244      	strh	r4, [r0, #18]
 800d326:	8b03      	ldrh	r3, [r0, #24]
 800d328:	8a84      	ldrh	r4, [r0, #20]
 800d32a:	4422      	add	r2, r4
 800d32c:	440c      	add	r4, r1
 800d32e:	1a59      	subs	r1, r3, r1
 800d330:	8342      	strh	r2, [r0, #26]
 800d332:	8284      	strh	r4, [r0, #20]
 800d334:	8301      	strh	r1, [r0, #24]
 800d336:	bd30      	pop	{r4, r5, pc}

0800d338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d33c:	7a43      	ldrb	r3, [r0, #9]
 800d33e:	1eda      	subs	r2, r3, #3
 800d340:	b087      	sub	sp, #28
 800d342:	4604      	mov	r4, r0
 800d344:	b2d2      	uxtb	r2, r2
 800d346:	460f      	mov	r7, r1
 800d348:	2900      	cmp	r1, #0
 800d34a:	d036      	beq.n	800d3ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d34c:	2a01      	cmp	r2, #1
 800d34e:	d932      	bls.n	800d3b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d350:	1e58      	subs	r0, r3, #1
 800d352:	f1d0 0b00 	rsbs	fp, r0, #0
 800d356:	eb4b 0b00 	adc.w	fp, fp, r0
 800d35a:	1e99      	subs	r1, r3, #2
 800d35c:	424b      	negs	r3, r1
 800d35e:	414b      	adcs	r3, r1
 800d360:	9303      	str	r3, [sp, #12]
 800d362:	2300      	movs	r3, #0
 800d364:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d368:	2500      	movs	r5, #0
 800d36a:	8265      	strh	r5, [r4, #18]
 800d36c:	82a5      	strh	r5, [r4, #20]
 800d36e:	46a9      	mov	r9, r5
 800d370:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d374:	2300      	movs	r3, #0
 800d376:	9305      	str	r3, [sp, #20]
 800d378:	8823      	ldrh	r3, [r4, #0]
 800d37a:	2b20      	cmp	r3, #32
 800d37c:	d02b      	beq.n	800d3d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d37e:	eba3 020a 	sub.w	r2, r3, sl
 800d382:	4256      	negs	r6, r2
 800d384:	4156      	adcs	r6, r2
 800d386:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d38a:	4293      	cmp	r3, r2
 800d38c:	d004      	beq.n	800d398 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d38e:	4553      	cmp	r3, sl
 800d390:	bf16      	itet	ne
 800d392:	4699      	movne	r9, r3
 800d394:	2601      	moveq	r6, #1
 800d396:	2600      	movne	r6, #0
 800d398:	ab05      	add	r3, sp, #20
 800d39a:	68e2      	ldr	r2, [r4, #12]
 800d39c:	7a21      	ldrb	r1, [r4, #8]
 800d39e:	6860      	ldr	r0, [r4, #4]
 800d3a0:	f002 fcf8 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d3a4:	8020      	strh	r0, [r4, #0]
 800d3a6:	b9c8      	cbnz	r0, 800d3dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d3a8:	8b22      	ldrh	r2, [r4, #24]
 800d3aa:	2300      	movs	r3, #0
 800d3ac:	4611      	mov	r1, r2
 800d3ae:	4620      	mov	r0, r4
 800d3b0:	f7ff ffb2 	bl	800d318 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d3b4:	e066      	b.n	800d484 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d3b6:	468b      	mov	fp, r1
 800d3b8:	e7cf      	b.n	800d35a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d3ba:	3b01      	subs	r3, #1
 800d3bc:	2a01      	cmp	r2, #1
 800d3be:	bf8c      	ite	hi
 800d3c0:	2200      	movhi	r2, #0
 800d3c2:	2201      	movls	r2, #1
 800d3c4:	2b01      	cmp	r3, #1
 800d3c6:	bf8c      	ite	hi
 800d3c8:	2300      	movhi	r3, #0
 800d3ca:	2301      	movls	r3, #1
 800d3cc:	9202      	str	r2, [sp, #8]
 800d3ce:	9301      	str	r3, [sp, #4]
 800d3d0:	9103      	str	r1, [sp, #12]
 800d3d2:	468b      	mov	fp, r1
 800d3d4:	e7c8      	b.n	800d368 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d3d6:	4699      	mov	r9, r3
 800d3d8:	2601      	movs	r6, #1
 800d3da:	e7dd      	b.n	800d398 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d3dc:	8ae3      	ldrh	r3, [r4, #22]
 800d3de:	280a      	cmp	r0, #10
 800d3e0:	f103 0301 	add.w	r3, r3, #1
 800d3e4:	82e3      	strh	r3, [r4, #22]
 800d3e6:	d0df      	beq.n	800d3a8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d3e8:	9a05      	ldr	r2, [sp, #20]
 800d3ea:	bb42      	cbnz	r2, 800d43e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d3ec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d3f0:	4298      	cmp	r0, r3
 800d3f2:	d001      	beq.n	800d3f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d3f4:	4550      	cmp	r0, sl
 800d3f6:	d1bd      	bne.n	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d3f8:	8823      	ldrh	r3, [r4, #0]
 800d3fa:	8b21      	ldrh	r1, [r4, #24]
 800d3fc:	2b20      	cmp	r3, #32
 800d3fe:	d001      	beq.n	800d404 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d400:	4553      	cmp	r3, sl
 800d402:	d131      	bne.n	800d468 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d404:	2e00      	cmp	r6, #0
 800d406:	bf0a      	itet	eq
 800d408:	460d      	moveq	r5, r1
 800d40a:	4630      	movne	r0, r6
 800d40c:	2001      	moveq	r0, #1
 800d40e:	440a      	add	r2, r1
 800d410:	8aa3      	ldrh	r3, [r4, #20]
 800d412:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d416:	b292      	uxth	r2, r2
 800d418:	8322      	strh	r2, [r4, #24]
 800d41a:	4413      	add	r3, r2
 800d41c:	2f00      	cmp	r7, #0
 800d41e:	d03a      	beq.n	800d496 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d420:	f1bb 0f00 	cmp.w	fp, #0
 800d424:	d102      	bne.n	800d42c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d426:	9903      	ldr	r1, [sp, #12]
 800d428:	b301      	cbz	r1, 800d46c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d42a:	b1f8      	cbz	r0, 800d46c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d42c:	8ba1      	ldrh	r1, [r4, #28]
 800d42e:	4419      	add	r1, r3
 800d430:	458c      	cmp	ip, r1
 800d432:	da2a      	bge.n	800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d434:	8a61      	ldrh	r1, [r4, #18]
 800d436:	b341      	cbz	r1, 800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d438:	4563      	cmp	r3, ip
 800d43a:	dd9b      	ble.n	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d43c:	e01c      	b.n	800d478 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d43e:	8893      	ldrh	r3, [r2, #4]
 800d440:	8023      	strh	r3, [r4, #0]
 800d442:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d446:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d44a:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d44e:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d452:	ea48 0800 	orr.w	r8, r8, r0
 800d456:	68e0      	ldr	r0, [r4, #12]
 800d458:	6803      	ldr	r3, [r0, #0]
 800d45a:	4649      	mov	r1, r9
 800d45c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d45e:	4798      	blx	r3
 800d460:	eb08 0200 	add.w	r2, r8, r0
 800d464:	b292      	uxth	r2, r2
 800d466:	e7c7      	b.n	800d3f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d468:	2000      	movs	r0, #0
 800d46a:	e7d0      	b.n	800d40e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d46c:	4563      	cmp	r3, ip
 800d46e:	dd81      	ble.n	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d470:	8a63      	ldrh	r3, [r4, #18]
 800d472:	2b00      	cmp	r3, #0
 800d474:	f43f af7e 	beq.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d478:	2301      	movs	r3, #1
 800d47a:	77a3      	strb	r3, [r4, #30]
 800d47c:	8ba2      	ldrh	r2, [r4, #28]
 800d47e:	8b63      	ldrh	r3, [r4, #26]
 800d480:	4413      	add	r3, r2
 800d482:	8363      	strh	r3, [r4, #26]
 800d484:	b007      	add	sp, #28
 800d486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d48a:	2300      	movs	r3, #0
 800d48c:	4611      	mov	r1, r2
 800d48e:	4620      	mov	r0, r4
 800d490:	f7ff ff42 	bl	800d318 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d494:	e76e      	b.n	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d496:	4563      	cmp	r3, ip
 800d498:	dd14      	ble.n	800d4c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d49a:	9b02      	ldr	r3, [sp, #8]
 800d49c:	b113      	cbz	r3, 800d4a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d49e:	2301      	movs	r3, #1
 800d4a0:	460a      	mov	r2, r1
 800d4a2:	e783      	b.n	800d3ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d4a4:	9b01      	ldr	r3, [sp, #4]
 800d4a6:	2b00      	cmp	r3, #0
 800d4a8:	f43f af64 	beq.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4ac:	2800      	cmp	r0, #0
 800d4ae:	f47f af61 	bne.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4b2:	b116      	cbz	r6, 800d4ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d4b4:	2301      	movs	r3, #1
 800d4b6:	462a      	mov	r2, r5
 800d4b8:	e779      	b.n	800d3ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d4ba:	8a63      	ldrh	r3, [r4, #18]
 800d4bc:	2b00      	cmp	r3, #0
 800d4be:	f43f af59 	beq.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4c2:	e7df      	b.n	800d484 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d4c4:	2800      	cmp	r0, #0
 800d4c6:	f47f af55 	bne.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4ca:	2e00      	cmp	r6, #0
 800d4cc:	f43f af52 	beq.w	800d374 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4d0:	2301      	movs	r3, #1
 800d4d2:	462a      	mov	r2, r5
 800d4d4:	e7db      	b.n	800d48e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d4d6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d4d6:	b530      	push	{r4, r5, lr}
 800d4d8:	4605      	mov	r5, r0
 800d4da:	b08b      	sub	sp, #44	; 0x2c
 800d4dc:	b191      	cbz	r1, 800d504 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d4de:	e9cd 3100 	strd	r3, r1, [sp]
 800d4e2:	4613      	mov	r3, r2
 800d4e4:	4601      	mov	r1, r0
 800d4e6:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d4ea:	a802      	add	r0, sp, #8
 800d4ec:	f7ff fd0c 	bl	800cf08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d4f0:	2401      	movs	r4, #1
 800d4f2:	2100      	movs	r1, #0
 800d4f4:	a802      	add	r0, sp, #8
 800d4f6:	f7ff ff1f 	bl	800d338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d4fa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d4fe:	b163      	cbz	r3, 800d51a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d500:	3401      	adds	r4, #1
 800d502:	e7f6      	b.n	800d4f2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d504:	f002 fd40 	bl	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d508:	2401      	movs	r4, #1
 800d50a:	280a      	cmp	r0, #10
 800d50c:	4628      	mov	r0, r5
 800d50e:	bf08      	it	eq
 800d510:	3401      	addeq	r4, #1
 800d512:	f002 fd39 	bl	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d516:	2800      	cmp	r0, #0
 800d518:	d1f7      	bne.n	800d50a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d51a:	b2a0      	uxth	r0, r4
 800d51c:	b00b      	add	sp, #44	; 0x2c
 800d51e:	bd30      	pop	{r4, r5, pc}

0800d520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d524:	b0e5      	sub	sp, #404	; 0x194
 800d526:	4689      	mov	r9, r1
 800d528:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800d52c:	900a      	str	r0, [sp, #40]	; 0x28
 800d52e:	461c      	mov	r4, r3
 800d530:	f1ba 0f00 	cmp.w	sl, #0
 800d534:	f000 80b4 	beq.w	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d538:	681b      	ldr	r3, [r3, #0]
 800d53a:	2b00      	cmp	r3, #0
 800d53c:	f000 80b0 	beq.w	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d540:	7ba3      	ldrb	r3, [r4, #14]
 800d542:	2b00      	cmp	r3, #0
 800d544:	f000 80ac 	beq.w	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d548:	6810      	ldr	r0, [r2, #0]
 800d54a:	6851      	ldr	r1, [r2, #4]
 800d54c:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d550:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800d554:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800d558:	4643      	mov	r3, r8
 800d55a:	c303      	stmia	r3!, {r0, r1}
 800d55c:	2500      	movs	r5, #0
 800d55e:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d562:	79a2      	ldrb	r2, [r4, #6]
 800d564:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d568:	a90f      	add	r1, sp, #60	; 0x3c
 800d56a:	4640      	mov	r0, r8
 800d56c:	950f      	str	r5, [sp, #60]	; 0x3c
 800d56e:	f7ff fd43 	bl	800cff8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d572:	a90f      	add	r1, sp, #60	; 0x3c
 800d574:	4608      	mov	r0, r1
 800d576:	79a2      	ldrb	r2, [r4, #6]
 800d578:	af19      	add	r7, sp, #100	; 0x64
 800d57a:	f7ff fd3d 	bl	800cff8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d57e:	4638      	mov	r0, r7
 800d580:	f002 f88c 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800d584:	6820      	ldr	r0, [r4, #0]
 800d586:	6803      	ldr	r3, [r0, #0]
 800d588:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d58a:	4798      	blx	r3
 800d58c:	4606      	mov	r6, r0
 800d58e:	6820      	ldr	r0, [r4, #0]
 800d590:	6803      	ldr	r3, [r0, #0]
 800d592:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d594:	4798      	blx	r3
 800d596:	4633      	mov	r3, r6
 800d598:	9000      	str	r0, [sp, #0]
 800d59a:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d59c:	4651      	mov	r1, sl
 800d59e:	4638      	mov	r0, r7
 800d5a0:	f002 f8e8 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d5a4:	6820      	ldr	r0, [r4, #0]
 800d5a6:	7923      	ldrb	r3, [r4, #4]
 800d5a8:	9308      	str	r3, [sp, #32]
 800d5aa:	6803      	ldr	r3, [r0, #0]
 800d5ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d5ae:	4798      	blx	r3
 800d5b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d5b4:	181e      	adds	r6, r3, r0
 800d5b6:	42ae      	cmp	r6, r5
 800d5b8:	dd06      	ble.n	800d5c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800d5ba:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800d5be:	4282      	cmp	r2, r0
 800d5c0:	bfa4      	itt	ge
 800d5c2:	189d      	addge	r5, r3, r2
 800d5c4:	fb95 f5f6 	sdivge	r5, r5, r6
 800d5c8:	a832      	add	r0, sp, #200	; 0xc8
 800d5ca:	f002 f867 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800d5ce:	7c23      	ldrb	r3, [r4, #16]
 800d5d0:	b17b      	cbz	r3, 800d5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800d5d2:	6820      	ldr	r0, [r4, #0]
 800d5d4:	6803      	ldr	r3, [r0, #0]
 800d5d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5d8:	4798      	blx	r3
 800d5da:	4683      	mov	fp, r0
 800d5dc:	6820      	ldr	r0, [r4, #0]
 800d5de:	6803      	ldr	r3, [r0, #0]
 800d5e0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d5e2:	4798      	blx	r3
 800d5e4:	465b      	mov	r3, fp
 800d5e6:	9000      	str	r0, [sp, #0]
 800d5e8:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d5ea:	4651      	mov	r1, sl
 800d5ec:	a832      	add	r0, sp, #200	; 0xc8
 800d5ee:	f002 f8c1 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d5f2:	7be1      	ldrb	r1, [r4, #15]
 800d5f4:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d5f8:	7963      	ldrb	r3, [r4, #5]
 800d5fa:	1a52      	subs	r2, r2, r1
 800d5fc:	7c21      	ldrb	r1, [r4, #16]
 800d5fe:	9101      	str	r1, [sp, #4]
 800d600:	6821      	ldr	r1, [r4, #0]
 800d602:	9100      	str	r1, [sp, #0]
 800d604:	b292      	uxth	r2, r2
 800d606:	a932      	add	r1, sp, #200	; 0xc8
 800d608:	a811      	add	r0, sp, #68	; 0x44
 800d60a:	f7ff fc7d 	bl	800cf08 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d60e:	7c23      	ldrb	r3, [r4, #16]
 800d610:	b9bb      	cbnz	r3, 800d642 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800d612:	fa1f fa86 	uxth.w	sl, r6
 800d616:	2d00      	cmp	r5, #0
 800d618:	dd45      	ble.n	800d6a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d61a:	4638      	mov	r0, r7
 800d61c:	f002 fcb4 	bl	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d620:	2800      	cmp	r0, #0
 800d622:	d03d      	beq.n	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d624:	280a      	cmp	r0, #10
 800d626:	d1f6      	bne.n	800d616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d628:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d62c:	4453      	add	r3, sl
 800d62e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d632:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d636:	eba3 030a 	sub.w	r3, r3, sl
 800d63a:	3d01      	subs	r5, #1
 800d63c:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d640:	e7e9      	b.n	800d616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d642:	0073      	lsls	r3, r6, #1
 800d644:	9309      	str	r3, [sp, #36]	; 0x24
 800d646:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800d64a:	fa1f fa86 	uxth.w	sl, r6
 800d64e:	2d00      	cmp	r5, #0
 800d650:	dd29      	ble.n	800d6a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d652:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d658:	428b      	cmp	r3, r1
 800d65a:	bfd4      	ite	le
 800d65c:	2100      	movle	r1, #0
 800d65e:	2101      	movgt	r1, #1
 800d660:	a811      	add	r0, sp, #68	; 0x44
 800d662:	f7ff fe69 	bl	800d338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d666:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800d66a:	3b01      	subs	r3, #1
 800d66c:	b29b      	uxth	r3, r3
 800d66e:	455b      	cmp	r3, fp
 800d670:	930b      	str	r3, [sp, #44]	; 0x2c
 800d672:	d005      	beq.n	800d680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800d674:	7961      	ldrb	r1, [r4, #5]
 800d676:	4638      	mov	r0, r7
 800d678:	f7f5 fdfe 	bl	8003278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d67c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d67e:	e7f4      	b.n	800d66a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800d680:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d684:	4453      	add	r3, sl
 800d686:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d68a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d68e:	eba3 030a 	sub.w	r3, r3, sl
 800d692:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d696:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d69a:	3d01      	subs	r5, #1
 800d69c:	2b00      	cmp	r3, #0
 800d69e:	d1d6      	bne.n	800d64e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800d6a0:	b065      	add	sp, #404	; 0x194
 800d6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6a6:	0075      	lsls	r5, r6, #1
 800d6a8:	f04f 0a00 	mov.w	sl, #0
 800d6ac:	7c23      	ldrb	r3, [r4, #16]
 800d6ae:	2b00      	cmp	r3, #0
 800d6b0:	d066      	beq.n	800d780 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800d6b2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d6b6:	428d      	cmp	r5, r1
 800d6b8:	bfd4      	ite	le
 800d6ba:	2100      	movle	r1, #0
 800d6bc:	2101      	movgt	r1, #1
 800d6be:	a811      	add	r0, sp, #68	; 0x44
 800d6c0:	f7ff fe3a 	bl	800d338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d6c4:	9b08      	ldr	r3, [sp, #32]
 800d6c6:	2b00      	cmp	r3, #0
 800d6c8:	d055      	beq.n	800d776 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d6ca:	f894 b010 	ldrb.w	fp, [r4, #16]
 800d6ce:	2264      	movs	r2, #100	; 0x64
 800d6d0:	4639      	mov	r1, r7
 800d6d2:	a84b      	add	r0, sp, #300	; 0x12c
 800d6d4:	f00f ffec 	bl	801d6b0 <memcpy>
 800d6d8:	f1bb 0f00 	cmp.w	fp, #0
 800d6dc:	d058      	beq.n	800d790 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800d6de:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800d6e2:	7922      	ldrb	r2, [r4, #4]
 800d6e4:	2a01      	cmp	r2, #1
 800d6e6:	d13c      	bne.n	800d762 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800d6e8:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800d6ec:	1ac0      	subs	r0, r0, r3
 800d6ee:	2302      	movs	r3, #2
 800d6f0:	fb90 f0f3 	sdiv	r0, r0, r3
 800d6f4:	b200      	sxth	r0, r0
 800d6f6:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d6fa:	4418      	add	r0, r3
 800d6fc:	7c23      	ldrb	r3, [r4, #16]
 800d6fe:	b200      	sxth	r0, r0
 800d700:	2b00      	cmp	r3, #0
 800d702:	d03a      	beq.n	800d77a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800d704:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800d708:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800d70c:	9000      	str	r0, [sp, #0]
 800d70e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d712:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800d716:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d718:	e9cd a703 	strd	sl, r7, [sp, #12]
 800d71c:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800d720:	464a      	mov	r2, r9
 800d722:	2100      	movs	r1, #0
 800d724:	f7ff fc99 	bl	800d05a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d728:	2800      	cmp	r0, #0
 800d72a:	d1b9      	bne.n	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d72c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d730:	b2b2      	uxth	r2, r6
 800d732:	4611      	mov	r1, r2
 800d734:	4413      	add	r3, r2
 800d736:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800d73a:	1a52      	subs	r2, r2, r1
 800d73c:	7c21      	ldrb	r1, [r4, #16]
 800d73e:	b21b      	sxth	r3, r3
 800d740:	b212      	sxth	r2, r2
 800d742:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d746:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800d74a:	b109      	cbz	r1, 800d750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800d74c:	42b2      	cmp	r2, r6
 800d74e:	dba7      	blt.n	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d750:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800d754:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800d758:	440a      	add	r2, r1
 800d75a:	b212      	sxth	r2, r2
 800d75c:	4293      	cmp	r3, r2
 800d75e:	dda5      	ble.n	800d6ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800d760:	e79e      	b.n	800d6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d762:	2a02      	cmp	r2, #2
 800d764:	d105      	bne.n	800d772 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d766:	7be2      	ldrb	r2, [r4, #15]
 800d768:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800d76c:	1a80      	subs	r0, r0, r2
 800d76e:	1ac0      	subs	r0, r0, r3
 800d770:	e7c0      	b.n	800d6f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800d772:	2000      	movs	r0, #0
 800d774:	e7bf      	b.n	800d6f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d776:	7be0      	ldrb	r0, [r4, #15]
 800d778:	e7bd      	b.n	800d6f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d77a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d77e:	e7c3      	b.n	800d708 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800d780:	9b08      	ldr	r3, [sp, #32]
 800d782:	2b00      	cmp	r3, #0
 800d784:	d0f7      	beq.n	800d776 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d786:	2264      	movs	r2, #100	; 0x64
 800d788:	4639      	mov	r1, r7
 800d78a:	a84b      	add	r0, sp, #300	; 0x12c
 800d78c:	f00f ff90 	bl	801d6b0 <memcpy>
 800d790:	2300      	movs	r3, #0
 800d792:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d796:	6821      	ldr	r1, [r4, #0]
 800d798:	a84b      	add	r0, sp, #300	; 0x12c
 800d79a:	f7ff fbf1 	bl	800cf80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d79e:	b203      	sxth	r3, r0
 800d7a0:	e79f      	b.n	800d6e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800d7a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d7a2:	b510      	push	{r4, lr}
 800d7a4:	2b02      	cmp	r3, #2
 800d7a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d7aa:	d00b      	beq.n	800d7c4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d7ac:	2b03      	cmp	r3, #3
 800d7ae:	d00e      	beq.n	800d7ce <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d7b0:	2b01      	cmp	r3, #1
 800d7b2:	d001      	beq.n	800d7b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d7b4:	1860      	adds	r0, r4, r1
 800d7b6:	bd10      	pop	{r4, pc}
 800d7b8:	8880      	ldrh	r0, [r0, #4]
 800d7ba:	4420      	add	r0, r4
 800d7bc:	b200      	sxth	r0, r0
 800d7be:	1a80      	subs	r0, r0, r2
 800d7c0:	3801      	subs	r0, #1
 800d7c2:	e7f8      	b.n	800d7b6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d7c4:	8880      	ldrh	r0, [r0, #4]
 800d7c6:	4420      	add	r0, r4
 800d7c8:	b200      	sxth	r0, r0
 800d7ca:	1a40      	subs	r0, r0, r1
 800d7cc:	e7f8      	b.n	800d7c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d7ce:	18a0      	adds	r0, r4, r2
 800d7d0:	e7f1      	b.n	800d7b6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d7d2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d7d2:	b510      	push	{r4, lr}
 800d7d4:	2b02      	cmp	r3, #2
 800d7d6:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d7da:	d006      	beq.n	800d7ea <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d7dc:	2b03      	cmp	r3, #3
 800d7de:	d00a      	beq.n	800d7f6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d7e0:	2b01      	cmp	r3, #1
 800d7e2:	bf14      	ite	ne
 800d7e4:	18a0      	addne	r0, r4, r2
 800d7e6:	1860      	addeq	r0, r4, r1
 800d7e8:	bd10      	pop	{r4, pc}
 800d7ea:	88c0      	ldrh	r0, [r0, #6]
 800d7ec:	4420      	add	r0, r4
 800d7ee:	b200      	sxth	r0, r0
 800d7f0:	1a80      	subs	r0, r0, r2
 800d7f2:	3801      	subs	r0, #1
 800d7f4:	e7f8      	b.n	800d7e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d7f6:	88c0      	ldrh	r0, [r0, #6]
 800d7f8:	4420      	add	r0, r4
 800d7fa:	b200      	sxth	r0, r0
 800d7fc:	1a40      	subs	r0, r0, r1
 800d7fe:	e7f8      	b.n	800d7f2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800d800 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d800:	4b01      	ldr	r3, [pc, #4]	; (800d808 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d802:	2200      	movs	r2, #0
 800d804:	601a      	str	r2, [r3, #0]
 800d806:	4770      	bx	lr
 800d808:	2000bfd4 	.word	0x2000bfd4

0800d80c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d80c:	4603      	mov	r3, r0
 800d80e:	b1c8      	cbz	r0, 800d844 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800d810:	0c02      	lsrs	r2, r0, #16
 800d812:	0412      	lsls	r2, r2, #16
 800d814:	b9a2      	cbnz	r2, 800d840 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800d816:	0403      	lsls	r3, r0, #16
 800d818:	2010      	movs	r0, #16
 800d81a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800d81e:	bf04      	itt	eq
 800d820:	021b      	lsleq	r3, r3, #8
 800d822:	3008      	addeq	r0, #8
 800d824:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800d828:	bf04      	itt	eq
 800d82a:	011b      	lsleq	r3, r3, #4
 800d82c:	3004      	addeq	r0, #4
 800d82e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800d832:	bf04      	itt	eq
 800d834:	009b      	lsleq	r3, r3, #2
 800d836:	3002      	addeq	r0, #2
 800d838:	2b00      	cmp	r3, #0
 800d83a:	db04      	blt.n	800d846 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800d83c:	3001      	adds	r0, #1
 800d83e:	4770      	bx	lr
 800d840:	2000      	movs	r0, #0
 800d842:	e7ea      	b.n	800d81a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800d844:	2020      	movs	r0, #32
 800d846:	4770      	bx	lr

0800d848 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800d848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d84c:	b087      	sub	sp, #28
 800d84e:	4681      	mov	r9, r0
 800d850:	4698      	mov	r8, r3
 800d852:	4610      	mov	r0, r2
 800d854:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800d858:	460d      	mov	r5, r1
 800d85a:	b981      	cbnz	r1, 800d87e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800d85c:	b14b      	cbz	r3, 800d872 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800d85e:	460b      	mov	r3, r1
 800d860:	e9cd 4700 	strd	r4, r7, [sp]
 800d864:	464a      	mov	r2, r9
 800d866:	4641      	mov	r1, r8
 800d868:	f7ff ffee 	bl	800d848 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d86c:	b007      	add	sp, #28
 800d86e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d872:	f04f 33ff 	mov.w	r3, #4294967295
 800d876:	603b      	str	r3, [r7, #0]
 800d878:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800d87c:	e7f6      	b.n	800d86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d87e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800d882:	d107      	bne.n	800d894 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800d884:	fb09 f602 	mul.w	r6, r9, r2
 800d888:	fbb6 f0f4 	udiv	r0, r6, r4
 800d88c:	fb04 6610 	mls	r6, r4, r0, r6
 800d890:	603e      	str	r6, [r7, #0]
 800d892:	e7eb      	b.n	800d86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d894:	2601      	movs	r6, #1
 800d896:	408e      	lsls	r6, r1
 800d898:	3e01      	subs	r6, #1
 800d89a:	4016      	ands	r6, r2
 800d89c:	fa09 fb01 	lsl.w	fp, r9, r1
 800d8a0:	4630      	mov	r0, r6
 800d8a2:	fbbb f3f4 	udiv	r3, fp, r4
 800d8a6:	9302      	str	r3, [sp, #8]
 800d8a8:	fb0a f303 	mul.w	r3, sl, r3
 800d8ac:	9303      	str	r3, [sp, #12]
 800d8ae:	f7ff ffad 	bl	800d80c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d8b2:	464a      	mov	r2, r9
 800d8b4:	460b      	mov	r3, r1
 800d8b6:	e9cd 4700 	strd	r4, r7, [sp]
 800d8ba:	4601      	mov	r1, r0
 800d8bc:	4630      	mov	r0, r6
 800d8be:	f7ff ffc3 	bl	800d848 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d8c2:	9b02      	ldr	r3, [sp, #8]
 800d8c4:	fb04 bb13 	mls	fp, r4, r3, fp
 800d8c8:	4606      	mov	r6, r0
 800d8ca:	4658      	mov	r0, fp
 800d8cc:	eb05 0108 	add.w	r1, r5, r8
 800d8d0:	f7ff ff9c 	bl	800d80c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d8d4:	ab05      	add	r3, sp, #20
 800d8d6:	e9cd 4300 	strd	r4, r3, [sp]
 800d8da:	465a      	mov	r2, fp
 800d8dc:	4603      	mov	r3, r0
 800d8de:	4650      	mov	r0, sl
 800d8e0:	f7ff ffb2 	bl	800d848 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d8e4:	6839      	ldr	r1, [r7, #0]
 800d8e6:	9a05      	ldr	r2, [sp, #20]
 800d8e8:	9b03      	ldr	r3, [sp, #12]
 800d8ea:	4411      	add	r1, r2
 800d8ec:	fbb1 f2f4 	udiv	r2, r1, r4
 800d8f0:	18d3      	adds	r3, r2, r3
 800d8f2:	441e      	add	r6, r3
 800d8f4:	fb04 1412 	mls	r4, r4, r2, r1
 800d8f8:	4430      	add	r0, r6
 800d8fa:	603c      	str	r4, [r7, #0]
 800d8fc:	e7b6      	b.n	800d86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800d8fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800d8fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d902:	b085      	sub	sp, #20
 800d904:	f1b0 0900 	subs.w	r9, r0, #0
 800d908:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d90a:	461d      	mov	r5, r3
 800d90c:	bfbf      	itttt	lt
 800d90e:	6823      	ldrlt	r3, [r4, #0]
 800d910:	425b      	neglt	r3, r3
 800d912:	f1c9 0900 	rsblt	r9, r9, #0
 800d916:	6023      	strlt	r3, [r4, #0]
 800d918:	bfb4      	ite	lt
 800d91a:	f04f 36ff 	movlt.w	r6, #4294967295
 800d91e:	2601      	movge	r6, #1
 800d920:	2a00      	cmp	r2, #0
 800d922:	4617      	mov	r7, r2
 800d924:	da04      	bge.n	800d930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800d926:	6823      	ldr	r3, [r4, #0]
 800d928:	425b      	negs	r3, r3
 800d92a:	4257      	negs	r7, r2
 800d92c:	4276      	negs	r6, r6
 800d92e:	6023      	str	r3, [r4, #0]
 800d930:	2d00      	cmp	r5, #0
 800d932:	4638      	mov	r0, r7
 800d934:	bfba      	itte	lt
 800d936:	426d      	neglt	r5, r5
 800d938:	f04f 38ff 	movlt.w	r8, #4294967295
 800d93c:	f04f 0801 	movge.w	r8, #1
 800d940:	f7ff ff64 	bl	800d80c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d944:	ab03      	add	r3, sp, #12
 800d946:	e9cd 5300 	strd	r5, r3, [sp]
 800d94a:	463a      	mov	r2, r7
 800d94c:	4603      	mov	r3, r0
 800d94e:	4648      	mov	r0, r9
 800d950:	f7ff ff7a 	bl	800d848 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d954:	6823      	ldr	r3, [r4, #0]
 800d956:	9a03      	ldr	r2, [sp, #12]
 800d958:	4546      	cmp	r6, r8
 800d95a:	441a      	add	r2, r3
 800d95c:	fb92 f3f5 	sdiv	r3, r2, r5
 800d960:	4418      	add	r0, r3
 800d962:	bf18      	it	ne
 800d964:	4240      	negne	r0, r0
 800d966:	fb05 2313 	mls	r3, r5, r3, r2
 800d96a:	1c72      	adds	r2, r6, #1
 800d96c:	6023      	str	r3, [r4, #0]
 800d96e:	d105      	bne.n	800d97c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800d970:	2b00      	cmp	r3, #0
 800d972:	f1c3 0200 	rsb	r2, r3, #0
 800d976:	db0b      	blt.n	800d990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800d978:	6022      	str	r2, [r4, #0]
 800d97a:	e006      	b.n	800d98a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d97c:	2e01      	cmp	r6, #1
 800d97e:	d104      	bne.n	800d98a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d980:	2b00      	cmp	r3, #0
 800d982:	da02      	bge.n	800d98a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800d984:	442b      	add	r3, r5
 800d986:	3801      	subs	r0, #1
 800d988:	6023      	str	r3, [r4, #0]
 800d98a:	b005      	add	sp, #20
 800d98c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d990:	3801      	subs	r0, #1
 800d992:	1b52      	subs	r2, r2, r5
 800d994:	e7f0      	b.n	800d978 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800d998 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800d998:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d99c:	4c1c      	ldr	r4, [pc, #112]	; (800da10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800d99e:	6807      	ldr	r7, [r0, #0]
 800d9a0:	69a3      	ldr	r3, [r4, #24]
 800d9a2:	4605      	mov	r5, r0
 800d9a4:	b92b      	cbnz	r3, 800d9b2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800d9a6:	6840      	ldr	r0, [r0, #4]
 800d9a8:	e9c5 7000 	strd	r7, r0, [r5]
 800d9ac:	b004      	add	sp, #16
 800d9ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9b2:	68a2      	ldr	r2, [r4, #8]
 800d9b4:	6820      	ldr	r0, [r4, #0]
 800d9b6:	ae04      	add	r6, sp, #16
 800d9b8:	f04f 0802 	mov.w	r8, #2
 800d9bc:	fb93 f1f8 	sdiv	r1, r3, r8
 800d9c0:	440a      	add	r2, r1
 800d9c2:	f846 2d04 	str.w	r2, [r6, #-4]!
 800d9c6:	69e1      	ldr	r1, [r4, #28]
 800d9c8:	9600      	str	r6, [sp, #0]
 800d9ca:	463a      	mov	r2, r7
 800d9cc:	f7ff ff97 	bl	800d8fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d9d0:	69a3      	ldr	r3, [r4, #24]
 800d9d2:	686a      	ldr	r2, [r5, #4]
 800d9d4:	6a21      	ldr	r1, [r4, #32]
 800d9d6:	9600      	str	r6, [sp, #0]
 800d9d8:	4607      	mov	r7, r0
 800d9da:	6860      	ldr	r0, [r4, #4]
 800d9dc:	f7ff ff8f 	bl	800d8fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d9e0:	6962      	ldr	r2, [r4, #20]
 800d9e2:	69a3      	ldr	r3, [r4, #24]
 800d9e4:	fb93 f8f8 	sdiv	r8, r3, r8
 800d9e8:	4442      	add	r2, r8
 800d9ea:	9203      	str	r2, [sp, #12]
 800d9ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d9ee:	682a      	ldr	r2, [r5, #0]
 800d9f0:	9600      	str	r6, [sp, #0]
 800d9f2:	4407      	add	r7, r0
 800d9f4:	68e0      	ldr	r0, [r4, #12]
 800d9f6:	f7ff ff82 	bl	800d8fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800d9fa:	9600      	str	r6, [sp, #0]
 800d9fc:	4680      	mov	r8, r0
 800d9fe:	69a3      	ldr	r3, [r4, #24]
 800da00:	686a      	ldr	r2, [r5, #4]
 800da02:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800da04:	6920      	ldr	r0, [r4, #16]
 800da06:	f7ff ff7a 	bl	800d8fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800da0a:	4440      	add	r0, r8
 800da0c:	e7cc      	b.n	800d9a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800da0e:	bf00      	nop
 800da10:	2000bfd8 	.word	0x2000bfd8

0800da14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800da14:	4b07      	ldr	r3, [pc, #28]	; (800da34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800da16:	781b      	ldrb	r3, [r3, #0]
 800da18:	2b01      	cmp	r3, #1
 800da1a:	d109      	bne.n	800da30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800da1c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800da20:	f9b0 2000 	ldrsh.w	r2, [r0]
 800da24:	8003      	strh	r3, [r0, #0]
 800da26:	4b04      	ldr	r3, [pc, #16]	; (800da38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800da28:	881b      	ldrh	r3, [r3, #0]
 800da2a:	3b01      	subs	r3, #1
 800da2c:	1a9b      	subs	r3, r3, r2
 800da2e:	800b      	strh	r3, [r1, #0]
 800da30:	4770      	bx	lr
 800da32:	bf00      	nop
 800da34:	2000bfc4 	.word	0x2000bfc4
 800da38:	2000bfc0 	.word	0x2000bfc0

0800da3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800da3c:	b510      	push	{r4, lr}
 800da3e:	4b07      	ldr	r3, [pc, #28]	; (800da5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800da40:	781b      	ldrb	r3, [r3, #0]
 800da42:	2b01      	cmp	r3, #1
 800da44:	d108      	bne.n	800da58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800da46:	4b06      	ldr	r3, [pc, #24]	; (800da60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800da48:	880c      	ldrh	r4, [r1, #0]
 800da4a:	881b      	ldrh	r3, [r3, #0]
 800da4c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800da50:	3b01      	subs	r3, #1
 800da52:	1b1b      	subs	r3, r3, r4
 800da54:	8003      	strh	r3, [r0, #0]
 800da56:	800a      	strh	r2, [r1, #0]
 800da58:	bd10      	pop	{r4, pc}
 800da5a:	bf00      	nop
 800da5c:	2000bfc4 	.word	0x2000bfc4
 800da60:	2000bfc0 	.word	0x2000bfc0

0800da64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800da64:	b510      	push	{r4, lr}
 800da66:	4b0a      	ldr	r3, [pc, #40]	; (800da90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800da68:	781b      	ldrb	r3, [r3, #0]
 800da6a:	2b01      	cmp	r3, #1
 800da6c:	d10e      	bne.n	800da8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800da6e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800da72:	8843      	ldrh	r3, [r0, #2]
 800da74:	f9b0 4000 	ldrsh.w	r4, [r0]
 800da78:	8044      	strh	r4, [r0, #2]
 800da7a:	18ca      	adds	r2, r1, r3
 800da7c:	4b05      	ldr	r3, [pc, #20]	; (800da94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800da7e:	881b      	ldrh	r3, [r3, #0]
 800da80:	1a9b      	subs	r3, r3, r2
 800da82:	8003      	strh	r3, [r0, #0]
 800da84:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800da88:	80c3      	strh	r3, [r0, #6]
 800da8a:	8081      	strh	r1, [r0, #4]
 800da8c:	bd10      	pop	{r4, pc}
 800da8e:	bf00      	nop
 800da90:	2000bfc4 	.word	0x2000bfc4
 800da94:	2000bfc0 	.word	0x2000bfc0

0800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800da98:	4b08      	ldr	r3, [pc, #32]	; (800dabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800da9a:	781b      	ldrb	r3, [r3, #0]
 800da9c:	2b01      	cmp	r3, #1
 800da9e:	d10c      	bne.n	800daba <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800daa0:	8803      	ldrh	r3, [r0, #0]
 800daa2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800daa6:	8842      	ldrh	r2, [r0, #2]
 800daa8:	8002      	strh	r2, [r0, #0]
 800daaa:	185a      	adds	r2, r3, r1
 800daac:	4b04      	ldr	r3, [pc, #16]	; (800dac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800daae:	881b      	ldrh	r3, [r3, #0]
 800dab0:	1a9b      	subs	r3, r3, r2
 800dab2:	8043      	strh	r3, [r0, #2]
 800dab4:	88c3      	ldrh	r3, [r0, #6]
 800dab6:	8083      	strh	r3, [r0, #4]
 800dab8:	80c1      	strh	r1, [r0, #6]
 800daba:	4770      	bx	lr
 800dabc:	2000bfc4 	.word	0x2000bfc4
 800dac0:	2000bfc0 	.word	0x2000bfc0

0800dac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dac4:	b510      	push	{r4, lr}
 800dac6:	4b07      	ldr	r3, [pc, #28]	; (800dae4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dac8:	781b      	ldrb	r3, [r3, #0]
 800daca:	2b01      	cmp	r3, #1
 800dacc:	d108      	bne.n	800dae0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dace:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dad2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dad6:	8003      	strh	r3, [r0, #0]
 800dad8:	8893      	ldrh	r3, [r2, #4]
 800dada:	3b01      	subs	r3, #1
 800dadc:	1b1b      	subs	r3, r3, r4
 800dade:	800b      	strh	r3, [r1, #0]
 800dae0:	bd10      	pop	{r4, pc}
 800dae2:	bf00      	nop
 800dae4:	2000bfc4 	.word	0x2000bfc4

0800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dae8:	b510      	push	{r4, lr}
 800daea:	4b0a      	ldr	r3, [pc, #40]	; (800db14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800daec:	781b      	ldrb	r3, [r3, #0]
 800daee:	2b01      	cmp	r3, #1
 800daf0:	460a      	mov	r2, r1
 800daf2:	d10d      	bne.n	800db10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800daf4:	8881      	ldrh	r1, [r0, #4]
 800daf6:	8803      	ldrh	r3, [r0, #0]
 800daf8:	440b      	add	r3, r1
 800dafa:	4601      	mov	r1, r0
 800dafc:	3b01      	subs	r3, #1
 800dafe:	f821 3b02 	strh.w	r3, [r1], #2
 800db02:	f7ff ffdf 	bl	800dac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800db06:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800db0a:	88c2      	ldrh	r2, [r0, #6]
 800db0c:	8082      	strh	r2, [r0, #4]
 800db0e:	80c3      	strh	r3, [r0, #6]
 800db10:	bd10      	pop	{r4, pc}
 800db12:	bf00      	nop
 800db14:	2000bfc4 	.word	0x2000bfc4

0800db18 <_ZN8touchgfx11Application13requestRedrawEv>:
 800db18:	4b06      	ldr	r3, [pc, #24]	; (800db34 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800db1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800db1e:	4b06      	ldr	r3, [pc, #24]	; (800db38 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800db20:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800db24:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db28:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800db2c:	2100      	movs	r1, #0
 800db2e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800db32:	4770      	bx	lr
 800db34:	2000bfc0 	.word	0x2000bfc0
 800db38:	2000bfc2 	.word	0x2000bfc2

0800db3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800db3c:	4b03      	ldr	r3, [pc, #12]	; (800db4c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800db3e:	6818      	ldr	r0, [r3, #0]
 800db40:	b110      	cbz	r0, 800db48 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800db42:	6803      	ldr	r3, [r0, #0]
 800db44:	699b      	ldr	r3, [r3, #24]
 800db46:	4718      	bx	r3
 800db48:	4770      	bx	lr
 800db4a:	bf00      	nop
 800db4c:	2000c008 	.word	0x2000c008

0800db50 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800db50:	4770      	bx	lr
	...

0800db54 <_ZN8touchgfx11Application4drawEv>:
 800db54:	b507      	push	{r0, r1, r2, lr}
 800db56:	4b09      	ldr	r3, [pc, #36]	; (800db7c <_ZN8touchgfx11Application4drawEv+0x28>)
 800db58:	f9b3 2000 	ldrsh.w	r2, [r3]
 800db5c:	4b08      	ldr	r3, [pc, #32]	; (800db80 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800db5e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800db62:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db66:	f8ad 3006 	strh.w	r3, [sp, #6]
 800db6a:	6803      	ldr	r3, [r0, #0]
 800db6c:	2100      	movs	r1, #0
 800db6e:	9100      	str	r1, [sp, #0]
 800db70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800db72:	4669      	mov	r1, sp
 800db74:	4798      	blx	r3
 800db76:	b003      	add	sp, #12
 800db78:	f85d fb04 	ldr.w	pc, [sp], #4
 800db7c:	2000bfc0 	.word	0x2000bfc0
 800db80:	2000bfc2 	.word	0x2000bfc2

0800db84 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800db84:	4b03      	ldr	r3, [pc, #12]	; (800db94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800db86:	6818      	ldr	r0, [r3, #0]
 800db88:	b110      	cbz	r0, 800db90 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800db8a:	6803      	ldr	r3, [r0, #0]
 800db8c:	69db      	ldr	r3, [r3, #28]
 800db8e:	4718      	bx	r3
 800db90:	4770      	bx	lr
 800db92:	bf00      	nop
 800db94:	2000c008 	.word	0x2000c008

0800db98 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800db98:	4b03      	ldr	r3, [pc, #12]	; (800dba8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800db9a:	6818      	ldr	r0, [r3, #0]
 800db9c:	b110      	cbz	r0, 800dba4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800db9e:	6803      	ldr	r3, [r0, #0]
 800dba0:	6a1b      	ldr	r3, [r3, #32]
 800dba2:	4718      	bx	r3
 800dba4:	4770      	bx	lr
 800dba6:	bf00      	nop
 800dba8:	2000c008 	.word	0x2000c008

0800dbac <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800dbac:	2300      	movs	r3, #0
 800dbae:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800dbb2:	4770      	bx	lr

0800dbb4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800dbb4:	4b03      	ldr	r3, [pc, #12]	; (800dbc4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800dbb6:	6818      	ldr	r0, [r3, #0]
 800dbb8:	b110      	cbz	r0, 800dbc0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800dbba:	6803      	ldr	r3, [r0, #0]
 800dbbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dbbe:	4718      	bx	r3
 800dbc0:	4770      	bx	lr
 800dbc2:	bf00      	nop
 800dbc4:	2000c008 	.word	0x2000c008

0800dbc8 <_ZN8touchgfx11ApplicationD1Ev>:
 800dbc8:	4770      	bx	lr

0800dbca <_ZN8touchgfx11ApplicationD0Ev>:
 800dbca:	b510      	push	{r4, lr}
 800dbcc:	f44f 719c 	mov.w	r1, #312	; 0x138
 800dbd0:	4604      	mov	r4, r0
 800dbd2:	f00e ff45 	bl	801ca60 <_ZdlPvj>
 800dbd6:	4620      	mov	r0, r4
 800dbd8:	bd10      	pop	{r4, pc}
	...

0800dbdc <_ZN8touchgfx11Application15handleTickEventEv>:
 800dbdc:	b570      	push	{r4, r5, r6, lr}
 800dbde:	4d38      	ldr	r5, [pc, #224]	; (800dcc0 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800dbe0:	4604      	mov	r4, r0
 800dbe2:	6828      	ldr	r0, [r5, #0]
 800dbe4:	b140      	cbz	r0, 800dbf8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dbe6:	7a03      	ldrb	r3, [r0, #8]
 800dbe8:	b933      	cbnz	r3, 800dbf8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dbea:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800dbee:	6803      	ldr	r3, [r0, #0]
 800dbf0:	689b      	ldr	r3, [r3, #8]
 800dbf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbf6:	4718      	bx	r3
 800dbf8:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800dbfc:	b97b      	cbnz	r3, 800dc1e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dbfe:	b170      	cbz	r0, 800dc1e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dc00:	7a03      	ldrb	r3, [r0, #8]
 800dc02:	b163      	cbz	r3, 800dc1e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dc04:	4b2f      	ldr	r3, [pc, #188]	; (800dcc4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800dc06:	6818      	ldr	r0, [r3, #0]
 800dc08:	b110      	cbz	r0, 800dc10 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800dc0a:	6803      	ldr	r3, [r0, #0]
 800dc0c:	691b      	ldr	r3, [r3, #16]
 800dc0e:	4798      	blx	r3
 800dc10:	6828      	ldr	r0, [r5, #0]
 800dc12:	6803      	ldr	r3, [r0, #0]
 800dc14:	68db      	ldr	r3, [r3, #12]
 800dc16:	4798      	blx	r3
 800dc18:	2301      	movs	r3, #1
 800dc1a:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800dc1e:	2500      	movs	r5, #0
 800dc20:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800dc24:	42a8      	cmp	r0, r5
 800dc26:	dd0c      	ble.n	800dc42 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800dc28:	1963      	adds	r3, r4, r5
 800dc2a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800dc2e:	b132      	cbz	r2, 800dc3e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800dc30:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800dc34:	4413      	add	r3, r2
 800dc36:	6858      	ldr	r0, [r3, #4]
 800dc38:	6803      	ldr	r3, [r0, #0]
 800dc3a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dc3c:	4798      	blx	r3
 800dc3e:	3501      	adds	r5, #1
 800dc40:	e7ee      	b.n	800dc20 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dc42:	2300      	movs	r3, #0
 800dc44:	461a      	mov	r2, r3
 800dc46:	4298      	cmp	r0, r3
 800dc48:	d10f      	bne.n	800dc6a <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800dc4a:	1d25      	adds	r5, r4, #4
 800dc4c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800dc50:	4291      	cmp	r1, r2
 800dc52:	dd2d      	ble.n	800dcb0 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800dc54:	1e48      	subs	r0, r1, #1
 800dc56:	b280      	uxth	r0, r0
 800dc58:	4288      	cmp	r0, r1
 800dc5a:	d31a      	bcc.n	800dc92 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800dc5c:	4b1a      	ldr	r3, [pc, #104]	; (800dcc8 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800dc5e:	4a1b      	ldr	r2, [pc, #108]	; (800dccc <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800dc60:	481b      	ldr	r0, [pc, #108]	; (800dcd0 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800dc62:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800dc66:	f00f fca5 	bl	801d5b4 <__assert_func>
 800dc6a:	18e1      	adds	r1, r4, r3
 800dc6c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800dc70:	b16d      	cbz	r5, 800dc8e <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800dc72:	429a      	cmp	r2, r3
 800dc74:	d00a      	beq.n	800dc8c <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800dc76:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800dc7a:	4431      	add	r1, r6
 800dc7c:	684e      	ldr	r6, [r1, #4]
 800dc7e:	b291      	uxth	r1, r2
 800dc80:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800dc84:	604e      	str	r6, [r1, #4]
 800dc86:	18a1      	adds	r1, r4, r2
 800dc88:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800dc8c:	3201      	adds	r2, #1
 800dc8e:	3301      	adds	r3, #1
 800dc90:	e7d9      	b.n	800dc46 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800dc92:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800dc96:	3304      	adds	r3, #4
 800dc98:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800dc9c:	428b      	cmp	r3, r1
 800dc9e:	d004      	beq.n	800dcaa <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800dca0:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800dca4:	f843 6c04 	str.w	r6, [r3, #-4]
 800dca8:	e7f8      	b.n	800dc9c <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800dcaa:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800dcae:	e7cd      	b.n	800dc4c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800dcb0:	4b04      	ldr	r3, [pc, #16]	; (800dcc4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800dcb2:	6818      	ldr	r0, [r3, #0]
 800dcb4:	b110      	cbz	r0, 800dcbc <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800dcb6:	6803      	ldr	r3, [r0, #0]
 800dcb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dcba:	e79a      	b.n	800dbf2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800dcbc:	bd70      	pop	{r4, r5, r6, pc}
 800dcbe:	bf00      	nop
 800dcc0:	2000c00c 	.word	0x2000c00c
 800dcc4:	2000c008 	.word	0x2000c008
 800dcc8:	080205e7 	.word	0x080205e7
 800dccc:	080207dc 	.word	0x080207dc
 800dcd0:	080205f5 	.word	0x080205f5

0800dcd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800dcd4:	b570      	push	{r4, r5, r6, lr}
 800dcd6:	4606      	mov	r6, r0
 800dcd8:	460c      	mov	r4, r1
 800dcda:	b929      	cbnz	r1, 800dce8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800dcdc:	4b0c      	ldr	r3, [pc, #48]	; (800dd10 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800dcde:	4a0d      	ldr	r2, [pc, #52]	; (800dd14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800dce0:	480d      	ldr	r0, [pc, #52]	; (800dd18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800dce2:	215e      	movs	r1, #94	; 0x5e
 800dce4:	f00f fc66 	bl	801d5b4 <__assert_func>
 800dce8:	4d0c      	ldr	r5, [pc, #48]	; (800dd1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800dcea:	2300      	movs	r3, #0
 800dcec:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800dcf0:	6828      	ldr	r0, [r5, #0]
 800dcf2:	b110      	cbz	r0, 800dcfa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800dcf4:	6803      	ldr	r3, [r0, #0]
 800dcf6:	695b      	ldr	r3, [r3, #20]
 800dcf8:	4798      	blx	r3
 800dcfa:	602c      	str	r4, [r5, #0]
 800dcfc:	6823      	ldr	r3, [r4, #0]
 800dcfe:	4620      	mov	r0, r4
 800dd00:	68db      	ldr	r3, [r3, #12]
 800dd02:	4798      	blx	r3
 800dd04:	6833      	ldr	r3, [r6, #0]
 800dd06:	4630      	mov	r0, r6
 800dd08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd0e:	4718      	bx	r3
 800dd10:	080205b3 	.word	0x080205b3
 800dd14:	0802069c 	.word	0x0802069c
 800dd18:	080205bd 	.word	0x080205bd
 800dd1c:	2000c008 	.word	0x2000c008

0800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800dd20:	b510      	push	{r4, lr}
 800dd22:	f9b1 4000 	ldrsh.w	r4, [r1]
 800dd26:	888a      	ldrh	r2, [r1, #4]
 800dd28:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dd2c:	4422      	add	r2, r4
 800dd2e:	b212      	sxth	r2, r2
 800dd30:	4293      	cmp	r3, r2
 800dd32:	da15      	bge.n	800dd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dd34:	8882      	ldrh	r2, [r0, #4]
 800dd36:	4413      	add	r3, r2
 800dd38:	b21b      	sxth	r3, r3
 800dd3a:	429c      	cmp	r4, r3
 800dd3c:	da10      	bge.n	800dd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dd3e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dd42:	88c9      	ldrh	r1, [r1, #6]
 800dd44:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dd48:	4419      	add	r1, r3
 800dd4a:	b209      	sxth	r1, r1
 800dd4c:	428a      	cmp	r2, r1
 800dd4e:	da07      	bge.n	800dd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dd50:	88c0      	ldrh	r0, [r0, #6]
 800dd52:	4410      	add	r0, r2
 800dd54:	b200      	sxth	r0, r0
 800dd56:	4283      	cmp	r3, r0
 800dd58:	bfac      	ite	ge
 800dd5a:	2000      	movge	r0, #0
 800dd5c:	2001      	movlt	r0, #1
 800dd5e:	bd10      	pop	{r4, pc}
 800dd60:	2000      	movs	r0, #0
 800dd62:	e7fc      	b.n	800dd5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800dd64 <_ZN8touchgfx4Rect10restrictToEss>:
 800dd64:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dd68:	2b00      	cmp	r3, #0
 800dd6a:	b510      	push	{r4, lr}
 800dd6c:	da04      	bge.n	800dd78 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800dd6e:	8884      	ldrh	r4, [r0, #4]
 800dd70:	4423      	add	r3, r4
 800dd72:	8083      	strh	r3, [r0, #4]
 800dd74:	2300      	movs	r3, #0
 800dd76:	8003      	strh	r3, [r0, #0]
 800dd78:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dd7c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dd80:	1b09      	subs	r1, r1, r4
 800dd82:	428b      	cmp	r3, r1
 800dd84:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800dd88:	bfc8      	it	gt
 800dd8a:	8081      	strhgt	r1, [r0, #4]
 800dd8c:	2b00      	cmp	r3, #0
 800dd8e:	da04      	bge.n	800dd9a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800dd90:	88c1      	ldrh	r1, [r0, #6]
 800dd92:	440b      	add	r3, r1
 800dd94:	80c3      	strh	r3, [r0, #6]
 800dd96:	2300      	movs	r3, #0
 800dd98:	8043      	strh	r3, [r0, #2]
 800dd9a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800dd9e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dda2:	1a52      	subs	r2, r2, r1
 800dda4:	4293      	cmp	r3, r2
 800dda6:	bfc8      	it	gt
 800dda8:	80c2      	strhgt	r2, [r0, #6]
 800ddaa:	bd10      	pop	{r4, pc}

0800ddac <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ddac:	b510      	push	{r4, lr}
 800ddae:	4b10      	ldr	r3, [pc, #64]	; (800ddf0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ddb0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ddb4:	4b0f      	ldr	r3, [pc, #60]	; (800ddf4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ddb6:	460c      	mov	r4, r1
 800ddb8:	4620      	mov	r0, r4
 800ddba:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ddbe:	f7ff ffd1 	bl	800dd64 <_ZN8touchgfx4Rect10restrictToEss>
 800ddc2:	4b0d      	ldr	r3, [pc, #52]	; (800ddf8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800ddc4:	6818      	ldr	r0, [r3, #0]
 800ddc6:	b190      	cbz	r0, 800ddee <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800ddc8:	6803      	ldr	r3, [r0, #0]
 800ddca:	4621      	mov	r1, r4
 800ddcc:	689b      	ldr	r3, [r3, #8]
 800ddce:	4798      	blx	r3
 800ddd0:	4b0a      	ldr	r3, [pc, #40]	; (800ddfc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800ddd2:	6818      	ldr	r0, [r3, #0]
 800ddd4:	b118      	cbz	r0, 800ddde <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800ddd6:	6803      	ldr	r3, [r0, #0]
 800ddd8:	4621      	mov	r1, r4
 800ddda:	689b      	ldr	r3, [r3, #8]
 800dddc:	4798      	blx	r3
 800ddde:	4b08      	ldr	r3, [pc, #32]	; (800de00 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800dde0:	6818      	ldr	r0, [r3, #0]
 800dde2:	6803      	ldr	r3, [r0, #0]
 800dde4:	4621      	mov	r1, r4
 800dde6:	69db      	ldr	r3, [r3, #28]
 800dde8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ddec:	4718      	bx	r3
 800ddee:	bd10      	pop	{r4, pc}
 800ddf0:	2000bfc2 	.word	0x2000bfc2
 800ddf4:	2000bfc0 	.word	0x2000bfc0
 800ddf8:	2000c008 	.word	0x2000c008
 800ddfc:	2000c004 	.word	0x2000c004
 800de00:	2000bfcc 	.word	0x2000bfcc

0800de04 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800de04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de06:	4606      	mov	r6, r0
 800de08:	4608      	mov	r0, r1
 800de0a:	460f      	mov	r7, r1
 800de0c:	f7fc fcc3 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de10:	b9e8      	cbnz	r0, 800de4e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800de12:	f9b7 5000 	ldrsh.w	r5, [r7]
 800de16:	f9b6 4000 	ldrsh.w	r4, [r6]
 800de1a:	42a5      	cmp	r5, r4
 800de1c:	db17      	blt.n	800de4e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800de1e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800de22:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800de26:	429a      	cmp	r2, r3
 800de28:	db11      	blt.n	800de4e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800de2a:	88b9      	ldrh	r1, [r7, #4]
 800de2c:	440d      	add	r5, r1
 800de2e:	88b1      	ldrh	r1, [r6, #4]
 800de30:	440c      	add	r4, r1
 800de32:	b22d      	sxth	r5, r5
 800de34:	b224      	sxth	r4, r4
 800de36:	42a5      	cmp	r5, r4
 800de38:	dc09      	bgt.n	800de4e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800de3a:	88f8      	ldrh	r0, [r7, #6]
 800de3c:	4410      	add	r0, r2
 800de3e:	88f2      	ldrh	r2, [r6, #6]
 800de40:	4413      	add	r3, r2
 800de42:	b200      	sxth	r0, r0
 800de44:	b21b      	sxth	r3, r3
 800de46:	4298      	cmp	r0, r3
 800de48:	bfcc      	ite	gt
 800de4a:	2000      	movgt	r0, #0
 800de4c:	2001      	movle	r0, #1
 800de4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800de50 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800de50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de52:	4604      	mov	r4, r0
 800de54:	4608      	mov	r0, r1
 800de56:	460d      	mov	r5, r1
 800de58:	f7fc fc9d 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de5c:	b978      	cbnz	r0, 800de7e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800de5e:	4620      	mov	r0, r4
 800de60:	f7fc fc99 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de64:	f9b5 6000 	ldrsh.w	r6, [r5]
 800de68:	b150      	cbz	r0, 800de80 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800de6a:	8026      	strh	r6, [r4, #0]
 800de6c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800de70:	8063      	strh	r3, [r4, #2]
 800de72:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800de76:	80a3      	strh	r3, [r4, #4]
 800de78:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800de7c:	80e3      	strh	r3, [r4, #6]
 800de7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de80:	f9b4 1000 	ldrsh.w	r1, [r4]
 800de84:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800de88:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800de8c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800de90:	88ed      	ldrh	r5, [r5, #6]
 800de92:	42b1      	cmp	r1, r6
 800de94:	460f      	mov	r7, r1
 800de96:	bfa8      	it	ge
 800de98:	4637      	movge	r7, r6
 800de9a:	4293      	cmp	r3, r2
 800de9c:	4618      	mov	r0, r3
 800de9e:	4466      	add	r6, ip
 800dea0:	bfa8      	it	ge
 800dea2:	4610      	movge	r0, r2
 800dea4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800dea8:	8027      	strh	r7, [r4, #0]
 800deaa:	442a      	add	r2, r5
 800deac:	88e5      	ldrh	r5, [r4, #6]
 800deae:	8060      	strh	r0, [r4, #2]
 800deb0:	4461      	add	r1, ip
 800deb2:	442b      	add	r3, r5
 800deb4:	b236      	sxth	r6, r6
 800deb6:	b209      	sxth	r1, r1
 800deb8:	b212      	sxth	r2, r2
 800deba:	b21b      	sxth	r3, r3
 800debc:	428e      	cmp	r6, r1
 800debe:	bfac      	ite	ge
 800dec0:	ebc7 0106 	rsbge	r1, r7, r6
 800dec4:	ebc7 0101 	rsblt	r1, r7, r1
 800dec8:	429a      	cmp	r2, r3
 800deca:	bfac      	ite	ge
 800decc:	ebc0 0202 	rsbge	r2, r0, r2
 800ded0:	ebc0 0203 	rsblt	r2, r0, r3
 800ded4:	80a1      	strh	r1, [r4, #4]
 800ded6:	80e2      	strh	r2, [r4, #6]
 800ded8:	e7d1      	b.n	800de7e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800dedc <_ZN8touchgfx11Application11getInstanceEv>:
 800dedc:	4b01      	ldr	r3, [pc, #4]	; (800dee4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800dede:	6818      	ldr	r0, [r3, #0]
 800dee0:	4770      	bx	lr
 800dee2:	bf00      	nop
 800dee4:	2000c018 	.word	0x2000c018

0800dee8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800dee8:	2300      	movs	r3, #0
 800deea:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800deee:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800def2:	30a8      	adds	r0, #168	; 0xa8
 800def4:	f802 3b01 	strb.w	r3, [r2], #1
 800def8:	4282      	cmp	r2, r0
 800defa:	d1fb      	bne.n	800def4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800defc:	4770      	bx	lr

0800defe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800defe:	4603      	mov	r3, r0
 800df00:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800df04:	2200      	movs	r2, #0
 800df06:	801a      	strh	r2, [r3, #0]
 800df08:	805a      	strh	r2, [r3, #2]
 800df0a:	809a      	strh	r2, [r3, #4]
 800df0c:	80da      	strh	r2, [r3, #6]
 800df0e:	3308      	adds	r3, #8
 800df10:	428b      	cmp	r3, r1
 800df12:	d1f8      	bne.n	800df06 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800df14:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800df18:	4770      	bx	lr
	...

0800df1c <_ZN8touchgfx11ApplicationC1Ev>:
 800df1c:	b570      	push	{r4, r5, r6, lr}
 800df1e:	4b19      	ldr	r3, [pc, #100]	; (800df84 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800df20:	6003      	str	r3, [r0, #0]
 800df22:	2500      	movs	r5, #0
 800df24:	4604      	mov	r4, r0
 800df26:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800df2a:	30a8      	adds	r0, #168	; 0xa8
 800df2c:	f7ff ffe7 	bl	800defe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800df30:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800df34:	f7ff ffe3 	bl	800defe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800df38:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800df3c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800df40:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800df44:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800df48:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800df4c:	490e      	ldr	r1, [pc, #56]	; (800df88 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800df4e:	480f      	ldr	r0, [pc, #60]	; (800df8c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800df50:	4e0f      	ldr	r6, [pc, #60]	; (800df90 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800df52:	f00e fc5d 	bl	801c810 <CRC_Lock>
 800df56:	4b0f      	ldr	r3, [pc, #60]	; (800df94 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800df58:	b158      	cbz	r0, 800df72 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800df5a:	801d      	strh	r5, [r3, #0]
 800df5c:	4a0e      	ldr	r2, [pc, #56]	; (800df98 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800df5e:	2300      	movs	r3, #0
 800df60:	6013      	str	r3, [r2, #0]
 800df62:	4a0e      	ldr	r2, [pc, #56]	; (800df9c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800df64:	6033      	str	r3, [r6, #0]
 800df66:	4620      	mov	r0, r4
 800df68:	6013      	str	r3, [r2, #0]
 800df6a:	f7ff ffbd 	bl	800dee8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800df6e:	4620      	mov	r0, r4
 800df70:	bd70      	pop	{r4, r5, r6, pc}
 800df72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800df76:	2002      	movs	r0, #2
 800df78:	801a      	strh	r2, [r3, #0]
 800df7a:	6030      	str	r0, [r6, #0]
 800df7c:	f001 fa14 	bl	800f3a8 <_ZN8touchgfx6Screen4drawEv>
 800df80:	e7ec      	b.n	800df5c <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800df82:	bf00      	nop
 800df84:	08020658 	.word	0x08020658
 800df88:	b5e8b5cd 	.word	0xb5e8b5cd
 800df8c:	f407a5c2 	.word	0xf407a5c2
 800df90:	2000c008 	.word	0x2000c008
 800df94:	20000060 	.word	0x20000060
 800df98:	2000c018 	.word	0x2000c018
 800df9c:	2000c00c 	.word	0x2000c00c

0800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800dfa0:	b510      	push	{r4, lr}
 800dfa2:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800dfa6:	428b      	cmp	r3, r1
 800dfa8:	d806      	bhi.n	800dfb8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800dfaa:	4b0b      	ldr	r3, [pc, #44]	; (800dfd8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800dfac:	4a0b      	ldr	r2, [pc, #44]	; (800dfdc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800dfae:	480c      	ldr	r0, [pc, #48]	; (800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800dfb0:	f240 11dd 	movw	r1, #477	; 0x1dd
 800dfb4:	f00f fafe 	bl	801d5b4 <__assert_func>
 800dfb8:	3b01      	subs	r3, #1
 800dfba:	b29b      	uxth	r3, r3
 800dfbc:	428b      	cmp	r3, r1
 800dfbe:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800dfc2:	d908      	bls.n	800dfd6 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800dfc4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800dfc8:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800dfcc:	681a      	ldr	r2, [r3, #0]
 800dfce:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800dfd2:	685a      	ldr	r2, [r3, #4]
 800dfd4:	6062      	str	r2, [r4, #4]
 800dfd6:	bd10      	pop	{r4, pc}
 800dfd8:	080205e7 	.word	0x080205e7
 800dfdc:	080206e0 	.word	0x080206e0
 800dfe0:	080205f5 	.word	0x080205f5

0800dfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800dfe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dfe6:	466b      	mov	r3, sp
 800dfe8:	e883 0006 	stmia.w	r3, {r1, r2}
 800dfec:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800dff0:	2a07      	cmp	r2, #7
 800dff2:	4604      	mov	r4, r0
 800dff4:	d906      	bls.n	800e004 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800dff6:	4b09      	ldr	r3, [pc, #36]	; (800e01c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800dff8:	4a09      	ldr	r2, [pc, #36]	; (800e020 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800dffa:	480a      	ldr	r0, [pc, #40]	; (800e024 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800dffc:	f240 11a3 	movw	r1, #419	; 0x1a3
 800e000:	f00f fad8 	bl	801d5b4 <__assert_func>
 800e004:	1c51      	adds	r1, r2, #1
 800e006:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e00a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e00e:	cb03      	ldmia	r3!, {r0, r1}
 800e010:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e014:	6069      	str	r1, [r5, #4]
 800e016:	b003      	add	sp, #12
 800e018:	bd30      	pop	{r4, r5, pc}
 800e01a:	bf00      	nop
 800e01c:	0802061e 	.word	0x0802061e
 800e020:	08020776 	.word	0x08020776
 800e024:	080205f5 	.word	0x080205f5

0800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e02c:	4b94      	ldr	r3, [pc, #592]	; (800e280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800e02e:	b08d      	sub	sp, #52	; 0x34
 800e030:	ac08      	add	r4, sp, #32
 800e032:	e884 0006 	stmia.w	r4, {r1, r2}
 800e036:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e03a:	4b92      	ldr	r3, [pc, #584]	; (800e284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800e03c:	4683      	mov	fp, r0
 800e03e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e042:	4620      	mov	r0, r4
 800e044:	f7ff fe8e 	bl	800dd64 <_ZN8touchgfx4Rect10restrictToEss>
 800e048:	4620      	mov	r0, r4
 800e04a:	f7fc fba4 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e04e:	2800      	cmp	r0, #0
 800e050:	d16a      	bne.n	800e128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e052:	9402      	str	r4, [sp, #8]
 800e054:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e058:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e05c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800e060:	2400      	movs	r4, #0
 800e062:	9301      	str	r3, [sp, #4]
 800e064:	36a0      	adds	r6, #160	; 0xa0
 800e066:	42a5      	cmp	r5, r4
 800e068:	d00d      	beq.n	800e086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800e06a:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800e06e:	9802      	ldr	r0, [sp, #8]
 800e070:	f7ff fec8 	bl	800de04 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e074:	b128      	cbz	r0, 800e082 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800e076:	1e69      	subs	r1, r5, #1
 800e078:	1b09      	subs	r1, r1, r4
 800e07a:	b289      	uxth	r1, r1
 800e07c:	9801      	ldr	r0, [sp, #4]
 800e07e:	f7ff ff8f 	bl	800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e082:	3401      	adds	r4, #1
 800e084:	e7ef      	b.n	800e066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800e086:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e08a:	9703      	str	r7, [sp, #12]
 800e08c:	1e7b      	subs	r3, r7, #1
 800e08e:	9300      	str	r3, [sp, #0]
 800e090:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800e094:	2400      	movs	r4, #0
 800e096:	4655      	mov	r5, sl
 800e098:	9704      	str	r7, [sp, #16]
 800e09a:	4626      	mov	r6, r4
 800e09c:	9b04      	ldr	r3, [sp, #16]
 800e09e:	2b00      	cmp	r3, #0
 800e0a0:	d078      	beq.n	800e194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800e0a2:	9902      	ldr	r1, [sp, #8]
 800e0a4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e0a8:	f7ff fe3a 	bl	800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e0ac:	b360      	cbz	r0, 800e108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e0ae:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800e0b2:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800e0b6:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800e0ba:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800e0be:	45e6      	cmp	lr, ip
 800e0c0:	db35      	blt.n	800e12e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e0c2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e0c6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e0ca:	4472      	add	r2, lr
 800e0cc:	4463      	add	r3, ip
 800e0ce:	b212      	sxth	r2, r2
 800e0d0:	b21b      	sxth	r3, r3
 800e0d2:	429a      	cmp	r2, r3
 800e0d4:	dc2b      	bgt.n	800e12e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e0d6:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e0da:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e0de:	fa1f f288 	uxth.w	r2, r8
 800e0e2:	4413      	add	r3, r2
 800e0e4:	b29b      	uxth	r3, r3
 800e0e6:	45c1      	cmp	r9, r8
 800e0e8:	fa0f fe83 	sxth.w	lr, r3
 800e0ec:	fa1f fc89 	uxth.w	ip, r9
 800e0f0:	db0f      	blt.n	800e112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e0f2:	eba3 030c 	sub.w	r3, r3, ip
 800e0f6:	1ac9      	subs	r1, r1, r3
 800e0f8:	b209      	sxth	r1, r1
 800e0fa:	2900      	cmp	r1, #0
 800e0fc:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e100:	dd12      	ble.n	800e128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e102:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800e106:	4604      	mov	r4, r0
 800e108:	9b04      	ldr	r3, [sp, #16]
 800e10a:	3b01      	subs	r3, #1
 800e10c:	9304      	str	r3, [sp, #16]
 800e10e:	3d08      	subs	r5, #8
 800e110:	e7c4      	b.n	800e09c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800e112:	4461      	add	r1, ip
 800e114:	b209      	sxth	r1, r1
 800e116:	4571      	cmp	r1, lr
 800e118:	dc3a      	bgt.n	800e190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e11a:	eba2 020c 	sub.w	r2, r2, ip
 800e11e:	b212      	sxth	r2, r2
 800e120:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e124:	2a00      	cmp	r2, #0
 800e126:	dcee      	bgt.n	800e106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e128:	b00d      	add	sp, #52	; 0x34
 800e12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e12e:	45c1      	cmp	r9, r8
 800e130:	db2e      	blt.n	800e190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e132:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e136:	4499      	add	r9, r3
 800e138:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e13c:	4498      	add	r8, r3
 800e13e:	fa0f f989 	sxth.w	r9, r9
 800e142:	fa0f f888 	sxth.w	r8, r8
 800e146:	45c1      	cmp	r9, r8
 800e148:	dc22      	bgt.n	800e190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e14a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e14e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800e152:	fa1f f28c 	uxth.w	r2, ip
 800e156:	4413      	add	r3, r2
 800e158:	b29b      	uxth	r3, r3
 800e15a:	45e6      	cmp	lr, ip
 800e15c:	fa1f f88e 	uxth.w	r8, lr
 800e160:	fa0f f983 	sxth.w	r9, r3
 800e164:	db0a      	blt.n	800e17c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800e166:	eba3 0308 	sub.w	r3, r3, r8
 800e16a:	1ac9      	subs	r1, r1, r3
 800e16c:	b209      	sxth	r1, r1
 800e16e:	2900      	cmp	r1, #0
 800e170:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e174:	ddd8      	ble.n	800e128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e176:	f8ad 9020 	strh.w	r9, [sp, #32]
 800e17a:	e7c4      	b.n	800e106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e17c:	4441      	add	r1, r8
 800e17e:	b209      	sxth	r1, r1
 800e180:	4549      	cmp	r1, r9
 800e182:	dc05      	bgt.n	800e190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e184:	eba2 0208 	sub.w	r2, r2, r8
 800e188:	b212      	sxth	r2, r2
 800e18a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800e18e:	e7c9      	b.n	800e124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e190:	4606      	mov	r6, r0
 800e192:	e7b9      	b.n	800e108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e194:	2c00      	cmp	r4, #0
 800e196:	f47f af7d 	bne.w	800e094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800e19a:	2e00      	cmp	r6, #0
 800e19c:	f000 81e1 	beq.w	800e562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e1a0:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800e1a4:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800e1a8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e1ac:	b2b9      	uxth	r1, r7
 800e1ae:	9104      	str	r1, [sp, #16]
 800e1b0:	9804      	ldr	r0, [sp, #16]
 800e1b2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e1b6:	4401      	add	r1, r0
 800e1b8:	b2b3      	uxth	r3, r6
 800e1ba:	b289      	uxth	r1, r1
 800e1bc:	441a      	add	r2, r3
 800e1be:	9105      	str	r1, [sp, #20]
 800e1c0:	b292      	uxth	r2, r2
 800e1c2:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800e1c6:	fa0f f882 	sxth.w	r8, r2
 800e1ca:	4655      	mov	r5, sl
 800e1cc:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800e1d0:	9b03      	ldr	r3, [sp, #12]
 800e1d2:	2b00      	cmp	r3, #0
 800e1d4:	d058      	beq.n	800e288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800e1d6:	9902      	ldr	r1, [sp, #8]
 800e1d8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e1dc:	f7ff fda0 	bl	800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e1e0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e1e4:	b1d8      	cbz	r0, 800e21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e1e6:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800e1ea:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800e1ee:	4576      	cmp	r6, lr
 800e1f0:	dc26      	bgt.n	800e240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e1f2:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800e1f6:	44f4      	add	ip, lr
 800e1f8:	fa0f fc8c 	sxth.w	ip, ip
 800e1fc:	45e0      	cmp	r8, ip
 800e1fe:	db1f      	blt.n	800e240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e200:	428f      	cmp	r7, r1
 800e202:	fa1f fc81 	uxth.w	ip, r1
 800e206:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800e20a:	dc0f      	bgt.n	800e22c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800e20c:	9805      	ldr	r0, [sp, #20]
 800e20e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800e212:	eba0 0c0c 	sub.w	ip, r0, ip
 800e216:	eba1 010c 	sub.w	r1, r1, ip
 800e21a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800e21e:	4620      	mov	r0, r4
 800e220:	9903      	ldr	r1, [sp, #12]
 800e222:	3901      	subs	r1, #1
 800e224:	9103      	str	r1, [sp, #12]
 800e226:	3d08      	subs	r5, #8
 800e228:	4604      	mov	r4, r0
 800e22a:	e7cf      	b.n	800e1cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800e22c:	4461      	add	r1, ip
 800e22e:	b209      	sxth	r1, r1
 800e230:	4549      	cmp	r1, r9
 800e232:	dcf5      	bgt.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e234:	9904      	ldr	r1, [sp, #16]
 800e236:	eba1 0c0c 	sub.w	ip, r1, ip
 800e23a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800e23e:	e7ee      	b.n	800e21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e240:	428f      	cmp	r7, r1
 800e242:	dced      	bgt.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e244:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800e248:	4461      	add	r1, ip
 800e24a:	b209      	sxth	r1, r1
 800e24c:	4589      	cmp	r9, r1
 800e24e:	dbe7      	blt.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e250:	4576      	cmp	r6, lr
 800e252:	fa1f fc8e 	uxth.w	ip, lr
 800e256:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800e25a:	dc08      	bgt.n	800e26e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800e25c:	eba2 0c0c 	sub.w	ip, r2, ip
 800e260:	eba1 010c 	sub.w	r1, r1, ip
 800e264:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800e268:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800e26c:	e7d7      	b.n	800e21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e26e:	4461      	add	r1, ip
 800e270:	b209      	sxth	r1, r1
 800e272:	4588      	cmp	r8, r1
 800e274:	dbd4      	blt.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e276:	eba3 0c0c 	sub.w	ip, r3, ip
 800e27a:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800e27e:	e7ce      	b.n	800e21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e280:	2000bfc2 	.word	0x2000bfc2
 800e284:	2000bfc0 	.word	0x2000bfc0
 800e288:	2c00      	cmp	r4, #0
 800e28a:	f000 816a 	beq.w	800e562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e28e:	9b00      	ldr	r3, [sp, #0]
 800e290:	3301      	adds	r3, #1
 800e292:	f000 8166 	beq.w	800e562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e296:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800e29a:	4621      	mov	r1, r4
 800e29c:	9802      	ldr	r0, [sp, #8]
 800e29e:	f7ff fdb1 	bl	800de04 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e2a2:	b120      	cbz	r0, 800e2ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800e2a4:	f8bd 1000 	ldrh.w	r1, [sp]
 800e2a8:	9801      	ldr	r0, [sp, #4]
 800e2aa:	f7ff fe79 	bl	800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e2ae:	9902      	ldr	r1, [sp, #8]
 800e2b0:	4620      	mov	r0, r4
 800e2b2:	f7ff fd35 	bl	800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e2b6:	2800      	cmp	r0, #0
 800e2b8:	f000 809b 	beq.w	800e3f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800e2bc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800e2c0:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800e2c4:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800e2c8:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800e2cc:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800e2d0:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800e2d4:	fa1f f288 	uxth.w	r2, r8
 800e2d8:	19d5      	adds	r5, r2, r7
 800e2da:	fa1f f985 	uxth.w	r9, r5
 800e2de:	fa0f f589 	sxth.w	r5, r9
 800e2e2:	b2a1      	uxth	r1, r4
 800e2e4:	440b      	add	r3, r1
 800e2e6:	9503      	str	r5, [sp, #12]
 800e2e8:	45a0      	cmp	r8, r4
 800e2ea:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e2ee:	9507      	str	r5, [sp, #28]
 800e2f0:	b29b      	uxth	r3, r3
 800e2f2:	f340 809d 	ble.w	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800e2f6:	1a52      	subs	r2, r2, r1
 800e2f8:	b292      	uxth	r2, r2
 800e2fa:	4584      	cmp	ip, r0
 800e2fc:	fa0f fe83 	sxth.w	lr, r3
 800e300:	b215      	sxth	r5, r2
 800e302:	dd2f      	ble.n	800e364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800e304:	9e00      	ldr	r6, [sp, #0]
 800e306:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e30a:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800e30e:	9e03      	ldr	r6, [sp, #12]
 800e310:	eba6 060e 	sub.w	r6, r6, lr
 800e314:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800e318:	fa1f fc8c 	uxth.w	ip, ip
 800e31c:	b280      	uxth	r0, r0
 800e31e:	ebac 0300 	sub.w	r3, ip, r0
 800e322:	448c      	add	ip, r1
 800e324:	4470      	add	r0, lr
 800e326:	b29b      	uxth	r3, r3
 800e328:	fa0f fc8c 	sxth.w	ip, ip
 800e32c:	b200      	sxth	r0, r0
 800e32e:	b21c      	sxth	r4, r3
 800e330:	ebac 0000 	sub.w	r0, ip, r0
 800e334:	4366      	muls	r6, r4
 800e336:	4368      	muls	r0, r5
 800e338:	4286      	cmp	r6, r0
 800e33a:	db09      	blt.n	800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800e33c:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800e340:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800e344:	4417      	add	r7, r2
 800e346:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e34a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e34e:	e681      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e350:	440b      	add	r3, r1
 800e352:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e356:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800e35a:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800e35e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e362:	e677      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e364:	9e03      	ldr	r6, [sp, #12]
 800e366:	45b6      	cmp	lr, r6
 800e368:	da28      	bge.n	800e3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800e36a:	9b00      	ldr	r3, [sp, #0]
 800e36c:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800e370:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800e374:	eb04 030c 	add.w	r3, r4, ip
 800e378:	fa1f f883 	uxth.w	r8, r3
 800e37c:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800e380:	4403      	add	r3, r0
 800e382:	eba3 0308 	sub.w	r3, r3, r8
 800e386:	b29b      	uxth	r3, r3
 800e388:	fa0f f988 	sxth.w	r9, r8
 800e38c:	eba0 000c 	sub.w	r0, r0, ip
 800e390:	fa0f f883 	sxth.w	r8, r3
 800e394:	eba6 060e 	sub.w	r6, r6, lr
 800e398:	4368      	muls	r0, r5
 800e39a:	fb08 f606 	mul.w	r6, r8, r6
 800e39e:	42b0      	cmp	r0, r6
 800e3a0:	dc06      	bgt.n	800e3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e3a2:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800e3a6:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800e3aa:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800e3ae:	e7c9      	b.n	800e344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800e3b0:	4423      	add	r3, r4
 800e3b2:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800e3b6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e3ba:	e64b      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e3bc:	9807      	ldr	r0, [sp, #28]
 800e3be:	eba3 0309 	sub.w	r3, r3, r9
 800e3c2:	b29b      	uxth	r3, r3
 800e3c4:	2806      	cmp	r0, #6
 800e3c6:	fa0f fc83 	sxth.w	ip, r3
 800e3ca:	d818      	bhi.n	800e3fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800e3cc:	4652      	mov	r2, sl
 800e3ce:	ab0a      	add	r3, sp, #40	; 0x28
 800e3d0:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800e3d4:	6851      	ldr	r1, [r2, #4]
 800e3d6:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800e3da:	c303      	stmia	r3!, {r0, r1}
 800e3dc:	9b03      	ldr	r3, [sp, #12]
 800e3de:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800e3e2:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800e3e6:	ab0a      	add	r3, sp, #40	; 0x28
 800e3e8:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e3ec:	9801      	ldr	r0, [sp, #4]
 800e3ee:	f7ff fdf9 	bl	800dfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e3f2:	9b00      	ldr	r3, [sp, #0]
 800e3f4:	3b01      	subs	r3, #1
 800e3f6:	9300      	str	r3, [sp, #0]
 800e3f8:	f1aa 0a08 	sub.w	sl, sl, #8
 800e3fc:	e747      	b.n	800e28e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800e3fe:	9800      	ldr	r0, [sp, #0]
 800e400:	45ac      	cmp	ip, r5
 800e402:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e406:	db0c      	blt.n	800e422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800e408:	4417      	add	r7, r2
 800e40a:	b2bf      	uxth	r7, r7
 800e40c:	4458      	add	r0, fp
 800e40e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e412:	440f      	add	r7, r1
 800e414:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e418:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800e41c:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800e420:	e618      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e422:	4458      	add	r0, fp
 800e424:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800e428:	443b      	add	r3, r7
 800e42a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e42e:	e611      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e430:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800e434:	fa1f f18c 	uxth.w	r1, ip
 800e438:	eb01 0e05 	add.w	lr, r1, r5
 800e43c:	b282      	uxth	r2, r0
 800e43e:	fa1f fe8e 	uxth.w	lr, lr
 800e442:	9204      	str	r2, [sp, #16]
 800e444:	fa0f f28e 	sxth.w	r2, lr
 800e448:	9205      	str	r2, [sp, #20]
 800e44a:	9e04      	ldr	r6, [sp, #16]
 800e44c:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800e450:	4432      	add	r2, r6
 800e452:	b292      	uxth	r2, r2
 800e454:	4584      	cmp	ip, r0
 800e456:	9206      	str	r2, [sp, #24]
 800e458:	da26      	bge.n	800e4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800e45a:	eba3 0309 	sub.w	r3, r3, r9
 800e45e:	eba2 020e 	sub.w	r2, r2, lr
 800e462:	b29b      	uxth	r3, r3
 800e464:	b292      	uxth	r2, r2
 800e466:	fa0f fa83 	sxth.w	sl, r3
 800e46a:	b211      	sxth	r1, r2
 800e46c:	eba0 000c 	sub.w	r0, r0, ip
 800e470:	eba4 0408 	sub.w	r4, r4, r8
 800e474:	fb0a f000 	mul.w	r0, sl, r0
 800e478:	434c      	muls	r4, r1
 800e47a:	42a0      	cmp	r0, r4
 800e47c:	9800      	ldr	r0, [sp, #0]
 800e47e:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e482:	dc06      	bgt.n	800e492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800e484:	4458      	add	r0, fp
 800e486:	9a05      	ldr	r2, [sp, #20]
 800e488:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800e48c:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800e490:	e7ca      	b.n	800e428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800e492:	eb0b 0300 	add.w	r3, fp, r0
 800e496:	9903      	ldr	r1, [sp, #12]
 800e498:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800e49c:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800e4a0:	442a      	add	r2, r5
 800e4a2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e4a6:	e5d5      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e4a8:	9e04      	ldr	r6, [sp, #16]
 800e4aa:	9a03      	ldr	r2, [sp, #12]
 800e4ac:	1b89      	subs	r1, r1, r6
 800e4ae:	b21e      	sxth	r6, r3
 800e4b0:	b289      	uxth	r1, r1
 800e4b2:	4296      	cmp	r6, r2
 800e4b4:	fa0f fc81 	sxth.w	ip, r1
 800e4b8:	dd26      	ble.n	800e508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800e4ba:	eba3 0309 	sub.w	r3, r3, r9
 800e4be:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800e4c2:	9e05      	ldr	r6, [sp, #20]
 800e4c4:	b29b      	uxth	r3, r3
 800e4c6:	eba6 0902 	sub.w	r9, r6, r2
 800e4ca:	b218      	sxth	r0, r3
 800e4cc:	eba4 0408 	sub.w	r4, r4, r8
 800e4d0:	fb0c f404 	mul.w	r4, ip, r4
 800e4d4:	fb00 f909 	mul.w	r9, r0, r9
 800e4d8:	9a00      	ldr	r2, [sp, #0]
 800e4da:	454c      	cmp	r4, r9
 800e4dc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e4e0:	db03      	blt.n	800e4ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800e4e2:	445a      	add	r2, fp
 800e4e4:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800e4e8:	e79e      	b.n	800e428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800e4ea:	eb0b 0302 	add.w	r3, fp, r2
 800e4ee:	9a03      	ldr	r2, [sp, #12]
 800e4f0:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800e4f4:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800e4f8:	4429      	add	r1, r5
 800e4fa:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800e4fe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e502:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e506:	e5a5      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e508:	9b06      	ldr	r3, [sp, #24]
 800e50a:	9c07      	ldr	r4, [sp, #28]
 800e50c:	eba3 020e 	sub.w	r2, r3, lr
 800e510:	b292      	uxth	r2, r2
 800e512:	2c06      	cmp	r4, #6
 800e514:	b213      	sxth	r3, r2
 800e516:	d80d      	bhi.n	800e534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800e518:	4651      	mov	r1, sl
 800e51a:	aa0a      	add	r2, sp, #40	; 0x28
 800e51c:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800e520:	6849      	ldr	r1, [r1, #4]
 800e522:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800e526:	9b05      	ldr	r3, [sp, #20]
 800e528:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800e52c:	c203      	stmia	r2!, {r0, r1}
 800e52e:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800e532:	e758      	b.n	800e3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e534:	9c00      	ldr	r4, [sp, #0]
 800e536:	4563      	cmp	r3, ip
 800e538:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e53c:	db0d      	blt.n	800e55a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800e53e:	4429      	add	r1, r5
 800e540:	9a04      	ldr	r2, [sp, #16]
 800e542:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800e546:	b289      	uxth	r1, r1
 800e548:	445c      	add	r4, fp
 800e54a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e54e:	4411      	add	r1, r2
 800e550:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800e554:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800e558:	e57c      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e55a:	445c      	add	r4, fp
 800e55c:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800e560:	e79e      	b.n	800e4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800e562:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e566:	2f07      	cmp	r7, #7
 800e568:	d806      	bhi.n	800e578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800e56a:	ab08      	add	r3, sp, #32
 800e56c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e570:	9801      	ldr	r0, [sp, #4]
 800e572:	f7ff fd37 	bl	800dfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e576:	e5d7      	b.n	800e128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e578:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e57c:	f107 39ff 	add.w	r9, r7, #4294967295
 800e580:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800e584:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800e588:	f04f 35ff 	mov.w	r5, #4294967295
 800e58c:	2400      	movs	r4, #0
 800e58e:	9304      	str	r3, [sp, #16]
 800e590:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800e594:	9300      	str	r3, [sp, #0]
 800e596:	f109 32ff 	add.w	r2, r9, #4294967295
 800e59a:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800e59e:	9303      	str	r3, [sp, #12]
 800e5a0:	4690      	mov	r8, r2
 800e5a2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e5a6:	f1b8 3fff 	cmp.w	r8, #4294967295
 800e5aa:	bf14      	ite	ne
 800e5ac:	9904      	ldrne	r1, [sp, #16]
 800e5ae:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800e5b2:	6818      	ldr	r0, [r3, #0]
 800e5b4:	9206      	str	r2, [sp, #24]
 800e5b6:	bf18      	it	ne
 800e5b8:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800e5bc:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800e5c0:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e5c4:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800e5c8:	9305      	str	r3, [sp, #20]
 800e5ca:	fb16 f601 	smulbb	r6, r6, r1
 800e5ce:	6859      	ldr	r1, [r3, #4]
 800e5d0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e5d4:	4671      	mov	r1, lr
 800e5d6:	a80a      	add	r0, sp, #40	; 0x28
 800e5d8:	f7ff fc3a 	bl	800de50 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e5dc:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800e5e0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e5e4:	9b03      	ldr	r3, [sp, #12]
 800e5e6:	9a00      	ldr	r2, [sp, #0]
 800e5e8:	fb11 f100 	smulbb	r1, r1, r0
 800e5ec:	fb02 6603 	mla	r6, r2, r3, r6
 800e5f0:	1b8e      	subs	r6, r1, r6
 800e5f2:	2008      	movs	r0, #8
 800e5f4:	fb91 f1f0 	sdiv	r1, r1, r0
 800e5f8:	42b1      	cmp	r1, r6
 800e5fa:	dc21      	bgt.n	800e640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800e5fc:	4556      	cmp	r6, sl
 800e5fe:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800e602:	da03      	bge.n	800e60c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800e604:	b1e6      	cbz	r6, 800e640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800e606:	46b2      	mov	sl, r6
 800e608:	4645      	mov	r5, r8
 800e60a:	464c      	mov	r4, r9
 800e60c:	f108 38ff 	add.w	r8, r8, #4294967295
 800e610:	f118 0f02 	cmn.w	r8, #2
 800e614:	d1c7      	bne.n	800e5a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800e616:	f1b2 3fff 	cmp.w	r2, #4294967295
 800e61a:	f1a7 0708 	sub.w	r7, r7, #8
 800e61e:	4691      	mov	r9, r2
 800e620:	d1b6      	bne.n	800e590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800e622:	9b01      	ldr	r3, [sp, #4]
 800e624:	b2a6      	uxth	r6, r4
 800e626:	00e4      	lsls	r4, r4, #3
 800e628:	1918      	adds	r0, r3, r4
 800e62a:	1c6b      	adds	r3, r5, #1
 800e62c:	d10b      	bne.n	800e646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800e62e:	4601      	mov	r1, r0
 800e630:	9802      	ldr	r0, [sp, #8]
 800e632:	f7ff fc0d 	bl	800de50 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e636:	4631      	mov	r1, r6
 800e638:	9801      	ldr	r0, [sp, #4]
 800e63a:	f7ff fcb1 	bl	800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e63e:	e509      	b.n	800e054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e640:	4645      	mov	r5, r8
 800e642:	464c      	mov	r4, r9
 800e644:	e7ed      	b.n	800e622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800e646:	9b01      	ldr	r3, [sp, #4]
 800e648:	00ed      	lsls	r5, r5, #3
 800e64a:	1959      	adds	r1, r3, r5
 800e64c:	f7ff fc00 	bl	800de50 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e650:	9b02      	ldr	r3, [sp, #8]
 800e652:	cb03      	ldmia	r3!, {r0, r1}
 800e654:	445d      	add	r5, fp
 800e656:	445c      	add	r4, fp
 800e658:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800e65c:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800e660:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800e664:	9b02      	ldr	r3, [sp, #8]
 800e666:	6861      	ldr	r1, [r4, #4]
 800e668:	c303      	stmia	r3!, {r0, r1}
 800e66a:	e7e4      	b.n	800e636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800e66c <_ZN8touchgfx11Application10invalidateEv>:
 800e66c:	4b09      	ldr	r3, [pc, #36]	; (800e694 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800e66e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e672:	4b09      	ldr	r3, [pc, #36]	; (800e698 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800e674:	b082      	sub	sp, #8
 800e676:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e67a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e67e:	2100      	movs	r1, #0
 800e680:	9100      	str	r1, [sp, #0]
 800e682:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e686:	ab02      	add	r3, sp, #8
 800e688:	e913 0006 	ldmdb	r3, {r1, r2}
 800e68c:	b002      	add	sp, #8
 800e68e:	f7ff bccb 	b.w	800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e692:	bf00      	nop
 800e694:	2000bfc0 	.word	0x2000bfc0
 800e698:	2000bfc2 	.word	0x2000bfc2

0800e69c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e6a0:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e6a4:	b09b      	sub	sp, #108	; 0x6c
 800e6a6:	4604      	mov	r4, r0
 800e6a8:	4630      	mov	r0, r6
 800e6aa:	f7fc f874 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e6ae:	4605      	mov	r5, r0
 800e6b0:	b940      	cbnz	r0, 800e6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800e6b2:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e6b6:	4620      	mov	r0, r4
 800e6b8:	f7ff fcb6 	bl	800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e6bc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e6c0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e6c4:	4bc6      	ldr	r3, [pc, #792]	; (800e9e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800e6c6:	681b      	ldr	r3, [r3, #0]
 800e6c8:	b33b      	cbz	r3, 800e71a <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800e6ca:	4dc6      	ldr	r5, [pc, #792]	; (800e9e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800e6cc:	4628      	mov	r0, r5
 800e6ce:	f7fc f862 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e6d2:	4606      	mov	r6, r0
 800e6d4:	bb08      	cbnz	r0, 800e71a <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800e6d6:	4628      	mov	r0, r5
 800e6d8:	f7ff f9c4 	bl	800da64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e6dc:	6829      	ldr	r1, [r5, #0]
 800e6de:	686a      	ldr	r2, [r5, #4]
 800e6e0:	4620      	mov	r0, r4
 800e6e2:	f7ff fca1 	bl	800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e6e6:	802e      	strh	r6, [r5, #0]
 800e6e8:	806e      	strh	r6, [r5, #2]
 800e6ea:	80ae      	strh	r6, [r5, #4]
 800e6ec:	80ee      	strh	r6, [r5, #6]
 800e6ee:	4dbe      	ldr	r5, [pc, #760]	; (800e9e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800e6f0:	a809      	add	r0, sp, #36	; 0x24
 800e6f2:	f7ff fc04 	bl	800defe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e6f6:	882f      	ldrh	r7, [r5, #0]
 800e6f8:	463e      	mov	r6, r7
 800e6fa:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e6fe:	42b3      	cmp	r3, r6
 800e700:	d912      	bls.n	800e728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800e702:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e706:	a809      	add	r0, sp, #36	; 0x24
 800e708:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e70c:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e710:	3601      	adds	r6, #1
 800e712:	f7ff fc67 	bl	800dfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e716:	b2b6      	uxth	r6, r6
 800e718:	e7ef      	b.n	800e6fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800e71a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e71e:	2b00      	cmp	r3, #0
 800e720:	d1e5      	bne.n	800e6ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800e722:	b01b      	add	sp, #108	; 0x6c
 800e724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e728:	463e      	mov	r6, r7
 800e72a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e72e:	42b3      	cmp	r3, r6
 800e730:	d90b      	bls.n	800e74a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800e732:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e736:	4620      	mov	r0, r4
 800e738:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e73c:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e740:	3601      	adds	r6, #1
 800e742:	f7ff fc71 	bl	800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e746:	b2b6      	uxth	r6, r6
 800e748:	e7ef      	b.n	800e72a <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800e74a:	4ea8      	ldr	r6, [pc, #672]	; (800e9ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800e74c:	6833      	ldr	r3, [r6, #0]
 800e74e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e752:	2b01      	cmp	r3, #1
 800e754:	f040 80d2 	bne.w	800e8fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800e758:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800e75c:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800e760:	4639      	mov	r1, r7
 800e762:	33aa      	adds	r3, #170	; 0xaa
 800e764:	2700      	movs	r7, #0
 800e766:	458c      	cmp	ip, r1
 800e768:	f103 0308 	add.w	r3, r3, #8
 800e76c:	dd0a      	ble.n	800e784 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800e76e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e772:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800e776:	4402      	add	r2, r0
 800e778:	b212      	sxth	r2, r2
 800e77a:	4297      	cmp	r7, r2
 800e77c:	bfb8      	it	lt
 800e77e:	4617      	movlt	r7, r2
 800e780:	3101      	adds	r1, #1
 800e782:	e7f0      	b.n	800e766 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800e784:	4b9a      	ldr	r3, [pc, #616]	; (800e9f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800e786:	f8b3 9000 	ldrh.w	r9, [r3]
 800e78a:	2300      	movs	r3, #0
 800e78c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e790:	f1b9 0f0f 	cmp.w	r9, #15
 800e794:	bf8c      	ite	hi
 800e796:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800e79a:	f04f 0901 	movls.w	r9, #1
 800e79e:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800e7a2:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800e7a6:	4440      	add	r0, r8
 800e7a8:	fa0f f880 	sxth.w	r8, r0
 800e7ac:	6830      	ldr	r0, [r6, #0]
 800e7ae:	4547      	cmp	r7, r8
 800e7b0:	6803      	ldr	r3, [r0, #0]
 800e7b2:	f340 8086 	ble.w	800e8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800e7b6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800e7ba:	4798      	blx	r3
 800e7bc:	eb08 0309 	add.w	r3, r8, r9
 800e7c0:	4298      	cmp	r0, r3
 800e7c2:	da08      	bge.n	800e7d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800e7c4:	4287      	cmp	r7, r0
 800e7c6:	dd06      	ble.n	800e7d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800e7c8:	4580      	cmp	r8, r0
 800e7ca:	dd70      	ble.n	800e8ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800e7cc:	f1b8 0f00 	cmp.w	r8, #0
 800e7d0:	dd6d      	ble.n	800e8ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800e7d2:	4638      	mov	r0, r7
 800e7d4:	e004      	b.n	800e7e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800e7d6:	4580      	cmp	r8, r0
 800e7d8:	dcfb      	bgt.n	800e7d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800e7da:	42b8      	cmp	r0, r7
 800e7dc:	bfa8      	it	ge
 800e7de:	4638      	movge	r0, r7
 800e7e0:	4b84      	ldr	r3, [pc, #528]	; (800e9f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800e7e2:	f8ad 8016 	strh.w	r8, [sp, #22]
 800e7e6:	eba0 0008 	sub.w	r0, r0, r8
 800e7ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e7ee:	f8b5 8000 	ldrh.w	r8, [r5]
 800e7f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e7f6:	2200      	movs	r2, #0
 800e7f8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e7fc:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e800:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e804:	4543      	cmp	r3, r8
 800e806:	d9ca      	bls.n	800e79e <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800e808:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800e80c:	ab07      	add	r3, sp, #28
 800e80e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e812:	6851      	ldr	r1, [r2, #4]
 800e814:	c303      	stmia	r3!, {r0, r1}
 800e816:	a905      	add	r1, sp, #20
 800e818:	a807      	add	r0, sp, #28
 800e81a:	f7ff fa81 	bl	800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e81e:	2800      	cmp	r0, #0
 800e820:	d04c      	beq.n	800e8bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800e822:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800e826:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800e82a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800e82e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800e832:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e836:	4686      	mov	lr, r0
 800e838:	4290      	cmp	r0, r2
 800e83a:	4450      	add	r0, sl
 800e83c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800e840:	bfb8      	it	lt
 800e842:	4696      	movlt	lr, r2
 800e844:	4452      	add	r2, sl
 800e846:	b280      	uxth	r0, r0
 800e848:	b292      	uxth	r2, r2
 800e84a:	4299      	cmp	r1, r3
 800e84c:	fa0f fb80 	sxth.w	fp, r0
 800e850:	fa0f fa82 	sxth.w	sl, r2
 800e854:	468c      	mov	ip, r1
 800e856:	bfb8      	it	lt
 800e858:	469c      	movlt	ip, r3
 800e85a:	45d3      	cmp	fp, sl
 800e85c:	bfb8      	it	lt
 800e85e:	4602      	movlt	r2, r0
 800e860:	eba2 020e 	sub.w	r2, r2, lr
 800e864:	f8ad 2020 	strh.w	r2, [sp, #32]
 800e868:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800e86c:	f8ad e01c 	strh.w	lr, [sp, #28]
 800e870:	4411      	add	r1, r2
 800e872:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e876:	f8ad c01e 	strh.w	ip, [sp, #30]
 800e87a:	4413      	add	r3, r2
 800e87c:	b289      	uxth	r1, r1
 800e87e:	b29b      	uxth	r3, r3
 800e880:	b208      	sxth	r0, r1
 800e882:	b21a      	sxth	r2, r3
 800e884:	4290      	cmp	r0, r2
 800e886:	bfb8      	it	lt
 800e888:	460b      	movlt	r3, r1
 800e88a:	eba3 030c 	sub.w	r3, r3, ip
 800e88e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e892:	a807      	add	r0, sp, #28
 800e894:	f7fb ff7f 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e898:	b920      	cbnz	r0, 800e8a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800e89a:	6823      	ldr	r3, [r4, #0]
 800e89c:	a907      	add	r1, sp, #28
 800e89e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e8a0:	4620      	mov	r0, r4
 800e8a2:	4798      	blx	r3
 800e8a4:	f108 0801 	add.w	r8, r8, #1
 800e8a8:	fa1f f888 	uxth.w	r8, r8
 800e8ac:	e7a8      	b.n	800e800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800e8ae:	6830      	ldr	r0, [r6, #0]
 800e8b0:	6803      	ldr	r3, [r0, #0]
 800e8b2:	2101      	movs	r1, #1
 800e8b4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800e8b8:	4798      	blx	r3
 800e8ba:	e770      	b.n	800e79e <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800e8bc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800e8c0:	e7e7      	b.n	800e892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800e8c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e8c4:	4798      	blx	r3
 800e8c6:	4b4c      	ldr	r3, [pc, #304]	; (800e9f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800e8c8:	781b      	ldrb	r3, [r3, #0]
 800e8ca:	2b00      	cmp	r3, #0
 800e8cc:	f43f af29 	beq.w	800e722 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800e8d0:	2300      	movs	r3, #0
 800e8d2:	882d      	ldrh	r5, [r5, #0]
 800e8d4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e8d8:	34ea      	adds	r4, #234	; 0xea
 800e8da:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e8de:	42ab      	cmp	r3, r5
 800e8e0:	f67f af1f 	bls.w	800e722 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800e8e4:	ab1a      	add	r3, sp, #104	; 0x68
 800e8e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e8ea:	3b44      	subs	r3, #68	; 0x44
 800e8ec:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e8f0:	4620      	mov	r0, r4
 800e8f2:	3501      	adds	r5, #1
 800e8f4:	f7ff fb76 	bl	800dfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e8f8:	b2ad      	uxth	r5, r5
 800e8fa:	e7ee      	b.n	800e8da <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800e8fc:	2b02      	cmp	r3, #2
 800e8fe:	f040 8136 	bne.w	800eb6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800e902:	4b3e      	ldr	r3, [pc, #248]	; (800e9fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800e904:	781b      	ldrb	r3, [r3, #0]
 800e906:	2b01      	cmp	r3, #1
 800e908:	d02c      	beq.n	800e964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800e90a:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800e90e:	882a      	ldrh	r2, [r5, #0]
 800e910:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800e914:	3201      	adds	r2, #1
 800e916:	b292      	uxth	r2, r2
 800e918:	2900      	cmp	r1, #0
 800e91a:	d0d4      	beq.n	800e8c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800e91c:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800e920:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800e924:	441f      	add	r7, r3
 800e926:	b23f      	sxth	r7, r7
 800e928:	4610      	mov	r0, r2
 800e92a:	f04f 0900 	mov.w	r9, #0
 800e92e:	b283      	uxth	r3, r0
 800e930:	4299      	cmp	r1, r3
 800e932:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800e936:	f240 80c5 	bls.w	800eac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800e93a:	44a0      	add	r8, r4
 800e93c:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800e940:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800e944:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800e948:	4573      	cmp	r3, lr
 800e94a:	4684      	mov	ip, r0
 800e94c:	f340 80a7 	ble.w	800ea9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800e950:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800e954:	4477      	add	r7, lr
 800e956:	b23f      	sxth	r7, r7
 800e958:	429f      	cmp	r7, r3
 800e95a:	bfa8      	it	ge
 800e95c:	461f      	movge	r7, r3
 800e95e:	3001      	adds	r0, #1
 800e960:	46e1      	mov	r9, ip
 800e962:	e7e4      	b.n	800e92e <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800e964:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800e968:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800e96c:	f1bb 0f00 	cmp.w	fp, #0
 800e970:	d0a9      	beq.n	800e8c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800e972:	882b      	ldrh	r3, [r5, #0]
 800e974:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800e978:	3301      	adds	r3, #1
 800e97a:	b29b      	uxth	r3, r3
 800e97c:	f04f 0800 	mov.w	r8, #0
 800e980:	b299      	uxth	r1, r3
 800e982:	458b      	cmp	fp, r1
 800e984:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800e988:	d93a      	bls.n	800ea00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800e98a:	4427      	add	r7, r4
 800e98c:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800e990:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800e994:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800e998:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800e99c:	4408      	add	r0, r1
 800e99e:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800e9a2:	4471      	add	r1, lr
 800e9a4:	b200      	sxth	r0, r0
 800e9a6:	b209      	sxth	r1, r1
 800e9a8:	4288      	cmp	r0, r1
 800e9aa:	469c      	mov	ip, r3
 800e9ac:	da06      	bge.n	800e9bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800e9ae:	4586      	cmp	lr, r0
 800e9b0:	4672      	mov	r2, lr
 800e9b2:	bfb8      	it	lt
 800e9b4:	4602      	movlt	r2, r0
 800e9b6:	3301      	adds	r3, #1
 800e9b8:	46e0      	mov	r8, ip
 800e9ba:	e7e1      	b.n	800e980 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800e9bc:	d10b      	bne.n	800e9d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800e9be:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800e9c2:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800e9c6:	458c      	cmp	ip, r1
 800e9c8:	bfb4      	ite	lt
 800e9ca:	469c      	movlt	ip, r3
 800e9cc:	46c4      	movge	ip, r8
 800e9ce:	4572      	cmp	r2, lr
 800e9d0:	bfb8      	it	lt
 800e9d2:	4672      	movlt	r2, lr
 800e9d4:	e7ef      	b.n	800e9b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800e9d6:	428a      	cmp	r2, r1
 800e9d8:	bfb8      	it	lt
 800e9da:	460a      	movlt	r2, r1
 800e9dc:	46c4      	mov	ip, r8
 800e9de:	e7ea      	b.n	800e9b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800e9e0:	2000c004 	.word	0x2000c004
 800e9e4:	2000c010 	.word	0x2000c010
 800e9e8:	20000060 	.word	0x20000060
 800e9ec:	2000bfcc 	.word	0x2000bfcc
 800e9f0:	2000bfc2 	.word	0x2000bfc2
 800e9f4:	2000bfc0 	.word	0x2000bfc0
 800e9f8:	2000bfca 	.word	0x2000bfca
 800e9fc:	2000bfc4 	.word	0x2000bfc4
 800ea00:	19e1      	adds	r1, r4, r7
 800ea02:	ab07      	add	r3, sp, #28
 800ea04:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800ea08:	6849      	ldr	r1, [r1, #4]
 800ea0a:	c303      	stmia	r3!, {r0, r1}
 800ea0c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ea10:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ea14:	2b13      	cmp	r3, #19
 800ea16:	bfd8      	it	le
 800ea18:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800ea1c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ea20:	440b      	add	r3, r1
 800ea22:	1a9b      	subs	r3, r3, r2
 800ea24:	a807      	add	r0, sp, #28
 800ea26:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ea2a:	f7ff f835 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ea2e:	a807      	add	r0, sp, #28
 800ea30:	f7fb feb1 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ea34:	2800      	cmp	r0, #0
 800ea36:	d197      	bne.n	800e968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ea38:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ea3c:	6830      	ldr	r0, [r6, #0]
 800ea3e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ea42:	f8d0 e000 	ldr.w	lr, [r0]
 800ea46:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ea4a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ea4e:	f1bc 0f14 	cmp.w	ip, #20
 800ea52:	bfa8      	it	ge
 800ea54:	f04f 0c14 	movge.w	ip, #20
 800ea58:	fa1f fc8c 	uxth.w	ip, ip
 800ea5c:	f8cd c000 	str.w	ip, [sp]
 800ea60:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800ea64:	47d0      	blx	sl
 800ea66:	4682      	mov	sl, r0
 800ea68:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ea6c:	a807      	add	r0, sp, #28
 800ea6e:	f7fe fff9 	bl	800da64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ea72:	6823      	ldr	r3, [r4, #0]
 800ea74:	4427      	add	r7, r4
 800ea76:	4620      	mov	r0, r4
 800ea78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea7a:	a907      	add	r1, sp, #28
 800ea7c:	4798      	blx	r3
 800ea7e:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800ea82:	eba0 000a 	sub.w	r0, r0, sl
 800ea86:	b200      	sxth	r0, r0
 800ea88:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800ea8c:	2800      	cmp	r0, #0
 800ea8e:	f47f af6b 	bne.w	800e968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ea92:	fa1f f188 	uxth.w	r1, r8
 800ea96:	4648      	mov	r0, r9
 800ea98:	f7ff fa82 	bl	800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ea9c:	e764      	b.n	800e968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ea9e:	d10c      	bne.n	800eaba <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800eaa0:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800eaa4:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800eaa8:	45e6      	cmp	lr, ip
 800eaaa:	bfb4      	ite	lt
 800eaac:	4684      	movlt	ip, r0
 800eaae:	46cc      	movge	ip, r9
 800eab0:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800eab4:	4473      	add	r3, lr
 800eab6:	b21b      	sxth	r3, r3
 800eab8:	e74e      	b.n	800e958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800eaba:	4577      	cmp	r7, lr
 800eabc:	bfa8      	it	ge
 800eabe:	4677      	movge	r7, lr
 800eac0:	46cc      	mov	ip, r9
 800eac2:	e74c      	b.n	800e95e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800eac4:	eb0a 0008 	add.w	r0, sl, r8
 800eac8:	44a0      	add	r8, r4
 800eaca:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800eace:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800ead2:	f1bb 0f13 	cmp.w	fp, #19
 800ead6:	bfde      	ittt	le
 800ead8:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800eadc:	445f      	addle	r7, fp
 800eade:	b23f      	sxthle	r7, r7
 800eae0:	f7fb fe59 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eae4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800eae8:	2800      	cmp	r0, #0
 800eaea:	f47f af15 	bne.w	800e918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800eaee:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800eaf2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800eaf6:	1abf      	subs	r7, r7, r2
 800eaf8:	2f14      	cmp	r7, #20
 800eafa:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800eafe:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800eb02:	6830      	ldr	r0, [r6, #0]
 800eb04:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eb08:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eb0c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eb10:	bfa8      	it	ge
 800eb12:	2714      	movge	r7, #20
 800eb14:	f8d0 c000 	ldr.w	ip, [r0]
 800eb18:	b2bf      	uxth	r7, r7
 800eb1a:	fa1f fb8b 	uxth.w	fp, fp
 800eb1e:	455f      	cmp	r7, fp
 800eb20:	bf94      	ite	ls
 800eb22:	9700      	strls	r7, [sp, #0]
 800eb24:	f8cd b000 	strhi.w	fp, [sp]
 800eb28:	b292      	uxth	r2, r2
 800eb2a:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800eb2e:	b29b      	uxth	r3, r3
 800eb30:	b289      	uxth	r1, r1
 800eb32:	47b8      	blx	r7
 800eb34:	6823      	ldr	r3, [r4, #0]
 800eb36:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800eb3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800eb3c:	a907      	add	r1, sp, #28
 800eb3e:	4620      	mov	r0, r4
 800eb40:	4798      	blx	r3
 800eb42:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800eb46:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800eb4a:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800eb4e:	1a5b      	subs	r3, r3, r1
 800eb50:	440a      	add	r2, r1
 800eb52:	b21b      	sxth	r3, r3
 800eb54:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800eb58:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800eb5c:	2b00      	cmp	r3, #0
 800eb5e:	f47f aed6 	bne.w	800e90e <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800eb62:	fa1f f189 	uxth.w	r1, r9
 800eb66:	4650      	mov	r0, sl
 800eb68:	f7ff fa1a 	bl	800dfa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eb6c:	e6cf      	b.n	800e90e <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800eb6e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800eb72:	42bb      	cmp	r3, r7
 800eb74:	f67f aea7 	bls.w	800e8c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800eb78:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800eb7c:	ab07      	add	r3, sp, #28
 800eb7e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800eb82:	6851      	ldr	r1, [r2, #4]
 800eb84:	c303      	stmia	r3!, {r0, r1}
 800eb86:	a807      	add	r0, sp, #28
 800eb88:	f7fb fe05 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb8c:	b920      	cbnz	r0, 800eb98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800eb8e:	6823      	ldr	r3, [r4, #0]
 800eb90:	a907      	add	r1, sp, #28
 800eb92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800eb94:	4620      	mov	r0, r4
 800eb96:	4798      	blx	r3
 800eb98:	3701      	adds	r7, #1
 800eb9a:	b2bf      	uxth	r7, r7
 800eb9c:	e7e7      	b.n	800eb6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800eb9e:	bf00      	nop

0800eba0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800eba0:	4b03      	ldr	r3, [pc, #12]	; (800ebb0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800eba2:	2200      	movs	r2, #0
 800eba4:	801a      	strh	r2, [r3, #0]
 800eba6:	805a      	strh	r2, [r3, #2]
 800eba8:	809a      	strh	r2, [r3, #4]
 800ebaa:	80da      	strh	r2, [r3, #6]
 800ebac:	4770      	bx	lr
 800ebae:	bf00      	nop
 800ebb0:	2000c010 	.word	0x2000c010

0800ebb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ebb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebb8:	4606      	mov	r6, r0
 800ebba:	b09d      	sub	sp, #116	; 0x74
 800ebbc:	a803      	add	r0, sp, #12
 800ebbe:	4614      	mov	r4, r2
 800ebc0:	468a      	mov	sl, r1
 800ebc2:	461d      	mov	r5, r3
 800ebc4:	f000 fd6a 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800ebc8:	6833      	ldr	r3, [r6, #0]
 800ebca:	4630      	mov	r0, r6
 800ebcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ebce:	4798      	blx	r3
 800ebd0:	6833      	ldr	r3, [r6, #0]
 800ebd2:	4607      	mov	r7, r0
 800ebd4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ebd6:	4630      	mov	r0, r6
 800ebd8:	4798      	blx	r3
 800ebda:	462a      	mov	r2, r5
 800ebdc:	9000      	str	r0, [sp, #0]
 800ebde:	4621      	mov	r1, r4
 800ebe0:	463b      	mov	r3, r7
 800ebe2:	a803      	add	r0, sp, #12
 800ebe4:	f000 fdc6 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ebe8:	2500      	movs	r5, #0
 800ebea:	462c      	mov	r4, r5
 800ebec:	46a9      	mov	r9, r5
 800ebee:	46a8      	mov	r8, r5
 800ebf0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ebf4:	2300      	movs	r3, #0
 800ebf6:	9302      	str	r3, [sp, #8]
 800ebf8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ebfc:	429c      	cmp	r4, r3
 800ebfe:	d002      	beq.n	800ec06 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ec00:	455c      	cmp	r4, fp
 800ec02:	bf18      	it	ne
 800ec04:	4625      	movne	r5, r4
 800ec06:	ab02      	add	r3, sp, #8
 800ec08:	4632      	mov	r2, r6
 800ec0a:	4651      	mov	r1, sl
 800ec0c:	a803      	add	r0, sp, #12
 800ec0e:	f001 f8c1 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec12:	4604      	mov	r4, r0
 800ec14:	b108      	cbz	r0, 800ec1a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ec16:	280a      	cmp	r0, #10
 800ec18:	d10a      	bne.n	800ec30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ec1a:	45c1      	cmp	r9, r8
 800ec1c:	bf38      	it	cc
 800ec1e:	46c1      	movcc	r9, r8
 800ec20:	f04f 0800 	mov.w	r8, #0
 800ec24:	2c00      	cmp	r4, #0
 800ec26:	d1e5      	bne.n	800ebf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec28:	4648      	mov	r0, r9
 800ec2a:	b01d      	add	sp, #116	; 0x74
 800ec2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec30:	9a02      	ldr	r2, [sp, #8]
 800ec32:	2a00      	cmp	r2, #0
 800ec34:	d0de      	beq.n	800ebf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec36:	7b57      	ldrb	r7, [r2, #13]
 800ec38:	6833      	ldr	r3, [r6, #0]
 800ec3a:	8894      	ldrh	r4, [r2, #4]
 800ec3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec3e:	007f      	lsls	r7, r7, #1
 800ec40:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ec44:	7a97      	ldrb	r7, [r2, #10]
 800ec46:	4629      	mov	r1, r5
 800ec48:	4307      	orrs	r7, r0
 800ec4a:	4630      	mov	r0, r6
 800ec4c:	4798      	blx	r3
 800ec4e:	4438      	add	r0, r7
 800ec50:	4480      	add	r8, r0
 800ec52:	fa1f f888 	uxth.w	r8, r8
 800ec56:	e7e5      	b.n	800ec24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ec58 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ec58:	b508      	push	{r3, lr}
 800ec5a:	6803      	ldr	r3, [r0, #0]
 800ec5c:	68db      	ldr	r3, [r3, #12]
 800ec5e:	4798      	blx	r3
 800ec60:	b128      	cbz	r0, 800ec6e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ec62:	7b43      	ldrb	r3, [r0, #13]
 800ec64:	7a80      	ldrb	r0, [r0, #10]
 800ec66:	005b      	lsls	r3, r3, #1
 800ec68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ec6c:	4318      	orrs	r0, r3
 800ec6e:	bd08      	pop	{r3, pc}

0800ec70 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ec70:	b40e      	push	{r1, r2, r3}
 800ec72:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec74:	b09e      	sub	sp, #120	; 0x78
 800ec76:	ab23      	add	r3, sp, #140	; 0x8c
 800ec78:	4605      	mov	r5, r0
 800ec7a:	f853 4b04 	ldr.w	r4, [r3], #4
 800ec7e:	9303      	str	r3, [sp, #12]
 800ec80:	a805      	add	r0, sp, #20
 800ec82:	f000 fd0b 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800ec86:	682b      	ldr	r3, [r5, #0]
 800ec88:	4628      	mov	r0, r5
 800ec8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec8c:	4798      	blx	r3
 800ec8e:	682b      	ldr	r3, [r5, #0]
 800ec90:	4606      	mov	r6, r0
 800ec92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ec94:	4628      	mov	r0, r5
 800ec96:	4798      	blx	r3
 800ec98:	4633      	mov	r3, r6
 800ec9a:	ae1e      	add	r6, sp, #120	; 0x78
 800ec9c:	4621      	mov	r1, r4
 800ec9e:	9000      	str	r0, [sp, #0]
 800eca0:	9a03      	ldr	r2, [sp, #12]
 800eca2:	2400      	movs	r4, #0
 800eca4:	a805      	add	r0, sp, #20
 800eca6:	f000 fd65 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ecaa:	f846 4d68 	str.w	r4, [r6, #-104]!
 800ecae:	462a      	mov	r2, r5
 800ecb0:	4633      	mov	r3, r6
 800ecb2:	4621      	mov	r1, r4
 800ecb4:	a805      	add	r0, sp, #20
 800ecb6:	f001 f86d 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ecba:	b1f0      	cbz	r0, 800ecfa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800ecbc:	280a      	cmp	r0, #10
 800ecbe:	d018      	beq.n	800ecf2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ecc0:	9f04      	ldr	r7, [sp, #16]
 800ecc2:	b1b7      	cbz	r7, 800ecf2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ecc4:	7b78      	ldrb	r0, [r7, #13]
 800ecc6:	7a3b      	ldrb	r3, [r7, #8]
 800ecc8:	88aa      	ldrh	r2, [r5, #4]
 800ecca:	00c1      	lsls	r1, r0, #3
 800eccc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ecd0:	4319      	orrs	r1, r3
 800ecd2:	0643      	lsls	r3, r0, #25
 800ecd4:	bf44      	itt	mi
 800ecd6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800ecda:	b219      	sxthmi	r1, r3
 800ecdc:	0100      	lsls	r0, r0, #4
 800ecde:	79fb      	ldrb	r3, [r7, #7]
 800ece0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ece4:	4303      	orrs	r3, r0
 800ece6:	4413      	add	r3, r2
 800ece8:	1a5b      	subs	r3, r3, r1
 800ecea:	b29b      	uxth	r3, r3
 800ecec:	42a3      	cmp	r3, r4
 800ecee:	bfc8      	it	gt
 800ecf0:	b21c      	sxthgt	r4, r3
 800ecf2:	4633      	mov	r3, r6
 800ecf4:	462a      	mov	r2, r5
 800ecf6:	2100      	movs	r1, #0
 800ecf8:	e7dc      	b.n	800ecb4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800ecfa:	b2a0      	uxth	r0, r4
 800ecfc:	b01e      	add	sp, #120	; 0x78
 800ecfe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ed02:	b003      	add	sp, #12
 800ed04:	4770      	bx	lr

0800ed06 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800ed06:	b40e      	push	{r1, r2, r3}
 800ed08:	b570      	push	{r4, r5, r6, lr}
 800ed0a:	b09d      	sub	sp, #116	; 0x74
 800ed0c:	ab21      	add	r3, sp, #132	; 0x84
 800ed0e:	4604      	mov	r4, r0
 800ed10:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed14:	9302      	str	r3, [sp, #8]
 800ed16:	a803      	add	r0, sp, #12
 800ed18:	f000 fcc0 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800ed1c:	6823      	ldr	r3, [r4, #0]
 800ed1e:	4620      	mov	r0, r4
 800ed20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed22:	4798      	blx	r3
 800ed24:	6823      	ldr	r3, [r4, #0]
 800ed26:	4606      	mov	r6, r0
 800ed28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ed2a:	4620      	mov	r0, r4
 800ed2c:	4798      	blx	r3
 800ed2e:	4633      	mov	r3, r6
 800ed30:	9000      	str	r0, [sp, #0]
 800ed32:	9a02      	ldr	r2, [sp, #8]
 800ed34:	4629      	mov	r1, r5
 800ed36:	a803      	add	r0, sp, #12
 800ed38:	f000 fd1c 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed3c:	a803      	add	r0, sp, #12
 800ed3e:	f001 f923 	bl	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed42:	2401      	movs	r4, #1
 800ed44:	b2a3      	uxth	r3, r4
 800ed46:	b140      	cbz	r0, 800ed5a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800ed48:	280a      	cmp	r0, #10
 800ed4a:	bf08      	it	eq
 800ed4c:	3301      	addeq	r3, #1
 800ed4e:	a803      	add	r0, sp, #12
 800ed50:	bf08      	it	eq
 800ed52:	b21c      	sxtheq	r4, r3
 800ed54:	f001 f918 	bl	800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed58:	e7f4      	b.n	800ed44 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800ed5a:	4618      	mov	r0, r3
 800ed5c:	b01d      	add	sp, #116	; 0x74
 800ed5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed62:	b003      	add	sp, #12
 800ed64:	4770      	bx	lr

0800ed66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ed66:	b40e      	push	{r1, r2, r3}
 800ed68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed6a:	b09e      	sub	sp, #120	; 0x78
 800ed6c:	ab23      	add	r3, sp, #140	; 0x8c
 800ed6e:	4604      	mov	r4, r0
 800ed70:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed74:	9303      	str	r3, [sp, #12]
 800ed76:	a805      	add	r0, sp, #20
 800ed78:	f000 fc90 	bl	800f69c <_ZN8touchgfx12TextProviderC1Ev>
 800ed7c:	6823      	ldr	r3, [r4, #0]
 800ed7e:	4620      	mov	r0, r4
 800ed80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed82:	4798      	blx	r3
 800ed84:	6823      	ldr	r3, [r4, #0]
 800ed86:	4606      	mov	r6, r0
 800ed88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ed8a:	4620      	mov	r0, r4
 800ed8c:	4798      	blx	r3
 800ed8e:	4633      	mov	r3, r6
 800ed90:	4629      	mov	r1, r5
 800ed92:	9000      	str	r0, [sp, #0]
 800ed94:	9a03      	ldr	r2, [sp, #12]
 800ed96:	a805      	add	r0, sp, #20
 800ed98:	ad1e      	add	r5, sp, #120	; 0x78
 800ed9a:	f000 fceb 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed9e:	2100      	movs	r1, #0
 800eda0:	f845 1d68 	str.w	r1, [r5, #-104]!
 800eda4:	4622      	mov	r2, r4
 800eda6:	462b      	mov	r3, r5
 800eda8:	a805      	add	r0, sp, #20
 800edaa:	f000 fff3 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edae:	26ff      	movs	r6, #255	; 0xff
 800edb0:	b1d8      	cbz	r0, 800edea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800edb2:	280a      	cmp	r0, #10
 800edb4:	d012      	beq.n	800eddc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800edb6:	9804      	ldr	r0, [sp, #16]
 800edb8:	b180      	cbz	r0, 800eddc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800edba:	7b47      	ldrb	r7, [r0, #13]
 800edbc:	7922      	ldrb	r2, [r4, #4]
 800edbe:	00fb      	lsls	r3, r7, #3
 800edc0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800edc4:	7a03      	ldrb	r3, [r0, #8]
 800edc6:	430b      	orrs	r3, r1
 800edc8:	0679      	lsls	r1, r7, #25
 800edca:	bf44      	itt	mi
 800edcc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800edd0:	b21b      	sxthmi	r3, r3
 800edd2:	1ad3      	subs	r3, r2, r3
 800edd4:	b2db      	uxtb	r3, r3
 800edd6:	429e      	cmp	r6, r3
 800edd8:	bf28      	it	cs
 800edda:	461e      	movcs	r6, r3
 800eddc:	462b      	mov	r3, r5
 800edde:	4622      	mov	r2, r4
 800ede0:	2100      	movs	r1, #0
 800ede2:	a805      	add	r0, sp, #20
 800ede4:	f000 ffd6 	bl	800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ede8:	e7e2      	b.n	800edb0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800edea:	4630      	mov	r0, r6
 800edec:	b01e      	add	sp, #120	; 0x78
 800edee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800edf2:	b003      	add	sp, #12
 800edf4:	4770      	bx	lr

0800edf6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800edf6:	b513      	push	{r0, r1, r4, lr}
 800edf8:	6803      	ldr	r3, [r0, #0]
 800edfa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800edfe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ee02:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ee06:	2400      	movs	r4, #0
 800ee08:	9400      	str	r4, [sp, #0]
 800ee0a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ee0e:	691b      	ldr	r3, [r3, #16]
 800ee10:	4669      	mov	r1, sp
 800ee12:	4798      	blx	r3
 800ee14:	b002      	add	sp, #8
 800ee16:	bd10      	pop	{r4, pc}

0800ee18 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ee18:	b538      	push	{r3, r4, r5, lr}
 800ee1a:	680b      	ldr	r3, [r1, #0]
 800ee1c:	460c      	mov	r4, r1
 800ee1e:	68db      	ldr	r3, [r3, #12]
 800ee20:	4605      	mov	r5, r0
 800ee22:	4798      	blx	r3
 800ee24:	6823      	ldr	r3, [r4, #0]
 800ee26:	4620      	mov	r0, r4
 800ee28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee2a:	4629      	mov	r1, r5
 800ee2c:	4798      	blx	r3
 800ee2e:	4628      	mov	r0, r5
 800ee30:	bd38      	pop	{r3, r4, r5, pc}

0800ee32 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ee32:	b410      	push	{r4}
 800ee34:	880a      	ldrh	r2, [r1, #0]
 800ee36:	8884      	ldrh	r4, [r0, #4]
 800ee38:	4422      	add	r2, r4
 800ee3a:	800a      	strh	r2, [r1, #0]
 800ee3c:	88c4      	ldrh	r4, [r0, #6]
 800ee3e:	884a      	ldrh	r2, [r1, #2]
 800ee40:	4422      	add	r2, r4
 800ee42:	804a      	strh	r2, [r1, #2]
 800ee44:	6940      	ldr	r0, [r0, #20]
 800ee46:	b120      	cbz	r0, 800ee52 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ee48:	6803      	ldr	r3, [r0, #0]
 800ee4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee50:	4718      	bx	r3
 800ee52:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee56:	4770      	bx	lr

0800ee58 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ee58:	b570      	push	{r4, r5, r6, lr}
 800ee5a:	8882      	ldrh	r2, [r0, #4]
 800ee5c:	880b      	ldrh	r3, [r1, #0]
 800ee5e:	4413      	add	r3, r2
 800ee60:	800b      	strh	r3, [r1, #0]
 800ee62:	88c2      	ldrh	r2, [r0, #6]
 800ee64:	884b      	ldrh	r3, [r1, #2]
 800ee66:	460c      	mov	r4, r1
 800ee68:	4413      	add	r3, r2
 800ee6a:	804b      	strh	r3, [r1, #2]
 800ee6c:	4605      	mov	r5, r0
 800ee6e:	1d01      	adds	r1, r0, #4
 800ee70:	4620      	mov	r0, r4
 800ee72:	f7fb fc4d 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800ee76:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800ee7a:	2b00      	cmp	r3, #0
 800ee7c:	dd0b      	ble.n	800ee96 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee7e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ee82:	2b00      	cmp	r3, #0
 800ee84:	dd07      	ble.n	800ee96 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee86:	6968      	ldr	r0, [r5, #20]
 800ee88:	b128      	cbz	r0, 800ee96 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ee8a:	6803      	ldr	r3, [r0, #0]
 800ee8c:	4621      	mov	r1, r4
 800ee8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ee90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee94:	4718      	bx	r3
 800ee96:	bd70      	pop	{r4, r5, r6, pc}

0800ee98 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800ee98:	b570      	push	{r4, r5, r6, lr}
 800ee9a:	8882      	ldrh	r2, [r0, #4]
 800ee9c:	880b      	ldrh	r3, [r1, #0]
 800ee9e:	4413      	add	r3, r2
 800eea0:	800b      	strh	r3, [r1, #0]
 800eea2:	88c2      	ldrh	r2, [r0, #6]
 800eea4:	884b      	ldrh	r3, [r1, #2]
 800eea6:	460c      	mov	r4, r1
 800eea8:	4413      	add	r3, r2
 800eeaa:	804b      	strh	r3, [r1, #2]
 800eeac:	4605      	mov	r5, r0
 800eeae:	1d01      	adds	r1, r0, #4
 800eeb0:	4620      	mov	r0, r4
 800eeb2:	f7fb fc2d 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800eeb6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800eeba:	2b00      	cmp	r3, #0
 800eebc:	dd18      	ble.n	800eef0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800eebe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800eec2:	2b00      	cmp	r3, #0
 800eec4:	dd14      	ble.n	800eef0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800eec6:	6968      	ldr	r0, [r5, #20]
 800eec8:	b128      	cbz	r0, 800eed6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800eeca:	6803      	ldr	r3, [r0, #0]
 800eecc:	4621      	mov	r1, r4
 800eece:	691b      	ldr	r3, [r3, #16]
 800eed0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eed4:	4718      	bx	r3
 800eed6:	4b07      	ldr	r3, [pc, #28]	; (800eef4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800eed8:	681b      	ldr	r3, [r3, #0]
 800eeda:	3304      	adds	r3, #4
 800eedc:	429d      	cmp	r5, r3
 800eede:	d107      	bne.n	800eef0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800eee0:	f7fe fffc 	bl	800dedc <_ZN8touchgfx11Application11getInstanceEv>
 800eee4:	6821      	ldr	r1, [r4, #0]
 800eee6:	6862      	ldr	r2, [r4, #4]
 800eee8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eeec:	f7ff b89c 	b.w	800e028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800eef0:	bd70      	pop	{r4, r5, r6, pc}
 800eef2:	bf00      	nop
 800eef4:	2000c008 	.word	0x2000c008

0800eef8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800eef8:	b570      	push	{r4, r5, r6, lr}
 800eefa:	4604      	mov	r4, r0
 800eefc:	4616      	mov	r6, r2
 800eefe:	460d      	mov	r5, r1
 800ef00:	b901      	cbnz	r1, 800ef04 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ef02:	b192      	cbz	r2, 800ef2a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800ef04:	6823      	ldr	r3, [r4, #0]
 800ef06:	4620      	mov	r0, r4
 800ef08:	699b      	ldr	r3, [r3, #24]
 800ef0a:	4798      	blx	r3
 800ef0c:	88e2      	ldrh	r2, [r4, #6]
 800ef0e:	88a1      	ldrh	r1, [r4, #4]
 800ef10:	4432      	add	r2, r6
 800ef12:	4429      	add	r1, r5
 800ef14:	4620      	mov	r0, r4
 800ef16:	b212      	sxth	r2, r2
 800ef18:	b209      	sxth	r1, r1
 800ef1a:	f7f3 ffd0 	bl	8002ebe <_ZN8touchgfx8Drawable5setXYEss>
 800ef1e:	6823      	ldr	r3, [r4, #0]
 800ef20:	4620      	mov	r0, r4
 800ef22:	699b      	ldr	r3, [r3, #24]
 800ef24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef28:	4718      	bx	r3
 800ef2a:	bd70      	pop	{r4, r5, r6, pc}

0800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ef2c:	b510      	push	{r4, lr}
 800ef2e:	4604      	mov	r4, r0
 800ef30:	4608      	mov	r0, r1
 800ef32:	2300      	movs	r3, #0
 800ef34:	8023      	strh	r3, [r4, #0]
 800ef36:	8063      	strh	r3, [r4, #2]
 800ef38:	6803      	ldr	r3, [r0, #0]
 800ef3a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ef3e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ef42:	80a1      	strh	r1, [r4, #4]
 800ef44:	80e2      	strh	r2, [r4, #6]
 800ef46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef48:	4621      	mov	r1, r4
 800ef4a:	4798      	blx	r3
 800ef4c:	4620      	mov	r0, r4
 800ef4e:	bd10      	pop	{r4, pc}

0800ef50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ef50:	b530      	push	{r4, r5, lr}
 800ef52:	8083      	strh	r3, [r0, #4]
 800ef54:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ef58:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ef5c:	7183      	strb	r3, [r0, #6]
 800ef5e:	79c3      	ldrb	r3, [r0, #7]
 800ef60:	6101      	str	r1, [r0, #16]
 800ef62:	f365 0306 	bfi	r3, r5, #0, #7
 800ef66:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ef6a:	8282      	strh	r2, [r0, #20]
 800ef6c:	f365 13c7 	bfi	r3, r5, #7, #1
 800ef70:	71c3      	strb	r3, [r0, #7]
 800ef72:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ef76:	7203      	strb	r3, [r0, #8]
 800ef78:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ef7c:	7243      	strb	r3, [r0, #9]
 800ef7e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ef82:	8143      	strh	r3, [r0, #10]
 800ef84:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ef88:	8183      	strh	r3, [r0, #12]
 800ef8a:	4b01      	ldr	r3, [pc, #4]	; (800ef90 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ef8c:	6003      	str	r3, [r0, #0]
 800ef8e:	bd30      	pop	{r4, r5, pc}
 800ef90:	08020878 	.word	0x08020878

0800ef94 <_ZNK8touchgfx9ConstFont4findEt>:
 800ef94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef96:	6904      	ldr	r4, [r0, #16]
 800ef98:	b3bc      	cbz	r4, 800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ef9a:	88a3      	ldrh	r3, [r4, #4]
 800ef9c:	8a82      	ldrh	r2, [r0, #20]
 800ef9e:	1acb      	subs	r3, r1, r3
 800efa0:	f102 32ff 	add.w	r2, r2, #4294967295
 800efa4:	d431      	bmi.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efa6:	4293      	cmp	r3, r2
 800efa8:	dd0c      	ble.n	800efc4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800efaa:	230e      	movs	r3, #14
 800efac:	fb03 4302 	mla	r3, r3, r2, r4
 800efb0:	889b      	ldrh	r3, [r3, #4]
 800efb2:	1a5b      	subs	r3, r3, r1
 800efb4:	1ad3      	subs	r3, r2, r3
 800efb6:	429a      	cmp	r2, r3
 800efb8:	db27      	blt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efba:	2b00      	cmp	r3, #0
 800efbc:	bfbc      	itt	lt
 800efbe:	2302      	movlt	r3, #2
 800efc0:	fb92 f3f3 	sdivlt	r3, r2, r3
 800efc4:	2500      	movs	r5, #0
 800efc6:	260e      	movs	r6, #14
 800efc8:	4295      	cmp	r5, r2
 800efca:	dc1e      	bgt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efcc:	fb06 4003 	mla	r0, r6, r3, r4
 800efd0:	8887      	ldrh	r7, [r0, #4]
 800efd2:	42b9      	cmp	r1, r7
 800efd4:	d01a      	beq.n	800f00c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800efd6:	d20d      	bcs.n	800eff4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800efd8:	1e5a      	subs	r2, r3, #1
 800efda:	4295      	cmp	r5, r2
 800efdc:	dc15      	bgt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efde:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800efe2:	1a5b      	subs	r3, r3, r1
 800efe4:	1ad3      	subs	r3, r2, r3
 800efe6:	429a      	cmp	r2, r3
 800efe8:	db0f      	blt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efea:	429d      	cmp	r5, r3
 800efec:	ddec      	ble.n	800efc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800efee:	1953      	adds	r3, r2, r5
 800eff0:	105b      	asrs	r3, r3, #1
 800eff2:	e7e9      	b.n	800efc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800eff4:	1c5d      	adds	r5, r3, #1
 800eff6:	42aa      	cmp	r2, r5
 800eff8:	db07      	blt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800effa:	8a43      	ldrh	r3, [r0, #18]
 800effc:	1acb      	subs	r3, r1, r3
 800effe:	442b      	add	r3, r5
 800f000:	429d      	cmp	r5, r3
 800f002:	dc02      	bgt.n	800f00a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f004:	429a      	cmp	r2, r3
 800f006:	dadf      	bge.n	800efc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f008:	e7f1      	b.n	800efee <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f00a:	2000      	movs	r0, #0
 800f00c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f00e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f00e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f010:	4604      	mov	r4, r0
 800f012:	4617      	mov	r7, r2
 800f014:	461e      	mov	r6, r3
 800f016:	b911      	cbnz	r1, 800f01e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f018:	2500      	movs	r5, #0
 800f01a:	4628      	mov	r0, r5
 800f01c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f01e:	290a      	cmp	r1, #10
 800f020:	d0fa      	beq.n	800f018 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f022:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f026:	4291      	cmp	r1, r2
 800f028:	d0f6      	beq.n	800f018 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f02a:	f242 020b 	movw	r2, #8203	; 0x200b
 800f02e:	4291      	cmp	r1, r2
 800f030:	d0f2      	beq.n	800f018 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f032:	f7ff ffaf 	bl	800ef94 <_ZNK8touchgfx9ConstFont4findEt>
 800f036:	4605      	mov	r5, r0
 800f038:	b950      	cbnz	r0, 800f050 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f03a:	6823      	ldr	r3, [r4, #0]
 800f03c:	4620      	mov	r0, r4
 800f03e:	691b      	ldr	r3, [r3, #16]
 800f040:	4798      	blx	r3
 800f042:	4601      	mov	r1, r0
 800f044:	4620      	mov	r0, r4
 800f046:	f7ff ffa5 	bl	800ef94 <_ZNK8touchgfx9ConstFont4findEt>
 800f04a:	4605      	mov	r5, r0
 800f04c:	2800      	cmp	r0, #0
 800f04e:	d0e3      	beq.n	800f018 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f050:	6823      	ldr	r3, [r4, #0]
 800f052:	4629      	mov	r1, r5
 800f054:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f056:	4620      	mov	r0, r4
 800f058:	4798      	blx	r3
 800f05a:	6038      	str	r0, [r7, #0]
 800f05c:	6823      	ldr	r3, [r4, #0]
 800f05e:	4620      	mov	r0, r4
 800f060:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f062:	4798      	blx	r3
 800f064:	7030      	strb	r0, [r6, #0]
 800f066:	e7d8      	b.n	800f01a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f068 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f068:	2000      	movs	r0, #0
 800f06a:	4770      	bx	lr

0800f06c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f06c:	2001      	movs	r0, #1
 800f06e:	4770      	bx	lr

0800f070 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f070:	2002      	movs	r0, #2
 800f072:	4770      	bx	lr

0800f074 <_ZN8touchgfx6ScreenD1Ev>:
 800f074:	4770      	bx	lr

0800f076 <_ZN8touchgfx12GestureEventD1Ev>:
 800f076:	4770      	bx	lr

0800f078 <_ZN8touchgfx9DragEventD1Ev>:
 800f078:	4770      	bx	lr

0800f07a <_ZN8touchgfx10ClickEventD1Ev>:
 800f07a:	4770      	bx	lr

0800f07c <_ZN8touchgfx10ClickEventD0Ev>:
 800f07c:	b510      	push	{r4, lr}
 800f07e:	210c      	movs	r1, #12
 800f080:	4604      	mov	r4, r0
 800f082:	f00d fced 	bl	801ca60 <_ZdlPvj>
 800f086:	4620      	mov	r0, r4
 800f088:	bd10      	pop	{r4, pc}

0800f08a <_ZN8touchgfx9DragEventD0Ev>:
 800f08a:	b510      	push	{r4, lr}
 800f08c:	2110      	movs	r1, #16
 800f08e:	4604      	mov	r4, r0
 800f090:	f00d fce6 	bl	801ca60 <_ZdlPvj>
 800f094:	4620      	mov	r0, r4
 800f096:	bd10      	pop	{r4, pc}

0800f098 <_ZN8touchgfx12GestureEventD0Ev>:
 800f098:	b510      	push	{r4, lr}
 800f09a:	210c      	movs	r1, #12
 800f09c:	4604      	mov	r4, r0
 800f09e:	f00d fcdf 	bl	801ca60 <_ZdlPvj>
 800f0a2:	4620      	mov	r0, r4
 800f0a4:	bd10      	pop	{r4, pc}

0800f0a6 <_ZN8touchgfx6ScreenD0Ev>:
 800f0a6:	b510      	push	{r4, lr}
 800f0a8:	213c      	movs	r1, #60	; 0x3c
 800f0aa:	4604      	mov	r4, r0
 800f0ac:	f00d fcd8 	bl	801ca60 <_ZdlPvj>
 800f0b0:	4620      	mov	r0, r4
 800f0b2:	bd10      	pop	{r4, pc}

0800f0b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f0b4:	b530      	push	{r4, r5, lr}
 800f0b6:	460d      	mov	r5, r1
 800f0b8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f0ba:	b087      	sub	sp, #28
 800f0bc:	4604      	mov	r4, r0
 800f0be:	b301      	cbz	r1, 800f102 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f0c0:	a801      	add	r0, sp, #4
 800f0c2:	f7ff ff33 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f0c6:	892a      	ldrh	r2, [r5, #8]
 800f0c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f0cc:	7928      	ldrb	r0, [r5, #4]
 800f0ce:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f0d2:	f88d 0010 	strb.w	r0, [sp, #16]
 800f0d6:	1ad2      	subs	r2, r2, r3
 800f0d8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f0da:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f0dc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f0e0:	441a      	add	r2, r3
 800f0e2:	896b      	ldrh	r3, [r5, #10]
 800f0e4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f0e8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f0ec:	1b5b      	subs	r3, r3, r5
 800f0ee:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f0f0:	442b      	add	r3, r5
 800f0f2:	4d05      	ldr	r5, [pc, #20]	; (800f108 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f0f4:	9503      	str	r5, [sp, #12]
 800f0f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f0fa:	6803      	ldr	r3, [r0, #0]
 800f0fc:	a903      	add	r1, sp, #12
 800f0fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f100:	4798      	blx	r3
 800f102:	b007      	add	sp, #28
 800f104:	bd30      	pop	{r4, r5, pc}
 800f106:	bf00      	nop
 800f108:	080208f8 	.word	0x080208f8

0800f10c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f110:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f112:	b08a      	sub	sp, #40	; 0x28
 800f114:	4604      	mov	r4, r0
 800f116:	460d      	mov	r5, r1
 800f118:	b113      	cbz	r3, 800f120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f11a:	790b      	ldrb	r3, [r1, #4]
 800f11c:	2b00      	cmp	r3, #0
 800f11e:	d044      	beq.n	800f1aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f120:	f104 0804 	add.w	r8, r4, #4
 800f124:	4641      	mov	r1, r8
 800f126:	a803      	add	r0, sp, #12
 800f128:	f7ff ff00 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f12c:	792b      	ldrb	r3, [r5, #4]
 800f12e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f132:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f136:	b983      	cbnz	r3, 800f15a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f138:	892a      	ldrh	r2, [r5, #8]
 800f13a:	88e9      	ldrh	r1, [r5, #6]
 800f13c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800f140:	1b92      	subs	r2, r2, r6
 800f142:	1bc9      	subs	r1, r1, r7
 800f144:	9301      	str	r3, [sp, #4]
 800f146:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800f14a:	9300      	str	r3, [sp, #0]
 800f14c:	b212      	sxth	r2, r2
 800f14e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f152:	b209      	sxth	r1, r1
 800f154:	4640      	mov	r0, r8
 800f156:	f7fb f9f7 	bl	800a548 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f15a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f15c:	b329      	cbz	r1, 800f1aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f15e:	a805      	add	r0, sp, #20
 800f160:	f7ff fee4 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f164:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f168:	792b      	ldrb	r3, [r5, #4]
 800f16a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f16c:	f88d 3020 	strb.w	r3, [sp, #32]
 800f170:	1abf      	subs	r7, r7, r2
 800f172:	88ea      	ldrh	r2, [r5, #6]
 800f174:	4417      	add	r7, r2
 800f176:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800f178:	4417      	add	r7, r2
 800f17a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f17e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800f182:	1ab6      	subs	r6, r6, r2
 800f184:	892a      	ldrh	r2, [r5, #8]
 800f186:	4416      	add	r6, r2
 800f188:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f18a:	4416      	add	r6, r2
 800f18c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800f190:	4a07      	ldr	r2, [pc, #28]	; (800f1b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f192:	9207      	str	r2, [sp, #28]
 800f194:	2600      	movs	r6, #0
 800f196:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800f19a:	6803      	ldr	r3, [r0, #0]
 800f19c:	a907      	add	r1, sp, #28
 800f19e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f1a0:	4798      	blx	r3
 800f1a2:	792b      	ldrb	r3, [r5, #4]
 800f1a4:	b10b      	cbz	r3, 800f1aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f1a6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f1aa:	b00a      	add	sp, #40	; 0x28
 800f1ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1b0:	080208d0 	.word	0x080208d0

0800f1b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f1b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1b8:	460c      	mov	r4, r1
 800f1ba:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f1bc:	b088      	sub	sp, #32
 800f1be:	4605      	mov	r5, r0
 800f1c0:	2900      	cmp	r1, #0
 800f1c2:	d06d      	beq.n	800f2a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f1c4:	4668      	mov	r0, sp
 800f1c6:	f7ff feb1 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1ca:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800f1cc:	88e3      	ldrh	r3, [r4, #6]
 800f1ce:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f1d2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f1d6:	440b      	add	r3, r1
 800f1d8:	b21b      	sxth	r3, r3
 800f1da:	4543      	cmp	r3, r8
 800f1dc:	db31      	blt.n	800f242 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f1de:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f1e2:	44c4      	add	ip, r8
 800f1e4:	fa0f fc8c 	sxth.w	ip, ip
 800f1e8:	4563      	cmp	r3, ip
 800f1ea:	da2a      	bge.n	800f242 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f1ec:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800f1ee:	8926      	ldrh	r6, [r4, #8]
 800f1f0:	4416      	add	r6, r2
 800f1f2:	b236      	sxth	r6, r6
 800f1f4:	42be      	cmp	r6, r7
 800f1f6:	db24      	blt.n	800f242 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f1f8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f1fc:	4438      	add	r0, r7
 800f1fe:	b200      	sxth	r0, r0
 800f200:	4286      	cmp	r6, r0
 800f202:	da1e      	bge.n	800f242 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f204:	8963      	ldrh	r3, [r4, #10]
 800f206:	4419      	add	r1, r3
 800f208:	b209      	sxth	r1, r1
 800f20a:	4541      	cmp	r1, r8
 800f20c:	db08      	blt.n	800f220 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f20e:	4561      	cmp	r1, ip
 800f210:	da06      	bge.n	800f220 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f212:	89a3      	ldrh	r3, [r4, #12]
 800f214:	441a      	add	r2, r3
 800f216:	b212      	sxth	r2, r2
 800f218:	42ba      	cmp	r2, r7
 800f21a:	db01      	blt.n	800f220 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f21c:	4282      	cmp	r2, r0
 800f21e:	db10      	blt.n	800f242 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f220:	4b21      	ldr	r3, [pc, #132]	; (800f2a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f222:	9304      	str	r3, [sp, #16]
 800f224:	2302      	movs	r3, #2
 800f226:	f88d 3014 	strb.w	r3, [sp, #20]
 800f22a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f22c:	2300      	movs	r3, #0
 800f22e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f232:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f236:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f23a:	6803      	ldr	r3, [r0, #0]
 800f23c:	a904      	add	r1, sp, #16
 800f23e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f240:	4798      	blx	r3
 800f242:	1d29      	adds	r1, r5, #4
 800f244:	a802      	add	r0, sp, #8
 800f246:	f7ff fe71 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f24a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f24e:	88e0      	ldrh	r0, [r4, #6]
 800f250:	7921      	ldrb	r1, [r4, #4]
 800f252:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f256:	8922      	ldrh	r2, [r4, #8]
 800f258:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f25a:	f88d 1014 	strb.w	r1, [sp, #20]
 800f25e:	eba3 0808 	sub.w	r8, r3, r8
 800f262:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f266:	1bdf      	subs	r7, r3, r7
 800f268:	b2bb      	uxth	r3, r7
 800f26a:	fa1f f888 	uxth.w	r8, r8
 800f26e:	8967      	ldrh	r7, [r4, #10]
 800f270:	89a4      	ldrh	r4, [r4, #12]
 800f272:	4440      	add	r0, r8
 800f274:	4460      	add	r0, ip
 800f276:	441a      	add	r2, r3
 800f278:	44b8      	add	r8, r7
 800f27a:	4423      	add	r3, r4
 800f27c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f280:	4433      	add	r3, r6
 800f282:	4432      	add	r2, r6
 800f284:	44e0      	add	r8, ip
 800f286:	4c09      	ldr	r4, [pc, #36]	; (800f2ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f288:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f28a:	9404      	str	r4, [sp, #16]
 800f28c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f290:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f294:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f298:	6803      	ldr	r3, [r0, #0]
 800f29a:	a904      	add	r1, sp, #16
 800f29c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f29e:	4798      	blx	r3
 800f2a0:	b008      	add	sp, #32
 800f2a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2a6:	bf00      	nop
 800f2a8:	080208d0 	.word	0x080208d0
 800f2ac:	080208e4 	.word	0x080208e4

0800f2b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f2b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f2b2:	4604      	mov	r4, r0
 800f2b4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f2b8:	3201      	adds	r2, #1
 800f2ba:	d112      	bne.n	800f2e2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f2bc:	6803      	ldr	r3, [r0, #0]
 800f2be:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f2c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f2c6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f2ca:	2500      	movs	r5, #0
 800f2cc:	9500      	str	r5, [sp, #0]
 800f2ce:	466d      	mov	r5, sp
 800f2d0:	4629      	mov	r1, r5
 800f2d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f2d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f2d8:	4798      	blx	r3
 800f2da:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f2de:	e884 0003 	stmia.w	r4, {r0, r1}
 800f2e2:	4620      	mov	r0, r4
 800f2e4:	b003      	add	sp, #12
 800f2e6:	bd30      	pop	{r4, r5, pc}

0800f2e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f2e8:	b513      	push	{r0, r1, r4, lr}
 800f2ea:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f2ee:	3301      	adds	r3, #1
 800f2f0:	4604      	mov	r4, r0
 800f2f2:	d109      	bne.n	800f308 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f2f4:	4601      	mov	r1, r0
 800f2f6:	4668      	mov	r0, sp
 800f2f8:	f7ff fe18 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2fc:	f8bd 3000 	ldrh.w	r3, [sp]
 800f300:	8423      	strh	r3, [r4, #32]
 800f302:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f306:	8463      	strh	r3, [r4, #34]	; 0x22
 800f308:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f30c:	b002      	add	sp, #8
 800f30e:	bd10      	pop	{r4, pc}

0800f310 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f310:	b513      	push	{r0, r1, r4, lr}
 800f312:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f316:	3301      	adds	r3, #1
 800f318:	4604      	mov	r4, r0
 800f31a:	d109      	bne.n	800f330 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f31c:	4601      	mov	r1, r0
 800f31e:	4668      	mov	r0, sp
 800f320:	f7ff fe04 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f324:	f8bd 3000 	ldrh.w	r3, [sp]
 800f328:	8423      	strh	r3, [r4, #32]
 800f32a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f32e:	8463      	strh	r3, [r4, #34]	; 0x22
 800f330:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f334:	b002      	add	sp, #8
 800f336:	bd10      	pop	{r4, pc}

0800f338 <_ZN8touchgfx6ScreenC1Ev>:
 800f338:	b570      	push	{r4, r5, r6, lr}
 800f33a:	4605      	mov	r5, r0
 800f33c:	4b16      	ldr	r3, [pc, #88]	; (800f398 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f33e:	f845 3b04 	str.w	r3, [r5], #4
 800f342:	2300      	movs	r3, #0
 800f344:	8103      	strh	r3, [r0, #8]
 800f346:	8143      	strh	r3, [r0, #10]
 800f348:	8183      	strh	r3, [r0, #12]
 800f34a:	81c3      	strh	r3, [r0, #14]
 800f34c:	8203      	strh	r3, [r0, #16]
 800f34e:	8243      	strh	r3, [r0, #18]
 800f350:	8283      	strh	r3, [r0, #20]
 800f352:	82c3      	strh	r3, [r0, #22]
 800f354:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f358:	6203      	str	r3, [r0, #32]
 800f35a:	8483      	strh	r3, [r0, #36]	; 0x24
 800f35c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f35e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f362:	4a0e      	ldr	r2, [pc, #56]	; (800f39c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f364:	6343      	str	r3, [r0, #52]	; 0x34
 800f366:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f36a:	4b0d      	ldr	r3, [pc, #52]	; (800f3a0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f36c:	6042      	str	r2, [r0, #4]
 800f36e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f372:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800f374:	4a0b      	ldr	r2, [pc, #44]	; (800f3a4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f376:	4604      	mov	r4, r0
 800f378:	2101      	movs	r1, #1
 800f37a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f37e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f382:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f386:	4628      	mov	r0, r5
 800f388:	4798      	blx	r3
 800f38a:	6863      	ldr	r3, [r4, #4]
 800f38c:	4628      	mov	r0, r5
 800f38e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f390:	4631      	mov	r1, r6
 800f392:	4798      	blx	r3
 800f394:	4620      	mov	r0, r4
 800f396:	bd70      	pop	{r4, r5, r6, pc}
 800f398:	0802090c 	.word	0x0802090c
 800f39c:	0801fa60 	.word	0x0801fa60
 800f3a0:	2000bfc2 	.word	0x2000bfc2
 800f3a4:	2000bfc0 	.word	0x2000bfc0

0800f3a8 <_ZN8touchgfx6Screen4drawEv>:
 800f3a8:	b507      	push	{r0, r1, r2, lr}
 800f3aa:	4b09      	ldr	r3, [pc, #36]	; (800f3d0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f3ac:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3b0:	4b08      	ldr	r3, [pc, #32]	; (800f3d4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f3b2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f3b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f3ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f3be:	6803      	ldr	r3, [r0, #0]
 800f3c0:	2100      	movs	r1, #0
 800f3c2:	9100      	str	r1, [sp, #0]
 800f3c4:	689b      	ldr	r3, [r3, #8]
 800f3c6:	4669      	mov	r1, sp
 800f3c8:	4798      	blx	r3
 800f3ca:	b003      	add	sp, #12
 800f3cc:	f85d fb04 	ldr.w	pc, [sp], #4
 800f3d0:	2000bfc0 	.word	0x2000bfc0
 800f3d4:	2000bfc2 	.word	0x2000bfc2

0800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3dc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f3e0:	2b00      	cmp	r3, #0
 800f3e2:	b089      	sub	sp, #36	; 0x24
 800f3e4:	4680      	mov	r8, r0
 800f3e6:	460c      	mov	r4, r1
 800f3e8:	4615      	mov	r5, r2
 800f3ea:	dd0e      	ble.n	800f40a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f3ec:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f3f0:	2b00      	cmp	r3, #0
 800f3f2:	dd0a      	ble.n	800f40a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f3f4:	4628      	mov	r0, r5
 800f3f6:	f7ff ff5b 	bl	800f2b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f3fa:	4621      	mov	r1, r4
 800f3fc:	f7fe fc90 	bl	800dd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f400:	69eb      	ldr	r3, [r5, #28]
 800f402:	b928      	cbnz	r0, 800f410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f404:	461d      	mov	r5, r3
 800f406:	2b00      	cmp	r3, #0
 800f408:	d1f4      	bne.n	800f3f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f40a:	b009      	add	sp, #36	; 0x24
 800f40c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f410:	ae04      	add	r6, sp, #16
 800f412:	2b00      	cmp	r3, #0
 800f414:	f000 80b5 	beq.w	800f582 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f418:	682b      	ldr	r3, [r5, #0]
 800f41a:	4629      	mov	r1, r5
 800f41c:	68db      	ldr	r3, [r3, #12]
 800f41e:	a802      	add	r0, sp, #8
 800f420:	4798      	blx	r3
 800f422:	4628      	mov	r0, r5
 800f424:	f7ff ff60 	bl	800f2e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f428:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f42c:	4407      	add	r7, r0
 800f42e:	4628      	mov	r0, r5
 800f430:	f7ff ff6e 	bl	800f310 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f434:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f438:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f43c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f440:	4418      	add	r0, r3
 800f442:	4621      	mov	r1, r4
 800f444:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f448:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f44c:	b23f      	sxth	r7, r7
 800f44e:	4630      	mov	r0, r6
 800f450:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f454:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f458:	f7fb f95a 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800f45c:	4628      	mov	r0, r5
 800f45e:	f7ff ff27 	bl	800f2b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f462:	4602      	mov	r2, r0
 800f464:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f468:	ab06      	add	r3, sp, #24
 800f46a:	e883 0003 	stmia.w	r3, {r0, r1}
 800f46e:	4611      	mov	r1, r2
 800f470:	4618      	mov	r0, r3
 800f472:	f7fb f94d 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800f476:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f47a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f47e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f482:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f486:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f48a:	4299      	cmp	r1, r3
 800f48c:	d10b      	bne.n	800f4a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f48e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f492:	4552      	cmp	r2, sl
 800f494:	d107      	bne.n	800f4a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f496:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f49a:	455a      	cmp	r2, fp
 800f49c:	d103      	bne.n	800f4a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f49e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f4a2:	454a      	cmp	r2, r9
 800f4a4:	d06d      	beq.n	800f582 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f4a6:	f1bb 0f00 	cmp.w	fp, #0
 800f4aa:	dd65      	ble.n	800f578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f4ac:	f1b9 0f00 	cmp.w	r9, #0
 800f4b0:	dd62      	ble.n	800f578 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f4b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f4b6:	fa1f f08a 	uxth.w	r0, sl
 800f4ba:	4552      	cmp	r2, sl
 800f4bc:	9000      	str	r0, [sp, #0]
 800f4be:	da12      	bge.n	800f4e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f4c0:	9301      	str	r3, [sp, #4]
 800f4c2:	9b00      	ldr	r3, [sp, #0]
 800f4c4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f4c8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f4cc:	1a9a      	subs	r2, r3, r2
 800f4ce:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f4d2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f4d6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f4da:	69ea      	ldr	r2, [r5, #28]
 800f4dc:	4631      	mov	r1, r6
 800f4de:	4640      	mov	r0, r8
 800f4e0:	f7ff ff7a 	bl	800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f4e4:	9b01      	ldr	r3, [sp, #4]
 800f4e6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f4ea:	429a      	cmp	r2, r3
 800f4ec:	b29f      	uxth	r7, r3
 800f4ee:	da0d      	bge.n	800f50c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f4f0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f4f4:	1aba      	subs	r2, r7, r2
 800f4f6:	f8ad a012 	strh.w	sl, [sp, #18]
 800f4fa:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f4fe:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f502:	69ea      	ldr	r2, [r5, #28]
 800f504:	4631      	mov	r1, r6
 800f506:	4640      	mov	r0, r8
 800f508:	f7ff ff66 	bl	800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f50c:	8822      	ldrh	r2, [r4, #0]
 800f50e:	88a3      	ldrh	r3, [r4, #4]
 800f510:	445f      	add	r7, fp
 800f512:	4413      	add	r3, r2
 800f514:	b29b      	uxth	r3, r3
 800f516:	b2bf      	uxth	r7, r7
 800f518:	b23a      	sxth	r2, r7
 800f51a:	b219      	sxth	r1, r3
 800f51c:	4291      	cmp	r1, r2
 800f51e:	dd0d      	ble.n	800f53c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f520:	1bdb      	subs	r3, r3, r7
 800f522:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f526:	f8ad a012 	strh.w	sl, [sp, #18]
 800f52a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f52e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f532:	69ea      	ldr	r2, [r5, #28]
 800f534:	4631      	mov	r1, r6
 800f536:	4640      	mov	r0, r8
 800f538:	f7ff ff4e 	bl	800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f53c:	88e2      	ldrh	r2, [r4, #6]
 800f53e:	8863      	ldrh	r3, [r4, #2]
 800f540:	4413      	add	r3, r2
 800f542:	9a00      	ldr	r2, [sp, #0]
 800f544:	444a      	add	r2, r9
 800f546:	b29b      	uxth	r3, r3
 800f548:	fa1f f982 	uxth.w	r9, r2
 800f54c:	fa0f f289 	sxth.w	r2, r9
 800f550:	b219      	sxth	r1, r3
 800f552:	428a      	cmp	r2, r1
 800f554:	da15      	bge.n	800f582 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f556:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f55a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f55e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f562:	eba3 0309 	sub.w	r3, r3, r9
 800f566:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f56a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f56e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f572:	69ea      	ldr	r2, [r5, #28]
 800f574:	4631      	mov	r1, r6
 800f576:	e001      	b.n	800f57c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f578:	69ea      	ldr	r2, [r5, #28]
 800f57a:	4621      	mov	r1, r4
 800f57c:	4640      	mov	r0, r8
 800f57e:	f7ff ff2b 	bl	800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f582:	4628      	mov	r0, r5
 800f584:	f7ff fe94 	bl	800f2b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f588:	6861      	ldr	r1, [r4, #4]
 800f58a:	4602      	mov	r2, r0
 800f58c:	6820      	ldr	r0, [r4, #0]
 800f58e:	4633      	mov	r3, r6
 800f590:	c303      	stmia	r3!, {r0, r1}
 800f592:	4611      	mov	r1, r2
 800f594:	4630      	mov	r0, r6
 800f596:	f7fb f8bb 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800f59a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f59e:	2b00      	cmp	r3, #0
 800f5a0:	f77f af33 	ble.w	800f40a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5a4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f5a8:	2b00      	cmp	r3, #0
 800f5aa:	f77f af2e 	ble.w	800f40a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5ae:	4628      	mov	r0, r5
 800f5b0:	f7ff fe9a 	bl	800f2e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f5b4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f5b8:	1a18      	subs	r0, r3, r0
 800f5ba:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f5be:	4628      	mov	r0, r5
 800f5c0:	f7ff fea6 	bl	800f310 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f5c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f5c8:	1a18      	subs	r0, r3, r0
 800f5ca:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f5ce:	682b      	ldr	r3, [r5, #0]
 800f5d0:	4631      	mov	r1, r6
 800f5d2:	689b      	ldr	r3, [r3, #8]
 800f5d4:	4628      	mov	r0, r5
 800f5d6:	4798      	blx	r3
 800f5d8:	e717      	b.n	800f40a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f5da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f5da:	b570      	push	{r4, r5, r6, lr}
 800f5dc:	460c      	mov	r4, r1
 800f5de:	b086      	sub	sp, #24
 800f5e0:	1d06      	adds	r6, r0, #4
 800f5e2:	2300      	movs	r3, #0
 800f5e4:	4631      	mov	r1, r6
 800f5e6:	4605      	mov	r5, r0
 800f5e8:	a802      	add	r0, sp, #8
 800f5ea:	9301      	str	r3, [sp, #4]
 800f5ec:	f7ff fc9e 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f5f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f5f4:	8822      	ldrh	r2, [r4, #0]
 800f5f6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f5fa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f5fe:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f602:	1ad2      	subs	r2, r2, r3
 800f604:	8863      	ldrh	r3, [r4, #2]
 800f606:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f60a:	1a5b      	subs	r3, r3, r1
 800f60c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f610:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f614:	aa01      	add	r2, sp, #4
 800f616:	a904      	add	r1, sp, #16
 800f618:	4630      	mov	r0, r6
 800f61a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f61e:	f7fb f94f 	bl	800a8c0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f622:	9a01      	ldr	r2, [sp, #4]
 800f624:	b11a      	cbz	r2, 800f62e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f626:	4621      	mov	r1, r4
 800f628:	4628      	mov	r0, r5
 800f62a:	f7ff fed5 	bl	800f3d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f62e:	b006      	add	sp, #24
 800f630:	bd70      	pop	{r4, r5, r6, pc}

0800f632 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f632:	b530      	push	{r4, r5, lr}
 800f634:	4602      	mov	r2, r0
 800f636:	4604      	mov	r4, r0
 800f638:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f63c:	b085      	sub	sp, #20
 800f63e:	460d      	mov	r5, r1
 800f640:	6851      	ldr	r1, [r2, #4]
 800f642:	466b      	mov	r3, sp
 800f644:	c303      	stmia	r3!, {r0, r1}
 800f646:	4629      	mov	r1, r5
 800f648:	4668      	mov	r0, sp
 800f64a:	f7fb f861 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 800f64e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f652:	b12b      	cbz	r3, 800f660 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f654:	4669      	mov	r1, sp
 800f656:	4620      	mov	r0, r4
 800f658:	f7ff ffbf 	bl	800f5da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f65c:	b005      	add	sp, #20
 800f65e:	bd30      	pop	{r4, r5, pc}
 800f660:	3404      	adds	r4, #4
 800f662:	4621      	mov	r1, r4
 800f664:	a802      	add	r0, sp, #8
 800f666:	f7ff fc61 	bl	800ef2c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f66a:	f8bd 3000 	ldrh.w	r3, [sp]
 800f66e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f672:	1a9b      	subs	r3, r3, r2
 800f674:	f8ad 3000 	strh.w	r3, [sp]
 800f678:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f67c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f680:	4669      	mov	r1, sp
 800f682:	1a9b      	subs	r3, r3, r2
 800f684:	4620      	mov	r0, r4
 800f686:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f68a:	f7fb f8e0 	bl	800a84e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f68e:	e7e5      	b.n	800f65c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f690 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f690:	680a      	ldr	r2, [r1, #0]
 800f692:	460b      	mov	r3, r1
 800f694:	6992      	ldr	r2, [r2, #24]
 800f696:	1d01      	adds	r1, r0, #4
 800f698:	4618      	mov	r0, r3
 800f69a:	4710      	bx	r2

0800f69c <_ZN8touchgfx12TextProviderC1Ev>:
 800f69c:	b538      	push	{r3, r4, r5, lr}
 800f69e:	2500      	movs	r5, #0
 800f6a0:	2302      	movs	r3, #2
 800f6a2:	4604      	mov	r4, r0
 800f6a4:	e9c0 5500 	strd	r5, r5, [r0]
 800f6a8:	7403      	strb	r3, [r0, #16]
 800f6aa:	6145      	str	r5, [r0, #20]
 800f6ac:	7605      	strb	r5, [r0, #24]
 800f6ae:	83c5      	strh	r5, [r0, #30]
 800f6b0:	8405      	strh	r5, [r0, #32]
 800f6b2:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f6b4:	8705      	strh	r5, [r0, #56]	; 0x38
 800f6b6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800f6b8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800f6bc:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800f6c0:	220e      	movs	r2, #14
 800f6c2:	4629      	mov	r1, r5
 800f6c4:	304c      	adds	r0, #76	; 0x4c
 800f6c6:	f00e f801 	bl	801d6cc <memset>
 800f6ca:	2301      	movs	r3, #1
 800f6cc:	4620      	mov	r0, r4
 800f6ce:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800f6d2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800f6d6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800f6da:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800f6de:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800f6e2:	f7f3 fe0b 	bl	80032fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f6e6:	4620      	mov	r0, r4
 800f6e8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f6ec <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800f6ec:	b508      	push	{r3, lr}
 800f6ee:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800f6f0:	b92b      	cbnz	r3, 800f6fe <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 800f6f2:	4b07      	ldr	r3, [pc, #28]	; (800f710 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 800f6f4:	4a07      	ldr	r2, [pc, #28]	; (800f714 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 800f6f6:	4808      	ldr	r0, [pc, #32]	; (800f718 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 800f6f8:	21c0      	movs	r1, #192	; 0xc0
 800f6fa:	f00d ff5b 	bl	801d5b4 <__assert_func>
 800f6fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f700:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f704:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800f706:	fab0 f080 	clz	r0, r0
 800f70a:	0940      	lsrs	r0, r0, #5
 800f70c:	bd08      	pop	{r3, pc}
 800f70e:	bf00      	nop
 800f710:	0801f350 	.word	0x0801f350
 800f714:	08020b67 	.word	0x08020b67
 800f718:	0801f422 	.word	0x0801f422

0800f71c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f71c:	b530      	push	{r4, r5, lr}
 800f71e:	2500      	movs	r5, #0
 800f720:	2401      	movs	r4, #1
 800f722:	6843      	ldr	r3, [r0, #4]
 800f724:	b913      	cbnz	r3, 800f72c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f726:	6803      	ldr	r3, [r0, #0]
 800f728:	b313      	cbz	r3, 800f770 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f72a:	6043      	str	r3, [r0, #4]
 800f72c:	7e03      	ldrb	r3, [r0, #24]
 800f72e:	b143      	cbz	r3, 800f742 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f730:	6943      	ldr	r3, [r0, #20]
 800f732:	b12b      	cbz	r3, 800f740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f734:	881a      	ldrh	r2, [r3, #0]
 800f736:	b11a      	cbz	r2, 800f740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f738:	1c9a      	adds	r2, r3, #2
 800f73a:	6142      	str	r2, [r0, #20]
 800f73c:	8818      	ldrh	r0, [r3, #0]
 800f73e:	bd30      	pop	{r4, r5, pc}
 800f740:	7605      	strb	r5, [r0, #24]
 800f742:	6843      	ldr	r3, [r0, #4]
 800f744:	8819      	ldrh	r1, [r3, #0]
 800f746:	b199      	cbz	r1, 800f770 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f748:	1c9a      	adds	r2, r3, #2
 800f74a:	2902      	cmp	r1, #2
 800f74c:	6042      	str	r2, [r0, #4]
 800f74e:	d1f5      	bne.n	800f73c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f750:	7c03      	ldrb	r3, [r0, #16]
 800f752:	2b01      	cmp	r3, #1
 800f754:	d8e5      	bhi.n	800f722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f756:	1c5a      	adds	r2, r3, #1
 800f758:	3302      	adds	r3, #2
 800f75a:	7402      	strb	r2, [r0, #16]
 800f75c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f760:	6143      	str	r3, [r0, #20]
 800f762:	2b00      	cmp	r3, #0
 800f764:	d0dd      	beq.n	800f722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f766:	881b      	ldrh	r3, [r3, #0]
 800f768:	2b00      	cmp	r3, #0
 800f76a:	d0da      	beq.n	800f722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f76c:	7604      	strb	r4, [r0, #24]
 800f76e:	e7d8      	b.n	800f722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f770:	2000      	movs	r0, #0
 800f772:	e7e4      	b.n	800f73e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f774:	b430      	push	{r4, r5}
 800f776:	6001      	str	r1, [r0, #0]
 800f778:	2100      	movs	r1, #0
 800f77a:	6041      	str	r1, [r0, #4]
 800f77c:	6815      	ldr	r5, [r2, #0]
 800f77e:	6085      	str	r5, [r0, #8]
 800f780:	6852      	ldr	r2, [r2, #4]
 800f782:	6443      	str	r3, [r0, #68]	; 0x44
 800f784:	9b02      	ldr	r3, [sp, #8]
 800f786:	60c2      	str	r2, [r0, #12]
 800f788:	7401      	strb	r1, [r0, #16]
 800f78a:	6141      	str	r1, [r0, #20]
 800f78c:	7601      	strb	r1, [r0, #24]
 800f78e:	8701      	strh	r1, [r0, #56]	; 0x38
 800f790:	8401      	strh	r1, [r0, #32]
 800f792:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800f796:	6483      	str	r3, [r0, #72]	; 0x48
 800f798:	bc30      	pop	{r4, r5}
 800f79a:	f7f3 bdaf 	b.w	80032fc <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f79e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800f79e:	b408      	push	{r3}
 800f7a0:	b510      	push	{r4, lr}
 800f7a2:	b085      	sub	sp, #20
 800f7a4:	ac07      	add	r4, sp, #28
 800f7a6:	f854 3b04 	ldr.w	r3, [r4], #4
 800f7aa:	9300      	str	r3, [sp, #0]
 800f7ac:	4613      	mov	r3, r2
 800f7ae:	4622      	mov	r2, r4
 800f7b0:	9403      	str	r4, [sp, #12]
 800f7b2:	f7ff ffdf 	bl	800f774 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f7b6:	b005      	add	sp, #20
 800f7b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7bc:	b001      	add	sp, #4
 800f7be:	4770      	bx	lr

0800f7c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f7c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7c2:	4605      	mov	r5, r0
 800f7c4:	4608      	mov	r0, r1
 800f7c6:	b1e9      	cbz	r1, 800f804 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f7c8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800f7cc:	460b      	mov	r3, r1
 800f7ce:	f101 0708 	add.w	r7, r1, #8
 800f7d2:	4622      	mov	r2, r4
 800f7d4:	6818      	ldr	r0, [r3, #0]
 800f7d6:	6859      	ldr	r1, [r3, #4]
 800f7d8:	4626      	mov	r6, r4
 800f7da:	c603      	stmia	r6!, {r0, r1}
 800f7dc:	3308      	adds	r3, #8
 800f7de:	42bb      	cmp	r3, r7
 800f7e0:	4634      	mov	r4, r6
 800f7e2:	d1f7      	bne.n	800f7d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f7e4:	6818      	ldr	r0, [r3, #0]
 800f7e6:	6030      	str	r0, [r6, #0]
 800f7e8:	889b      	ldrh	r3, [r3, #4]
 800f7ea:	80b3      	strh	r3, [r6, #4]
 800f7ec:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800f7f0:	015b      	lsls	r3, r3, #5
 800f7f2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f7f6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800f7fa:	430b      	orrs	r3, r1
 800f7fc:	425b      	negs	r3, r3
 800f7fe:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800f802:	4610      	mov	r0, r2
 800f804:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f806:	b538      	push	{r3, r4, r5, lr}
 800f808:	460c      	mov	r4, r1
 800f80a:	6811      	ldr	r1, [r2, #0]
 800f80c:	4610      	mov	r0, r2
 800f80e:	68cd      	ldr	r5, [r1, #12]
 800f810:	4619      	mov	r1, r3
 800f812:	47a8      	blx	r5
 800f814:	2800      	cmp	r0, #0
 800f816:	bf08      	it	eq
 800f818:	4620      	moveq	r0, r4
 800f81a:	bd38      	pop	{r3, r4, r5, pc}

0800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f81c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f81e:	4604      	mov	r4, r0
 800f820:	4615      	mov	r5, r2
 800f822:	4608      	mov	r0, r1
 800f824:	b93a      	cbnz	r2, 800f836 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f826:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800f82a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800f82e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f832:	4628      	mov	r0, r5
 800f834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f836:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f83a:	8893      	ldrh	r3, [r2, #4]
 800f83c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f840:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f844:	79ee      	ldrb	r6, [r5, #7]
 800f846:	4316      	orrs	r6, r2
 800f848:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800f84c:	189a      	adds	r2, r3, r2
 800f84e:	b291      	uxth	r1, r2
 800f850:	291d      	cmp	r1, #29
 800f852:	b2b7      	uxth	r7, r6
 800f854:	f200 8083 	bhi.w	800f95e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f858:	2201      	movs	r2, #1
 800f85a:	408a      	lsls	r2, r1
 800f85c:	4978      	ldr	r1, [pc, #480]	; (800fa40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800f85e:	420a      	tst	r2, r1
 800f860:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800f864:	d12d      	bne.n	800f8c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800f866:	f412 7f60 	tst.w	r2, #896	; 0x380
 800f86a:	d078      	beq.n	800f95e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f86c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800f870:	462b      	mov	r3, r5
 800f872:	f105 0e08 	add.w	lr, r5, #8
 800f876:	4615      	mov	r5, r2
 800f878:	6818      	ldr	r0, [r3, #0]
 800f87a:	6859      	ldr	r1, [r3, #4]
 800f87c:	4694      	mov	ip, r2
 800f87e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f882:	3308      	adds	r3, #8
 800f884:	4573      	cmp	r3, lr
 800f886:	4662      	mov	r2, ip
 800f888:	d1f6      	bne.n	800f878 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800f88a:	6818      	ldr	r0, [r3, #0]
 800f88c:	f8cc 0000 	str.w	r0, [ip]
 800f890:	889b      	ldrh	r3, [r3, #4]
 800f892:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f896:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800f89a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800f89e:	b2b3      	uxth	r3, r6
 800f8a0:	1aca      	subs	r2, r1, r3
 800f8a2:	b292      	uxth	r2, r2
 800f8a4:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800f8a8:	10d2      	asrs	r2, r2, #3
 800f8aa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800f8ae:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800f8b2:	4302      	orrs	r2, r0
 800f8b4:	1bcf      	subs	r7, r1, r7
 800f8b6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800f8ba:	1afb      	subs	r3, r7, r3
 800f8bc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800f8c0:	e7b7      	b.n	800f832 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f8c2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f8c4:	b92b      	cbnz	r3, 800f8d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800f8c6:	4b5f      	ldr	r3, [pc, #380]	; (800fa44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800f8c8:	4a5f      	ldr	r2, [pc, #380]	; (800fa48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800f8ca:	4860      	ldr	r0, [pc, #384]	; (800fa4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800f8cc:	21c0      	movs	r1, #192	; 0xc0
 800f8ce:	f00d fe71 	bl	801d5b4 <__assert_func>
 800f8d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f8d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f8d8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800f8da:	f640 6333 	movw	r3, #3635	; 0xe33
 800f8de:	4299      	cmp	r1, r3
 800f8e0:	d110      	bne.n	800f904 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800f8e2:	6803      	ldr	r3, [r0, #0]
 800f8e4:	68db      	ldr	r3, [r3, #12]
 800f8e6:	4798      	blx	r3
 800f8e8:	7b41      	ldrb	r1, [r0, #13]
 800f8ea:	00cb      	lsls	r3, r1, #3
 800f8ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f8f0:	7a03      	ldrb	r3, [r0, #8]
 800f8f2:	0648      	lsls	r0, r1, #25
 800f8f4:	ea43 0302 	orr.w	r3, r3, r2
 800f8f8:	bf44      	itt	mi
 800f8fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f8fe:	b21b      	sxthmi	r3, r3
 800f900:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800f904:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800f908:	443b      	add	r3, r7
 800f90a:	4433      	add	r3, r6
 800f90c:	b29b      	uxth	r3, r3
 800f90e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800f912:	462a      	mov	r2, r5
 800f914:	f105 0c08 	add.w	ip, r5, #8
 800f918:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800f91c:	4635      	mov	r5, r6
 800f91e:	6810      	ldr	r0, [r2, #0]
 800f920:	6851      	ldr	r1, [r2, #4]
 800f922:	4637      	mov	r7, r6
 800f924:	c703      	stmia	r7!, {r0, r1}
 800f926:	3208      	adds	r2, #8
 800f928:	4562      	cmp	r2, ip
 800f92a:	463e      	mov	r6, r7
 800f92c:	d1f7      	bne.n	800f91e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800f92e:	6810      	ldr	r0, [r2, #0]
 800f930:	6038      	str	r0, [r7, #0]
 800f932:	8892      	ldrh	r2, [r2, #4]
 800f934:	80ba      	strh	r2, [r7, #4]
 800f936:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800f93a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800f93e:	10db      	asrs	r3, r3, #3
 800f940:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800f944:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800f948:	4313      	orrs	r3, r2
 800f94a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800f94e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800f952:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800f956:	1a9b      	subs	r3, r3, r2
 800f958:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800f95c:	e769      	b.n	800f832 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f95e:	f023 0204 	bic.w	r2, r3, #4
 800f962:	f640 611b 	movw	r1, #3611	; 0xe1b
 800f966:	428a      	cmp	r2, r1
 800f968:	d003      	beq.n	800f972 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800f96a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800f96e:	4293      	cmp	r3, r2
 800f970:	d120      	bne.n	800f9b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800f972:	3b01      	subs	r3, #1
 800f974:	4602      	mov	r2, r0
 800f976:	b29b      	uxth	r3, r3
 800f978:	4629      	mov	r1, r5
 800f97a:	4620      	mov	r0, r4
 800f97c:	f7ff ff43 	bl	800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f980:	7b41      	ldrb	r1, [r0, #13]
 800f982:	00cb      	lsls	r3, r1, #3
 800f984:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f988:	7a03      	ldrb	r3, [r0, #8]
 800f98a:	0649      	lsls	r1, r1, #25
 800f98c:	ea43 0302 	orr.w	r3, r3, r2
 800f990:	bf44      	itt	mi
 800f992:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f996:	b21b      	sxthmi	r3, r3
 800f998:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800f99c:	7b6b      	ldrb	r3, [r5, #13]
 800f99e:	7aaa      	ldrb	r2, [r5, #10]
 800f9a0:	005b      	lsls	r3, r3, #1
 800f9a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f9a6:	4313      	orrs	r3, r2
 800f9a8:	115a      	asrs	r2, r3, #5
 800f9aa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f9ae:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800f9b2:	e036      	b.n	800fa22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800f9b4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f9b8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800f9bc:	7a2a      	ldrb	r2, [r5, #8]
 800f9be:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800f9c2:	ea42 0201 	orr.w	r2, r2, r1
 800f9c6:	bf1c      	itt	ne
 800f9c8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800f9cc:	b212      	sxthne	r2, r2
 800f9ce:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800f9d2:	f640 6109 	movw	r1, #3593	; 0xe09
 800f9d6:	f023 0210 	bic.w	r2, r3, #16
 800f9da:	428a      	cmp	r2, r1
 800f9dc:	d003      	beq.n	800f9e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800f9de:	f640 6213 	movw	r2, #3603	; 0xe13
 800f9e2:	4293      	cmp	r3, r2
 800f9e4:	d12a      	bne.n	800fa3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800f9e6:	7b6e      	ldrb	r6, [r5, #13]
 800f9e8:	0076      	lsls	r6, r6, #1
 800f9ea:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f9ee:	7aae      	ldrb	r6, [r5, #10]
 800f9f0:	4316      	orrs	r6, r2
 800f9f2:	f640 6213 	movw	r2, #3603	; 0xe13
 800f9f6:	4293      	cmp	r3, r2
 800f9f8:	bf18      	it	ne
 800f9fa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f9fe:	4602      	mov	r2, r0
 800fa00:	bf14      	ite	ne
 800fa02:	b29b      	uxthne	r3, r3
 800fa04:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800fa08:	4629      	mov	r1, r5
 800fa0a:	4620      	mov	r0, r4
 800fa0c:	f7ff fefb 	bl	800f806 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fa10:	7b43      	ldrb	r3, [r0, #13]
 800fa12:	7a82      	ldrb	r2, [r0, #10]
 800fa14:	005b      	lsls	r3, r3, #1
 800fa16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fa1a:	4313      	orrs	r3, r2
 800fa1c:	1af6      	subs	r6, r6, r3
 800fa1e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800fa22:	7b69      	ldrb	r1, [r5, #13]
 800fa24:	00cb      	lsls	r3, r1, #3
 800fa26:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fa2a:	7a2b      	ldrb	r3, [r5, #8]
 800fa2c:	4313      	orrs	r3, r2
 800fa2e:	064a      	lsls	r2, r1, #25
 800fa30:	bf44      	itt	mi
 800fa32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fa36:	b21b      	sxthmi	r3, r3
 800fa38:	1bdb      	subs	r3, r3, r7
 800fa3a:	e73f      	b.n	800f8bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800fa3c:	2300      	movs	r3, #0
 800fa3e:	e7b6      	b.n	800f9ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800fa40:	3fc00079 	.word	0x3fc00079
 800fa44:	0801f350 	.word	0x0801f350
 800fa48:	08020b67 	.word	0x08020b67
 800fa4c:	0801f422 	.word	0x0801f422

0800fa50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fa50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa54:	4604      	mov	r4, r0
 800fa56:	b942      	cbnz	r2, 800fa6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fa58:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800fa5c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800fa60:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800fa64:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800fa68:	e046      	b.n	800faf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fa6a:	7b51      	ldrb	r1, [r2, #13]
 800fa6c:	8893      	ldrh	r3, [r2, #4]
 800fa6e:	010f      	lsls	r7, r1, #4
 800fa70:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fa74:	79d7      	ldrb	r7, [r2, #7]
 800fa76:	4307      	orrs	r7, r0
 800fa78:	2f04      	cmp	r7, #4
 800fa7a:	b2bd      	uxth	r5, r7
 800fa7c:	bfcc      	ite	gt
 800fa7e:	08bf      	lsrgt	r7, r7, #2
 800fa80:	2701      	movle	r7, #1
 800fa82:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800fa86:	f200 80ab 	bhi.w	800fbe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800fa8a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800fa8e:	4283      	cmp	r3, r0
 800fa90:	d216      	bcs.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa92:	f240 605b 	movw	r0, #1627	; 0x65b
 800fa96:	4283      	cmp	r3, r0
 800fa98:	d859      	bhi.n	800fb4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800fa9a:	f240 6057 	movw	r0, #1623	; 0x657
 800fa9e:	4283      	cmp	r3, r0
 800faa0:	d20e      	bcs.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800faa2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800faa6:	d24a      	bcs.n	800fb3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800faa8:	f240 604e 	movw	r0, #1614	; 0x64e
 800faac:	4283      	cmp	r3, r0
 800faae:	d207      	bcs.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fab0:	f240 601a 	movw	r0, #1562	; 0x61a
 800fab4:	4283      	cmp	r3, r0
 800fab6:	d02a      	beq.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fab8:	d821      	bhi.n	800fafe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800faba:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800fabe:	d35b      	bcc.n	800fb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fac0:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800fac4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fac8:	f040 80d0 	bne.w	800fc6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800facc:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800fad0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fad4:	f040 80ca 	bne.w	800fc6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fad8:	00cb      	lsls	r3, r1, #3
 800fada:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fade:	7a13      	ldrb	r3, [r2, #8]
 800fae0:	0649      	lsls	r1, r1, #25
 800fae2:	ea43 0300 	orr.w	r3, r3, r0
 800fae6:	bf44      	itt	mi
 800fae8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800faec:	b21b      	sxthmi	r3, r3
 800faee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800faf2:	1b5d      	subs	r5, r3, r5
 800faf4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800faf8:	4610      	mov	r0, r2
 800fafa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fafe:	f240 604b 	movw	r0, #1611	; 0x64b
 800fb02:	4283      	cmp	r3, r0
 800fb04:	d338      	bcc.n	800fb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fb06:	f240 604c 	movw	r0, #1612	; 0x64c
 800fb0a:	4283      	cmp	r3, r0
 800fb0c:	d9d8      	bls.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb0e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800fb12:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800fb16:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fb1a:	f040 80f1 	bne.w	800fd00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fb1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fb22:	f040 80ed 	bne.w	800fd00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fb26:	00cb      	lsls	r3, r1, #3
 800fb28:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fb2c:	7a13      	ldrb	r3, [r2, #8]
 800fb2e:	064e      	lsls	r6, r1, #25
 800fb30:	ea43 0300 	orr.w	r3, r3, r0
 800fb34:	bf44      	itt	mi
 800fb36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fb3a:	b21b      	sxthmi	r3, r3
 800fb3c:	e7d9      	b.n	800faf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800fb3e:	f240 6054 	movw	r0, #1620	; 0x654
 800fb42:	4283      	cmp	r3, r0
 800fb44:	d8e3      	bhi.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb46:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fb4a:	d9e0      	bls.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb4c:	e7b8      	b.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb4e:	f240 6074 	movw	r0, #1652	; 0x674
 800fb52:	4283      	cmp	r3, r0
 800fb54:	d0b4      	beq.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb56:	d82d      	bhi.n	800fbb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800fb58:	f240 605e 	movw	r0, #1630	; 0x65e
 800fb5c:	4283      	cmp	r3, r0
 800fb5e:	d804      	bhi.n	800fb6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800fb60:	f240 605d 	movw	r0, #1629	; 0x65d
 800fb64:	4283      	cmp	r3, r0
 800fb66:	d3d2      	bcc.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb68:	e7aa      	b.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb6a:	f240 605f 	movw	r0, #1631	; 0x65f
 800fb6e:	4283      	cmp	r3, r0
 800fb70:	d0cd      	beq.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb72:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fb76:	d0a3      	beq.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb78:	00cb      	lsls	r3, r1, #3
 800fb7a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fb7e:	7a13      	ldrb	r3, [r2, #8]
 800fb80:	0649      	lsls	r1, r1, #25
 800fb82:	ea43 0300 	orr.w	r3, r3, r0
 800fb86:	bf44      	itt	mi
 800fb88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fb8c:	b21b      	sxthmi	r3, r3
 800fb8e:	1b5d      	subs	r5, r3, r5
 800fb90:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fb94:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fb98:	7b53      	ldrb	r3, [r2, #13]
 800fb9a:	015b      	lsls	r3, r3, #5
 800fb9c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fba0:	7993      	ldrb	r3, [r2, #6]
 800fba2:	430b      	orrs	r3, r1
 800fba4:	005b      	lsls	r3, r3, #1
 800fba6:	2105      	movs	r1, #5
 800fba8:	fb93 f3f1 	sdiv	r3, r3, r1
 800fbac:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fbb0:	440b      	add	r3, r1
 800fbb2:	e757      	b.n	800fa64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fbb4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800fbb8:	4283      	cmp	r3, r0
 800fbba:	d809      	bhi.n	800fbd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800fbbc:	f240 60df 	movw	r0, #1759	; 0x6df
 800fbc0:	4283      	cmp	r3, r0
 800fbc2:	f4bf af7d 	bcs.w	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fbc6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800fbca:	2b05      	cmp	r3, #5
 800fbcc:	d8d4      	bhi.n	800fb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fbce:	e777      	b.n	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fbd0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800fbd4:	4283      	cmp	r3, r0
 800fbd6:	d09a      	beq.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fbd8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800fbdc:	4283      	cmp	r3, r0
 800fbde:	e7ca      	b.n	800fb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800fbe0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800fbe4:	d22b      	bcs.n	800fc3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800fbe6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800fbea:	4283      	cmp	r3, r0
 800fbec:	d28f      	bcs.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fbee:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800fbf2:	4283      	cmp	r3, r0
 800fbf4:	d816      	bhi.n	800fc24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800fbf6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800fbfa:	4283      	cmp	r3, r0
 800fbfc:	f4bf af60 	bcs.w	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc00:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800fc04:	4283      	cmp	r3, r0
 800fc06:	d80a      	bhi.n	800fc1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800fc08:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800fc0c:	4283      	cmp	r3, r0
 800fc0e:	f4bf af57 	bcs.w	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc12:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800fc16:	4283      	cmp	r3, r0
 800fc18:	f43f af79 	beq.w	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc1c:	e7ac      	b.n	800fb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fc1e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800fc22:	e7f8      	b.n	800fc16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800fc24:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800fc28:	4283      	cmp	r3, r0
 800fc2a:	d802      	bhi.n	800fc32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800fc2c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800fc30:	e798      	b.n	800fb64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800fc32:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800fc36:	4283      	cmp	r3, r0
 800fc38:	f47f af42 	bne.w	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc3c:	e767      	b.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc3e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800fc42:	4283      	cmp	r3, r0
 800fc44:	f43f af63 	beq.w	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc48:	d802      	bhi.n	800fc50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800fc4a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800fc4e:	e7f2      	b.n	800fc36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800fc50:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800fc54:	4283      	cmp	r3, r0
 800fc56:	d805      	bhi.n	800fc64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800fc58:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800fc5c:	4283      	cmp	r3, r0
 800fc5e:	f4ff af2f 	bcc.w	800fac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc62:	e754      	b.n	800fb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc64:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800fc68:	4283      	cmp	r3, r0
 800fc6a:	e7af      	b.n	800fbcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800fc6c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800fc70:	4617      	mov	r7, r2
 800fc72:	f102 0808 	add.w	r8, r2, #8
 800fc76:	4666      	mov	r6, ip
 800fc78:	6838      	ldr	r0, [r7, #0]
 800fc7a:	6879      	ldr	r1, [r7, #4]
 800fc7c:	46e6      	mov	lr, ip
 800fc7e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fc82:	3708      	adds	r7, #8
 800fc84:	4547      	cmp	r7, r8
 800fc86:	46f4      	mov	ip, lr
 800fc88:	d1f6      	bne.n	800fc78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800fc8a:	6838      	ldr	r0, [r7, #0]
 800fc8c:	f8ce 0000 	str.w	r0, [lr]
 800fc90:	88b9      	ldrh	r1, [r7, #4]
 800fc92:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fc96:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800fc9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fc9e:	d009      	beq.n	800fcb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800fca0:	7b51      	ldrb	r1, [r2, #13]
 800fca2:	7992      	ldrb	r2, [r2, #6]
 800fca4:	0149      	lsls	r1, r1, #5
 800fca6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fcaa:	4311      	orrs	r1, r2
 800fcac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fcb0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800fcb4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fcb8:	d00d      	beq.n	800fcd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800fcba:	442b      	add	r3, r5
 800fcbc:	b29b      	uxth	r3, r3
 800fcbe:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fcc2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fcc6:	10db      	asrs	r3, r3, #3
 800fcc8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fccc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fcd0:	4313      	orrs	r3, r2
 800fcd2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fcd6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800fcda:	00cb      	lsls	r3, r1, #3
 800fcdc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fce0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800fce4:	064f      	lsls	r7, r1, #25
 800fce6:	ea43 0302 	orr.w	r3, r3, r2
 800fcea:	bf44      	itt	mi
 800fcec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fcf0:	b21b      	sxthmi	r3, r3
 800fcf2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fcf6:	1b5d      	subs	r5, r3, r5
 800fcf8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fcfc:	4632      	mov	r2, r6
 800fcfe:	e6fb      	b.n	800faf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fd00:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800fd04:	4694      	mov	ip, r2
 800fd06:	f102 0908 	add.w	r9, r2, #8
 800fd0a:	4676      	mov	r6, lr
 800fd0c:	f8dc 0000 	ldr.w	r0, [ip]
 800fd10:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fd14:	46f0      	mov	r8, lr
 800fd16:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800fd1a:	f10c 0c08 	add.w	ip, ip, #8
 800fd1e:	45cc      	cmp	ip, r9
 800fd20:	46c6      	mov	lr, r8
 800fd22:	d1f3      	bne.n	800fd0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800fd24:	f8dc 0000 	ldr.w	r0, [ip]
 800fd28:	f8c8 0000 	str.w	r0, [r8]
 800fd2c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800fd30:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fd34:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800fd38:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fd3c:	d009      	beq.n	800fd52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800fd3e:	7b51      	ldrb	r1, [r2, #13]
 800fd40:	7992      	ldrb	r2, [r2, #6]
 800fd42:	0149      	lsls	r1, r1, #5
 800fd44:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fd48:	4311      	orrs	r1, r2
 800fd4a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fd4e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800fd52:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fd56:	d00d      	beq.n	800fd74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800fd58:	1bdb      	subs	r3, r3, r7
 800fd5a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fd5e:	b29b      	uxth	r3, r3
 800fd60:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fd64:	10db      	asrs	r3, r3, #3
 800fd66:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fd6a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fd6e:	4313      	orrs	r3, r2
 800fd70:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fd74:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800fd78:	00cb      	lsls	r3, r1, #3
 800fd7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fd7e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800fd82:	0648      	lsls	r0, r1, #25
 800fd84:	ea43 0302 	orr.w	r3, r3, r2
 800fd88:	bf44      	itt	mi
 800fd8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fd8e:	b21b      	sxthmi	r3, r3
 800fd90:	e7b1      	b.n	800fcf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800fd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fd94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd98:	461e      	mov	r6, r3
 800fd9a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800fd9c:	4604      	mov	r4, r0
 800fd9e:	4617      	mov	r7, r2
 800fda0:	b92b      	cbnz	r3, 800fdae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800fda2:	4b25      	ldr	r3, [pc, #148]	; (800fe38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800fda4:	4a25      	ldr	r2, [pc, #148]	; (800fe3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800fda6:	4826      	ldr	r0, [pc, #152]	; (800fe40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800fda8:	21c0      	movs	r1, #192	; 0xc0
 800fdaa:	f00d fc03 	bl	801d5b4 <__assert_func>
 800fdae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800fdb0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fdb4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800fdb8:	f7f3 fa5e 	bl	8003278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fdbc:	4605      	mov	r5, r0
 800fdbe:	b918      	cbnz	r0, 800fdc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800fdc0:	6030      	str	r0, [r6, #0]
 800fdc2:	4628      	mov	r0, r5
 800fdc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fdc8:	683b      	ldr	r3, [r7, #0]
 800fdca:	4601      	mov	r1, r0
 800fdcc:	68db      	ldr	r3, [r3, #12]
 800fdce:	4638      	mov	r0, r7
 800fdd0:	4798      	blx	r3
 800fdd2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fdd6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fdda:	4602      	mov	r2, r0
 800fddc:	6030      	str	r0, [r6, #0]
 800fdde:	d213      	bcs.n	800fe08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800fde0:	4643      	mov	r3, r8
 800fde2:	4639      	mov	r1, r7
 800fde4:	4620      	mov	r0, r4
 800fde6:	f7ff fe33 	bl	800fa50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fdea:	6030      	str	r0, [r6, #0]
 800fdec:	6833      	ldr	r3, [r6, #0]
 800fdee:	b143      	cbz	r3, 800fe02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800fdf0:	7b5a      	ldrb	r2, [r3, #13]
 800fdf2:	7a9b      	ldrb	r3, [r3, #10]
 800fdf4:	0052      	lsls	r2, r2, #1
 800fdf6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fdfa:	4313      	orrs	r3, r2
 800fdfc:	bf0c      	ite	eq
 800fdfe:	2301      	moveq	r3, #1
 800fe00:	2300      	movne	r3, #0
 800fe02:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800fe06:	e7dc      	b.n	800fdc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800fe08:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800fe0c:	b29b      	uxth	r3, r3
 800fe0e:	2b7f      	cmp	r3, #127	; 0x7f
 800fe10:	d804      	bhi.n	800fe1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800fe12:	4639      	mov	r1, r7
 800fe14:	4620      	mov	r0, r4
 800fe16:	f7ff fd01 	bl	800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fe1a:	e7e6      	b.n	800fdea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800fe1c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800fe20:	2b00      	cmp	r3, #0
 800fe22:	d0e3      	beq.n	800fdec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fe24:	f640 1302 	movw	r3, #2306	; 0x902
 800fe28:	429d      	cmp	r5, r3
 800fe2a:	d1df      	bne.n	800fdec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fe2c:	4601      	mov	r1, r0
 800fe2e:	4620      	mov	r0, r4
 800fe30:	f7ff fcc6 	bl	800f7c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fe34:	e7d9      	b.n	800fdea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800fe36:	bf00      	nop
 800fe38:	0801f350 	.word	0x0801f350
 800fe3c:	08020b67 	.word	0x08020b67
 800fe40:	0801f422 	.word	0x0801f422

0800fe44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800fe44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe48:	461e      	mov	r6, r3
 800fe4a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800fe4c:	4604      	mov	r4, r0
 800fe4e:	4617      	mov	r7, r2
 800fe50:	b92b      	cbnz	r3, 800fe5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800fe52:	4b26      	ldr	r3, [pc, #152]	; (800feec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800fe54:	4a26      	ldr	r2, [pc, #152]	; (800fef0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800fe56:	4827      	ldr	r0, [pc, #156]	; (800fef4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800fe58:	21c0      	movs	r1, #192	; 0xc0
 800fe5a:	f00d fbab 	bl	801d5b4 <__assert_func>
 800fe5e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800fe60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fe64:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800fe68:	f7f3 fa06 	bl	8003278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fe6c:	4605      	mov	r5, r0
 800fe6e:	b918      	cbnz	r0, 800fe78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800fe70:	6030      	str	r0, [r6, #0]
 800fe72:	4628      	mov	r0, r5
 800fe74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fe78:	683b      	ldr	r3, [r7, #0]
 800fe7a:	4601      	mov	r1, r0
 800fe7c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800fe80:	4638      	mov	r0, r7
 800fe82:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800fe86:	47c8      	blx	r9
 800fe88:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fe8c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fe90:	4602      	mov	r2, r0
 800fe92:	6030      	str	r0, [r6, #0]
 800fe94:	d213      	bcs.n	800febe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800fe96:	4643      	mov	r3, r8
 800fe98:	4639      	mov	r1, r7
 800fe9a:	4620      	mov	r0, r4
 800fe9c:	f7ff fdd8 	bl	800fa50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fea0:	6030      	str	r0, [r6, #0]
 800fea2:	6833      	ldr	r3, [r6, #0]
 800fea4:	b143      	cbz	r3, 800feb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800fea6:	7b5a      	ldrb	r2, [r3, #13]
 800fea8:	7a9b      	ldrb	r3, [r3, #10]
 800feaa:	0052      	lsls	r2, r2, #1
 800feac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800feb0:	4313      	orrs	r3, r2
 800feb2:	bf0c      	ite	eq
 800feb4:	2301      	moveq	r3, #1
 800feb6:	2300      	movne	r3, #0
 800feb8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800febc:	e7d9      	b.n	800fe72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800febe:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800fec2:	b29b      	uxth	r3, r3
 800fec4:	2b7f      	cmp	r3, #127	; 0x7f
 800fec6:	d804      	bhi.n	800fed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800fec8:	4639      	mov	r1, r7
 800feca:	4620      	mov	r0, r4
 800fecc:	f7ff fca6 	bl	800f81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fed0:	e7e6      	b.n	800fea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800fed2:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800fed6:	2b00      	cmp	r3, #0
 800fed8:	d0e3      	beq.n	800fea2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800feda:	f640 1302 	movw	r3, #2306	; 0x902
 800fede:	429d      	cmp	r5, r3
 800fee0:	d1df      	bne.n	800fea2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800fee2:	4601      	mov	r1, r0
 800fee4:	4620      	mov	r0, r4
 800fee6:	f7ff fc6b 	bl	800f7c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800feea:	e7d9      	b.n	800fea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800feec:	0801f350 	.word	0x0801f350
 800fef0:	08020b67 	.word	0x08020b67
 800fef4:	0801f422 	.word	0x0801f422

0800fef8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800fef8:	b510      	push	{r4, lr}
 800fefa:	4604      	mov	r4, r0
 800fefc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800ff00:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ff02:	b9d9      	cbnz	r1, 800ff3c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800ff04:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ff06:	2b0a      	cmp	r3, #10
 800ff08:	d037      	beq.n	800ff7a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ff0a:	4620      	mov	r0, r4
 800ff0c:	f7ff fc06 	bl	800f71c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800ff10:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ff12:	2b09      	cmp	r3, #9
 800ff14:	d906      	bls.n	800ff24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800ff16:	4b19      	ldr	r3, [pc, #100]	; (800ff7c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800ff18:	4a19      	ldr	r2, [pc, #100]	; (800ff80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800ff1a:	481a      	ldr	r0, [pc, #104]	; (800ff84 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800ff1c:	f44f 7182 	mov.w	r1, #260	; 0x104
 800ff20:	f00d fb48 	bl	801d5b4 <__assert_func>
 800ff24:	1c5a      	adds	r2, r3, #1
 800ff26:	8722      	strh	r2, [r4, #56]	; 0x38
 800ff28:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ff2a:	4413      	add	r3, r2
 800ff2c:	b29b      	uxth	r3, r3
 800ff2e:	2b09      	cmp	r3, #9
 800ff30:	bf88      	it	hi
 800ff32:	3b0a      	subhi	r3, #10
 800ff34:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ff38:	8458      	strh	r0, [r3, #34]	; 0x22
 800ff3a:	e7e3      	b.n	800ff04 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800ff3c:	2b0a      	cmp	r3, #10
 800ff3e:	d01c      	beq.n	800ff7a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ff40:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ff42:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ff46:	3901      	subs	r1, #1
 800ff48:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ff4a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ff4e:	1c51      	adds	r1, r2, #1
 800ff50:	b289      	uxth	r1, r1
 800ff52:	2901      	cmp	r1, #1
 800ff54:	bf8a      	itet	hi
 800ff56:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ff5a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800ff5c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800ff5e:	2b09      	cmp	r3, #9
 800ff60:	d8d9      	bhi.n	800ff16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800ff62:	1c5a      	adds	r2, r3, #1
 800ff64:	8722      	strh	r2, [r4, #56]	; 0x38
 800ff66:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ff68:	4413      	add	r3, r2
 800ff6a:	b29b      	uxth	r3, r3
 800ff6c:	2b09      	cmp	r3, #9
 800ff6e:	bf88      	it	hi
 800ff70:	3b0a      	subhi	r3, #10
 800ff72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ff76:	8458      	strh	r0, [r3, #34]	; 0x22
 800ff78:	e7c0      	b.n	800fefc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ff7a:	bd10      	pop	{r4, pc}
 800ff7c:	08020938 	.word	0x08020938
 800ff80:	08020cbd 	.word	0x08020cbd
 800ff84:	0801f422 	.word	0x0801f422

0800ff88 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ff88:	b538      	push	{r3, r4, r5, lr}
 800ff8a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800ff8c:	4604      	mov	r4, r0
 800ff8e:	b92a      	cbnz	r2, 800ff9c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ff90:	4b13      	ldr	r3, [pc, #76]	; (800ffe0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ff92:	4a14      	ldr	r2, [pc, #80]	; (800ffe4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ff94:	4814      	ldr	r0, [pc, #80]	; (800ffe8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ff96:	21d5      	movs	r1, #213	; 0xd5
 800ff98:	f00d fb0c 	bl	801d5b4 <__assert_func>
 800ff9c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ff9e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ffa2:	3a01      	subs	r2, #1
 800ffa4:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800ffa6:	8702      	strh	r2, [r0, #56]	; 0x38
 800ffa8:	1c5a      	adds	r2, r3, #1
 800ffaa:	b292      	uxth	r2, r2
 800ffac:	2a09      	cmp	r2, #9
 800ffae:	bf86      	itte	hi
 800ffb0:	3b09      	subhi	r3, #9
 800ffb2:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800ffb4:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800ffb6:	f7ff ff9f 	bl	800fef8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ffba:	8c23      	ldrh	r3, [r4, #32]
 800ffbc:	2b01      	cmp	r3, #1
 800ffbe:	bf9c      	itt	ls
 800ffc0:	3301      	addls	r3, #1
 800ffc2:	8423      	strhls	r3, [r4, #32]
 800ffc4:	8be3      	ldrh	r3, [r4, #30]
 800ffc6:	b90b      	cbnz	r3, 800ffcc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ffc8:	2302      	movs	r3, #2
 800ffca:	83e3      	strh	r3, [r4, #30]
 800ffcc:	8be3      	ldrh	r3, [r4, #30]
 800ffce:	3b01      	subs	r3, #1
 800ffd0:	b29b      	uxth	r3, r3
 800ffd2:	83e3      	strh	r3, [r4, #30]
 800ffd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ffd8:	4628      	mov	r0, r5
 800ffda:	8365      	strh	r5, [r4, #26]
 800ffdc:	bd38      	pop	{r3, r4, r5, pc}
 800ffde:	bf00      	nop
 800ffe0:	0801f350 	.word	0x0801f350
 800ffe4:	08020c12 	.word	0x08020c12
 800ffe8:	0801f422 	.word	0x0801f422

0800ffec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ffec:	b538      	push	{r3, r4, r5, lr}
 800ffee:	428a      	cmp	r2, r1
 800fff0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800fff2:	d90c      	bls.n	801000e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800fff4:	b92c      	cbnz	r4, 8010002 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800fff6:	4b1c      	ldr	r3, [pc, #112]	; (8010068 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800fff8:	4a1c      	ldr	r2, [pc, #112]	; (801006c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800fffa:	21e1      	movs	r1, #225	; 0xe1
 800fffc:	481c      	ldr	r0, [pc, #112]	; (8010070 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800fffe:	f00d fad9 	bl	801d5b4 <__assert_func>
 8010002:	3c01      	subs	r4, #1
 8010004:	8704      	strh	r4, [r0, #56]	; 0x38
 8010006:	4b1b      	ldr	r3, [pc, #108]	; (8010074 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8010008:	4a1b      	ldr	r2, [pc, #108]	; (8010078 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801000a:	21c5      	movs	r1, #197	; 0xc5
 801000c:	e7f6      	b.n	800fffc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801000e:	428c      	cmp	r4, r1
 8010010:	d203      	bcs.n	801001a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8010012:	4b1a      	ldr	r3, [pc, #104]	; (801007c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8010014:	4a1a      	ldr	r2, [pc, #104]	; (8010080 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8010016:	21cb      	movs	r1, #203	; 0xcb
 8010018:	e7f0      	b.n	800fffc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801001a:	1a64      	subs	r4, r4, r1
 801001c:	8704      	strh	r4, [r0, #56]	; 0x38
 801001e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8010020:	4421      	add	r1, r4
 8010022:	b289      	uxth	r1, r1
 8010024:	2909      	cmp	r1, #9
 8010026:	bf88      	it	hi
 8010028:	390a      	subhi	r1, #10
 801002a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801002c:	250a      	movs	r5, #10
 801002e:	b1ba      	cbz	r2, 8010060 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8010030:	3a01      	subs	r2, #1
 8010032:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8010034:	b292      	uxth	r2, r2
 8010036:	2909      	cmp	r1, #9
 8010038:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801003c:	d903      	bls.n	8010046 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801003e:	4b11      	ldr	r3, [pc, #68]	; (8010084 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8010040:	4a11      	ldr	r2, [pc, #68]	; (8010088 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8010042:	21e6      	movs	r1, #230	; 0xe6
 8010044:	e7da      	b.n	800fffc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010046:	3101      	adds	r1, #1
 8010048:	8701      	strh	r1, [r0, #56]	; 0x38
 801004a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801004c:	b901      	cbnz	r1, 8010050 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801004e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8010050:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8010052:	3901      	subs	r1, #1
 8010054:	b289      	uxth	r1, r1
 8010056:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010058:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801005c:	844c      	strh	r4, [r1, #34]	; 0x22
 801005e:	e7e6      	b.n	801002e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8010060:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010064:	f7ff bf48 	b.w	800fef8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010068:	0801f350 	.word	0x0801f350
 801006c:	080209eb 	.word	0x080209eb
 8010070:	0801f422 	.word	0x0801f422
 8010074:	0801f44e 	.word	0x0801f44e
 8010078:	08020a95 	.word	0x08020a95
 801007c:	08020944 	.word	0x08020944
 8010080:	08020d6c 	.word	0x08020d6c
 8010084:	08020950 	.word	0x08020950
 8010088:	08020963 	.word	0x08020963

0801008c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801008c:	3a01      	subs	r2, #1
 801008e:	b570      	push	{r4, r5, r6, lr}
 8010090:	b292      	uxth	r2, r2
 8010092:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010096:	42b2      	cmp	r2, r6
 8010098:	d019      	beq.n	80100ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801009a:	8c04      	ldrh	r4, [r0, #32]
 801009c:	f831 5b02 	ldrh.w	r5, [r1], #2
 80100a0:	4294      	cmp	r4, r2
 80100a2:	d805      	bhi.n	80100b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 80100a4:	4b19      	ldr	r3, [pc, #100]	; (801010c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80100a6:	4a1a      	ldr	r2, [pc, #104]	; (8010110 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 80100a8:	481a      	ldr	r0, [pc, #104]	; (8010114 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 80100aa:	21c5      	movs	r1, #197	; 0xc5
 80100ac:	f00d fa82 	bl	801d5b4 <__assert_func>
 80100b0:	8bc4      	ldrh	r4, [r0, #30]
 80100b2:	4414      	add	r4, r2
 80100b4:	b2a4      	uxth	r4, r4
 80100b6:	2c01      	cmp	r4, #1
 80100b8:	bf88      	it	hi
 80100ba:	3c02      	subhi	r4, #2
 80100bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80100c0:	3a01      	subs	r2, #1
 80100c2:	8b64      	ldrh	r4, [r4, #26]
 80100c4:	42ac      	cmp	r4, r5
 80100c6:	b292      	uxth	r2, r2
 80100c8:	d0e5      	beq.n	8010096 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 80100ca:	2000      	movs	r0, #0
 80100cc:	bd70      	pop	{r4, r5, r6, pc}
 80100ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80100d2:	2400      	movs	r4, #0
 80100d4:	4413      	add	r3, r2
 80100d6:	b2a2      	uxth	r2, r4
 80100d8:	429a      	cmp	r2, r3
 80100da:	da14      	bge.n	8010106 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 80100dc:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 80100de:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80100e2:	4296      	cmp	r6, r2
 80100e4:	d802      	bhi.n	80100ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 80100e6:	4b09      	ldr	r3, [pc, #36]	; (801010c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80100e8:	4a0b      	ldr	r2, [pc, #44]	; (8010118 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 80100ea:	e7dd      	b.n	80100a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 80100ec:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80100ee:	4432      	add	r2, r6
 80100f0:	b292      	uxth	r2, r2
 80100f2:	2a09      	cmp	r2, #9
 80100f4:	bf88      	it	hi
 80100f6:	3a0a      	subhi	r2, #10
 80100f8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80100fc:	3401      	adds	r4, #1
 80100fe:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8010100:	42aa      	cmp	r2, r5
 8010102:	d0e8      	beq.n	80100d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8010104:	e7e1      	b.n	80100ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8010106:	2001      	movs	r0, #1
 8010108:	e7e0      	b.n	80100cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801010a:	bf00      	nop
 801010c:	0801f44e 	.word	0x0801f44e
 8010110:	08020df0 	.word	0x08020df0
 8010114:	0801f422 	.word	0x0801f422
 8010118:	08020a95 	.word	0x08020a95

0801011c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801011c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010120:	4605      	mov	r5, r0
 8010122:	4616      	mov	r6, r2
 8010124:	1c8c      	adds	r4, r1, #2
 8010126:	8809      	ldrh	r1, [r1, #0]
 8010128:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801012c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8010130:	42b3      	cmp	r3, r6
 8010132:	d124      	bne.n	801017e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010134:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010138:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801013c:	f001 070f 	and.w	r7, r1, #15
 8010140:	f8cd 8000 	str.w	r8, [sp]
 8010144:	464b      	mov	r3, r9
 8010146:	4652      	mov	r2, sl
 8010148:	4621      	mov	r1, r4
 801014a:	4628      	mov	r0, r5
 801014c:	f7ff ff9e 	bl	801008c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8010150:	4683      	mov	fp, r0
 8010152:	b168      	cbz	r0, 8010170 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8010154:	eb0a 0109 	add.w	r1, sl, r9
 8010158:	4441      	add	r1, r8
 801015a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801015e:	463a      	mov	r2, r7
 8010160:	4649      	mov	r1, r9
 8010162:	4628      	mov	r0, r5
 8010164:	f7ff ff42 	bl	800ffec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8010168:	4658      	mov	r0, fp
 801016a:	b003      	add	sp, #12
 801016c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010170:	eb07 010a 	add.w	r1, r7, sl
 8010174:	4449      	add	r1, r9
 8010176:	4441      	add	r1, r8
 8010178:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801017c:	e7d2      	b.n	8010124 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801017e:	f04f 0b00 	mov.w	fp, #0
 8010182:	e7f1      	b.n	8010168 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08010184 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8010184:	b570      	push	{r4, r5, r6, lr}
 8010186:	8810      	ldrh	r0, [r2, #0]
 8010188:	4298      	cmp	r0, r3
 801018a:	d817      	bhi.n	80101bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801018c:	1e48      	subs	r0, r1, #1
 801018e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8010192:	4298      	cmp	r0, r3
 8010194:	d312      	bcc.n	80101bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010196:	2400      	movs	r4, #0
 8010198:	428c      	cmp	r4, r1
 801019a:	d20f      	bcs.n	80101bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801019c:	1860      	adds	r0, r4, r1
 801019e:	1040      	asrs	r0, r0, #1
 80101a0:	0085      	lsls	r5, r0, #2
 80101a2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80101a6:	42b3      	cmp	r3, r6
 80101a8:	d902      	bls.n	80101b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80101aa:	3001      	adds	r0, #1
 80101ac:	b284      	uxth	r4, r0
 80101ae:	e7f3      	b.n	8010198 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80101b0:	d201      	bcs.n	80101b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80101b2:	b281      	uxth	r1, r0
 80101b4:	e7f0      	b.n	8010198 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80101b6:	442a      	add	r2, r5
 80101b8:	8850      	ldrh	r0, [r2, #2]
 80101ba:	bd70      	pop	{r4, r5, r6, pc}
 80101bc:	2000      	movs	r0, #0
 80101be:	e7fc      	b.n	80101ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080101c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80101c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101c4:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80101c6:	886f      	ldrh	r7, [r5, #2]
 80101c8:	4604      	mov	r4, r0
 80101ca:	087f      	lsrs	r7, r7, #1
 80101cc:	260b      	movs	r6, #11
 80101ce:	3e01      	subs	r6, #1
 80101d0:	d01b      	beq.n	801020a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80101d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80101d4:	b92b      	cbnz	r3, 80101e2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80101d6:	4b0e      	ldr	r3, [pc, #56]	; (8010210 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80101d8:	4a0e      	ldr	r2, [pc, #56]	; (8010214 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80101da:	480f      	ldr	r0, [pc, #60]	; (8010218 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 80101dc:	21c0      	movs	r1, #192	; 0xc0
 80101de:	f00d f9e9 	bl	801d5b4 <__assert_func>
 80101e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80101e4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80101e8:	462a      	mov	r2, r5
 80101ea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80101ee:	4639      	mov	r1, r7
 80101f0:	4643      	mov	r3, r8
 80101f2:	4620      	mov	r0, r4
 80101f4:	f7ff ffc6 	bl	8010184 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80101f8:	b138      	cbz	r0, 801020a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80101fa:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80101fe:	4642      	mov	r2, r8
 8010200:	4620      	mov	r0, r4
 8010202:	f7ff ff8b 	bl	801011c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8010206:	2800      	cmp	r0, #0
 8010208:	d1e1      	bne.n	80101ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801020e:	bf00      	nop
 8010210:	0801f350 	.word	0x0801f350
 8010214:	08020b67 	.word	0x08020b67
 8010218:	0801f422 	.word	0x0801f422

0801021c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801021c:	b570      	push	{r4, r5, r6, lr}
 801021e:	694a      	ldr	r2, [r1, #20]
 8010220:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010222:	684b      	ldr	r3, [r1, #4]
 8010224:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010226:	1b54      	subs	r4, r2, r5
 8010228:	f000 8106 	beq.w	8010438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801022c:	1b9b      	subs	r3, r3, r6
 801022e:	d003      	beq.n	8010238 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010230:	4363      	muls	r3, r4
 8010232:	2210      	movs	r2, #16
 8010234:	fb93 f3f2 	sdiv	r3, r3, r2
 8010238:	680c      	ldr	r4, [r1, #0]
 801023a:	698a      	ldr	r2, [r1, #24]
 801023c:	1b65      	subs	r5, r4, r5
 801023e:	f000 80fd 	beq.w	801043c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8010242:	1b92      	subs	r2, r2, r6
 8010244:	d003      	beq.n	801024e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010246:	436a      	muls	r2, r5
 8010248:	2410      	movs	r4, #16
 801024a:	fb92 f2f4 	sdiv	r2, r2, r4
 801024e:	1a9b      	subs	r3, r3, r2
 8010250:	ee07 3a90 	vmov	s15, r3
 8010254:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8010478 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010258:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801025c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010260:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010264:	460a      	mov	r2, r1
 8010266:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801026a:	4603      	mov	r3, r0
 801026c:	f100 040c 	add.w	r4, r0, #12
 8010270:	eeb1 6a43 	vneg.f32	s12, s6
 8010274:	edd2 7a02 	vldr	s15, [r2, #8]
 8010278:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801027c:	3214      	adds	r2, #20
 801027e:	ece3 6a01 	vstmia	r3!, {s13}
 8010282:	ed52 7a02 	vldr	s15, [r2, #-8]
 8010286:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801028a:	429c      	cmp	r4, r3
 801028c:	edc3 7a02 	vstr	s15, [r3, #8]
 8010290:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010294:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010298:	edc3 7a05 	vstr	s15, [r3, #20]
 801029c:	d1ea      	bne.n	8010274 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801029e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80102a0:	698b      	ldr	r3, [r1, #24]
 80102a2:	edd0 4a02 	vldr	s9, [r0, #8]
 80102a6:	edd0 3a00 	vldr	s7, [r0]
 80102aa:	edd0 6a01 	vldr	s13, [r0, #4]
 80102ae:	ed90 5a05 	vldr	s10, [r0, #20]
 80102b2:	ed90 2a03 	vldr	s4, [r0, #12]
 80102b6:	edd0 5a04 	vldr	s11, [r0, #16]
 80102ba:	ed90 1a07 	vldr	s2, [r0, #28]
 80102be:	edd0 2a06 	vldr	s5, [r0, #24]
 80102c2:	1a9b      	subs	r3, r3, r2
 80102c4:	ee07 3a90 	vmov	s15, r3
 80102c8:	684b      	ldr	r3, [r1, #4]
 80102ca:	1a9b      	subs	r3, r3, r2
 80102cc:	ee07 3a10 	vmov	s14, r3
 80102d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80102d4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80102d8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80102dc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80102e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80102e4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80102e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80102ec:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80102f0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80102f4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80102f8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80102fc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8010300:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010302:	694a      	ldr	r2, [r1, #20]
 8010304:	1b13      	subs	r3, r2, r4
 8010306:	ee07 3a10 	vmov	s14, r3
 801030a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801030e:	680b      	ldr	r3, [r1, #0]
 8010310:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010314:	1b1b      	subs	r3, r3, r4
 8010316:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801031a:	ee07 3a10 	vmov	s14, r3
 801031e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010322:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010326:	eee6 4a87 	vfma.f32	s9, s13, s14
 801032a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801032e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8010332:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010334:	698b      	ldr	r3, [r1, #24]
 8010336:	1a9b      	subs	r3, r3, r2
 8010338:	ee06 3a90 	vmov	s13, r3
 801033c:	684b      	ldr	r3, [r1, #4]
 801033e:	1a9b      	subs	r3, r3, r2
 8010340:	ee07 3a10 	vmov	s14, r3
 8010344:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010348:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801034c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8010350:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010354:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010358:	eee5 6a87 	vfma.f32	s13, s11, s14
 801035c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8010360:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8010364:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010366:	694a      	ldr	r2, [r1, #20]
 8010368:	1b13      	subs	r3, r2, r4
 801036a:	ee07 3a10 	vmov	s14, r3
 801036e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010372:	680b      	ldr	r3, [r1, #0]
 8010374:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010378:	1b1b      	subs	r3, r3, r4
 801037a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801037e:	ee07 3a10 	vmov	s14, r3
 8010382:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010386:	ee27 7a04 	vmul.f32	s14, s14, s8
 801038a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801038e:	edd0 5a08 	vldr	s11, [r0, #32]
 8010392:	ee25 5a06 	vmul.f32	s10, s10, s12
 8010396:	ee31 1a65 	vsub.f32	s2, s2, s11
 801039a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801039e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80103a0:	698b      	ldr	r3, [r1, #24]
 80103a2:	1a9b      	subs	r3, r3, r2
 80103a4:	ee07 3a10 	vmov	s14, r3
 80103a8:	684b      	ldr	r3, [r1, #4]
 80103aa:	1a9b      	subs	r3, r3, r2
 80103ac:	ee01 3a90 	vmov	s3, r3
 80103b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80103b4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80103b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80103bc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80103c0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80103c4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80103c8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80103cc:	ee27 7a03 	vmul.f32	s14, s14, s6
 80103d0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80103d4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80103d6:	694a      	ldr	r2, [r1, #20]
 80103d8:	1b13      	subs	r3, r2, r4
 80103da:	ee03 3a10 	vmov	s6, r3
 80103de:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80103e2:	680b      	ldr	r3, [r1, #0]
 80103e4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80103e8:	1b1b      	subs	r3, r3, r4
 80103ea:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80103ee:	ee03 3a10 	vmov	s6, r3
 80103f2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80103f6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80103fa:	eee1 5a04 	vfma.f32	s11, s2, s8
 80103fe:	ee25 6a86 	vmul.f32	s12, s11, s12
 8010402:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010406:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801040a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801040e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8010412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010416:	dd13      	ble.n	8010440 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010418:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801041c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8010420:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010422:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010426:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801042a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801042e:	dd15      	ble.n	801045c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8010430:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010434:	6403      	str	r3, [r0, #64]	; 0x40
 8010436:	bd70      	pop	{r4, r5, r6, pc}
 8010438:	4623      	mov	r3, r4
 801043a:	e6fd      	b.n	8010238 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801043c:	462a      	mov	r2, r5
 801043e:	e706      	b.n	801024e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010440:	d502      	bpl.n	8010448 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8010442:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010446:	e7e9      	b.n	801041c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010448:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801044c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8010450:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010458:	dade      	bge.n	8010418 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801045a:	e7f2      	b.n	8010442 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801045c:	d502      	bpl.n	8010464 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801045e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010462:	e7e7      	b.n	8010434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010464:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8010468:	eee3 4a86 	vfma.f32	s9, s7, s12
 801046c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8010470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010474:	dadc      	bge.n	8010430 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8010476:	e7f2      	b.n	801045e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8010478:	3d800000 	.word	0x3d800000

0801047c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801047c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010480:	2714      	movs	r7, #20
 8010482:	435f      	muls	r7, r3
 8010484:	eb02 0c07 	add.w	ip, r2, r7
 8010488:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801048c:	f115 0e0f 	adds.w	lr, r5, #15
 8010490:	d432      	bmi.n	80104f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 8010492:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8010496:	9c08      	ldr	r4, [sp, #32]
 8010498:	f8c0 e014 	str.w	lr, [r0, #20]
 801049c:	2614      	movs	r6, #20
 801049e:	4366      	muls	r6, r4
 80104a0:	eb02 0806 	add.w	r8, r2, r6
 80104a4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80104a8:	f115 040f 	adds.w	r4, r5, #15
 80104ac:	d430      	bmi.n	8010510 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80104ae:	1124      	asrs	r4, r4, #4
 80104b0:	eba4 040e 	sub.w	r4, r4, lr
 80104b4:	6184      	str	r4, [r0, #24]
 80104b6:	2c00      	cmp	r4, #0
 80104b8:	f000 80a9 	beq.w	801060e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 80104bc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80104c0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80104c4:	5995      	ldr	r5, [r2, r6]
 80104c6:	eba4 0809 	sub.w	r8, r4, r9
 80104ca:	59d4      	ldr	r4, [r2, r7]
 80104cc:	eba5 0a04 	sub.w	sl, r5, r4
 80104d0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80104d4:	fb0e fe05 	mul.w	lr, lr, r5
 80104d8:	fb0a ee19 	mls	lr, sl, r9, lr
 80104dc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80104e0:	fb08 e404 	mla	r4, r8, r4, lr
 80104e4:	3c01      	subs	r4, #1
 80104e6:	2e00      	cmp	r6, #0
 80104e8:	4434      	add	r4, r6
 80104ea:	dc1d      	bgt.n	8010528 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 80104ec:	4b5a      	ldr	r3, [pc, #360]	; (8010658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 80104ee:	4a5b      	ldr	r2, [pc, #364]	; (801065c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 80104f0:	485b      	ldr	r0, [pc, #364]	; (8010660 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 80104f2:	21f7      	movs	r1, #247	; 0xf7
 80104f4:	f00d f85e 	bl	801d5b4 <__assert_func>
 80104f8:	f1c5 0501 	rsb	r5, r5, #1
 80104fc:	f015 050f 	ands.w	r5, r5, #15
 8010500:	bf18      	it	ne
 8010502:	2501      	movne	r5, #1
 8010504:	2410      	movs	r4, #16
 8010506:	fb9e fef4 	sdiv	lr, lr, r4
 801050a:	ebae 0e05 	sub.w	lr, lr, r5
 801050e:	e7c2      	b.n	8010496 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 8010510:	f1c5 0501 	rsb	r5, r5, #1
 8010514:	f015 050f 	ands.w	r5, r5, #15
 8010518:	bf18      	it	ne
 801051a:	2501      	movne	r5, #1
 801051c:	f04f 0910 	mov.w	r9, #16
 8010520:	fb94 f4f9 	sdiv	r4, r4, r9
 8010524:	1b64      	subs	r4, r4, r5
 8010526:	e7c3      	b.n	80104b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 8010528:	2c00      	cmp	r4, #0
 801052a:	db72      	blt.n	8010612 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 801052c:	fb94 fef6 	sdiv	lr, r4, r6
 8010530:	f8c0 e000 	str.w	lr, [r0]
 8010534:	fb06 441e 	mls	r4, r6, lr, r4
 8010538:	6104      	str	r4, [r0, #16]
 801053a:	2d00      	cmp	r5, #0
 801053c:	db7b      	blt.n	8010636 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 801053e:	fb95 f4f6 	sdiv	r4, r5, r6
 8010542:	6044      	str	r4, [r0, #4]
 8010544:	fb06 5514 	mls	r5, r6, r4, r5
 8010548:	6085      	str	r5, [r0, #8]
 801054a:	60c6      	str	r6, [r0, #12]
 801054c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8010550:	6945      	ldr	r5, [r0, #20]
 8010552:	59d2      	ldr	r2, [r2, r7]
 8010554:	eddf 6a43 	vldr	s13, [pc, #268]	; 8010664 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 8010558:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801055c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8010560:	ee07 4a10 	vmov	s14, r4
 8010564:	6804      	ldr	r4, [r0, #0]
 8010566:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801056a:	ee07 2a90 	vmov	s15, r2
 801056e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010572:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010576:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801057a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801057e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010582:	edd3 6a00 	vldr	s13, [r3]
 8010586:	eee6 6a07 	vfma.f32	s13, s12, s14
 801058a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801058e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8010592:	edc0 6a07 	vstr	s13, [r0, #28]
 8010596:	edd0 6a01 	vldr	s13, [r0, #4]
 801059a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801059e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80105a2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80105a6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80105aa:	ed80 6a08 	vstr	s12, [r0, #32]
 80105ae:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80105b0:	6242      	str	r2, [r0, #36]	; 0x24
 80105b2:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80105b6:	ed93 6a03 	vldr	s12, [r3, #12]
 80105ba:	eea5 6a87 	vfma.f32	s12, s11, s14
 80105be:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80105c2:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80105c6:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80105ca:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80105ce:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80105d2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80105d6:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80105da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80105dc:	6302      	str	r2, [r0, #48]	; 0x30
 80105de:	ed93 6a06 	vldr	s12, [r3, #24]
 80105e2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80105e6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80105ea:	eeb0 7a46 	vmov.f32	s14, s12
 80105ee:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80105f2:	eea6 7a27 	vfma.f32	s14, s12, s15
 80105f6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80105fa:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80105fe:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8010602:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010606:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801060a:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801060c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801060e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010612:	4264      	negs	r4, r4
 8010614:	fb94 fef6 	sdiv	lr, r4, r6
 8010618:	f1ce 0800 	rsb	r8, lr, #0
 801061c:	fb06 441e 	mls	r4, r6, lr, r4
 8010620:	f8c0 8000 	str.w	r8, [r0]
 8010624:	6104      	str	r4, [r0, #16]
 8010626:	2c00      	cmp	r4, #0
 8010628:	d087      	beq.n	801053a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 801062a:	ea6f 0e0e 	mvn.w	lr, lr
 801062e:	f8c0 e000 	str.w	lr, [r0]
 8010632:	1b34      	subs	r4, r6, r4
 8010634:	e780      	b.n	8010538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 8010636:	426d      	negs	r5, r5
 8010638:	fb95 f4f6 	sdiv	r4, r5, r6
 801063c:	f1c4 0e00 	rsb	lr, r4, #0
 8010640:	fb06 5514 	mls	r5, r6, r4, r5
 8010644:	f8c0 e004 	str.w	lr, [r0, #4]
 8010648:	6085      	str	r5, [r0, #8]
 801064a:	2d00      	cmp	r5, #0
 801064c:	f43f af7d 	beq.w	801054a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 8010650:	43e4      	mvns	r4, r4
 8010652:	6044      	str	r4, [r0, #4]
 8010654:	1b75      	subs	r5, r6, r5
 8010656:	e777      	b.n	8010548 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 8010658:	08020ec1 	.word	0x08020ec1
 801065c:	08020f00 	.word	0x08020f00
 8010660:	08020ed1 	.word	0x08020ed1
 8010664:	3d800000 	.word	0x3d800000

08010668 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010668:	4b01      	ldr	r3, [pc, #4]	; (8010670 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801066a:	6018      	str	r0, [r3, #0]
 801066c:	4770      	bx	lr
 801066e:	bf00      	nop
 8010670:	2000c02c 	.word	0x2000c02c

08010674 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010674:	4b06      	ldr	r3, [pc, #24]	; (8010690 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010676:	881a      	ldrh	r2, [r3, #0]
 8010678:	4282      	cmp	r2, r0
 801067a:	d807      	bhi.n	801068c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801067c:	4b05      	ldr	r3, [pc, #20]	; (8010694 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801067e:	881b      	ldrh	r3, [r3, #0]
 8010680:	4413      	add	r3, r2
 8010682:	4298      	cmp	r0, r3
 8010684:	bfac      	ite	ge
 8010686:	2000      	movge	r0, #0
 8010688:	2001      	movlt	r0, #1
 801068a:	4770      	bx	lr
 801068c:	2000      	movs	r0, #0
 801068e:	4770      	bx	lr
 8010690:	2000c04c 	.word	0x2000c04c
 8010694:	2000c050 	.word	0x2000c050

08010698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010698:	b508      	push	{r3, lr}
 801069a:	4601      	mov	r1, r0
 801069c:	f7ff ffea 	bl	8010674 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80106a0:	b118      	cbz	r0, 80106aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80106a2:	4b02      	ldr	r3, [pc, #8]	; (80106ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80106a4:	681b      	ldr	r3, [r3, #0]
 80106a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80106aa:	bd08      	pop	{r3, pc}
 80106ac:	2000c030 	.word	0x2000c030

080106b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80106b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106b2:	4c24      	ldr	r4, [pc, #144]	; (8010744 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80106b4:	6823      	ldr	r3, [r4, #0]
 80106b6:	2b00      	cmp	r3, #0
 80106b8:	d042      	beq.n	8010740 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80106ba:	4a23      	ldr	r2, [pc, #140]	; (8010748 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80106bc:	4d23      	ldr	r5, [pc, #140]	; (801074c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80106be:	8811      	ldrh	r1, [r2, #0]
 80106c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80106c4:	4822      	ldr	r0, [pc, #136]	; (8010750 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80106c6:	4461      	add	r1, ip
 80106c8:	1c4a      	adds	r2, r1, #1
 80106ca:	f022 0201 	bic.w	r2, r2, #1
 80106ce:	008f      	lsls	r7, r1, #2
 80106d0:	0412      	lsls	r2, r2, #16
 80106d2:	19de      	adds	r6, r3, r7
 80106d4:	0c12      	lsrs	r2, r2, #16
 80106d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80106da:	6006      	str	r6, [r0, #0]
 80106dc:	4e1d      	ldr	r6, [pc, #116]	; (8010754 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80106de:	19da      	adds	r2, r3, r7
 80106e0:	6032      	str	r2, [r6, #0]
 80106e2:	220e      	movs	r2, #14
 80106e4:	fb02 f20c 	mul.w	r2, r2, ip
 80106e8:	3203      	adds	r2, #3
 80106ea:	f022 0203 	bic.w	r2, r2, #3
 80106ee:	443a      	add	r2, r7
 80106f0:	4f19      	ldr	r7, [pc, #100]	; (8010758 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80106f2:	4413      	add	r3, r2
 80106f4:	603b      	str	r3, [r7, #0]
 80106f6:	4f19      	ldr	r7, [pc, #100]	; (801075c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80106f8:	2300      	movs	r3, #0
 80106fa:	803b      	strh	r3, [r7, #0]
 80106fc:	4f18      	ldr	r7, [pc, #96]	; (8010760 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80106fe:	683f      	ldr	r7, [r7, #0]
 8010700:	1aba      	subs	r2, r7, r2
 8010702:	4f18      	ldr	r7, [pc, #96]	; (8010764 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010704:	603a      	str	r2, [r7, #0]
 8010706:	4a18      	ldr	r2, [pc, #96]	; (8010768 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010708:	469c      	mov	ip, r3
 801070a:	8013      	strh	r3, [r2, #0]
 801070c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010710:	428b      	cmp	r3, r1
 8010712:	d10d      	bne.n	8010730 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010714:	882d      	ldrh	r5, [r5, #0]
 8010716:	6830      	ldr	r0, [r6, #0]
 8010718:	2300      	movs	r3, #0
 801071a:	240e      	movs	r4, #14
 801071c:	429d      	cmp	r5, r3
 801071e:	d90f      	bls.n	8010740 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010720:	fb04 0203 	mla	r2, r4, r3, r0
 8010724:	3301      	adds	r3, #1
 8010726:	7b11      	ldrb	r1, [r2, #12]
 8010728:	f36f 1145 	bfc	r1, #5, #1
 801072c:	7311      	strb	r1, [r2, #12]
 801072e:	e7f5      	b.n	801071c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010730:	6822      	ldr	r2, [r4, #0]
 8010732:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010736:	6802      	ldr	r2, [r0, #0]
 8010738:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801073c:	3301      	adds	r3, #1
 801073e:	e7e7      	b.n	8010710 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8010740:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010742:	bf00      	nop
 8010744:	2000c030 	.word	0x2000c030
 8010748:	2000c04c 	.word	0x2000c04c
 801074c:	2000c050 	.word	0x2000c050
 8010750:	2000c044 	.word	0x2000c044
 8010754:	2000c034 	.word	0x2000c034
 8010758:	2000c03c 	.word	0x2000c03c
 801075c:	2000c04e 	.word	0x2000c04e
 8010760:	2000c038 	.word	0x2000c038
 8010764:	2000c048 	.word	0x2000c048
 8010768:	2000c040 	.word	0x2000c040

0801076c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801076c:	b510      	push	{r4, lr}
 801076e:	4b10      	ldr	r3, [pc, #64]	; (80107b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8010770:	681b      	ldr	r3, [r3, #0]
 8010772:	b9db      	cbnz	r3, 80107ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010774:	b1d1      	cbz	r1, 80107ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010776:	4b0f      	ldr	r3, [pc, #60]	; (80107b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8010778:	801a      	strh	r2, [r3, #0]
 801077a:	4b0f      	ldr	r3, [pc, #60]	; (80107b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801077c:	881b      	ldrh	r3, [r3, #0]
 801077e:	b292      	uxth	r2, r2
 8010780:	240e      	movs	r4, #14
 8010782:	4413      	add	r3, r2
 8010784:	4362      	muls	r2, r4
 8010786:	2406      	movs	r4, #6
 8010788:	fb04 2203 	mla	r2, r4, r3, r2
 801078c:	428a      	cmp	r2, r1
 801078e:	d305      	bcc.n	801079c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8010790:	4b0a      	ldr	r3, [pc, #40]	; (80107bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8010792:	4a0b      	ldr	r2, [pc, #44]	; (80107c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8010794:	480b      	ldr	r0, [pc, #44]	; (80107c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8010796:	2134      	movs	r1, #52	; 0x34
 8010798:	f00c ff0c 	bl	801d5b4 <__assert_func>
 801079c:	4b0a      	ldr	r3, [pc, #40]	; (80107c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801079e:	6019      	str	r1, [r3, #0]
 80107a0:	4b0a      	ldr	r3, [pc, #40]	; (80107cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 80107a2:	6018      	str	r0, [r3, #0]
 80107a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80107a8:	f7ff bf82 	b.w	80106b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80107ac:	bd10      	pop	{r4, pc}
 80107ae:	bf00      	nop
 80107b0:	2000c03c 	.word	0x2000c03c
 80107b4:	2000c050 	.word	0x2000c050
 80107b8:	2000c04c 	.word	0x2000c04c
 80107bc:	08020f9e 	.word	0x08020f9e
 80107c0:	08020ff7 	.word	0x08020ff7
 80107c4:	08020f79 	.word	0x08020f79
 80107c8:	2000c038 	.word	0x2000c038
 80107cc:	2000c030 	.word	0x2000c030

080107d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80107d0:	b470      	push	{r4, r5, r6}
 80107d2:	4c07      	ldr	r4, [pc, #28]	; (80107f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80107d4:	6826      	ldr	r6, [r4, #0]
 80107d6:	4605      	mov	r5, r0
 80107d8:	4610      	mov	r0, r2
 80107da:	9a03      	ldr	r2, [sp, #12]
 80107dc:	b936      	cbnz	r6, 80107ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80107de:	6025      	str	r5, [r4, #0]
 80107e0:	4c04      	ldr	r4, [pc, #16]	; (80107f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80107e2:	8021      	strh	r1, [r4, #0]
 80107e4:	bc70      	pop	{r4, r5, r6}
 80107e6:	4619      	mov	r1, r3
 80107e8:	f7ff bfc0 	b.w	801076c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80107ec:	bc70      	pop	{r4, r5, r6}
 80107ee:	4770      	bx	lr
 80107f0:	2000c054 	.word	0x2000c054
 80107f4:	2000c04c 	.word	0x2000c04c

080107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80107f8:	b508      	push	{r3, lr}
 80107fa:	4b17      	ldr	r3, [pc, #92]	; (8010858 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80107fc:	6819      	ldr	r1, [r3, #0]
 80107fe:	b931      	cbnz	r1, 801080e <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8010800:	4b16      	ldr	r3, [pc, #88]	; (801085c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010802:	4a17      	ldr	r2, [pc, #92]	; (8010860 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010804:	4817      	ldr	r0, [pc, #92]	; (8010864 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8010806:	f240 4184 	movw	r1, #1156	; 0x484
 801080a:	f00c fed3 	bl	801d5b4 <__assert_func>
 801080e:	4a16      	ldr	r2, [pc, #88]	; (8010868 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8010810:	8803      	ldrh	r3, [r0, #0]
 8010812:	8812      	ldrh	r2, [r2, #0]
 8010814:	4293      	cmp	r3, r2
 8010816:	d204      	bcs.n	8010822 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8010818:	2214      	movs	r2, #20
 801081a:	fb02 1303 	mla	r3, r2, r3, r1
 801081e:	8918      	ldrh	r0, [r3, #8]
 8010820:	bd08      	pop	{r3, pc}
 8010822:	4912      	ldr	r1, [pc, #72]	; (801086c <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 8010824:	8809      	ldrh	r1, [r1, #0]
 8010826:	4411      	add	r1, r2
 8010828:	428b      	cmp	r3, r1
 801082a:	da06      	bge.n	801083a <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 801082c:	1a9b      	subs	r3, r3, r2
 801082e:	4a10      	ldr	r2, [pc, #64]	; (8010870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 8010830:	6812      	ldr	r2, [r2, #0]
 8010832:	210e      	movs	r1, #14
 8010834:	fb01 2303 	mla	r3, r1, r3, r2
 8010838:	e7f1      	b.n	801081e <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801083a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801083e:	4293      	cmp	r3, r2
 8010840:	d107      	bne.n	8010852 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8010842:	4b0c      	ldr	r3, [pc, #48]	; (8010874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8010844:	781b      	ldrb	r3, [r3, #0]
 8010846:	b913      	cbnz	r3, 801084e <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8010848:	4b0b      	ldr	r3, [pc, #44]	; (8010878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 801084a:	8818      	ldrh	r0, [r3, #0]
 801084c:	e7e8      	b.n	8010820 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801084e:	4b0b      	ldr	r3, [pc, #44]	; (801087c <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8010850:	e7fb      	b.n	801084a <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8010852:	2000      	movs	r0, #0
 8010854:	e7e4      	b.n	8010820 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010856:	bf00      	nop
 8010858:	2000c054 	.word	0x2000c054
 801085c:	080204a8 	.word	0x080204a8
 8010860:	080210a4 	.word	0x080210a4
 8010864:	08020f79 	.word	0x08020f79
 8010868:	2000c04c 	.word	0x2000c04c
 801086c:	2000c050 	.word	0x2000c050
 8010870:	2000c034 	.word	0x2000c034
 8010874:	2000bfc4 	.word	0x2000bfc4
 8010878:	2000bfc6 	.word	0x2000bfc6
 801087c:	2000bfc8 	.word	0x2000bfc8

08010880 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010880:	b508      	push	{r3, lr}
 8010882:	4b17      	ldr	r3, [pc, #92]	; (80108e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010884:	6819      	ldr	r1, [r3, #0]
 8010886:	b931      	cbnz	r1, 8010896 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010888:	4b16      	ldr	r3, [pc, #88]	; (80108e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801088a:	4a17      	ldr	r2, [pc, #92]	; (80108e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801088c:	4817      	ldr	r0, [pc, #92]	; (80108ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801088e:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8010892:	f00c fe8f 	bl	801d5b4 <__assert_func>
 8010896:	4a16      	ldr	r2, [pc, #88]	; (80108f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8010898:	8803      	ldrh	r3, [r0, #0]
 801089a:	8812      	ldrh	r2, [r2, #0]
 801089c:	4293      	cmp	r3, r2
 801089e:	d204      	bcs.n	80108aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 80108a0:	2214      	movs	r2, #20
 80108a2:	fb02 1303 	mla	r3, r2, r3, r1
 80108a6:	8958      	ldrh	r0, [r3, #10]
 80108a8:	bd08      	pop	{r3, pc}
 80108aa:	4912      	ldr	r1, [pc, #72]	; (80108f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 80108ac:	8809      	ldrh	r1, [r1, #0]
 80108ae:	4411      	add	r1, r2
 80108b0:	428b      	cmp	r3, r1
 80108b2:	da06      	bge.n	80108c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 80108b4:	1a9b      	subs	r3, r3, r2
 80108b6:	4a10      	ldr	r2, [pc, #64]	; (80108f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 80108b8:	6812      	ldr	r2, [r2, #0]
 80108ba:	210e      	movs	r1, #14
 80108bc:	fb01 2303 	mla	r3, r1, r3, r2
 80108c0:	e7f1      	b.n	80108a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 80108c2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80108c6:	4293      	cmp	r3, r2
 80108c8:	d107      	bne.n	80108da <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 80108ca:	4b0c      	ldr	r3, [pc, #48]	; (80108fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 80108cc:	781b      	ldrb	r3, [r3, #0]
 80108ce:	b913      	cbnz	r3, 80108d6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 80108d0:	4b0b      	ldr	r3, [pc, #44]	; (8010900 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 80108d2:	8818      	ldrh	r0, [r3, #0]
 80108d4:	e7e8      	b.n	80108a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 80108d6:	4b0b      	ldr	r3, [pc, #44]	; (8010904 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 80108d8:	e7fb      	b.n	80108d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 80108da:	2000      	movs	r0, #0
 80108dc:	e7e4      	b.n	80108a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 80108de:	bf00      	nop
 80108e0:	2000c054 	.word	0x2000c054
 80108e4:	080204a8 	.word	0x080204a8
 80108e8:	080210d0 	.word	0x080210d0
 80108ec:	08020f79 	.word	0x08020f79
 80108f0:	2000c04c 	.word	0x2000c04c
 80108f4:	2000c050 	.word	0x2000c050
 80108f8:	2000c034 	.word	0x2000c034
 80108fc:	2000bfc4 	.word	0x2000bfc4
 8010900:	2000bfc8 	.word	0x2000bfc8
 8010904:	2000bfc6 	.word	0x2000bfc6

08010908 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010908:	b510      	push	{r4, lr}
 801090a:	4b23      	ldr	r3, [pc, #140]	; (8010998 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801090c:	681c      	ldr	r4, [r3, #0]
 801090e:	b934      	cbnz	r4, 801091e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8010910:	4b22      	ldr	r3, [pc, #136]	; (801099c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010912:	4a23      	ldr	r2, [pc, #140]	; (80109a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8010914:	4823      	ldr	r0, [pc, #140]	; (80109a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010916:	f240 41ac 	movw	r1, #1196	; 0x4ac
 801091a:	f00c fe4b 	bl	801d5b4 <__assert_func>
 801091e:	4a22      	ldr	r2, [pc, #136]	; (80109a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010920:	880b      	ldrh	r3, [r1, #0]
 8010922:	8812      	ldrh	r2, [r2, #0]
 8010924:	4293      	cmp	r3, r2
 8010926:	d211      	bcs.n	801094c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8010928:	2214      	movs	r2, #20
 801092a:	fb02 4303 	mla	r3, r2, r3, r4
 801092e:	8a1a      	ldrh	r2, [r3, #16]
 8010930:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010934:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010938:	8a5b      	ldrh	r3, [r3, #18]
 801093a:	8004      	strh	r4, [r0, #0]
 801093c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010940:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010944:	8041      	strh	r1, [r0, #2]
 8010946:	8082      	strh	r2, [r0, #4]
 8010948:	80c3      	strh	r3, [r0, #6]
 801094a:	e00e      	b.n	801096a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801094c:	4917      	ldr	r1, [pc, #92]	; (80109ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801094e:	8809      	ldrh	r1, [r1, #0]
 8010950:	4411      	add	r1, r2
 8010952:	428b      	cmp	r3, r1
 8010954:	da0a      	bge.n	801096c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8010956:	1a9b      	subs	r3, r3, r2
 8010958:	4a15      	ldr	r2, [pc, #84]	; (80109b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801095a:	6812      	ldr	r2, [r2, #0]
 801095c:	210e      	movs	r1, #14
 801095e:	fb01 2303 	mla	r3, r1, r3, r2
 8010962:	681a      	ldr	r2, [r3, #0]
 8010964:	6002      	str	r2, [r0, #0]
 8010966:	685a      	ldr	r2, [r3, #4]
 8010968:	6042      	str	r2, [r0, #4]
 801096a:	bd10      	pop	{r4, pc}
 801096c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010970:	4293      	cmp	r3, r2
 8010972:	d10b      	bne.n	801098c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010974:	4b0f      	ldr	r3, [pc, #60]	; (80109b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8010976:	f9b3 1000 	ldrsh.w	r1, [r3]
 801097a:	4b0f      	ldr	r3, [pc, #60]	; (80109b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801097c:	8081      	strh	r1, [r0, #4]
 801097e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010982:	80c2      	strh	r2, [r0, #6]
 8010984:	2300      	movs	r3, #0
 8010986:	8003      	strh	r3, [r0, #0]
 8010988:	8043      	strh	r3, [r0, #2]
 801098a:	e7ee      	b.n	801096a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801098c:	2300      	movs	r3, #0
 801098e:	8003      	strh	r3, [r0, #0]
 8010990:	8043      	strh	r3, [r0, #2]
 8010992:	8083      	strh	r3, [r0, #4]
 8010994:	e7d8      	b.n	8010948 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8010996:	bf00      	nop
 8010998:	2000c054 	.word	0x2000c054
 801099c:	080204a8 	.word	0x080204a8
 80109a0:	0802103d 	.word	0x0802103d
 80109a4:	08020f79 	.word	0x08020f79
 80109a8:	2000c04c 	.word	0x2000c04c
 80109ac:	2000c050 	.word	0x2000c050
 80109b0:	2000c034 	.word	0x2000c034
 80109b4:	2000bfc0 	.word	0x2000bfc0
 80109b8:	2000bfc2 	.word	0x2000bfc2

080109bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80109bc:	4b18      	ldr	r3, [pc, #96]	; (8010a20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80109be:	681b      	ldr	r3, [r3, #0]
 80109c0:	b34b      	cbz	r3, 8010a16 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80109c2:	4a18      	ldr	r2, [pc, #96]	; (8010a24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80109c4:	8800      	ldrh	r0, [r0, #0]
 80109c6:	8812      	ldrh	r2, [r2, #0]
 80109c8:	4290      	cmp	r0, r2
 80109ca:	d211      	bcs.n	80109f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 80109cc:	2214      	movs	r2, #20
 80109ce:	fb02 3300 	mla	r3, r2, r0, r3
 80109d2:	8a1a      	ldrh	r2, [r3, #16]
 80109d4:	8919      	ldrh	r1, [r3, #8]
 80109d6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80109da:	428a      	cmp	r2, r1
 80109dc:	db1d      	blt.n	8010a1a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80109de:	8a58      	ldrh	r0, [r3, #18]
 80109e0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80109e4:	895b      	ldrh	r3, [r3, #10]
 80109e6:	4298      	cmp	r0, r3
 80109e8:	bfac      	ite	ge
 80109ea:	2000      	movge	r0, #0
 80109ec:	2001      	movlt	r0, #1
 80109ee:	4770      	bx	lr
 80109f0:	4b0d      	ldr	r3, [pc, #52]	; (8010a28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80109f2:	881b      	ldrh	r3, [r3, #0]
 80109f4:	4413      	add	r3, r2
 80109f6:	4298      	cmp	r0, r3
 80109f8:	da0d      	bge.n	8010a16 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80109fa:	4b0c      	ldr	r3, [pc, #48]	; (8010a2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80109fc:	681b      	ldr	r3, [r3, #0]
 80109fe:	1a80      	subs	r0, r0, r2
 8010a00:	220e      	movs	r2, #14
 8010a02:	fb02 3300 	mla	r3, r2, r0, r3
 8010a06:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010a0a:	891a      	ldrh	r2, [r3, #8]
 8010a0c:	4291      	cmp	r1, r2
 8010a0e:	db04      	blt.n	8010a1a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010a10:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010a14:	e7e6      	b.n	80109e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8010a16:	2000      	movs	r0, #0
 8010a18:	4770      	bx	lr
 8010a1a:	2001      	movs	r0, #1
 8010a1c:	4770      	bx	lr
 8010a1e:	bf00      	nop
 8010a20:	2000c054 	.word	0x2000c054
 8010a24:	2000c04c 	.word	0x2000c04c
 8010a28:	2000c050 	.word	0x2000c050
 8010a2c:	2000c034 	.word	0x2000c034

08010a30 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010a30:	b508      	push	{r3, lr}
 8010a32:	4b12      	ldr	r3, [pc, #72]	; (8010a7c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010a34:	6819      	ldr	r1, [r3, #0]
 8010a36:	b931      	cbnz	r1, 8010a46 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010a38:	4b11      	ldr	r3, [pc, #68]	; (8010a80 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010a3a:	4a12      	ldr	r2, [pc, #72]	; (8010a84 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010a3c:	4812      	ldr	r0, [pc, #72]	; (8010a88 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010a3e:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8010a42:	f00c fdb7 	bl	801d5b4 <__assert_func>
 8010a46:	8803      	ldrh	r3, [r0, #0]
 8010a48:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010a4c:	4293      	cmp	r3, r2
 8010a4e:	d012      	beq.n	8010a76 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010a50:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010a54:	4293      	cmp	r3, r2
 8010a56:	d103      	bne.n	8010a60 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8010a58:	4b0c      	ldr	r3, [pc, #48]	; (8010a8c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010a5a:	681b      	ldr	r3, [r3, #0]
 8010a5c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010a5e:	bd08      	pop	{r3, pc}
 8010a60:	4a0b      	ldr	r2, [pc, #44]	; (8010a90 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8010a62:	6812      	ldr	r2, [r2, #0]
 8010a64:	b11a      	cbz	r2, 8010a6e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8010a66:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010a6a:	2800      	cmp	r0, #0
 8010a6c:	d1f7      	bne.n	8010a5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010a6e:	2214      	movs	r2, #20
 8010a70:	4353      	muls	r3, r2
 8010a72:	58c8      	ldr	r0, [r1, r3]
 8010a74:	e7f3      	b.n	8010a5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010a76:	2000      	movs	r0, #0
 8010a78:	e7f1      	b.n	8010a5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010a7a:	bf00      	nop
 8010a7c:	2000c054 	.word	0x2000c054
 8010a80:	080204a8 	.word	0x080204a8
 8010a84:	08021073 	.word	0x08021073
 8010a88:	08020f79 	.word	0x08020f79
 8010a8c:	2000bfcc 	.word	0x2000bfcc
 8010a90:	2000c030 	.word	0x2000c030

08010a94 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010a94:	8802      	ldrh	r2, [r0, #0]
 8010a96:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8010a9a:	429a      	cmp	r2, r3
 8010a9c:	d845      	bhi.n	8010b2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010a9e:	4b24      	ldr	r3, [pc, #144]	; (8010b30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010aa0:	8818      	ldrh	r0, [r3, #0]
 8010aa2:	4282      	cmp	r2, r0
 8010aa4:	d221      	bcs.n	8010aea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8010aa6:	4b23      	ldr	r3, [pc, #140]	; (8010b34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010aa8:	6819      	ldr	r1, [r3, #0]
 8010aaa:	2314      	movs	r3, #20
 8010aac:	fb03 1302 	mla	r3, r3, r2, r1
 8010ab0:	6858      	ldr	r0, [r3, #4]
 8010ab2:	2800      	cmp	r0, #0
 8010ab4:	d03a      	beq.n	8010b2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010ab6:	4920      	ldr	r1, [pc, #128]	; (8010b38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010ab8:	6809      	ldr	r1, [r1, #0]
 8010aba:	2900      	cmp	r1, #0
 8010abc:	d036      	beq.n	8010b2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010abe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010ac2:	2900      	cmp	r1, #0
 8010ac4:	d032      	beq.n	8010b2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010ac6:	891a      	ldrh	r2, [r3, #8]
 8010ac8:	8958      	ldrh	r0, [r3, #10]
 8010aca:	4350      	muls	r0, r2
 8010acc:	7c5a      	ldrb	r2, [r3, #17]
 8010ace:	7cdb      	ldrb	r3, [r3, #19]
 8010ad0:	0952      	lsrs	r2, r2, #5
 8010ad2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010ad6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010ada:	2b0b      	cmp	r3, #11
 8010adc:	bf18      	it	ne
 8010ade:	0040      	lslne	r0, r0, #1
 8010ae0:	3003      	adds	r0, #3
 8010ae2:	f020 0003 	bic.w	r0, r0, #3
 8010ae6:	4408      	add	r0, r1
 8010ae8:	4770      	bx	lr
 8010aea:	4b14      	ldr	r3, [pc, #80]	; (8010b3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8010aec:	881b      	ldrh	r3, [r3, #0]
 8010aee:	4403      	add	r3, r0
 8010af0:	429a      	cmp	r2, r3
 8010af2:	da1a      	bge.n	8010b2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010af4:	4b12      	ldr	r3, [pc, #72]	; (8010b40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8010af6:	681b      	ldr	r3, [r3, #0]
 8010af8:	1a10      	subs	r0, r2, r0
 8010afa:	210e      	movs	r1, #14
 8010afc:	fb01 3000 	mla	r0, r1, r0, r3
 8010b00:	7b03      	ldrb	r3, [r0, #12]
 8010b02:	f003 031f 	and.w	r3, r3, #31
 8010b06:	2b0b      	cmp	r3, #11
 8010b08:	d10b      	bne.n	8010b22 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010b0a:	8903      	ldrh	r3, [r0, #8]
 8010b0c:	8940      	ldrh	r0, [r0, #10]
 8010b0e:	4358      	muls	r0, r3
 8010b10:	4b09      	ldr	r3, [pc, #36]	; (8010b38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010b12:	6819      	ldr	r1, [r3, #0]
 8010b14:	3003      	adds	r0, #3
 8010b16:	f020 0303 	bic.w	r3, r0, #3
 8010b1a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010b1e:	4418      	add	r0, r3
 8010b20:	4770      	bx	lr
 8010b22:	2b0d      	cmp	r3, #13
 8010b24:	d101      	bne.n	8010b2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010b26:	300d      	adds	r0, #13
 8010b28:	4770      	bx	lr
 8010b2a:	2000      	movs	r0, #0
 8010b2c:	4770      	bx	lr
 8010b2e:	bf00      	nop
 8010b30:	2000c04c 	.word	0x2000c04c
 8010b34:	2000c054 	.word	0x2000c054
 8010b38:	2000c030 	.word	0x2000c030
 8010b3c:	2000c050 	.word	0x2000c050
 8010b40:	2000c034 	.word	0x2000c034

08010b44 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010b44:	b510      	push	{r4, lr}
 8010b46:	4b17      	ldr	r3, [pc, #92]	; (8010ba4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010b48:	6819      	ldr	r1, [r3, #0]
 8010b4a:	8803      	ldrh	r3, [r0, #0]
 8010b4c:	b1e9      	cbz	r1, 8010b8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8010b4e:	4a16      	ldr	r2, [pc, #88]	; (8010ba8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010b50:	8812      	ldrh	r2, [r2, #0]
 8010b52:	429a      	cmp	r2, r3
 8010b54:	d90a      	bls.n	8010b6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8010b56:	2214      	movs	r2, #20
 8010b58:	fb02 1303 	mla	r3, r2, r3, r1
 8010b5c:	7c58      	ldrb	r0, [r3, #17]
 8010b5e:	0942      	lsrs	r2, r0, #5
 8010b60:	7cd8      	ldrb	r0, [r3, #19]
 8010b62:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010b66:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010b6a:	bd10      	pop	{r4, pc}
 8010b6c:	490f      	ldr	r1, [pc, #60]	; (8010bac <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010b6e:	8809      	ldrh	r1, [r1, #0]
 8010b70:	4411      	add	r1, r2
 8010b72:	428b      	cmp	r3, r1
 8010b74:	da09      	bge.n	8010b8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8010b76:	1a9b      	subs	r3, r3, r2
 8010b78:	4a0d      	ldr	r2, [pc, #52]	; (8010bb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010b7a:	6812      	ldr	r2, [r2, #0]
 8010b7c:	210e      	movs	r1, #14
 8010b7e:	fb01 2303 	mla	r3, r1, r3, r2
 8010b82:	7b18      	ldrb	r0, [r3, #12]
 8010b84:	f000 001f 	and.w	r0, r0, #31
 8010b88:	e7ef      	b.n	8010b6a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010b8a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010b8e:	4293      	cmp	r3, r2
 8010b90:	d106      	bne.n	8010ba0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8010b92:	f7fa f88b 	bl	800acac <_ZN8touchgfx3HAL3lcdEv>
 8010b96:	6803      	ldr	r3, [r0, #0]
 8010b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b9e:	4718      	bx	r3
 8010ba0:	2000      	movs	r0, #0
 8010ba2:	e7e2      	b.n	8010b6a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010ba4:	2000c054 	.word	0x2000c054
 8010ba8:	2000c04c 	.word	0x2000c04c
 8010bac:	2000c050 	.word	0x2000c050
 8010bb0:	2000c034 	.word	0x2000c034

08010bb4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010bb4:	2010      	movs	r0, #16
 8010bb6:	4770      	bx	lr

08010bb8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8010bb8:	2000      	movs	r0, #0
 8010bba:	4770      	bx	lr

08010bbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010bbc:	2bff      	cmp	r3, #255	; 0xff
 8010bbe:	d050      	beq.n	8010c62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010bc0:	2a0b      	cmp	r2, #11
 8010bc2:	d04a      	beq.n	8010c5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010bc4:	d80e      	bhi.n	8010be4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8010bc6:	2a03      	cmp	r2, #3
 8010bc8:	d03f      	beq.n	8010c4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8010bca:	d804      	bhi.n	8010bd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010bcc:	2a01      	cmp	r2, #1
 8010bce:	d03e      	beq.n	8010c4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010bd0:	d93f      	bls.n	8010c52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010bd2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010bd4:	4770      	bx	lr
 8010bd6:	2a09      	cmp	r2, #9
 8010bd8:	d03f      	beq.n	8010c5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010bda:	d83c      	bhi.n	8010c56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010bdc:	2a08      	cmp	r2, #8
 8010bde:	d03a      	beq.n	8010c56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010be0:	2000      	movs	r0, #0
 8010be2:	4770      	bx	lr
 8010be4:	2a2f      	cmp	r2, #47	; 0x2f
 8010be6:	d024      	beq.n	8010c32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010be8:	d80d      	bhi.n	8010c06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010bea:	2a2d      	cmp	r2, #45	; 0x2d
 8010bec:	d014      	beq.n	8010c18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010bee:	d826      	bhi.n	8010c3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010bf0:	2a2c      	cmp	r2, #44	; 0x2c
 8010bf2:	d1f5      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010bf4:	684b      	ldr	r3, [r1, #4]
 8010bf6:	781b      	ldrb	r3, [r3, #0]
 8010bf8:	2b01      	cmp	r3, #1
 8010bfa:	d018      	beq.n	8010c2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010bfc:	d323      	bcc.n	8010c46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010bfe:	2b02      	cmp	r3, #2
 8010c00:	d1ee      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c02:	6880      	ldr	r0, [r0, #8]
 8010c04:	4770      	bx	lr
 8010c06:	2a31      	cmp	r2, #49	; 0x31
 8010c08:	d004      	beq.n	8010c14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010c0a:	d328      	bcc.n	8010c5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010c0c:	2a32      	cmp	r2, #50	; 0x32
 8010c0e:	d026      	beq.n	8010c5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010c10:	2a33      	cmp	r2, #51	; 0x33
 8010c12:	d1e5      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c14:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010c16:	4770      	bx	lr
 8010c18:	684b      	ldr	r3, [r1, #4]
 8010c1a:	781b      	ldrb	r3, [r3, #0]
 8010c1c:	2b01      	cmp	r3, #1
 8010c1e:	d004      	beq.n	8010c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010c20:	d30b      	bcc.n	8010c3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010c22:	2b02      	cmp	r3, #2
 8010c24:	d1dc      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c26:	6900      	ldr	r0, [r0, #16]
 8010c28:	4770      	bx	lr
 8010c2a:	6a00      	ldr	r0, [r0, #32]
 8010c2c:	4770      	bx	lr
 8010c2e:	6980      	ldr	r0, [r0, #24]
 8010c30:	4770      	bx	lr
 8010c32:	684b      	ldr	r3, [r1, #4]
 8010c34:	781b      	ldrb	r3, [r3, #0]
 8010c36:	2b00      	cmp	r3, #0
 8010c38:	d1d2      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c3a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010c3c:	4770      	bx	lr
 8010c3e:	684b      	ldr	r3, [r1, #4]
 8010c40:	781b      	ldrb	r3, [r3, #0]
 8010c42:	2b00      	cmp	r3, #0
 8010c44:	d1cc      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c46:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010c48:	4770      	bx	lr
 8010c4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010c4c:	4770      	bx	lr
 8010c4e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010c50:	4770      	bx	lr
 8010c52:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010c54:	4770      	bx	lr
 8010c56:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010c58:	4770      	bx	lr
 8010c5a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010c5c:	4770      	bx	lr
 8010c5e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010c60:	4770      	bx	lr
 8010c62:	2a0b      	cmp	r2, #11
 8010c64:	d049      	beq.n	8010cfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010c66:	d80e      	bhi.n	8010c86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010c68:	2a03      	cmp	r2, #3
 8010c6a:	d040      	beq.n	8010cee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010c6c:	d804      	bhi.n	8010c78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8010c6e:	2a01      	cmp	r2, #1
 8010c70:	d03f      	beq.n	8010cf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010c72:	d940      	bls.n	8010cf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010c74:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8010c76:	4770      	bx	lr
 8010c78:	2a09      	cmp	r2, #9
 8010c7a:	d03e      	beq.n	8010cfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010c7c:	d801      	bhi.n	8010c82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010c7e:	2a08      	cmp	r2, #8
 8010c80:	d1ae      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c82:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8010c84:	4770      	bx	lr
 8010c86:	2a2f      	cmp	r2, #47	; 0x2f
 8010c88:	d024      	beq.n	8010cd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8010c8a:	d80d      	bhi.n	8010ca8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010c8c:	2a2d      	cmp	r2, #45	; 0x2d
 8010c8e:	d014      	beq.n	8010cba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010c90:	d826      	bhi.n	8010ce0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010c92:	2a2c      	cmp	r2, #44	; 0x2c
 8010c94:	d1a4      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010c96:	684b      	ldr	r3, [r1, #4]
 8010c98:	781b      	ldrb	r3, [r3, #0]
 8010c9a:	2b01      	cmp	r3, #1
 8010c9c:	d018      	beq.n	8010cd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010c9e:	d324      	bcc.n	8010cea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010ca0:	2b02      	cmp	r3, #2
 8010ca2:	d19d      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010ca4:	68c0      	ldr	r0, [r0, #12]
 8010ca6:	4770      	bx	lr
 8010ca8:	2a31      	cmp	r2, #49	; 0x31
 8010caa:	d004      	beq.n	8010cb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010cac:	d327      	bcc.n	8010cfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010cae:	2a32      	cmp	r2, #50	; 0x32
 8010cb0:	d025      	beq.n	8010cfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010cb2:	2a33      	cmp	r2, #51	; 0x33
 8010cb4:	d194      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010cb6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010cb8:	4770      	bx	lr
 8010cba:	684b      	ldr	r3, [r1, #4]
 8010cbc:	781b      	ldrb	r3, [r3, #0]
 8010cbe:	2b01      	cmp	r3, #1
 8010cc0:	d004      	beq.n	8010ccc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8010cc2:	d30b      	bcc.n	8010cdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010cc4:	2b02      	cmp	r3, #2
 8010cc6:	d18b      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010cc8:	6940      	ldr	r0, [r0, #20]
 8010cca:	4770      	bx	lr
 8010ccc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010cce:	4770      	bx	lr
 8010cd0:	69c0      	ldr	r0, [r0, #28]
 8010cd2:	4770      	bx	lr
 8010cd4:	684b      	ldr	r3, [r1, #4]
 8010cd6:	781b      	ldrb	r3, [r3, #0]
 8010cd8:	2b00      	cmp	r3, #0
 8010cda:	d181      	bne.n	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010cdc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8010cde:	4770      	bx	lr
 8010ce0:	684b      	ldr	r3, [r1, #4]
 8010ce2:	781b      	ldrb	r3, [r3, #0]
 8010ce4:	2b00      	cmp	r3, #0
 8010ce6:	f47f af7b 	bne.w	8010be0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010cea:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010cec:	4770      	bx	lr
 8010cee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010cf0:	4770      	bx	lr
 8010cf2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010cf4:	4770      	bx	lr
 8010cf6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010cf8:	4770      	bx	lr
 8010cfa:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010cfc:	4770      	bx	lr
 8010cfe:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8010d00:	4770      	bx	lr

08010d02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d06:	b087      	sub	sp, #28
 8010d08:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010d0a:	9205      	str	r2, [sp, #20]
 8010d0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d10:	9202      	str	r2, [sp, #8]
 8010d12:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010d16:	9101      	str	r1, [sp, #4]
 8010d18:	6841      	ldr	r1, [r0, #4]
 8010d1a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010d1e:	fb01 2404 	mla	r4, r1, r4, r2
 8010d22:	6802      	ldr	r2, [r0, #0]
 8010d24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010d28:	f8de 2000 	ldr.w	r2, [lr]
 8010d2c:	9203      	str	r2, [sp, #12]
 8010d2e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010d32:	3204      	adds	r2, #4
 8010d34:	9204      	str	r2, [sp, #16]
 8010d36:	9a02      	ldr	r2, [sp, #8]
 8010d38:	43d6      	mvns	r6, r2
 8010d3a:	b2f6      	uxtb	r6, r6
 8010d3c:	9a01      	ldr	r2, [sp, #4]
 8010d3e:	2a00      	cmp	r2, #0
 8010d40:	dc03      	bgt.n	8010d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8010d42:	9a05      	ldr	r2, [sp, #20]
 8010d44:	2a00      	cmp	r2, #0
 8010d46:	f340 8129 	ble.w	8010f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010d4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d4c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8010d50:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010d54:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d5a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d5e:	2b00      	cmp	r3, #0
 8010d60:	dd0e      	ble.n	8010d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010d62:	1408      	asrs	r0, r1, #16
 8010d64:	d405      	bmi.n	8010d72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010d66:	4560      	cmp	r0, ip
 8010d68:	da03      	bge.n	8010d72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010d6a:	1410      	asrs	r0, r2, #16
 8010d6c:	d401      	bmi.n	8010d72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010d6e:	42b8      	cmp	r0, r7
 8010d70:	db07      	blt.n	8010d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010d72:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010d74:	4401      	add	r1, r0
 8010d76:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010d78:	3b01      	subs	r3, #1
 8010d7a:	4402      	add	r2, r0
 8010d7c:	3402      	adds	r4, #2
 8010d7e:	e7ee      	b.n	8010d5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8010d80:	d071      	beq.n	8010e66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010d82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d84:	1e58      	subs	r0, r3, #1
 8010d86:	fb05 1500 	mla	r5, r5, r0, r1
 8010d8a:	142d      	asrs	r5, r5, #16
 8010d8c:	d45f      	bmi.n	8010e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010d8e:	4565      	cmp	r5, ip
 8010d90:	da5d      	bge.n	8010e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010d92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d94:	fb05 2000 	mla	r0, r5, r0, r2
 8010d98:	1400      	asrs	r0, r0, #16
 8010d9a:	d458      	bmi.n	8010e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010d9c:	42b8      	cmp	r0, r7
 8010d9e:	da56      	bge.n	8010e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010da0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8010da4:	4699      	mov	r9, r3
 8010da6:	46a2      	mov	sl, r4
 8010da8:	f1b9 0f00 	cmp.w	r9, #0
 8010dac:	dd57      	ble.n	8010e5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8010dae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010db2:	9803      	ldr	r0, [sp, #12]
 8010db4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8010db8:	140d      	asrs	r5, r1, #16
 8010dba:	fb07 000c 	mla	r0, r7, ip, r0
 8010dbe:	f109 39ff 	add.w	r9, r9, #4294967295
 8010dc2:	5d40      	ldrb	r0, [r0, r5]
 8010dc4:	9d04      	ldr	r5, [sp, #16]
 8010dc6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010dca:	f8ba 5000 	ldrh.w	r5, [sl]
 8010dce:	122f      	asrs	r7, r5, #8
 8010dd0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010dd4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010dd8:	fb17 f706 	smulbb	r7, r7, r6
 8010ddc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010de0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010de4:	00ed      	lsls	r5, r5, #3
 8010de6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8010dea:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010dee:	10c7      	asrs	r7, r0, #3
 8010df0:	b2ed      	uxtb	r5, r5
 8010df2:	00c0      	lsls	r0, r0, #3
 8010df4:	fb18 f806 	smulbb	r8, r8, r6
 8010df8:	fb15 f506 	smulbb	r5, r5, r6
 8010dfc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010e00:	b2c0      	uxtb	r0, r0
 8010e02:	fa1f fc8c 	uxth.w	ip, ip
 8010e06:	fb07 870b 	mla	r7, r7, fp, r8
 8010e0a:	fb00 500b 	mla	r0, r0, fp, r5
 8010e0e:	b280      	uxth	r0, r0
 8010e10:	b2bf      	uxth	r7, r7
 8010e12:	f10c 0501 	add.w	r5, ip, #1
 8010e16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010e1a:	f107 0801 	add.w	r8, r7, #1
 8010e1e:	1c45      	adds	r5, r0, #1
 8010e20:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010e24:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010e28:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010e2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010e2e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010e32:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8010e36:	ea45 0c0c 	orr.w	ip, r5, ip
 8010e3a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010e3e:	4401      	add	r1, r0
 8010e40:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010e42:	ea4c 0c08 	orr.w	ip, ip, r8
 8010e46:	f82a cb02 	strh.w	ip, [sl], #2
 8010e4a:	4402      	add	r2, r0
 8010e4c:	e7ac      	b.n	8010da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010e4e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8010e52:	f04f 0800 	mov.w	r8, #0
 8010e56:	eb03 0008 	add.w	r0, r3, r8
 8010e5a:	2800      	cmp	r0, #0
 8010e5c:	dc41      	bgt.n	8010ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010e66:	9b01      	ldr	r3, [sp, #4]
 8010e68:	2b00      	cmp	r3, #0
 8010e6a:	f340 8097 	ble.w	8010f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010e6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010e76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010e7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e88:	eef0 6a62 	vmov.f32	s13, s5
 8010e8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010e94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e98:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010e9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ea0:	eef0 6a43 	vmov.f32	s13, s6
 8010ea4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010ea8:	ee12 2a90 	vmov	r2, s5
 8010eac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010eb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8010eb4:	ee13 2a10 	vmov	r2, s6
 8010eb8:	9313      	str	r3, [sp, #76]	; 0x4c
 8010eba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ebc:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ec0:	9314      	str	r3, [sp, #80]	; 0x50
 8010ec2:	9b01      	ldr	r3, [sp, #4]
 8010ec4:	9a05      	ldr	r2, [sp, #20]
 8010ec6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010eca:	3b01      	subs	r3, #1
 8010ecc:	9301      	str	r3, [sp, #4]
 8010ece:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010ed2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ed4:	eeb0 3a67 	vmov.f32	s6, s15
 8010ed8:	bf08      	it	eq
 8010eda:	4613      	moveq	r3, r2
 8010edc:	eef0 2a47 	vmov.f32	s5, s14
 8010ee0:	e72c      	b.n	8010d3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010ee2:	140f      	asrs	r7, r1, #16
 8010ee4:	d453      	bmi.n	8010f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010ee6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010eea:	42bd      	cmp	r5, r7
 8010eec:	dd4f      	ble.n	8010f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010eee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010ef2:	d44c      	bmi.n	8010f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010ef4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010ef8:	4560      	cmp	r0, ip
 8010efa:	dd48      	ble.n	8010f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010efc:	9803      	ldr	r0, [sp, #12]
 8010efe:	b22d      	sxth	r5, r5
 8010f00:	fb0c 0505 	mla	r5, ip, r5, r0
 8010f04:	5de8      	ldrb	r0, [r5, r7]
 8010f06:	9d04      	ldr	r5, [sp, #16]
 8010f08:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010f0c:	f06f 0501 	mvn.w	r5, #1
 8010f10:	fb05 fb08 	mul.w	fp, r5, r8
 8010f14:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010f18:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010f1c:	122f      	asrs	r7, r5, #8
 8010f1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f22:	fb17 f706 	smulbb	r7, r7, r6
 8010f26:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010f2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f2e:	00ed      	lsls	r5, r5, #3
 8010f30:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010f34:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010f38:	10c7      	asrs	r7, r0, #3
 8010f3a:	b2ed      	uxtb	r5, r5
 8010f3c:	00c0      	lsls	r0, r0, #3
 8010f3e:	fb19 f906 	smulbb	r9, r9, r6
 8010f42:	fb15 f506 	smulbb	r5, r5, r6
 8010f46:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f4a:	b2c0      	uxtb	r0, r0
 8010f4c:	fa1f fc8c 	uxth.w	ip, ip
 8010f50:	fb07 970a 	mla	r7, r7, sl, r9
 8010f54:	fb00 500a 	mla	r0, r0, sl, r5
 8010f58:	b2bf      	uxth	r7, r7
 8010f5a:	b280      	uxth	r0, r0
 8010f5c:	f10c 0501 	add.w	r5, ip, #1
 8010f60:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010f64:	f107 0901 	add.w	r9, r7, #1
 8010f68:	1c45      	adds	r5, r0, #1
 8010f6a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010f6e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010f72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010f7a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010f7e:	ea45 0c0c 	orr.w	ip, r5, ip
 8010f82:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010f86:	ea4c 0c09 	orr.w	ip, ip, r9
 8010f8a:	f824 c00b 	strh.w	ip, [r4, fp]
 8010f8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010f90:	4401      	add	r1, r0
 8010f92:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010f94:	f108 38ff 	add.w	r8, r8, #4294967295
 8010f98:	4402      	add	r2, r0
 8010f9a:	e75c      	b.n	8010e56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010f9c:	b007      	add	sp, #28
 8010f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fa6:	b085      	sub	sp, #20
 8010fa8:	4693      	mov	fp, r2
 8010faa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010fac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010fae:	6870      	ldr	r0, [r6, #4]
 8010fb0:	9100      	str	r1, [sp, #0]
 8010fb2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010fb6:	fb00 2404 	mla	r4, r0, r4, r2
 8010fba:	6832      	ldr	r2, [r6, #0]
 8010fbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010fc0:	682a      	ldr	r2, [r5, #0]
 8010fc2:	9201      	str	r2, [sp, #4]
 8010fc4:	686a      	ldr	r2, [r5, #4]
 8010fc6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8010fca:	3204      	adds	r2, #4
 8010fcc:	9202      	str	r2, [sp, #8]
 8010fce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010fd2:	9a00      	ldr	r2, [sp, #0]
 8010fd4:	2a00      	cmp	r2, #0
 8010fd6:	dc03      	bgt.n	8010fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010fd8:	f1bb 0f00 	cmp.w	fp, #0
 8010fdc:	f340 80a0 	ble.w	8011120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010fe0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010fe2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010fe6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010fea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010fee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010ff0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010ff4:	2b00      	cmp	r3, #0
 8010ff6:	dd0c      	ble.n	8011012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010ff8:	1406      	asrs	r6, r0, #16
 8010ffa:	d405      	bmi.n	8011008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010ffc:	454e      	cmp	r6, r9
 8010ffe:	da03      	bge.n	8011008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011000:	1416      	asrs	r6, r2, #16
 8011002:	d401      	bmi.n	8011008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011004:	4546      	cmp	r6, r8
 8011006:	db05      	blt.n	8011014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011008:	4470      	add	r0, lr
 801100a:	4462      	add	r2, ip
 801100c:	3b01      	subs	r3, #1
 801100e:	3402      	adds	r4, #2
 8011010:	e7f0      	b.n	8010ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011012:	d00f      	beq.n	8011034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011014:	1e5e      	subs	r6, r3, #1
 8011016:	fb0e 0706 	mla	r7, lr, r6, r0
 801101a:	143f      	asrs	r7, r7, #16
 801101c:	d541      	bpl.n	80110a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801101e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011022:	4698      	mov	r8, r3
 8011024:	9603      	str	r6, [sp, #12]
 8011026:	f1b8 0f00 	cmp.w	r8, #0
 801102a:	dc59      	bgt.n	80110e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801102c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011030:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011034:	9b00      	ldr	r3, [sp, #0]
 8011036:	2b00      	cmp	r3, #0
 8011038:	dd72      	ble.n	8011120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801103a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801103e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011042:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011046:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011048:	ee31 1a05 	vadd.f32	s2, s2, s10
 801104c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011050:	eeb0 6a62 	vmov.f32	s12, s5
 8011054:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011058:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801105c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011060:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011064:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011068:	eeb0 6a43 	vmov.f32	s12, s6
 801106c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011070:	ee12 2a90 	vmov	r2, s5
 8011074:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011078:	fb92 fef3 	sdiv	lr, r2, r3
 801107c:	ee13 2a10 	vmov	r2, s6
 8011080:	fb92 fcf3 	sdiv	ip, r2, r3
 8011084:	9b00      	ldr	r3, [sp, #0]
 8011086:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801108a:	3b01      	subs	r3, #1
 801108c:	9300      	str	r3, [sp, #0]
 801108e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011092:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011094:	eeb0 3a67 	vmov.f32	s6, s15
 8011098:	bf08      	it	eq
 801109a:	465b      	moveq	r3, fp
 801109c:	eef0 2a47 	vmov.f32	s5, s14
 80110a0:	e797      	b.n	8010fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80110a2:	454f      	cmp	r7, r9
 80110a4:	dabb      	bge.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80110a6:	fb0c 2606 	mla	r6, ip, r6, r2
 80110aa:	1436      	asrs	r6, r6, #16
 80110ac:	d4b7      	bmi.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80110ae:	4546      	cmp	r6, r8
 80110b0:	dab5      	bge.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80110b2:	461e      	mov	r6, r3
 80110b4:	46a0      	mov	r8, r4
 80110b6:	2e00      	cmp	r6, #0
 80110b8:	ddb8      	ble.n	801102c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80110ba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80110be:	9901      	ldr	r1, [sp, #4]
 80110c0:	1417      	asrs	r7, r2, #16
 80110c2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80110c6:	fb0a 1707 	mla	r7, sl, r7, r1
 80110ca:	9902      	ldr	r1, [sp, #8]
 80110cc:	f817 7009 	ldrb.w	r7, [r7, r9]
 80110d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80110d4:	f828 7b02 	strh.w	r7, [r8], #2
 80110d8:	4470      	add	r0, lr
 80110da:	4462      	add	r2, ip
 80110dc:	3e01      	subs	r6, #1
 80110de:	e7ea      	b.n	80110b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80110e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80110e4:	d417      	bmi.n	8011116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80110e6:	68ae      	ldr	r6, [r5, #8]
 80110e8:	454e      	cmp	r6, r9
 80110ea:	dd14      	ble.n	8011116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80110ec:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80110f0:	d411      	bmi.n	8011116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80110f2:	68ef      	ldr	r7, [r5, #12]
 80110f4:	4557      	cmp	r7, sl
 80110f6:	dd0e      	ble.n	8011116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80110f8:	9f01      	ldr	r7, [sp, #4]
 80110fa:	b236      	sxth	r6, r6
 80110fc:	fb0a 7606 	mla	r6, sl, r6, r7
 8011100:	9f02      	ldr	r7, [sp, #8]
 8011102:	f816 6009 	ldrb.w	r6, [r6, r9]
 8011106:	f06f 0101 	mvn.w	r1, #1
 801110a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801110e:	fb01 f608 	mul.w	r6, r1, r8
 8011112:	9903      	ldr	r1, [sp, #12]
 8011114:	538f      	strh	r7, [r1, r6]
 8011116:	4470      	add	r0, lr
 8011118:	4462      	add	r2, ip
 801111a:	f108 38ff 	add.w	r8, r8, #4294967295
 801111e:	e782      	b.n	8011026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011120:	b005      	add	sp, #20
 8011122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011126 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011126:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801112a:	b087      	sub	sp, #28
 801112c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801112e:	9205      	str	r2, [sp, #20]
 8011130:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011134:	9203      	str	r2, [sp, #12]
 8011136:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801113a:	9102      	str	r1, [sp, #8]
 801113c:	6861      	ldr	r1, [r4, #4]
 801113e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011142:	fb01 2000 	mla	r0, r1, r0, r2
 8011146:	6822      	ldr	r2, [r4, #0]
 8011148:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801114c:	9200      	str	r2, [sp, #0]
 801114e:	f8dc 2000 	ldr.w	r2, [ip]
 8011152:	9204      	str	r2, [sp, #16]
 8011154:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011158:	3204      	adds	r2, #4
 801115a:	9201      	str	r2, [sp, #4]
 801115c:	9a03      	ldr	r2, [sp, #12]
 801115e:	43d5      	mvns	r5, r2
 8011160:	b2ed      	uxtb	r5, r5
 8011162:	9a02      	ldr	r2, [sp, #8]
 8011164:	2a00      	cmp	r2, #0
 8011166:	dc03      	bgt.n	8011170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011168:	9a05      	ldr	r2, [sp, #20]
 801116a:	2a00      	cmp	r2, #0
 801116c:	f340 812c 	ble.w	80113c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011170:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011172:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8011176:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801117a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801117e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011180:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011184:	2b00      	cmp	r3, #0
 8011186:	dd10      	ble.n	80111aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011188:	140c      	asrs	r4, r1, #16
 801118a:	d405      	bmi.n	8011198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801118c:	4574      	cmp	r4, lr
 801118e:	da03      	bge.n	8011198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011190:	1414      	asrs	r4, r2, #16
 8011192:	d401      	bmi.n	8011198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011194:	42bc      	cmp	r4, r7
 8011196:	db09      	blt.n	80111ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011198:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801119a:	9800      	ldr	r0, [sp, #0]
 801119c:	4421      	add	r1, r4
 801119e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80111a0:	3002      	adds	r0, #2
 80111a2:	4422      	add	r2, r4
 80111a4:	3b01      	subs	r3, #1
 80111a6:	9000      	str	r0, [sp, #0]
 80111a8:	e7ec      	b.n	8011184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80111aa:	d071      	beq.n	8011290 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80111ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80111ae:	1e5c      	subs	r4, r3, #1
 80111b0:	fb06 1604 	mla	r6, r6, r4, r1
 80111b4:	1436      	asrs	r6, r6, #16
 80111b6:	d45d      	bmi.n	8011274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80111b8:	4576      	cmp	r6, lr
 80111ba:	da5b      	bge.n	8011274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80111bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80111be:	fb06 2404 	mla	r4, r6, r4, r2
 80111c2:	1424      	asrs	r4, r4, #16
 80111c4:	d456      	bmi.n	8011274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80111c6:	42bc      	cmp	r4, r7
 80111c8:	da54      	bge.n	8011274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80111ca:	f8dd 9000 	ldr.w	r9, [sp]
 80111ce:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80111d2:	4698      	mov	r8, r3
 80111d4:	f1b8 0f00 	cmp.w	r8, #0
 80111d8:	dd54      	ble.n	8011284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80111da:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80111de:	9804      	ldr	r0, [sp, #16]
 80111e0:	1414      	asrs	r4, r2, #16
 80111e2:	fb07 0404 	mla	r4, r7, r4, r0
 80111e6:	140e      	asrs	r6, r1, #16
 80111e8:	9801      	ldr	r0, [sp, #4]
 80111ea:	f814 e006 	ldrb.w	lr, [r4, r6]
 80111ee:	f8b9 4000 	ldrh.w	r4, [r9]
 80111f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80111f6:	eb00 0b0e 	add.w	fp, r0, lr
 80111fa:	1227      	asrs	r7, r4, #8
 80111fc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011200:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011204:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8011208:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801120a:	fb16 f60a 	smulbb	r6, r6, sl
 801120e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011212:	fb07 6705 	mla	r7, r7, r5, r6
 8011216:	10e6      	asrs	r6, r4, #3
 8011218:	00e4      	lsls	r4, r4, #3
 801121a:	b2e4      	uxtb	r4, r4
 801121c:	fb1b fb0a 	smulbb	fp, fp, sl
 8011220:	fb14 f405 	smulbb	r4, r4, r5
 8011224:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011228:	b2bf      	uxth	r7, r7
 801122a:	fb06 b605 	mla	r6, r6, r5, fp
 801122e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8011232:	b2b6      	uxth	r6, r6
 8011234:	fa1f fe8e 	uxth.w	lr, lr
 8011238:	1c7c      	adds	r4, r7, #1
 801123a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801123e:	f106 0b01 	add.w	fp, r6, #1
 8011242:	f10e 0401 	add.w	r4, lr, #1
 8011246:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801124a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801124e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011252:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011256:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801125a:	4327      	orrs	r7, r4
 801125c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011260:	4401      	add	r1, r0
 8011262:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011264:	ea47 070b 	orr.w	r7, r7, fp
 8011268:	f829 7b02 	strh.w	r7, [r9], #2
 801126c:	4402      	add	r2, r0
 801126e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011272:	e7af      	b.n	80111d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011274:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011278:	f04f 0e00 	mov.w	lr, #0
 801127c:	eb03 040e 	add.w	r4, r3, lr
 8011280:	2c00      	cmp	r4, #0
 8011282:	dc43      	bgt.n	801130c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011284:	9a00      	ldr	r2, [sp, #0]
 8011286:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801128a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801128e:	9300      	str	r3, [sp, #0]
 8011290:	9b02      	ldr	r3, [sp, #8]
 8011292:	2b00      	cmp	r3, #0
 8011294:	f340 8098 	ble.w	80113c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011298:	ee30 0a04 	vadd.f32	s0, s0, s8
 801129c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80112a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80112a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80112a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80112aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80112ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80112b2:	eef0 6a62 	vmov.f32	s13, s5
 80112b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80112ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80112be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80112c2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80112c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80112ca:	eef0 6a43 	vmov.f32	s13, s6
 80112ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80112d2:	ee12 2a90 	vmov	r2, s5
 80112d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80112da:	fb92 f3f3 	sdiv	r3, r2, r3
 80112de:	ee13 2a10 	vmov	r2, s6
 80112e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80112e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80112e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80112ea:	9314      	str	r3, [sp, #80]	; 0x50
 80112ec:	9b02      	ldr	r3, [sp, #8]
 80112ee:	9a05      	ldr	r2, [sp, #20]
 80112f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80112f4:	3b01      	subs	r3, #1
 80112f6:	9302      	str	r3, [sp, #8]
 80112f8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80112fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80112fe:	eeb0 3a67 	vmov.f32	s6, s15
 8011302:	bf08      	it	eq
 8011304:	4613      	moveq	r3, r2
 8011306:	eef0 2a47 	vmov.f32	s5, s14
 801130a:	e72a      	b.n	8011162 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801130c:	140f      	asrs	r7, r1, #16
 801130e:	d454      	bmi.n	80113ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011310:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011314:	42be      	cmp	r6, r7
 8011316:	dd50      	ble.n	80113ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011318:	ea5f 4822 	movs.w	r8, r2, asr #16
 801131c:	d44d      	bmi.n	80113ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801131e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011322:	4544      	cmp	r4, r8
 8011324:	dd49      	ble.n	80113ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011326:	9c04      	ldr	r4, [sp, #16]
 8011328:	b236      	sxth	r6, r6
 801132a:	fb08 4606 	mla	r6, r8, r6, r4
 801132e:	f06f 0001 	mvn.w	r0, #1
 8011332:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011336:	9c01      	ldr	r4, [sp, #4]
 8011338:	fb00 fa0e 	mul.w	sl, r0, lr
 801133c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011340:	9800      	ldr	r0, [sp, #0]
 8011342:	eb04 0b08 	add.w	fp, r4, r8
 8011346:	f830 400a 	ldrh.w	r4, [r0, sl]
 801134a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801134e:	9801      	ldr	r0, [sp, #4]
 8011350:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011354:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011358:	9800      	ldr	r0, [sp, #0]
 801135a:	1227      	asrs	r7, r4, #8
 801135c:	fb16 f609 	smulbb	r6, r6, r9
 8011360:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011364:	fb07 6705 	mla	r7, r7, r5, r6
 8011368:	10e6      	asrs	r6, r4, #3
 801136a:	00e4      	lsls	r4, r4, #3
 801136c:	b2e4      	uxtb	r4, r4
 801136e:	fb1b fb09 	smulbb	fp, fp, r9
 8011372:	fb14 f405 	smulbb	r4, r4, r5
 8011376:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801137a:	b2bf      	uxth	r7, r7
 801137c:	fb06 b605 	mla	r6, r6, r5, fp
 8011380:	fb08 4809 	mla	r8, r8, r9, r4
 8011384:	b2b6      	uxth	r6, r6
 8011386:	fa1f f888 	uxth.w	r8, r8
 801138a:	1c7c      	adds	r4, r7, #1
 801138c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011390:	f106 0b01 	add.w	fp, r6, #1
 8011394:	f108 0401 	add.w	r4, r8, #1
 8011398:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801139c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80113a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80113a4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80113a8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80113ac:	4327      	orrs	r7, r4
 80113ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80113b2:	ea47 070b 	orr.w	r7, r7, fp
 80113b6:	f820 700a 	strh.w	r7, [r0, sl]
 80113ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80113bc:	4401      	add	r1, r0
 80113be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80113c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80113c4:	4402      	add	r2, r0
 80113c6:	e759      	b.n	801127c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80113c8:	b007      	add	sp, #28
 80113ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080113d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80113d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113d4:	b085      	sub	sp, #20
 80113d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80113da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80113dc:	9203      	str	r2, [sp, #12]
 80113de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80113e2:	6870      	ldr	r0, [r6, #4]
 80113e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80113e6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80113ea:	686f      	ldr	r7, [r5, #4]
 80113ec:	9101      	str	r1, [sp, #4]
 80113ee:	fb00 2404 	mla	r4, r0, r4, r2
 80113f2:	6832      	ldr	r2, [r6, #0]
 80113f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80113f8:	682a      	ldr	r2, [r5, #0]
 80113fa:	9202      	str	r2, [sp, #8]
 80113fc:	3704      	adds	r7, #4
 80113fe:	9a01      	ldr	r2, [sp, #4]
 8011400:	2a00      	cmp	r2, #0
 8011402:	dc03      	bgt.n	801140c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011404:	9a03      	ldr	r2, [sp, #12]
 8011406:	2a00      	cmp	r2, #0
 8011408:	f340 80cc 	ble.w	80115a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801140c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801140e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011412:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011416:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801141a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801141c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011420:	2b00      	cmp	r3, #0
 8011422:	dd0d      	ble.n	8011440 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011424:	1406      	asrs	r6, r0, #16
 8011426:	d405      	bmi.n	8011434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011428:	454e      	cmp	r6, r9
 801142a:	da03      	bge.n	8011434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801142c:	1416      	asrs	r6, r2, #16
 801142e:	d401      	bmi.n	8011434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011430:	4546      	cmp	r6, r8
 8011432:	db06      	blt.n	8011442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011434:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011436:	4460      	add	r0, ip
 8011438:	4432      	add	r2, r6
 801143a:	3b01      	subs	r3, #1
 801143c:	3402      	adds	r4, #2
 801143e:	e7ef      	b.n	8011420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011440:	d00f      	beq.n	8011462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011442:	1e5e      	subs	r6, r3, #1
 8011444:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011448:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801144c:	d543      	bpl.n	80114d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801144e:	4698      	mov	r8, r3
 8011450:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011454:	f1b8 0f00 	cmp.w	r8, #0
 8011458:	dc71      	bgt.n	801153e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801145a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801145e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011462:	9b01      	ldr	r3, [sp, #4]
 8011464:	2b00      	cmp	r3, #0
 8011466:	f340 809d 	ble.w	80115a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801146a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801146e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011472:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011476:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011478:	ee31 1a05 	vadd.f32	s2, s2, s10
 801147c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011480:	eeb0 6a62 	vmov.f32	s12, s5
 8011484:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011488:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801148c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011490:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011494:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011498:	eeb0 6a43 	vmov.f32	s12, s6
 801149c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114a0:	ee12 2a90 	vmov	r2, s5
 80114a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114a8:	fb92 fcf3 	sdiv	ip, r2, r3
 80114ac:	ee13 2a10 	vmov	r2, s6
 80114b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80114b4:	9312      	str	r3, [sp, #72]	; 0x48
 80114b6:	9b01      	ldr	r3, [sp, #4]
 80114b8:	9a03      	ldr	r2, [sp, #12]
 80114ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114be:	3b01      	subs	r3, #1
 80114c0:	9301      	str	r3, [sp, #4]
 80114c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80114c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114c8:	eeb0 3a67 	vmov.f32	s6, s15
 80114cc:	bf08      	it	eq
 80114ce:	4613      	moveq	r3, r2
 80114d0:	eef0 2a47 	vmov.f32	s5, s14
 80114d4:	e793      	b.n	80113fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80114d6:	45ce      	cmp	lr, r9
 80114d8:	dab9      	bge.n	801144e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80114da:	9912      	ldr	r1, [sp, #72]	; 0x48
 80114dc:	fb01 2606 	mla	r6, r1, r6, r2
 80114e0:	1436      	asrs	r6, r6, #16
 80114e2:	d4b4      	bmi.n	801144e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80114e4:	4546      	cmp	r6, r8
 80114e6:	dab2      	bge.n	801144e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80114e8:	4698      	mov	r8, r3
 80114ea:	46a2      	mov	sl, r4
 80114ec:	f1b8 0f00 	cmp.w	r8, #0
 80114f0:	ddb3      	ble.n	801145a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80114f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80114f6:	9902      	ldr	r1, [sp, #8]
 80114f8:	1416      	asrs	r6, r2, #16
 80114fa:	fb09 1606 	mla	r6, r9, r6, r1
 80114fe:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011502:	492a      	ldr	r1, [pc, #168]	; (80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011504:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011508:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801150c:	eb07 0b0e 	add.w	fp, r7, lr
 8011510:	4460      	add	r0, ip
 8011512:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011516:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801151a:	00f6      	lsls	r6, r6, #3
 801151c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011520:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011524:	ea49 0606 	orr.w	r6, r9, r6
 8011528:	f817 900e 	ldrb.w	r9, [r7, lr]
 801152c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801152e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011532:	f82a 6b02 	strh.w	r6, [sl], #2
 8011536:	440a      	add	r2, r1
 8011538:	f108 38ff 	add.w	r8, r8, #4294967295
 801153c:	e7d6      	b.n	80114ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801153e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011542:	d429      	bmi.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011544:	68ae      	ldr	r6, [r5, #8]
 8011546:	454e      	cmp	r6, r9
 8011548:	dd26      	ble.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801154a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801154e:	d423      	bmi.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011550:	68e9      	ldr	r1, [r5, #12]
 8011552:	4559      	cmp	r1, fp
 8011554:	dd20      	ble.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011556:	9902      	ldr	r1, [sp, #8]
 8011558:	fa0f fe86 	sxth.w	lr, r6
 801155c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011560:	f06f 0101 	mvn.w	r1, #1
 8011564:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011568:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801156c:	eb07 060e 	add.w	r6, r7, lr
 8011570:	fb01 f908 	mul.w	r9, r1, r8
 8011574:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011578:	7876      	ldrb	r6, [r6, #1]
 801157a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801157e:	00f6      	lsls	r6, r6, #3
 8011580:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011584:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011588:	ea4b 0606 	orr.w	r6, fp, r6
 801158c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011590:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011594:	f82a 6009 	strh.w	r6, [sl, r9]
 8011598:	9912      	ldr	r1, [sp, #72]	; 0x48
 801159a:	4460      	add	r0, ip
 801159c:	440a      	add	r2, r1
 801159e:	f108 38ff 	add.w	r8, r8, #4294967295
 80115a2:	e757      	b.n	8011454 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80115a4:	b005      	add	sp, #20
 80115a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115aa:	bf00      	nop
 80115ac:	fffff800 	.word	0xfffff800

080115b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115b4:	b087      	sub	sp, #28
 80115b6:	468b      	mov	fp, r1
 80115b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80115ba:	9204      	str	r2, [sp, #16]
 80115bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80115c0:	9205      	str	r2, [sp, #20]
 80115c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80115c6:	6841      	ldr	r1, [r0, #4]
 80115c8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80115cc:	fb01 2404 	mla	r4, r1, r4, r2
 80115d0:	6802      	ldr	r2, [r0, #0]
 80115d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80115d6:	f8dc 2000 	ldr.w	r2, [ip]
 80115da:	9201      	str	r2, [sp, #4]
 80115dc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80115e0:	3204      	adds	r2, #4
 80115e2:	9202      	str	r2, [sp, #8]
 80115e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115e8:	f1bb 0f00 	cmp.w	fp, #0
 80115ec:	dc03      	bgt.n	80115f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80115ee:	9a04      	ldr	r2, [sp, #16]
 80115f0:	2a00      	cmp	r2, #0
 80115f2:	f340 8138 	ble.w	8011866 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80115f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80115f8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80115fc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011600:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011604:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011606:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801160a:	2b00      	cmp	r3, #0
 801160c:	dd0e      	ble.n	801162c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801160e:	1402      	asrs	r2, r0, #16
 8011610:	d405      	bmi.n	801161e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011612:	42ba      	cmp	r2, r7
 8011614:	da03      	bge.n	801161e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011616:	140a      	asrs	r2, r1, #16
 8011618:	d401      	bmi.n	801161e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801161a:	42b2      	cmp	r2, r6
 801161c:	db07      	blt.n	801162e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801161e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011620:	4410      	add	r0, r2
 8011622:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011624:	3b01      	subs	r3, #1
 8011626:	4411      	add	r1, r2
 8011628:	3402      	adds	r4, #2
 801162a:	e7ee      	b.n	801160a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801162c:	d019      	beq.n	8011662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801162e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011630:	1e5a      	subs	r2, r3, #1
 8011632:	fb05 0502 	mla	r5, r5, r2, r0
 8011636:	142d      	asrs	r5, r5, #16
 8011638:	d409      	bmi.n	801164e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801163a:	42bd      	cmp	r5, r7
 801163c:	da07      	bge.n	801164e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801163e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011640:	fb05 1202 	mla	r2, r5, r2, r1
 8011644:	1412      	asrs	r2, r2, #16
 8011646:	d402      	bmi.n	801164e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011648:	42b2      	cmp	r2, r6
 801164a:	f2c0 80ac 	blt.w	80117a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801164e:	f04f 0e00 	mov.w	lr, #0
 8011652:	eb03 020e 	add.w	r2, r3, lr
 8011656:	2a00      	cmp	r2, #0
 8011658:	dc3e      	bgt.n	80116d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801165a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801165e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011662:	f1bb 0f00 	cmp.w	fp, #0
 8011666:	f340 80fe 	ble.w	8011866 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801166a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801166e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011672:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011678:	f1bb 0b01 	subs.w	fp, fp, #1
 801167c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011680:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011684:	eeb0 6a62 	vmov.f32	s12, s5
 8011688:	ee61 7a27 	vmul.f32	s15, s2, s15
 801168c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011690:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011694:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011698:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801169c:	eeb0 6a43 	vmov.f32	s12, s6
 80116a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80116a4:	ee12 2a90 	vmov	r2, s5
 80116a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80116ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80116b0:	ee13 2a10 	vmov	r2, s6
 80116b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80116ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80116c0:	9a04      	ldr	r2, [sp, #16]
 80116c2:	9314      	str	r3, [sp, #80]	; 0x50
 80116c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80116c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116ca:	eeb0 3a67 	vmov.f32	s6, s15
 80116ce:	bf08      	it	eq
 80116d0:	4613      	moveq	r3, r2
 80116d2:	eef0 2a47 	vmov.f32	s5, s14
 80116d6:	e787      	b.n	80115e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80116d8:	1406      	asrs	r6, r0, #16
 80116da:	d45d      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80116dc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80116e0:	42b5      	cmp	r5, r6
 80116e2:	dd59      	ble.n	8011798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80116e4:	140f      	asrs	r7, r1, #16
 80116e6:	d457      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80116e8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80116ec:	42ba      	cmp	r2, r7
 80116ee:	dd53      	ble.n	8011798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80116f0:	9a01      	ldr	r2, [sp, #4]
 80116f2:	b22d      	sxth	r5, r5
 80116f4:	fb07 2505 	mla	r5, r7, r5, r2
 80116f8:	5daa      	ldrb	r2, [r5, r6]
 80116fa:	9d02      	ldr	r5, [sp, #8]
 80116fc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011700:	0e2e      	lsrs	r6, r5, #24
 8011702:	d049      	beq.n	8011798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011704:	f06f 0201 	mvn.w	r2, #1
 8011708:	fb02 f20e 	mul.w	r2, r2, lr
 801170c:	9203      	str	r2, [sp, #12]
 801170e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011712:	9a05      	ldr	r2, [sp, #20]
 8011714:	4356      	muls	r6, r2
 8011716:	1c72      	adds	r2, r6, #1
 8011718:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801171c:	1212      	asrs	r2, r2, #8
 801171e:	fa1f f982 	uxth.w	r9, r2
 8011722:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011726:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801172a:	43d2      	mvns	r2, r2
 801172c:	b2d2      	uxtb	r2, r2
 801172e:	fb16 f609 	smulbb	r6, r6, r9
 8011732:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011736:	fb07 6702 	mla	r7, r7, r2, r6
 801173a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801173e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011742:	b2ed      	uxtb	r5, r5
 8011744:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011748:	fa5f f888 	uxtb.w	r8, r8
 801174c:	fb15 f509 	smulbb	r5, r5, r9
 8011750:	fb08 5502 	mla	r5, r8, r2, r5
 8011754:	b2bf      	uxth	r7, r7
 8011756:	fb1a fa09 	smulbb	sl, sl, r9
 801175a:	b2ad      	uxth	r5, r5
 801175c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011760:	fb06 a602 	mla	r6, r6, r2, sl
 8011764:	1c7a      	adds	r2, r7, #1
 8011766:	f105 0a01 	add.w	sl, r5, #1
 801176a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801176e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011772:	b2b6      	uxth	r6, r6
 8011774:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011778:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801177c:	ea4a 0707 	orr.w	r7, sl, r7
 8011780:	f106 0a01 	add.w	sl, r6, #1
 8011784:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011788:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801178c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011790:	9a03      	ldr	r2, [sp, #12]
 8011792:	ea47 070a 	orr.w	r7, r7, sl
 8011796:	52a7      	strh	r7, [r4, r2]
 8011798:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801179a:	4410      	add	r0, r2
 801179c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801179e:	f10e 3eff 	add.w	lr, lr, #4294967295
 80117a2:	4411      	add	r1, r2
 80117a4:	e755      	b.n	8011652 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80117a6:	f04f 0800 	mov.w	r8, #0
 80117aa:	eba3 0208 	sub.w	r2, r3, r8
 80117ae:	2a00      	cmp	r2, #0
 80117b0:	f77f af53 	ble.w	801165a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80117b4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80117b8:	9f01      	ldr	r7, [sp, #4]
 80117ba:	140a      	asrs	r2, r1, #16
 80117bc:	1405      	asrs	r5, r0, #16
 80117be:	fb06 7202 	mla	r2, r6, r2, r7
 80117c2:	5d52      	ldrb	r2, [r2, r5]
 80117c4:	9d02      	ldr	r5, [sp, #8]
 80117c6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80117ca:	0e2e      	lsrs	r6, r5, #24
 80117cc:	d044      	beq.n	8011858 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80117ce:	9a05      	ldr	r2, [sp, #20]
 80117d0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80117d4:	4356      	muls	r6, r2
 80117d6:	1c72      	adds	r2, r6, #1
 80117d8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80117dc:	1212      	asrs	r2, r2, #8
 80117de:	fa1f f982 	uxth.w	r9, r2
 80117e2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80117e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80117ea:	43d2      	mvns	r2, r2
 80117ec:	b2d2      	uxtb	r2, r2
 80117ee:	fb16 f609 	smulbb	r6, r6, r9
 80117f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80117f6:	fb07 6702 	mla	r7, r7, r2, r6
 80117fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80117fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011802:	b2ed      	uxtb	r5, r5
 8011804:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011808:	fa5f fe8e 	uxtb.w	lr, lr
 801180c:	fb15 f509 	smulbb	r5, r5, r9
 8011810:	fb0e 5502 	mla	r5, lr, r2, r5
 8011814:	b2bf      	uxth	r7, r7
 8011816:	fb1a fa09 	smulbb	sl, sl, r9
 801181a:	b2ad      	uxth	r5, r5
 801181c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011820:	fb06 a602 	mla	r6, r6, r2, sl
 8011824:	1c7a      	adds	r2, r7, #1
 8011826:	f105 0a01 	add.w	sl, r5, #1
 801182a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801182e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011832:	b2b6      	uxth	r6, r6
 8011834:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011838:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801183c:	ea4a 0707 	orr.w	r7, sl, r7
 8011840:	f106 0a01 	add.w	sl, r6, #1
 8011844:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011848:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801184c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011850:	ea47 070a 	orr.w	r7, r7, sl
 8011854:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011858:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801185a:	4410      	add	r0, r2
 801185c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801185e:	f108 0801 	add.w	r8, r8, #1
 8011862:	4411      	add	r1, r2
 8011864:	e7a1      	b.n	80117aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011866:	b007      	add	sp, #28
 8011868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801186c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801186c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011870:	b085      	sub	sp, #20
 8011872:	468b      	mov	fp, r1
 8011874:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011876:	9203      	str	r2, [sp, #12]
 8011878:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801187c:	6841      	ldr	r1, [r0, #4]
 801187e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011882:	fb01 2404 	mla	r4, r1, r4, r2
 8011886:	6802      	ldr	r2, [r0, #0]
 8011888:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801188c:	f8de 2000 	ldr.w	r2, [lr]
 8011890:	9200      	str	r2, [sp, #0]
 8011892:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011896:	3204      	adds	r2, #4
 8011898:	9201      	str	r2, [sp, #4]
 801189a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801189e:	f1bb 0f00 	cmp.w	fp, #0
 80118a2:	dc03      	bgt.n	80118ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80118a4:	9a03      	ldr	r2, [sp, #12]
 80118a6:	2a00      	cmp	r2, #0
 80118a8:	f340 8153 	ble.w	8011b52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80118ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80118ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80118b2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80118b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80118ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80118bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80118c0:	2b00      	cmp	r3, #0
 80118c2:	dd0e      	ble.n	80118e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80118c4:	1408      	asrs	r0, r1, #16
 80118c6:	d405      	bmi.n	80118d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118c8:	42b8      	cmp	r0, r7
 80118ca:	da03      	bge.n	80118d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118cc:	1410      	asrs	r0, r2, #16
 80118ce:	d401      	bmi.n	80118d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118d0:	42b0      	cmp	r0, r6
 80118d2:	db07      	blt.n	80118e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80118d4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80118d6:	4401      	add	r1, r0
 80118d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80118da:	3b01      	subs	r3, #1
 80118dc:	4402      	add	r2, r0
 80118de:	3402      	adds	r4, #2
 80118e0:	e7ee      	b.n	80118c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80118e2:	d017      	beq.n	8011914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80118e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80118e6:	1e58      	subs	r0, r3, #1
 80118e8:	fb05 1500 	mla	r5, r5, r0, r1
 80118ec:	142d      	asrs	r5, r5, #16
 80118ee:	d409      	bmi.n	8011904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118f0:	42bd      	cmp	r5, r7
 80118f2:	da07      	bge.n	8011904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80118f6:	fb05 2000 	mla	r0, r5, r0, r2
 80118fa:	1400      	asrs	r0, r0, #16
 80118fc:	d402      	bmi.n	8011904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118fe:	42b0      	cmp	r0, r6
 8011900:	f2c0 80bc 	blt.w	8011a7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011904:	2600      	movs	r6, #0
 8011906:	1998      	adds	r0, r3, r6
 8011908:	2800      	cmp	r0, #0
 801190a:	dc3e      	bgt.n	801198a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801190c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011910:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011914:	f1bb 0f00 	cmp.w	fp, #0
 8011918:	f340 811b 	ble.w	8011b52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801191c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011920:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011924:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011928:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801192a:	f1bb 0b01 	subs.w	fp, fp, #1
 801192e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011932:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011936:	eeb0 6a62 	vmov.f32	s12, s5
 801193a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801193e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011942:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011946:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801194a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801194e:	eeb0 6a43 	vmov.f32	s12, s6
 8011952:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011956:	ee12 2a90 	vmov	r2, s5
 801195a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801195e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011962:	ee13 2a10 	vmov	r2, s6
 8011966:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801196a:	9311      	str	r3, [sp, #68]	; 0x44
 801196c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801196e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011972:	9a03      	ldr	r2, [sp, #12]
 8011974:	9312      	str	r3, [sp, #72]	; 0x48
 8011976:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801197a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801197c:	eeb0 3a67 	vmov.f32	s6, s15
 8011980:	bf08      	it	eq
 8011982:	4613      	moveq	r3, r2
 8011984:	eef0 2a47 	vmov.f32	s5, s14
 8011988:	e789      	b.n	801189e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801198a:	140f      	asrs	r7, r1, #16
 801198c:	d426      	bmi.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801198e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011992:	42bd      	cmp	r5, r7
 8011994:	dd22      	ble.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011996:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801199a:	d41f      	bmi.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801199c:	f8de 000c 	ldr.w	r0, [lr, #12]
 80119a0:	4560      	cmp	r0, ip
 80119a2:	dd1b      	ble.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80119a4:	9800      	ldr	r0, [sp, #0]
 80119a6:	b22d      	sxth	r5, r5
 80119a8:	fb0c 0505 	mla	r5, ip, r5, r0
 80119ac:	5de8      	ldrb	r0, [r5, r7]
 80119ae:	9d01      	ldr	r5, [sp, #4]
 80119b0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80119b4:	0e07      	lsrs	r7, r0, #24
 80119b6:	2fff      	cmp	r7, #255	; 0xff
 80119b8:	d116      	bne.n	80119e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80119ba:	f06f 0501 	mvn.w	r5, #1
 80119be:	fb05 f706 	mul.w	r7, r5, r6
 80119c2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80119c6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80119ca:	0945      	lsrs	r5, r0, #5
 80119cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80119d0:	ea4c 0505 	orr.w	r5, ip, r5
 80119d4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80119d8:	4305      	orrs	r5, r0
 80119da:	53e5      	strh	r5, [r4, r7]
 80119dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80119de:	4401      	add	r1, r0
 80119e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80119e2:	3e01      	subs	r6, #1
 80119e4:	4402      	add	r2, r0
 80119e6:	e78e      	b.n	8011906 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80119e8:	b2fd      	uxtb	r5, r7
 80119ea:	2f00      	cmp	r7, #0
 80119ec:	d0f6      	beq.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80119ee:	f06f 0701 	mvn.w	r7, #1
 80119f2:	4377      	muls	r7, r6
 80119f4:	fa1f f985 	uxth.w	r9, r5
 80119f8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80119fc:	9702      	str	r7, [sp, #8]
 80119fe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011a02:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011a06:	43ed      	mvns	r5, r5
 8011a08:	b2ed      	uxtb	r5, r5
 8011a0a:	fb17 f709 	smulbb	r7, r7, r9
 8011a0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011a12:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011a16:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011a1a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011a1e:	b2c0      	uxtb	r0, r0
 8011a20:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011a24:	fa5f f888 	uxtb.w	r8, r8
 8011a28:	fb10 f009 	smulbb	r0, r0, r9
 8011a2c:	fb08 0005 	mla	r0, r8, r5, r0
 8011a30:	b280      	uxth	r0, r0
 8011a32:	fa1f fc8c 	uxth.w	ip, ip
 8011a36:	fb1a fa09 	smulbb	sl, sl, r9
 8011a3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011a3e:	fb07 a705 	mla	r7, r7, r5, sl
 8011a42:	f100 0a01 	add.w	sl, r0, #1
 8011a46:	f10c 0501 	add.w	r5, ip, #1
 8011a4a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011a4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011a52:	b2bf      	uxth	r7, r7
 8011a54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011a58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011a5c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011a60:	f107 0a01 	add.w	sl, r7, #1
 8011a64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011a68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011a6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011a70:	9802      	ldr	r0, [sp, #8]
 8011a72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011a76:	f824 c000 	strh.w	ip, [r4, r0]
 8011a7a:	e7af      	b.n	80119dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011a7c:	f04f 0800 	mov.w	r8, #0
 8011a80:	eba3 0008 	sub.w	r0, r3, r8
 8011a84:	2800      	cmp	r0, #0
 8011a86:	f77f af41 	ble.w	801190c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011a8a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011a8e:	9f00      	ldr	r7, [sp, #0]
 8011a90:	1410      	asrs	r0, r2, #16
 8011a92:	140d      	asrs	r5, r1, #16
 8011a94:	fb06 7000 	mla	r0, r6, r0, r7
 8011a98:	5d40      	ldrb	r0, [r0, r5]
 8011a9a:	9d01      	ldr	r5, [sp, #4]
 8011a9c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011aa0:	0e2e      	lsrs	r6, r5, #24
 8011aa2:	2eff      	cmp	r6, #255	; 0xff
 8011aa4:	d112      	bne.n	8011acc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8011aa6:	482c      	ldr	r0, [pc, #176]	; (8011b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011aa8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011aac:	0968      	lsrs	r0, r5, #5
 8011aae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011ab2:	4330      	orrs	r0, r6
 8011ab4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011ab8:	4328      	orrs	r0, r5
 8011aba:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8011abe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ac0:	4401      	add	r1, r0
 8011ac2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011ac4:	f108 0801 	add.w	r8, r8, #1
 8011ac8:	4402      	add	r2, r0
 8011aca:	e7d9      	b.n	8011a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011acc:	b2f0      	uxtb	r0, r6
 8011ace:	2e00      	cmp	r6, #0
 8011ad0:	d0f5      	beq.n	8011abe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011ad2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8011ad6:	fa1f f980 	uxth.w	r9, r0
 8011ada:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011ade:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011ae2:	43c0      	mvns	r0, r0
 8011ae4:	b2c0      	uxtb	r0, r0
 8011ae6:	fb16 f609 	smulbb	r6, r6, r9
 8011aea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011aee:	fb07 6700 	mla	r7, r7, r0, r6
 8011af2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011af6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011afa:	b2ed      	uxtb	r5, r5
 8011afc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011b00:	fa5f fc8c 	uxtb.w	ip, ip
 8011b04:	fb15 f509 	smulbb	r5, r5, r9
 8011b08:	fb0c 5500 	mla	r5, ip, r0, r5
 8011b0c:	b2bf      	uxth	r7, r7
 8011b0e:	fb1a fa09 	smulbb	sl, sl, r9
 8011b12:	b2ad      	uxth	r5, r5
 8011b14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011b18:	fb06 a600 	mla	r6, r6, r0, sl
 8011b1c:	1c78      	adds	r0, r7, #1
 8011b1e:	f105 0a01 	add.w	sl, r5, #1
 8011b22:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011b26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011b2a:	b2b6      	uxth	r6, r6
 8011b2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011b30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011b34:	ea4a 0707 	orr.w	r7, sl, r7
 8011b38:	f106 0a01 	add.w	sl, r6, #1
 8011b3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011b40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b48:	ea47 070a 	orr.w	r7, r7, sl
 8011b4c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011b50:	e7b5      	b.n	8011abe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011b52:	b005      	add	sp, #20
 8011b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b58:	fffff800 	.word	0xfffff800

08011b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b60:	b087      	sub	sp, #28
 8011b62:	468b      	mov	fp, r1
 8011b64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011b66:	9204      	str	r2, [sp, #16]
 8011b68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011b6c:	9205      	str	r2, [sp, #20]
 8011b6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011b72:	6861      	ldr	r1, [r4, #4]
 8011b74:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011b78:	fb01 2000 	mla	r0, r1, r0, r2
 8011b7c:	6822      	ldr	r2, [r4, #0]
 8011b7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011b82:	f8de 2000 	ldr.w	r2, [lr]
 8011b86:	9201      	str	r2, [sp, #4]
 8011b88:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011b8c:	9202      	str	r2, [sp, #8]
 8011b8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b92:	f1bb 0f00 	cmp.w	fp, #0
 8011b96:	dc03      	bgt.n	8011ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011b98:	9a04      	ldr	r2, [sp, #16]
 8011b9a:	2a00      	cmp	r2, #0
 8011b9c:	f340 8142 	ble.w	8011e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011ba0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011ba2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011ba6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011baa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011bae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011bb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011bb4:	2b00      	cmp	r3, #0
 8011bb6:	dd0e      	ble.n	8011bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011bb8:	140c      	asrs	r4, r1, #16
 8011bba:	d405      	bmi.n	8011bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011bbc:	42bc      	cmp	r4, r7
 8011bbe:	da03      	bge.n	8011bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011bc0:	1414      	asrs	r4, r2, #16
 8011bc2:	d401      	bmi.n	8011bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011bc4:	42b4      	cmp	r4, r6
 8011bc6:	db07      	blt.n	8011bd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011bc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011bca:	4421      	add	r1, r4
 8011bcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011bce:	3b01      	subs	r3, #1
 8011bd0:	4422      	add	r2, r4
 8011bd2:	3002      	adds	r0, #2
 8011bd4:	e7ee      	b.n	8011bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011bd6:	d019      	beq.n	8011c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011bd8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011bda:	1e5c      	subs	r4, r3, #1
 8011bdc:	fb05 1504 	mla	r5, r5, r4, r1
 8011be0:	142d      	asrs	r5, r5, #16
 8011be2:	d409      	bmi.n	8011bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011be4:	42bd      	cmp	r5, r7
 8011be6:	da07      	bge.n	8011bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011be8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011bea:	fb05 2404 	mla	r4, r5, r4, r2
 8011bee:	1424      	asrs	r4, r4, #16
 8011bf0:	d402      	bmi.n	8011bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011bf2:	42b4      	cmp	r4, r6
 8011bf4:	f2c0 80b1 	blt.w	8011d5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011bf8:	f04f 0800 	mov.w	r8, #0
 8011bfc:	eb03 0408 	add.w	r4, r3, r8
 8011c00:	2c00      	cmp	r4, #0
 8011c02:	dc3e      	bgt.n	8011c82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011c04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011c08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011c0c:	f1bb 0f00 	cmp.w	fp, #0
 8011c10:	f340 8108 	ble.w	8011e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011c14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011c18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011c1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011c20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c22:	f1bb 0b01 	subs.w	fp, fp, #1
 8011c26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011c2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011c2e:	eeb0 6a62 	vmov.f32	s12, s5
 8011c32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011c36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011c3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011c42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011c46:	eeb0 6a43 	vmov.f32	s12, s6
 8011c4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011c4e:	ee12 2a90 	vmov	r2, s5
 8011c52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011c56:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c5a:	ee13 2a10 	vmov	r2, s6
 8011c5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c62:	9313      	str	r3, [sp, #76]	; 0x4c
 8011c64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c66:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c6a:	9a04      	ldr	r2, [sp, #16]
 8011c6c:	9314      	str	r3, [sp, #80]	; 0x50
 8011c6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011c72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c74:	eeb0 3a67 	vmov.f32	s6, s15
 8011c78:	bf08      	it	eq
 8011c7a:	4613      	moveq	r3, r2
 8011c7c:	eef0 2a47 	vmov.f32	s5, s14
 8011c80:	e787      	b.n	8011b92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011c82:	140e      	asrs	r6, r1, #16
 8011c84:	d462      	bmi.n	8011d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011c86:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011c8a:	42b5      	cmp	r5, r6
 8011c8c:	dd5e      	ble.n	8011d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011c8e:	1417      	asrs	r7, r2, #16
 8011c90:	d45c      	bmi.n	8011d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011c92:	f8de 400c 	ldr.w	r4, [lr, #12]
 8011c96:	42bc      	cmp	r4, r7
 8011c98:	dd58      	ble.n	8011d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011c9a:	b22d      	sxth	r5, r5
 8011c9c:	fb07 6505 	mla	r5, r7, r5, r6
 8011ca0:	9c02      	ldr	r4, [sp, #8]
 8011ca2:	5d66      	ldrb	r6, [r4, r5]
 8011ca4:	2e00      	cmp	r6, #0
 8011ca6:	d051      	beq.n	8011d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011ca8:	9c01      	ldr	r4, [sp, #4]
 8011caa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8011cae:	f06f 0401 	mvn.w	r4, #1
 8011cb2:	fb04 f408 	mul.w	r4, r4, r8
 8011cb6:	9403      	str	r4, [sp, #12]
 8011cb8:	5b05      	ldrh	r5, [r0, r4]
 8011cba:	9c05      	ldr	r4, [sp, #20]
 8011cbc:	4366      	muls	r6, r4
 8011cbe:	1c74      	adds	r4, r6, #1
 8011cc0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011cc4:	1224      	asrs	r4, r4, #8
 8011cc6:	b2a7      	uxth	r7, r4
 8011cc8:	122e      	asrs	r6, r5, #8
 8011cca:	43e4      	mvns	r4, r4
 8011ccc:	b2e4      	uxtb	r4, r4
 8011cce:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8011cd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011cd6:	fb16 f604 	smulbb	r6, r6, r4
 8011cda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011cde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ce2:	00ed      	lsls	r5, r5, #3
 8011ce4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011ce8:	b2ed      	uxtb	r5, r5
 8011cea:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8011cee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011cf2:	fb15 f504 	smulbb	r5, r5, r4
 8011cf6:	fa5f f989 	uxtb.w	r9, r9
 8011cfa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011cfe:	fb09 5507 	mla	r5, r9, r7, r5
 8011d02:	fb1a fa04 	smulbb	sl, sl, r4
 8011d06:	fa1f fc8c 	uxth.w	ip, ip
 8011d0a:	b2ad      	uxth	r5, r5
 8011d0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011d10:	fb06 a607 	mla	r6, r6, r7, sl
 8011d14:	f10c 0401 	add.w	r4, ip, #1
 8011d18:	f105 0a01 	add.w	sl, r5, #1
 8011d1c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011d20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011d24:	b2b6      	uxth	r6, r6
 8011d26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011d2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011d2e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011d32:	f106 0a01 	add.w	sl, r6, #1
 8011d36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011d3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011d3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011d42:	9c03      	ldr	r4, [sp, #12]
 8011d44:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011d48:	f820 c004 	strh.w	ip, [r0, r4]
 8011d4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011d4e:	4421      	add	r1, r4
 8011d50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011d52:	f108 38ff 	add.w	r8, r8, #4294967295
 8011d56:	4422      	add	r2, r4
 8011d58:	e750      	b.n	8011bfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011d5a:	f04f 0900 	mov.w	r9, #0
 8011d5e:	eba3 0409 	sub.w	r4, r3, r9
 8011d62:	2c00      	cmp	r4, #0
 8011d64:	f77f af4e 	ble.w	8011c04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011d68:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011d6c:	140d      	asrs	r5, r1, #16
 8011d6e:	1414      	asrs	r4, r2, #16
 8011d70:	fb06 5404 	mla	r4, r6, r4, r5
 8011d74:	9d02      	ldr	r5, [sp, #8]
 8011d76:	5d2e      	ldrb	r6, [r5, r4]
 8011d78:	2e00      	cmp	r6, #0
 8011d7a:	d04c      	beq.n	8011e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8011d7c:	9d01      	ldr	r5, [sp, #4]
 8011d7e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8011d82:	9c05      	ldr	r4, [sp, #20]
 8011d84:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011d88:	4366      	muls	r6, r4
 8011d8a:	1c74      	adds	r4, r6, #1
 8011d8c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011d90:	1224      	asrs	r4, r4, #8
 8011d92:	b2a7      	uxth	r7, r4
 8011d94:	122e      	asrs	r6, r5, #8
 8011d96:	43e4      	mvns	r4, r4
 8011d98:	b2e4      	uxtb	r4, r4
 8011d9a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011d9e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011da2:	fb16 f604 	smulbb	r6, r6, r4
 8011da6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011daa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011dae:	00ed      	lsls	r5, r5, #3
 8011db0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011db4:	b2ed      	uxtb	r5, r5
 8011db6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011dba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011dbe:	fb15 f504 	smulbb	r5, r5, r4
 8011dc2:	fa5f f888 	uxtb.w	r8, r8
 8011dc6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011dca:	fb08 5507 	mla	r5, r8, r7, r5
 8011dce:	fb1a fa04 	smulbb	sl, sl, r4
 8011dd2:	fa1f fc8c 	uxth.w	ip, ip
 8011dd6:	b2ad      	uxth	r5, r5
 8011dd8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011ddc:	fb06 a607 	mla	r6, r6, r7, sl
 8011de0:	f10c 0401 	add.w	r4, ip, #1
 8011de4:	f105 0a01 	add.w	sl, r5, #1
 8011de8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011dec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011df0:	b2b6      	uxth	r6, r6
 8011df2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011df6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011dfa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011dfe:	f106 0a01 	add.w	sl, r6, #1
 8011e02:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011e06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011e12:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011e16:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011e18:	4421      	add	r1, r4
 8011e1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011e1c:	f109 0901 	add.w	r9, r9, #1
 8011e20:	4422      	add	r2, r4
 8011e22:	e79c      	b.n	8011d5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011e24:	b007      	add	sp, #28
 8011e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e2e:	b085      	sub	sp, #20
 8011e30:	468b      	mov	fp, r1
 8011e32:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011e34:	9203      	str	r2, [sp, #12]
 8011e36:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011e3a:	6861      	ldr	r1, [r4, #4]
 8011e3c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011e40:	fb01 2000 	mla	r0, r1, r0, r2
 8011e44:	6822      	ldr	r2, [r4, #0]
 8011e46:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011e4a:	f8d8 2000 	ldr.w	r2, [r8]
 8011e4e:	9200      	str	r2, [sp, #0]
 8011e50:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011e54:	9201      	str	r2, [sp, #4]
 8011e56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011e5a:	f1bb 0f00 	cmp.w	fp, #0
 8011e5e:	dc03      	bgt.n	8011e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011e60:	9a03      	ldr	r2, [sp, #12]
 8011e62:	2a00      	cmp	r2, #0
 8011e64:	f340 8146 	ble.w	80120f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011e68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011e6a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011e6e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011e72:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011e76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011e78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011e7c:	2b00      	cmp	r3, #0
 8011e7e:	dd0e      	ble.n	8011e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011e80:	140c      	asrs	r4, r1, #16
 8011e82:	d405      	bmi.n	8011e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e84:	42bc      	cmp	r4, r7
 8011e86:	da03      	bge.n	8011e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e88:	1414      	asrs	r4, r2, #16
 8011e8a:	d401      	bmi.n	8011e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e8c:	42b4      	cmp	r4, r6
 8011e8e:	db07      	blt.n	8011ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011e90:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011e92:	4421      	add	r1, r4
 8011e94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011e96:	3b01      	subs	r3, #1
 8011e98:	4422      	add	r2, r4
 8011e9a:	3002      	adds	r0, #2
 8011e9c:	e7ee      	b.n	8011e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011e9e:	d017      	beq.n	8011ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011ea0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011ea2:	1e5c      	subs	r4, r3, #1
 8011ea4:	fb05 1504 	mla	r5, r5, r4, r1
 8011ea8:	142d      	asrs	r5, r5, #16
 8011eaa:	d409      	bmi.n	8011ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011eac:	42bd      	cmp	r5, r7
 8011eae:	da07      	bge.n	8011ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011eb0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011eb2:	fb05 2404 	mla	r4, r5, r4, r2
 8011eb6:	1424      	asrs	r4, r4, #16
 8011eb8:	d402      	bmi.n	8011ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011eba:	42b4      	cmp	r4, r6
 8011ebc:	f2c0 80b3 	blt.w	8012026 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011ec0:	2600      	movs	r6, #0
 8011ec2:	199c      	adds	r4, r3, r6
 8011ec4:	2c00      	cmp	r4, #0
 8011ec6:	dc3e      	bgt.n	8011f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011ec8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ecc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011ed0:	f1bb 0f00 	cmp.w	fp, #0
 8011ed4:	f340 810e 	ble.w	80120f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011ed8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011edc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ee0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ee4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ee6:	f1bb 0b01 	subs.w	fp, fp, #1
 8011eea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011eee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ef2:	eeb0 6a62 	vmov.f32	s12, s5
 8011ef6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011efa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011efe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011f02:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011f06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f0a:	eeb0 6a43 	vmov.f32	s12, s6
 8011f0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011f12:	ee12 2a90 	vmov	r2, s5
 8011f16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011f1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f1e:	ee13 2a10 	vmov	r2, s6
 8011f22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f26:	9311      	str	r3, [sp, #68]	; 0x44
 8011f28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f2e:	9a03      	ldr	r2, [sp, #12]
 8011f30:	9312      	str	r3, [sp, #72]	; 0x48
 8011f32:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011f36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f38:	eeb0 3a67 	vmov.f32	s6, s15
 8011f3c:	bf08      	it	eq
 8011f3e:	4613      	moveq	r3, r2
 8011f40:	eef0 2a47 	vmov.f32	s5, s14
 8011f44:	e789      	b.n	8011e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011f46:	140f      	asrs	r7, r1, #16
 8011f48:	d418      	bmi.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011f4a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011f4e:	42bd      	cmp	r5, r7
 8011f50:	dd14      	ble.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011f52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011f56:	d411      	bmi.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011f58:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011f5c:	4564      	cmp	r4, ip
 8011f5e:	dd0d      	ble.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011f60:	b22d      	sxth	r5, r5
 8011f62:	fb0c 7505 	mla	r5, ip, r5, r7
 8011f66:	9c01      	ldr	r4, [sp, #4]
 8011f68:	5d64      	ldrb	r4, [r4, r5]
 8011f6a:	2cff      	cmp	r4, #255	; 0xff
 8011f6c:	d10c      	bne.n	8011f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011f6e:	9c00      	ldr	r4, [sp, #0]
 8011f70:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011f74:	f06f 0401 	mvn.w	r4, #1
 8011f78:	4374      	muls	r4, r6
 8011f7a:	5305      	strh	r5, [r0, r4]
 8011f7c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011f7e:	4421      	add	r1, r4
 8011f80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011f82:	3e01      	subs	r6, #1
 8011f84:	4422      	add	r2, r4
 8011f86:	e79c      	b.n	8011ec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011f88:	2c00      	cmp	r4, #0
 8011f8a:	d0f7      	beq.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011f8c:	9f00      	ldr	r7, [sp, #0]
 8011f8e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8011f92:	f06f 0501 	mvn.w	r5, #1
 8011f96:	4375      	muls	r5, r6
 8011f98:	9502      	str	r5, [sp, #8]
 8011f9a:	5b45      	ldrh	r5, [r0, r5]
 8011f9c:	fa1f fc84 	uxth.w	ip, r4
 8011fa0:	122f      	asrs	r7, r5, #8
 8011fa2:	43e4      	mvns	r4, r4
 8011fa4:	b2e4      	uxtb	r4, r4
 8011fa6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8011faa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011fae:	fb17 f704 	smulbb	r7, r7, r4
 8011fb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011fb6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011fba:	00ed      	lsls	r5, r5, #3
 8011fbc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011fc0:	b2ed      	uxtb	r5, r5
 8011fc2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8011fc6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011fca:	fb15 f504 	smulbb	r5, r5, r4
 8011fce:	fa5f f989 	uxtb.w	r9, r9
 8011fd2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011fd6:	fb09 550c 	mla	r5, r9, ip, r5
 8011fda:	fb1a fa04 	smulbb	sl, sl, r4
 8011fde:	fa1f fe8e 	uxth.w	lr, lr
 8011fe2:	b2ad      	uxth	r5, r5
 8011fe4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011fe8:	fb07 a70c 	mla	r7, r7, ip, sl
 8011fec:	f10e 0401 	add.w	r4, lr, #1
 8011ff0:	f105 0a01 	add.w	sl, r5, #1
 8011ff4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011ff8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ffc:	b2bf      	uxth	r7, r7
 8011ffe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012002:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012006:	ea4a 0e0e 	orr.w	lr, sl, lr
 801200a:	f107 0a01 	add.w	sl, r7, #1
 801200e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012012:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012016:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801201a:	9c02      	ldr	r4, [sp, #8]
 801201c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012020:	f820 e004 	strh.w	lr, [r0, r4]
 8012024:	e7aa      	b.n	8011f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012026:	f04f 0900 	mov.w	r9, #0
 801202a:	eba3 0409 	sub.w	r4, r3, r9
 801202e:	2c00      	cmp	r4, #0
 8012030:	f77f af4a 	ble.w	8011ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012034:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012038:	1414      	asrs	r4, r2, #16
 801203a:	140d      	asrs	r5, r1, #16
 801203c:	fb06 5504 	mla	r5, r6, r4, r5
 8012040:	9c01      	ldr	r4, [sp, #4]
 8012042:	5d64      	ldrb	r4, [r4, r5]
 8012044:	2cff      	cmp	r4, #255	; 0xff
 8012046:	d10b      	bne.n	8012060 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8012048:	9c00      	ldr	r4, [sp, #0]
 801204a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801204e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8012052:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012054:	4421      	add	r1, r4
 8012056:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012058:	f109 0901 	add.w	r9, r9, #1
 801205c:	4422      	add	r2, r4
 801205e:	e7e4      	b.n	801202a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012060:	2c00      	cmp	r4, #0
 8012062:	d0f6      	beq.n	8012052 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012064:	9e00      	ldr	r6, [sp, #0]
 8012066:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801206a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801206e:	b2a7      	uxth	r7, r4
 8012070:	122e      	asrs	r6, r5, #8
 8012072:	43e4      	mvns	r4, r4
 8012074:	b2e4      	uxtb	r4, r4
 8012076:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801207a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801207e:	fb16 f604 	smulbb	r6, r6, r4
 8012082:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012086:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801208a:	00ed      	lsls	r5, r5, #3
 801208c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012090:	b2ed      	uxtb	r5, r5
 8012092:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012096:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801209a:	fb15 f504 	smulbb	r5, r5, r4
 801209e:	fa5f fe8e 	uxtb.w	lr, lr
 80120a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80120a6:	fb0e 5507 	mla	r5, lr, r7, r5
 80120aa:	fb1a fa04 	smulbb	sl, sl, r4
 80120ae:	fa1f fc8c 	uxth.w	ip, ip
 80120b2:	b2ad      	uxth	r5, r5
 80120b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80120b8:	fb06 a607 	mla	r6, r6, r7, sl
 80120bc:	f10c 0401 	add.w	r4, ip, #1
 80120c0:	f105 0a01 	add.w	sl, r5, #1
 80120c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80120c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80120cc:	b2b6      	uxth	r6, r6
 80120ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80120d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80120d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80120da:	f106 0a01 	add.w	sl, r6, #1
 80120de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80120e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80120e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80120ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80120ee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80120f2:	e7ae      	b.n	8012052 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80120f4:	b005      	add	sp, #20
 80120f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80120fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120fe:	b085      	sub	sp, #20
 8012100:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012102:	9203      	str	r2, [sp, #12]
 8012104:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8012108:	9201      	str	r2, [sp, #4]
 801210a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801210e:	9100      	str	r1, [sp, #0]
 8012110:	6841      	ldr	r1, [r0, #4]
 8012112:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012116:	fb01 2404 	mla	r4, r1, r4, r2
 801211a:	6802      	ldr	r2, [r0, #0]
 801211c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012120:	f8de 2000 	ldr.w	r2, [lr]
 8012124:	9202      	str	r2, [sp, #8]
 8012126:	9a01      	ldr	r2, [sp, #4]
 8012128:	43d6      	mvns	r6, r2
 801212a:	b2f6      	uxtb	r6, r6
 801212c:	9a00      	ldr	r2, [sp, #0]
 801212e:	2a00      	cmp	r2, #0
 8012130:	dc03      	bgt.n	801213a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012132:	9a03      	ldr	r2, [sp, #12]
 8012134:	2a00      	cmp	r2, #0
 8012136:	f340 8124 	ble.w	8012382 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801213a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801213c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012140:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012144:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012148:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801214a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801214e:	2b00      	cmp	r3, #0
 8012150:	dd0e      	ble.n	8012170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012152:	1408      	asrs	r0, r1, #16
 8012154:	d405      	bmi.n	8012162 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012156:	4560      	cmp	r0, ip
 8012158:	da03      	bge.n	8012162 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801215a:	1410      	asrs	r0, r2, #16
 801215c:	d401      	bmi.n	8012162 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801215e:	42b8      	cmp	r0, r7
 8012160:	db07      	blt.n	8012172 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012162:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012164:	4401      	add	r1, r0
 8012166:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012168:	3b01      	subs	r3, #1
 801216a:	4402      	add	r2, r0
 801216c:	3402      	adds	r4, #2
 801216e:	e7ee      	b.n	801214e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012170:	d06e      	beq.n	8012250 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012172:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012174:	1e58      	subs	r0, r3, #1
 8012176:	fb05 1500 	mla	r5, r5, r0, r1
 801217a:	142d      	asrs	r5, r5, #16
 801217c:	d45c      	bmi.n	8012238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801217e:	4565      	cmp	r5, ip
 8012180:	da5a      	bge.n	8012238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012182:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012184:	fb05 2000 	mla	r0, r5, r0, r2
 8012188:	1400      	asrs	r0, r0, #16
 801218a:	d455      	bmi.n	8012238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801218c:	42b8      	cmp	r0, r7
 801218e:	da53      	bge.n	8012238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012190:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012194:	4699      	mov	r9, r3
 8012196:	46a2      	mov	sl, r4
 8012198:	f1b9 0f00 	cmp.w	r9, #0
 801219c:	dd54      	ble.n	8012248 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801219e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80121a2:	140d      	asrs	r5, r1, #16
 80121a4:	1410      	asrs	r0, r2, #16
 80121a6:	fb07 5000 	mla	r0, r7, r0, r5
 80121aa:	9d02      	ldr	r5, [sp, #8]
 80121ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80121b0:	f8ba 5000 	ldrh.w	r5, [sl]
 80121b4:	122f      	asrs	r7, r5, #8
 80121b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80121ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121be:	fb17 f706 	smulbb	r7, r7, r6
 80121c2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80121c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121ca:	00ed      	lsls	r5, r5, #3
 80121cc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80121d0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80121d4:	10c7      	asrs	r7, r0, #3
 80121d6:	b2ed      	uxtb	r5, r5
 80121d8:	00c0      	lsls	r0, r0, #3
 80121da:	fb18 f806 	smulbb	r8, r8, r6
 80121de:	fb15 f506 	smulbb	r5, r5, r6
 80121e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80121e6:	b2c0      	uxtb	r0, r0
 80121e8:	fa1f fc8c 	uxth.w	ip, ip
 80121ec:	fb07 870b 	mla	r7, r7, fp, r8
 80121f0:	fb00 500b 	mla	r0, r0, fp, r5
 80121f4:	b280      	uxth	r0, r0
 80121f6:	b2bf      	uxth	r7, r7
 80121f8:	f10c 0501 	add.w	r5, ip, #1
 80121fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012200:	f107 0801 	add.w	r8, r7, #1
 8012204:	1c45      	adds	r5, r0, #1
 8012206:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801220a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801220e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012210:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012214:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012218:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801221c:	ea45 0c0c 	orr.w	ip, r5, ip
 8012220:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8012224:	4401      	add	r1, r0
 8012226:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012228:	ea4c 0c08 	orr.w	ip, ip, r8
 801222c:	f82a cb02 	strh.w	ip, [sl], #2
 8012230:	4402      	add	r2, r0
 8012232:	f109 39ff 	add.w	r9, r9, #4294967295
 8012236:	e7af      	b.n	8012198 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012238:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801223c:	f04f 0800 	mov.w	r8, #0
 8012240:	eb03 0008 	add.w	r0, r3, r8
 8012244:	2800      	cmp	r0, #0
 8012246:	dc41      	bgt.n	80122cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012248:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801224c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012250:	9b00      	ldr	r3, [sp, #0]
 8012252:	2b00      	cmp	r3, #0
 8012254:	f340 8095 	ble.w	8012382 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012258:	ee30 0a04 	vadd.f32	s0, s0, s8
 801225c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012260:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012266:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801226a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801226e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012272:	eef0 6a62 	vmov.f32	s13, s5
 8012276:	ee61 7a27 	vmul.f32	s15, s2, s15
 801227a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801227e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012282:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8012286:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801228a:	eef0 6a43 	vmov.f32	s13, s6
 801228e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012292:	ee12 2a90 	vmov	r2, s5
 8012296:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801229a:	fb92 f3f3 	sdiv	r3, r2, r3
 801229e:	ee13 2a10 	vmov	r2, s6
 80122a2:	9311      	str	r3, [sp, #68]	; 0x44
 80122a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80122a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80122aa:	9312      	str	r3, [sp, #72]	; 0x48
 80122ac:	9b00      	ldr	r3, [sp, #0]
 80122ae:	9a03      	ldr	r2, [sp, #12]
 80122b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80122b4:	3b01      	subs	r3, #1
 80122b6:	9300      	str	r3, [sp, #0]
 80122b8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80122bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80122be:	eeb0 3a67 	vmov.f32	s6, s15
 80122c2:	bf08      	it	eq
 80122c4:	4613      	moveq	r3, r2
 80122c6:	eef0 2a47 	vmov.f32	s5, s14
 80122ca:	e72f      	b.n	801212c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80122cc:	140f      	asrs	r7, r1, #16
 80122ce:	d451      	bmi.n	8012374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80122d0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80122d4:	42bd      	cmp	r5, r7
 80122d6:	dd4d      	ble.n	8012374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80122d8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80122dc:	d44a      	bmi.n	8012374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80122de:	f8de 000c 	ldr.w	r0, [lr, #12]
 80122e2:	4560      	cmp	r0, ip
 80122e4:	dd46      	ble.n	8012374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80122e6:	b22d      	sxth	r5, r5
 80122e8:	fb0c 7505 	mla	r5, ip, r5, r7
 80122ec:	9802      	ldr	r0, [sp, #8]
 80122ee:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80122f2:	f06f 0501 	mvn.w	r5, #1
 80122f6:	fb05 fb08 	mul.w	fp, r5, r8
 80122fa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80122fe:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012302:	122f      	asrs	r7, r5, #8
 8012304:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012308:	fb17 f706 	smulbb	r7, r7, r6
 801230c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012310:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012314:	00ed      	lsls	r5, r5, #3
 8012316:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801231a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801231e:	10c7      	asrs	r7, r0, #3
 8012320:	b2ed      	uxtb	r5, r5
 8012322:	00c0      	lsls	r0, r0, #3
 8012324:	fb19 f906 	smulbb	r9, r9, r6
 8012328:	fb15 f506 	smulbb	r5, r5, r6
 801232c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012330:	b2c0      	uxtb	r0, r0
 8012332:	fa1f fc8c 	uxth.w	ip, ip
 8012336:	fb07 970a 	mla	r7, r7, sl, r9
 801233a:	fb00 500a 	mla	r0, r0, sl, r5
 801233e:	b2bf      	uxth	r7, r7
 8012340:	b280      	uxth	r0, r0
 8012342:	f10c 0501 	add.w	r5, ip, #1
 8012346:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801234a:	f107 0901 	add.w	r9, r7, #1
 801234e:	1c45      	adds	r5, r0, #1
 8012350:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012354:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012358:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801235c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012360:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012364:	ea45 0c0c 	orr.w	ip, r5, ip
 8012368:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801236c:	ea4c 0c09 	orr.w	ip, ip, r9
 8012370:	f824 c00b 	strh.w	ip, [r4, fp]
 8012374:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012376:	4401      	add	r1, r0
 8012378:	9812      	ldr	r0, [sp, #72]	; 0x48
 801237a:	f108 38ff 	add.w	r8, r8, #4294967295
 801237e:	4402      	add	r2, r0
 8012380:	e75e      	b.n	8012240 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012382:	b005      	add	sp, #20
 8012384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012388 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801238c:	b085      	sub	sp, #20
 801238e:	4693      	mov	fp, r2
 8012390:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012392:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012394:	6870      	ldr	r0, [r6, #4]
 8012396:	9101      	str	r1, [sp, #4]
 8012398:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801239c:	fb00 2404 	mla	r4, r0, r4, r2
 80123a0:	6832      	ldr	r2, [r6, #0]
 80123a2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80123a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80123aa:	682a      	ldr	r2, [r5, #0]
 80123ac:	9202      	str	r2, [sp, #8]
 80123ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80123b2:	9a01      	ldr	r2, [sp, #4]
 80123b4:	2a00      	cmp	r2, #0
 80123b6:	dc03      	bgt.n	80123c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80123b8:	f1bb 0f00 	cmp.w	fp, #0
 80123bc:	f340 809a 	ble.w	80124f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80123c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80123c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80123c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80123ca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80123ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80123d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80123d4:	2b00      	cmp	r3, #0
 80123d6:	dd0c      	ble.n	80123f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80123d8:	1406      	asrs	r6, r0, #16
 80123da:	d405      	bmi.n	80123e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80123dc:	454e      	cmp	r6, r9
 80123de:	da03      	bge.n	80123e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80123e0:	1416      	asrs	r6, r2, #16
 80123e2:	d401      	bmi.n	80123e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80123e4:	4546      	cmp	r6, r8
 80123e6:	db05      	blt.n	80123f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80123e8:	4470      	add	r0, lr
 80123ea:	4462      	add	r2, ip
 80123ec:	3b01      	subs	r3, #1
 80123ee:	3402      	adds	r4, #2
 80123f0:	e7f0      	b.n	80123d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80123f2:	d00f      	beq.n	8012414 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80123f4:	1e5e      	subs	r6, r3, #1
 80123f6:	fb0e 0706 	mla	r7, lr, r6, r0
 80123fa:	143f      	asrs	r7, r7, #16
 80123fc:	d541      	bpl.n	8012482 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80123fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012402:	4698      	mov	r8, r3
 8012404:	9603      	str	r6, [sp, #12]
 8012406:	f1b8 0f00 	cmp.w	r8, #0
 801240a:	dc56      	bgt.n	80124ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801240c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012410:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012414:	9b01      	ldr	r3, [sp, #4]
 8012416:	2b00      	cmp	r3, #0
 8012418:	dd6c      	ble.n	80124f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801241a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801241e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012422:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012426:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012428:	ee31 1a05 	vadd.f32	s2, s2, s10
 801242c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012430:	eeb0 6a62 	vmov.f32	s12, s5
 8012434:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012438:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801243c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012440:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012444:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012448:	eeb0 6a43 	vmov.f32	s12, s6
 801244c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012450:	ee12 2a90 	vmov	r2, s5
 8012454:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012458:	fb92 fef3 	sdiv	lr, r2, r3
 801245c:	ee13 2a10 	vmov	r2, s6
 8012460:	fb92 fcf3 	sdiv	ip, r2, r3
 8012464:	9b01      	ldr	r3, [sp, #4]
 8012466:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801246a:	3b01      	subs	r3, #1
 801246c:	9301      	str	r3, [sp, #4]
 801246e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012472:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012474:	eeb0 3a67 	vmov.f32	s6, s15
 8012478:	bf08      	it	eq
 801247a:	465b      	moveq	r3, fp
 801247c:	eef0 2a47 	vmov.f32	s5, s14
 8012480:	e797      	b.n	80123b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012482:	454f      	cmp	r7, r9
 8012484:	dabb      	bge.n	80123fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012486:	fb0c 2606 	mla	r6, ip, r6, r2
 801248a:	1436      	asrs	r6, r6, #16
 801248c:	d4b7      	bmi.n	80123fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801248e:	4546      	cmp	r6, r8
 8012490:	dab5      	bge.n	80123fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012492:	461e      	mov	r6, r3
 8012494:	46a0      	mov	r8, r4
 8012496:	2e00      	cmp	r6, #0
 8012498:	ddb8      	ble.n	801240c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801249a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801249e:	9902      	ldr	r1, [sp, #8]
 80124a0:	1417      	asrs	r7, r2, #16
 80124a2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80124a6:	fb0a 9707 	mla	r7, sl, r7, r9
 80124aa:	4470      	add	r0, lr
 80124ac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80124b0:	f828 7b02 	strh.w	r7, [r8], #2
 80124b4:	4462      	add	r2, ip
 80124b6:	3e01      	subs	r6, #1
 80124b8:	e7ed      	b.n	8012496 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80124ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 80124be:	d414      	bmi.n	80124ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80124c0:	68ae      	ldr	r6, [r5, #8]
 80124c2:	454e      	cmp	r6, r9
 80124c4:	dd11      	ble.n	80124ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80124c6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80124ca:	d40e      	bmi.n	80124ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80124cc:	68ef      	ldr	r7, [r5, #12]
 80124ce:	4557      	cmp	r7, sl
 80124d0:	dd0b      	ble.n	80124ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80124d2:	b236      	sxth	r6, r6
 80124d4:	fb0a 9606 	mla	r6, sl, r6, r9
 80124d8:	9f02      	ldr	r7, [sp, #8]
 80124da:	f06f 0101 	mvn.w	r1, #1
 80124de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80124e2:	fb01 f608 	mul.w	r6, r1, r8
 80124e6:	9903      	ldr	r1, [sp, #12]
 80124e8:	538f      	strh	r7, [r1, r6]
 80124ea:	4470      	add	r0, lr
 80124ec:	4462      	add	r2, ip
 80124ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80124f2:	e788      	b.n	8012406 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124f4:	b005      	add	sp, #20
 80124f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080124fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80124fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124fe:	b087      	sub	sp, #28
 8012500:	468b      	mov	fp, r1
 8012502:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012504:	9203      	str	r2, [sp, #12]
 8012506:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801250a:	9204      	str	r2, [sp, #16]
 801250c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012510:	6841      	ldr	r1, [r0, #4]
 8012512:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012516:	fb01 2505 	mla	r5, r1, r5, r2
 801251a:	6802      	ldr	r2, [r0, #0]
 801251c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012520:	f8d9 2000 	ldr.w	r2, [r9]
 8012524:	9201      	str	r2, [sp, #4]
 8012526:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801252a:	f1bb 0f00 	cmp.w	fp, #0
 801252e:	dc03      	bgt.n	8012538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012530:	9a03      	ldr	r2, [sp, #12]
 8012532:	2a00      	cmp	r2, #0
 8012534:	f340 8159 	ble.w	80127ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8012538:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801253a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801253e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012542:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012546:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012548:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801254c:	2b00      	cmp	r3, #0
 801254e:	dd0e      	ble.n	801256e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012550:	1402      	asrs	r2, r0, #16
 8012552:	d405      	bmi.n	8012560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012554:	42ba      	cmp	r2, r7
 8012556:	da03      	bge.n	8012560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012558:	140a      	asrs	r2, r1, #16
 801255a:	d401      	bmi.n	8012560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801255c:	42b2      	cmp	r2, r6
 801255e:	db07      	blt.n	8012570 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012560:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012562:	4410      	add	r0, r2
 8012564:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012566:	3b01      	subs	r3, #1
 8012568:	4411      	add	r1, r2
 801256a:	3502      	adds	r5, #2
 801256c:	e7ee      	b.n	801254c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801256e:	d017      	beq.n	80125a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012570:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012572:	1e5a      	subs	r2, r3, #1
 8012574:	fb04 0402 	mla	r4, r4, r2, r0
 8012578:	1424      	asrs	r4, r4, #16
 801257a:	d409      	bmi.n	8012590 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801257c:	42bc      	cmp	r4, r7
 801257e:	da07      	bge.n	8012590 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012580:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012582:	fb04 1202 	mla	r2, r4, r2, r1
 8012586:	1412      	asrs	r2, r2, #16
 8012588:	d402      	bmi.n	8012590 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801258a:	42b2      	cmp	r2, r6
 801258c:	f2c0 80bf 	blt.w	801270e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012590:	2700      	movs	r7, #0
 8012592:	19da      	adds	r2, r3, r7
 8012594:	2a00      	cmp	r2, #0
 8012596:	dc3e      	bgt.n	8012616 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012598:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801259c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80125a0:	f1bb 0f00 	cmp.w	fp, #0
 80125a4:	f340 8121 	ble.w	80127ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80125a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80125ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80125b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80125b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80125ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80125be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80125c2:	eeb0 6a62 	vmov.f32	s12, s5
 80125c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80125ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80125d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80125d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80125da:	eeb0 6a43 	vmov.f32	s12, s6
 80125de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80125e2:	ee12 2a90 	vmov	r2, s5
 80125e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80125ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80125ee:	ee13 2a10 	vmov	r2, s6
 80125f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80125f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80125fe:	9a03      	ldr	r2, [sp, #12]
 8012600:	9314      	str	r3, [sp, #80]	; 0x50
 8012602:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012606:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012608:	eeb0 3a67 	vmov.f32	s6, s15
 801260c:	bf08      	it	eq
 801260e:	4613      	moveq	r3, r2
 8012610:	eef0 2a47 	vmov.f32	s5, s14
 8012614:	e789      	b.n	801252a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012616:	1406      	asrs	r6, r0, #16
 8012618:	d42d      	bmi.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801261a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801261e:	42b4      	cmp	r4, r6
 8012620:	dd29      	ble.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012622:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012626:	d426      	bmi.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012628:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801262c:	4562      	cmp	r2, ip
 801262e:	dd22      	ble.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012630:	b224      	sxth	r4, r4
 8012632:	9a01      	ldr	r2, [sp, #4]
 8012634:	fb0c 6404 	mla	r4, ip, r4, r6
 8012638:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801263c:	0e22      	lsrs	r2, r4, #24
 801263e:	d01a      	beq.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012640:	9e04      	ldr	r6, [sp, #16]
 8012642:	4372      	muls	r2, r6
 8012644:	1c56      	adds	r6, r2, #1
 8012646:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801264a:	1212      	asrs	r2, r2, #8
 801264c:	0a26      	lsrs	r6, r4, #8
 801264e:	2aff      	cmp	r2, #255	; 0xff
 8012650:	9605      	str	r6, [sp, #20]
 8012652:	d116      	bne.n	8012682 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012654:	f06f 0201 	mvn.w	r2, #1
 8012658:	fb02 fc07 	mul.w	ip, r2, r7
 801265c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012660:	0962      	lsrs	r2, r4, #5
 8012662:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012666:	f026 0607 	bic.w	r6, r6, #7
 801266a:	4316      	orrs	r6, r2
 801266c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012670:	4326      	orrs	r6, r4
 8012672:	f825 600c 	strh.w	r6, [r5, ip]
 8012676:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012678:	4410      	add	r0, r2
 801267a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801267c:	3f01      	subs	r7, #1
 801267e:	4411      	add	r1, r2
 8012680:	e787      	b.n	8012592 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012682:	f06f 0601 	mvn.w	r6, #1
 8012686:	437e      	muls	r6, r7
 8012688:	fa1f fa82 	uxth.w	sl, r2
 801268c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012690:	9602      	str	r6, [sp, #8]
 8012692:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012696:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801269a:	43d2      	mvns	r2, r2
 801269c:	b2d2      	uxtb	r2, r2
 801269e:	fb1c fc0a 	smulbb	ip, ip, sl
 80126a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80126a6:	fb0e ce02 	mla	lr, lr, r2, ip
 80126aa:	b2e4      	uxtb	r4, r4
 80126ac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80126b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80126b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80126b8:	fa5f f888 	uxtb.w	r8, r8
 80126bc:	fb14 f40a 	smulbb	r4, r4, sl
 80126c0:	fb08 4402 	mla	r4, r8, r2, r4
 80126c4:	fa1f fe8e 	uxth.w	lr, lr
 80126c8:	fb16 f60a 	smulbb	r6, r6, sl
 80126cc:	b2a4      	uxth	r4, r4
 80126ce:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80126d2:	fb0c 6c02 	mla	ip, ip, r2, r6
 80126d6:	f10e 0201 	add.w	r2, lr, #1
 80126da:	1c66      	adds	r6, r4, #1
 80126dc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80126e0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80126e4:	fa1f fc8c 	uxth.w	ip, ip
 80126e8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80126ec:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80126f0:	ea46 0e0e 	orr.w	lr, r6, lr
 80126f4:	f10c 0601 	add.w	r6, ip, #1
 80126f8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80126fc:	0976      	lsrs	r6, r6, #5
 80126fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012702:	9a02      	ldr	r2, [sp, #8]
 8012704:	ea4e 0e06 	orr.w	lr, lr, r6
 8012708:	f825 e002 	strh.w	lr, [r5, r2]
 801270c:	e7b3      	b.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801270e:	f04f 0800 	mov.w	r8, #0
 8012712:	eba3 0208 	sub.w	r2, r3, r8
 8012716:	2a00      	cmp	r2, #0
 8012718:	f77f af3e 	ble.w	8012598 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801271c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012720:	1404      	asrs	r4, r0, #16
 8012722:	140a      	asrs	r2, r1, #16
 8012724:	fb06 4202 	mla	r2, r6, r2, r4
 8012728:	9c01      	ldr	r4, [sp, #4]
 801272a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801272e:	0e22      	lsrs	r2, r4, #24
 8012730:	d016      	beq.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8012732:	9e04      	ldr	r6, [sp, #16]
 8012734:	4372      	muls	r2, r6
 8012736:	1c56      	adds	r6, r2, #1
 8012738:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801273c:	1212      	asrs	r2, r2, #8
 801273e:	2aff      	cmp	r2, #255	; 0xff
 8012740:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012744:	d113      	bne.n	801276e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8012746:	0962      	lsrs	r2, r4, #5
 8012748:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801274c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012750:	f026 0607 	bic.w	r6, r6, #7
 8012754:	4316      	orrs	r6, r2
 8012756:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801275a:	4326      	orrs	r6, r4
 801275c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012760:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012762:	4410      	add	r0, r2
 8012764:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012766:	f108 0801 	add.w	r8, r8, #1
 801276a:	4411      	add	r1, r2
 801276c:	e7d1      	b.n	8012712 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801276e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012772:	fa1f fa82 	uxth.w	sl, r2
 8012776:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801277a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801277e:	43d2      	mvns	r2, r2
 8012780:	b2d2      	uxtb	r2, r2
 8012782:	fb17 f70a 	smulbb	r7, r7, sl
 8012786:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801278a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801278e:	b2e4      	uxtb	r4, r4
 8012790:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012794:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012798:	fa5f fe8e 	uxtb.w	lr, lr
 801279c:	fb14 f40a 	smulbb	r4, r4, sl
 80127a0:	fb0e 4402 	mla	r4, lr, r2, r4
 80127a4:	b2f6      	uxtb	r6, r6
 80127a6:	fa1f fc8c 	uxth.w	ip, ip
 80127aa:	fb16 f60a 	smulbb	r6, r6, sl
 80127ae:	b2a4      	uxth	r4, r4
 80127b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80127b4:	fb07 6702 	mla	r7, r7, r2, r6
 80127b8:	f10c 0201 	add.w	r2, ip, #1
 80127bc:	1c66      	adds	r6, r4, #1
 80127be:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80127c2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80127c6:	b2bf      	uxth	r7, r7
 80127c8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80127cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80127d0:	ea46 0c0c 	orr.w	ip, r6, ip
 80127d4:	1c7e      	adds	r6, r7, #1
 80127d6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80127da:	0976      	lsrs	r6, r6, #5
 80127dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80127e0:	ea4c 0c06 	orr.w	ip, ip, r6
 80127e4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80127e8:	e7ba      	b.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80127ea:	b007      	add	sp, #28
 80127ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080127f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80127f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127f4:	b085      	sub	sp, #20
 80127f6:	468b      	mov	fp, r1
 80127f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80127fa:	9203      	str	r2, [sp, #12]
 80127fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012800:	6841      	ldr	r1, [r0, #4]
 8012802:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012806:	fb01 2404 	mla	r4, r1, r4, r2
 801280a:	6802      	ldr	r2, [r0, #0]
 801280c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012810:	f8d8 2000 	ldr.w	r2, [r8]
 8012814:	9201      	str	r2, [sp, #4]
 8012816:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801281a:	f1bb 0f00 	cmp.w	fp, #0
 801281e:	dc03      	bgt.n	8012828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012820:	9a03      	ldr	r2, [sp, #12]
 8012822:	2a00      	cmp	r2, #0
 8012824:	f340 814f 	ble.w	8012ac6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012828:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801282a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801282e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012832:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012836:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012838:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801283c:	2b00      	cmp	r3, #0
 801283e:	dd0e      	ble.n	801285e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012840:	1408      	asrs	r0, r1, #16
 8012842:	d405      	bmi.n	8012850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012844:	42b8      	cmp	r0, r7
 8012846:	da03      	bge.n	8012850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012848:	1410      	asrs	r0, r2, #16
 801284a:	d401      	bmi.n	8012850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801284c:	42b0      	cmp	r0, r6
 801284e:	db07      	blt.n	8012860 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012850:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012852:	4401      	add	r1, r0
 8012854:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012856:	3b01      	subs	r3, #1
 8012858:	4402      	add	r2, r0
 801285a:	3402      	adds	r4, #2
 801285c:	e7ee      	b.n	801283c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801285e:	d017      	beq.n	8012890 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012860:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012862:	1e58      	subs	r0, r3, #1
 8012864:	fb05 1500 	mla	r5, r5, r0, r1
 8012868:	142d      	asrs	r5, r5, #16
 801286a:	d409      	bmi.n	8012880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801286c:	42bd      	cmp	r5, r7
 801286e:	da07      	bge.n	8012880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012870:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012872:	fb05 2000 	mla	r0, r5, r0, r2
 8012876:	1400      	asrs	r0, r0, #16
 8012878:	d402      	bmi.n	8012880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801287a:	42b0      	cmp	r0, r6
 801287c:	f2c0 80ba 	blt.w	80129f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012880:	2600      	movs	r6, #0
 8012882:	1998      	adds	r0, r3, r6
 8012884:	2800      	cmp	r0, #0
 8012886:	dc3e      	bgt.n	8012906 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012888:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801288c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012890:	f1bb 0f00 	cmp.w	fp, #0
 8012894:	f340 8117 	ble.w	8012ac6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012898:	ee30 0a04 	vadd.f32	s0, s0, s8
 801289c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80128a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80128a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80128aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80128ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80128b2:	eeb0 6a62 	vmov.f32	s12, s5
 80128b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80128ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80128be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80128c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80128c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80128ca:	eeb0 6a43 	vmov.f32	s12, s6
 80128ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80128d2:	ee12 2a90 	vmov	r2, s5
 80128d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80128da:	fb92 f3f3 	sdiv	r3, r2, r3
 80128de:	ee13 2a10 	vmov	r2, s6
 80128e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80128e6:	9311      	str	r3, [sp, #68]	; 0x44
 80128e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80128ee:	9a03      	ldr	r2, [sp, #12]
 80128f0:	9312      	str	r3, [sp, #72]	; 0x48
 80128f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80128f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128f8:	eeb0 3a67 	vmov.f32	s6, s15
 80128fc:	bf08      	it	eq
 80128fe:	4613      	moveq	r3, r2
 8012900:	eef0 2a47 	vmov.f32	s5, s14
 8012904:	e789      	b.n	801281a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012906:	140f      	asrs	r7, r1, #16
 8012908:	d424      	bmi.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801290a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801290e:	42bd      	cmp	r5, r7
 8012910:	dd20      	ble.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012912:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012916:	d41d      	bmi.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012918:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801291c:	4560      	cmp	r0, ip
 801291e:	dd19      	ble.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012920:	b22d      	sxth	r5, r5
 8012922:	fb0c 7505 	mla	r5, ip, r5, r7
 8012926:	9801      	ldr	r0, [sp, #4]
 8012928:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801292c:	0e07      	lsrs	r7, r0, #24
 801292e:	2fff      	cmp	r7, #255	; 0xff
 8012930:	d116      	bne.n	8012960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012932:	f06f 0501 	mvn.w	r5, #1
 8012936:	fb05 f706 	mul.w	r7, r5, r6
 801293a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801293e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012942:	0945      	lsrs	r5, r0, #5
 8012944:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012948:	ea4c 0505 	orr.w	r5, ip, r5
 801294c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012950:	4305      	orrs	r5, r0
 8012952:	53e5      	strh	r5, [r4, r7]
 8012954:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012956:	4401      	add	r1, r0
 8012958:	9812      	ldr	r0, [sp, #72]	; 0x48
 801295a:	3e01      	subs	r6, #1
 801295c:	4402      	add	r2, r0
 801295e:	e790      	b.n	8012882 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012960:	b2fd      	uxtb	r5, r7
 8012962:	2f00      	cmp	r7, #0
 8012964:	d0f6      	beq.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012966:	f06f 0701 	mvn.w	r7, #1
 801296a:	4377      	muls	r7, r6
 801296c:	fa1f f985 	uxth.w	r9, r5
 8012970:	f834 e007 	ldrh.w	lr, [r4, r7]
 8012974:	9702      	str	r7, [sp, #8]
 8012976:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801297a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801297e:	43ed      	mvns	r5, r5
 8012980:	b2ed      	uxtb	r5, r5
 8012982:	fb17 f709 	smulbb	r7, r7, r9
 8012986:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801298a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801298e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012992:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012996:	b2c0      	uxtb	r0, r0
 8012998:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801299c:	fa5f fe8e 	uxtb.w	lr, lr
 80129a0:	fb10 f009 	smulbb	r0, r0, r9
 80129a4:	fb0e 0005 	mla	r0, lr, r5, r0
 80129a8:	b280      	uxth	r0, r0
 80129aa:	fa1f fc8c 	uxth.w	ip, ip
 80129ae:	fb1a fa09 	smulbb	sl, sl, r9
 80129b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80129b6:	fb07 a705 	mla	r7, r7, r5, sl
 80129ba:	f100 0a01 	add.w	sl, r0, #1
 80129be:	f10c 0501 	add.w	r5, ip, #1
 80129c2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80129c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80129ca:	b2bf      	uxth	r7, r7
 80129cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80129d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80129d4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80129d8:	f107 0a01 	add.w	sl, r7, #1
 80129dc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80129e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80129e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80129e8:	9802      	ldr	r0, [sp, #8]
 80129ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80129ee:	f824 c000 	strh.w	ip, [r4, r0]
 80129f2:	e7af      	b.n	8012954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80129f4:	f04f 0e00 	mov.w	lr, #0
 80129f8:	eba3 000e 	sub.w	r0, r3, lr
 80129fc:	2800      	cmp	r0, #0
 80129fe:	f77f af43 	ble.w	8012888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012a02:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012a06:	140d      	asrs	r5, r1, #16
 8012a08:	1410      	asrs	r0, r2, #16
 8012a0a:	fb06 5000 	mla	r0, r6, r0, r5
 8012a0e:	9d01      	ldr	r5, [sp, #4]
 8012a10:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012a14:	0e2e      	lsrs	r6, r5, #24
 8012a16:	2eff      	cmp	r6, #255	; 0xff
 8012a18:	d112      	bne.n	8012a40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8012a1a:	482c      	ldr	r0, [pc, #176]	; (8012acc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012a1c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012a20:	0968      	lsrs	r0, r5, #5
 8012a22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012a26:	4330      	orrs	r0, r6
 8012a28:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012a2c:	4328      	orrs	r0, r5
 8012a2e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8012a32:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012a34:	4401      	add	r1, r0
 8012a36:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012a38:	f10e 0e01 	add.w	lr, lr, #1
 8012a3c:	4402      	add	r2, r0
 8012a3e:	e7db      	b.n	80129f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8012a40:	b2f0      	uxtb	r0, r6
 8012a42:	2e00      	cmp	r6, #0
 8012a44:	d0f5      	beq.n	8012a32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012a46:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012a4a:	fa1f f980 	uxth.w	r9, r0
 8012a4e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012a52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012a56:	43c0      	mvns	r0, r0
 8012a58:	b2c0      	uxtb	r0, r0
 8012a5a:	fb16 f609 	smulbb	r6, r6, r9
 8012a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012a62:	fb07 6700 	mla	r7, r7, r0, r6
 8012a66:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012a6a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012a6e:	b2ed      	uxtb	r5, r5
 8012a70:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012a74:	fa5f fc8c 	uxtb.w	ip, ip
 8012a78:	fb15 f509 	smulbb	r5, r5, r9
 8012a7c:	fb0c 5500 	mla	r5, ip, r0, r5
 8012a80:	b2bf      	uxth	r7, r7
 8012a82:	fb1a fa09 	smulbb	sl, sl, r9
 8012a86:	b2ad      	uxth	r5, r5
 8012a88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012a8c:	fb06 a600 	mla	r6, r6, r0, sl
 8012a90:	1c78      	adds	r0, r7, #1
 8012a92:	f105 0a01 	add.w	sl, r5, #1
 8012a96:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012a9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012a9e:	b2b6      	uxth	r6, r6
 8012aa0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012aa4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012aa8:	ea4a 0707 	orr.w	r7, sl, r7
 8012aac:	f106 0a01 	add.w	sl, r6, #1
 8012ab0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012ab4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012ab8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012abc:	ea47 070a 	orr.w	r7, r7, sl
 8012ac0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012ac4:	e7b5      	b.n	8012a32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012ac6:	b005      	add	sp, #20
 8012ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012acc:	fffff800 	.word	0xfffff800

08012ad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ad4:	b087      	sub	sp, #28
 8012ad6:	468b      	mov	fp, r1
 8012ad8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012ada:	9203      	str	r2, [sp, #12]
 8012adc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012ae0:	9204      	str	r2, [sp, #16]
 8012ae2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012ae6:	6841      	ldr	r1, [r0, #4]
 8012ae8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012aec:	fb01 2404 	mla	r4, r1, r4, r2
 8012af0:	6802      	ldr	r2, [r0, #0]
 8012af2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012af6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012afa:	3201      	adds	r2, #1
 8012afc:	f022 0201 	bic.w	r2, r2, #1
 8012b00:	9200      	str	r2, [sp, #0]
 8012b02:	f8d9 2000 	ldr.w	r2, [r9]
 8012b06:	9201      	str	r2, [sp, #4]
 8012b08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b0c:	f1bb 0f00 	cmp.w	fp, #0
 8012b10:	dc03      	bgt.n	8012b1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012b12:	9a03      	ldr	r2, [sp, #12]
 8012b14:	2a00      	cmp	r2, #0
 8012b16:	f340 8169 	ble.w	8012dec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8012b1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012b1c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012b20:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012b24:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012b28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012b2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	dd0e      	ble.n	8012b50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012b32:	1402      	asrs	r2, r0, #16
 8012b34:	d405      	bmi.n	8012b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012b36:	42ba      	cmp	r2, r7
 8012b38:	da03      	bge.n	8012b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012b3a:	140a      	asrs	r2, r1, #16
 8012b3c:	d401      	bmi.n	8012b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012b3e:	42b2      	cmp	r2, r6
 8012b40:	db07      	blt.n	8012b52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8012b42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012b44:	4410      	add	r0, r2
 8012b46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012b48:	3b01      	subs	r3, #1
 8012b4a:	4411      	add	r1, r2
 8012b4c:	3402      	adds	r4, #2
 8012b4e:	e7ee      	b.n	8012b2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012b50:	d017      	beq.n	8012b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012b52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012b54:	1e5a      	subs	r2, r3, #1
 8012b56:	fb05 0502 	mla	r5, r5, r2, r0
 8012b5a:	142d      	asrs	r5, r5, #16
 8012b5c:	d409      	bmi.n	8012b72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012b5e:	42bd      	cmp	r5, r7
 8012b60:	da07      	bge.n	8012b72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012b62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012b64:	fb05 1202 	mla	r2, r5, r2, r1
 8012b68:	1412      	asrs	r2, r2, #16
 8012b6a:	d402      	bmi.n	8012b72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012b6c:	42b2      	cmp	r2, r6
 8012b6e:	f2c0 80c7 	blt.w	8012d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8012b72:	2700      	movs	r7, #0
 8012b74:	19da      	adds	r2, r3, r7
 8012b76:	2a00      	cmp	r2, #0
 8012b78:	dc3e      	bgt.n	8012bf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012b7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012b7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b82:	f1bb 0f00 	cmp.w	fp, #0
 8012b86:	f340 8131 	ble.w	8012dec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8012b8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012b8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012b92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012b96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012b98:	f1bb 0b01 	subs.w	fp, fp, #1
 8012b9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ba0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ba4:	eeb0 6a62 	vmov.f32	s12, s5
 8012ba8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012bac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012bb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012bb4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012bb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012bbc:	eeb0 6a43 	vmov.f32	s12, s6
 8012bc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012bc4:	ee12 2a90 	vmov	r2, s5
 8012bc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012bcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8012bd0:	ee13 2a10 	vmov	r2, s6
 8012bd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012bd8:	9313      	str	r3, [sp, #76]	; 0x4c
 8012bda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012bdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8012be0:	9a03      	ldr	r2, [sp, #12]
 8012be2:	9314      	str	r3, [sp, #80]	; 0x50
 8012be4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012be8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012bea:	eeb0 3a67 	vmov.f32	s6, s15
 8012bee:	bf08      	it	eq
 8012bf0:	4613      	moveq	r3, r2
 8012bf2:	eef0 2a47 	vmov.f32	s5, s14
 8012bf6:	e789      	b.n	8012b0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012bf8:	1405      	asrs	r5, r0, #16
 8012bfa:	d435      	bmi.n	8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012bfc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012c00:	42aa      	cmp	r2, r5
 8012c02:	dd31      	ble.n	8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012c04:	140e      	asrs	r6, r1, #16
 8012c06:	d42f      	bmi.n	8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012c08:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012c0c:	42b2      	cmp	r2, r6
 8012c0e:	dd2b      	ble.n	8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012c10:	9a00      	ldr	r2, [sp, #0]
 8012c12:	fb06 5502 	mla	r5, r6, r2, r5
 8012c16:	086a      	lsrs	r2, r5, #1
 8012c18:	9e01      	ldr	r6, [sp, #4]
 8012c1a:	5cb2      	ldrb	r2, [r6, r2]
 8012c1c:	07ee      	lsls	r6, r5, #31
 8012c1e:	bf54      	ite	pl
 8012c20:	f002 020f 	andpl.w	r2, r2, #15
 8012c24:	1112      	asrmi	r2, r2, #4
 8012c26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012c2a:	b2d2      	uxtb	r2, r2
 8012c2c:	b1e2      	cbz	r2, 8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012c2e:	9d04      	ldr	r5, [sp, #16]
 8012c30:	436a      	muls	r2, r5
 8012c32:	1c55      	adds	r5, r2, #1
 8012c34:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012c38:	4d6e      	ldr	r5, [pc, #440]	; (8012df4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012c3a:	682d      	ldr	r5, [r5, #0]
 8012c3c:	1212      	asrs	r2, r2, #8
 8012c3e:	0a2e      	lsrs	r6, r5, #8
 8012c40:	2aff      	cmp	r2, #255	; 0xff
 8012c42:	9605      	str	r6, [sp, #20]
 8012c44:	d116      	bne.n	8012c74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8012c46:	f06f 0201 	mvn.w	r2, #1
 8012c4a:	fb02 fc07 	mul.w	ip, r2, r7
 8012c4e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012c52:	096a      	lsrs	r2, r5, #5
 8012c54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012c58:	f026 0607 	bic.w	r6, r6, #7
 8012c5c:	4316      	orrs	r6, r2
 8012c5e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012c62:	432e      	orrs	r6, r5
 8012c64:	f824 600c 	strh.w	r6, [r4, ip]
 8012c68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012c6a:	4410      	add	r0, r2
 8012c6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012c6e:	3f01      	subs	r7, #1
 8012c70:	4411      	add	r1, r2
 8012c72:	e77f      	b.n	8012b74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8012c74:	f06f 0601 	mvn.w	r6, #1
 8012c78:	437e      	muls	r6, r7
 8012c7a:	fa1f fa82 	uxth.w	sl, r2
 8012c7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8012c82:	9602      	str	r6, [sp, #8]
 8012c84:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012c88:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8012c8c:	43d2      	mvns	r2, r2
 8012c8e:	b2d2      	uxtb	r2, r2
 8012c90:	fb1c fc0a 	smulbb	ip, ip, sl
 8012c94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012c98:	fb0e ce02 	mla	lr, lr, r2, ip
 8012c9c:	b2ed      	uxtb	r5, r5
 8012c9e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012ca2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012ca6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012caa:	fa5f f888 	uxtb.w	r8, r8
 8012cae:	fb15 f50a 	smulbb	r5, r5, sl
 8012cb2:	fb08 5502 	mla	r5, r8, r2, r5
 8012cb6:	fa1f fe8e 	uxth.w	lr, lr
 8012cba:	fb16 f60a 	smulbb	r6, r6, sl
 8012cbe:	b2ad      	uxth	r5, r5
 8012cc0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012cc4:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012cc8:	f10e 0201 	add.w	r2, lr, #1
 8012ccc:	1c6e      	adds	r6, r5, #1
 8012cce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012cd2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8012cd6:	fa1f fc8c 	uxth.w	ip, ip
 8012cda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012cde:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012ce2:	ea46 0e0e 	orr.w	lr, r6, lr
 8012ce6:	f10c 0601 	add.w	r6, ip, #1
 8012cea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012cee:	0976      	lsrs	r6, r6, #5
 8012cf0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012cf4:	9a02      	ldr	r2, [sp, #8]
 8012cf6:	ea4e 0e06 	orr.w	lr, lr, r6
 8012cfa:	f824 e002 	strh.w	lr, [r4, r2]
 8012cfe:	e7b3      	b.n	8012c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012d00:	f04f 0800 	mov.w	r8, #0
 8012d04:	eba3 0208 	sub.w	r2, r3, r8
 8012d08:	2a00      	cmp	r2, #0
 8012d0a:	f77f af36 	ble.w	8012b7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012d0e:	9e00      	ldr	r6, [sp, #0]
 8012d10:	1402      	asrs	r2, r0, #16
 8012d12:	140d      	asrs	r5, r1, #16
 8012d14:	fb06 2505 	mla	r5, r6, r5, r2
 8012d18:	086a      	lsrs	r2, r5, #1
 8012d1a:	9e01      	ldr	r6, [sp, #4]
 8012d1c:	5cb2      	ldrb	r2, [r6, r2]
 8012d1e:	07ed      	lsls	r5, r5, #31
 8012d20:	bf54      	ite	pl
 8012d22:	f002 020f 	andpl.w	r2, r2, #15
 8012d26:	1112      	asrmi	r2, r2, #4
 8012d28:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012d2c:	b2d2      	uxtb	r2, r2
 8012d2e:	b1c2      	cbz	r2, 8012d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012d30:	9d04      	ldr	r5, [sp, #16]
 8012d32:	436a      	muls	r2, r5
 8012d34:	1c55      	adds	r5, r2, #1
 8012d36:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012d3a:	4d2e      	ldr	r5, [pc, #184]	; (8012df4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012d3c:	1212      	asrs	r2, r2, #8
 8012d3e:	682e      	ldr	r6, [r5, #0]
 8012d40:	2aff      	cmp	r2, #255	; 0xff
 8012d42:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8012d46:	d113      	bne.n	8012d70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012d48:	0972      	lsrs	r2, r6, #5
 8012d4a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8012d4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012d52:	f025 0507 	bic.w	r5, r5, #7
 8012d56:	4315      	orrs	r5, r2
 8012d58:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012d5c:	4335      	orrs	r5, r6
 8012d5e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8012d62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012d64:	4410      	add	r0, r2
 8012d66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012d68:	f108 0801 	add.w	r8, r8, #1
 8012d6c:	4411      	add	r1, r2
 8012d6e:	e7c9      	b.n	8012d04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8012d70:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012d74:	fa1f fa82 	uxth.w	sl, r2
 8012d78:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012d7c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8012d80:	43d2      	mvns	r2, r2
 8012d82:	b2d2      	uxtb	r2, r2
 8012d84:	fb17 f70a 	smulbb	r7, r7, sl
 8012d88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012d8c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012d90:	b2f6      	uxtb	r6, r6
 8012d92:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012d96:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012d9a:	fa5f fe8e 	uxtb.w	lr, lr
 8012d9e:	fb16 f60a 	smulbb	r6, r6, sl
 8012da2:	fb0e 6602 	mla	r6, lr, r2, r6
 8012da6:	b2ed      	uxtb	r5, r5
 8012da8:	fa1f fc8c 	uxth.w	ip, ip
 8012dac:	fb15 f50a 	smulbb	r5, r5, sl
 8012db0:	b2b6      	uxth	r6, r6
 8012db2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012db6:	fb07 5702 	mla	r7, r7, r2, r5
 8012dba:	f10c 0201 	add.w	r2, ip, #1
 8012dbe:	1c75      	adds	r5, r6, #1
 8012dc0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012dc4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8012dc8:	b2bf      	uxth	r7, r7
 8012dca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012dce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012dd2:	ea45 0c0c 	orr.w	ip, r5, ip
 8012dd6:	1c7d      	adds	r5, r7, #1
 8012dd8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012ddc:	096d      	lsrs	r5, r5, #5
 8012dde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012de2:	ea4c 0c05 	orr.w	ip, ip, r5
 8012de6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8012dea:	e7ba      	b.n	8012d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012dec:	b007      	add	sp, #28
 8012dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012df2:	bf00      	nop
 8012df4:	2000bfd4 	.word	0x2000bfd4

08012df8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dfc:	b087      	sub	sp, #28
 8012dfe:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801310c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012e02:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012e04:	9205      	str	r2, [sp, #20]
 8012e06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012e0a:	9101      	str	r1, [sp, #4]
 8012e0c:	6841      	ldr	r1, [r0, #4]
 8012e0e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8012e12:	fb01 2404 	mla	r4, r1, r4, r2
 8012e16:	6802      	ldr	r2, [r0, #0]
 8012e18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e1c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012e20:	3201      	adds	r2, #1
 8012e22:	f022 0201 	bic.w	r2, r2, #1
 8012e26:	9202      	str	r2, [sp, #8]
 8012e28:	f8db 2000 	ldr.w	r2, [fp]
 8012e2c:	9203      	str	r2, [sp, #12]
 8012e2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012e32:	9a01      	ldr	r2, [sp, #4]
 8012e34:	2a00      	cmp	r2, #0
 8012e36:	dc03      	bgt.n	8012e40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012e38:	9a05      	ldr	r2, [sp, #20]
 8012e3a:	2a00      	cmp	r2, #0
 8012e3c:	f340 8162 	ble.w	8013104 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012e40:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012e42:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8012e46:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8012e4a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012e4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012e50:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012e54:	2b00      	cmp	r3, #0
 8012e56:	dd0e      	ble.n	8012e76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012e58:	1402      	asrs	r2, r0, #16
 8012e5a:	d405      	bmi.n	8012e68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e5c:	42ba      	cmp	r2, r7
 8012e5e:	da03      	bge.n	8012e68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e60:	140a      	asrs	r2, r1, #16
 8012e62:	d401      	bmi.n	8012e68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e64:	42b2      	cmp	r2, r6
 8012e66:	db07      	blt.n	8012e78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012e68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012e6a:	4410      	add	r0, r2
 8012e6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012e6e:	3b01      	subs	r3, #1
 8012e70:	4411      	add	r1, r2
 8012e72:	3402      	adds	r4, #2
 8012e74:	e7ee      	b.n	8012e54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012e76:	d017      	beq.n	8012ea8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012e78:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012e7a:	1e5a      	subs	r2, r3, #1
 8012e7c:	fb05 0502 	mla	r5, r5, r2, r0
 8012e80:	142d      	asrs	r5, r5, #16
 8012e82:	d409      	bmi.n	8012e98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012e84:	42bd      	cmp	r5, r7
 8012e86:	da07      	bge.n	8012e98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012e88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012e8a:	fb05 1202 	mla	r2, r5, r2, r1
 8012e8e:	1412      	asrs	r2, r2, #16
 8012e90:	d402      	bmi.n	8012e98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012e92:	42b2      	cmp	r2, r6
 8012e94:	f2c0 80c3 	blt.w	801301e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8012e98:	2500      	movs	r5, #0
 8012e9a:	195a      	adds	r2, r3, r5
 8012e9c:	2a00      	cmp	r2, #0
 8012e9e:	dc3f      	bgt.n	8012f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012ea0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012ea4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ea8:	9b01      	ldr	r3, [sp, #4]
 8012eaa:	2b00      	cmp	r3, #0
 8012eac:	f340 812a 	ble.w	8013104 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012eb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012eb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012eb8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ebc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ebe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ec2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ec6:	eeb0 6a62 	vmov.f32	s12, s5
 8012eca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012ece:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ed2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ed6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012eda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ede:	eeb0 6a43 	vmov.f32	s12, s6
 8012ee2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ee6:	ee12 2a90 	vmov	r2, s5
 8012eea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012eee:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ef2:	ee13 2a10 	vmov	r2, s6
 8012ef6:	9313      	str	r3, [sp, #76]	; 0x4c
 8012ef8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012efa:	fb92 f3f3 	sdiv	r3, r2, r3
 8012efe:	9314      	str	r3, [sp, #80]	; 0x50
 8012f00:	9b01      	ldr	r3, [sp, #4]
 8012f02:	9a05      	ldr	r2, [sp, #20]
 8012f04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f08:	3b01      	subs	r3, #1
 8012f0a:	9301      	str	r3, [sp, #4]
 8012f0c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012f10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f12:	eeb0 3a67 	vmov.f32	s6, s15
 8012f16:	bf08      	it	eq
 8012f18:	4613      	moveq	r3, r2
 8012f1a:	eef0 2a47 	vmov.f32	s5, s14
 8012f1e:	e788      	b.n	8012e32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012f20:	1406      	asrs	r6, r0, #16
 8012f22:	d42c      	bmi.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012f24:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012f28:	42b2      	cmp	r2, r6
 8012f2a:	dd28      	ble.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012f2c:	140f      	asrs	r7, r1, #16
 8012f2e:	d426      	bmi.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012f30:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012f34:	42ba      	cmp	r2, r7
 8012f36:	dd22      	ble.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012f38:	9a02      	ldr	r2, [sp, #8]
 8012f3a:	fb07 6602 	mla	r6, r7, r2, r6
 8012f3e:	0872      	lsrs	r2, r6, #1
 8012f40:	9f03      	ldr	r7, [sp, #12]
 8012f42:	5cba      	ldrb	r2, [r7, r2]
 8012f44:	07f6      	lsls	r6, r6, #31
 8012f46:	bf54      	ite	pl
 8012f48:	f002 020f 	andpl.w	r2, r2, #15
 8012f4c:	1112      	asrmi	r2, r2, #4
 8012f4e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012f52:	b2d2      	uxtb	r2, r2
 8012f54:	2aff      	cmp	r2, #255	; 0xff
 8012f56:	d118      	bne.n	8012f8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012f58:	f8d8 2000 	ldr.w	r2, [r8]
 8012f5c:	f06f 0601 	mvn.w	r6, #1
 8012f60:	fb06 f705 	mul.w	r7, r6, r5
 8012f64:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8012f68:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8012f6c:	0956      	lsrs	r6, r2, #5
 8012f6e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012f72:	ea4c 0606 	orr.w	r6, ip, r6
 8012f76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012f7a:	4316      	orrs	r6, r2
 8012f7c:	53e6      	strh	r6, [r4, r7]
 8012f7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012f80:	4410      	add	r0, r2
 8012f82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012f84:	3d01      	subs	r5, #1
 8012f86:	4411      	add	r1, r2
 8012f88:	e787      	b.n	8012e9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012f8a:	2a00      	cmp	r2, #0
 8012f8c:	d0f7      	beq.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012f8e:	f06f 0601 	mvn.w	r6, #1
 8012f92:	436e      	muls	r6, r5
 8012f94:	f8d8 c000 	ldr.w	ip, [r8]
 8012f98:	f834 e006 	ldrh.w	lr, [r4, r6]
 8012f9c:	9604      	str	r6, [sp, #16]
 8012f9e:	fa1f f982 	uxth.w	r9, r2
 8012fa2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012fa6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8012faa:	43d2      	mvns	r2, r2
 8012fac:	b2d2      	uxtb	r2, r2
 8012fae:	fb16 f609 	smulbb	r6, r6, r9
 8012fb2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012fb6:	fb07 6702 	mla	r7, r7, r2, r6
 8012fba:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8012fbe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012fc2:	fa5f fc8c 	uxtb.w	ip, ip
 8012fc6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012fca:	fa5f fe8e 	uxtb.w	lr, lr
 8012fce:	fb1c fc09 	smulbb	ip, ip, r9
 8012fd2:	fb0e cc02 	mla	ip, lr, r2, ip
 8012fd6:	b2bf      	uxth	r7, r7
 8012fd8:	fb1a fa09 	smulbb	sl, sl, r9
 8012fdc:	fa1f fc8c 	uxth.w	ip, ip
 8012fe0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012fe4:	fb06 a602 	mla	r6, r6, r2, sl
 8012fe8:	1c7a      	adds	r2, r7, #1
 8012fea:	f10c 0a01 	add.w	sl, ip, #1
 8012fee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012ff2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8012ff6:	b2b6      	uxth	r6, r6
 8012ff8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012ffc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013000:	ea4a 0707 	orr.w	r7, sl, r7
 8013004:	f106 0a01 	add.w	sl, r6, #1
 8013008:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801300c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013010:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013014:	9a04      	ldr	r2, [sp, #16]
 8013016:	ea47 070a 	orr.w	r7, r7, sl
 801301a:	52a7      	strh	r7, [r4, r2]
 801301c:	e7af      	b.n	8012f7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801301e:	f04f 0e00 	mov.w	lr, #0
 8013022:	eba3 020e 	sub.w	r2, r3, lr
 8013026:	2a00      	cmp	r2, #0
 8013028:	f77f af3a 	ble.w	8012ea0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801302c:	9e02      	ldr	r6, [sp, #8]
 801302e:	1402      	asrs	r2, r0, #16
 8013030:	140d      	asrs	r5, r1, #16
 8013032:	fb06 2505 	mla	r5, r6, r5, r2
 8013036:	086a      	lsrs	r2, r5, #1
 8013038:	9e03      	ldr	r6, [sp, #12]
 801303a:	5cb2      	ldrb	r2, [r6, r2]
 801303c:	07ed      	lsls	r5, r5, #31
 801303e:	bf54      	ite	pl
 8013040:	f002 020f 	andpl.w	r2, r2, #15
 8013044:	1112      	asrmi	r2, r2, #4
 8013046:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801304a:	b2d2      	uxtb	r2, r2
 801304c:	2aff      	cmp	r2, #255	; 0xff
 801304e:	d115      	bne.n	801307c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8013050:	f8d8 5000 	ldr.w	r5, [r8]
 8013054:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8013058:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801305c:	096a      	lsrs	r2, r5, #5
 801305e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013062:	4332      	orrs	r2, r6
 8013064:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013068:	432a      	orrs	r2, r5
 801306a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801306e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013070:	4410      	add	r0, r2
 8013072:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013074:	f10e 0e01 	add.w	lr, lr, #1
 8013078:	4411      	add	r1, r2
 801307a:	e7d2      	b.n	8013022 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801307c:	2a00      	cmp	r2, #0
 801307e:	d0f6      	beq.n	801306e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013080:	f8d8 7000 	ldr.w	r7, [r8]
 8013084:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013088:	fa1f f982 	uxth.w	r9, r2
 801308c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013090:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8013094:	43d2      	mvns	r2, r2
 8013096:	b2d2      	uxtb	r2, r2
 8013098:	fb15 f509 	smulbb	r5, r5, r9
 801309c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80130a0:	fb06 5602 	mla	r6, r6, r2, r5
 80130a4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80130a8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80130ac:	b2ff      	uxtb	r7, r7
 80130ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80130b2:	fa5f fc8c 	uxtb.w	ip, ip
 80130b6:	fb17 f709 	smulbb	r7, r7, r9
 80130ba:	fb0c 7702 	mla	r7, ip, r2, r7
 80130be:	b2b6      	uxth	r6, r6
 80130c0:	fb1a fa09 	smulbb	sl, sl, r9
 80130c4:	b2bf      	uxth	r7, r7
 80130c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80130ca:	fb05 a502 	mla	r5, r5, r2, sl
 80130ce:	1c72      	adds	r2, r6, #1
 80130d0:	f107 0a01 	add.w	sl, r7, #1
 80130d4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80130d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80130dc:	b2ad      	uxth	r5, r5
 80130de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80130e2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80130e6:	ea4a 0606 	orr.w	r6, sl, r6
 80130ea:	f105 0a01 	add.w	sl, r5, #1
 80130ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80130f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80130f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80130fa:	ea46 060a 	orr.w	r6, r6, sl
 80130fe:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8013102:	e7b4      	b.n	801306e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013104:	b007      	add	sp, #28
 8013106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801310a:	bf00      	nop
 801310c:	2000bfd4 	.word	0x2000bfd4

08013110 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013110:	4770      	bx	lr

08013112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8013112:	4770      	bx	lr

08013114 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8013114:	4770      	bx	lr

08013116 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8013116:	4770      	bx	lr

08013118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8013118:	4770      	bx	lr

0801311a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801311a:	4770      	bx	lr

0801311c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801311c:	4770      	bx	lr

0801311e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801311e:	4770      	bx	lr

08013120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013120:	4770      	bx	lr

08013122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013122:	4770      	bx	lr

08013124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013124:	4770      	bx	lr

08013126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013126:	4770      	bx	lr

08013128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013128:	4770      	bx	lr

0801312a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801312a:	4770      	bx	lr

0801312c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801312c:	4770      	bx	lr

0801312e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801312e:	4770      	bx	lr

08013130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013130:	4770      	bx	lr

08013132 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013132:	4770      	bx	lr

08013134 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013134:	4770      	bx	lr

08013136 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013136:	4770      	bx	lr

08013138 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013138:	4770      	bx	lr

0801313a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801313a:	4770      	bx	lr

0801313c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801313c:	4770      	bx	lr

0801313e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801313e:	4770      	bx	lr

08013140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013140:	4770      	bx	lr

08013142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013142:	4770      	bx	lr

08013144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013144:	4770      	bx	lr

08013146 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013146:	4770      	bx	lr

08013148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013148:	4770      	bx	lr
	...

0801314c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801314c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013150:	4692      	mov	sl, r2
 8013152:	4a22      	ldr	r2, [pc, #136]	; (80131dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 8013154:	6812      	ldr	r2, [r2, #0]
 8013156:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801315a:	2a02      	cmp	r2, #2
 801315c:	b088      	sub	sp, #32
 801315e:	4605      	mov	r5, r0
 8013160:	4689      	mov	r9, r1
 8013162:	d106      	bne.n	8013172 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8013164:	4b1e      	ldr	r3, [pc, #120]	; (80131e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 8013166:	4a1f      	ldr	r2, [pc, #124]	; (80131e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8013168:	f44f 7158 	mov.w	r1, #864	; 0x360
 801316c:	481e      	ldr	r0, [pc, #120]	; (80131e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801316e:	f00a fa21 	bl	801d5b4 <__assert_func>
 8013172:	ac08      	add	r4, sp, #32
 8013174:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013178:	4620      	mov	r0, r4
 801317a:	f7fd fce3 	bl	8010b44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801317e:	682b      	ldr	r3, [r5, #0]
 8013180:	4606      	mov	r6, r0
 8013182:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013184:	4628      	mov	r0, r5
 8013186:	4798      	blx	r3
 8013188:	4286      	cmp	r6, r0
 801318a:	d004      	beq.n	8013196 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801318c:	4b17      	ldr	r3, [pc, #92]	; (80131ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801318e:	4a15      	ldr	r2, [pc, #84]	; (80131e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8013190:	f240 3162 	movw	r1, #866	; 0x362
 8013194:	e7ea      	b.n	801316c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013196:	4620      	mov	r0, r4
 8013198:	f7fd fc4a 	bl	8010a30 <_ZNK8touchgfx6Bitmap7getDataEv>
 801319c:	4606      	mov	r6, r0
 801319e:	b920      	cbnz	r0, 80131aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80131a0:	4b13      	ldr	r3, [pc, #76]	; (80131f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 80131a2:	4a10      	ldr	r2, [pc, #64]	; (80131e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 80131a4:	f44f 7159 	mov.w	r1, #868	; 0x364
 80131a8:	e7e0      	b.n	801316c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80131aa:	682b      	ldr	r3, [r5, #0]
 80131ac:	4620      	mov	r0, r4
 80131ae:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80131b2:	f7fd fb21 	bl	80107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131b6:	4607      	mov	r7, r0
 80131b8:	4620      	mov	r0, r4
 80131ba:	f7fd fb61 	bl	8010880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131be:	b23f      	sxth	r7, r7
 80131c0:	b200      	sxth	r0, r0
 80131c2:	9002      	str	r0, [sp, #8]
 80131c4:	e9cd 6700 	strd	r6, r7, [sp]
 80131c8:	a806      	add	r0, sp, #24
 80131ca:	4653      	mov	r3, sl
 80131cc:	464a      	mov	r2, r9
 80131ce:	4629      	mov	r1, r5
 80131d0:	47c0      	blx	r8
 80131d2:	4630      	mov	r0, r6
 80131d4:	b008      	add	sp, #32
 80131d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131da:	bf00      	nop
 80131dc:	2000bfcc 	.word	0x2000bfcc
 80131e0:	0802129a 	.word	0x0802129a
 80131e4:	08021b97 	.word	0x08021b97
 80131e8:	0802134c 	.word	0x0802134c
 80131ec:	0802137e 	.word	0x0802137e
 80131f0:	080213d3 	.word	0x080213d3

080131f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80131f4:	b508      	push	{r3, lr}
 80131f6:	4b06      	ldr	r3, [pc, #24]	; (8013210 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80131f8:	8818      	ldrh	r0, [r3, #0]
 80131fa:	b928      	cbnz	r0, 8013208 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80131fc:	4b05      	ldr	r3, [pc, #20]	; (8013214 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80131fe:	4a06      	ldr	r2, [pc, #24]	; (8013218 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8013200:	4806      	ldr	r0, [pc, #24]	; (801321c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8013202:	2153      	movs	r1, #83	; 0x53
 8013204:	f00a f9d6 	bl	801d5b4 <__assert_func>
 8013208:	0040      	lsls	r0, r0, #1
 801320a:	b280      	uxth	r0, r0
 801320c:	bd08      	pop	{r3, pc}
 801320e:	bf00      	nop
 8013210:	2000bfc6 	.word	0x2000bfc6
 8013214:	08021442 	.word	0x08021442
 8013218:	08021a54 	.word	0x08021a54
 801321c:	08021484 	.word	0x08021484

08013220 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8013220:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8013224:	2300      	movs	r3, #0
 8013226:	9300      	str	r3, [sp, #0]
 8013228:	4b3d      	ldr	r3, [pc, #244]	; (8013320 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801322a:	781b      	ldrb	r3, [r3, #0]
 801322c:	2b00      	cmp	r3, #0
 801322e:	d137      	bne.n	80132a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8013230:	4a3c      	ldr	r2, [pc, #240]	; (8013324 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013232:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013236:	f8ad 2004 	strh.w	r2, [sp, #4]
 801323a:	2b00      	cmp	r3, #0
 801323c:	d132      	bne.n	80132a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801323e:	4b3a      	ldr	r3, [pc, #232]	; (8013328 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013240:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013244:	6808      	ldr	r0, [r1, #0]
 8013246:	6849      	ldr	r1, [r1, #4]
 8013248:	f8ad 3006 	strh.w	r3, [sp, #6]
 801324c:	ac02      	add	r4, sp, #8
 801324e:	ab02      	add	r3, sp, #8
 8013250:	c303      	stmia	r3!, {r0, r1}
 8013252:	4669      	mov	r1, sp
 8013254:	4620      	mov	r0, r4
 8013256:	f7fa fc47 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801325a:	4668      	mov	r0, sp
 801325c:	f7fa fc1c 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013260:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013264:	f8bd 2000 	ldrh.w	r2, [sp]
 8013268:	4d30      	ldr	r5, [pc, #192]	; (801332c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801326a:	4413      	add	r3, r2
 801326c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013270:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013274:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013278:	6828      	ldr	r0, [r5, #0]
 801327a:	4413      	add	r3, r2
 801327c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013280:	6803      	ldr	r3, [r0, #0]
 8013282:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013284:	4798      	blx	r3
 8013286:	f010 0f01 	tst.w	r0, #1
 801328a:	462f      	mov	r7, r5
 801328c:	d00c      	beq.n	80132a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801328e:	6828      	ldr	r0, [r5, #0]
 8013290:	6803      	ldr	r3, [r0, #0]
 8013292:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013296:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013298:	4798      	blx	r3
 801329a:	b004      	add	sp, #16
 801329c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80132a0:	4a21      	ldr	r2, [pc, #132]	; (8013328 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80132a2:	e7c6      	b.n	8013232 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80132a4:	4b1f      	ldr	r3, [pc, #124]	; (8013324 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80132a6:	e7cb      	b.n	8013240 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80132a8:	6838      	ldr	r0, [r7, #0]
 80132aa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80132ae:	6803      	ldr	r3, [r0, #0]
 80132b0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80132b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80132b6:	4798      	blx	r3
 80132b8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80132bc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80132c0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80132c4:	fb16 3602 	smlabb	r6, r6, r2, r3
 80132c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80132cc:	6838      	ldr	r0, [r7, #0]
 80132ce:	6803      	ldr	r3, [r0, #0]
 80132d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80132d2:	4798      	blx	r3
 80132d4:	4a13      	ldr	r2, [pc, #76]	; (8013324 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80132d6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80132da:	8813      	ldrh	r3, [r2, #0]
 80132dc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80132e0:	fb03 1404 	mla	r4, r3, r4, r1
 80132e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80132e8:	435d      	muls	r5, r3
 80132ea:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80132ee:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80132f2:	4691      	mov	r9, r2
 80132f4:	6838      	ldr	r0, [r7, #0]
 80132f6:	42ac      	cmp	r4, r5
 80132f8:	6803      	ldr	r3, [r0, #0]
 80132fa:	d20e      	bcs.n	801331a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80132fc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8013300:	4632      	mov	r2, r6
 8013302:	4643      	mov	r3, r8
 8013304:	4621      	mov	r1, r4
 8013306:	47d0      	blx	sl
 8013308:	f8b9 3000 	ldrh.w	r3, [r9]
 801330c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013310:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013314:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013318:	e7ec      	b.n	80132f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801331a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801331c:	4798      	blx	r3
 801331e:	e7bc      	b.n	801329a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8013320:	2000bfc4 	.word	0x2000bfc4
 8013324:	2000bfc6 	.word	0x2000bfc6
 8013328:	2000bfc8 	.word	0x2000bfc8
 801332c:	2000bfcc 	.word	0x2000bfcc

08013330 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8013330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013334:	b08b      	sub	sp, #44	; 0x2c
 8013336:	460f      	mov	r7, r1
 8013338:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801333c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8013340:	4616      	mov	r6, r2
 8013342:	f1bb 0f00 	cmp.w	fp, #0
 8013346:	d049      	beq.n	80133dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013348:	6810      	ldr	r0, [r2, #0]
 801334a:	6851      	ldr	r1, [r2, #4]
 801334c:	ad06      	add	r5, sp, #24
 801334e:	c503      	stmia	r5!, {r0, r1}
 8013350:	6818      	ldr	r0, [r3, #0]
 8013352:	6859      	ldr	r1, [r3, #4]
 8013354:	ad08      	add	r5, sp, #32
 8013356:	c503      	stmia	r5!, {r0, r1}
 8013358:	a806      	add	r0, sp, #24
 801335a:	f7fa fb9d 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801335e:	4631      	mov	r1, r6
 8013360:	a808      	add	r0, sp, #32
 8013362:	f7fa fbc1 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013366:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801336a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801336e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013372:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8013376:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801337a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801337e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013382:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013386:	4f5f      	ldr	r7, [pc, #380]	; (8013504 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013388:	440a      	add	r2, r1
 801338a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801338e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013392:	6838      	ldr	r0, [r7, #0]
 8013394:	4413      	add	r3, r2
 8013396:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801339a:	6803      	ldr	r3, [r0, #0]
 801339c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801339e:	4798      	blx	r3
 80133a0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80133a4:	46b9      	mov	r9, r7
 80133a6:	d01c      	beq.n	80133e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80133a8:	f010 0f04 	tst.w	r0, #4
 80133ac:	d01d      	beq.n	80133ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80133ae:	f8d9 0000 	ldr.w	r0, [r9]
 80133b2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80133b6:	6801      	ldr	r1, [r0, #0]
 80133b8:	f8cd b00c 	str.w	fp, [sp, #12]
 80133bc:	2700      	movs	r7, #0
 80133be:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80133c2:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80133c6:	9402      	str	r4, [sp, #8]
 80133c8:	b2ad      	uxth	r5, r5
 80133ca:	fa1f f488 	uxth.w	r4, r8
 80133ce:	9501      	str	r5, [sp, #4]
 80133d0:	9400      	str	r4, [sp, #0]
 80133d2:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80133d4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80133d8:	4631      	mov	r1, r6
 80133da:	47a0      	blx	r4
 80133dc:	b00b      	add	sp, #44	; 0x2c
 80133de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133e2:	b914      	cbnz	r4, 80133ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80133e4:	f010 0f01 	tst.w	r0, #1
 80133e8:	e7e0      	b.n	80133ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80133ea:	f8d9 0000 	ldr.w	r0, [r9]
 80133ee:	6803      	ldr	r3, [r0, #0]
 80133f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80133f2:	4798      	blx	r3
 80133f4:	4b44      	ldr	r3, [pc, #272]	; (8013508 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80133f6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80133fa:	881a      	ldrh	r2, [r3, #0]
 80133fc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013400:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013404:	fb02 1404 	mla	r4, r2, r4, r1
 8013408:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801340c:	469a      	mov	sl, r3
 801340e:	fb05 f502 	mul.w	r5, r5, r2
 8013412:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8013416:	d059      	beq.n	80134cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013418:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801341c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013420:	fa1f f28b 	uxth.w	r2, fp
 8013424:	fa1f f989 	uxth.w	r9, r9
 8013428:	469e      	mov	lr, r3
 801342a:	42ac      	cmp	r4, r5
 801342c:	d264      	bcs.n	80134f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801342e:	eb04 0a07 	add.w	sl, r4, r7
 8013432:	4554      	cmp	r4, sl
 8013434:	d23d      	bcs.n	80134b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8013436:	8821      	ldrh	r1, [r4, #0]
 8013438:	f836 3b02 	ldrh.w	r3, [r6], #2
 801343c:	1208      	asrs	r0, r1, #8
 801343e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013442:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013446:	fb10 f009 	smulbb	r0, r0, r9
 801344a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801344e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013452:	00c9      	lsls	r1, r1, #3
 8013454:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013458:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801345c:	10d8      	asrs	r0, r3, #3
 801345e:	b2c9      	uxtb	r1, r1
 8013460:	00db      	lsls	r3, r3, #3
 8013462:	fa1f fc8c 	uxth.w	ip, ip
 8013466:	fb1b fb09 	smulbb	fp, fp, r9
 801346a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801346e:	b2db      	uxtb	r3, r3
 8013470:	fb11 f109 	smulbb	r1, r1, r9
 8013474:	fb00 b002 	mla	r0, r0, r2, fp
 8013478:	fb03 1302 	mla	r3, r3, r2, r1
 801347c:	f10c 0b01 	add.w	fp, ip, #1
 8013480:	b29b      	uxth	r3, r3
 8013482:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8013486:	b280      	uxth	r0, r0
 8013488:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801348c:	f103 0c01 	add.w	ip, r3, #1
 8013490:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013494:	1c43      	adds	r3, r0, #1
 8013496:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801349a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801349e:	0940      	lsrs	r0, r0, #5
 80134a0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80134a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80134a8:	ea4c 0c00 	orr.w	ip, ip, r0
 80134ac:	f824 cb02 	strh.w	ip, [r4], #2
 80134b0:	e7bf      	b.n	8013432 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80134b2:	f8be 3000 	ldrh.w	r3, [lr]
 80134b6:	eba3 0308 	sub.w	r3, r3, r8
 80134ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80134be:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80134c2:	eba3 0308 	sub.w	r3, r3, r8
 80134c6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80134ca:	e7ae      	b.n	801342a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80134cc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80134d0:	f8d9 0000 	ldr.w	r0, [r9]
 80134d4:	42ac      	cmp	r4, r5
 80134d6:	6803      	ldr	r3, [r0, #0]
 80134d8:	d20e      	bcs.n	80134f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80134da:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80134de:	4632      	mov	r2, r6
 80134e0:	463b      	mov	r3, r7
 80134e2:	4621      	mov	r1, r4
 80134e4:	47c0      	blx	r8
 80134e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80134ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80134ee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80134f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80134f6:	e7eb      	b.n	80134d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80134f8:	4b02      	ldr	r3, [pc, #8]	; (8013504 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80134fa:	6818      	ldr	r0, [r3, #0]
 80134fc:	6803      	ldr	r3, [r0, #0]
 80134fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013500:	4798      	blx	r3
 8013502:	e76b      	b.n	80133dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013504:	2000bfcc 	.word	0x2000bfcc
 8013508:	2000bfc6 	.word	0x2000bfc6

0801350c <_ZN8touchgfx8LCD16bppD0Ev>:
 801350c:	b510      	push	{r4, lr}
 801350e:	2178      	movs	r1, #120	; 0x78
 8013510:	4604      	mov	r4, r0
 8013512:	f009 faa5 	bl	801ca60 <_ZdlPvj>
 8013516:	4620      	mov	r0, r4
 8013518:	bd10      	pop	{r4, pc}

0801351a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801351a:	b510      	push	{r4, lr}
 801351c:	2104      	movs	r1, #4
 801351e:	4604      	mov	r4, r0
 8013520:	f009 fa9e 	bl	801ca60 <_ZdlPvj>
 8013524:	4620      	mov	r0, r4
 8013526:	bd10      	pop	{r4, pc}

08013528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013528:	b510      	push	{r4, lr}
 801352a:	2104      	movs	r1, #4
 801352c:	4604      	mov	r4, r0
 801352e:	f009 fa97 	bl	801ca60 <_ZdlPvj>
 8013532:	4620      	mov	r0, r4
 8013534:	bd10      	pop	{r4, pc}

08013536 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013536:	b510      	push	{r4, lr}
 8013538:	2104      	movs	r1, #4
 801353a:	4604      	mov	r4, r0
 801353c:	f009 fa90 	bl	801ca60 <_ZdlPvj>
 8013540:	4620      	mov	r0, r4
 8013542:	bd10      	pop	{r4, pc}

08013544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013544:	b510      	push	{r4, lr}
 8013546:	2104      	movs	r1, #4
 8013548:	4604      	mov	r4, r0
 801354a:	f009 fa89 	bl	801ca60 <_ZdlPvj>
 801354e:	4620      	mov	r0, r4
 8013550:	bd10      	pop	{r4, pc}

08013552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013552:	b510      	push	{r4, lr}
 8013554:	2104      	movs	r1, #4
 8013556:	4604      	mov	r4, r0
 8013558:	f009 fa82 	bl	801ca60 <_ZdlPvj>
 801355c:	4620      	mov	r0, r4
 801355e:	bd10      	pop	{r4, pc}

08013560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013560:	b510      	push	{r4, lr}
 8013562:	2104      	movs	r1, #4
 8013564:	4604      	mov	r4, r0
 8013566:	f009 fa7b 	bl	801ca60 <_ZdlPvj>
 801356a:	4620      	mov	r0, r4
 801356c:	bd10      	pop	{r4, pc}

0801356e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801356e:	b510      	push	{r4, lr}
 8013570:	2104      	movs	r1, #4
 8013572:	4604      	mov	r4, r0
 8013574:	f009 fa74 	bl	801ca60 <_ZdlPvj>
 8013578:	4620      	mov	r0, r4
 801357a:	bd10      	pop	{r4, pc}

0801357c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801357c:	b510      	push	{r4, lr}
 801357e:	2104      	movs	r1, #4
 8013580:	4604      	mov	r4, r0
 8013582:	f009 fa6d 	bl	801ca60 <_ZdlPvj>
 8013586:	4620      	mov	r0, r4
 8013588:	bd10      	pop	{r4, pc}

0801358a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801358a:	b510      	push	{r4, lr}
 801358c:	2104      	movs	r1, #4
 801358e:	4604      	mov	r4, r0
 8013590:	f009 fa66 	bl	801ca60 <_ZdlPvj>
 8013594:	4620      	mov	r0, r4
 8013596:	bd10      	pop	{r4, pc}

08013598 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013598:	b510      	push	{r4, lr}
 801359a:	2104      	movs	r1, #4
 801359c:	4604      	mov	r4, r0
 801359e:	f009 fa5f 	bl	801ca60 <_ZdlPvj>
 80135a2:	4620      	mov	r0, r4
 80135a4:	bd10      	pop	{r4, pc}

080135a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80135a6:	b510      	push	{r4, lr}
 80135a8:	2104      	movs	r1, #4
 80135aa:	4604      	mov	r4, r0
 80135ac:	f009 fa58 	bl	801ca60 <_ZdlPvj>
 80135b0:	4620      	mov	r0, r4
 80135b2:	bd10      	pop	{r4, pc}

080135b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80135b4:	b510      	push	{r4, lr}
 80135b6:	2104      	movs	r1, #4
 80135b8:	4604      	mov	r4, r0
 80135ba:	f009 fa51 	bl	801ca60 <_ZdlPvj>
 80135be:	4620      	mov	r0, r4
 80135c0:	bd10      	pop	{r4, pc}

080135c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80135c2:	b510      	push	{r4, lr}
 80135c4:	2104      	movs	r1, #4
 80135c6:	4604      	mov	r4, r0
 80135c8:	f009 fa4a 	bl	801ca60 <_ZdlPvj>
 80135cc:	4620      	mov	r0, r4
 80135ce:	bd10      	pop	{r4, pc}

080135d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80135d0:	b510      	push	{r4, lr}
 80135d2:	2104      	movs	r1, #4
 80135d4:	4604      	mov	r4, r0
 80135d6:	f009 fa43 	bl	801ca60 <_ZdlPvj>
 80135da:	4620      	mov	r0, r4
 80135dc:	bd10      	pop	{r4, pc}

080135de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80135de:	b510      	push	{r4, lr}
 80135e0:	2104      	movs	r1, #4
 80135e2:	4604      	mov	r4, r0
 80135e4:	f009 fa3c 	bl	801ca60 <_ZdlPvj>
 80135e8:	4620      	mov	r0, r4
 80135ea:	bd10      	pop	{r4, pc}

080135ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80135ec:	b510      	push	{r4, lr}
 80135ee:	2104      	movs	r1, #4
 80135f0:	4604      	mov	r4, r0
 80135f2:	f009 fa35 	bl	801ca60 <_ZdlPvj>
 80135f6:	4620      	mov	r0, r4
 80135f8:	bd10      	pop	{r4, pc}

080135fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80135fa:	b510      	push	{r4, lr}
 80135fc:	2104      	movs	r1, #4
 80135fe:	4604      	mov	r4, r0
 8013600:	f009 fa2e 	bl	801ca60 <_ZdlPvj>
 8013604:	4620      	mov	r0, r4
 8013606:	bd10      	pop	{r4, pc}

08013608 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013608:	b510      	push	{r4, lr}
 801360a:	2104      	movs	r1, #4
 801360c:	4604      	mov	r4, r0
 801360e:	f009 fa27 	bl	801ca60 <_ZdlPvj>
 8013612:	4620      	mov	r0, r4
 8013614:	bd10      	pop	{r4, pc}

08013616 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013616:	b510      	push	{r4, lr}
 8013618:	2104      	movs	r1, #4
 801361a:	4604      	mov	r4, r0
 801361c:	f009 fa20 	bl	801ca60 <_ZdlPvj>
 8013620:	4620      	mov	r0, r4
 8013622:	bd10      	pop	{r4, pc}

08013624 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013624:	b510      	push	{r4, lr}
 8013626:	2104      	movs	r1, #4
 8013628:	4604      	mov	r4, r0
 801362a:	f009 fa19 	bl	801ca60 <_ZdlPvj>
 801362e:	4620      	mov	r0, r4
 8013630:	bd10      	pop	{r4, pc}

08013632 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013632:	b510      	push	{r4, lr}
 8013634:	2104      	movs	r1, #4
 8013636:	4604      	mov	r4, r0
 8013638:	f009 fa12 	bl	801ca60 <_ZdlPvj>
 801363c:	4620      	mov	r0, r4
 801363e:	bd10      	pop	{r4, pc}

08013640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013640:	b510      	push	{r4, lr}
 8013642:	2104      	movs	r1, #4
 8013644:	4604      	mov	r4, r0
 8013646:	f009 fa0b 	bl	801ca60 <_ZdlPvj>
 801364a:	4620      	mov	r0, r4
 801364c:	bd10      	pop	{r4, pc}

0801364e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801364e:	b510      	push	{r4, lr}
 8013650:	2104      	movs	r1, #4
 8013652:	4604      	mov	r4, r0
 8013654:	f009 fa04 	bl	801ca60 <_ZdlPvj>
 8013658:	4620      	mov	r0, r4
 801365a:	bd10      	pop	{r4, pc}

0801365c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801365c:	b510      	push	{r4, lr}
 801365e:	2104      	movs	r1, #4
 8013660:	4604      	mov	r4, r0
 8013662:	f009 f9fd 	bl	801ca60 <_ZdlPvj>
 8013666:	4620      	mov	r0, r4
 8013668:	bd10      	pop	{r4, pc}

0801366a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801366a:	b510      	push	{r4, lr}
 801366c:	2104      	movs	r1, #4
 801366e:	4604      	mov	r4, r0
 8013670:	f009 f9f6 	bl	801ca60 <_ZdlPvj>
 8013674:	4620      	mov	r0, r4
 8013676:	bd10      	pop	{r4, pc}

08013678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013678:	b510      	push	{r4, lr}
 801367a:	2104      	movs	r1, #4
 801367c:	4604      	mov	r4, r0
 801367e:	f009 f9ef 	bl	801ca60 <_ZdlPvj>
 8013682:	4620      	mov	r0, r4
 8013684:	bd10      	pop	{r4, pc}

08013686 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013686:	b510      	push	{r4, lr}
 8013688:	2104      	movs	r1, #4
 801368a:	4604      	mov	r4, r0
 801368c:	f009 f9e8 	bl	801ca60 <_ZdlPvj>
 8013690:	4620      	mov	r0, r4
 8013692:	bd10      	pop	{r4, pc}

08013694 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013694:	b510      	push	{r4, lr}
 8013696:	2104      	movs	r1, #4
 8013698:	4604      	mov	r4, r0
 801369a:	f009 f9e1 	bl	801ca60 <_ZdlPvj>
 801369e:	4620      	mov	r0, r4
 80136a0:	bd10      	pop	{r4, pc}
	...

080136a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80136a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80136a6:	4606      	mov	r6, r0
 80136a8:	b087      	sub	sp, #28
 80136aa:	460c      	mov	r4, r1
 80136ac:	4617      	mov	r7, r2
 80136ae:	461d      	mov	r5, r3
 80136b0:	b333      	cbz	r3, 8013700 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80136b2:	4608      	mov	r0, r1
 80136b4:	f7f7 f86f 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 80136b8:	bb10      	cbnz	r0, 8013700 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80136ba:	6820      	ldr	r0, [r4, #0]
 80136bc:	6861      	ldr	r1, [r4, #4]
 80136be:	4c1c      	ldr	r4, [pc, #112]	; (8013730 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80136c0:	ab04      	add	r3, sp, #16
 80136c2:	c303      	stmia	r3!, {r0, r1}
 80136c4:	a804      	add	r0, sp, #16
 80136c6:	f7fa f9e7 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80136ca:	6820      	ldr	r0, [r4, #0]
 80136cc:	6803      	ldr	r3, [r0, #0]
 80136ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80136d0:	4798      	blx	r3
 80136d2:	2dff      	cmp	r5, #255	; 0xff
 80136d4:	d016      	beq.n	8013704 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80136d6:	f010 0f08 	tst.w	r0, #8
 80136da:	6820      	ldr	r0, [r4, #0]
 80136dc:	d015      	beq.n	801370a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80136de:	2400      	movs	r4, #0
 80136e0:	6801      	ldr	r1, [r0, #0]
 80136e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80136e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80136ea:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80136ee:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80136f2:	9401      	str	r4, [sp, #4]
 80136f4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80136f8:	9400      	str	r4, [sp, #0]
 80136fa:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80136fc:	4639      	mov	r1, r7
 80136fe:	47a0      	blx	r4
 8013700:	b007      	add	sp, #28
 8013702:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013704:	f010 0f02 	tst.w	r0, #2
 8013708:	e7e7      	b.n	80136da <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801370a:	6803      	ldr	r3, [r0, #0]
 801370c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801370e:	4798      	blx	r3
 8013710:	4b08      	ldr	r3, [pc, #32]	; (8013734 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8013712:	881a      	ldrh	r2, [r3, #0]
 8013714:	6833      	ldr	r3, [r6, #0]
 8013716:	e9cd 7500 	strd	r7, r5, [sp]
 801371a:	4601      	mov	r1, r0
 801371c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801371e:	4630      	mov	r0, r6
 8013720:	ab04      	add	r3, sp, #16
 8013722:	47a8      	blx	r5
 8013724:	6820      	ldr	r0, [r4, #0]
 8013726:	6803      	ldr	r3, [r0, #0]
 8013728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801372a:	4798      	blx	r3
 801372c:	e7e8      	b.n	8013700 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801372e:	bf00      	nop
 8013730:	2000bfcc 	.word	0x2000bfcc
 8013734:	2000bfc6 	.word	0x2000bfc6

08013738 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801373c:	4690      	mov	r8, r2
 801373e:	4a8d      	ldr	r2, [pc, #564]	; (8013974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 8013740:	6812      	ldr	r2, [r2, #0]
 8013742:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8013746:	b091      	sub	sp, #68	; 0x44
 8013748:	2a02      	cmp	r2, #2
 801374a:	4606      	mov	r6, r0
 801374c:	460d      	mov	r5, r1
 801374e:	461c      	mov	r4, r3
 8013750:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 8013754:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8013758:	d106      	bne.n	8013768 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 801375a:	4b87      	ldr	r3, [pc, #540]	; (8013978 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 801375c:	4a87      	ldr	r2, [pc, #540]	; (801397c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801375e:	f240 316b 	movw	r1, #875	; 0x36b
 8013762:	4887      	ldr	r0, [pc, #540]	; (8013980 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8013764:	f009 ff26 	bl	801d5b4 <__assert_func>
 8013768:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801376a:	b923      	cbnz	r3, 8013776 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 801376c:	4b85      	ldr	r3, [pc, #532]	; (8013984 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801376e:	4a83      	ldr	r2, [pc, #524]	; (801397c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8013770:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8013774:	e7f5      	b.n	8013762 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 8013776:	f9b4 1000 	ldrsh.w	r1, [r4]
 801377a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801377e:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8013782:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8013786:	4621      	mov	r1, r4
 8013788:	4648      	mov	r0, r9
 801378a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801378e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8013792:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8013796:	f7f6 ffbb 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 801379a:	4641      	mov	r1, r8
 801379c:	4648      	mov	r0, r9
 801379e:	f7f6 ffb7 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 80137a2:	4a79      	ldr	r2, [pc, #484]	; (8013988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 80137a4:	f8b2 c000 	ldrh.w	ip, [r2]
 80137a8:	4a78      	ldr	r2, [pc, #480]	; (801398c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 80137aa:	8810      	ldrh	r0, [r2, #0]
 80137ac:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80137b0:	2a00      	cmp	r2, #0
 80137b2:	fa0f f18c 	sxth.w	r1, ip
 80137b6:	fa0f fe80 	sxth.w	lr, r0
 80137ba:	da07      	bge.n	80137cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 80137bc:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 80137c0:	4442      	add	r2, r8
 80137c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80137c6:	2200      	movs	r2, #0
 80137c8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80137cc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80137d0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80137d4:	1a89      	subs	r1, r1, r2
 80137d6:	4588      	cmp	r8, r1
 80137d8:	bfc4      	itt	gt
 80137da:	ebac 0102 	subgt.w	r1, ip, r2
 80137de:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 80137e2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80137e6:	2900      	cmp	r1, #0
 80137e8:	da07      	bge.n	80137fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 80137ea:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 80137ee:	4441      	add	r1, r8
 80137f0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80137f4:	2100      	movs	r1, #0
 80137f6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80137fa:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80137fe:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 8013802:	ebae 0e0a 	sub.w	lr, lr, sl
 8013806:	4571      	cmp	r1, lr
 8013808:	bfc4      	itt	gt
 801380a:	eba0 010a 	subgt.w	r1, r0, sl
 801380e:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 8013812:	495f      	ldr	r1, [pc, #380]	; (8013990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8013814:	7809      	ldrb	r1, [r1, #0]
 8013816:	b9a9      	cbnz	r1, 8013844 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 8013818:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801381c:	45e0      	cmp	r8, ip
 801381e:	bf14      	ite	ne
 8013820:	2300      	movne	r3, #0
 8013822:	2301      	moveq	r3, #1
 8013824:	4648      	mov	r0, r9
 8013826:	9202      	str	r2, [sp, #8]
 8013828:	9305      	str	r3, [sp, #20]
 801382a:	f7f6 ffb4 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 801382e:	9a02      	ldr	r2, [sp, #8]
 8013830:	b160      	cbz	r0, 801384c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8013832:	2300      	movs	r3, #0
 8013834:	8033      	strh	r3, [r6, #0]
 8013836:	8073      	strh	r3, [r6, #2]
 8013838:	80b3      	strh	r3, [r6, #4]
 801383a:	4630      	mov	r0, r6
 801383c:	80f3      	strh	r3, [r6, #6]
 801383e:	b011      	add	sp, #68	; 0x44
 8013840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013844:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8013848:	4580      	cmp	r8, r0
 801384a:	e7e8      	b.n	801381e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 801384c:	8821      	ldrh	r1, [r4, #0]
 801384e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8013852:	9304      	str	r3, [sp, #16]
 8013854:	1a52      	subs	r2, r2, r1
 8013856:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801385a:	9306      	str	r3, [sp, #24]
 801385c:	b213      	sxth	r3, r2
 801385e:	9302      	str	r3, [sp, #8]
 8013860:	8863      	ldrh	r3, [r4, #2]
 8013862:	900e      	str	r0, [sp, #56]	; 0x38
 8013864:	ebaa 0a03 	sub.w	sl, sl, r3
 8013868:	fa0f f38a 	sxth.w	r3, sl
 801386c:	9303      	str	r3, [sp, #12]
 801386e:	9b02      	ldr	r3, [sp, #8]
 8013870:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013874:	9b03      	ldr	r3, [sp, #12]
 8013876:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801387a:	9b04      	ldr	r3, [sp, #16]
 801387c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013880:	a90e      	add	r1, sp, #56	; 0x38
 8013882:	9b06      	ldr	r3, [sp, #24]
 8013884:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013888:	a80c      	add	r0, sp, #48	; 0x30
 801388a:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801388e:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8013892:	f7fa f929 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013896:	4648      	mov	r0, r9
 8013898:	f7fa f8fe 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801389c:	a80e      	add	r0, sp, #56	; 0x38
 801389e:	f7fa f8fb 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138a2:	4b3c      	ldr	r3, [pc, #240]	; (8013994 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 80138a4:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 80138a8:	881b      	ldrh	r3, [r3, #0]
 80138aa:	9307      	str	r3, [sp, #28]
 80138ac:	682b      	ldr	r3, [r5, #0]
 80138ae:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8013974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 80138b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138b4:	4628      	mov	r0, r5
 80138b6:	4798      	blx	r3
 80138b8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80138bc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80138c0:	4682      	mov	sl, r0
 80138c2:	fb17 2303 	smlabb	r3, r7, r3, r2
 80138c6:	f8d8 0000 	ldr.w	r0, [r8]
 80138ca:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80138cc:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 80138d0:	6803      	ldr	r3, [r0, #0]
 80138d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138d4:	4798      	blx	r3
 80138d6:	9009      	str	r0, [sp, #36]	; 0x24
 80138d8:	f8d8 0000 	ldr.w	r0, [r8]
 80138dc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80138e0:	6802      	ldr	r2, [r0, #0]
 80138e2:	9308      	str	r3, [sp, #32]
 80138e4:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80138e6:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 80138ea:	4790      	blx	r2
 80138ec:	f010 0f01 	tst.w	r0, #1
 80138f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80138f2:	d011      	beq.n	8013918 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 80138f4:	f8d8 0000 	ldr.w	r0, [r8]
 80138f8:	6803      	ldr	r3, [r0, #0]
 80138fa:	f8cd b000 	str.w	fp, [sp]
 80138fe:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8013900:	e899 0006 	ldmia.w	r9, {r1, r2}
 8013904:	4623      	mov	r3, r4
 8013906:	47a8      	blx	r5
 8013908:	9b02      	ldr	r3, [sp, #8]
 801390a:	8033      	strh	r3, [r6, #0]
 801390c:	9b03      	ldr	r3, [sp, #12]
 801390e:	8073      	strh	r3, [r6, #2]
 8013910:	9b04      	ldr	r3, [sp, #16]
 8013912:	80b3      	strh	r3, [r6, #4]
 8013914:	9b06      	ldr	r3, [sp, #24]
 8013916:	e790      	b.n	801383a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8013918:	9a08      	ldr	r2, [sp, #32]
 801391a:	fb0a f505 	mul.w	r5, sl, r5
 801391e:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8013922:	9a05      	ldr	r2, [sp, #20]
 8013924:	441d      	add	r5, r3
 8013926:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801392a:	b162      	cbz	r2, 8013946 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801392c:	9a07      	ldr	r2, [sp, #28]
 801392e:	4297      	cmp	r7, r2
 8013930:	d109      	bne.n	8013946 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8013932:	f8d8 0000 	ldr.w	r0, [r8]
 8013936:	6802      	ldr	r2, [r0, #0]
 8013938:	fb03 f30a 	mul.w	r3, r3, sl
 801393c:	6b57      	ldr	r7, [r2, #52]	; 0x34
 801393e:	4621      	mov	r1, r4
 8013940:	462a      	mov	r2, r5
 8013942:	47b8      	blx	r7
 8013944:	e7e0      	b.n	8013908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8013946:	437b      	muls	r3, r7
 8013948:	f8df b028 	ldr.w	fp, [pc, #40]	; 8013974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801394c:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8013950:	007f      	lsls	r7, r7, #1
 8013952:	4544      	cmp	r4, r8
 8013954:	d2d8      	bcs.n	8013908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8013956:	f8db 0000 	ldr.w	r0, [fp]
 801395a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801395e:	6802      	ldr	r2, [r0, #0]
 8013960:	4621      	mov	r1, r4
 8013962:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8013966:	005b      	lsls	r3, r3, #1
 8013968:	462a      	mov	r2, r5
 801396a:	47c8      	blx	r9
 801396c:	4455      	add	r5, sl
 801396e:	443c      	add	r4, r7
 8013970:	e7ef      	b.n	8013952 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8013972:	bf00      	nop
 8013974:	2000bfcc 	.word	0x2000bfcc
 8013978:	0802129a 	.word	0x0802129a
 801397c:	08021b04 	.word	0x08021b04
 8013980:	0802134c 	.word	0x0802134c
 8013984:	0802124c 	.word	0x0802124c
 8013988:	2000bfc0 	.word	0x2000bfc0
 801398c:	2000bfc2 	.word	0x2000bfc2
 8013990:	2000bfc4 	.word	0x2000bfc4
 8013994:	2000bfc6 	.word	0x2000bfc6

08013998 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8013998:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801399c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80139a0:	9e08      	ldr	r6, [sp, #32]
 80139a2:	4688      	mov	r8, r1
 80139a4:	4614      	mov	r4, r2
 80139a6:	461d      	mov	r5, r3
 80139a8:	2f00      	cmp	r7, #0
 80139aa:	f000 80b3 	beq.w	8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80139ae:	4618      	mov	r0, r3
 80139b0:	f7f6 fef1 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 80139b4:	2800      	cmp	r0, #0
 80139b6:	f040 80ad 	bne.w	8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80139ba:	f9b5 1000 	ldrsh.w	r1, [r5]
 80139be:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80139c2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80139c6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80139ca:	fb04 1303 	mla	r3, r4, r3, r1
 80139ce:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80139d2:	4365      	muls	r5, r4
 80139d4:	2fff      	cmp	r7, #255	; 0xff
 80139d6:	eba4 0200 	sub.w	r2, r4, r0
 80139da:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80139de:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80139e2:	d04b      	beq.n	8013a7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 80139e4:	b2bc      	uxth	r4, r7
 80139e6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80139ea:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80139ee:	fa5f f788 	uxtb.w	r7, r8
 80139f2:	b2f3      	uxtb	r3, r6
 80139f4:	0040      	lsls	r0, r0, #1
 80139f6:	fb0e fe04 	mul.w	lr, lr, r4
 80139fa:	4367      	muls	r7, r4
 80139fc:	4363      	muls	r3, r4
 80139fe:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8013a02:	fa1f fc8c 	uxth.w	ip, ip
 8013a06:	42a9      	cmp	r1, r5
 8013a08:	f080 8084 	bcs.w	8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013a0c:	eb01 0900 	add.w	r9, r1, r0
 8013a10:	4549      	cmp	r1, r9
 8013a12:	d231      	bcs.n	8013a78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8013a14:	880a      	ldrh	r2, [r1, #0]
 8013a16:	1214      	asrs	r4, r2, #8
 8013a18:	10d6      	asrs	r6, r2, #3
 8013a1a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013a1e:	00d2      	lsls	r2, r2, #3
 8013a20:	b2d2      	uxtb	r2, r2
 8013a22:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013a26:	fb14 f40c 	smulbb	r4, r4, ip
 8013a2a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013a2e:	4474      	add	r4, lr
 8013a30:	fb12 f20c 	smulbb	r2, r2, ip
 8013a34:	b2a4      	uxth	r4, r4
 8013a36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a3a:	441a      	add	r2, r3
 8013a3c:	b292      	uxth	r2, r2
 8013a3e:	f104 0a01 	add.w	sl, r4, #1
 8013a42:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013a46:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8013a4a:	fb16 f60c 	smulbb	r6, r6, ip
 8013a4e:	f102 0a01 	add.w	sl, r2, #1
 8013a52:	443e      	add	r6, r7
 8013a54:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8013a58:	b2b6      	uxth	r6, r6
 8013a5a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8013a5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013a62:	4322      	orrs	r2, r4
 8013a64:	1c74      	adds	r4, r6, #1
 8013a66:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8013a6a:	0976      	lsrs	r6, r6, #5
 8013a6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013a70:	4332      	orrs	r2, r6
 8013a72:	f821 2b02 	strh.w	r2, [r1], #2
 8013a76:	e7cb      	b.n	8013a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8013a78:	4441      	add	r1, r8
 8013a7a:	e7c4      	b.n	8013a06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8013a7c:	4f26      	ldr	r7, [pc, #152]	; (8013b18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8013a7e:	0973      	lsrs	r3, r6, #5
 8013a80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a84:	ea08 0707 	and.w	r7, r8, r7
 8013a88:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013a8c:	433b      	orrs	r3, r7
 8013a8e:	4333      	orrs	r3, r6
 8013a90:	07e6      	lsls	r6, r4, #31
 8013a92:	b29b      	uxth	r3, r3
 8013a94:	d50b      	bpl.n	8013aae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8013a96:	0040      	lsls	r0, r0, #1
 8013a98:	0052      	lsls	r2, r2, #1
 8013a9a:	42a9      	cmp	r1, r5
 8013a9c:	d23a      	bcs.n	8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013a9e:	180c      	adds	r4, r1, r0
 8013aa0:	42a1      	cmp	r1, r4
 8013aa2:	d202      	bcs.n	8013aaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8013aa4:	f821 3b02 	strh.w	r3, [r1], #2
 8013aa8:	e7fa      	b.n	8013aa0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8013aaa:	4411      	add	r1, r2
 8013aac:	e7f5      	b.n	8013a9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8013aae:	078f      	lsls	r7, r1, #30
 8013ab0:	d008      	beq.n	8013ac4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8013ab2:	0066      	lsls	r6, r4, #1
 8013ab4:	460a      	mov	r2, r1
 8013ab6:	42aa      	cmp	r2, r5
 8013ab8:	d202      	bcs.n	8013ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8013aba:	8013      	strh	r3, [r2, #0]
 8013abc:	4432      	add	r2, r6
 8013abe:	e7fa      	b.n	8013ab6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8013ac0:	3102      	adds	r1, #2
 8013ac2:	3801      	subs	r0, #1
 8013ac4:	07c6      	lsls	r6, r0, #31
 8013ac6:	d50b      	bpl.n	8013ae0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8013ac8:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8013acc:	3a01      	subs	r2, #1
 8013ace:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8013ad2:	0066      	lsls	r6, r4, #1
 8013ad4:	42aa      	cmp	r2, r5
 8013ad6:	d202      	bcs.n	8013ade <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8013ad8:	8013      	strh	r3, [r2, #0]
 8013ada:	4432      	add	r2, r6
 8013adc:	e7fa      	b.n	8013ad4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8013ade:	3801      	subs	r0, #1
 8013ae0:	b1c0      	cbz	r0, 8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013ae2:	1040      	asrs	r0, r0, #1
 8013ae4:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8013ae8:	0080      	lsls	r0, r0, #2
 8013aea:	0064      	lsls	r4, r4, #1
 8013aec:	42a9      	cmp	r1, r5
 8013aee:	d211      	bcs.n	8013b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013af0:	078a      	lsls	r2, r1, #30
 8013af2:	d006      	beq.n	8013b02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8013af4:	4b09      	ldr	r3, [pc, #36]	; (8013b1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8013af6:	4a0a      	ldr	r2, [pc, #40]	; (8013b20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8013af8:	480a      	ldr	r0, [pc, #40]	; (8013b24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8013afa:	f240 4137 	movw	r1, #1079	; 0x437
 8013afe:	f009 fd59 	bl	801d5b4 <__assert_func>
 8013b02:	180e      	adds	r6, r1, r0
 8013b04:	460a      	mov	r2, r1
 8013b06:	42b2      	cmp	r2, r6
 8013b08:	d202      	bcs.n	8013b10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8013b0a:	f842 3b04 	str.w	r3, [r2], #4
 8013b0e:	e7fa      	b.n	8013b06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8013b10:	4421      	add	r1, r4
 8013b12:	e7eb      	b.n	8013aec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8013b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013b18:	00fff800 	.word	0x00fff800
 8013b1c:	080210fd 	.word	0x080210fd
 8013b20:	08021750 	.word	0x08021750
 8013b24:	0802134c 	.word	0x0802134c

08013b28 <_ZN8touchgfx8LCD16bppC1Ev>:
 8013b28:	2200      	movs	r2, #0
 8013b2a:	4910      	ldr	r1, [pc, #64]	; (8013b6c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013b2c:	6042      	str	r2, [r0, #4]
 8013b2e:	6001      	str	r1, [r0, #0]
 8013b30:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013b34:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8013b38:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013b3c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013b40:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013b44:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8013b48:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013b4c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013b50:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8013b54:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8013b58:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013b5c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8013b60:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8013b64:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8013b68:	4770      	bx	lr
 8013b6a:	bf00      	nop
 8013b6c:	08021700 	.word	0x08021700

08013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8013b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b74:	460d      	mov	r5, r1
 8013b76:	b08d      	sub	sp, #52	; 0x34
 8013b78:	4604      	mov	r4, r0
 8013b7a:	6808      	ldr	r0, [r1, #0]
 8013b7c:	6849      	ldr	r1, [r1, #4]
 8013b7e:	4699      	mov	r9, r3
 8013b80:	ab08      	add	r3, sp, #32
 8013b82:	c303      	stmia	r3!, {r0, r1}
 8013b84:	6810      	ldr	r0, [r2, #0]
 8013b86:	6851      	ldr	r1, [r2, #4]
 8013b88:	ab0a      	add	r3, sp, #40	; 0x28
 8013b8a:	c303      	stmia	r3!, {r0, r1}
 8013b8c:	a808      	add	r0, sp, #32
 8013b8e:	f7f9 ff83 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013b92:	4629      	mov	r1, r5
 8013b94:	a80a      	add	r0, sp, #40	; 0x28
 8013b96:	f7f9 ffa7 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013b9a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8013b9e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8013ba2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8013ba6:	4d63      	ldr	r5, [pc, #396]	; (8013d34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013ba8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013bac:	6828      	ldr	r0, [r5, #0]
 8013bae:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8013bb2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013bb6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013bba:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013bbe:	440a      	add	r2, r1
 8013bc0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013bc4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013bc8:	4413      	add	r3, r2
 8013bca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013bce:	6803      	ldr	r3, [r0, #0]
 8013bd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013bd2:	4798      	blx	r3
 8013bd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013bd8:	d119      	bne.n	8013c0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013bda:	f010 0f20 	tst.w	r0, #32
 8013bde:	6828      	ldr	r0, [r5, #0]
 8013be0:	d018      	beq.n	8013c14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8013be2:	2500      	movs	r5, #0
 8013be4:	6801      	ldr	r1, [r0, #0]
 8013be6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8013bea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013bee:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8013bf2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8013bf6:	9502      	str	r5, [sp, #8]
 8013bf8:	b2b6      	uxth	r6, r6
 8013bfa:	fa1f f588 	uxth.w	r5, r8
 8013bfe:	9601      	str	r6, [sp, #4]
 8013c00:	9500      	str	r5, [sp, #0]
 8013c02:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8013c04:	4621      	mov	r1, r4
 8013c06:	47a8      	blx	r5
 8013c08:	b00d      	add	sp, #52	; 0x34
 8013c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c0e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8013c12:	e7e4      	b.n	8013bde <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8013c14:	6803      	ldr	r3, [r0, #0]
 8013c16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c18:	4798      	blx	r3
 8013c1a:	4947      	ldr	r1, [pc, #284]	; (8013d38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8013c1c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013c20:	880b      	ldrh	r3, [r1, #0]
 8013c22:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8013c26:	fb03 5202 	mla	r2, r3, r2, r5
 8013c2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013c2e:	4373      	muls	r3, r6
 8013c30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013c34:	9307      	str	r3, [sp, #28]
 8013c36:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013c3a:	9306      	str	r3, [sp, #24]
 8013c3c:	468a      	mov	sl, r1
 8013c3e:	9b07      	ldr	r3, [sp, #28]
 8013c40:	4298      	cmp	r0, r3
 8013c42:	d270      	bcs.n	8013d26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8013c44:	9b06      	ldr	r3, [sp, #24]
 8013c46:	4621      	mov	r1, r4
 8013c48:	eb00 0b03 	add.w	fp, r0, r3
 8013c4c:	4558      	cmp	r0, fp
 8013c4e:	d25d      	bcs.n	8013d0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8013c50:	f851 4b04 	ldr.w	r4, [r1], #4
 8013c54:	0e23      	lsrs	r3, r4, #24
 8013c56:	d014      	beq.n	8013c82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013c58:	2bff      	cmp	r3, #255	; 0xff
 8013c5a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8013c5e:	d112      	bne.n	8013c86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013c60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013c64:	d10f      	bne.n	8013c86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013c66:	0963      	lsrs	r3, r4, #5
 8013c68:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8013c6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c70:	f02c 0c07 	bic.w	ip, ip, #7
 8013c74:	ea43 0c0c 	orr.w	ip, r3, ip
 8013c78:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013c7c:	ea4c 0404 	orr.w	r4, ip, r4
 8013c80:	8004      	strh	r4, [r0, #0]
 8013c82:	3002      	adds	r0, #2
 8013c84:	e7e2      	b.n	8013c4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8013c86:	fb09 f303 	mul.w	r3, r9, r3
 8013c8a:	8807      	ldrh	r7, [r0, #0]
 8013c8c:	1c5a      	adds	r2, r3, #1
 8013c8e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8013c92:	1212      	asrs	r2, r2, #8
 8013c94:	123e      	asrs	r6, r7, #8
 8013c96:	b293      	uxth	r3, r2
 8013c98:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8013c9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013ca0:	43d2      	mvns	r2, r2
 8013ca2:	b2d2      	uxtb	r2, r2
 8013ca4:	10fd      	asrs	r5, r7, #3
 8013ca6:	fb1e fe03 	smulbb	lr, lr, r3
 8013caa:	00ff      	lsls	r7, r7, #3
 8013cac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013cb0:	fb06 e602 	mla	r6, r6, r2, lr
 8013cb4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013cb8:	b2ff      	uxtb	r7, r7
 8013cba:	fa5f fc8c 	uxtb.w	ip, ip
 8013cbe:	b2e4      	uxtb	r4, r4
 8013cc0:	b2b6      	uxth	r6, r6
 8013cc2:	fb1c fc03 	smulbb	ip, ip, r3
 8013cc6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013cca:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013cce:	fb14 f403 	smulbb	r4, r4, r3
 8013cd2:	fb05 c502 	mla	r5, r5, r2, ip
 8013cd6:	f106 0e01 	add.w	lr, r6, #1
 8013cda:	fb07 4702 	mla	r7, r7, r2, r4
 8013cde:	b2ad      	uxth	r5, r5
 8013ce0:	b2bf      	uxth	r7, r7
 8013ce2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8013ce6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8013cea:	f105 0c01 	add.w	ip, r5, #1
 8013cee:	1c7e      	adds	r6, r7, #1
 8013cf0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013cf4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013cf8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013cfc:	096d      	lsrs	r5, r5, #5
 8013cfe:	ea46 060e 	orr.w	r6, r6, lr
 8013d02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013d06:	432e      	orrs	r6, r5
 8013d08:	8006      	strh	r6, [r0, #0]
 8013d0a:	e7ba      	b.n	8013c82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013d0c:	f8ba 3000 	ldrh.w	r3, [sl]
 8013d10:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8013d14:	eba3 0308 	sub.w	r3, r3, r8
 8013d18:	eba4 0408 	sub.w	r4, r4, r8
 8013d1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d20:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8013d24:	e78b      	b.n	8013c3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8013d26:	4b03      	ldr	r3, [pc, #12]	; (8013d34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013d28:	6818      	ldr	r0, [r3, #0]
 8013d2a:	6803      	ldr	r3, [r0, #0]
 8013d2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d2e:	4798      	blx	r3
 8013d30:	e76a      	b.n	8013c08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8013d32:	bf00      	nop
 8013d34:	2000bfcc 	.word	0x2000bfcc
 8013d38:	2000bfc6 	.word	0x2000bfc6

08013d3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8013d3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d40:	460c      	mov	r4, r1
 8013d42:	b085      	sub	sp, #20
 8013d44:	6810      	ldr	r0, [r2, #0]
 8013d46:	6851      	ldr	r1, [r2, #4]
 8013d48:	466d      	mov	r5, sp
 8013d4a:	c503      	stmia	r5!, {r0, r1}
 8013d4c:	6818      	ldr	r0, [r3, #0]
 8013d4e:	6859      	ldr	r1, [r3, #4]
 8013d50:	4616      	mov	r6, r2
 8013d52:	c503      	stmia	r5!, {r0, r1}
 8013d54:	4668      	mov	r0, sp
 8013d56:	f7f9 fe9f 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013d5a:	4631      	mov	r1, r6
 8013d5c:	a802      	add	r0, sp, #8
 8013d5e:	f7f9 fec3 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013d62:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8013d66:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8013d6a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013d6e:	4d28      	ldr	r5, [pc, #160]	; (8013e10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8013d70:	4e28      	ldr	r6, [pc, #160]	; (8013e14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8013d72:	6828      	ldr	r0, [r5, #0]
 8013d74:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013d78:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8013d7c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013d80:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013d84:	f8bd 1000 	ldrh.w	r1, [sp]
 8013d88:	440a      	add	r2, r1
 8013d8a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8013d8e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013d92:	4413      	add	r3, r2
 8013d94:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013d98:	6803      	ldr	r3, [r0, #0]
 8013d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013d9c:	4798      	blx	r3
 8013d9e:	8833      	ldrh	r3, [r6, #0]
 8013da0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8013da4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8013da8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8013e18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8013dac:	fb03 1202 	mla	r2, r3, r2, r1
 8013db0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013db4:	fb08 f303 	mul.w	r3, r8, r3
 8013db8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013dbc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8013dc0:	4298      	cmp	r0, r3
 8013dc2:	d21d      	bcs.n	8013e00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8013dc4:	eb00 080c 	add.w	r8, r0, ip
 8013dc8:	4540      	cmp	r0, r8
 8013dca:	d20f      	bcs.n	8013dec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013dcc:	f854 1b04 	ldr.w	r1, [r4], #4
 8013dd0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8013dd4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8013dd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013ddc:	ea42 0209 	orr.w	r2, r2, r9
 8013de0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013de4:	430a      	orrs	r2, r1
 8013de6:	f820 2b02 	strh.w	r2, [r0], #2
 8013dea:	e7ed      	b.n	8013dc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013dec:	8832      	ldrh	r2, [r6, #0]
 8013dee:	1bd2      	subs	r2, r2, r7
 8013df0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013df4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013df8:	1bd2      	subs	r2, r2, r7
 8013dfa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013dfe:	e7df      	b.n	8013dc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8013e00:	6828      	ldr	r0, [r5, #0]
 8013e02:	6803      	ldr	r3, [r0, #0]
 8013e04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e06:	4798      	blx	r3
 8013e08:	b005      	add	sp, #20
 8013e0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e0e:	bf00      	nop
 8013e10:	2000bfcc 	.word	0x2000bfcc
 8013e14:	2000bfc6 	.word	0x2000bfc6
 8013e18:	fffff800 	.word	0xfffff800

08013e1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8013e1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013e20:	460e      	mov	r6, r1
 8013e22:	b08e      	sub	sp, #56	; 0x38
 8013e24:	4604      	mov	r4, r0
 8013e26:	6808      	ldr	r0, [r1, #0]
 8013e28:	6849      	ldr	r1, [r1, #4]
 8013e2a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013e2e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8013e32:	461d      	mov	r5, r3
 8013e34:	ab0a      	add	r3, sp, #40	; 0x28
 8013e36:	c303      	stmia	r3!, {r0, r1}
 8013e38:	6810      	ldr	r0, [r2, #0]
 8013e3a:	6851      	ldr	r1, [r2, #4]
 8013e3c:	ab0c      	add	r3, sp, #48	; 0x30
 8013e3e:	c303      	stmia	r3!, {r0, r1}
 8013e40:	a80a      	add	r0, sp, #40	; 0x28
 8013e42:	f7f9 fe29 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e46:	4631      	mov	r1, r6
 8013e48:	a80c      	add	r0, sp, #48	; 0x30
 8013e4a:	f7f9 fe4d 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e4e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8013e52:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013e56:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013e5a:	f8d8 0000 	ldr.w	r0, [r8]
 8013e5e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8013e62:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8013e66:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013e6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013e6e:	440c      	add	r4, r1
 8013e70:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013e74:	440a      	add	r2, r1
 8013e76:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8013e7a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8013e7e:	4413      	add	r3, r2
 8013e80:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013e84:	6803      	ldr	r3, [r0, #0]
 8013e86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013e88:	4798      	blx	r3
 8013e8a:	2dff      	cmp	r5, #255	; 0xff
 8013e8c:	d124      	bne.n	8013ed8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8013e8e:	f010 0f01 	tst.w	r0, #1
 8013e92:	f8d8 0000 	ldr.w	r0, [r8]
 8013e96:	d022      	beq.n	8013ede <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8013e98:	2100      	movs	r1, #0
 8013e9a:	f8d0 c000 	ldr.w	ip, [r0]
 8013e9e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013ea2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8013ea6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8013eaa:	f04f 0e01 	mov.w	lr, #1
 8013eae:	f8cd e018 	str.w	lr, [sp, #24]
 8013eb2:	f8b9 e000 	ldrh.w	lr, [r9]
 8013eb6:	9503      	str	r5, [sp, #12]
 8013eb8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8013ebc:	b2b6      	uxth	r6, r6
 8013ebe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013ec2:	9102      	str	r1, [sp, #8]
 8013ec4:	b2bf      	uxth	r7, r7
 8013ec6:	9601      	str	r6, [sp, #4]
 8013ec8:	9700      	str	r7, [sp, #0]
 8013eca:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8013ece:	4621      	mov	r1, r4
 8013ed0:	47a8      	blx	r5
 8013ed2:	b00e      	add	sp, #56	; 0x38
 8013ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013ed8:	f010 0f04 	tst.w	r0, #4
 8013edc:	e7d9      	b.n	8013e92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8013ede:	6803      	ldr	r3, [r0, #0]
 8013ee0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ee2:	4798      	blx	r3
 8013ee4:	f8b9 3000 	ldrh.w	r3, [r9]
 8013ee8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013eec:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8013ef0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8013ef4:	fb03 1202 	mla	r2, r3, r2, r1
 8013ef8:	ebac 0c07 	sub.w	ip, ip, r7
 8013efc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013f00:	435e      	muls	r6, r3
 8013f02:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8013f06:	2dff      	cmp	r5, #255	; 0xff
 8013f08:	eba3 0707 	sub.w	r7, r3, r7
 8013f0c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013f10:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013f14:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8013f18:	d049      	beq.n	8013fae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8013f1a:	43eb      	mvns	r3, r5
 8013f1c:	fa1f f985 	uxth.w	r9, r5
 8013f20:	b2db      	uxtb	r3, r3
 8013f22:	42b0      	cmp	r0, r6
 8013f24:	d266      	bcs.n	8013ff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8013f26:	eb00 0a0e 	add.w	sl, r0, lr
 8013f2a:	4550      	cmp	r0, sl
 8013f2c:	4621      	mov	r1, r4
 8013f2e:	f104 0403 	add.w	r4, r4, #3
 8013f32:	d25b      	bcs.n	8013fec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8013f34:	8802      	ldrh	r2, [r0, #0]
 8013f36:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013f3a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013f3e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8013f42:	fb11 f109 	smulbb	r1, r1, r9
 8013f46:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8013f4a:	10d5      	asrs	r5, r2, #3
 8013f4c:	fb08 1803 	mla	r8, r8, r3, r1
 8013f50:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8013f54:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013f58:	fb11 f109 	smulbb	r1, r1, r9
 8013f5c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013f60:	fb05 1503 	mla	r5, r5, r3, r1
 8013f64:	00d2      	lsls	r2, r2, #3
 8013f66:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8013f6a:	b2d2      	uxtb	r2, r2
 8013f6c:	fb11 f109 	smulbb	r1, r1, r9
 8013f70:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013f74:	fa1f f888 	uxth.w	r8, r8
 8013f78:	fb02 1203 	mla	r2, r2, r3, r1
 8013f7c:	b292      	uxth	r2, r2
 8013f7e:	f108 0101 	add.w	r1, r8, #1
 8013f82:	b2ad      	uxth	r5, r5
 8013f84:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8013f88:	1c51      	adds	r1, r2, #1
 8013f8a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013f8e:	1c69      	adds	r1, r5, #1
 8013f90:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8013f94:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8013f98:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013f9c:	096d      	lsrs	r5, r5, #5
 8013f9e:	ea42 0208 	orr.w	r2, r2, r8
 8013fa2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013fa6:	432a      	orrs	r2, r5
 8013fa8:	f820 2b02 	strh.w	r2, [r0], #2
 8013fac:	e7bd      	b.n	8013f2a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8013fae:	4a14      	ldr	r2, [pc, #80]	; (8014000 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8013fb0:	42b0      	cmp	r0, r6
 8013fb2:	d21f      	bcs.n	8013ff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8013fb4:	eb00 050e 	add.w	r5, r0, lr
 8013fb8:	42a8      	cmp	r0, r5
 8013fba:	4621      	mov	r1, r4
 8013fbc:	f104 0403 	add.w	r4, r4, #3
 8013fc0:	d210      	bcs.n	8013fe4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8013fc2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8013fc6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013fca:	00db      	lsls	r3, r3, #3
 8013fcc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8013fd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013fd4:	430b      	orrs	r3, r1
 8013fd6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8013fda:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8013fde:	f820 3b02 	strh.w	r3, [r0], #2
 8013fe2:	e7e9      	b.n	8013fb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8013fe4:	4438      	add	r0, r7
 8013fe6:	eb01 040c 	add.w	r4, r1, ip
 8013fea:	e7e1      	b.n	8013fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013fec:	4438      	add	r0, r7
 8013fee:	eb01 040c 	add.w	r4, r1, ip
 8013ff2:	e796      	b.n	8013f22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8013ff4:	4b03      	ldr	r3, [pc, #12]	; (8014004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8013ff6:	6818      	ldr	r0, [r3, #0]
 8013ff8:	6803      	ldr	r3, [r0, #0]
 8013ffa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ffc:	4798      	blx	r3
 8013ffe:	e768      	b.n	8013ed2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014000:	fffff800 	.word	0xfffff800
 8014004:	2000bfcc 	.word	0x2000bfcc
 8014008:	2000bfc6 	.word	0x2000bfc6

0801400c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801400c:	b570      	push	{r4, r5, r6, lr}
 801400e:	9c04      	ldr	r4, [sp, #16]
 8014010:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8014014:	4605      	mov	r5, r0
 8014016:	4608      	mov	r0, r1
 8014018:	4619      	mov	r1, r3
 801401a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801401e:	2a0d      	cmp	r2, #13
 8014020:	d825      	bhi.n	801406e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 8014022:	e8df f002 	tbb	[pc, r2]
 8014026:	1807      	.short	0x1807
 8014028:	1d1d1d13 	.word	0x1d1d1d13
 801402c:	1d1d1d1d 	.word	0x1d1d1d1d
 8014030:	1d1d1d1d 	.word	0x1d1d1d1d
 8014034:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8014038:	682a      	ldr	r2, [r5, #0]
 801403a:	68d6      	ldr	r6, [r2, #12]
 801403c:	4623      	mov	r3, r4
 801403e:	460a      	mov	r2, r1
 8014040:	46b4      	mov	ip, r6
 8014042:	4601      	mov	r1, r0
 8014044:	4628      	mov	r0, r5
 8014046:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801404a:	4760      	bx	ip
 801404c:	4622      	mov	r2, r4
 801404e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014052:	f7ff bd8d 	b.w	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014056:	4622      	mov	r2, r4
 8014058:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801405c:	f7ff bede 	b.w	8013e1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014060:	4b03      	ldr	r3, [pc, #12]	; (8014070 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8014062:	4a04      	ldr	r2, [pc, #16]	; (8014074 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8014064:	4804      	ldr	r0, [pc, #16]	; (8014078 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8014066:	f240 3159 	movw	r1, #857	; 0x359
 801406a:	f009 faa3 	bl	801d5b4 <__assert_func>
 801406e:	bd70      	pop	{r4, r5, r6, pc}
 8014070:	08021411 	.word	0x08021411
 8014074:	08021c1d 	.word	0x08021c1d
 8014078:	0802134c 	.word	0x0802134c

0801407c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801407c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014080:	b093      	sub	sp, #76	; 0x4c
 8014082:	880e      	ldrh	r6, [r1, #0]
 8014084:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014088:	4681      	mov	r9, r0
 801408a:	4688      	mov	r8, r1
 801408c:	4615      	mov	r5, r2
 801408e:	b136      	cbz	r6, 801409e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8014090:	4b70      	ldr	r3, [pc, #448]	; (8014254 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8014092:	4a71      	ldr	r2, [pc, #452]	; (8014258 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8014094:	4871      	ldr	r0, [pc, #452]	; (801425c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8014096:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801409a:	f009 fa8b 	bl	801d5b4 <__assert_func>
 801409e:	6810      	ldr	r0, [r2, #0]
 80140a0:	6851      	ldr	r1, [r2, #4]
 80140a2:	4f6f      	ldr	r7, [pc, #444]	; (8014260 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80140a4:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8014264 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 80140a8:	ac0e      	add	r4, sp, #56	; 0x38
 80140aa:	c403      	stmia	r4!, {r0, r1}
 80140ac:	6818      	ldr	r0, [r3, #0]
 80140ae:	6859      	ldr	r1, [r3, #4]
 80140b0:	ac10      	add	r4, sp, #64	; 0x40
 80140b2:	c403      	stmia	r4!, {r0, r1}
 80140b4:	a80e      	add	r0, sp, #56	; 0x38
 80140b6:	f7f9 fcef 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80140ba:	4629      	mov	r1, r5
 80140bc:	a810      	add	r0, sp, #64	; 0x40
 80140be:	f7f9 fd13 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80140c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80140c6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80140ca:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80140ce:	6838      	ldr	r0, [r7, #0]
 80140d0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80140d4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80140d8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80140dc:	4489      	add	r9, r1
 80140de:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80140e2:	440a      	add	r2, r1
 80140e4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80140e8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80140ec:	4413      	add	r3, r2
 80140ee:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80140f2:	6803      	ldr	r3, [r0, #0]
 80140f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80140f6:	4798      	blx	r3
 80140f8:	f010 0f80 	tst.w	r0, #128	; 0x80
 80140fc:	6838      	ldr	r0, [r7, #0]
 80140fe:	d01d      	beq.n	801413c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 8014100:	6802      	ldr	r2, [r0, #0]
 8014102:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014106:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801410a:	210b      	movs	r1, #11
 801410c:	9107      	str	r1, [sp, #28]
 801410e:	f8bb 1000 	ldrh.w	r1, [fp]
 8014112:	9106      	str	r1, [sp, #24]
 8014114:	2101      	movs	r1, #1
 8014116:	e9cd a104 	strd	sl, r1, [sp, #16]
 801411a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801411e:	9103      	str	r1, [sp, #12]
 8014120:	b2a4      	uxth	r4, r4
 8014122:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8014126:	9100      	str	r1, [sp, #0]
 8014128:	b2ad      	uxth	r5, r5
 801412a:	9502      	str	r5, [sp, #8]
 801412c:	9401      	str	r4, [sp, #4]
 801412e:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8014130:	4649      	mov	r1, r9
 8014132:	4642      	mov	r2, r8
 8014134:	47a0      	blx	r4
 8014136:	b013      	add	sp, #76	; 0x4c
 8014138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801413c:	6803      	ldr	r3, [r0, #0]
 801413e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014140:	4798      	blx	r3
 8014142:	f8bb 3000 	ldrh.w	r3, [fp]
 8014146:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801414a:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801414e:	fb03 1202 	mla	r2, r3, r2, r1
 8014152:	435d      	muls	r5, r3
 8014154:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014158:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801415c:	920c      	str	r2, [sp, #48]	; 0x30
 801415e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8014162:	1b12      	subs	r2, r2, r4
 8014164:	920d      	str	r2, [sp, #52]	; 0x34
 8014166:	0062      	lsls	r2, r4, #1
 8014168:	1b1c      	subs	r4, r3, r4
 801416a:	0063      	lsls	r3, r4, #1
 801416c:	920a      	str	r2, [sp, #40]	; 0x28
 801416e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014170:	f04f 0e04 	mov.w	lr, #4
 8014174:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014176:	4298      	cmp	r0, r3
 8014178:	d266      	bcs.n	8014248 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801417a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801417c:	eb00 0b03 	add.w	fp, r0, r3
 8014180:	4558      	cmp	r0, fp
 8014182:	d25c      	bcs.n	801423e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8014184:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014188:	fb1e e303 	smlabb	r3, lr, r3, lr
 801418c:	f858 2003 	ldr.w	r2, [r8, r3]
 8014190:	0e11      	lsrs	r1, r2, #24
 8014192:	d012      	beq.n	80141ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8014194:	29ff      	cmp	r1, #255	; 0xff
 8014196:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801419a:	d110      	bne.n	80141be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801419c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80141a0:	d10d      	bne.n	80141be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80141a2:	0953      	lsrs	r3, r2, #5
 80141a4:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80141a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80141ac:	f027 0707 	bic.w	r7, r7, #7
 80141b0:	431f      	orrs	r7, r3
 80141b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80141b6:	433a      	orrs	r2, r7
 80141b8:	8002      	strh	r2, [r0, #0]
 80141ba:	3002      	adds	r0, #2
 80141bc:	e7e0      	b.n	8014180 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 80141be:	fb0a f101 	mul.w	r1, sl, r1
 80141c2:	8806      	ldrh	r6, [r0, #0]
 80141c4:	1c4b      	adds	r3, r1, #1
 80141c6:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80141ca:	1235      	asrs	r5, r6, #8
 80141cc:	10f4      	asrs	r4, r6, #3
 80141ce:	121b      	asrs	r3, r3, #8
 80141d0:	00f6      	lsls	r6, r6, #3
 80141d2:	b299      	uxth	r1, r3
 80141d4:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80141d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80141dc:	b2f6      	uxtb	r6, r6
 80141de:	43db      	mvns	r3, r3
 80141e0:	b2d2      	uxtb	r2, r2
 80141e2:	b2db      	uxtb	r3, r3
 80141e4:	fb1c fc01 	smulbb	ip, ip, r1
 80141e8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80141ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80141f0:	fb12 f201 	smulbb	r2, r2, r1
 80141f4:	fb05 c503 	mla	r5, r5, r3, ip
 80141f8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80141fc:	b2ff      	uxtb	r7, r7
 80141fe:	fb06 2203 	mla	r2, r6, r3, r2
 8014202:	b2ad      	uxth	r5, r5
 8014204:	fb17 f701 	smulbb	r7, r7, r1
 8014208:	b292      	uxth	r2, r2
 801420a:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801420e:	fb04 7403 	mla	r4, r4, r3, r7
 8014212:	f105 0c01 	add.w	ip, r5, #1
 8014216:	1c57      	adds	r7, r2, #1
 8014218:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801421c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014220:	b2a4      	uxth	r4, r4
 8014222:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014226:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801422a:	433d      	orrs	r5, r7
 801422c:	1c67      	adds	r7, r4, #1
 801422e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014232:	0964      	lsrs	r4, r4, #5
 8014234:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8014238:	4325      	orrs	r5, r4
 801423a:	8005      	strh	r5, [r0, #0]
 801423c:	e7bd      	b.n	80141ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801423e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014240:	4418      	add	r0, r3
 8014242:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014244:	4499      	add	r9, r3
 8014246:	e795      	b.n	8014174 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014248:	4b05      	ldr	r3, [pc, #20]	; (8014260 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801424a:	6818      	ldr	r0, [r3, #0]
 801424c:	6803      	ldr	r3, [r0, #0]
 801424e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014250:	4798      	blx	r3
 8014252:	e770      	b.n	8014136 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8014254:	080211fc 	.word	0x080211fc
 8014258:	0802195b 	.word	0x0802195b
 801425c:	0802134c 	.word	0x0802134c
 8014260:	2000bfcc 	.word	0x2000bfcc
 8014264:	2000bfc6 	.word	0x2000bfc6

08014268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801426c:	4614      	mov	r4, r2
 801426e:	880a      	ldrh	r2, [r1, #0]
 8014270:	b087      	sub	sp, #28
 8014272:	2a02      	cmp	r2, #2
 8014274:	4680      	mov	r8, r0
 8014276:	460d      	mov	r5, r1
 8014278:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801427c:	d006      	beq.n	801428c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801427e:	4b63      	ldr	r3, [pc, #396]	; (801440c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8014280:	4a63      	ldr	r2, [pc, #396]	; (8014410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8014282:	4864      	ldr	r0, [pc, #400]	; (8014414 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8014284:	f240 11dd 	movw	r1, #477	; 0x1dd
 8014288:	f009 f994 	bl	801d5b4 <__assert_func>
 801428c:	2e00      	cmp	r6, #0
 801428e:	f000 80b9 	beq.w	8014404 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8014292:	6820      	ldr	r0, [r4, #0]
 8014294:	6861      	ldr	r1, [r4, #4]
 8014296:	af02      	add	r7, sp, #8
 8014298:	c703      	stmia	r7!, {r0, r1}
 801429a:	6818      	ldr	r0, [r3, #0]
 801429c:	6859      	ldr	r1, [r3, #4]
 801429e:	af04      	add	r7, sp, #16
 80142a0:	c703      	stmia	r7!, {r0, r1}
 80142a2:	a802      	add	r0, sp, #8
 80142a4:	f7f9 fbf8 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80142a8:	4621      	mov	r1, r4
 80142aa:	a804      	add	r0, sp, #16
 80142ac:	f7f9 fc1c 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80142b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80142b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80142b8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80142bc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80142c0:	fb14 2103 	smlabb	r1, r4, r3, r2
 80142c4:	eb08 0401 	add.w	r4, r8, r1
 80142c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80142cc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80142d0:	440a      	add	r2, r1
 80142d2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80142d6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80142da:	4413      	add	r3, r2
 80142dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 80142e0:	4b4d      	ldr	r3, [pc, #308]	; (8014418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80142e2:	6818      	ldr	r0, [r3, #0]
 80142e4:	6803      	ldr	r3, [r0, #0]
 80142e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80142e8:	4798      	blx	r3
 80142ea:	4b4c      	ldr	r3, [pc, #304]	; (801441c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80142ec:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80142f0:	881a      	ldrh	r2, [r3, #0]
 80142f2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80142f6:	2eff      	cmp	r6, #255	; 0xff
 80142f8:	fb02 c101 	mla	r1, r2, r1, ip
 80142fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014300:	fb02 f207 	mul.w	r2, r2, r7
 8014304:	f105 0104 	add.w	r1, r5, #4
 8014308:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801430c:	461d      	mov	r5, r3
 801430e:	d05a      	beq.n	80143c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8014310:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8014314:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014318:	b2b6      	uxth	r6, r6
 801431a:	fa1f fe8e 	uxth.w	lr, lr
 801431e:	9301      	str	r3, [sp, #4]
 8014320:	4282      	cmp	r2, r0
 8014322:	d96a      	bls.n	80143fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8014324:	eb00 0b0a 	add.w	fp, r0, sl
 8014328:	4583      	cmp	fp, r0
 801432a:	d940      	bls.n	80143ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801432c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014330:	8805      	ldrh	r5, [r0, #0]
 8014332:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014336:	122f      	asrs	r7, r5, #8
 8014338:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801433c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014340:	fb17 f70e 	smulbb	r7, r7, lr
 8014344:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014348:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801434c:	00ed      	lsls	r5, r5, #3
 801434e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014352:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014356:	10df      	asrs	r7, r3, #3
 8014358:	b2ed      	uxtb	r5, r5
 801435a:	00db      	lsls	r3, r3, #3
 801435c:	fa1f fc8c 	uxth.w	ip, ip
 8014360:	fb19 f90e 	smulbb	r9, r9, lr
 8014364:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014368:	b2db      	uxtb	r3, r3
 801436a:	fb15 f50e 	smulbb	r5, r5, lr
 801436e:	fb07 9706 	mla	r7, r7, r6, r9
 8014372:	fb03 5306 	mla	r3, r3, r6, r5
 8014376:	f10c 0901 	add.w	r9, ip, #1
 801437a:	b29b      	uxth	r3, r3
 801437c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014380:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8014384:	f103 0c01 	add.w	ip, r3, #1
 8014388:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801438c:	b2bf      	uxth	r7, r7
 801438e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014392:	ea4c 0c09 	orr.w	ip, ip, r9
 8014396:	f107 0901 	add.w	r9, r7, #1
 801439a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801439e:	097f      	lsrs	r7, r7, #5
 80143a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80143a4:	ea4c 0c07 	orr.w	ip, ip, r7
 80143a8:	f820 cb02 	strh.w	ip, [r0], #2
 80143ac:	e7bc      	b.n	8014328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80143ae:	9b01      	ldr	r3, [sp, #4]
 80143b0:	881b      	ldrh	r3, [r3, #0]
 80143b2:	eba3 0308 	sub.w	r3, r3, r8
 80143b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80143ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80143be:	eba3 0308 	sub.w	r3, r3, r8
 80143c2:	441c      	add	r4, r3
 80143c4:	e7ac      	b.n	8014320 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80143c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80143ca:	4282      	cmp	r2, r0
 80143cc:	d915      	bls.n	80143fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80143ce:	eb00 060a 	add.w	r6, r0, sl
 80143d2:	4286      	cmp	r6, r0
 80143d4:	d906      	bls.n	80143e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80143d6:	f814 3b01 	ldrb.w	r3, [r4], #1
 80143da:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80143de:	f820 3b02 	strh.w	r3, [r0], #2
 80143e2:	e7f6      	b.n	80143d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80143e4:	882b      	ldrh	r3, [r5, #0]
 80143e6:	eba3 0308 	sub.w	r3, r3, r8
 80143ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80143ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80143f2:	eba3 0308 	sub.w	r3, r3, r8
 80143f6:	441c      	add	r4, r3
 80143f8:	e7e7      	b.n	80143ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80143fa:	4b07      	ldr	r3, [pc, #28]	; (8014418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80143fc:	6818      	ldr	r0, [r3, #0]
 80143fe:	6803      	ldr	r3, [r0, #0]
 8014400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014402:	4798      	blx	r3
 8014404:	b007      	add	sp, #28
 8014406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801440a:	bf00      	nop
 801440c:	0802112c 	.word	0x0802112c
 8014410:	080217c5 	.word	0x080217c5
 8014414:	0802134c 	.word	0x0802134c
 8014418:	2000bfcc 	.word	0x2000bfcc
 801441c:	2000bfc6 	.word	0x2000bfc6

08014420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014424:	f8b1 9000 	ldrh.w	r9, [r1]
 8014428:	b091      	sub	sp, #68	; 0x44
 801442a:	f1b9 0f01 	cmp.w	r9, #1
 801442e:	4604      	mov	r4, r0
 8014430:	460f      	mov	r7, r1
 8014432:	4690      	mov	r8, r2
 8014434:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8014438:	d006      	beq.n	8014448 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801443a:	4b84      	ldr	r3, [pc, #528]	; (801464c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801443c:	4a84      	ldr	r2, [pc, #528]	; (8014650 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801443e:	4885      	ldr	r0, [pc, #532]	; (8014654 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8014440:	f240 212b 	movw	r1, #555	; 0x22b
 8014444:	f009 f8b6 	bl	801d5b4 <__assert_func>
 8014448:	2d00      	cmp	r5, #0
 801444a:	d04f      	beq.n	80144ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801444c:	6810      	ldr	r0, [r2, #0]
 801444e:	6851      	ldr	r1, [r2, #4]
 8014450:	f8df b208 	ldr.w	fp, [pc, #520]	; 801465c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8014454:	ae0c      	add	r6, sp, #48	; 0x30
 8014456:	c603      	stmia	r6!, {r0, r1}
 8014458:	6818      	ldr	r0, [r3, #0]
 801445a:	6859      	ldr	r1, [r3, #4]
 801445c:	ae0e      	add	r6, sp, #56	; 0x38
 801445e:	c603      	stmia	r6!, {r0, r1}
 8014460:	a80c      	add	r0, sp, #48	; 0x30
 8014462:	f7f9 fb19 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014466:	4641      	mov	r1, r8
 8014468:	a80e      	add	r0, sp, #56	; 0x38
 801446a:	f7f9 fb3d 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801446e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014472:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014476:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801447a:	f8db 0000 	ldr.w	r0, [fp]
 801447e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8014482:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8014486:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801448a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801448e:	440c      	add	r4, r1
 8014490:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014494:	440a      	add	r2, r1
 8014496:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801449a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801449e:	4413      	add	r3, r2
 80144a0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80144a4:	6803      	ldr	r3, [r0, #0]
 80144a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80144a8:	4798      	blx	r3
 80144aa:	f010 0f80 	tst.w	r0, #128	; 0x80
 80144ae:	f8db 0000 	ldr.w	r0, [fp]
 80144b2:	d01e      	beq.n	80144f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80144b4:	2200      	movs	r2, #0
 80144b6:	6801      	ldr	r1, [r0, #0]
 80144b8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80144bc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80144c0:	220b      	movs	r2, #11
 80144c2:	9207      	str	r2, [sp, #28]
 80144c4:	f8b8 2000 	ldrh.w	r2, [r8]
 80144c8:	9504      	str	r5, [sp, #16]
 80144ca:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80144ce:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80144d2:	9203      	str	r2, [sp, #12]
 80144d4:	fa1f f28a 	uxth.w	r2, sl
 80144d8:	9202      	str	r2, [sp, #8]
 80144da:	b2b6      	uxth	r6, r6
 80144dc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80144e0:	9200      	str	r2, [sp, #0]
 80144e2:	9601      	str	r6, [sp, #4]
 80144e4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80144e6:	463a      	mov	r2, r7
 80144e8:	4621      	mov	r1, r4
 80144ea:	47a8      	blx	r5
 80144ec:	b011      	add	sp, #68	; 0x44
 80144ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144f2:	6803      	ldr	r3, [r0, #0]
 80144f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80144f6:	4798      	blx	r3
 80144f8:	f8b8 2000 	ldrh.w	r2, [r8]
 80144fc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014500:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8014504:	2dff      	cmp	r5, #255	; 0xff
 8014506:	fb02 1303 	mla	r3, r2, r3, r1
 801450a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801450e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014512:	fb0a fa02 	mul.w	sl, sl, r2
 8014516:	d062      	beq.n	80145de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8014518:	ea6f 0c05 	mvn.w	ip, r5
 801451c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014520:	930a      	str	r3, [sp, #40]	; 0x28
 8014522:	b2ad      	uxth	r5, r5
 8014524:	fa5f fc8c 	uxtb.w	ip, ip
 8014528:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801452c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801452e:	4298      	cmp	r0, r3
 8014530:	f080 8085 	bcs.w	801463e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8014534:	eb00 0b09 	add.w	fp, r0, r9
 8014538:	4558      	cmp	r0, fp
 801453a:	d246      	bcs.n	80145ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801453c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014540:	2303      	movs	r3, #3
 8014542:	2204      	movs	r2, #4
 8014544:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8014548:	eb07 0a0e 	add.w	sl, r7, lr
 801454c:	8803      	ldrh	r3, [r0, #0]
 801454e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014552:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014556:	1219      	asrs	r1, r3, #8
 8014558:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801455c:	fb18 f805 	smulbb	r8, r8, r5
 8014560:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014564:	10da      	asrs	r2, r3, #3
 8014566:	fb01 810c 	mla	r1, r1, ip, r8
 801456a:	00db      	lsls	r3, r3, #3
 801456c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014570:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014574:	b2db      	uxtb	r3, r3
 8014576:	fb18 f805 	smulbb	r8, r8, r5
 801457a:	fb1e fe05 	smulbb	lr, lr, r5
 801457e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014582:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014586:	b289      	uxth	r1, r1
 8014588:	fb02 820c 	mla	r2, r2, ip, r8
 801458c:	fb03 e30c 	mla	r3, r3, ip, lr
 8014590:	b292      	uxth	r2, r2
 8014592:	b29b      	uxth	r3, r3
 8014594:	f101 0801 	add.w	r8, r1, #1
 8014598:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801459c:	f103 0e01 	add.w	lr, r3, #1
 80145a0:	f102 0801 	add.w	r8, r2, #1
 80145a4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80145a8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80145ac:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80145b0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80145b4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80145b8:	ea4e 0101 	orr.w	r1, lr, r1
 80145bc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80145c0:	ea41 0108 	orr.w	r1, r1, r8
 80145c4:	f820 1b02 	strh.w	r1, [r0], #2
 80145c8:	e7b6      	b.n	8014538 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80145ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80145cc:	881b      	ldrh	r3, [r3, #0]
 80145ce:	1b9b      	subs	r3, r3, r6
 80145d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80145d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80145d8:	1b9b      	subs	r3, r3, r6
 80145da:	441c      	add	r4, r3
 80145dc:	e7a6      	b.n	801452c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80145de:	491e      	ldr	r1, [pc, #120]	; (8014658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80145e0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80145e4:	2203      	movs	r2, #3
 80145e6:	2504      	movs	r5, #4
 80145e8:	4550      	cmp	r0, sl
 80145ea:	d228      	bcs.n	801463e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80145ec:	eb00 0c09 	add.w	ip, r0, r9
 80145f0:	4560      	cmp	r0, ip
 80145f2:	4623      	mov	r3, r4
 80145f4:	d219      	bcs.n	801462a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80145f6:	f893 e000 	ldrb.w	lr, [r3]
 80145fa:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80145fe:	eb07 0b0e 	add.w	fp, r7, lr
 8014602:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014606:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801460a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801460e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014612:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014616:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801461a:	ea43 030b 	orr.w	r3, r3, fp
 801461e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014622:	3401      	adds	r4, #1
 8014624:	f820 3b02 	strh.w	r3, [r0], #2
 8014628:	e7e2      	b.n	80145f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801462a:	f8b8 3000 	ldrh.w	r3, [r8]
 801462e:	1b9b      	subs	r3, r3, r6
 8014630:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014634:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014638:	1b9b      	subs	r3, r3, r6
 801463a:	441c      	add	r4, r3
 801463c:	e7d4      	b.n	80145e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801463e:	4b07      	ldr	r3, [pc, #28]	; (801465c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8014640:	6818      	ldr	r0, [r3, #0]
 8014642:	6803      	ldr	r3, [r0, #0]
 8014644:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014646:	4798      	blx	r3
 8014648:	e750      	b.n	80144ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801464a:	bf00      	nop
 801464c:	0802117a 	.word	0x0802117a
 8014650:	0802184e 	.word	0x0802184e
 8014654:	0802134c 	.word	0x0802134c
 8014658:	fffff800 	.word	0xfffff800
 801465c:	2000bfcc 	.word	0x2000bfcc
 8014660:	2000bfc6 	.word	0x2000bfc6

08014664 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014664:	b430      	push	{r4, r5}
 8014666:	780d      	ldrb	r5, [r1, #0]
 8014668:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801466c:	2d01      	cmp	r5, #1
 801466e:	d00a      	beq.n	8014686 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8014670:	d305      	bcc.n	801467e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8014672:	2d02      	cmp	r5, #2
 8014674:	d10b      	bne.n	801468e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8014676:	9402      	str	r4, [sp, #8]
 8014678:	bc30      	pop	{r4, r5}
 801467a:	f7ff bdf5 	b.w	8014268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801467e:	9402      	str	r4, [sp, #8]
 8014680:	bc30      	pop	{r4, r5}
 8014682:	f7ff bcfb 	b.w	801407c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014686:	9402      	str	r4, [sp, #8]
 8014688:	bc30      	pop	{r4, r5}
 801468a:	f7ff bec9 	b.w	8014420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801468e:	bc30      	pop	{r4, r5}
 8014690:	4770      	bx	lr
	...

08014694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014698:	4604      	mov	r4, r0
 801469a:	b087      	sub	sp, #28
 801469c:	6810      	ldr	r0, [r2, #0]
 801469e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80146a2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80148dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80146a6:	460e      	mov	r6, r1
 80146a8:	6851      	ldr	r1, [r2, #4]
 80146aa:	ad02      	add	r5, sp, #8
 80146ac:	c503      	stmia	r5!, {r0, r1}
 80146ae:	6818      	ldr	r0, [r3, #0]
 80146b0:	6859      	ldr	r1, [r3, #4]
 80146b2:	ad04      	add	r5, sp, #16
 80146b4:	4617      	mov	r7, r2
 80146b6:	c503      	stmia	r5!, {r0, r1}
 80146b8:	a802      	add	r0, sp, #8
 80146ba:	f7f9 f9ed 	bl	800da98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80146be:	4639      	mov	r1, r7
 80146c0:	a804      	add	r0, sp, #16
 80146c2:	f7f9 fa11 	bl	800dae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80146c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80146ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80146ce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80146d2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80146d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80146da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80146de:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80146e2:	440e      	add	r6, r1
 80146e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80146e8:	440a      	add	r2, r1
 80146ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 80146ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80146f2:	4413      	add	r3, r2
 80146f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80146f8:	4b77      	ldr	r3, [pc, #476]	; (80148d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80146fa:	6818      	ldr	r0, [r3, #0]
 80146fc:	6803      	ldr	r3, [r0, #0]
 80146fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014700:	4798      	blx	r3
 8014702:	f8b9 b000 	ldrh.w	fp, [r9]
 8014706:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801470a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801470e:	fb0b 2303 	mla	r3, fp, r3, r2
 8014712:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014716:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801471a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801471e:	fb05 f50b 	mul.w	r5, r5, fp
 8014722:	9300      	str	r3, [sp, #0]
 8014724:	d069      	beq.n	80147fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8014726:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801472a:	4558      	cmp	r0, fp
 801472c:	f080 80cc 	bcs.w	80148c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014730:	9b00      	ldr	r3, [sp, #0]
 8014732:	18c3      	adds	r3, r0, r3
 8014734:	9301      	str	r3, [sp, #4]
 8014736:	4631      	mov	r1, r6
 8014738:	9b01      	ldr	r3, [sp, #4]
 801473a:	4298      	cmp	r0, r3
 801473c:	d24f      	bcs.n	80147de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801473e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014742:	2a00      	cmp	r2, #0
 8014744:	d048      	beq.n	80147d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014746:	fb0a f202 	mul.w	r2, sl, r2
 801474a:	1c53      	adds	r3, r2, #1
 801474c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014750:	121b      	asrs	r3, r3, #8
 8014752:	d041      	beq.n	80147d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014754:	8802      	ldrh	r2, [r0, #0]
 8014756:	f8b4 c000 	ldrh.w	ip, [r4]
 801475a:	b29e      	uxth	r6, r3
 801475c:	1215      	asrs	r5, r2, #8
 801475e:	43db      	mvns	r3, r3
 8014760:	b2db      	uxtb	r3, r3
 8014762:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014766:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801476a:	fb15 f503 	smulbb	r5, r5, r3
 801476e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014772:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014776:	00d2      	lsls	r2, r2, #3
 8014778:	fb07 5706 	mla	r7, r7, r6, r5
 801477c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014780:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014784:	b2d2      	uxtb	r2, r2
 8014786:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801478a:	b2bf      	uxth	r7, r7
 801478c:	fb1e fe03 	smulbb	lr, lr, r3
 8014790:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014794:	fa5f fc8c 	uxtb.w	ip, ip
 8014798:	fb12 f203 	smulbb	r2, r2, r3
 801479c:	fb05 e506 	mla	r5, r5, r6, lr
 80147a0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80147a4:	f107 0e01 	add.w	lr, r7, #1
 80147a8:	fa1f fc8c 	uxth.w	ip, ip
 80147ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80147b0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80147b4:	f10c 0701 	add.w	r7, ip, #1
 80147b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80147bc:	b2ad      	uxth	r5, r5
 80147be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80147c2:	ea47 070e 	orr.w	r7, r7, lr
 80147c6:	f105 0e01 	add.w	lr, r5, #1
 80147ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80147ce:	096d      	lsrs	r5, r5, #5
 80147d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80147d4:	432f      	orrs	r7, r5
 80147d6:	8007      	strh	r7, [r0, #0]
 80147d8:	3002      	adds	r0, #2
 80147da:	3402      	adds	r4, #2
 80147dc:	e7ac      	b.n	8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80147de:	f8b9 3000 	ldrh.w	r3, [r9]
 80147e2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80147e6:	eba3 0308 	sub.w	r3, r3, r8
 80147ea:	eba6 0608 	sub.w	r6, r6, r8
 80147ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80147f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80147f6:	440e      	add	r6, r1
 80147f8:	e797      	b.n	801472a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80147fa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80147fe:	42a8      	cmp	r0, r5
 8014800:	d262      	bcs.n	80148c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014802:	9b00      	ldr	r3, [sp, #0]
 8014804:	4631      	mov	r1, r6
 8014806:	eb00 0b03 	add.w	fp, r0, r3
 801480a:	4558      	cmp	r0, fp
 801480c:	d24e      	bcs.n	80148ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801480e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014812:	b12b      	cbz	r3, 8014820 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014814:	2bff      	cmp	r3, #255	; 0xff
 8014816:	f8b4 e000 	ldrh.w	lr, [r4]
 801481a:	d104      	bne.n	8014826 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801481c:	f8a0 e000 	strh.w	lr, [r0]
 8014820:	3002      	adds	r0, #2
 8014822:	3402      	adds	r4, #2
 8014824:	e7f1      	b.n	801480a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8014826:	8802      	ldrh	r2, [r0, #0]
 8014828:	b29f      	uxth	r7, r3
 801482a:	1216      	asrs	r6, r2, #8
 801482c:	43db      	mvns	r3, r3
 801482e:	b2db      	uxtb	r3, r3
 8014830:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014834:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014838:	fb16 f603 	smulbb	r6, r6, r3
 801483c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8014840:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014844:	00d2      	lsls	r2, r2, #3
 8014846:	fb0c 6c07 	mla	ip, ip, r7, r6
 801484a:	b2d2      	uxtb	r2, r2
 801484c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014850:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014854:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014858:	fb1a fa03 	smulbb	sl, sl, r3
 801485c:	fa1f fc8c 	uxth.w	ip, ip
 8014860:	fb12 f303 	smulbb	r3, r2, r3
 8014864:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014868:	fa5f fe8e 	uxtb.w	lr, lr
 801486c:	fb06 a607 	mla	r6, r6, r7, sl
 8014870:	f10c 0201 	add.w	r2, ip, #1
 8014874:	fb0e 3307 	mla	r3, lr, r7, r3
 8014878:	b2b6      	uxth	r6, r6
 801487a:	b29b      	uxth	r3, r3
 801487c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014880:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8014884:	f106 0a01 	add.w	sl, r6, #1
 8014888:	f103 0c01 	add.w	ip, r3, #1
 801488c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014890:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014894:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014898:	0976      	lsrs	r6, r6, #5
 801489a:	ea4c 0c02 	orr.w	ip, ip, r2
 801489e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80148a2:	ea4c 0c06 	orr.w	ip, ip, r6
 80148a6:	f8a0 c000 	strh.w	ip, [r0]
 80148aa:	e7b9      	b.n	8014820 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80148ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80148b0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80148b4:	eba3 0308 	sub.w	r3, r3, r8
 80148b8:	eba6 0608 	sub.w	r6, r6, r8
 80148bc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80148c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80148c4:	440e      	add	r6, r1
 80148c6:	e79a      	b.n	80147fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80148c8:	4b03      	ldr	r3, [pc, #12]	; (80148d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80148ca:	6818      	ldr	r0, [r3, #0]
 80148cc:	6803      	ldr	r3, [r0, #0]
 80148ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80148d0:	4798      	blx	r3
 80148d2:	b007      	add	sp, #28
 80148d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148d8:	2000bfcc 	.word	0x2000bfcc
 80148dc:	2000bfc6 	.word	0x2000bfc6

080148e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80148e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148e4:	b089      	sub	sp, #36	; 0x24
 80148e6:	4682      	mov	sl, r0
 80148e8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80148ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80148ee:	460f      	mov	r7, r1
 80148f0:	4691      	mov	r9, r2
 80148f2:	4698      	mov	r8, r3
 80148f4:	2e00      	cmp	r6, #0
 80148f6:	d03d      	beq.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80148f8:	4608      	mov	r0, r1
 80148fa:	f7fb ff7d 	bl	80107f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80148fe:	4605      	mov	r5, r0
 8014900:	4638      	mov	r0, r7
 8014902:	f7fb ffbd 	bl	8010880 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014906:	f8ad 000e 	strh.w	r0, [sp, #14]
 801490a:	4638      	mov	r0, r7
 801490c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8014910:	f8ad 500c 	strh.w	r5, [sp, #12]
 8014914:	f8ad 800a 	strh.w	r8, [sp, #10]
 8014918:	f7fc f88a 	bl	8010a30 <_ZNK8touchgfx6Bitmap7getDataEv>
 801491c:	4605      	mov	r5, r0
 801491e:	4638      	mov	r0, r7
 8014920:	f7fc f8b8 	bl	8010a94 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8014924:	4681      	mov	r9, r0
 8014926:	4638      	mov	r0, r7
 8014928:	f7fc f90c 	bl	8010b44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801492c:	280b      	cmp	r0, #11
 801492e:	f200 816f 	bhi.w	8014c10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8014932:	e8df f010 	tbh	[pc, r0, lsl #1]
 8014936:	00c3      	.short	0x00c3
 8014938:	000c00b4 	.word	0x000c00b4
 801493c:	016d016d 	.word	0x016d016d
 8014940:	016d016d 	.word	0x016d016d
 8014944:	016d016d 	.word	0x016d016d
 8014948:	016d016d 	.word	0x016d016d
 801494c:	00bb      	.short	0x00bb
 801494e:	4bb3      	ldr	r3, [pc, #716]	; (8014c1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8014950:	6818      	ldr	r0, [r3, #0]
 8014952:	6803      	ldr	r3, [r0, #0]
 8014954:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014956:	4798      	blx	r3
 8014958:	2eff      	cmp	r6, #255	; 0xff
 801495a:	d121      	bne.n	80149a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801495c:	0683      	lsls	r3, r0, #26
 801495e:	d41f      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8014960:	4638      	mov	r0, r7
 8014962:	f7fc f82b 	bl	80109bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014966:	b940      	cbnz	r0, 801497a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8014968:	4623      	mov	r3, r4
 801496a:	aa02      	add	r2, sp, #8
 801496c:	4629      	mov	r1, r5
 801496e:	4650      	mov	r0, sl
 8014970:	f7ff f9e4 	bl	8013d3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014974:	b009      	add	sp, #36	; 0x24
 8014976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801497a:	f10d 0818 	add.w	r8, sp, #24
 801497e:	4639      	mov	r1, r7
 8014980:	4640      	mov	r0, r8
 8014982:	f7fb ffc1 	bl	8010908 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014986:	e898 0003 	ldmia.w	r8, {r0, r1}
 801498a:	af04      	add	r7, sp, #16
 801498c:	e887 0003 	stmia.w	r7, {r0, r1}
 8014990:	4638      	mov	r0, r7
 8014992:	4621      	mov	r1, r4
 8014994:	f7f5 febc 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 8014998:	4638      	mov	r0, r7
 801499a:	f7f5 fefc 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 801499e:	b130      	cbz	r0, 80149ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 80149a0:	4633      	mov	r3, r6
 80149a2:	4622      	mov	r2, r4
 80149a4:	a902      	add	r1, sp, #8
 80149a6:	4628      	mov	r0, r5
 80149a8:	f7ff f8e2 	bl	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80149ac:	e7e2      	b.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80149ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80149b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80149b6:	4293      	cmp	r3, r2
 80149b8:	dd12      	ble.n	80149e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 80149ba:	1a9b      	subs	r3, r3, r2
 80149bc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80149c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80149c4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80149c8:	f8ad 201a 	strh.w	r2, [sp, #26]
 80149cc:	f8ad 101c 	strh.w	r1, [sp, #28]
 80149d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80149d4:	4642      	mov	r2, r8
 80149d6:	4633      	mov	r3, r6
 80149d8:	a902      	add	r1, sp, #8
 80149da:	4628      	mov	r0, r5
 80149dc:	f7ff f8c8 	bl	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80149e0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80149e4:	f9b4 2000 	ldrsh.w	r2, [r4]
 80149e8:	4293      	cmp	r3, r2
 80149ea:	dd12      	ble.n	8014a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 80149ec:	1a9b      	subs	r3, r3, r2
 80149ee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80149f2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80149f6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80149fa:	f8ad 001a 	strh.w	r0, [sp, #26]
 80149fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014a02:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014a06:	23ff      	movs	r3, #255	; 0xff
 8014a08:	4642      	mov	r2, r8
 8014a0a:	a902      	add	r1, sp, #8
 8014a0c:	4628      	mov	r0, r5
 8014a0e:	f7ff f8af 	bl	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014a12:	463b      	mov	r3, r7
 8014a14:	aa02      	add	r2, sp, #8
 8014a16:	4629      	mov	r1, r5
 8014a18:	4650      	mov	r0, sl
 8014a1a:	f7ff f98f 	bl	8013d3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014a1e:	88a2      	ldrh	r2, [r4, #4]
 8014a20:	8823      	ldrh	r3, [r4, #0]
 8014a22:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014a26:	4413      	add	r3, r2
 8014a28:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014a2c:	440a      	add	r2, r1
 8014a2e:	b29b      	uxth	r3, r3
 8014a30:	b292      	uxth	r2, r2
 8014a32:	b211      	sxth	r1, r2
 8014a34:	b218      	sxth	r0, r3
 8014a36:	4288      	cmp	r0, r1
 8014a38:	dd12      	ble.n	8014a60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8014a3a:	1a9b      	subs	r3, r3, r2
 8014a3c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014a40:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8014a44:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014a48:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014a4c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014a50:	23ff      	movs	r3, #255	; 0xff
 8014a52:	4642      	mov	r2, r8
 8014a54:	a902      	add	r1, sp, #8
 8014a56:	4628      	mov	r0, r5
 8014a58:	f8ad 601a 	strh.w	r6, [sp, #26]
 8014a5c:	f7ff f888 	bl	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014a60:	88e2      	ldrh	r2, [r4, #6]
 8014a62:	8863      	ldrh	r3, [r4, #2]
 8014a64:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014a68:	4413      	add	r3, r2
 8014a6a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014a6e:	440a      	add	r2, r1
 8014a70:	b29b      	uxth	r3, r3
 8014a72:	b292      	uxth	r2, r2
 8014a74:	b211      	sxth	r1, r2
 8014a76:	b218      	sxth	r0, r3
 8014a78:	4288      	cmp	r0, r1
 8014a7a:	f77f af7b 	ble.w	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014a7e:	1a9b      	subs	r3, r3, r2
 8014a80:	f9b4 6000 	ldrsh.w	r6, [r4]
 8014a84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014a88:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014a8c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014a90:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014a94:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014a98:	23ff      	movs	r3, #255	; 0xff
 8014a9a:	4642      	mov	r2, r8
 8014a9c:	e782      	b.n	80149a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8014a9e:	4633      	mov	r3, r6
 8014aa0:	4622      	mov	r2, r4
 8014aa2:	a902      	add	r1, sp, #8
 8014aa4:	4628      	mov	r0, r5
 8014aa6:	f7ff f9b9 	bl	8013e1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014aaa:	e763      	b.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014aac:	9600      	str	r6, [sp, #0]
 8014aae:	4623      	mov	r3, r4
 8014ab0:	aa02      	add	r2, sp, #8
 8014ab2:	4649      	mov	r1, r9
 8014ab4:	4628      	mov	r0, r5
 8014ab6:	f7ff fdd5 	bl	8014664 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8014aba:	e75b      	b.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014abc:	4638      	mov	r0, r7
 8014abe:	f7fb ff7d 	bl	80109bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014ac2:	b950      	cbnz	r0, 8014ada <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8014ac4:	e9cd 6000 	strd	r6, r0, [sp]
 8014ac8:	f8da 3000 	ldr.w	r3, [sl]
 8014acc:	aa02      	add	r2, sp, #8
 8014ace:	68de      	ldr	r6, [r3, #12]
 8014ad0:	4629      	mov	r1, r5
 8014ad2:	4623      	mov	r3, r4
 8014ad4:	4650      	mov	r0, sl
 8014ad6:	47b0      	blx	r6
 8014ad8:	e74c      	b.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014ada:	f10d 0818 	add.w	r8, sp, #24
 8014ade:	4639      	mov	r1, r7
 8014ae0:	4640      	mov	r0, r8
 8014ae2:	f7fb ff11 	bl	8010908 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014ae6:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014aea:	af04      	add	r7, sp, #16
 8014aec:	e887 0003 	stmia.w	r7, {r0, r1}
 8014af0:	4638      	mov	r0, r7
 8014af2:	4621      	mov	r1, r4
 8014af4:	f7f5 fe0c 	bl	800a710 <_ZN8touchgfx4RectaNERKS0_>
 8014af8:	4638      	mov	r0, r7
 8014afa:	f7f5 fe4c 	bl	800a796 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014afe:	b138      	cbz	r0, 8014b10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8014b00:	9600      	str	r6, [sp, #0]
 8014b02:	4623      	mov	r3, r4
 8014b04:	aa02      	add	r2, sp, #8
 8014b06:	4649      	mov	r1, r9
 8014b08:	4628      	mov	r0, r5
 8014b0a:	f7ff fdc3 	bl	8014694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014b0e:	e731      	b.n	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014b10:	e9cd 6000 	strd	r6, r0, [sp]
 8014b14:	f8da 3000 	ldr.w	r3, [sl]
 8014b18:	aa02      	add	r2, sp, #8
 8014b1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8014b1e:	4629      	mov	r1, r5
 8014b20:	463b      	mov	r3, r7
 8014b22:	4650      	mov	r0, sl
 8014b24:	47d8      	blx	fp
 8014b26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014b2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014b2e:	4293      	cmp	r3, r2
 8014b30:	dd13      	ble.n	8014b5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8014b32:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014b36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014b3a:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014b3e:	1a9b      	subs	r3, r3, r2
 8014b40:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014b44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014b48:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014b4c:	9600      	str	r6, [sp, #0]
 8014b4e:	4643      	mov	r3, r8
 8014b50:	aa02      	add	r2, sp, #8
 8014b52:	4649      	mov	r1, r9
 8014b54:	4628      	mov	r0, r5
 8014b56:	f7ff fd9d 	bl	8014694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014b5a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014b5e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014b62:	4293      	cmp	r3, r2
 8014b64:	dd13      	ble.n	8014b8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8014b66:	1a9b      	subs	r3, r3, r2
 8014b68:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014b6c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014b70:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014b74:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014b78:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014b7c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014b80:	9600      	str	r6, [sp, #0]
 8014b82:	4643      	mov	r3, r8
 8014b84:	aa02      	add	r2, sp, #8
 8014b86:	4649      	mov	r1, r9
 8014b88:	4628      	mov	r0, r5
 8014b8a:	f7ff fd83 	bl	8014694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014b8e:	88a2      	ldrh	r2, [r4, #4]
 8014b90:	8823      	ldrh	r3, [r4, #0]
 8014b92:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014b96:	4413      	add	r3, r2
 8014b98:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014b9c:	440a      	add	r2, r1
 8014b9e:	b29b      	uxth	r3, r3
 8014ba0:	b292      	uxth	r2, r2
 8014ba2:	b211      	sxth	r1, r2
 8014ba4:	b218      	sxth	r0, r3
 8014ba6:	4288      	cmp	r0, r1
 8014ba8:	dd13      	ble.n	8014bd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8014baa:	1a9b      	subs	r3, r3, r2
 8014bac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014bb0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8014bb4:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014bb8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014bbc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014bc0:	9600      	str	r6, [sp, #0]
 8014bc2:	4643      	mov	r3, r8
 8014bc4:	aa02      	add	r2, sp, #8
 8014bc6:	4649      	mov	r1, r9
 8014bc8:	4628      	mov	r0, r5
 8014bca:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014bce:	f7ff fd61 	bl	8014694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014bd2:	88e2      	ldrh	r2, [r4, #6]
 8014bd4:	8863      	ldrh	r3, [r4, #2]
 8014bd6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014bda:	4413      	add	r3, r2
 8014bdc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014be0:	440a      	add	r2, r1
 8014be2:	b29b      	uxth	r3, r3
 8014be4:	b292      	uxth	r2, r2
 8014be6:	b211      	sxth	r1, r2
 8014be8:	b218      	sxth	r0, r3
 8014bea:	4288      	cmp	r0, r1
 8014bec:	f77f aec2 	ble.w	8014974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014bf0:	f9b4 7000 	ldrsh.w	r7, [r4]
 8014bf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014bf8:	f8ad 7018 	strh.w	r7, [sp, #24]
 8014bfc:	1a9b      	subs	r3, r3, r2
 8014bfe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014c02:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014c06:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014c0a:	9600      	str	r6, [sp, #0]
 8014c0c:	4643      	mov	r3, r8
 8014c0e:	e779      	b.n	8014b04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8014c10:	4b03      	ldr	r3, [pc, #12]	; (8014c20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8014c12:	4a04      	ldr	r2, [pc, #16]	; (8014c24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8014c14:	4804      	ldr	r0, [pc, #16]	; (8014c28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8014c16:	21b0      	movs	r1, #176	; 0xb0
 8014c18:	f008 fccc 	bl	801d5b4 <__assert_func>
 8014c1c:	2000bfcc 	.word	0x2000bfcc
 8014c20:	080211c8 	.word	0x080211c8
 8014c24:	080218d7 	.word	0x080218d7
 8014c28:	0802134c 	.word	0x0802134c

08014c2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8014c2c:	b508      	push	{r3, lr}
 8014c2e:	b180      	cbz	r0, 8014c52 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8014c30:	2902      	cmp	r1, #2
 8014c32:	d014      	beq.n	8014c5e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8014c34:	2903      	cmp	r1, #3
 8014c36:	d01d      	beq.n	8014c74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014c38:	2901      	cmp	r1, #1
 8014c3a:	d101      	bne.n	8014c40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014c3c:	2001      	movs	r0, #1
 8014c3e:	bd08      	pop	{r3, pc}
 8014c40:	4b0e      	ldr	r3, [pc, #56]	; (8014c7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014c42:	8818      	ldrh	r0, [r3, #0]
 8014c44:	b990      	cbnz	r0, 8014c6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014c46:	4b0e      	ldr	r3, [pc, #56]	; (8014c80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8014c48:	4a0e      	ldr	r2, [pc, #56]	; (8014c84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8014c4a:	480f      	ldr	r0, [pc, #60]	; (8014c88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8014c4c:	2153      	movs	r1, #83	; 0x53
 8014c4e:	f008 fcb1 	bl	801d5b4 <__assert_func>
 8014c52:	2902      	cmp	r1, #2
 8014c54:	d00e      	beq.n	8014c74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014c56:	2903      	cmp	r1, #3
 8014c58:	d0f2      	beq.n	8014c40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014c5a:	2901      	cmp	r1, #1
 8014c5c:	d1ee      	bne.n	8014c3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8014c5e:	4b07      	ldr	r3, [pc, #28]	; (8014c7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014c60:	8818      	ldrh	r0, [r3, #0]
 8014c62:	2800      	cmp	r0, #0
 8014c64:	d0ef      	beq.n	8014c46 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8014c66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014c6a:	e7e8      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014c6c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014c70:	4240      	negs	r0, r0
 8014c72:	e7e4      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014c74:	f04f 30ff 	mov.w	r0, #4294967295
 8014c78:	e7e1      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014c7a:	bf00      	nop
 8014c7c:	2000bfc6 	.word	0x2000bfc6
 8014c80:	08021442 	.word	0x08021442
 8014c84:	08021a54 	.word	0x08021a54
 8014c88:	08021484 	.word	0x08021484

08014c8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8014c8c:	b508      	push	{r3, lr}
 8014c8e:	b180      	cbz	r0, 8014cb2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8014c90:	2902      	cmp	r1, #2
 8014c92:	d014      	beq.n	8014cbe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8014c94:	2903      	cmp	r1, #3
 8014c96:	d018      	beq.n	8014cca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014c98:	2901      	cmp	r1, #1
 8014c9a:	d001      	beq.n	8014ca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014c9c:	2001      	movs	r0, #1
 8014c9e:	e013      	b.n	8014cc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014ca0:	4b0e      	ldr	r3, [pc, #56]	; (8014cdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014ca2:	8818      	ldrh	r0, [r3, #0]
 8014ca4:	b970      	cbnz	r0, 8014cc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8014ca6:	4b0e      	ldr	r3, [pc, #56]	; (8014ce0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8014ca8:	4a0e      	ldr	r2, [pc, #56]	; (8014ce4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8014caa:	480f      	ldr	r0, [pc, #60]	; (8014ce8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8014cac:	2153      	movs	r1, #83	; 0x53
 8014cae:	f008 fc81 	bl	801d5b4 <__assert_func>
 8014cb2:	2902      	cmp	r1, #2
 8014cb4:	d009      	beq.n	8014cca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014cb6:	2903      	cmp	r1, #3
 8014cb8:	d0f0      	beq.n	8014c9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8014cba:	2901      	cmp	r1, #1
 8014cbc:	d1f0      	bne.n	8014ca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014cbe:	f04f 30ff 	mov.w	r0, #4294967295
 8014cc2:	e001      	b.n	8014cc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014cc4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014cc8:	bd08      	pop	{r3, pc}
 8014cca:	4b04      	ldr	r3, [pc, #16]	; (8014cdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014ccc:	8818      	ldrh	r0, [r3, #0]
 8014cce:	2800      	cmp	r0, #0
 8014cd0:	d0e9      	beq.n	8014ca6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8014cd2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014cd6:	4240      	negs	r0, r0
 8014cd8:	e7f6      	b.n	8014cc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014cda:	bf00      	nop
 8014cdc:	2000bfc6 	.word	0x2000bfc6
 8014ce0:	08021442 	.word	0x08021442
 8014ce4:	08021a54 	.word	0x08021a54
 8014ce8:	08021484 	.word	0x08021484

08014cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8014cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cf0:	b099      	sub	sp, #100	; 0x64
 8014cf2:	910b      	str	r1, [sp, #44]	; 0x2c
 8014cf4:	a914      	add	r1, sp, #80	; 0x50
 8014cf6:	e881 000c 	stmia.w	r1, {r2, r3}
 8014cfa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8014cfe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8014d02:	930a      	str	r3, [sp, #40]	; 0x28
 8014d04:	f891 900d 	ldrb.w	r9, [r1, #13]
 8014d08:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8014d0c:	9311      	str	r3, [sp, #68]	; 0x44
 8014d0e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8014d12:	930c      	str	r3, [sp, #48]	; 0x30
 8014d14:	7988      	ldrb	r0, [r1, #6]
 8014d16:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8014d1a:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8014d1e:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8014d22:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8014d26:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8014d2a:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8014d2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014d32:	4303      	orrs	r3, r0
 8014d34:	9309      	str	r3, [sp, #36]	; 0x24
 8014d36:	f000 81a1 	beq.w	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014d3a:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8014d3e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014d42:	f891 9007 	ldrb.w	r9, [r1, #7]
 8014d46:	ea59 0903 	orrs.w	r9, r9, r3
 8014d4a:	f000 8197 	beq.w	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014d4e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8014d52:	b29b      	uxth	r3, r3
 8014d54:	2e00      	cmp	r6, #0
 8014d56:	f000 813a 	beq.w	8014fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8014d5a:	1af6      	subs	r6, r6, r3
 8014d5c:	b2b6      	uxth	r6, r6
 8014d5e:	0433      	lsls	r3, r6, #16
 8014d60:	d502      	bpl.n	8014d68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8014d62:	1bad      	subs	r5, r5, r6
 8014d64:	b22d      	sxth	r5, r5
 8014d66:	2600      	movs	r6, #0
 8014d68:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014d6c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8014d70:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014d74:	428d      	cmp	r5, r1
 8014d76:	b28b      	uxth	r3, r1
 8014d78:	bfbf      	itttt	lt
 8014d7a:	18f6      	addlt	r6, r6, r3
 8014d7c:	1b75      	sublt	r5, r6, r5
 8014d7e:	b2ae      	uxthlt	r6, r5
 8014d80:	460d      	movlt	r5, r1
 8014d82:	8891      	ldrh	r1, [r2, #4]
 8014d84:	440b      	add	r3, r1
 8014d86:	b21b      	sxth	r3, r3
 8014d88:	9310      	str	r3, [sp, #64]	; 0x40
 8014d8a:	88d3      	ldrh	r3, [r2, #6]
 8014d8c:	8852      	ldrh	r2, [r2, #2]
 8014d8e:	4413      	add	r3, r2
 8014d90:	b21b      	sxth	r3, r3
 8014d92:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d94:	4bbc      	ldr	r3, [pc, #752]	; (8015088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014d96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d98:	f893 b000 	ldrb.w	fp, [r3]
 8014d9c:	f10b 3cff 	add.w	ip, fp, #4294967295
 8014da0:	f1dc 0300 	rsbs	r3, ip, #0
 8014da4:	eb43 030c 	adc.w	r3, r3, ip
 8014da8:	930e      	str	r3, [sp, #56]	; 0x38
 8014daa:	4629      	mov	r1, r5
 8014dac:	4653      	mov	r3, sl
 8014dae:	a814      	add	r0, sp, #80	; 0x50
 8014db0:	f7f8 fcf7 	bl	800d7a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8014db4:	4629      	mov	r1, r5
 8014db6:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8014dba:	4653      	mov	r3, sl
 8014dbc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014dbe:	a814      	add	r0, sp, #80	; 0x50
 8014dc0:	f7f8 fd07 	bl	800d7d2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014dc4:	a918      	add	r1, sp, #96	; 0x60
 8014dc6:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014dca:	a817      	add	r0, sp, #92	; 0x5c
 8014dcc:	f7f8 fe22 	bl	800da14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8014dd0:	f1ba 0f00 	cmp.w	sl, #0
 8014dd4:	f040 80fe 	bne.w	8014fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8014dd8:	f1bb 0f01 	cmp.w	fp, #1
 8014ddc:	f040 8102 	bne.w	8014fe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8014de0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014de2:	b153      	cbz	r3, 8014dfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8014de4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014de6:	2408      	movs	r4, #8
 8014de8:	fb94 f3f8 	sdiv	r3, r4, r8
 8014dec:	1e5c      	subs	r4, r3, #1
 8014dee:	4414      	add	r4, r2
 8014df0:	fb94 f4f3 	sdiv	r4, r4, r3
 8014df4:	fb14 f403 	smulbb	r4, r4, r3
 8014df8:	b2a4      	uxth	r4, r4
 8014dfa:	b906      	cbnz	r6, 8014dfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8014dfc:	b16f      	cbz	r7, 8014e1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8014dfe:	fb07 6304 	mla	r3, r7, r4, r6
 8014e02:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014e04:	fb08 f303 	mul.w	r3, r8, r3
 8014e08:	463a      	mov	r2, r7
 8014e0a:	f003 0707 	and.w	r7, r3, #7
 8014e0e:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8014e12:	9328      	str	r3, [sp, #160]	; 0xa0
 8014e14:	eba9 0302 	sub.w	r3, r9, r2
 8014e18:	930d      	str	r3, [sp, #52]	; 0x34
 8014e1a:	4651      	mov	r1, sl
 8014e1c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014e1e:	f7ff ff05 	bl	8014c2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8014e22:	4651      	mov	r1, sl
 8014e24:	4681      	mov	r9, r0
 8014e26:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014e28:	f7ff ff30 	bl	8014c8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014e2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014e2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014e30:	eba3 0a02 	sub.w	sl, r3, r2
 8014e34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e36:	459a      	cmp	sl, r3
 8014e38:	bfa8      	it	ge
 8014e3a:	469a      	movge	sl, r3
 8014e3c:	f1ba 0f00 	cmp.w	sl, #0
 8014e40:	4683      	mov	fp, r0
 8014e42:	f340 811b 	ble.w	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014e46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014e48:	1bad      	subs	r5, r5, r6
 8014e4a:	1b5d      	subs	r5, r3, r5
 8014e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e4e:	429d      	cmp	r5, r3
 8014e50:	bfd4      	ite	le
 8014e52:	ebc6 0605 	rsble	r6, r6, r5
 8014e56:	ebc6 0603 	rsbgt	r6, r6, r3
 8014e5a:	2e00      	cmp	r6, #0
 8014e5c:	f340 810e 	ble.w	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014e60:	1ba4      	subs	r4, r4, r6
 8014e62:	fb08 f304 	mul.w	r3, r8, r4
 8014e66:	930f      	str	r3, [sp, #60]	; 0x3c
 8014e68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014e6a:	2b00      	cmp	r3, #0
 8014e6c:	f040 8114 	bne.w	8015098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8014e70:	4b86      	ldr	r3, [pc, #536]	; (801508c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8014e72:	6818      	ldr	r0, [r3, #0]
 8014e74:	6803      	ldr	r3, [r0, #0]
 8014e76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014e78:	4798      	blx	r3
 8014e7a:	2301      	movs	r3, #1
 8014e7c:	fa03 f308 	lsl.w	r3, r3, r8
 8014e80:	4a83      	ldr	r2, [pc, #524]	; (8015090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8014e82:	3b01      	subs	r3, #1
 8014e84:	b2db      	uxtb	r3, r3
 8014e86:	8811      	ldrh	r1, [r2, #0]
 8014e88:	930e      	str	r3, [sp, #56]	; 0x38
 8014e8a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8014e8e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8014e92:	fb01 2303 	mla	r3, r1, r3, r2
 8014e96:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014e9a:	930a      	str	r3, [sp, #40]	; 0x28
 8014e9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e9e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8014ea2:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ea4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ea6:	0a19      	lsrs	r1, r3, #8
 8014ea8:	b2cb      	uxtb	r3, r1
 8014eaa:	9312      	str	r3, [sp, #72]	; 0x48
 8014eac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014eae:	b2db      	uxtb	r3, r3
 8014eb0:	9311      	str	r3, [sp, #68]	; 0x44
 8014eb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014eb4:	095a      	lsrs	r2, r3, #5
 8014eb6:	4b77      	ldr	r3, [pc, #476]	; (8015094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8014eb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014ebc:	400b      	ands	r3, r1
 8014ebe:	4313      	orrs	r3, r2
 8014ec0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014ec2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014ec6:	4313      	orrs	r3, r2
 8014ec8:	b29b      	uxth	r3, r3
 8014eca:	9310      	str	r3, [sp, #64]	; 0x40
 8014ecc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014ece:	781a      	ldrb	r2, [r3, #0]
 8014ed0:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8014ed4:	413a      	asrs	r2, r7
 8014ed6:	fb06 b919 	mls	r9, r6, r9, fp
 8014eda:	fb03 fb06 	mul.w	fp, r3, r6
 8014ede:	b2d2      	uxtb	r2, r2
 8014ee0:	930d      	str	r3, [sp, #52]	; 0x34
 8014ee2:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8014ee6:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014eea:	f0c0 80ea 	bcc.w	80150c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8014eee:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8014ef2:	46b6      	mov	lr, r6
 8014ef4:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8014ef8:	f0c0 80d2 	bcc.w	80150a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8014efc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014efe:	4013      	ands	r3, r2
 8014f00:	d055      	beq.n	8014fae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8014f02:	20ff      	movs	r0, #255	; 0xff
 8014f04:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014f06:	fb90 f1f1 	sdiv	r1, r0, r1
 8014f0a:	434b      	muls	r3, r1
 8014f0c:	2bfe      	cmp	r3, #254	; 0xfe
 8014f0e:	dd03      	ble.n	8014f18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8014f10:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014f12:	4281      	cmp	r1, r0
 8014f14:	f000 80c2 	beq.w	801509c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8014f18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014f1a:	f8bc 4000 	ldrh.w	r4, [ip]
 8014f1e:	fb11 f303 	smulbb	r3, r1, r3
 8014f22:	b29b      	uxth	r3, r3
 8014f24:	1c59      	adds	r1, r3, #1
 8014f26:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014f2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014f2e:	b29d      	uxth	r5, r3
 8014f30:	43db      	mvns	r3, r3
 8014f32:	b2db      	uxtb	r3, r3
 8014f34:	9309      	str	r3, [sp, #36]	; 0x24
 8014f36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014f38:	1220      	asrs	r0, r4, #8
 8014f3a:	fb13 f905 	smulbb	r9, r3, r5
 8014f3e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014f42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f44:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8014f48:	fb00 9003 	mla	r0, r0, r3, r9
 8014f4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014f4e:	10e1      	asrs	r1, r4, #3
 8014f50:	fb13 f905 	smulbb	r9, r3, r5
 8014f54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f5a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014f5e:	fb01 9103 	mla	r1, r1, r3, r9
 8014f62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f64:	00e4      	lsls	r4, r4, #3
 8014f66:	fb13 f505 	smulbb	r5, r3, r5
 8014f6a:	b2e4      	uxtb	r4, r4
 8014f6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f6e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014f72:	fb04 5403 	mla	r4, r4, r3, r5
 8014f76:	b280      	uxth	r0, r0
 8014f78:	b2a4      	uxth	r4, r4
 8014f7a:	1c43      	adds	r3, r0, #1
 8014f7c:	f104 0901 	add.w	r9, r4, #1
 8014f80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014f84:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8014f88:	b289      	uxth	r1, r1
 8014f8a:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014f8e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014f92:	ea49 0000 	orr.w	r0, r9, r0
 8014f96:	f101 0901 	add.w	r9, r1, #1
 8014f9a:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014f9e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014fa2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014fa6:	ea40 0009 	orr.w	r0, r0, r9
 8014faa:	f8ac 0000 	strh.w	r0, [ip]
 8014fae:	4447      	add	r7, r8
 8014fb0:	b2bf      	uxth	r7, r7
 8014fb2:	2f07      	cmp	r7, #7
 8014fb4:	bf81      	itttt	hi
 8014fb6:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8014fb8:	785a      	ldrbhi	r2, [r3, #1]
 8014fba:	3301      	addhi	r3, #1
 8014fbc:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014fbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fc0:	bf9a      	itte	ls
 8014fc2:	fa42 f208 	asrls.w	r2, r2, r8
 8014fc6:	b2d2      	uxtbls	r2, r2
 8014fc8:	2700      	movhi	r7, #0
 8014fca:	449c      	add	ip, r3
 8014fcc:	e792      	b.n	8014ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8014fce:	441d      	add	r5, r3
 8014fd0:	b22d      	sxth	r5, r5
 8014fd2:	e6c9      	b.n	8014d68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8014fd4:	f1ba 0f01 	cmp.w	sl, #1
 8014fd8:	f47f af02 	bne.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014fdc:	f1bb 0f01 	cmp.w	fp, #1
 8014fe0:	f47f aefe 	bne.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014fe4:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801508c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014fe8:	f8db 0000 	ldr.w	r0, [fp]
 8014fec:	6803      	ldr	r3, [r0, #0]
 8014fee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ff0:	4798      	blx	r3
 8014ff2:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8014ff6:	465a      	mov	r2, fp
 8014ff8:	d006      	beq.n	8015008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8014ffa:	f1b8 0f04 	cmp.w	r8, #4
 8014ffe:	d140      	bne.n	8015082 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015000:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015002:	3300      	adds	r3, #0
 8015004:	bf18      	it	ne
 8015006:	2301      	movne	r3, #1
 8015008:	0580      	lsls	r0, r0, #22
 801500a:	d563      	bpl.n	80150d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801500c:	f1b8 0f08 	cmp.w	r8, #8
 8015010:	d160      	bne.n	80150d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8015012:	2b00      	cmp	r3, #0
 8015014:	bf0c      	ite	eq
 8015016:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801501a:	f44f 7180 	movne.w	r1, #256	; 0x100
 801501e:	2e00      	cmp	r6, #0
 8015020:	f47f aede 	bne.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015024:	2f00      	cmp	r7, #0
 8015026:	f47f aedb 	bne.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801502a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801502c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801502e:	18eb      	adds	r3, r5, r3
 8015030:	4283      	cmp	r3, r0
 8015032:	f73f aed5 	bgt.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015036:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015038:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801503a:	444b      	add	r3, r9
 801503c:	4283      	cmp	r3, r0
 801503e:	f73f aecf 	bgt.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015042:	6810      	ldr	r0, [r2, #0]
 8015044:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8015048:	6805      	ldr	r5, [r0, #0]
 801504a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801504e:	f1b8 0f08 	cmp.w	r8, #8
 8015052:	f04f 0600 	mov.w	r6, #0
 8015056:	bf18      	it	ne
 8015058:	3401      	addne	r4, #1
 801505a:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801505e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015060:	9104      	str	r1, [sp, #16]
 8015062:	bf18      	it	ne
 8015064:	f024 0401 	bicne.w	r4, r4, #1
 8015068:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801506a:	bf18      	it	ne
 801506c:	b2a4      	uxthne	r4, r4
 801506e:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8015072:	e9cd 4900 	strd	r4, r9, [sp]
 8015076:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015078:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801507a:	47a0      	blx	r4
 801507c:	b019      	add	sp, #100	; 0x64
 801507e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015082:	2300      	movs	r3, #0
 8015084:	e7c0      	b.n	8015008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8015086:	bf00      	nop
 8015088:	2000bfc4 	.word	0x2000bfc4
 801508c:	2000bfcc 	.word	0x2000bfcc
 8015090:	2000bfc6 	.word	0x2000bfc6
 8015094:	00fff800 	.word	0x00fff800
 8015098:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801509a:	e6ee      	b.n	8014e7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801509c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801509e:	e784      	b.n	8014faa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 80150a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80150a2:	b153      	cbz	r3, 80150ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 80150a4:	441f      	add	r7, r3
 80150a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80150a8:	b2bf      	uxth	r7, r7
 80150aa:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80150ae:	f007 0707 	and.w	r7, r7, #7
 80150b2:	781a      	ldrb	r2, [r3, #0]
 80150b4:	9328      	str	r3, [sp, #160]	; 0xa0
 80150b6:	413a      	asrs	r2, r7
 80150b8:	b2d2      	uxtb	r2, r2
 80150ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80150bc:	445b      	add	r3, fp
 80150be:	930a      	str	r3, [sp, #40]	; 0x28
 80150c0:	e711      	b.n	8014ee6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 80150c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80150c4:	2b00      	cmp	r3, #0
 80150c6:	d1d9      	bne.n	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80150c8:	4b05      	ldr	r3, [pc, #20]	; (80150e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 80150ca:	6818      	ldr	r0, [r3, #0]
 80150cc:	6803      	ldr	r3, [r0, #0]
 80150ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80150d0:	4798      	blx	r3
 80150d2:	e7d3      	b.n	801507c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80150d4:	2b00      	cmp	r3, #0
 80150d6:	f43f ae83 	beq.w	8014de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80150da:	f44f 7180 	mov.w	r1, #256	; 0x100
 80150de:	e79e      	b.n	801501e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 80150e0:	2000bfcc 	.word	0x2000bfcc

080150e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80150e4:	b538      	push	{r3, r4, r5, lr}
 80150e6:	4c15      	ldr	r4, [pc, #84]	; (801513c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80150e8:	7823      	ldrb	r3, [r4, #0]
 80150ea:	f3bf 8f5b 	dmb	ish
 80150ee:	07da      	lsls	r2, r3, #31
 80150f0:	4605      	mov	r5, r0
 80150f2:	d40b      	bmi.n	801510c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80150f4:	4620      	mov	r0, r4
 80150f6:	f007 fcb5 	bl	801ca64 <__cxa_guard_acquire>
 80150fa:	b138      	cbz	r0, 801510c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80150fc:	4620      	mov	r0, r4
 80150fe:	f007 fcbd 	bl	801ca7c <__cxa_guard_release>
 8015102:	4a0f      	ldr	r2, [pc, #60]	; (8015140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015104:	490f      	ldr	r1, [pc, #60]	; (8015144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015106:	4810      	ldr	r0, [pc, #64]	; (8015148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015108:	f007 fca5 	bl	801ca56 <__aeabi_atexit>
 801510c:	4c0f      	ldr	r4, [pc, #60]	; (801514c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801510e:	7823      	ldrb	r3, [r4, #0]
 8015110:	f3bf 8f5b 	dmb	ish
 8015114:	07db      	lsls	r3, r3, #31
 8015116:	d40b      	bmi.n	8015130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015118:	4620      	mov	r0, r4
 801511a:	f007 fca3 	bl	801ca64 <__cxa_guard_acquire>
 801511e:	b138      	cbz	r0, 8015130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015120:	4620      	mov	r0, r4
 8015122:	f007 fcab 	bl	801ca7c <__cxa_guard_release>
 8015126:	4a06      	ldr	r2, [pc, #24]	; (8015140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015128:	4909      	ldr	r1, [pc, #36]	; (8015150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801512a:	480a      	ldr	r0, [pc, #40]	; (8015154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801512c:	f007 fc93 	bl	801ca56 <__aeabi_atexit>
 8015130:	4b05      	ldr	r3, [pc, #20]	; (8015148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015132:	612b      	str	r3, [r5, #16]
 8015134:	4b07      	ldr	r3, [pc, #28]	; (8015154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015136:	616b      	str	r3, [r5, #20]
 8015138:	bd38      	pop	{r3, r4, r5, pc}
 801513a:	bf00      	nop
 801513c:	2000c098 	.word	0x2000c098
 8015140:	20000000 	.word	0x20000000
 8015144:	08013145 	.word	0x08013145
 8015148:	200000a4 	.word	0x200000a4
 801514c:	2000c09c 	.word	0x2000c09c
 8015150:	08013143 	.word	0x08013143
 8015154:	200000a8 	.word	0x200000a8

08015158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015158:	b538      	push	{r3, r4, r5, lr}
 801515a:	4c15      	ldr	r4, [pc, #84]	; (80151b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801515c:	7823      	ldrb	r3, [r4, #0]
 801515e:	f3bf 8f5b 	dmb	ish
 8015162:	07da      	lsls	r2, r3, #31
 8015164:	4605      	mov	r5, r0
 8015166:	d40b      	bmi.n	8015180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015168:	4620      	mov	r0, r4
 801516a:	f007 fc7b 	bl	801ca64 <__cxa_guard_acquire>
 801516e:	b138      	cbz	r0, 8015180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015170:	4620      	mov	r0, r4
 8015172:	f007 fc83 	bl	801ca7c <__cxa_guard_release>
 8015176:	4a0f      	ldr	r2, [pc, #60]	; (80151b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015178:	490f      	ldr	r1, [pc, #60]	; (80151b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801517a:	4810      	ldr	r0, [pc, #64]	; (80151bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801517c:	f007 fc6b 	bl	801ca56 <__aeabi_atexit>
 8015180:	4c0f      	ldr	r4, [pc, #60]	; (80151c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8015182:	7823      	ldrb	r3, [r4, #0]
 8015184:	f3bf 8f5b 	dmb	ish
 8015188:	07db      	lsls	r3, r3, #31
 801518a:	d40b      	bmi.n	80151a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801518c:	4620      	mov	r0, r4
 801518e:	f007 fc69 	bl	801ca64 <__cxa_guard_acquire>
 8015192:	b138      	cbz	r0, 80151a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015194:	4620      	mov	r0, r4
 8015196:	f007 fc71 	bl	801ca7c <__cxa_guard_release>
 801519a:	4a06      	ldr	r2, [pc, #24]	; (80151b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801519c:	4909      	ldr	r1, [pc, #36]	; (80151c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801519e:	480a      	ldr	r0, [pc, #40]	; (80151c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80151a0:	f007 fc59 	bl	801ca56 <__aeabi_atexit>
 80151a4:	4b05      	ldr	r3, [pc, #20]	; (80151bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80151a6:	60ab      	str	r3, [r5, #8]
 80151a8:	4b07      	ldr	r3, [pc, #28]	; (80151c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80151aa:	60eb      	str	r3, [r5, #12]
 80151ac:	bd38      	pop	{r3, r4, r5, pc}
 80151ae:	bf00      	nop
 80151b0:	2000c070 	.word	0x2000c070
 80151b4:	20000000 	.word	0x20000000
 80151b8:	08013149 	.word	0x08013149
 80151bc:	2000007c 	.word	0x2000007c
 80151c0:	2000c074 	.word	0x2000c074
 80151c4:	08013147 	.word	0x08013147
 80151c8:	20000080 	.word	0x20000080

080151cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80151cc:	b510      	push	{r4, lr}
 80151ce:	4604      	mov	r4, r0
 80151d0:	f7ff ff88 	bl	80150e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80151d4:	4620      	mov	r0, r4
 80151d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80151da:	f7ff bfbd 	b.w	8015158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080151e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80151e0:	b538      	push	{r3, r4, r5, lr}
 80151e2:	4c15      	ldr	r4, [pc, #84]	; (8015238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80151e4:	7823      	ldrb	r3, [r4, #0]
 80151e6:	f3bf 8f5b 	dmb	ish
 80151ea:	07da      	lsls	r2, r3, #31
 80151ec:	4605      	mov	r5, r0
 80151ee:	d40b      	bmi.n	8015208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80151f0:	4620      	mov	r0, r4
 80151f2:	f007 fc37 	bl	801ca64 <__cxa_guard_acquire>
 80151f6:	b138      	cbz	r0, 8015208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80151f8:	4620      	mov	r0, r4
 80151fa:	f007 fc3f 	bl	801ca7c <__cxa_guard_release>
 80151fe:	4a0f      	ldr	r2, [pc, #60]	; (801523c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015200:	490f      	ldr	r1, [pc, #60]	; (8015240 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015202:	4810      	ldr	r0, [pc, #64]	; (8015244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015204:	f007 fc27 	bl	801ca56 <__aeabi_atexit>
 8015208:	4c0f      	ldr	r4, [pc, #60]	; (8015248 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801520a:	7823      	ldrb	r3, [r4, #0]
 801520c:	f3bf 8f5b 	dmb	ish
 8015210:	07db      	lsls	r3, r3, #31
 8015212:	d40b      	bmi.n	801522c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015214:	4620      	mov	r0, r4
 8015216:	f007 fc25 	bl	801ca64 <__cxa_guard_acquire>
 801521a:	b138      	cbz	r0, 801522c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801521c:	4620      	mov	r0, r4
 801521e:	f007 fc2d 	bl	801ca7c <__cxa_guard_release>
 8015222:	4a06      	ldr	r2, [pc, #24]	; (801523c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015224:	4909      	ldr	r1, [pc, #36]	; (801524c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015226:	480a      	ldr	r0, [pc, #40]	; (8015250 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015228:	f007 fc15 	bl	801ca56 <__aeabi_atexit>
 801522c:	4b05      	ldr	r3, [pc, #20]	; (8015244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801522e:	622b      	str	r3, [r5, #32]
 8015230:	4b07      	ldr	r3, [pc, #28]	; (8015250 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015232:	626b      	str	r3, [r5, #36]	; 0x24
 8015234:	bd38      	pop	{r3, r4, r5, pc}
 8015236:	bf00      	nop
 8015238:	2000c0a0 	.word	0x2000c0a0
 801523c:	20000000 	.word	0x20000000
 8015240:	0801313d 	.word	0x0801313d
 8015244:	200000ac 	.word	0x200000ac
 8015248:	2000c0a4 	.word	0x2000c0a4
 801524c:	0801313b 	.word	0x0801313b
 8015250:	200000b0 	.word	0x200000b0

08015254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015254:	b538      	push	{r3, r4, r5, lr}
 8015256:	4c15      	ldr	r4, [pc, #84]	; (80152ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015258:	7823      	ldrb	r3, [r4, #0]
 801525a:	f3bf 8f5b 	dmb	ish
 801525e:	07da      	lsls	r2, r3, #31
 8015260:	4605      	mov	r5, r0
 8015262:	d40b      	bmi.n	801527c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015264:	4620      	mov	r0, r4
 8015266:	f007 fbfd 	bl	801ca64 <__cxa_guard_acquire>
 801526a:	b138      	cbz	r0, 801527c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801526c:	4620      	mov	r0, r4
 801526e:	f007 fc05 	bl	801ca7c <__cxa_guard_release>
 8015272:	4a0f      	ldr	r2, [pc, #60]	; (80152b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015274:	490f      	ldr	r1, [pc, #60]	; (80152b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015276:	4810      	ldr	r0, [pc, #64]	; (80152b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015278:	f007 fbed 	bl	801ca56 <__aeabi_atexit>
 801527c:	4c0f      	ldr	r4, [pc, #60]	; (80152bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801527e:	7823      	ldrb	r3, [r4, #0]
 8015280:	f3bf 8f5b 	dmb	ish
 8015284:	07db      	lsls	r3, r3, #31
 8015286:	d40b      	bmi.n	80152a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015288:	4620      	mov	r0, r4
 801528a:	f007 fbeb 	bl	801ca64 <__cxa_guard_acquire>
 801528e:	b138      	cbz	r0, 80152a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015290:	4620      	mov	r0, r4
 8015292:	f007 fbf3 	bl	801ca7c <__cxa_guard_release>
 8015296:	4a06      	ldr	r2, [pc, #24]	; (80152b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015298:	4909      	ldr	r1, [pc, #36]	; (80152c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801529a:	480a      	ldr	r0, [pc, #40]	; (80152c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801529c:	f007 fbdb 	bl	801ca56 <__aeabi_atexit>
 80152a0:	4b05      	ldr	r3, [pc, #20]	; (80152b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80152a2:	61ab      	str	r3, [r5, #24]
 80152a4:	4b07      	ldr	r3, [pc, #28]	; (80152c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80152a6:	61eb      	str	r3, [r5, #28]
 80152a8:	bd38      	pop	{r3, r4, r5, pc}
 80152aa:	bf00      	nop
 80152ac:	2000c078 	.word	0x2000c078
 80152b0:	20000000 	.word	0x20000000
 80152b4:	08013141 	.word	0x08013141
 80152b8:	20000084 	.word	0x20000084
 80152bc:	2000c07c 	.word	0x2000c07c
 80152c0:	0801313f 	.word	0x0801313f
 80152c4:	20000088 	.word	0x20000088

080152c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80152c8:	b510      	push	{r4, lr}
 80152ca:	4604      	mov	r4, r0
 80152cc:	f7ff ff88 	bl	80151e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80152d0:	4620      	mov	r0, r4
 80152d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80152d6:	f7ff bfbd 	b.w	8015254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080152dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80152dc:	b538      	push	{r3, r4, r5, lr}
 80152de:	4c15      	ldr	r4, [pc, #84]	; (8015334 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80152e0:	7823      	ldrb	r3, [r4, #0]
 80152e2:	f3bf 8f5b 	dmb	ish
 80152e6:	07da      	lsls	r2, r3, #31
 80152e8:	4605      	mov	r5, r0
 80152ea:	d40b      	bmi.n	8015304 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80152ec:	4620      	mov	r0, r4
 80152ee:	f007 fbb9 	bl	801ca64 <__cxa_guard_acquire>
 80152f2:	b138      	cbz	r0, 8015304 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80152f4:	4620      	mov	r0, r4
 80152f6:	f007 fbc1 	bl	801ca7c <__cxa_guard_release>
 80152fa:	4a0f      	ldr	r2, [pc, #60]	; (8015338 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80152fc:	490f      	ldr	r1, [pc, #60]	; (801533c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80152fe:	4810      	ldr	r0, [pc, #64]	; (8015340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015300:	f007 fba9 	bl	801ca56 <__aeabi_atexit>
 8015304:	4c0f      	ldr	r4, [pc, #60]	; (8015344 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015306:	7823      	ldrb	r3, [r4, #0]
 8015308:	f3bf 8f5b 	dmb	ish
 801530c:	07db      	lsls	r3, r3, #31
 801530e:	d40b      	bmi.n	8015328 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015310:	4620      	mov	r0, r4
 8015312:	f007 fba7 	bl	801ca64 <__cxa_guard_acquire>
 8015316:	b138      	cbz	r0, 8015328 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015318:	4620      	mov	r0, r4
 801531a:	f007 fbaf 	bl	801ca7c <__cxa_guard_release>
 801531e:	4a06      	ldr	r2, [pc, #24]	; (8015338 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015320:	4909      	ldr	r1, [pc, #36]	; (8015348 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015322:	480a      	ldr	r0, [pc, #40]	; (801534c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015324:	f007 fb97 	bl	801ca56 <__aeabi_atexit>
 8015328:	4b05      	ldr	r3, [pc, #20]	; (8015340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801532a:	632b      	str	r3, [r5, #48]	; 0x30
 801532c:	4b07      	ldr	r3, [pc, #28]	; (801534c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801532e:	636b      	str	r3, [r5, #52]	; 0x34
 8015330:	bd38      	pop	{r3, r4, r5, pc}
 8015332:	bf00      	nop
 8015334:	2000c0b0 	.word	0x2000c0b0
 8015338:	20000000 	.word	0x20000000
 801533c:	08013135 	.word	0x08013135
 8015340:	200000bc 	.word	0x200000bc
 8015344:	2000c0b4 	.word	0x2000c0b4
 8015348:	08013133 	.word	0x08013133
 801534c:	200000c0 	.word	0x200000c0

08015350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015350:	b538      	push	{r3, r4, r5, lr}
 8015352:	4c15      	ldr	r4, [pc, #84]	; (80153a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8015354:	7823      	ldrb	r3, [r4, #0]
 8015356:	f3bf 8f5b 	dmb	ish
 801535a:	07da      	lsls	r2, r3, #31
 801535c:	4605      	mov	r5, r0
 801535e:	d40b      	bmi.n	8015378 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015360:	4620      	mov	r0, r4
 8015362:	f007 fb7f 	bl	801ca64 <__cxa_guard_acquire>
 8015366:	b138      	cbz	r0, 8015378 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015368:	4620      	mov	r0, r4
 801536a:	f007 fb87 	bl	801ca7c <__cxa_guard_release>
 801536e:	4a0f      	ldr	r2, [pc, #60]	; (80153ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015370:	490f      	ldr	r1, [pc, #60]	; (80153b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8015372:	4810      	ldr	r0, [pc, #64]	; (80153b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015374:	f007 fb6f 	bl	801ca56 <__aeabi_atexit>
 8015378:	4c0f      	ldr	r4, [pc, #60]	; (80153b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801537a:	7823      	ldrb	r3, [r4, #0]
 801537c:	f3bf 8f5b 	dmb	ish
 8015380:	07db      	lsls	r3, r3, #31
 8015382:	d40b      	bmi.n	801539c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015384:	4620      	mov	r0, r4
 8015386:	f007 fb6d 	bl	801ca64 <__cxa_guard_acquire>
 801538a:	b138      	cbz	r0, 801539c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801538c:	4620      	mov	r0, r4
 801538e:	f007 fb75 	bl	801ca7c <__cxa_guard_release>
 8015392:	4a06      	ldr	r2, [pc, #24]	; (80153ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015394:	4909      	ldr	r1, [pc, #36]	; (80153bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015396:	480a      	ldr	r0, [pc, #40]	; (80153c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015398:	f007 fb5d 	bl	801ca56 <__aeabi_atexit>
 801539c:	4b05      	ldr	r3, [pc, #20]	; (80153b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801539e:	62ab      	str	r3, [r5, #40]	; 0x28
 80153a0:	4b07      	ldr	r3, [pc, #28]	; (80153c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80153a2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80153a4:	bd38      	pop	{r3, r4, r5, pc}
 80153a6:	bf00      	nop
 80153a8:	2000c080 	.word	0x2000c080
 80153ac:	20000000 	.word	0x20000000
 80153b0:	08013139 	.word	0x08013139
 80153b4:	2000008c 	.word	0x2000008c
 80153b8:	2000c084 	.word	0x2000c084
 80153bc:	08013137 	.word	0x08013137
 80153c0:	20000090 	.word	0x20000090

080153c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80153c4:	b510      	push	{r4, lr}
 80153c6:	4604      	mov	r4, r0
 80153c8:	f7ff ff88 	bl	80152dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80153cc:	4620      	mov	r0, r4
 80153ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80153d2:	f7ff bfbd 	b.w	8015350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080153d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80153d8:	b538      	push	{r3, r4, r5, lr}
 80153da:	4c15      	ldr	r4, [pc, #84]	; (8015430 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80153dc:	7823      	ldrb	r3, [r4, #0]
 80153de:	f3bf 8f5b 	dmb	ish
 80153e2:	07da      	lsls	r2, r3, #31
 80153e4:	4605      	mov	r5, r0
 80153e6:	d40b      	bmi.n	8015400 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80153e8:	4620      	mov	r0, r4
 80153ea:	f007 fb3b 	bl	801ca64 <__cxa_guard_acquire>
 80153ee:	b138      	cbz	r0, 8015400 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80153f0:	4620      	mov	r0, r4
 80153f2:	f007 fb43 	bl	801ca7c <__cxa_guard_release>
 80153f6:	4a0f      	ldr	r2, [pc, #60]	; (8015434 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80153f8:	490f      	ldr	r1, [pc, #60]	; (8015438 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80153fa:	4810      	ldr	r0, [pc, #64]	; (801543c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80153fc:	f007 fb2b 	bl	801ca56 <__aeabi_atexit>
 8015400:	4c0f      	ldr	r4, [pc, #60]	; (8015440 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015402:	7823      	ldrb	r3, [r4, #0]
 8015404:	f3bf 8f5b 	dmb	ish
 8015408:	07db      	lsls	r3, r3, #31
 801540a:	d40b      	bmi.n	8015424 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801540c:	4620      	mov	r0, r4
 801540e:	f007 fb29 	bl	801ca64 <__cxa_guard_acquire>
 8015412:	b138      	cbz	r0, 8015424 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015414:	4620      	mov	r0, r4
 8015416:	f007 fb31 	bl	801ca7c <__cxa_guard_release>
 801541a:	4a06      	ldr	r2, [pc, #24]	; (8015434 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801541c:	4909      	ldr	r1, [pc, #36]	; (8015444 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801541e:	480a      	ldr	r0, [pc, #40]	; (8015448 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015420:	f007 fb19 	bl	801ca56 <__aeabi_atexit>
 8015424:	4b05      	ldr	r3, [pc, #20]	; (801543c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015426:	652b      	str	r3, [r5, #80]	; 0x50
 8015428:	4b07      	ldr	r3, [pc, #28]	; (8015448 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801542a:	656b      	str	r3, [r5, #84]	; 0x54
 801542c:	bd38      	pop	{r3, r4, r5, pc}
 801542e:	bf00      	nop
 8015430:	2000c0b8 	.word	0x2000c0b8
 8015434:	20000000 	.word	0x20000000
 8015438:	08013125 	.word	0x08013125
 801543c:	200000c4 	.word	0x200000c4
 8015440:	2000c0bc 	.word	0x2000c0bc
 8015444:	08013123 	.word	0x08013123
 8015448:	200000c8 	.word	0x200000c8

0801544c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801544c:	b538      	push	{r3, r4, r5, lr}
 801544e:	4c15      	ldr	r4, [pc, #84]	; (80154a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015450:	7823      	ldrb	r3, [r4, #0]
 8015452:	f3bf 8f5b 	dmb	ish
 8015456:	07da      	lsls	r2, r3, #31
 8015458:	4605      	mov	r5, r0
 801545a:	d40b      	bmi.n	8015474 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801545c:	4620      	mov	r0, r4
 801545e:	f007 fb01 	bl	801ca64 <__cxa_guard_acquire>
 8015462:	b138      	cbz	r0, 8015474 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015464:	4620      	mov	r0, r4
 8015466:	f007 fb09 	bl	801ca7c <__cxa_guard_release>
 801546a:	4a0f      	ldr	r2, [pc, #60]	; (80154a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801546c:	490f      	ldr	r1, [pc, #60]	; (80154ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801546e:	4810      	ldr	r0, [pc, #64]	; (80154b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015470:	f007 faf1 	bl	801ca56 <__aeabi_atexit>
 8015474:	4c0f      	ldr	r4, [pc, #60]	; (80154b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015476:	7823      	ldrb	r3, [r4, #0]
 8015478:	f3bf 8f5b 	dmb	ish
 801547c:	07db      	lsls	r3, r3, #31
 801547e:	d40b      	bmi.n	8015498 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015480:	4620      	mov	r0, r4
 8015482:	f007 faef 	bl	801ca64 <__cxa_guard_acquire>
 8015486:	b138      	cbz	r0, 8015498 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015488:	4620      	mov	r0, r4
 801548a:	f007 faf7 	bl	801ca7c <__cxa_guard_release>
 801548e:	4a06      	ldr	r2, [pc, #24]	; (80154a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015490:	4909      	ldr	r1, [pc, #36]	; (80154b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015492:	480a      	ldr	r0, [pc, #40]	; (80154bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015494:	f007 fadf 	bl	801ca56 <__aeabi_atexit>
 8015498:	4b05      	ldr	r3, [pc, #20]	; (80154b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801549a:	64ab      	str	r3, [r5, #72]	; 0x48
 801549c:	4b07      	ldr	r3, [pc, #28]	; (80154bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801549e:	64eb      	str	r3, [r5, #76]	; 0x4c
 80154a0:	bd38      	pop	{r3, r4, r5, pc}
 80154a2:	bf00      	nop
 80154a4:	2000c0c0 	.word	0x2000c0c0
 80154a8:	20000000 	.word	0x20000000
 80154ac:	08013129 	.word	0x08013129
 80154b0:	200000cc 	.word	0x200000cc
 80154b4:	2000c0c4 	.word	0x2000c0c4
 80154b8:	08013127 	.word	0x08013127
 80154bc:	200000d0 	.word	0x200000d0

080154c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80154c0:	b538      	push	{r3, r4, r5, lr}
 80154c2:	4c15      	ldr	r4, [pc, #84]	; (8015518 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80154c4:	7823      	ldrb	r3, [r4, #0]
 80154c6:	f3bf 8f5b 	dmb	ish
 80154ca:	07da      	lsls	r2, r3, #31
 80154cc:	4605      	mov	r5, r0
 80154ce:	d40b      	bmi.n	80154e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80154d0:	4620      	mov	r0, r4
 80154d2:	f007 fac7 	bl	801ca64 <__cxa_guard_acquire>
 80154d6:	b138      	cbz	r0, 80154e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80154d8:	4620      	mov	r0, r4
 80154da:	f007 facf 	bl	801ca7c <__cxa_guard_release>
 80154de:	4a0f      	ldr	r2, [pc, #60]	; (801551c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80154e0:	490f      	ldr	r1, [pc, #60]	; (8015520 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80154e2:	4810      	ldr	r0, [pc, #64]	; (8015524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80154e4:	f007 fab7 	bl	801ca56 <__aeabi_atexit>
 80154e8:	4c0f      	ldr	r4, [pc, #60]	; (8015528 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80154ea:	7823      	ldrb	r3, [r4, #0]
 80154ec:	f3bf 8f5b 	dmb	ish
 80154f0:	07db      	lsls	r3, r3, #31
 80154f2:	d40b      	bmi.n	801550c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80154f4:	4620      	mov	r0, r4
 80154f6:	f007 fab5 	bl	801ca64 <__cxa_guard_acquire>
 80154fa:	b138      	cbz	r0, 801550c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80154fc:	4620      	mov	r0, r4
 80154fe:	f007 fabd 	bl	801ca7c <__cxa_guard_release>
 8015502:	4a06      	ldr	r2, [pc, #24]	; (801551c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015504:	4909      	ldr	r1, [pc, #36]	; (801552c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015506:	480a      	ldr	r0, [pc, #40]	; (8015530 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015508:	f007 faa5 	bl	801ca56 <__aeabi_atexit>
 801550c:	4b05      	ldr	r3, [pc, #20]	; (8015524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801550e:	642b      	str	r3, [r5, #64]	; 0x40
 8015510:	4b07      	ldr	r3, [pc, #28]	; (8015530 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015512:	646b      	str	r3, [r5, #68]	; 0x44
 8015514:	bd38      	pop	{r3, r4, r5, pc}
 8015516:	bf00      	nop
 8015518:	2000c088 	.word	0x2000c088
 801551c:	20000000 	.word	0x20000000
 8015520:	0801312d 	.word	0x0801312d
 8015524:	20000094 	.word	0x20000094
 8015528:	2000c08c 	.word	0x2000c08c
 801552c:	0801312b 	.word	0x0801312b
 8015530:	20000098 	.word	0x20000098

08015534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015534:	b538      	push	{r3, r4, r5, lr}
 8015536:	4c15      	ldr	r4, [pc, #84]	; (801558c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015538:	7823      	ldrb	r3, [r4, #0]
 801553a:	f3bf 8f5b 	dmb	ish
 801553e:	07da      	lsls	r2, r3, #31
 8015540:	4605      	mov	r5, r0
 8015542:	d40b      	bmi.n	801555c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015544:	4620      	mov	r0, r4
 8015546:	f007 fa8d 	bl	801ca64 <__cxa_guard_acquire>
 801554a:	b138      	cbz	r0, 801555c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801554c:	4620      	mov	r0, r4
 801554e:	f007 fa95 	bl	801ca7c <__cxa_guard_release>
 8015552:	4a0f      	ldr	r2, [pc, #60]	; (8015590 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015554:	490f      	ldr	r1, [pc, #60]	; (8015594 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8015556:	4810      	ldr	r0, [pc, #64]	; (8015598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015558:	f007 fa7d 	bl	801ca56 <__aeabi_atexit>
 801555c:	4c0f      	ldr	r4, [pc, #60]	; (801559c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801555e:	7823      	ldrb	r3, [r4, #0]
 8015560:	f3bf 8f5b 	dmb	ish
 8015564:	07db      	lsls	r3, r3, #31
 8015566:	d40b      	bmi.n	8015580 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015568:	4620      	mov	r0, r4
 801556a:	f007 fa7b 	bl	801ca64 <__cxa_guard_acquire>
 801556e:	b138      	cbz	r0, 8015580 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015570:	4620      	mov	r0, r4
 8015572:	f007 fa83 	bl	801ca7c <__cxa_guard_release>
 8015576:	4a06      	ldr	r2, [pc, #24]	; (8015590 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015578:	4909      	ldr	r1, [pc, #36]	; (80155a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801557a:	480a      	ldr	r0, [pc, #40]	; (80155a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801557c:	f007 fa6b 	bl	801ca56 <__aeabi_atexit>
 8015580:	4b05      	ldr	r3, [pc, #20]	; (8015598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015582:	63ab      	str	r3, [r5, #56]	; 0x38
 8015584:	4b07      	ldr	r3, [pc, #28]	; (80155a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015586:	63eb      	str	r3, [r5, #60]	; 0x3c
 8015588:	bd38      	pop	{r3, r4, r5, pc}
 801558a:	bf00      	nop
 801558c:	2000c0a8 	.word	0x2000c0a8
 8015590:	20000000 	.word	0x20000000
 8015594:	08013131 	.word	0x08013131
 8015598:	200000b4 	.word	0x200000b4
 801559c:	2000c0ac 	.word	0x2000c0ac
 80155a0:	0801312f 	.word	0x0801312f
 80155a4:	200000b8 	.word	0x200000b8

080155a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80155a8:	b510      	push	{r4, lr}
 80155aa:	4604      	mov	r4, r0
 80155ac:	f7ff ff14 	bl	80153d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80155b0:	4620      	mov	r0, r4
 80155b2:	f7ff ff85 	bl	80154c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80155b6:	4620      	mov	r0, r4
 80155b8:	f7ff ff48 	bl	801544c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80155bc:	4620      	mov	r0, r4
 80155be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80155c2:	f7ff bfb7 	b.w	8015534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080155c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80155c8:	b538      	push	{r3, r4, r5, lr}
 80155ca:	4c15      	ldr	r4, [pc, #84]	; (8015620 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80155cc:	7823      	ldrb	r3, [r4, #0]
 80155ce:	f3bf 8f5b 	dmb	ish
 80155d2:	07da      	lsls	r2, r3, #31
 80155d4:	4605      	mov	r5, r0
 80155d6:	d40b      	bmi.n	80155f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80155d8:	4620      	mov	r0, r4
 80155da:	f007 fa43 	bl	801ca64 <__cxa_guard_acquire>
 80155de:	b138      	cbz	r0, 80155f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80155e0:	4620      	mov	r0, r4
 80155e2:	f007 fa4b 	bl	801ca7c <__cxa_guard_release>
 80155e6:	4a0f      	ldr	r2, [pc, #60]	; (8015624 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80155e8:	490f      	ldr	r1, [pc, #60]	; (8015628 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80155ea:	4810      	ldr	r0, [pc, #64]	; (801562c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80155ec:	f007 fa33 	bl	801ca56 <__aeabi_atexit>
 80155f0:	4c0f      	ldr	r4, [pc, #60]	; (8015630 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80155f2:	7823      	ldrb	r3, [r4, #0]
 80155f4:	f3bf 8f5b 	dmb	ish
 80155f8:	07db      	lsls	r3, r3, #31
 80155fa:	d40b      	bmi.n	8015614 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80155fc:	4620      	mov	r0, r4
 80155fe:	f007 fa31 	bl	801ca64 <__cxa_guard_acquire>
 8015602:	b138      	cbz	r0, 8015614 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015604:	4620      	mov	r0, r4
 8015606:	f007 fa39 	bl	801ca7c <__cxa_guard_release>
 801560a:	4a06      	ldr	r2, [pc, #24]	; (8015624 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801560c:	4909      	ldr	r1, [pc, #36]	; (8015634 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801560e:	480a      	ldr	r0, [pc, #40]	; (8015638 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015610:	f007 fa21 	bl	801ca56 <__aeabi_atexit>
 8015614:	4b05      	ldr	r3, [pc, #20]	; (801562c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015616:	662b      	str	r3, [r5, #96]	; 0x60
 8015618:	4b07      	ldr	r3, [pc, #28]	; (8015638 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801561a:	666b      	str	r3, [r5, #100]	; 0x64
 801561c:	bd38      	pop	{r3, r4, r5, pc}
 801561e:	bf00      	nop
 8015620:	2000c090 	.word	0x2000c090
 8015624:	20000000 	.word	0x20000000
 8015628:	0801311d 	.word	0x0801311d
 801562c:	2000009c 	.word	0x2000009c
 8015630:	2000c094 	.word	0x2000c094
 8015634:	0801311b 	.word	0x0801311b
 8015638:	200000a0 	.word	0x200000a0

0801563c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801563c:	b538      	push	{r3, r4, r5, lr}
 801563e:	4c15      	ldr	r4, [pc, #84]	; (8015694 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015640:	7823      	ldrb	r3, [r4, #0]
 8015642:	f3bf 8f5b 	dmb	ish
 8015646:	07da      	lsls	r2, r3, #31
 8015648:	4605      	mov	r5, r0
 801564a:	d40b      	bmi.n	8015664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801564c:	4620      	mov	r0, r4
 801564e:	f007 fa09 	bl	801ca64 <__cxa_guard_acquire>
 8015652:	b138      	cbz	r0, 8015664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015654:	4620      	mov	r0, r4
 8015656:	f007 fa11 	bl	801ca7c <__cxa_guard_release>
 801565a:	4a0f      	ldr	r2, [pc, #60]	; (8015698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801565c:	490f      	ldr	r1, [pc, #60]	; (801569c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801565e:	4810      	ldr	r0, [pc, #64]	; (80156a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015660:	f007 f9f9 	bl	801ca56 <__aeabi_atexit>
 8015664:	4c0f      	ldr	r4, [pc, #60]	; (80156a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8015666:	7823      	ldrb	r3, [r4, #0]
 8015668:	f3bf 8f5b 	dmb	ish
 801566c:	07db      	lsls	r3, r3, #31
 801566e:	d40b      	bmi.n	8015688 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015670:	4620      	mov	r0, r4
 8015672:	f007 f9f7 	bl	801ca64 <__cxa_guard_acquire>
 8015676:	b138      	cbz	r0, 8015688 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015678:	4620      	mov	r0, r4
 801567a:	f007 f9ff 	bl	801ca7c <__cxa_guard_release>
 801567e:	4a06      	ldr	r2, [pc, #24]	; (8015698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015680:	4909      	ldr	r1, [pc, #36]	; (80156a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8015682:	480a      	ldr	r0, [pc, #40]	; (80156ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015684:	f007 f9e7 	bl	801ca56 <__aeabi_atexit>
 8015688:	4b05      	ldr	r3, [pc, #20]	; (80156a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801568a:	65ab      	str	r3, [r5, #88]	; 0x58
 801568c:	4b07      	ldr	r3, [pc, #28]	; (80156ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801568e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8015690:	bd38      	pop	{r3, r4, r5, pc}
 8015692:	bf00      	nop
 8015694:	2000c068 	.word	0x2000c068
 8015698:	20000000 	.word	0x20000000
 801569c:	08013121 	.word	0x08013121
 80156a0:	20000074 	.word	0x20000074
 80156a4:	2000c06c 	.word	0x2000c06c
 80156a8:	0801311f 	.word	0x0801311f
 80156ac:	20000078 	.word	0x20000078

080156b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80156b0:	b510      	push	{r4, lr}
 80156b2:	4604      	mov	r4, r0
 80156b4:	f7ff ff88 	bl	80155c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80156b8:	4620      	mov	r0, r4
 80156ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80156be:	f7ff bfbd 	b.w	801563c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080156c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80156c4:	b538      	push	{r3, r4, r5, lr}
 80156c6:	4c15      	ldr	r4, [pc, #84]	; (801571c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80156c8:	7823      	ldrb	r3, [r4, #0]
 80156ca:	f3bf 8f5b 	dmb	ish
 80156ce:	07da      	lsls	r2, r3, #31
 80156d0:	4605      	mov	r5, r0
 80156d2:	d40b      	bmi.n	80156ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80156d4:	4620      	mov	r0, r4
 80156d6:	f007 f9c5 	bl	801ca64 <__cxa_guard_acquire>
 80156da:	b138      	cbz	r0, 80156ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80156dc:	4620      	mov	r0, r4
 80156de:	f007 f9cd 	bl	801ca7c <__cxa_guard_release>
 80156e2:	4a0f      	ldr	r2, [pc, #60]	; (8015720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80156e4:	490f      	ldr	r1, [pc, #60]	; (8015724 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80156e6:	4810      	ldr	r0, [pc, #64]	; (8015728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80156e8:	f007 f9b5 	bl	801ca56 <__aeabi_atexit>
 80156ec:	4c0f      	ldr	r4, [pc, #60]	; (801572c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80156ee:	7823      	ldrb	r3, [r4, #0]
 80156f0:	f3bf 8f5b 	dmb	ish
 80156f4:	07db      	lsls	r3, r3, #31
 80156f6:	d40b      	bmi.n	8015710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80156f8:	4620      	mov	r0, r4
 80156fa:	f007 f9b3 	bl	801ca64 <__cxa_guard_acquire>
 80156fe:	b138      	cbz	r0, 8015710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015700:	4620      	mov	r0, r4
 8015702:	f007 f9bb 	bl	801ca7c <__cxa_guard_release>
 8015706:	4a06      	ldr	r2, [pc, #24]	; (8015720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015708:	4909      	ldr	r1, [pc, #36]	; (8015730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801570a:	480a      	ldr	r0, [pc, #40]	; (8015734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801570c:	f007 f9a3 	bl	801ca56 <__aeabi_atexit>
 8015710:	4b05      	ldr	r3, [pc, #20]	; (8015728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015712:	672b      	str	r3, [r5, #112]	; 0x70
 8015714:	4b07      	ldr	r3, [pc, #28]	; (8015734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015716:	676b      	str	r3, [r5, #116]	; 0x74
 8015718:	bd38      	pop	{r3, r4, r5, pc}
 801571a:	bf00      	nop
 801571c:	2000c060 	.word	0x2000c060
 8015720:	20000000 	.word	0x20000000
 8015724:	08013115 	.word	0x08013115
 8015728:	2000006c 	.word	0x2000006c
 801572c:	2000c064 	.word	0x2000c064
 8015730:	08013113 	.word	0x08013113
 8015734:	20000070 	.word	0x20000070

08015738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015738:	b538      	push	{r3, r4, r5, lr}
 801573a:	4c15      	ldr	r4, [pc, #84]	; (8015790 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801573c:	7823      	ldrb	r3, [r4, #0]
 801573e:	f3bf 8f5b 	dmb	ish
 8015742:	07da      	lsls	r2, r3, #31
 8015744:	4605      	mov	r5, r0
 8015746:	d40b      	bmi.n	8015760 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015748:	4620      	mov	r0, r4
 801574a:	f007 f98b 	bl	801ca64 <__cxa_guard_acquire>
 801574e:	b138      	cbz	r0, 8015760 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015750:	4620      	mov	r0, r4
 8015752:	f007 f993 	bl	801ca7c <__cxa_guard_release>
 8015756:	4a0f      	ldr	r2, [pc, #60]	; (8015794 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015758:	490f      	ldr	r1, [pc, #60]	; (8015798 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801575a:	4810      	ldr	r0, [pc, #64]	; (801579c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801575c:	f007 f97b 	bl	801ca56 <__aeabi_atexit>
 8015760:	4c0f      	ldr	r4, [pc, #60]	; (80157a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015762:	7823      	ldrb	r3, [r4, #0]
 8015764:	f3bf 8f5b 	dmb	ish
 8015768:	07db      	lsls	r3, r3, #31
 801576a:	d40b      	bmi.n	8015784 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801576c:	4620      	mov	r0, r4
 801576e:	f007 f979 	bl	801ca64 <__cxa_guard_acquire>
 8015772:	b138      	cbz	r0, 8015784 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015774:	4620      	mov	r0, r4
 8015776:	f007 f981 	bl	801ca7c <__cxa_guard_release>
 801577a:	4a06      	ldr	r2, [pc, #24]	; (8015794 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801577c:	4909      	ldr	r1, [pc, #36]	; (80157a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801577e:	480a      	ldr	r0, [pc, #40]	; (80157a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015780:	f007 f969 	bl	801ca56 <__aeabi_atexit>
 8015784:	4b05      	ldr	r3, [pc, #20]	; (801579c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015786:	66ab      	str	r3, [r5, #104]	; 0x68
 8015788:	4b07      	ldr	r3, [pc, #28]	; (80157a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801578a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801578c:	bd38      	pop	{r3, r4, r5, pc}
 801578e:	bf00      	nop
 8015790:	2000c058 	.word	0x2000c058
 8015794:	20000000 	.word	0x20000000
 8015798:	08013119 	.word	0x08013119
 801579c:	20000064 	.word	0x20000064
 80157a0:	2000c05c 	.word	0x2000c05c
 80157a4:	08013117 	.word	0x08013117
 80157a8:	20000068 	.word	0x20000068

080157ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80157ac:	b510      	push	{r4, lr}
 80157ae:	4604      	mov	r4, r0
 80157b0:	f7ff ff88 	bl	80156c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80157b4:	4620      	mov	r0, r4
 80157b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157ba:	f7ff bfbd 	b.w	8015738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080157be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80157be:	b510      	push	{r4, lr}
 80157c0:	4604      	mov	r4, r0
 80157c2:	f7ff fff3 	bl	80157ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80157c6:	4620      	mov	r0, r4
 80157c8:	f7ff ff72 	bl	80156b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80157cc:	4620      	mov	r0, r4
 80157ce:	f7ff fdf9 	bl	80153c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80157d2:	4620      	mov	r0, r4
 80157d4:	f7ff fcfa 	bl	80151cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80157d8:	4620      	mov	r0, r4
 80157da:	f7ff fd75 	bl	80152c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80157de:	4620      	mov	r0, r4
 80157e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157e4:	f7ff bee0 	b.w	80155a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080157e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80157e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157ec:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80157f0:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80157f4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80157f8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80157fc:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8015800:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8015804:	8808      	ldrh	r0, [r1, #0]
 8015806:	fb0e 4708 	mla	r7, lr, r8, r4
 801580a:	f1be 0f00 	cmp.w	lr, #0
 801580e:	eb02 0a07 	add.w	sl, r2, r7
 8015812:	db37      	blt.n	8015884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015814:	45f3      	cmp	fp, lr
 8015816:	dd35      	ble.n	8015884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015818:	2c00      	cmp	r4, #0
 801581a:	db31      	blt.n	8015880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801581c:	45a0      	cmp	r8, r4
 801581e:	dd2f      	ble.n	8015880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015820:	5dd2      	ldrb	r2, [r2, r7]
 8015822:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8015826:	1c62      	adds	r2, r4, #1
 8015828:	d42f      	bmi.n	801588a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801582a:	4590      	cmp	r8, r2
 801582c:	dd2d      	ble.n	801588a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801582e:	b366      	cbz	r6, 801588a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015830:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015834:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015838:	f11e 0e01 	adds.w	lr, lr, #1
 801583c:	d429      	bmi.n	8015892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801583e:	45f3      	cmp	fp, lr
 8015840:	dd27      	ble.n	8015892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015842:	f1bc 0f00 	cmp.w	ip, #0
 8015846:	f000 80a1 	beq.w	801598c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 801584a:	2c00      	cmp	r4, #0
 801584c:	db1f      	blt.n	801588e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801584e:	45a0      	cmp	r8, r4
 8015850:	dd1d      	ble.n	801588e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015852:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8015856:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801585a:	3401      	adds	r4, #1
 801585c:	d41c      	bmi.n	8015898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801585e:	45a0      	cmp	r8, r4
 8015860:	dd1a      	ble.n	8015898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015862:	b1de      	cbz	r6, 801589c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8015864:	44d0      	add	r8, sl
 8015866:	f898 2001 	ldrb.w	r2, [r8, #1]
 801586a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801586e:	2e0f      	cmp	r6, #15
 8015870:	d915      	bls.n	801589e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8015872:	4b49      	ldr	r3, [pc, #292]	; (8015998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8015874:	4a49      	ldr	r2, [pc, #292]	; (801599c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8015876:	484a      	ldr	r0, [pc, #296]	; (80159a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8015878:	f240 11db 	movw	r1, #475	; 0x1db
 801587c:	f007 fe9a 	bl	801d5b4 <__assert_func>
 8015880:	4681      	mov	r9, r0
 8015882:	e7d0      	b.n	8015826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8015884:	4607      	mov	r7, r0
 8015886:	4681      	mov	r9, r0
 8015888:	e7d6      	b.n	8015838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801588a:	4607      	mov	r7, r0
 801588c:	e7d4      	b.n	8015838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801588e:	4686      	mov	lr, r0
 8015890:	e7e3      	b.n	801585a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8015892:	4603      	mov	r3, r0
 8015894:	4686      	mov	lr, r0
 8015896:	e7ea      	b.n	801586e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8015898:	4603      	mov	r3, r0
 801589a:	e7e8      	b.n	801586e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801589c:	4603      	mov	r3, r0
 801589e:	f1bc 0f0f 	cmp.w	ip, #15
 80158a2:	d8e6      	bhi.n	8015872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80158a4:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80158a8:	fb16 f80c 	smulbb	r8, r6, ip
 80158ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80158b0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80158b4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80158b8:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80158bc:	ea44 0909 	orr.w	r9, r4, r9
 80158c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80158c4:	f1cc 0410 	rsb	r4, ip, #16
 80158c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80158cc:	1ba4      	subs	r4, r4, r6
 80158ce:	041a      	lsls	r2, r3, #16
 80158d0:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80158d4:	ea4a 0707 	orr.w	r7, sl, r7
 80158d8:	4377      	muls	r7, r6
 80158da:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80158de:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80158e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80158e6:	fb04 7409 	mla	r4, r4, r9, r7
 80158ea:	4313      	orrs	r3, r2
 80158ec:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80158f0:	fb08 4303 	mla	r3, r8, r3, r4
 80158f4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80158f8:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80158fc:	4322      	orrs	r2, r4
 80158fe:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015902:	fb0c 3202 	mla	r2, ip, r2, r3
 8015906:	0d53      	lsrs	r3, r2, #21
 8015908:	0952      	lsrs	r2, r2, #5
 801590a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801590e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015912:	431a      	orrs	r2, r3
 8015914:	b293      	uxth	r3, r2
 8015916:	b2af      	uxth	r7, r5
 8015918:	1202      	asrs	r2, r0, #8
 801591a:	43ed      	mvns	r5, r5
 801591c:	b2ed      	uxtb	r5, r5
 801591e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015922:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015926:	fb12 f205 	smulbb	r2, r2, r5
 801592a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801592e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015932:	00dc      	lsls	r4, r3, #3
 8015934:	10da      	asrs	r2, r3, #3
 8015936:	10c6      	asrs	r6, r0, #3
 8015938:	00c3      	lsls	r3, r0, #3
 801593a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801593e:	b2db      	uxtb	r3, r3
 8015940:	fb16 f605 	smulbb	r6, r6, r5
 8015944:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015948:	b2e4      	uxtb	r4, r4
 801594a:	fb13 f305 	smulbb	r3, r3, r5
 801594e:	fa1f fc8c 	uxth.w	ip, ip
 8015952:	fb02 6207 	mla	r2, r2, r7, r6
 8015956:	fb04 3307 	mla	r3, r4, r7, r3
 801595a:	b296      	uxth	r6, r2
 801595c:	b29a      	uxth	r2, r3
 801595e:	f10c 0301 	add.w	r3, ip, #1
 8015962:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015966:	1c53      	adds	r3, r2, #1
 8015968:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801596c:	1c72      	adds	r2, r6, #1
 801596e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8015972:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015976:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801597a:	0952      	lsrs	r2, r2, #5
 801597c:	ea43 030c 	orr.w	r3, r3, ip
 8015980:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015984:	4313      	orrs	r3, r2
 8015986:	800b      	strh	r3, [r1, #0]
 8015988:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801598c:	2e0f      	cmp	r6, #15
 801598e:	f63f af70 	bhi.w	8015872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8015992:	4603      	mov	r3, r0
 8015994:	4686      	mov	lr, r0
 8015996:	e785      	b.n	80158a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8015998:	080214b7 	.word	0x080214b7
 801599c:	08021a8f 	.word	0x08021a8f
 80159a0:	08021484 	.word	0x08021484

080159a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80159a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159a8:	ed2d 8b08 	vpush	{d8-d11}
 80159ac:	b099      	sub	sp, #100	; 0x64
 80159ae:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 80159b2:	9215      	str	r2, [sp, #84]	; 0x54
 80159b4:	9309      	str	r3, [sp, #36]	; 0x24
 80159b6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80159b8:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80159bc:	930d      	str	r3, [sp, #52]	; 0x34
 80159be:	910c      	str	r1, [sp, #48]	; 0x30
 80159c0:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80159c4:	9016      	str	r0, [sp, #88]	; 0x58
 80159c6:	6850      	ldr	r0, [r2, #4]
 80159c8:	6812      	ldr	r2, [r2, #0]
 80159ca:	fb00 1303 	mla	r3, r0, r3, r1
 80159ce:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80159d2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80159d4:	681b      	ldr	r3, [r3, #0]
 80159d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80159d8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80159da:	685e      	ldr	r6, [r3, #4]
 80159dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159de:	43db      	mvns	r3, r3
 80159e0:	b2db      	uxtb	r3, r3
 80159e2:	eeb0 aa40 	vmov.f32	s20, s0
 80159e6:	eef0 9a60 	vmov.f32	s19, s1
 80159ea:	eeb0 9a41 	vmov.f32	s18, s2
 80159ee:	eeb0 8a62 	vmov.f32	s16, s5
 80159f2:	eef0 8a43 	vmov.f32	s17, s6
 80159f6:	eef0 ba44 	vmov.f32	s23, s8
 80159fa:	eeb0 ba64 	vmov.f32	s22, s9
 80159fe:	eef0 aa45 	vmov.f32	s21, s10
 8015a02:	3604      	adds	r6, #4
 8015a04:	930a      	str	r3, [sp, #40]	; 0x28
 8015a06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a08:	2b00      	cmp	r3, #0
 8015a0a:	dc03      	bgt.n	8015a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015a0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015a0e:	2b00      	cmp	r3, #0
 8015a10:	f340 8225 	ble.w	8015e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015a14:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015a16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015a1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015a1e:	1e48      	subs	r0, r1, #1
 8015a20:	1e57      	subs	r7, r2, #1
 8015a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a24:	2b00      	cmp	r3, #0
 8015a26:	f340 80e3 	ble.w	8015bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8015a2a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8015a2e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015a32:	d406      	bmi.n	8015a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015a34:	4584      	cmp	ip, r0
 8015a36:	da04      	bge.n	8015a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015a38:	2b00      	cmp	r3, #0
 8015a3a:	db02      	blt.n	8015a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015a3c:	42bb      	cmp	r3, r7
 8015a3e:	f2c0 80d8 	blt.w	8015bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8015a42:	f11c 0c01 	adds.w	ip, ip, #1
 8015a46:	f100 80c9 	bmi.w	8015bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015a4a:	4561      	cmp	r1, ip
 8015a4c:	f2c0 80c6 	blt.w	8015bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015a50:	3301      	adds	r3, #1
 8015a52:	f100 80c3 	bmi.w	8015bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015a56:	429a      	cmp	r2, r3
 8015a58:	f2c0 80c0 	blt.w	8015bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015a5c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8015a60:	4647      	mov	r7, r8
 8015a62:	f1bb 0f00 	cmp.w	fp, #0
 8015a66:	f340 80e3 	ble.w	8015c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015a6a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015a6c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015a6e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015a72:	689b      	ldr	r3, [r3, #8]
 8015a74:	ea5f 422a 	movs.w	r2, sl, asr #16
 8015a78:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015a7c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8015a80:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015a84:	f100 8121 	bmi.w	8015cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015a88:	f103 39ff 	add.w	r9, r3, #4294967295
 8015a8c:	454a      	cmp	r2, r9
 8015a8e:	f280 811c 	bge.w	8015cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015a92:	f1bc 0f00 	cmp.w	ip, #0
 8015a96:	f2c0 8118 	blt.w	8015cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015a9a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8015a9e:	45cc      	cmp	ip, r9
 8015aa0:	f280 8113 	bge.w	8015cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015aa4:	b21b      	sxth	r3, r3
 8015aa6:	fb0c 2203 	mla	r2, ip, r3, r2
 8015aaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015aac:	eb04 0902 	add.w	r9, r4, r2
 8015ab0:	5ca2      	ldrb	r2, [r4, r2]
 8015ab2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8015ab6:	2800      	cmp	r0, #0
 8015ab8:	f000 80fe 	beq.w	8015cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015abc:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015ac0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015ac4:	9211      	str	r2, [sp, #68]	; 0x44
 8015ac6:	b151      	cbz	r1, 8015ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015ac8:	eb09 0203 	add.w	r2, r9, r3
 8015acc:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015ad0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015ad4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ad6:	7853      	ldrb	r3, [r2, #1]
 8015ad8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015adc:	9312      	str	r3, [sp, #72]	; 0x48
 8015ade:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ae0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015ae2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015ae6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015aea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015aee:	ea4c 0c03 	orr.w	ip, ip, r3
 8015af2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015af4:	041b      	lsls	r3, r3, #16
 8015af6:	fb10 f201 	smulbb	r2, r0, r1
 8015afa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8015afe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015b02:	10d2      	asrs	r2, r2, #3
 8015b04:	4323      	orrs	r3, r4
 8015b06:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8015b0a:	4353      	muls	r3, r2
 8015b0c:	fb09 330c 	mla	r3, r9, ip, r3
 8015b10:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015b14:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015b18:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015b1c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015b20:	f1c1 0c10 	rsb	ip, r1, #16
 8015b24:	ebac 0c00 	sub.w	ip, ip, r0
 8015b28:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015b2c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015b30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015b32:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015b34:	0418      	lsls	r0, r3, #16
 8015b36:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015b3a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015b3e:	4318      	orrs	r0, r3
 8015b40:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015b44:	fb02 c200 	mla	r2, r2, r0, ip
 8015b48:	0d53      	lsrs	r3, r2, #21
 8015b4a:	0952      	lsrs	r2, r2, #5
 8015b4c:	8838      	ldrh	r0, [r7, #0]
 8015b4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015b52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015b56:	431a      	orrs	r2, r3
 8015b58:	b292      	uxth	r2, r2
 8015b5a:	1201      	asrs	r1, r0, #8
 8015b5c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8015b60:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8015b64:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015b68:	fb11 f104 	smulbb	r1, r1, r4
 8015b6c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8015b70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b74:	00c0      	lsls	r0, r0, #3
 8015b76:	fb0c 1c03 	mla	ip, ip, r3, r1
 8015b7a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015b7e:	10d1      	asrs	r1, r2, #3
 8015b80:	b2c0      	uxtb	r0, r0
 8015b82:	00d2      	lsls	r2, r2, #3
 8015b84:	b2d2      	uxtb	r2, r2
 8015b86:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015b8a:	fb1e fe04 	smulbb	lr, lr, r4
 8015b8e:	fb10 f004 	smulbb	r0, r0, r4
 8015b92:	fa1f fc8c 	uxth.w	ip, ip
 8015b96:	fb01 e103 	mla	r1, r1, r3, lr
 8015b9a:	fb02 0303 	mla	r3, r2, r3, r0
 8015b9e:	b29a      	uxth	r2, r3
 8015ba0:	f10c 0301 	add.w	r3, ip, #1
 8015ba4:	b289      	uxth	r1, r1
 8015ba6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015baa:	1c53      	adds	r3, r2, #1
 8015bac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015bb0:	1c4a      	adds	r2, r1, #1
 8015bb2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015bb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015bba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015bbe:	0949      	lsrs	r1, r1, #5
 8015bc0:	ea43 030c 	orr.w	r3, r3, ip
 8015bc4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015bc8:	430b      	orrs	r3, r1
 8015bca:	803b      	strh	r3, [r7, #0]
 8015bcc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015bce:	449a      	add	sl, r3
 8015bd0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015bd2:	3702      	adds	r7, #2
 8015bd4:	441d      	add	r5, r3
 8015bd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015bda:	e742      	b.n	8015a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015bdc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015bde:	449a      	add	sl, r3
 8015be0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015be2:	441d      	add	r5, r3
 8015be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015be6:	3b01      	subs	r3, #1
 8015be8:	9309      	str	r3, [sp, #36]	; 0x24
 8015bea:	f108 0802 	add.w	r8, r8, #2
 8015bee:	e718      	b.n	8015a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015bf0:	d023      	beq.n	8015c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8015bf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015bf4:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8015bf6:	3b01      	subs	r3, #1
 8015bf8:	fb00 a003 	mla	r0, r0, r3, sl
 8015bfc:	1400      	asrs	r0, r0, #16
 8015bfe:	f53f af2d 	bmi.w	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015c02:	3901      	subs	r1, #1
 8015c04:	4288      	cmp	r0, r1
 8015c06:	f6bf af29 	bge.w	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015c0a:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015c0c:	fb01 5303 	mla	r3, r1, r3, r5
 8015c10:	141b      	asrs	r3, r3, #16
 8015c12:	f53f af23 	bmi.w	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015c16:	3a01      	subs	r2, #1
 8015c18:	4293      	cmp	r3, r2
 8015c1a:	f6bf af1f 	bge.w	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015c1e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015c22:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8015c26:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8015c2a:	f1be 0f00 	cmp.w	lr, #0
 8015c2e:	dc6c      	bgt.n	8015d0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8015c30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c32:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015c36:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015c3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c3c:	2b00      	cmp	r3, #0
 8015c3e:	f340 810e 	ble.w	8015e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015c42:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015c46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015c4a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015c4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c50:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015c54:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015c58:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015c5c:	eef0 6a48 	vmov.f32	s13, s16
 8015c60:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015c64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015c68:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015c6c:	ee16 aa90 	vmov	sl, s13
 8015c70:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015c74:	eef0 6a68 	vmov.f32	s13, s17
 8015c78:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015c7c:	ee18 2a10 	vmov	r2, s16
 8015c80:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015c84:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c88:	ee18 2a90 	vmov	r2, s17
 8015c8c:	932d      	str	r3, [sp, #180]	; 0xb4
 8015c8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c90:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c94:	932e      	str	r3, [sp, #184]	; 0xb8
 8015c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c98:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015c9a:	3b01      	subs	r3, #1
 8015c9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ca0:	930c      	str	r3, [sp, #48]	; 0x30
 8015ca2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015ca4:	bf08      	it	eq
 8015ca6:	4613      	moveq	r3, r2
 8015ca8:	ee16 5a90 	vmov	r5, s13
 8015cac:	9309      	str	r3, [sp, #36]	; 0x24
 8015cae:	eef0 8a67 	vmov.f32	s17, s15
 8015cb2:	eeb0 8a47 	vmov.f32	s16, s14
 8015cb6:	e6a6      	b.n	8015a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015cb8:	2900      	cmp	r1, #0
 8015cba:	f43f af10 	beq.w	8015ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015cbe:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015cc2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015cc6:	930f      	str	r3, [sp, #60]	; 0x3c
 8015cc8:	e709      	b.n	8015ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015cca:	f112 0901 	adds.w	r9, r2, #1
 8015cce:	f53f af7d 	bmi.w	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015cd2:	454b      	cmp	r3, r9
 8015cd4:	f6ff af7a 	blt.w	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015cd8:	f11c 0901 	adds.w	r9, ip, #1
 8015cdc:	f53f af76 	bmi.w	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ce0:	45ce      	cmp	lr, r9
 8015ce2:	f6ff af73 	blt.w	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ce6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015ce8:	9202      	str	r2, [sp, #8]
 8015cea:	b21b      	sxth	r3, r3
 8015cec:	fa0f f28e 	sxth.w	r2, lr
 8015cf0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015cf4:	e9cd c003 	strd	ip, r0, [sp, #12]
 8015cf8:	9201      	str	r2, [sp, #4]
 8015cfa:	9300      	str	r3, [sp, #0]
 8015cfc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015cfe:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015d00:	4633      	mov	r3, r6
 8015d02:	4639      	mov	r1, r7
 8015d04:	f7ff fd70 	bl	80157e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8015d08:	e760      	b.n	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015d0a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015d0c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015d0e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015d12:	ea4f 422a 	mov.w	r2, sl, asr #16
 8015d16:	1429      	asrs	r1, r5, #16
 8015d18:	fb03 2101 	mla	r1, r3, r1, r2
 8015d1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015d1e:	440a      	add	r2, r1
 8015d20:	5c61      	ldrb	r1, [r4, r1]
 8015d22:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8015d26:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015d2a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8015d2e:	f1bc 0f00 	cmp.w	ip, #0
 8015d32:	f000 808c 	beq.w	8015e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8015d36:	7857      	ldrb	r7, [r2, #1]
 8015d38:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8015d3c:	9413      	str	r4, [sp, #76]	; 0x4c
 8015d3e:	b140      	cbz	r0, 8015d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015d40:	18d7      	adds	r7, r2, r3
 8015d42:	5cd3      	ldrb	r3, [r2, r3]
 8015d44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015d48:	9310      	str	r3, [sp, #64]	; 0x40
 8015d4a:	787b      	ldrb	r3, [r7, #1]
 8015d4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015d50:	9314      	str	r3, [sp, #80]	; 0x50
 8015d52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015d54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015d56:	fb1c f200 	smulbb	r2, ip, r0
 8015d5a:	041f      	lsls	r7, r3, #16
 8015d5c:	10d2      	asrs	r2, r2, #3
 8015d5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015d62:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015d66:	431f      	orrs	r7, r3
 8015d68:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8015d6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015d6e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015d70:	041b      	lsls	r3, r3, #16
 8015d72:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8015d76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015d7a:	ea43 030b 	orr.w	r3, r3, fp
 8015d7e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015d80:	4353      	muls	r3, r2
 8015d82:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015d86:	fb04 3707 	mla	r7, r4, r7, r3
 8015d8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015d8e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015d92:	ea43 0b01 	orr.w	fp, r3, r1
 8015d96:	f1c0 0110 	rsb	r1, r0, #16
 8015d9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015d9e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015da2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015da6:	fb0c 770b 	mla	r7, ip, fp, r7
 8015daa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015dae:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8015db2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015db6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015dba:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015dbe:	fb02 770c 	mla	r7, r2, ip, r7
 8015dc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015dc4:	0d79      	lsrs	r1, r7, #21
 8015dc6:	097f      	lsrs	r7, r7, #5
 8015dc8:	8812      	ldrh	r2, [r2, #0]
 8015dca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015dce:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015dd2:	430f      	orrs	r7, r1
 8015dd4:	b2bb      	uxth	r3, r7
 8015dd6:	1211      	asrs	r1, r2, #8
 8015dd8:	1218      	asrs	r0, r3, #8
 8015dda:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015dde:	fb11 f104 	smulbb	r1, r1, r4
 8015de2:	10d7      	asrs	r7, r2, #3
 8015de4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015de8:	00d2      	lsls	r2, r2, #3
 8015dea:	fb00 1009 	mla	r0, r0, r9, r1
 8015dee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015df2:	10d9      	asrs	r1, r3, #3
 8015df4:	b2d2      	uxtb	r2, r2
 8015df6:	00db      	lsls	r3, r3, #3
 8015df8:	fb17 f704 	smulbb	r7, r7, r4
 8015dfc:	fb12 f204 	smulbb	r2, r2, r4
 8015e00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015e04:	b2db      	uxtb	r3, r3
 8015e06:	b280      	uxth	r0, r0
 8015e08:	fb01 7109 	mla	r1, r1, r9, r7
 8015e0c:	fb03 2309 	mla	r3, r3, r9, r2
 8015e10:	b29b      	uxth	r3, r3
 8015e12:	b289      	uxth	r1, r1
 8015e14:	1c42      	adds	r2, r0, #1
 8015e16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015e1a:	1c4f      	adds	r7, r1, #1
 8015e1c:	1c5a      	adds	r2, r3, #1
 8015e1e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015e22:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8015e26:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015e2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015e2e:	0949      	lsrs	r1, r1, #5
 8015e30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e32:	4310      	orrs	r0, r2
 8015e34:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015e38:	4308      	orrs	r0, r1
 8015e3a:	f823 0b02 	strh.w	r0, [r3], #2
 8015e3e:	930e      	str	r3, [sp, #56]	; 0x38
 8015e40:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015e42:	449a      	add	sl, r3
 8015e44:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015e46:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015e4a:	441d      	add	r5, r3
 8015e4c:	e6ed      	b.n	8015c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8015e4e:	2800      	cmp	r0, #0
 8015e50:	f43f af7f 	beq.w	8015d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015e54:	5cd3      	ldrb	r3, [r2, r3]
 8015e56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015e5a:	9310      	str	r3, [sp, #64]	; 0x40
 8015e5c:	e779      	b.n	8015d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015e5e:	b019      	add	sp, #100	; 0x64
 8015e60:	ecbd 8b08 	vpop	{d8-d11}
 8015e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015e68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015e6c:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8015e70:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8015e74:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8015e78:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8015e7c:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8015e80:	8808      	ldrh	r0, [r1, #0]
 8015e82:	fb06 570e 	mla	r7, r6, lr, r5
 8015e86:	2e00      	cmp	r6, #0
 8015e88:	eb02 0807 	add.w	r8, r2, r7
 8015e8c:	db38      	blt.n	8015f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8015e8e:	45b1      	cmp	r9, r6
 8015e90:	dd36      	ble.n	8015f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8015e92:	2d00      	cmp	r5, #0
 8015e94:	db32      	blt.n	8015efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8015e96:	45ae      	cmp	lr, r5
 8015e98:	dd30      	ble.n	8015efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8015e9a:	5dd2      	ldrb	r2, [r2, r7]
 8015e9c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015ea0:	1c6a      	adds	r2, r5, #1
 8015ea2:	d430      	bmi.n	8015f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015ea4:	4596      	cmp	lr, r2
 8015ea6:	dd2e      	ble.n	8015f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015ea8:	b36c      	cbz	r4, 8015f06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015eaa:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015eae:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015eb2:	3601      	adds	r6, #1
 8015eb4:	d42b      	bmi.n	8015f0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8015eb6:	45b1      	cmp	r9, r6
 8015eb8:	dd29      	ble.n	8015f0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8015eba:	f1bc 0f00 	cmp.w	ip, #0
 8015ebe:	d028      	beq.n	8015f12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8015ec0:	2d00      	cmp	r5, #0
 8015ec2:	db22      	blt.n	8015f0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8015ec4:	45ae      	cmp	lr, r5
 8015ec6:	dd20      	ble.n	8015f0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8015ec8:	f818 600e 	ldrb.w	r6, [r8, lr]
 8015ecc:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8015ed0:	3501      	adds	r5, #1
 8015ed2:	d407      	bmi.n	8015ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015ed4:	45ae      	cmp	lr, r5
 8015ed6:	dd05      	ble.n	8015ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015ed8:	b134      	cbz	r4, 8015ee8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015eda:	44c6      	add	lr, r8
 8015edc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015ee0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8015ee4:	2c0f      	cmp	r4, #15
 8015ee6:	d802      	bhi.n	8015eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015ee8:	f1bc 0f0f 	cmp.w	ip, #15
 8015eec:	d914      	bls.n	8015f18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8015eee:	4b26      	ldr	r3, [pc, #152]	; (8015f88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8015ef0:	4a26      	ldr	r2, [pc, #152]	; (8015f8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8015ef2:	4827      	ldr	r0, [pc, #156]	; (8015f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8015ef4:	f240 11db 	movw	r1, #475	; 0x1db
 8015ef8:	f007 fb5c 	bl	801d5b4 <__assert_func>
 8015efc:	4607      	mov	r7, r0
 8015efe:	e7cf      	b.n	8015ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8015f00:	4602      	mov	r2, r0
 8015f02:	4607      	mov	r7, r0
 8015f04:	e7d5      	b.n	8015eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015f06:	4602      	mov	r2, r0
 8015f08:	e7d3      	b.n	8015eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015f0a:	4606      	mov	r6, r0
 8015f0c:	e7e0      	b.n	8015ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8015f0e:	4606      	mov	r6, r0
 8015f10:	e7e8      	b.n	8015ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015f12:	2c0f      	cmp	r4, #15
 8015f14:	d8eb      	bhi.n	8015eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015f16:	4606      	mov	r6, r0
 8015f18:	043d      	lsls	r5, r7, #16
 8015f1a:	fb14 f30c 	smulbb	r3, r4, ip
 8015f1e:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8015f22:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8015f26:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015f2a:	10db      	asrs	r3, r3, #3
 8015f2c:	432f      	orrs	r7, r5
 8015f2e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015f32:	f1cc 0510 	rsb	r5, ip, #16
 8015f36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015f3a:	1b2d      	subs	r5, r5, r4
 8015f3c:	ea4e 0202 	orr.w	r2, lr, r2
 8015f40:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8015f44:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015f48:	4354      	muls	r4, r2
 8015f4a:	fb05 4507 	mla	r5, r5, r7, r4
 8015f4e:	0404      	lsls	r4, r0, #16
 8015f50:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015f54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015f58:	4320      	orrs	r0, r4
 8015f5a:	fb03 5400 	mla	r4, r3, r0, r5
 8015f5e:	0430      	lsls	r0, r6, #16
 8015f60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015f64:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8015f68:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015f6c:	4330      	orrs	r0, r6
 8015f6e:	fb03 4000 	mla	r0, r3, r0, r4
 8015f72:	0d43      	lsrs	r3, r0, #21
 8015f74:	0940      	lsrs	r0, r0, #5
 8015f76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015f7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015f7e:	4318      	orrs	r0, r3
 8015f80:	8008      	strh	r0, [r1, #0]
 8015f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015f86:	bf00      	nop
 8015f88:	080214b7 	.word	0x080214b7
 8015f8c:	08021a8f 	.word	0x08021a8f
 8015f90:	08021484 	.word	0x08021484

08015f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f98:	ed2d 8b0a 	vpush	{d8-d12}
 8015f9c:	b093      	sub	sp, #76	; 0x4c
 8015f9e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8015fa2:	920f      	str	r2, [sp, #60]	; 0x3c
 8015fa4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015fa6:	9108      	str	r1, [sp, #32]
 8015fa8:	9306      	str	r3, [sp, #24]
 8015faa:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015fae:	9010      	str	r0, [sp, #64]	; 0x40
 8015fb0:	6850      	ldr	r0, [r2, #4]
 8015fb2:	6812      	ldr	r2, [r2, #0]
 8015fb4:	fb00 1303 	mla	r3, r0, r3, r1
 8015fb8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8015fbc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015fbe:	681b      	ldr	r3, [r3, #0]
 8015fc0:	9307      	str	r3, [sp, #28]
 8015fc2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015fc4:	685f      	ldr	r7, [r3, #4]
 8015fc6:	eeb0 aa40 	vmov.f32	s20, s0
 8015fca:	eef0 9a60 	vmov.f32	s19, s1
 8015fce:	eeb0 9a41 	vmov.f32	s18, s2
 8015fd2:	eeb0 8a62 	vmov.f32	s16, s5
 8015fd6:	eef0 8a43 	vmov.f32	s17, s6
 8015fda:	eeb0 ca44 	vmov.f32	s24, s8
 8015fde:	eef0 ba64 	vmov.f32	s23, s9
 8015fe2:	eeb0 ba45 	vmov.f32	s22, s10
 8015fe6:	3704      	adds	r7, #4
 8015fe8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015fec:	9b08      	ldr	r3, [sp, #32]
 8015fee:	2b00      	cmp	r3, #0
 8015ff0:	dc03      	bgt.n	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ff2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015ff4:	2b00      	cmp	r3, #0
 8015ff6:	f340 81b2 	ble.w	801635e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015ffa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015ffc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016000:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016004:	1e48      	subs	r0, r1, #1
 8016006:	f102 3cff 	add.w	ip, r2, #4294967295
 801600a:	9b06      	ldr	r3, [sp, #24]
 801600c:	2b00      	cmp	r3, #0
 801600e:	f340 80a9 	ble.w	8016164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8016012:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016016:	ea4f 4326 	mov.w	r3, r6, asr #16
 801601a:	d406      	bmi.n	801602a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801601c:	4586      	cmp	lr, r0
 801601e:	da04      	bge.n	801602a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016020:	2b00      	cmp	r3, #0
 8016022:	db02      	blt.n	801602a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016024:	4563      	cmp	r3, ip
 8016026:	f2c0 809e 	blt.w	8016166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801602a:	f11e 0e01 	adds.w	lr, lr, #1
 801602e:	f100 808f 	bmi.w	8016150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016032:	4571      	cmp	r1, lr
 8016034:	f2c0 808c 	blt.w	8016150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016038:	3301      	adds	r3, #1
 801603a:	f100 8089 	bmi.w	8016150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801603e:	429a      	cmp	r2, r3
 8016040:	f2c0 8086 	blt.w	8016150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016044:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016048:	46c8      	mov	r8, r9
 801604a:	f1bb 0f00 	cmp.w	fp, #0
 801604e:	f340 80a6 	ble.w	801619e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8016052:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016054:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016056:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801605a:	689b      	ldr	r3, [r3, #8]
 801605c:	1422      	asrs	r2, r4, #16
 801605e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016062:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016066:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801606a:	f100 80e3 	bmi.w	8016234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801606e:	f103 3aff 	add.w	sl, r3, #4294967295
 8016072:	4552      	cmp	r2, sl
 8016074:	f280 80de 	bge.w	8016234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016078:	f1bc 0f00 	cmp.w	ip, #0
 801607c:	f2c0 80da 	blt.w	8016234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016080:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016084:	45d4      	cmp	ip, sl
 8016086:	f280 80d5 	bge.w	8016234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801608a:	b21b      	sxth	r3, r3
 801608c:	fb0c 2203 	mla	r2, ip, r3, r2
 8016090:	9d07      	ldr	r5, [sp, #28]
 8016092:	eb05 0a02 	add.w	sl, r5, r2
 8016096:	5caa      	ldrb	r2, [r5, r2]
 8016098:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801609c:	2800      	cmp	r0, #0
 801609e:	f000 80c0 	beq.w	8016222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80160a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80160a6:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80160aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80160ac:	b151      	cbz	r1, 80160c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80160ae:	eb0a 0203 	add.w	r2, sl, r3
 80160b2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80160b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80160ba:	9309      	str	r3, [sp, #36]	; 0x24
 80160bc:	7853      	ldrb	r3, [r2, #1]
 80160be:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80160c2:	930c      	str	r3, [sp, #48]	; 0x30
 80160c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80160c6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80160c8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80160cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80160d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80160d4:	ea4c 0c03 	orr.w	ip, ip, r3
 80160d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80160da:	041b      	lsls	r3, r3, #16
 80160dc:	fb10 f201 	smulbb	r2, r0, r1
 80160e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80160e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80160e8:	10d2      	asrs	r2, r2, #3
 80160ea:	432b      	orrs	r3, r5
 80160ec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80160f0:	4353      	muls	r3, r2
 80160f2:	fb0a 330c 	mla	r3, sl, ip, r3
 80160f6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80160fa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80160fe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016102:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016106:	f1c1 0c10 	rsb	ip, r1, #16
 801610a:	ebac 0c00 	sub.w	ip, ip, r0
 801610e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016112:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016116:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016118:	0418      	lsls	r0, r3, #16
 801611a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801611e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016122:	4318      	orrs	r0, r3
 8016124:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016128:	fb02 c200 	mla	r2, r2, r0, ip
 801612c:	0d53      	lsrs	r3, r2, #21
 801612e:	0952      	lsrs	r2, r2, #5
 8016130:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016134:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016138:	431a      	orrs	r2, r3
 801613a:	f8a8 2000 	strh.w	r2, [r8]
 801613e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016140:	441c      	add	r4, r3
 8016142:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016144:	f108 0802 	add.w	r8, r8, #2
 8016148:	441e      	add	r6, r3
 801614a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801614e:	e77c      	b.n	801604a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016150:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016152:	441c      	add	r4, r3
 8016154:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016156:	441e      	add	r6, r3
 8016158:	9b06      	ldr	r3, [sp, #24]
 801615a:	3b01      	subs	r3, #1
 801615c:	9306      	str	r3, [sp, #24]
 801615e:	f109 0902 	add.w	r9, r9, #2
 8016162:	e752      	b.n	801600a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016164:	d020      	beq.n	80161a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016166:	9b06      	ldr	r3, [sp, #24]
 8016168:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801616a:	3b01      	subs	r3, #1
 801616c:	fb00 4003 	mla	r0, r0, r3, r4
 8016170:	1400      	asrs	r0, r0, #16
 8016172:	f53f af67 	bmi.w	8016044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016176:	3901      	subs	r1, #1
 8016178:	4288      	cmp	r0, r1
 801617a:	f6bf af63 	bge.w	8016044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801617e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016180:	fb01 6303 	mla	r3, r1, r3, r6
 8016184:	141b      	asrs	r3, r3, #16
 8016186:	f53f af5d 	bmi.w	8016044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801618a:	3a01      	subs	r2, #1
 801618c:	4293      	cmp	r3, r2
 801618e:	f6bf af59 	bge.w	8016044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016192:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016196:	46ca      	mov	sl, r9
 8016198:	f1b8 0f00 	cmp.w	r8, #0
 801619c:	dc67      	bgt.n	801626e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801619e:	9b06      	ldr	r3, [sp, #24]
 80161a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80161a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80161a8:	9b08      	ldr	r3, [sp, #32]
 80161aa:	2b00      	cmp	r3, #0
 80161ac:	f340 80d7 	ble.w	801635e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80161b0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80161b4:	ee79 9aab 	vadd.f32	s19, s19, s23
 80161b8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80161bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80161be:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80161c2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80161c6:	eef0 6a48 	vmov.f32	s13, s16
 80161ca:	ee69 7a27 	vmul.f32	s15, s18, s15
 80161ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161d2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80161d6:	ee16 4a90 	vmov	r4, s13
 80161da:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80161de:	eef0 6a68 	vmov.f32	s13, s17
 80161e2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80161e6:	ee18 2a10 	vmov	r2, s16
 80161ea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80161ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80161f2:	ee18 2a90 	vmov	r2, s17
 80161f6:	9329      	str	r3, [sp, #164]	; 0xa4
 80161f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80161fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80161fe:	932a      	str	r3, [sp, #168]	; 0xa8
 8016200:	9b08      	ldr	r3, [sp, #32]
 8016202:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016204:	3b01      	subs	r3, #1
 8016206:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801620a:	9308      	str	r3, [sp, #32]
 801620c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801620e:	bf08      	it	eq
 8016210:	4613      	moveq	r3, r2
 8016212:	ee16 6a90 	vmov	r6, s13
 8016216:	9306      	str	r3, [sp, #24]
 8016218:	eef0 8a67 	vmov.f32	s17, s15
 801621c:	eeb0 8a47 	vmov.f32	s16, s14
 8016220:	e6e4      	b.n	8015fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016222:	2900      	cmp	r1, #0
 8016224:	f43f af4e 	beq.w	80160c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8016228:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801622c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016230:	9309      	str	r3, [sp, #36]	; 0x24
 8016232:	e747      	b.n	80160c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8016234:	f112 0a01 	adds.w	sl, r2, #1
 8016238:	d481      	bmi.n	801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801623a:	4553      	cmp	r3, sl
 801623c:	f6ff af7f 	blt.w	801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016240:	f11c 0a01 	adds.w	sl, ip, #1
 8016244:	f53f af7b 	bmi.w	801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016248:	45d6      	cmp	lr, sl
 801624a:	f6ff af78 	blt.w	801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801624e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016252:	b21b      	sxth	r3, r3
 8016254:	fa0f f28e 	sxth.w	r2, lr
 8016258:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801625c:	9201      	str	r2, [sp, #4]
 801625e:	9300      	str	r3, [sp, #0]
 8016260:	9a07      	ldr	r2, [sp, #28]
 8016262:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016264:	463b      	mov	r3, r7
 8016266:	4641      	mov	r1, r8
 8016268:	f7ff fdfe 	bl	8015e68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801626c:	e767      	b.n	801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801626e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016270:	9d07      	ldr	r5, [sp, #28]
 8016272:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016276:	1422      	asrs	r2, r4, #16
 8016278:	1431      	asrs	r1, r6, #16
 801627a:	fb03 2101 	mla	r1, r3, r1, r2
 801627e:	9a07      	ldr	r2, [sp, #28]
 8016280:	440a      	add	r2, r1
 8016282:	5c69      	ldrb	r1, [r5, r1]
 8016284:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016288:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801628c:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016290:	f1be 0f00 	cmp.w	lr, #0
 8016294:	d05c      	beq.n	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8016296:	f892 c001 	ldrb.w	ip, [r2, #1]
 801629a:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801629e:	950d      	str	r5, [sp, #52]	; 0x34
 80162a0:	b150      	cbz	r0, 80162b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80162a2:	eb02 0c03 	add.w	ip, r2, r3
 80162a6:	5cd3      	ldrb	r3, [r2, r3]
 80162a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80162ac:	930a      	str	r3, [sp, #40]	; 0x28
 80162ae:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80162b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80162b6:	930e      	str	r3, [sp, #56]	; 0x38
 80162b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80162ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80162bc:	fb1e f200 	smulbb	r2, lr, r0
 80162c0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80162c4:	10d2      	asrs	r2, r2, #3
 80162c6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80162ca:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80162ce:	ea4c 0c03 	orr.w	ip, ip, r3
 80162d2:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80162d6:	9311      	str	r3, [sp, #68]	; 0x44
 80162d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162da:	041b      	lsls	r3, r3, #16
 80162dc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80162e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80162e4:	ea43 030b 	orr.w	r3, r3, fp
 80162e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80162ea:	4353      	muls	r3, r2
 80162ec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80162f0:	fb05 3c0c 	mla	ip, r5, ip, r3
 80162f4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80162f8:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80162fc:	ea43 0b01 	orr.w	fp, r3, r1
 8016300:	f1c0 0110 	rsb	r1, r0, #16
 8016304:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016306:	eba1 0e0e 	sub.w	lr, r1, lr
 801630a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801630e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016312:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016316:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801631a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801631e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016322:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016326:	fb02 cc0e 	mla	ip, r2, lr, ip
 801632a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801632e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016332:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016336:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801633a:	ea43 0c0c 	orr.w	ip, r3, ip
 801633e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016340:	f82a cb02 	strh.w	ip, [sl], #2
 8016344:	441c      	add	r4, r3
 8016346:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016348:	f108 38ff 	add.w	r8, r8, #4294967295
 801634c:	441e      	add	r6, r3
 801634e:	e723      	b.n	8016198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016350:	2800      	cmp	r0, #0
 8016352:	d0b1      	beq.n	80162b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8016354:	5cd3      	ldrb	r3, [r2, r3]
 8016356:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801635a:	930a      	str	r3, [sp, #40]	; 0x28
 801635c:	e7ac      	b.n	80162b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801635e:	b013      	add	sp, #76	; 0x4c
 8016360:	ecbd 8b0a 	vpop	{d8-d12}
 8016364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801636c:	468b      	mov	fp, r1
 801636e:	8809      	ldrh	r1, [r1, #0]
 8016370:	b089      	sub	sp, #36	; 0x24
 8016372:	10cd      	asrs	r5, r1, #3
 8016374:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8016378:	ea4f 2921 	mov.w	r9, r1, asr #8
 801637c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016380:	00c9      	lsls	r1, r1, #3
 8016382:	9500      	str	r5, [sp, #0]
 8016384:	b2c9      	uxtb	r1, r1
 8016386:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801638a:	9101      	str	r1, [sp, #4]
 801638c:	9900      	ldr	r1, [sp, #0]
 801638e:	9202      	str	r2, [sp, #8]
 8016390:	fb04 650e 	mla	r5, r4, lr, r6
 8016394:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8016398:	eb02 0805 	add.w	r8, r2, r5
 801639c:	0209      	lsls	r1, r1, #8
 801639e:	9a01      	ldr	r2, [sp, #4]
 80163a0:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80163a4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80163a8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80163ac:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80163b0:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80163b4:	4311      	orrs	r1, r2
 80163b6:	2c00      	cmp	r4, #0
 80163b8:	9107      	str	r1, [sp, #28]
 80163ba:	db43      	blt.n	8016444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80163bc:	45a2      	cmp	sl, r4
 80163be:	dd41      	ble.n	8016444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80163c0:	2e00      	cmp	r6, #0
 80163c2:	db3d      	blt.n	8016440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80163c4:	45b6      	cmp	lr, r6
 80163c6:	dd3b      	ble.n	8016440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80163c8:	9a02      	ldr	r2, [sp, #8]
 80163ca:	5d55      	ldrb	r5, [r2, r5]
 80163cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80163d0:	441d      	add	r5, r3
 80163d2:	1c72      	adds	r2, r6, #1
 80163d4:	d439      	bmi.n	801644a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80163d6:	4596      	cmp	lr, r2
 80163d8:	dd37      	ble.n	801644a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80163da:	2f00      	cmp	r7, #0
 80163dc:	d035      	beq.n	801644a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80163de:	f898 1001 	ldrb.w	r1, [r8, #1]
 80163e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80163e6:	4419      	add	r1, r3
 80163e8:	3401      	adds	r4, #1
 80163ea:	d432      	bmi.n	8016452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80163ec:	45a2      	cmp	sl, r4
 80163ee:	dd30      	ble.n	8016452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80163f0:	b378      	cbz	r0, 8016452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80163f2:	2e00      	cmp	r6, #0
 80163f4:	db2b      	blt.n	801644e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80163f6:	45b6      	cmp	lr, r6
 80163f8:	dd29      	ble.n	801644e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80163fa:	f818 400e 	ldrb.w	r4, [r8, lr]
 80163fe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016402:	441c      	add	r4, r3
 8016404:	3601      	adds	r6, #1
 8016406:	d427      	bmi.n	8016458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016408:	45b6      	cmp	lr, r6
 801640a:	dd25      	ble.n	8016458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801640c:	b327      	cbz	r7, 8016458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801640e:	44c6      	add	lr, r8
 8016410:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016414:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016418:	4413      	add	r3, r2
 801641a:	782a      	ldrb	r2, [r5, #0]
 801641c:	9202      	str	r2, [sp, #8]
 801641e:	780a      	ldrb	r2, [r1, #0]
 8016420:	9203      	str	r2, [sp, #12]
 8016422:	7822      	ldrb	r2, [r4, #0]
 8016424:	9204      	str	r2, [sp, #16]
 8016426:	2f0f      	cmp	r7, #15
 8016428:	781a      	ldrb	r2, [r3, #0]
 801642a:	9205      	str	r2, [sp, #20]
 801642c:	d801      	bhi.n	8016432 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801642e:	280f      	cmp	r0, #15
 8016430:	d914      	bls.n	801645c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8016432:	4b3f      	ldr	r3, [pc, #252]	; (8016530 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8016434:	4a3f      	ldr	r2, [pc, #252]	; (8016534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8016436:	4840      	ldr	r0, [pc, #256]	; (8016538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8016438:	f240 11f9 	movw	r1, #505	; 0x1f9
 801643c:	f007 f8ba 	bl	801d5b4 <__assert_func>
 8016440:	ad07      	add	r5, sp, #28
 8016442:	e7c6      	b.n	80163d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8016444:	a907      	add	r1, sp, #28
 8016446:	460d      	mov	r5, r1
 8016448:	e7ce      	b.n	80163e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801644a:	a907      	add	r1, sp, #28
 801644c:	e7cc      	b.n	80163e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801644e:	ac07      	add	r4, sp, #28
 8016450:	e7d8      	b.n	8016404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8016452:	ab07      	add	r3, sp, #28
 8016454:	461c      	mov	r4, r3
 8016456:	e7e0      	b.n	801641a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8016458:	ab07      	add	r3, sp, #28
 801645a:	e7de      	b.n	801641a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801645c:	b2ba      	uxth	r2, r7
 801645e:	b280      	uxth	r0, r0
 8016460:	fb02 fa00 	mul.w	sl, r2, r0
 8016464:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8016468:	0112      	lsls	r2, r2, #4
 801646a:	b280      	uxth	r0, r0
 801646c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8016470:	7849      	ldrb	r1, [r1, #1]
 8016472:	78ae      	ldrb	r6, [r5, #2]
 8016474:	786d      	ldrb	r5, [r5, #1]
 8016476:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801647a:	eba2 020a 	sub.w	r2, r2, sl
 801647e:	b292      	uxth	r2, r2
 8016480:	ebae 0e00 	sub.w	lr, lr, r0
 8016484:	fa1f fe8e 	uxth.w	lr, lr
 8016488:	4351      	muls	r1, r2
 801648a:	fb02 f808 	mul.w	r8, r2, r8
 801648e:	fb0e 8806 	mla	r8, lr, r6, r8
 8016492:	fb0e 1505 	mla	r5, lr, r5, r1
 8016496:	78a6      	ldrb	r6, [r4, #2]
 8016498:	7861      	ldrb	r1, [r4, #1]
 801649a:	fa1f f78c 	uxth.w	r7, ip
 801649e:	fb00 8806 	mla	r8, r0, r6, r8
 80164a2:	fb00 5501 	mla	r5, r0, r1, r5
 80164a6:	789e      	ldrb	r6, [r3, #2]
 80164a8:	7859      	ldrb	r1, [r3, #1]
 80164aa:	9b00      	ldr	r3, [sp, #0]
 80164ac:	ea6f 0c0c 	mvn.w	ip, ip
 80164b0:	fa5f fc8c 	uxtb.w	ip, ip
 80164b4:	fb0a 5101 	mla	r1, sl, r1, r5
 80164b8:	fb13 f50c 	smulbb	r5, r3, ip
 80164bc:	9b03      	ldr	r3, [sp, #12]
 80164be:	435a      	muls	r2, r3
 80164c0:	9b02      	ldr	r3, [sp, #8]
 80164c2:	fb0e 2203 	mla	r2, lr, r3, r2
 80164c6:	9b04      	ldr	r3, [sp, #16]
 80164c8:	fb00 2003 	mla	r0, r0, r3, r2
 80164cc:	9b05      	ldr	r3, [sp, #20]
 80164ce:	fb0a 8606 	mla	r6, sl, r6, r8
 80164d2:	fb19 f90c 	smulbb	r9, r9, ip
 80164d6:	fb0a 0a03 	mla	sl, sl, r3, r0
 80164da:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80164de:	9b01      	ldr	r3, [sp, #4]
 80164e0:	fb06 9607 	mla	r6, r6, r7, r9
 80164e4:	b2b6      	uxth	r6, r6
 80164e6:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80164ea:	fb13 fc0c 	smulbb	ip, r3, ip
 80164ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80164f2:	fb01 5107 	mla	r1, r1, r7, r5
 80164f6:	f106 0901 	add.w	r9, r6, #1
 80164fa:	fb0a c707 	mla	r7, sl, r7, ip
 80164fe:	b2bf      	uxth	r7, r7
 8016500:	b289      	uxth	r1, r1
 8016502:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8016506:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801650a:	1c4d      	adds	r5, r1, #1
 801650c:	1c7e      	adds	r6, r7, #1
 801650e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016512:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8016516:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801651a:	0949      	lsrs	r1, r1, #5
 801651c:	ea46 0609 	orr.w	r6, r6, r9
 8016520:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016524:	430e      	orrs	r6, r1
 8016526:	f8ab 6000 	strh.w	r6, [fp]
 801652a:	b009      	add	sp, #36	; 0x24
 801652c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016530:	080214b7 	.word	0x080214b7
 8016534:	080219e6 	.word	0x080219e6
 8016538:	08021484 	.word	0x08021484

0801653c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801653c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016540:	ed2d 8b08 	vpush	{d8-d11}
 8016544:	b095      	sub	sp, #84	; 0x54
 8016546:	eeb0 aa40 	vmov.f32	s20, s0
 801654a:	9212      	str	r2, [sp, #72]	; 0x48
 801654c:	9309      	str	r3, [sp, #36]	; 0x24
 801654e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016550:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8016554:	930f      	str	r3, [sp, #60]	; 0x3c
 8016556:	910e      	str	r1, [sp, #56]	; 0x38
 8016558:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801655c:	9013      	str	r0, [sp, #76]	; 0x4c
 801655e:	6850      	ldr	r0, [r2, #4]
 8016560:	6812      	ldr	r2, [r2, #0]
 8016562:	fb00 1303 	mla	r3, r0, r3, r1
 8016566:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801656a:	930a      	str	r3, [sp, #40]	; 0x28
 801656c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801656e:	681b      	ldr	r3, [r3, #0]
 8016570:	930d      	str	r3, [sp, #52]	; 0x34
 8016572:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016574:	685c      	ldr	r4, [r3, #4]
 8016576:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016578:	43db      	mvns	r3, r3
 801657a:	b2db      	uxtb	r3, r3
 801657c:	eef0 9a60 	vmov.f32	s19, s1
 8016580:	eeb0 9a41 	vmov.f32	s18, s2
 8016584:	eeb0 8a62 	vmov.f32	s16, s5
 8016588:	eef0 8a43 	vmov.f32	s17, s6
 801658c:	eef0 ba44 	vmov.f32	s23, s8
 8016590:	eeb0 ba64 	vmov.f32	s22, s9
 8016594:	eef0 aa45 	vmov.f32	s21, s10
 8016598:	3404      	adds	r4, #4
 801659a:	930b      	str	r3, [sp, #44]	; 0x2c
 801659c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801659e:	2b00      	cmp	r3, #0
 80165a0:	dc03      	bgt.n	80165aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80165a4:	2b00      	cmp	r3, #0
 80165a6:	f340 8255 	ble.w	8016a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80165aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80165ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80165b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80165b4:	1e48      	subs	r0, r1, #1
 80165b6:	1e55      	subs	r5, r2, #1
 80165b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165ba:	2b00      	cmp	r3, #0
 80165bc:	f340 80f9 	ble.w	80167b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80165c0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80165c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80165c4:	1436      	asrs	r6, r6, #16
 80165c6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80165ca:	d406      	bmi.n	80165da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80165cc:	4286      	cmp	r6, r0
 80165ce:	da04      	bge.n	80165da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80165d0:	2b00      	cmp	r3, #0
 80165d2:	db02      	blt.n	80165da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80165d4:	42ab      	cmp	r3, r5
 80165d6:	f2c0 80ed 	blt.w	80167b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80165da:	3601      	adds	r6, #1
 80165dc:	f100 80da 	bmi.w	8016794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80165e0:	42b1      	cmp	r1, r6
 80165e2:	f2c0 80d7 	blt.w	8016794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80165e6:	3301      	adds	r3, #1
 80165e8:	f100 80d4 	bmi.w	8016794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80165ec:	429a      	cmp	r2, r3
 80165ee:	f2c0 80d1 	blt.w	8016794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80165f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165f4:	9311      	str	r3, [sp, #68]	; 0x44
 80165f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80165f8:	930c      	str	r3, [sp, #48]	; 0x30
 80165fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80165fc:	2b00      	cmp	r3, #0
 80165fe:	f340 80fa 	ble.w	80167f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016602:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8016604:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016606:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016608:	68c6      	ldr	r6, [r0, #12]
 801660a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801660c:	141d      	asrs	r5, r3, #16
 801660e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016612:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016614:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016616:	1400      	asrs	r0, r0, #16
 8016618:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801661c:	6892      	ldr	r2, [r2, #8]
 801661e:	f100 813e 	bmi.w	801689e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016622:	1e57      	subs	r7, r2, #1
 8016624:	42b8      	cmp	r0, r7
 8016626:	f280 813a 	bge.w	801689e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801662a:	2d00      	cmp	r5, #0
 801662c:	f2c0 8137 	blt.w	801689e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016630:	1e77      	subs	r7, r6, #1
 8016632:	42bd      	cmp	r5, r7
 8016634:	f280 8133 	bge.w	801689e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016638:	b212      	sxth	r2, r2
 801663a:	fb05 0002 	mla	r0, r5, r2, r0
 801663e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016640:	f815 a000 	ldrb.w	sl, [r5, r0]
 8016644:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8016648:	182e      	adds	r6, r5, r0
 801664a:	eb04 050a 	add.w	r5, r4, sl
 801664e:	2b00      	cmp	r3, #0
 8016650:	f000 8117 	beq.w	8016882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8016654:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016658:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801665c:	44a4      	add	ip, r4
 801665e:	2900      	cmp	r1, #0
 8016660:	f000 8117 	beq.w	8016892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8016664:	18b0      	adds	r0, r6, r2
 8016666:	5cb2      	ldrb	r2, [r6, r2]
 8016668:	7840      	ldrb	r0, [r0, #1]
 801666a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801666e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016672:	4422      	add	r2, r4
 8016674:	4420      	add	r0, r4
 8016676:	b29b      	uxth	r3, r3
 8016678:	b289      	uxth	r1, r1
 801667a:	fb03 f901 	mul.w	r9, r3, r1
 801667e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016682:	011b      	lsls	r3, r3, #4
 8016684:	b289      	uxth	r1, r1
 8016686:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801668a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801668e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016690:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8016694:	f8b6 e000 	ldrh.w	lr, [r6]
 8016698:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801669c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80166a0:	eba3 0309 	sub.w	r3, r3, r9
 80166a4:	b29b      	uxth	r3, r3
 80166a6:	eba8 0801 	sub.w	r8, r8, r1
 80166aa:	fa1f f888 	uxth.w	r8, r8
 80166ae:	435f      	muls	r7, r3
 80166b0:	fb08 770b 	mla	r7, r8, fp, r7
 80166b4:	f892 b002 	ldrb.w	fp, [r2, #2]
 80166b8:	9310      	str	r3, [sp, #64]	; 0x40
 80166ba:	fb01 770b 	mla	r7, r1, fp, r7
 80166be:	f890 b002 	ldrb.w	fp, [r0, #2]
 80166c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166c4:	fb09 770b 	mla	r7, r9, fp, r7
 80166c8:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80166cc:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80166d0:	fb1b fb03 	smulbb	fp, fp, r3
 80166d4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80166d8:	fb07 b706 	mla	r7, r7, r6, fp
 80166dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166de:	f895 b001 	ldrb.w	fp, [r5, #1]
 80166e2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80166e6:	f89c c000 	ldrb.w	ip, [ip]
 80166ea:	435d      	muls	r5, r3
 80166ec:	fb08 550b 	mla	r5, r8, fp, r5
 80166f0:	f892 b001 	ldrb.w	fp, [r2, #1]
 80166f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166f6:	fb01 550b 	mla	r5, r1, fp, r5
 80166fa:	f890 b001 	ldrb.w	fp, [r0, #1]
 80166fe:	fb09 550b 	mla	r5, r9, fp, r5
 8016702:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8016706:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801670a:	fb1b fb03 	smulbb	fp, fp, r3
 801670e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016710:	fb03 f30c 	mul.w	r3, r3, ip
 8016714:	f892 c000 	ldrb.w	ip, [r2]
 8016718:	fb08 330a 	mla	r3, r8, sl, r3
 801671c:	fb01 330c 	mla	r3, r1, ip, r3
 8016720:	f890 c000 	ldrb.w	ip, [r0]
 8016724:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016728:	fb09 3c0c 	mla	ip, r9, ip, r3
 801672c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801672e:	fa5f fe8e 	uxtb.w	lr, lr
 8016732:	b2bf      	uxth	r7, r7
 8016734:	fb1e fe03 	smulbb	lr, lr, r3
 8016738:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801673c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016740:	fb05 b506 	mla	r5, r5, r6, fp
 8016744:	1c7b      	adds	r3, r7, #1
 8016746:	fb0c e606 	mla	r6, ip, r6, lr
 801674a:	b2ad      	uxth	r5, r5
 801674c:	b2b6      	uxth	r6, r6
 801674e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016752:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8016756:	f105 0b01 	add.w	fp, r5, #1
 801675a:	1c77      	adds	r7, r6, #1
 801675c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016760:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016764:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016768:	096d      	lsrs	r5, r5, #5
 801676a:	431f      	orrs	r7, r3
 801676c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016770:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016772:	433d      	orrs	r5, r7
 8016774:	801d      	strh	r5, [r3, #0]
 8016776:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016778:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801677a:	3302      	adds	r3, #2
 801677c:	930c      	str	r3, [sp, #48]	; 0x30
 801677e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016780:	4413      	add	r3, r2
 8016782:	9327      	str	r3, [sp, #156]	; 0x9c
 8016784:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016786:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016788:	4413      	add	r3, r2
 801678a:	9328      	str	r3, [sp, #160]	; 0xa0
 801678c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801678e:	3b01      	subs	r3, #1
 8016790:	9311      	str	r3, [sp, #68]	; 0x44
 8016792:	e732      	b.n	80165fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016794:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016796:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8016798:	4433      	add	r3, r6
 801679a:	9327      	str	r3, [sp, #156]	; 0x9c
 801679c:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801679e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80167a0:	4433      	add	r3, r6
 80167a2:	9328      	str	r3, [sp, #160]	; 0xa0
 80167a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167a6:	3b01      	subs	r3, #1
 80167a8:	9309      	str	r3, [sp, #36]	; 0x24
 80167aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167ac:	3302      	adds	r3, #2
 80167ae:	930a      	str	r3, [sp, #40]	; 0x28
 80167b0:	e702      	b.n	80165b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80167b2:	d027      	beq.n	8016804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80167b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167b6:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80167b8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80167ba:	3b01      	subs	r3, #1
 80167bc:	fb00 5003 	mla	r0, r0, r3, r5
 80167c0:	1400      	asrs	r0, r0, #16
 80167c2:	f53f af16 	bmi.w	80165f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80167c6:	3901      	subs	r1, #1
 80167c8:	4288      	cmp	r0, r1
 80167ca:	f6bf af12 	bge.w	80165f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80167ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80167d0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80167d2:	fb01 0303 	mla	r3, r1, r3, r0
 80167d6:	141b      	asrs	r3, r3, #16
 80167d8:	f53f af0b 	bmi.w	80165f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80167dc:	3a01      	subs	r2, #1
 80167de:	4293      	cmp	r3, r2
 80167e0:	f6bf af07 	bge.w	80165f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80167e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167e6:	9311      	str	r3, [sp, #68]	; 0x44
 80167e8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80167ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167ee:	930c      	str	r3, [sp, #48]	; 0x30
 80167f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80167f2:	2b00      	cmp	r3, #0
 80167f4:	dc70      	bgt.n	80168d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80167f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80167fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80167fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016802:	930a      	str	r3, [sp, #40]	; 0x28
 8016804:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016806:	2b00      	cmp	r3, #0
 8016808:	f340 8124 	ble.w	8016a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801680c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016810:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016814:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016818:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801681a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801681e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016822:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016826:	eef0 6a48 	vmov.f32	s13, s16
 801682a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801682e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016832:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016836:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801683a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801683e:	eef0 6a68 	vmov.f32	s13, s17
 8016842:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016846:	ee18 2a10 	vmov	r2, s16
 801684a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801684e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016852:	ee18 2a90 	vmov	r2, s17
 8016856:	9329      	str	r3, [sp, #164]	; 0xa4
 8016858:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801685a:	fb92 f3f3 	sdiv	r3, r2, r3
 801685e:	932a      	str	r3, [sp, #168]	; 0xa8
 8016860:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016862:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016864:	3b01      	subs	r3, #1
 8016866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801686a:	930e      	str	r3, [sp, #56]	; 0x38
 801686c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801686e:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8016872:	bf08      	it	eq
 8016874:	4613      	moveq	r3, r2
 8016876:	9309      	str	r3, [sp, #36]	; 0x24
 8016878:	eef0 8a67 	vmov.f32	s17, s15
 801687c:	eeb0 8a47 	vmov.f32	s16, s14
 8016880:	e68c      	b.n	801659c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016882:	b149      	cbz	r1, 8016898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8016884:	5cb2      	ldrb	r2, [r6, r2]
 8016886:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801688a:	4422      	add	r2, r4
 801688c:	4628      	mov	r0, r5
 801688e:	46ac      	mov	ip, r5
 8016890:	e6f1      	b.n	8016676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016892:	4628      	mov	r0, r5
 8016894:	462a      	mov	r2, r5
 8016896:	e6ee      	b.n	8016676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016898:	4628      	mov	r0, r5
 801689a:	462a      	mov	r2, r5
 801689c:	e7f7      	b.n	801688e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801689e:	1c47      	adds	r7, r0, #1
 80168a0:	f53f af69 	bmi.w	8016776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80168a4:	42ba      	cmp	r2, r7
 80168a6:	f6ff af66 	blt.w	8016776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80168aa:	1c6f      	adds	r7, r5, #1
 80168ac:	f53f af63 	bmi.w	8016776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80168b0:	42be      	cmp	r6, r7
 80168b2:	f6ff af60 	blt.w	8016776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80168b6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80168b8:	9002      	str	r0, [sp, #8]
 80168ba:	b236      	sxth	r6, r6
 80168bc:	b212      	sxth	r2, r2
 80168be:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80168c2:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80168c6:	9200      	str	r2, [sp, #0]
 80168c8:	9601      	str	r6, [sp, #4]
 80168ca:	4623      	mov	r3, r4
 80168cc:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80168d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80168d2:	f7ff fd49 	bl	8016368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80168d6:	e74e      	b.n	8016776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80168d8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80168da:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80168dc:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80168de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80168e0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80168e4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80168e6:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80168ea:	142d      	asrs	r5, r5, #16
 80168ec:	1400      	asrs	r0, r0, #16
 80168ee:	fb02 5000 	mla	r0, r2, r0, r5
 80168f2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80168f4:	f815 9000 	ldrb.w	r9, [r5, r0]
 80168f8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80168fc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8016900:	182e      	adds	r6, r5, r0
 8016902:	eb04 0509 	add.w	r5, r4, r9
 8016906:	2b00      	cmp	r3, #0
 8016908:	f000 8096 	beq.w	8016a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801690c:	7877      	ldrb	r7, [r6, #1]
 801690e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016912:	4427      	add	r7, r4
 8016914:	2900      	cmp	r1, #0
 8016916:	f000 8097 	beq.w	8016a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801691a:	18b0      	adds	r0, r6, r2
 801691c:	5cb2      	ldrb	r2, [r6, r2]
 801691e:	7840      	ldrb	r0, [r0, #1]
 8016920:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016924:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016928:	4422      	add	r2, r4
 801692a:	4420      	add	r0, r4
 801692c:	b29b      	uxth	r3, r3
 801692e:	b289      	uxth	r1, r1
 8016930:	fb03 f801 	mul.w	r8, r3, r1
 8016934:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016936:	f895 b002 	ldrb.w	fp, [r5, #2]
 801693a:	f8b6 c000 	ldrh.w	ip, [r6]
 801693e:	78be      	ldrb	r6, [r7, #2]
 8016940:	f814 9009 	ldrb.w	r9, [r4, r9]
 8016944:	011b      	lsls	r3, r3, #4
 8016946:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801694a:	b289      	uxth	r1, r1
 801694c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016950:	eba3 0308 	sub.w	r3, r3, r8
 8016954:	b29b      	uxth	r3, r3
 8016956:	ebae 0e01 	sub.w	lr, lr, r1
 801695a:	fa1f fe8e 	uxth.w	lr, lr
 801695e:	435e      	muls	r6, r3
 8016960:	fb0e 660b 	mla	r6, lr, fp, r6
 8016964:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016968:	9310      	str	r3, [sp, #64]	; 0x40
 801696a:	fb01 660b 	mla	r6, r1, fp, r6
 801696e:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016972:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016974:	fb08 660b 	mla	r6, r8, fp, r6
 8016978:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801697c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016980:	fb1b fb03 	smulbb	fp, fp, r3
 8016984:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016988:	fb06 b60a 	mla	r6, r6, sl, fp
 801698c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801698e:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016992:	787d      	ldrb	r5, [r7, #1]
 8016994:	783f      	ldrb	r7, [r7, #0]
 8016996:	435d      	muls	r5, r3
 8016998:	fb0e 550b 	mla	r5, lr, fp, r5
 801699c:	f892 b001 	ldrb.w	fp, [r2, #1]
 80169a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169a2:	fb01 550b 	mla	r5, r1, fp, r5
 80169a6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80169aa:	fb08 550b 	mla	r5, r8, fp, r5
 80169ae:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80169b2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80169b6:	fb1b fb03 	smulbb	fp, fp, r3
 80169ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80169bc:	437b      	muls	r3, r7
 80169be:	7817      	ldrb	r7, [r2, #0]
 80169c0:	fb0e 3309 	mla	r3, lr, r9, r3
 80169c4:	fb01 3307 	mla	r3, r1, r7, r3
 80169c8:	7807      	ldrb	r7, [r0, #0]
 80169ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80169ce:	fb08 3707 	mla	r7, r8, r7, r3
 80169d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169d4:	fa5f fc8c 	uxtb.w	ip, ip
 80169d8:	fb1c fc03 	smulbb	ip, ip, r3
 80169dc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80169e0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80169e4:	fb05 b50a 	mla	r5, r5, sl, fp
 80169e8:	fb07 c70a 	mla	r7, r7, sl, ip
 80169ec:	b2b6      	uxth	r6, r6
 80169ee:	b2ad      	uxth	r5, r5
 80169f0:	b2bf      	uxth	r7, r7
 80169f2:	1c73      	adds	r3, r6, #1
 80169f4:	1c7a      	adds	r2, r7, #1
 80169f6:	f105 0b01 	add.w	fp, r5, #1
 80169fa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80169fe:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8016a02:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016a06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a0a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016a0e:	096d      	lsrs	r5, r5, #5
 8016a10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016a12:	4316      	orrs	r6, r2
 8016a14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a18:	432e      	orrs	r6, r5
 8016a1a:	f823 6b02 	strh.w	r6, [r3], #2
 8016a1e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016a20:	930c      	str	r3, [sp, #48]	; 0x30
 8016a22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016a24:	4413      	add	r3, r2
 8016a26:	9327      	str	r3, [sp, #156]	; 0x9c
 8016a28:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016a2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a2c:	4413      	add	r3, r2
 8016a2e:	9328      	str	r3, [sp, #160]	; 0xa0
 8016a30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016a32:	3b01      	subs	r3, #1
 8016a34:	9311      	str	r3, [sp, #68]	; 0x44
 8016a36:	e6db      	b.n	80167f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8016a38:	b149      	cbz	r1, 8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016a3a:	5cb2      	ldrb	r2, [r6, r2]
 8016a3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016a40:	4422      	add	r2, r4
 8016a42:	4628      	mov	r0, r5
 8016a44:	462f      	mov	r7, r5
 8016a46:	e771      	b.n	801692c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016a48:	4628      	mov	r0, r5
 8016a4a:	462a      	mov	r2, r5
 8016a4c:	e76e      	b.n	801692c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016a4e:	4628      	mov	r0, r5
 8016a50:	462a      	mov	r2, r5
 8016a52:	e7f7      	b.n	8016a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016a54:	b015      	add	sp, #84	; 0x54
 8016a56:	ecbd 8b08 	vpop	{d8-d11}
 8016a5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a64:	880e      	ldrh	r6, [r1, #0]
 8016a66:	b085      	sub	sp, #20
 8016a68:	0230      	lsls	r0, r6, #8
 8016a6a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016a6e:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8016a72:	0170      	lsls	r0, r6, #5
 8016a74:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016a78:	9101      	str	r1, [sp, #4]
 8016a7a:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8016a7e:	00f6      	lsls	r6, r6, #3
 8016a80:	ea4b 0000 	orr.w	r0, fp, r0
 8016a84:	b2f6      	uxtb	r6, r6
 8016a86:	4691      	mov	r9, r2
 8016a88:	fb05 7a0c 	mla	sl, r5, ip, r7
 8016a8c:	4306      	orrs	r6, r0
 8016a8e:	2d00      	cmp	r5, #0
 8016a90:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016a94:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8016a98:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8016a9c:	9603      	str	r6, [sp, #12]
 8016a9e:	eb09 0e0a 	add.w	lr, r9, sl
 8016aa2:	db42      	blt.n	8016b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016aa4:	45a8      	cmp	r8, r5
 8016aa6:	dd40      	ble.n	8016b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016aa8:	2f00      	cmp	r7, #0
 8016aaa:	db3c      	blt.n	8016b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016aac:	45bc      	cmp	ip, r7
 8016aae:	dd3a      	ble.n	8016b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016ab0:	f819 600a 	ldrb.w	r6, [r9, sl]
 8016ab4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016ab8:	441e      	add	r6, r3
 8016aba:	1c78      	adds	r0, r7, #1
 8016abc:	d438      	bmi.n	8016b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016abe:	4584      	cmp	ip, r0
 8016ac0:	dd36      	ble.n	8016b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016ac2:	b3aa      	cbz	r2, 8016b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016ac4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016ac8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016acc:	4418      	add	r0, r3
 8016ace:	3501      	adds	r5, #1
 8016ad0:	d432      	bmi.n	8016b38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016ad2:	45a8      	cmp	r8, r5
 8016ad4:	dd30      	ble.n	8016b38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016ad6:	b37c      	cbz	r4, 8016b38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016ad8:	2f00      	cmp	r7, #0
 8016ada:	db2b      	blt.n	8016b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016adc:	45bc      	cmp	ip, r7
 8016ade:	dd29      	ble.n	8016b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016ae0:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8016ae4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016ae8:	441d      	add	r5, r3
 8016aea:	3701      	adds	r7, #1
 8016aec:	d427      	bmi.n	8016b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016aee:	45bc      	cmp	ip, r7
 8016af0:	dd25      	ble.n	8016b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016af2:	b322      	cbz	r2, 8016b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016af4:	44f4      	add	ip, lr
 8016af6:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8016afa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016afe:	443b      	add	r3, r7
 8016b00:	781f      	ldrb	r7, [r3, #0]
 8016b02:	f896 9000 	ldrb.w	r9, [r6]
 8016b06:	f890 a000 	ldrb.w	sl, [r0]
 8016b0a:	f895 8000 	ldrb.w	r8, [r5]
 8016b0e:	2a0f      	cmp	r2, #15
 8016b10:	4639      	mov	r1, r7
 8016b12:	d801      	bhi.n	8016b18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8016b14:	2c0f      	cmp	r4, #15
 8016b16:	d914      	bls.n	8016b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8016b18:	4b2c      	ldr	r3, [pc, #176]	; (8016bcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8016b1a:	4a2d      	ldr	r2, [pc, #180]	; (8016bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8016b1c:	482d      	ldr	r0, [pc, #180]	; (8016bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8016b1e:	f240 11f9 	movw	r1, #505	; 0x1f9
 8016b22:	f006 fd47 	bl	801d5b4 <__assert_func>
 8016b26:	ae03      	add	r6, sp, #12
 8016b28:	e7c7      	b.n	8016aba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8016b2a:	a803      	add	r0, sp, #12
 8016b2c:	4606      	mov	r6, r0
 8016b2e:	e7ce      	b.n	8016ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016b30:	a803      	add	r0, sp, #12
 8016b32:	e7cc      	b.n	8016ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016b34:	ad03      	add	r5, sp, #12
 8016b36:	e7d8      	b.n	8016aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8016b38:	ab03      	add	r3, sp, #12
 8016b3a:	461d      	mov	r5, r3
 8016b3c:	e7e0      	b.n	8016b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016b3e:	ab03      	add	r3, sp, #12
 8016b40:	e7de      	b.n	8016b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016b42:	b292      	uxth	r2, r2
 8016b44:	b2a4      	uxth	r4, r4
 8016b46:	fb02 fe04 	mul.w	lr, r2, r4
 8016b4a:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8016b4e:	0112      	lsls	r2, r2, #4
 8016b50:	b2a4      	uxth	r4, r4
 8016b52:	f890 c002 	ldrb.w	ip, [r0, #2]
 8016b56:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016b5a:	7840      	ldrb	r0, [r0, #1]
 8016b5c:	7876      	ldrb	r6, [r6, #1]
 8016b5e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8016b62:	eba2 020e 	sub.w	r2, r2, lr
 8016b66:	b292      	uxth	r2, r2
 8016b68:	1b3f      	subs	r7, r7, r4
 8016b6a:	b2bf      	uxth	r7, r7
 8016b6c:	fb02 fc0c 	mul.w	ip, r2, ip
 8016b70:	fb07 cc0b 	mla	ip, r7, fp, ip
 8016b74:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016b78:	fb04 cc0b 	mla	ip, r4, fp, ip
 8016b7c:	f893 b002 	ldrb.w	fp, [r3, #2]
 8016b80:	785b      	ldrb	r3, [r3, #1]
 8016b82:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016b86:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016b8a:	fb02 fc0a 	mul.w	ip, r2, sl
 8016b8e:	4342      	muls	r2, r0
 8016b90:	7868      	ldrb	r0, [r5, #1]
 8016b92:	fb07 cc09 	mla	ip, r7, r9, ip
 8016b96:	fb07 2206 	mla	r2, r7, r6, r2
 8016b9a:	fb04 cc08 	mla	ip, r4, r8, ip
 8016b9e:	fb04 2400 	mla	r4, r4, r0, r2
 8016ba2:	fb0e cc01 	mla	ip, lr, r1, ip
 8016ba6:	fb0e 4e03 	mla	lr, lr, r3, r4
 8016baa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016bae:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016bb2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016bb6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016bba:	9b01      	ldr	r3, [sp, #4]
 8016bbc:	ea4c 0c0e 	orr.w	ip, ip, lr
 8016bc0:	f8a3 c000 	strh.w	ip, [r3]
 8016bc4:	b005      	add	sp, #20
 8016bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bca:	bf00      	nop
 8016bcc:	080214b7 	.word	0x080214b7
 8016bd0:	080219e6 	.word	0x080219e6
 8016bd4:	08021484 	.word	0x08021484

08016bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bdc:	ed2d 8b08 	vpush	{d8-d11}
 8016be0:	b08f      	sub	sp, #60	; 0x3c
 8016be2:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8016be6:	920c      	str	r2, [sp, #48]	; 0x30
 8016be8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016bea:	910a      	str	r1, [sp, #40]	; 0x28
 8016bec:	9306      	str	r3, [sp, #24]
 8016bee:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8016bf2:	900d      	str	r0, [sp, #52]	; 0x34
 8016bf4:	6850      	ldr	r0, [r2, #4]
 8016bf6:	6812      	ldr	r2, [r2, #0]
 8016bf8:	fb00 1303 	mla	r3, r0, r3, r1
 8016bfc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016c00:	9307      	str	r3, [sp, #28]
 8016c02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c04:	681b      	ldr	r3, [r3, #0]
 8016c06:	9308      	str	r3, [sp, #32]
 8016c08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c0a:	685c      	ldr	r4, [r3, #4]
 8016c0c:	eeb0 aa40 	vmov.f32	s20, s0
 8016c10:	eef0 9a60 	vmov.f32	s19, s1
 8016c14:	eeb0 9a41 	vmov.f32	s18, s2
 8016c18:	eeb0 8a62 	vmov.f32	s16, s5
 8016c1c:	eef0 8a43 	vmov.f32	s17, s6
 8016c20:	eef0 ba44 	vmov.f32	s23, s8
 8016c24:	eeb0 ba64 	vmov.f32	s22, s9
 8016c28:	eef0 aa45 	vmov.f32	s21, s10
 8016c2c:	3404      	adds	r4, #4
 8016c2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c30:	2b00      	cmp	r3, #0
 8016c32:	dc03      	bgt.n	8016c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016c34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c36:	2b00      	cmp	r3, #0
 8016c38:	f340 81d6 	ble.w	8016fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016c3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016c42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016c46:	1e48      	subs	r0, r1, #1
 8016c48:	1e56      	subs	r6, r2, #1
 8016c4a:	9b06      	ldr	r3, [sp, #24]
 8016c4c:	2b00      	cmp	r3, #0
 8016c4e:	f340 80b7 	ble.w	8016dc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016c52:	ea5f 472b 	movs.w	r7, fp, asr #16
 8016c56:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016c5a:	d406      	bmi.n	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016c5c:	4287      	cmp	r7, r0
 8016c5e:	da04      	bge.n	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016c60:	2b00      	cmp	r3, #0
 8016c62:	db02      	blt.n	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016c64:	42b3      	cmp	r3, r6
 8016c66:	f2c0 80ac 	blt.w	8016dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016c6a:	3701      	adds	r7, #1
 8016c6c:	f100 809d 	bmi.w	8016daa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016c70:	42b9      	cmp	r1, r7
 8016c72:	f2c0 809a 	blt.w	8016daa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016c76:	3301      	adds	r3, #1
 8016c78:	f100 8097 	bmi.w	8016daa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016c7c:	429a      	cmp	r2, r3
 8016c7e:	f2c0 8094 	blt.w	8016daa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016c82:	9b06      	ldr	r3, [sp, #24]
 8016c84:	930b      	str	r3, [sp, #44]	; 0x2c
 8016c86:	9b07      	ldr	r3, [sp, #28]
 8016c88:	9309      	str	r3, [sp, #36]	; 0x24
 8016c8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016c8c:	2b00      	cmp	r3, #0
 8016c8e:	f340 80b5 	ble.w	8016dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016c92:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016c94:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016c96:	68c7      	ldr	r7, [r0, #12]
 8016c98:	6892      	ldr	r2, [r2, #8]
 8016c9a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8016c9e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8016ca2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016ca6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016caa:	f100 80fb 	bmi.w	8016ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016cae:	f102 3cff 	add.w	ip, r2, #4294967295
 8016cb2:	4560      	cmp	r0, ip
 8016cb4:	f280 80f6 	bge.w	8016ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016cb8:	2e00      	cmp	r6, #0
 8016cba:	f2c0 80f3 	blt.w	8016ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016cbe:	f107 3cff 	add.w	ip, r7, #4294967295
 8016cc2:	4566      	cmp	r6, ip
 8016cc4:	f280 80ee 	bge.w	8016ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016cc8:	b212      	sxth	r2, r2
 8016cca:	fb06 0002 	mla	r0, r6, r2, r0
 8016cce:	9e08      	ldr	r6, [sp, #32]
 8016cd0:	1837      	adds	r7, r6, r0
 8016cd2:	5c30      	ldrb	r0, [r6, r0]
 8016cd4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8016cd8:	eb04 0c08 	add.w	ip, r4, r8
 8016cdc:	2b00      	cmp	r3, #0
 8016cde:	f000 80d3 	beq.w	8016e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016ce2:	787e      	ldrb	r6, [r7, #1]
 8016ce4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016ce8:	4426      	add	r6, r4
 8016cea:	2900      	cmp	r1, #0
 8016cec:	f000 80d4 	beq.w	8016e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8016cf0:	18b8      	adds	r0, r7, r2
 8016cf2:	5cba      	ldrb	r2, [r7, r2]
 8016cf4:	7840      	ldrb	r0, [r0, #1]
 8016cf6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016cfa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016cfe:	4422      	add	r2, r4
 8016d00:	4420      	add	r0, r4
 8016d02:	b29b      	uxth	r3, r3
 8016d04:	b289      	uxth	r1, r1
 8016d06:	fb03 f901 	mul.w	r9, r3, r1
 8016d0a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016d0e:	011b      	lsls	r3, r3, #4
 8016d10:	b289      	uxth	r1, r1
 8016d12:	78b7      	ldrb	r7, [r6, #2]
 8016d14:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016d18:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016d1c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016d20:	eba3 0309 	sub.w	r3, r3, r9
 8016d24:	b29b      	uxth	r3, r3
 8016d26:	ebae 0e01 	sub.w	lr, lr, r1
 8016d2a:	fa1f fe8e 	uxth.w	lr, lr
 8016d2e:	435f      	muls	r7, r3
 8016d30:	fb0e 770a 	mla	r7, lr, sl, r7
 8016d34:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016d38:	fb01 770a 	mla	r7, r1, sl, r7
 8016d3c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016d40:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016d44:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016d48:	f896 8000 	ldrb.w	r8, [r6]
 8016d4c:	7876      	ldrb	r6, [r6, #1]
 8016d4e:	fb03 f808 	mul.w	r8, r3, r8
 8016d52:	fb0e 8807 	mla	r8, lr, r7, r8
 8016d56:	7817      	ldrb	r7, [r2, #0]
 8016d58:	fb01 8807 	mla	r8, r1, r7, r8
 8016d5c:	7807      	ldrb	r7, [r0, #0]
 8016d5e:	fb09 8707 	mla	r7, r9, r7, r8
 8016d62:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016d66:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016d6a:	ea47 070a 	orr.w	r7, r7, sl
 8016d6e:	4373      	muls	r3, r6
 8016d70:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016d74:	fb0e 330c 	mla	r3, lr, ip, r3
 8016d78:	fb01 310a 	mla	r1, r1, sl, r3
 8016d7c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016d80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d82:	fb09 1a0a 	mla	sl, r9, sl, r1
 8016d86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d8a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d8e:	ea47 070a 	orr.w	r7, r7, sl
 8016d92:	801f      	strh	r7, [r3, #0]
 8016d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d96:	3302      	adds	r3, #2
 8016d98:	9309      	str	r3, [sp, #36]	; 0x24
 8016d9a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016d9c:	449b      	add	fp, r3
 8016d9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016da0:	441d      	add	r5, r3
 8016da2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016da4:	3b01      	subs	r3, #1
 8016da6:	930b      	str	r3, [sp, #44]	; 0x2c
 8016da8:	e76f      	b.n	8016c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016daa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016dac:	449b      	add	fp, r3
 8016dae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016db0:	441d      	add	r5, r3
 8016db2:	9b06      	ldr	r3, [sp, #24]
 8016db4:	3b01      	subs	r3, #1
 8016db6:	9306      	str	r3, [sp, #24]
 8016db8:	9b07      	ldr	r3, [sp, #28]
 8016dba:	3302      	adds	r3, #2
 8016dbc:	9307      	str	r3, [sp, #28]
 8016dbe:	e744      	b.n	8016c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016dc0:	d023      	beq.n	8016e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8016dc2:	9b06      	ldr	r3, [sp, #24]
 8016dc4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8016dc6:	3b01      	subs	r3, #1
 8016dc8:	fb00 b003 	mla	r0, r0, r3, fp
 8016dcc:	1400      	asrs	r0, r0, #16
 8016dce:	f53f af58 	bmi.w	8016c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016dd2:	3901      	subs	r1, #1
 8016dd4:	4288      	cmp	r0, r1
 8016dd6:	f6bf af54 	bge.w	8016c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016dda:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016ddc:	fb01 5303 	mla	r3, r1, r3, r5
 8016de0:	141b      	asrs	r3, r3, #16
 8016de2:	f53f af4e 	bmi.w	8016c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016de6:	3a01      	subs	r2, #1
 8016de8:	4293      	cmp	r3, r2
 8016dea:	f6bf af4a 	bge.w	8016c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016dee:	9b06      	ldr	r3, [sp, #24]
 8016df0:	9309      	str	r3, [sp, #36]	; 0x24
 8016df2:	9b07      	ldr	r3, [sp, #28]
 8016df4:	930b      	str	r3, [sp, #44]	; 0x2c
 8016df6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016df8:	2b00      	cmp	r3, #0
 8016dfa:	dc70      	bgt.n	8016ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8016dfc:	9b06      	ldr	r3, [sp, #24]
 8016dfe:	9a07      	ldr	r2, [sp, #28]
 8016e00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016e04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016e08:	9307      	str	r3, [sp, #28]
 8016e0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e0c:	2b00      	cmp	r3, #0
 8016e0e:	f340 80eb 	ble.w	8016fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016e12:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016e16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016e1a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016e1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e20:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016e24:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016e28:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016e2c:	eef0 6a48 	vmov.f32	s13, s16
 8016e30:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016e34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e38:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016e3c:	ee16 ba90 	vmov	fp, s13
 8016e40:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016e44:	eef0 6a68 	vmov.f32	s13, s17
 8016e48:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016e4c:	ee18 2a10 	vmov	r2, s16
 8016e50:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016e54:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e58:	ee18 2a90 	vmov	r2, s17
 8016e5c:	9323      	str	r3, [sp, #140]	; 0x8c
 8016e5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e60:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e64:	9324      	str	r3, [sp, #144]	; 0x90
 8016e66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016e6a:	3b01      	subs	r3, #1
 8016e6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e70:	930a      	str	r3, [sp, #40]	; 0x28
 8016e72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e74:	bf08      	it	eq
 8016e76:	4613      	moveq	r3, r2
 8016e78:	ee16 5a90 	vmov	r5, s13
 8016e7c:	9306      	str	r3, [sp, #24]
 8016e7e:	eef0 8a67 	vmov.f32	s17, s15
 8016e82:	eeb0 8a47 	vmov.f32	s16, s14
 8016e86:	e6d2      	b.n	8016c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8016e88:	b149      	cbz	r1, 8016e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016e8a:	5cba      	ldrb	r2, [r7, r2]
 8016e8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016e90:	4422      	add	r2, r4
 8016e92:	4660      	mov	r0, ip
 8016e94:	4666      	mov	r6, ip
 8016e96:	e734      	b.n	8016d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016e98:	4660      	mov	r0, ip
 8016e9a:	4662      	mov	r2, ip
 8016e9c:	e731      	b.n	8016d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016e9e:	4660      	mov	r0, ip
 8016ea0:	4662      	mov	r2, ip
 8016ea2:	e7f7      	b.n	8016e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016ea4:	f110 0c01 	adds.w	ip, r0, #1
 8016ea8:	f53f af74 	bmi.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016eac:	4562      	cmp	r2, ip
 8016eae:	f6ff af71 	blt.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016eb2:	f116 0c01 	adds.w	ip, r6, #1
 8016eb6:	f53f af6d 	bmi.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016eba:	4567      	cmp	r7, ip
 8016ebc:	f6ff af6a 	blt.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016ec0:	b23f      	sxth	r7, r7
 8016ec2:	b212      	sxth	r2, r2
 8016ec4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016ec8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016ecc:	9200      	str	r2, [sp, #0]
 8016ece:	9701      	str	r7, [sp, #4]
 8016ed0:	4623      	mov	r3, r4
 8016ed2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016ed6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016ed8:	f7ff fdc2 	bl	8016a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016edc:	e75a      	b.n	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016ede:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016ee0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016ee4:	ea4f 462b 	mov.w	r6, fp, asr #16
 8016ee8:	1428      	asrs	r0, r5, #16
 8016eea:	fb02 6000 	mla	r0, r2, r0, r6
 8016eee:	9e08      	ldr	r6, [sp, #32]
 8016ef0:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016ef4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016ef8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016efc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016f00:	1837      	adds	r7, r6, r0
 8016f02:	eb04 0c08 	add.w	ip, r4, r8
 8016f06:	2b00      	cmp	r3, #0
 8016f08:	d060      	beq.n	8016fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8016f0a:	787e      	ldrb	r6, [r7, #1]
 8016f0c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016f10:	4426      	add	r6, r4
 8016f12:	2900      	cmp	r1, #0
 8016f14:	d062      	beq.n	8016fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8016f16:	18b8      	adds	r0, r7, r2
 8016f18:	5cba      	ldrb	r2, [r7, r2]
 8016f1a:	7840      	ldrb	r0, [r0, #1]
 8016f1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f20:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016f24:	4422      	add	r2, r4
 8016f26:	4420      	add	r0, r4
 8016f28:	b29b      	uxth	r3, r3
 8016f2a:	b289      	uxth	r1, r1
 8016f2c:	fb03 f901 	mul.w	r9, r3, r1
 8016f30:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016f34:	011b      	lsls	r3, r3, #4
 8016f36:	b289      	uxth	r1, r1
 8016f38:	78b7      	ldrb	r7, [r6, #2]
 8016f3a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016f3e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016f42:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016f46:	eba3 0309 	sub.w	r3, r3, r9
 8016f4a:	b29b      	uxth	r3, r3
 8016f4c:	ebae 0e01 	sub.w	lr, lr, r1
 8016f50:	fa1f fe8e 	uxth.w	lr, lr
 8016f54:	435f      	muls	r7, r3
 8016f56:	fb0e 770a 	mla	r7, lr, sl, r7
 8016f5a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016f5e:	fb01 770a 	mla	r7, r1, sl, r7
 8016f62:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016f66:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016f6a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016f6e:	f896 8000 	ldrb.w	r8, [r6]
 8016f72:	7876      	ldrb	r6, [r6, #1]
 8016f74:	fb03 f808 	mul.w	r8, r3, r8
 8016f78:	fb0e 8807 	mla	r8, lr, r7, r8
 8016f7c:	7817      	ldrb	r7, [r2, #0]
 8016f7e:	fb01 8807 	mla	r8, r1, r7, r8
 8016f82:	7807      	ldrb	r7, [r0, #0]
 8016f84:	fb09 8707 	mla	r7, r9, r7, r8
 8016f88:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016f8c:	4373      	muls	r3, r6
 8016f8e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016f92:	7856      	ldrb	r6, [r2, #1]
 8016f94:	ea47 070a 	orr.w	r7, r7, sl
 8016f98:	fb0e 330c 	mla	r3, lr, ip, r3
 8016f9c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016fa0:	fb01 3306 	mla	r3, r1, r6, r3
 8016fa4:	fb09 3a0a 	mla	sl, r9, sl, r3
 8016fa8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016fac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016fae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016fb2:	ea47 070a 	orr.w	r7, r7, sl
 8016fb6:	f823 7b02 	strh.w	r7, [r3], #2
 8016fba:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fbc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016fbe:	449b      	add	fp, r3
 8016fc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016fc2:	441d      	add	r5, r3
 8016fc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016fc6:	3b01      	subs	r3, #1
 8016fc8:	9309      	str	r3, [sp, #36]	; 0x24
 8016fca:	e714      	b.n	8016df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8016fcc:	b149      	cbz	r1, 8016fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8016fce:	5cba      	ldrb	r2, [r7, r2]
 8016fd0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016fd4:	4422      	add	r2, r4
 8016fd6:	4660      	mov	r0, ip
 8016fd8:	4666      	mov	r6, ip
 8016fda:	e7a5      	b.n	8016f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016fdc:	4660      	mov	r0, ip
 8016fde:	4662      	mov	r2, ip
 8016fe0:	e7a2      	b.n	8016f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016fe2:	4660      	mov	r0, ip
 8016fe4:	4662      	mov	r2, ip
 8016fe6:	e7f7      	b.n	8016fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8016fe8:	b00f      	add	sp, #60	; 0x3c
 8016fea:	ecbd 8b08 	vpop	{d8-d11}
 8016fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016ff4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016ff4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ff8:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8016ffc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8017000:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8017004:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8017008:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 801700c:	fb04 560c 	mla	r6, r4, ip, r5
 8017010:	2c00      	cmp	r4, #0
 8017012:	eb02 0e06 	add.w	lr, r2, r6
 8017016:	db3d      	blt.n	8017094 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8017018:	45a0      	cmp	r8, r4
 801701a:	dd3b      	ble.n	8017094 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801701c:	2d00      	cmp	r5, #0
 801701e:	db37      	blt.n	8017090 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017020:	45ac      	cmp	ip, r5
 8017022:	dd35      	ble.n	8017090 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017024:	5d92      	ldrb	r2, [r2, r6]
 8017026:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801702a:	1c6e      	adds	r6, r5, #1
 801702c:	d435      	bmi.n	801709a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801702e:	45b4      	cmp	ip, r6
 8017030:	dd33      	ble.n	801709a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8017032:	b3a0      	cbz	r0, 801709e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8017034:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8017038:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801703c:	3401      	adds	r4, #1
 801703e:	d432      	bmi.n	80170a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017040:	45a0      	cmp	r8, r4
 8017042:	dd30      	ble.n	80170a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017044:	b397      	cbz	r7, 80170ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8017046:	2d00      	cmp	r5, #0
 8017048:	db2b      	blt.n	80170a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801704a:	45ac      	cmp	ip, r5
 801704c:	dd29      	ble.n	80170a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801704e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8017052:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017056:	3501      	adds	r5, #1
 8017058:	d42b      	bmi.n	80170b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801705a:	45ac      	cmp	ip, r5
 801705c:	dd29      	ble.n	80170b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801705e:	b350      	cbz	r0, 80170b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8017060:	44f4      	add	ip, lr
 8017062:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017066:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801706a:	280f      	cmp	r0, #15
 801706c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017070:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017074:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017078:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801707c:	d801      	bhi.n	8017082 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801707e:	2f0f      	cmp	r7, #15
 8017080:	d91b      	bls.n	80170ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8017082:	4b8d      	ldr	r3, [pc, #564]	; (80172b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8017084:	4a8d      	ldr	r2, [pc, #564]	; (80172bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8017086:	488e      	ldr	r0, [pc, #568]	; (80172c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8017088:	f240 11f9 	movw	r1, #505	; 0x1f9
 801708c:	f006 fa92 	bl	801d5b4 <__assert_func>
 8017090:	2200      	movs	r2, #0
 8017092:	e7ca      	b.n	801702a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8017094:	2600      	movs	r6, #0
 8017096:	4632      	mov	r2, r6
 8017098:	e7d0      	b.n	801703c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801709a:	2600      	movs	r6, #0
 801709c:	e7ce      	b.n	801703c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801709e:	4606      	mov	r6, r0
 80170a0:	e7cc      	b.n	801703c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80170a2:	2400      	movs	r4, #0
 80170a4:	e7d7      	b.n	8017056 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 80170a6:	2300      	movs	r3, #0
 80170a8:	461c      	mov	r4, r3
 80170aa:	e7de      	b.n	801706a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80170ac:	463b      	mov	r3, r7
 80170ae:	463c      	mov	r4, r7
 80170b0:	e7db      	b.n	801706a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80170b2:	2300      	movs	r3, #0
 80170b4:	e7d9      	b.n	801706a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80170b6:	4603      	mov	r3, r0
 80170b8:	e7d7      	b.n	801706a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80170ba:	b280      	uxth	r0, r0
 80170bc:	b2bf      	uxth	r7, r7
 80170be:	fb07 fe00 	mul.w	lr, r7, r0
 80170c2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80170c6:	0100      	lsls	r0, r0, #4
 80170c8:	eba0 0c0e 	sub.w	ip, r0, lr
 80170cc:	b2bf      	uxth	r7, r7
 80170ce:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80170d2:	fa1f fc8c 	uxth.w	ip, ip
 80170d6:	1bed      	subs	r5, r5, r7
 80170d8:	b2ad      	uxth	r5, r5
 80170da:	fb0a f00c 	mul.w	r0, sl, ip
 80170de:	fb0b 0005 	mla	r0, fp, r5, r0
 80170e2:	fb07 0009 	mla	r0, r7, r9, r0
 80170e6:	fb0e 0008 	mla	r0, lr, r8, r0
 80170ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80170ee:	9001      	str	r0, [sp, #4]
 80170f0:	2800      	cmp	r0, #0
 80170f2:	f000 80de 	beq.w	80172b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80170f6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80170fa:	d018      	beq.n	801712e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80170fc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017100:	fb0b f000 	mul.w	r0, fp, r0
 8017104:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017108:	fb0b fb02 	mul.w	fp, fp, r2
 801710c:	0a02      	lsrs	r2, r0, #8
 801710e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017112:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017116:	4402      	add	r2, r0
 8017118:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801711c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017120:	0a12      	lsrs	r2, r2, #8
 8017122:	0a00      	lsrs	r0, r0, #8
 8017124:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017128:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801712c:	4302      	orrs	r2, r0
 801712e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017132:	d01a      	beq.n	801716a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8017134:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8017138:	fb0a f000 	mul.w	r0, sl, r0
 801713c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017140:	fb0a fa06 	mul.w	sl, sl, r6
 8017144:	0a06      	lsrs	r6, r0, #8
 8017146:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801714a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801714e:	4406      	add	r6, r0
 8017150:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017154:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8017158:	0a36      	lsrs	r6, r6, #8
 801715a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801715e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017162:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017166:	ea46 060a 	orr.w	r6, r6, sl
 801716a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801716e:	d01b      	beq.n	80171a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8017170:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017174:	fb09 fa0a 	mul.w	sl, r9, sl
 8017178:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801717c:	fb09 f004 	mul.w	r0, r9, r4
 8017180:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017184:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017188:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801718c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8017190:	4454      	add	r4, sl
 8017192:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8017196:	0a24      	lsrs	r4, r4, #8
 8017198:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801719c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80171a0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80171a4:	ea44 0409 	orr.w	r4, r4, r9
 80171a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80171ac:	d01b      	beq.n	80171e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 80171ae:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80171b2:	fb08 f909 	mul.w	r9, r8, r9
 80171b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171ba:	fb08 f003 	mul.w	r0, r8, r3
 80171be:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80171c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80171c6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80171ca:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80171ce:	444b      	add	r3, r9
 80171d0:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80171d4:	0a1b      	lsrs	r3, r3, #8
 80171d6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80171da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80171de:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80171e2:	ea43 0308 	orr.w	r3, r3, r8
 80171e6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80171ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80171ee:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80171f2:	fb0c f808 	mul.w	r8, ip, r8
 80171f6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80171fa:	fb0c f606 	mul.w	r6, ip, r6
 80171fe:	fb05 8909 	mla	r9, r5, r9, r8
 8017202:	fb05 6502 	mla	r5, r5, r2, r6
 8017206:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801720a:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801720e:	9a01      	ldr	r2, [sp, #4]
 8017210:	8808      	ldrh	r0, [r1, #0]
 8017212:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017216:	fb07 9908 	mla	r9, r7, r8, r9
 801721a:	fb07 5704 	mla	r7, r7, r4, r5
 801721e:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8017222:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017226:	b2b6      	uxth	r6, r6
 8017228:	fb0e 9808 	mla	r8, lr, r8, r9
 801722c:	fb0e 7e03 	mla	lr, lr, r3, r7
 8017230:	4372      	muls	r2, r6
 8017232:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017236:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801723a:	1c53      	adds	r3, r2, #1
 801723c:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8017240:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017244:	ea48 0e0e 	orr.w	lr, r8, lr
 8017248:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801724c:	1205      	asrs	r5, r0, #8
 801724e:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8017252:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017256:	b2db      	uxtb	r3, r3
 8017258:	fb12 f206 	smulbb	r2, r2, r6
 801725c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017260:	fb05 2503 	mla	r5, r5, r3, r2
 8017264:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8017268:	10c2      	asrs	r2, r0, #3
 801726a:	fa5f fe8e 	uxtb.w	lr, lr
 801726e:	00c0      	lsls	r0, r0, #3
 8017270:	fb14 f406 	smulbb	r4, r4, r6
 8017274:	b2c0      	uxtb	r0, r0
 8017276:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801727a:	fb1e fe06 	smulbb	lr, lr, r6
 801727e:	fb02 4203 	mla	r2, r2, r3, r4
 8017282:	b2ad      	uxth	r5, r5
 8017284:	fb00 e303 	mla	r3, r0, r3, lr
 8017288:	b298      	uxth	r0, r3
 801728a:	b294      	uxth	r4, r2
 801728c:	1c6b      	adds	r3, r5, #1
 801728e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017292:	1c62      	adds	r2, r4, #1
 8017294:	1c43      	adds	r3, r0, #1
 8017296:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801729a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801729e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80172a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80172a6:	0952      	lsrs	r2, r2, #5
 80172a8:	432b      	orrs	r3, r5
 80172aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172ae:	4313      	orrs	r3, r2
 80172b0:	800b      	strh	r3, [r1, #0]
 80172b2:	b003      	add	sp, #12
 80172b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172b8:	080214b7 	.word	0x080214b7
 80172bc:	080219e6 	.word	0x080219e6
 80172c0:	08021484 	.word	0x08021484

080172c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80172c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172c8:	ed2d 8b08 	vpush	{d8-d11}
 80172cc:	b09f      	sub	sp, #124	; 0x7c
 80172ce:	eeb0 aa40 	vmov.f32	s20, s0
 80172d2:	921b      	str	r2, [sp, #108]	; 0x6c
 80172d4:	9309      	str	r3, [sp, #36]	; 0x24
 80172d6:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80172d8:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80172dc:	931c      	str	r3, [sp, #112]	; 0x70
 80172de:	9119      	str	r1, [sp, #100]	; 0x64
 80172e0:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80172e4:	901d      	str	r0, [sp, #116]	; 0x74
 80172e6:	6850      	ldr	r0, [r2, #4]
 80172e8:	6812      	ldr	r2, [r2, #0]
 80172ea:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80172ec:	fb00 1303 	mla	r3, r0, r3, r1
 80172f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80172f4:	930c      	str	r3, [sp, #48]	; 0x30
 80172f6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80172f8:	681b      	ldr	r3, [r3, #0]
 80172fa:	9312      	str	r3, [sp, #72]	; 0x48
 80172fc:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80172fe:	685e      	ldr	r6, [r3, #4]
 8017300:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017304:	930d      	str	r3, [sp, #52]	; 0x34
 8017306:	eef0 9a60 	vmov.f32	s19, s1
 801730a:	eeb0 9a41 	vmov.f32	s18, s2
 801730e:	eeb0 8a62 	vmov.f32	s16, s5
 8017312:	eef0 8a43 	vmov.f32	s17, s6
 8017316:	eef0 ba44 	vmov.f32	s23, s8
 801731a:	eeb0 ba64 	vmov.f32	s22, s9
 801731e:	eef0 aa45 	vmov.f32	s21, s10
 8017322:	3604      	adds	r6, #4
 8017324:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017326:	2b00      	cmp	r3, #0
 8017328:	dc03      	bgt.n	8017332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801732a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801732c:	2b00      	cmp	r3, #0
 801732e:	f340 8388 	ble.w	8017a42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8017332:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017334:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017338:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801733c:	1e48      	subs	r0, r1, #1
 801733e:	1e57      	subs	r7, r2, #1
 8017340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017342:	2b00      	cmp	r3, #0
 8017344:	f340 8195 	ble.w	8017672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8017348:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801734a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801734e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017352:	d406      	bmi.n	8017362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017354:	4584      	cmp	ip, r0
 8017356:	da04      	bge.n	8017362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017358:	2b00      	cmp	r3, #0
 801735a:	db02      	blt.n	8017362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801735c:	42bb      	cmp	r3, r7
 801735e:	f2c0 8189 	blt.w	8017674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8017362:	f11c 0c01 	adds.w	ip, ip, #1
 8017366:	f100 8177 	bmi.w	8017658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801736a:	4561      	cmp	r1, ip
 801736c:	f2c0 8174 	blt.w	8017658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8017370:	3301      	adds	r3, #1
 8017372:	f100 8171 	bmi.w	8017658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8017376:	429a      	cmp	r2, r3
 8017378:	f2c0 816e 	blt.w	8017658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801737c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801737e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017380:	931a      	str	r3, [sp, #104]	; 0x68
 8017382:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017384:	2b00      	cmp	r3, #0
 8017386:	f340 8193 	ble.w	80176b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801738a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801738c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017390:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017392:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017396:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017398:	141b      	asrs	r3, r3, #16
 801739a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801739e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80173a2:	f100 81d6 	bmi.w	8017752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80173a6:	f100 38ff 	add.w	r8, r0, #4294967295
 80173aa:	4543      	cmp	r3, r8
 80173ac:	f280 81d1 	bge.w	8017752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80173b0:	f1bc 0f00 	cmp.w	ip, #0
 80173b4:	f2c0 81cd 	blt.w	8017752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80173b8:	f10e 38ff 	add.w	r8, lr, #4294967295
 80173bc:	45c4      	cmp	ip, r8
 80173be:	f280 81c8 	bge.w	8017752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80173c2:	b200      	sxth	r0, r0
 80173c4:	fb0c 3300 	mla	r3, ip, r0, r3
 80173c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80173ca:	eb04 0803 	add.w	r8, r4, r3
 80173ce:	5ce3      	ldrb	r3, [r4, r3]
 80173d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80173d4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80173d8:	2a00      	cmp	r2, #0
 80173da:	f000 81af 	beq.w	801773c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80173de:	f898 c001 	ldrb.w	ip, [r8, #1]
 80173e2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80173e6:	940e      	str	r4, [sp, #56]	; 0x38
 80173e8:	0e24      	lsrs	r4, r4, #24
 80173ea:	9415      	str	r4, [sp, #84]	; 0x54
 80173ec:	b179      	cbz	r1, 801740e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80173ee:	eb08 0c00 	add.w	ip, r8, r0
 80173f2:	f818 0000 	ldrb.w	r0, [r8, r0]
 80173f6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80173fa:	900a      	str	r0, [sp, #40]	; 0x28
 80173fc:	0e00      	lsrs	r0, r0, #24
 80173fe:	9013      	str	r0, [sp, #76]	; 0x4c
 8017400:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017404:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017408:	900f      	str	r0, [sp, #60]	; 0x3c
 801740a:	0e00      	lsrs	r0, r0, #24
 801740c:	9016      	str	r0, [sp, #88]	; 0x58
 801740e:	b292      	uxth	r2, r2
 8017410:	b289      	uxth	r1, r1
 8017412:	fb02 f901 	mul.w	r9, r2, r1
 8017416:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801741a:	0112      	lsls	r2, r2, #4
 801741c:	eba2 0809 	sub.w	r8, r2, r9
 8017420:	b289      	uxth	r1, r1
 8017422:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017426:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017428:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801742a:	fa1f f888 	uxth.w	r8, r8
 801742e:	1a52      	subs	r2, r2, r1
 8017430:	b292      	uxth	r2, r2
 8017432:	fb08 f000 	mul.w	r0, r8, r0
 8017436:	fb02 000e 	mla	r0, r2, lr, r0
 801743a:	fb01 0004 	mla	r0, r1, r4, r0
 801743e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017440:	fb09 0004 	mla	r0, r9, r4, r0
 8017444:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017448:	2800      	cmp	r0, #0
 801744a:	f000 80fa 	beq.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801744e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017452:	d01b      	beq.n	801748c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017454:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017458:	fb0e fa0a 	mul.w	sl, lr, sl
 801745c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017460:	fb0e fe03 	mul.w	lr, lr, r3
 8017464:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017468:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801746c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017470:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017474:	4453      	add	r3, sl
 8017476:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801747a:	0a1b      	lsrs	r3, r3, #8
 801747c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017480:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017484:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017488:	ea43 030c 	orr.w	r3, r3, ip
 801748c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801748e:	2cff      	cmp	r4, #255	; 0xff
 8017490:	d021      	beq.n	80174d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017492:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017494:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017498:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801749a:	fb04 fb0b 	mul.w	fp, r4, fp
 801749e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80174a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80174a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80174a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80174aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80174ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80174b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80174ba:	44de      	add	lr, fp
 80174bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80174c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80174d0:	ea4e 040a 	orr.w	r4, lr, sl
 80174d4:	940e      	str	r4, [sp, #56]	; 0x38
 80174d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80174d8:	2cff      	cmp	r4, #255	; 0xff
 80174da:	d021      	beq.n	8017520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80174dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80174de:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80174e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80174e4:	fb04 fb0b 	mul.w	fp, r4, fp
 80174e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80174ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80174ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80174f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80174f4:	fb04 fa0a 	mul.w	sl, r4, sl
 80174f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017500:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017504:	44de      	add	lr, fp
 8017506:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801750a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801750e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017512:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017516:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801751a:	ea4e 040a 	orr.w	r4, lr, sl
 801751e:	940a      	str	r4, [sp, #40]	; 0x28
 8017520:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017522:	2cff      	cmp	r4, #255	; 0xff
 8017524:	d021      	beq.n	801756a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017526:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017528:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801752c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801752e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017532:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017534:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017538:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801753a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801753e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017542:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017546:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801754a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801754e:	44de      	add	lr, fp
 8017550:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017554:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017558:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801755c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017560:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017564:	ea4e 040a 	orr.w	r4, lr, sl
 8017568:	940f      	str	r4, [sp, #60]	; 0x3c
 801756a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801756c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017570:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017572:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017576:	fb08 fc0c 	mul.w	ip, r8, ip
 801757a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801757e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017582:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017584:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017588:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801758c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801758e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017592:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017596:	fb08 f80e 	mul.w	r8, r8, lr
 801759a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801759e:	fb02 8303 	mla	r3, r2, r3, r8
 80175a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80175a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80175a6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80175aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80175ac:	fb01 330a 	mla	r3, r1, sl, r3
 80175b0:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80175b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80175b6:	fb09 3901 	mla	r9, r9, r1, r3
 80175ba:	4342      	muls	r2, r0
 80175bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80175c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80175c4:	883b      	ldrh	r3, [r7, #0]
 80175c6:	1c50      	adds	r0, r2, #1
 80175c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80175cc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80175d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80175d4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80175d8:	1219      	asrs	r1, r3, #8
 80175da:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80175de:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80175e2:	b2c0      	uxtb	r0, r0
 80175e4:	fb12 f204 	smulbb	r2, r2, r4
 80175e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80175ec:	fb01 2100 	mla	r1, r1, r0, r2
 80175f0:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80175f4:	10da      	asrs	r2, r3, #3
 80175f6:	fa5f fc8c 	uxtb.w	ip, ip
 80175fa:	00db      	lsls	r3, r3, #3
 80175fc:	fb1c fc04 	smulbb	ip, ip, r4
 8017600:	b2db      	uxtb	r3, r3
 8017602:	b289      	uxth	r1, r1
 8017604:	fb03 c300 	mla	r3, r3, r0, ip
 8017608:	fa1f fc83 	uxth.w	ip, r3
 801760c:	1c4b      	adds	r3, r1, #1
 801760e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017612:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017616:	fb1e fe04 	smulbb	lr, lr, r4
 801761a:	f10c 0301 	add.w	r3, ip, #1
 801761e:	fb02 e200 	mla	r2, r2, r0, lr
 8017622:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017626:	b292      	uxth	r2, r2
 8017628:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801762c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017630:	430b      	orrs	r3, r1
 8017632:	1c51      	adds	r1, r2, #1
 8017634:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017638:	0952      	lsrs	r2, r2, #5
 801763a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801763e:	4313      	orrs	r3, r2
 8017640:	803b      	strh	r3, [r7, #0]
 8017642:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8017644:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017646:	441a      	add	r2, r3
 8017648:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801764a:	9231      	str	r2, [sp, #196]	; 0xc4
 801764c:	441d      	add	r5, r3
 801764e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017650:	3b01      	subs	r3, #1
 8017652:	3702      	adds	r7, #2
 8017654:	931a      	str	r3, [sp, #104]	; 0x68
 8017656:	e694      	b.n	8017382 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017658:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801765a:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801765c:	441c      	add	r4, r3
 801765e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017660:	9431      	str	r4, [sp, #196]	; 0xc4
 8017662:	441d      	add	r5, r3
 8017664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017666:	3b01      	subs	r3, #1
 8017668:	9309      	str	r3, [sp, #36]	; 0x24
 801766a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801766c:	3302      	adds	r3, #2
 801766e:	930c      	str	r3, [sp, #48]	; 0x30
 8017670:	e666      	b.n	8017340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017672:	d024      	beq.n	80176be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8017674:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017676:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8017678:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801767a:	3b01      	subs	r3, #1
 801767c:	fb00 4003 	mla	r0, r0, r3, r4
 8017680:	1400      	asrs	r0, r0, #16
 8017682:	f53f ae7b 	bmi.w	801737c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8017686:	3901      	subs	r1, #1
 8017688:	4288      	cmp	r0, r1
 801768a:	f6bf ae77 	bge.w	801737c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801768e:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8017690:	fb01 5303 	mla	r3, r1, r3, r5
 8017694:	141b      	asrs	r3, r3, #16
 8017696:	f53f ae71 	bmi.w	801737c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801769a:	3a01      	subs	r2, #1
 801769c:	4293      	cmp	r3, r2
 801769e:	f6bf ae6d 	bge.w	801737c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80176a2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80176a6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80176aa:	f1bb 0f00 	cmp.w	fp, #0
 80176ae:	dc70      	bgt.n	8017792 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80176b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80176b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80176b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80176b8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80176bc:	930c      	str	r3, [sp, #48]	; 0x30
 80176be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80176c0:	2b00      	cmp	r3, #0
 80176c2:	f340 81be 	ble.w	8017a42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80176c6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80176ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80176ce:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80176d2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80176d4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80176d8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80176dc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80176e0:	eef0 6a48 	vmov.f32	s13, s16
 80176e4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80176e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80176ec:	ee37 8a48 	vsub.f32	s16, s14, s16
 80176f0:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80176f4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80176f8:	eef0 6a68 	vmov.f32	s13, s17
 80176fc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017700:	ee18 2a10 	vmov	r2, s16
 8017704:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017708:	fb92 f3f3 	sdiv	r3, r2, r3
 801770c:	ee18 2a90 	vmov	r2, s17
 8017710:	9333      	str	r3, [sp, #204]	; 0xcc
 8017712:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017714:	fb92 f3f3 	sdiv	r3, r2, r3
 8017718:	9334      	str	r3, [sp, #208]	; 0xd0
 801771a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801771c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801771e:	3b01      	subs	r3, #1
 8017720:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017724:	9319      	str	r3, [sp, #100]	; 0x64
 8017726:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017728:	bf08      	it	eq
 801772a:	4613      	moveq	r3, r2
 801772c:	ee16 5a90 	vmov	r5, s13
 8017730:	9309      	str	r3, [sp, #36]	; 0x24
 8017732:	eef0 8a67 	vmov.f32	s17, s15
 8017736:	eeb0 8a47 	vmov.f32	s16, s14
 801773a:	e5f3      	b.n	8017324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801773c:	2900      	cmp	r1, #0
 801773e:	f43f ae66 	beq.w	801740e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017742:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017746:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801774a:	900a      	str	r0, [sp, #40]	; 0x28
 801774c:	0e00      	lsrs	r0, r0, #24
 801774e:	9013      	str	r0, [sp, #76]	; 0x4c
 8017750:	e65d      	b.n	801740e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017752:	f113 0801 	adds.w	r8, r3, #1
 8017756:	f53f af74 	bmi.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801775a:	4540      	cmp	r0, r8
 801775c:	f6ff af71 	blt.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017760:	f11c 0801 	adds.w	r8, ip, #1
 8017764:	f53f af6d 	bmi.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017768:	45c6      	cmp	lr, r8
 801776a:	f6ff af6a 	blt.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801776e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8017770:	9302      	str	r3, [sp, #8]
 8017772:	b200      	sxth	r0, r0
 8017774:	fa0f f38e 	sxth.w	r3, lr
 8017778:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801777c:	e9cd c203 	strd	ip, r2, [sp, #12]
 8017780:	9301      	str	r3, [sp, #4]
 8017782:	9000      	str	r0, [sp, #0]
 8017784:	4633      	mov	r3, r6
 8017786:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017788:	981d      	ldr	r0, [sp, #116]	; 0x74
 801778a:	4639      	mov	r1, r7
 801778c:	f7ff fc32 	bl	8016ff4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8017790:	e757      	b.n	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017792:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017794:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8017796:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801779a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801779c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80177a0:	1427      	asrs	r7, r4, #16
 80177a2:	142b      	asrs	r3, r5, #16
 80177a4:	fb01 7303 	mla	r3, r1, r3, r7
 80177a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80177aa:	18e7      	adds	r7, r4, r3
 80177ac:	5ce3      	ldrb	r3, [r4, r3]
 80177ae:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80177b2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80177b6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80177ba:	2a00      	cmp	r2, #0
 80177bc:	f000 8137 	beq.w	8017a2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80177c0:	f897 e001 	ldrb.w	lr, [r7, #1]
 80177c4:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80177c8:	9410      	str	r4, [sp, #64]	; 0x40
 80177ca:	0e24      	lsrs	r4, r4, #24
 80177cc:	9417      	str	r4, [sp, #92]	; 0x5c
 80177ce:	b170      	cbz	r0, 80177ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80177d0:	eb07 0e01 	add.w	lr, r7, r1
 80177d4:	5c79      	ldrb	r1, [r7, r1]
 80177d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80177da:	910b      	str	r1, [sp, #44]	; 0x2c
 80177dc:	0e09      	lsrs	r1, r1, #24
 80177de:	9114      	str	r1, [sp, #80]	; 0x50
 80177e0:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80177e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80177e8:	9111      	str	r1, [sp, #68]	; 0x44
 80177ea:	0e09      	lsrs	r1, r1, #24
 80177ec:	9118      	str	r1, [sp, #96]	; 0x60
 80177ee:	b292      	uxth	r2, r2
 80177f0:	b280      	uxth	r0, r0
 80177f2:	fb02 f800 	mul.w	r8, r2, r0
 80177f6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80177fa:	0112      	lsls	r2, r2, #4
 80177fc:	eba2 0e08 	sub.w	lr, r2, r8
 8017800:	b280      	uxth	r0, r0
 8017802:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017806:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017808:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801780a:	fa1f fe8e 	uxth.w	lr, lr
 801780e:	1a12      	subs	r2, r2, r0
 8017810:	b292      	uxth	r2, r2
 8017812:	fb0e f101 	mul.w	r1, lr, r1
 8017816:	fb02 110c 	mla	r1, r2, ip, r1
 801781a:	fb00 1104 	mla	r1, r0, r4, r1
 801781e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017820:	fb08 1104 	mla	r1, r8, r4, r1
 8017824:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017828:	2900      	cmp	r1, #0
 801782a:	f000 80f5 	beq.w	8017a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801782e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017832:	d019      	beq.n	8017868 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8017834:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017838:	fb0c fa0a 	mul.w	sl, ip, sl
 801783c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017840:	fb0c fc03 	mul.w	ip, ip, r3
 8017844:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017848:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801784c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017850:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017854:	4453      	add	r3, sl
 8017856:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801785a:	0a1b      	lsrs	r3, r3, #8
 801785c:	0a3f      	lsrs	r7, r7, #8
 801785e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017862:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017866:	433b      	orrs	r3, r7
 8017868:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801786a:	2cff      	cmp	r4, #255	; 0xff
 801786c:	d020      	beq.n	80178b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801786e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017870:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017874:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017876:	4367      	muls	r7, r4
 8017878:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801787a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801787e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017880:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017884:	fb04 fa0a 	mul.w	sl, r4, sl
 8017888:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801788c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017890:	44bc      	add	ip, r7
 8017892:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017896:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801789a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801789e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80178a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80178a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80178aa:	ea4c 040a 	orr.w	r4, ip, sl
 80178ae:	9410      	str	r4, [sp, #64]	; 0x40
 80178b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80178b2:	2cff      	cmp	r4, #255	; 0xff
 80178b4:	d020      	beq.n	80178f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80178b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178b8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80178bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80178be:	4367      	muls	r7, r4
 80178c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178c2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80178c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80178c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80178cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80178d0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80178d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80178d8:	44bc      	add	ip, r7
 80178da:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80178de:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80178e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80178ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80178ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80178f2:	ea4c 040a 	orr.w	r4, ip, sl
 80178f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80178f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80178fa:	2cff      	cmp	r4, #255	; 0xff
 80178fc:	d020      	beq.n	8017940 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80178fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017900:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017904:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017906:	4367      	muls	r7, r4
 8017908:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801790a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801790e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017910:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017914:	fb04 fa0a 	mul.w	sl, r4, sl
 8017918:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801791c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017920:	44bc      	add	ip, r7
 8017922:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017926:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801792a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801792e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017932:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017936:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801793a:	ea4c 040a 	orr.w	r4, ip, sl
 801793e:	9411      	str	r4, [sp, #68]	; 0x44
 8017940:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017942:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017946:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017948:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801794c:	fb0e f707 	mul.w	r7, lr, r7
 8017950:	fb02 770c 	mla	r7, r2, ip, r7
 8017954:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017958:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801795a:	fb00 770c 	mla	r7, r0, ip, r7
 801795e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017962:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017964:	fb08 770c 	mla	r7, r8, ip, r7
 8017968:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801796c:	fb0e fe0c 	mul.w	lr, lr, ip
 8017970:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017974:	fb02 e303 	mla	r3, r2, r3, lr
 8017978:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801797a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801797c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017980:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017982:	fb00 330a 	mla	r3, r0, sl, r3
 8017986:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801798a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801798e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017990:	f8b9 0000 	ldrh.w	r0, [r9]
 8017994:	434b      	muls	r3, r1
 8017996:	0a3f      	lsrs	r7, r7, #8
 8017998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801799c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80179a0:	1c59      	adds	r1, r3, #1
 80179a2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80179a6:	ea47 070c 	orr.w	r7, r7, ip
 80179aa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80179ae:	1202      	asrs	r2, r0, #8
 80179b0:	0c3b      	lsrs	r3, r7, #16
 80179b2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80179b6:	b2c9      	uxtb	r1, r1
 80179b8:	fb13 f304 	smulbb	r3, r3, r4
 80179bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80179c0:	fb02 3201 	mla	r2, r2, r1, r3
 80179c4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80179c8:	10c3      	asrs	r3, r0, #3
 80179ca:	b2ff      	uxtb	r7, r7
 80179cc:	00c0      	lsls	r0, r0, #3
 80179ce:	b292      	uxth	r2, r2
 80179d0:	fb1c fc04 	smulbb	ip, ip, r4
 80179d4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80179d8:	b2c0      	uxtb	r0, r0
 80179da:	fb17 f704 	smulbb	r7, r7, r4
 80179de:	fb03 c301 	mla	r3, r3, r1, ip
 80179e2:	fb00 7001 	mla	r0, r0, r1, r7
 80179e6:	f102 0c01 	add.w	ip, r2, #1
 80179ea:	b280      	uxth	r0, r0
 80179ec:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80179f0:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80179f4:	1c42      	adds	r2, r0, #1
 80179f6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80179fa:	b29b      	uxth	r3, r3
 80179fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a00:	ea42 020c 	orr.w	r2, r2, ip
 8017a04:	f103 0c01 	add.w	ip, r3, #1
 8017a08:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017a0c:	095b      	lsrs	r3, r3, #5
 8017a0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a12:	431a      	orrs	r2, r3
 8017a14:	f8a9 2000 	strh.w	r2, [r9]
 8017a18:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8017a1a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017a1c:	441a      	add	r2, r3
 8017a1e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017a20:	9231      	str	r2, [sp, #196]	; 0xc4
 8017a22:	f109 0902 	add.w	r9, r9, #2
 8017a26:	441d      	add	r5, r3
 8017a28:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017a2c:	e63d      	b.n	80176aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017a2e:	2800      	cmp	r0, #0
 8017a30:	f43f aedd 	beq.w	80177ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017a34:	5c79      	ldrb	r1, [r7, r1]
 8017a36:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017a3a:	910b      	str	r1, [sp, #44]	; 0x2c
 8017a3c:	0e09      	lsrs	r1, r1, #24
 8017a3e:	9114      	str	r1, [sp, #80]	; 0x50
 8017a40:	e6d5      	b.n	80177ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017a42:	b01f      	add	sp, #124	; 0x7c
 8017a44:	ecbd 8b08 	vpop	{d8-d11}
 8017a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8017a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a50:	880e      	ldrh	r6, [r1, #0]
 8017a52:	b085      	sub	sp, #20
 8017a54:	ea4f 2826 	mov.w	r8, r6, asr #8
 8017a58:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8017a5c:	4691      	mov	r9, r2
 8017a5e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017a62:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8017a66:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017a6a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8017a6e:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8017a72:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8017a76:	9200      	str	r2, [sp, #0]
 8017a78:	00f6      	lsls	r6, r6, #3
 8017a7a:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8017a7e:	9201      	str	r2, [sp, #4]
 8017a80:	2c00      	cmp	r4, #0
 8017a82:	b2f2      	uxtb	r2, r6
 8017a84:	fb04 560c 	mla	r6, r4, ip, r5
 8017a88:	9202      	str	r2, [sp, #8]
 8017a8a:	eb09 0806 	add.w	r8, r9, r6
 8017a8e:	db3f      	blt.n	8017b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017a90:	45a6      	cmp	lr, r4
 8017a92:	dd3d      	ble.n	8017b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017a94:	2d00      	cmp	r5, #0
 8017a96:	db39      	blt.n	8017b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017a98:	45ac      	cmp	ip, r5
 8017a9a:	dd37      	ble.n	8017b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017a9c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8017aa0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017aa4:	1c6e      	adds	r6, r5, #1
 8017aa6:	d436      	bmi.n	8017b16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017aa8:	45b4      	cmp	ip, r6
 8017aaa:	dd34      	ble.n	8017b16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017aac:	b3a8      	cbz	r0, 8017b1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8017aae:	f898 6001 	ldrb.w	r6, [r8, #1]
 8017ab2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8017ab6:	3401      	adds	r4, #1
 8017ab8:	d433      	bmi.n	8017b22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017aba:	45a6      	cmp	lr, r4
 8017abc:	dd31      	ble.n	8017b22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017abe:	b39f      	cbz	r7, 8017b28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8017ac0:	2d00      	cmp	r5, #0
 8017ac2:	eb08 0e0c 	add.w	lr, r8, ip
 8017ac6:	db2a      	blt.n	8017b1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017ac8:	45ac      	cmp	ip, r5
 8017aca:	dd28      	ble.n	8017b1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017acc:	f818 400c 	ldrb.w	r4, [r8, ip]
 8017ad0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017ad4:	3501      	adds	r5, #1
 8017ad6:	d42a      	bmi.n	8017b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017ad8:	45ac      	cmp	ip, r5
 8017ada:	dd28      	ble.n	8017b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017adc:	b348      	cbz	r0, 8017b32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8017ade:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8017ae2:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8017ae6:	280f      	cmp	r0, #15
 8017ae8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017aec:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017af0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017af4:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017af8:	d801      	bhi.n	8017afe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8017afa:	2f0f      	cmp	r7, #15
 8017afc:	d91b      	bls.n	8017b36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8017afe:	4b7d      	ldr	r3, [pc, #500]	; (8017cf4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8017b00:	4a7d      	ldr	r2, [pc, #500]	; (8017cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8017b02:	487e      	ldr	r0, [pc, #504]	; (8017cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8017b04:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017b08:	f005 fd54 	bl	801d5b4 <__assert_func>
 8017b0c:	2200      	movs	r2, #0
 8017b0e:	e7c9      	b.n	8017aa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8017b10:	2600      	movs	r6, #0
 8017b12:	4632      	mov	r2, r6
 8017b14:	e7cf      	b.n	8017ab6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017b16:	2600      	movs	r6, #0
 8017b18:	e7cd      	b.n	8017ab6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017b1a:	4606      	mov	r6, r0
 8017b1c:	e7cb      	b.n	8017ab6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017b1e:	2400      	movs	r4, #0
 8017b20:	e7d8      	b.n	8017ad4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8017b22:	2300      	movs	r3, #0
 8017b24:	461c      	mov	r4, r3
 8017b26:	e7de      	b.n	8017ae6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017b28:	463b      	mov	r3, r7
 8017b2a:	463c      	mov	r4, r7
 8017b2c:	e7db      	b.n	8017ae6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017b2e:	2300      	movs	r3, #0
 8017b30:	e7d9      	b.n	8017ae6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017b32:	4603      	mov	r3, r0
 8017b34:	e7d7      	b.n	8017ae6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017b36:	b280      	uxth	r0, r0
 8017b38:	b2bf      	uxth	r7, r7
 8017b3a:	fb00 fe07 	mul.w	lr, r0, r7
 8017b3e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017b42:	0100      	lsls	r0, r0, #4
 8017b44:	eba0 0c0e 	sub.w	ip, r0, lr
 8017b48:	b2bf      	uxth	r7, r7
 8017b4a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017b4e:	fa1f fc8c 	uxth.w	ip, ip
 8017b52:	1bed      	subs	r5, r5, r7
 8017b54:	b2ad      	uxth	r5, r5
 8017b56:	fb0c f00a 	mul.w	r0, ip, sl
 8017b5a:	fb05 000b 	mla	r0, r5, fp, r0
 8017b5e:	fb07 0009 	mla	r0, r7, r9, r0
 8017b62:	fb0e 0008 	mla	r0, lr, r8, r0
 8017b66:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017b6a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017b6e:	9003      	str	r0, [sp, #12]
 8017b70:	d018      	beq.n	8017ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8017b72:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017b76:	fb0b f000 	mul.w	r0, fp, r0
 8017b7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017b7e:	fb0b fb02 	mul.w	fp, fp, r2
 8017b82:	0a02      	lsrs	r2, r0, #8
 8017b84:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017b88:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017b8c:	4402      	add	r2, r0
 8017b8e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017b92:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017b96:	0a12      	lsrs	r2, r2, #8
 8017b98:	0a00      	lsrs	r0, r0, #8
 8017b9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017b9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017ba2:	4302      	orrs	r2, r0
 8017ba4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ba8:	d019      	beq.n	8017bde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8017baa:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017bae:	fb0a fb0b 	mul.w	fp, sl, fp
 8017bb2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017bb6:	fb0a fa06 	mul.w	sl, sl, r6
 8017bba:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017bbe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017bc2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017bc6:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017bca:	445e      	add	r6, fp
 8017bcc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017bd0:	0a36      	lsrs	r6, r6, #8
 8017bd2:	0a00      	lsrs	r0, r0, #8
 8017bd4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017bd8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017bdc:	4306      	orrs	r6, r0
 8017bde:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017be2:	d019      	beq.n	8017c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8017be4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017be8:	fb09 fa0a 	mul.w	sl, r9, sl
 8017bec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017bf0:	fb09 f904 	mul.w	r9, r9, r4
 8017bf4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017bf8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017bfc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017c00:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017c04:	4454      	add	r4, sl
 8017c06:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017c0a:	0a24      	lsrs	r4, r4, #8
 8017c0c:	0a00      	lsrs	r0, r0, #8
 8017c0e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017c12:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017c16:	4304      	orrs	r4, r0
 8017c18:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017c1c:	d019      	beq.n	8017c52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8017c1e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017c22:	fb08 f909 	mul.w	r9, r8, r9
 8017c26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017c2a:	fb08 f803 	mul.w	r8, r8, r3
 8017c2e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017c32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c36:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017c3a:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017c3e:	444b      	add	r3, r9
 8017c40:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017c44:	0a1b      	lsrs	r3, r3, #8
 8017c46:	0a00      	lsrs	r0, r0, #8
 8017c48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c4c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017c50:	4303      	orrs	r3, r0
 8017c52:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017c56:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017c5a:	fb0c f808 	mul.w	r8, ip, r8
 8017c5e:	fb05 8800 	mla	r8, r5, r0, r8
 8017c62:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017c66:	fb07 8800 	mla	r8, r7, r0, r8
 8017c6a:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017c6e:	fb0e 8000 	mla	r0, lr, r0, r8
 8017c72:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017c76:	fb0c f606 	mul.w	r6, ip, r6
 8017c7a:	0a00      	lsrs	r0, r0, #8
 8017c7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017c80:	fb05 6202 	mla	r2, r5, r2, r6
 8017c84:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017c88:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8017c8c:	fb07 2700 	mla	r7, r7, r0, r2
 8017c90:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017c94:	9b03      	ldr	r3, [sp, #12]
 8017c96:	9d00      	ldr	r5, [sp, #0]
 8017c98:	9a02      	ldr	r2, [sp, #8]
 8017c9a:	fb0e 7000 	mla	r0, lr, r0, r7
 8017c9e:	43dc      	mvns	r4, r3
 8017ca0:	9b01      	ldr	r3, [sp, #4]
 8017ca2:	b2e4      	uxtb	r4, r4
 8017ca4:	0a00      	lsrs	r0, r0, #8
 8017ca6:	4363      	muls	r3, r4
 8017ca8:	4365      	muls	r5, r4
 8017caa:	4362      	muls	r2, r4
 8017cac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017cb0:	ea48 0000 	orr.w	r0, r8, r0
 8017cb4:	4614      	mov	r4, r2
 8017cb6:	1c5e      	adds	r6, r3, #1
 8017cb8:	1c6a      	adds	r2, r5, #1
 8017cba:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8017cbe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017cc2:	0a03      	lsrs	r3, r0, #8
 8017cc4:	0c02      	lsrs	r2, r0, #16
 8017cc6:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8017cca:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017cce:	00db      	lsls	r3, r3, #3
 8017cd0:	0212      	lsls	r2, r2, #8
 8017cd2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017cd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017cda:	4313      	orrs	r3, r2
 8017cdc:	1c62      	adds	r2, r4, #1
 8017cde:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8017ce2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8017ce6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017cea:	4318      	orrs	r0, r3
 8017cec:	8008      	strh	r0, [r1, #0]
 8017cee:	b005      	add	sp, #20
 8017cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cf4:	080214b7 	.word	0x080214b7
 8017cf8:	080219e6 	.word	0x080219e6
 8017cfc:	08021484 	.word	0x08021484

08017d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d04:	ed2d 8b08 	vpush	{d8-d11}
 8017d08:	b09b      	sub	sp, #108	; 0x6c
 8017d0a:	eeb0 aa40 	vmov.f32	s20, s0
 8017d0e:	9218      	str	r2, [sp, #96]	; 0x60
 8017d10:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017d12:	9116      	str	r1, [sp, #88]	; 0x58
 8017d14:	9307      	str	r3, [sp, #28]
 8017d16:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8017d1a:	9019      	str	r0, [sp, #100]	; 0x64
 8017d1c:	6850      	ldr	r0, [r2, #4]
 8017d1e:	6812      	ldr	r2, [r2, #0]
 8017d20:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8017d22:	fb00 1303 	mla	r3, r0, r3, r1
 8017d26:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017d2a:	930a      	str	r3, [sp, #40]	; 0x28
 8017d2c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017d2e:	681b      	ldr	r3, [r3, #0]
 8017d30:	930f      	str	r3, [sp, #60]	; 0x3c
 8017d32:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017d34:	685e      	ldr	r6, [r3, #4]
 8017d36:	eef0 9a60 	vmov.f32	s19, s1
 8017d3a:	eeb0 9a41 	vmov.f32	s18, s2
 8017d3e:	eeb0 8a62 	vmov.f32	s16, s5
 8017d42:	eef0 8a43 	vmov.f32	s17, s6
 8017d46:	eef0 ba44 	vmov.f32	s23, s8
 8017d4a:	eeb0 ba64 	vmov.f32	s22, s9
 8017d4e:	eef0 aa45 	vmov.f32	s21, s10
 8017d52:	3604      	adds	r6, #4
 8017d54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017d56:	2b00      	cmp	r3, #0
 8017d58:	dc03      	bgt.n	8017d62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8017d5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017d5c:	2b00      	cmp	r3, #0
 8017d5e:	f340 8373 	ble.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017d62:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017d64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017d68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017d6c:	1e48      	subs	r0, r1, #1
 8017d6e:	1e57      	subs	r7, r2, #1
 8017d70:	9b07      	ldr	r3, [sp, #28]
 8017d72:	2b00      	cmp	r3, #0
 8017d74:	f340 8190 	ble.w	8018098 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8017d78:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017d7a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017d7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017d82:	d406      	bmi.n	8017d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017d84:	4584      	cmp	ip, r0
 8017d86:	da04      	bge.n	8017d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017d88:	2b00      	cmp	r3, #0
 8017d8a:	db02      	blt.n	8017d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017d8c:	42bb      	cmp	r3, r7
 8017d8e:	f2c0 8184 	blt.w	801809a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8017d92:	f11c 0c01 	adds.w	ip, ip, #1
 8017d96:	f100 8172 	bmi.w	801807e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017d9a:	4561      	cmp	r1, ip
 8017d9c:	f2c0 816f 	blt.w	801807e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017da0:	3301      	adds	r3, #1
 8017da2:	f100 816c 	bmi.w	801807e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017da6:	429a      	cmp	r2, r3
 8017da8:	f2c0 8169 	blt.w	801807e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017dac:	9b07      	ldr	r3, [sp, #28]
 8017dae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017db0:	9317      	str	r3, [sp, #92]	; 0x5c
 8017db2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017db4:	2b00      	cmp	r3, #0
 8017db6:	f340 818e 	ble.w	80180d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8017dba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017dbc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017dc0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017dc2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8017dc6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017dc8:	141b      	asrs	r3, r3, #16
 8017dca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017dce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017dd2:	f100 81d1 	bmi.w	8018178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017dd6:	f101 38ff 	add.w	r8, r1, #4294967295
 8017dda:	4543      	cmp	r3, r8
 8017ddc:	f280 81cc 	bge.w	8018178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017de0:	f1bc 0f00 	cmp.w	ip, #0
 8017de4:	f2c0 81c8 	blt.w	8018178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017de8:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017dec:	45c4      	cmp	ip, r8
 8017dee:	f280 81c3 	bge.w	8018178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017df2:	b209      	sxth	r1, r1
 8017df4:	fb0c 3301 	mla	r3, ip, r1, r3
 8017df8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017dfa:	eb04 0803 	add.w	r8, r4, r3
 8017dfe:	5ce3      	ldrb	r3, [r4, r3]
 8017e00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017e04:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017e08:	2a00      	cmp	r2, #0
 8017e0a:	f000 81aa 	beq.w	8018162 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8017e0e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017e12:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017e16:	940b      	str	r4, [sp, #44]	; 0x2c
 8017e18:	0e24      	lsrs	r4, r4, #24
 8017e1a:	9412      	str	r4, [sp, #72]	; 0x48
 8017e1c:	b178      	cbz	r0, 8017e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017e1e:	eb08 0c01 	add.w	ip, r8, r1
 8017e22:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017e26:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017e2a:	9108      	str	r1, [sp, #32]
 8017e2c:	0e09      	lsrs	r1, r1, #24
 8017e2e:	9110      	str	r1, [sp, #64]	; 0x40
 8017e30:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017e34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017e38:	910c      	str	r1, [sp, #48]	; 0x30
 8017e3a:	0e09      	lsrs	r1, r1, #24
 8017e3c:	9113      	str	r1, [sp, #76]	; 0x4c
 8017e3e:	b292      	uxth	r2, r2
 8017e40:	b280      	uxth	r0, r0
 8017e42:	fb02 f900 	mul.w	r9, r2, r0
 8017e46:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017e4a:	0112      	lsls	r2, r2, #4
 8017e4c:	eba2 0809 	sub.w	r8, r2, r9
 8017e50:	b280      	uxth	r0, r0
 8017e52:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017e56:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017e58:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017e5a:	fa1f f888 	uxth.w	r8, r8
 8017e5e:	1a12      	subs	r2, r2, r0
 8017e60:	b292      	uxth	r2, r2
 8017e62:	fb08 f101 	mul.w	r1, r8, r1
 8017e66:	fb02 110e 	mla	r1, r2, lr, r1
 8017e6a:	fb00 1104 	mla	r1, r0, r4, r1
 8017e6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e70:	fb09 1104 	mla	r1, r9, r4, r1
 8017e74:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017e78:	2900      	cmp	r1, #0
 8017e7a:	f000 80f5 	beq.w	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017e7e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017e82:	d01b      	beq.n	8017ebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e84:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017e88:	fb0e fa0a 	mul.w	sl, lr, sl
 8017e8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017e90:	fb0e fe03 	mul.w	lr, lr, r3
 8017e94:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017e98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017e9c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017ea0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017ea4:	4453      	add	r3, sl
 8017ea6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017eaa:	0a1b      	lsrs	r3, r3, #8
 8017eac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017eb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017eb4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017eb8:	ea43 030c 	orr.w	r3, r3, ip
 8017ebc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017ebe:	2cff      	cmp	r4, #255	; 0xff
 8017ec0:	d021      	beq.n	8017f06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8017ec2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ec4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017ec8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017eca:	fb04 fb0b 	mul.w	fp, r4, fp
 8017ece:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ed0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017ed4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017ed6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017eda:	fb04 fa0a 	mul.w	sl, r4, sl
 8017ede:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ee2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017ee6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017eea:	44de      	add	lr, fp
 8017eec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017ef0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ef4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017ef8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017efc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017f00:	ea4e 040a 	orr.w	r4, lr, sl
 8017f04:	940b      	str	r4, [sp, #44]	; 0x2c
 8017f06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017f08:	2cff      	cmp	r4, #255	; 0xff
 8017f0a:	d021      	beq.n	8017f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017f0c:	9c08      	ldr	r4, [sp, #32]
 8017f0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017f12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017f14:	fb04 fb0b 	mul.w	fp, r4, fp
 8017f18:	9c08      	ldr	r4, [sp, #32]
 8017f1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017f1e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017f20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017f24:	fb04 fa0a 	mul.w	sl, r4, sl
 8017f28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017f30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017f34:	44de      	add	lr, fp
 8017f36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017f3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017f42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017f4a:	ea4e 040a 	orr.w	r4, lr, sl
 8017f4e:	9408      	str	r4, [sp, #32]
 8017f50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017f52:	2cff      	cmp	r4, #255	; 0xff
 8017f54:	d021      	beq.n	8017f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017f56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017f58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017f5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017f5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017f62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017f64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017f68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017f6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017f6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017f72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017f7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017f7e:	44de      	add	lr, fp
 8017f80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017f84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017f8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017f94:	ea4e 040a 	orr.w	r4, lr, sl
 8017f98:	940c      	str	r4, [sp, #48]	; 0x30
 8017f9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f9c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017fa0:	9c08      	ldr	r4, [sp, #32]
 8017fa2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017fa6:	fb08 fc0c 	mul.w	ip, r8, ip
 8017faa:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017fae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017fb2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017fb4:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017fb8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017fbc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017fbe:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017fc2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017fc6:	fb08 f80e 	mul.w	r8, r8, lr
 8017fca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017fce:	fb02 8303 	mla	r3, r2, r3, r8
 8017fd2:	9a08      	ldr	r2, [sp, #32]
 8017fd4:	f8b7 8000 	ldrh.w	r8, [r7]
 8017fd8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017fdc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017fde:	fb00 330a 	mla	r3, r0, sl, r3
 8017fe2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8017fe6:	fb09 3900 	mla	r9, r9, r0, r3
 8017fea:	43c9      	mvns	r1, r1
 8017fec:	ea4f 2228 	mov.w	r2, r8, asr #8
 8017ff0:	fa5f fe81 	uxtb.w	lr, r1
 8017ff4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ff8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017ffc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018000:	fb02 f20e 	mul.w	r2, r2, lr
 8018004:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018008:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801800c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018010:	1c53      	adds	r3, r2, #1
 8018012:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018016:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801801a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801801e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018022:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018026:	4a63      	ldr	r2, [pc, #396]	; (80181b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8018028:	fb00 f00e 	mul.w	r0, r0, lr
 801802c:	b2db      	uxtb	r3, r3
 801802e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018032:	1c43      	adds	r3, r0, #1
 8018034:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018038:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801803c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018040:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018044:	b2c9      	uxtb	r1, r1
 8018046:	00db      	lsls	r3, r3, #3
 8018048:	fb01 f10e 	mul.w	r1, r1, lr
 801804c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018050:	4313      	orrs	r3, r2
 8018052:	1c4a      	adds	r2, r1, #1
 8018054:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018058:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801805c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018060:	ea4c 0c03 	orr.w	ip, ip, r3
 8018064:	f8a7 c000 	strh.w	ip, [r7]
 8018068:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801806a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801806c:	441a      	add	r2, r3
 801806e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018070:	922d      	str	r2, [sp, #180]	; 0xb4
 8018072:	441d      	add	r5, r3
 8018074:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018076:	3b01      	subs	r3, #1
 8018078:	3702      	adds	r7, #2
 801807a:	9317      	str	r3, [sp, #92]	; 0x5c
 801807c:	e699      	b.n	8017db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801807e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018080:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8018082:	441c      	add	r4, r3
 8018084:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018086:	942d      	str	r4, [sp, #180]	; 0xb4
 8018088:	441d      	add	r5, r3
 801808a:	9b07      	ldr	r3, [sp, #28]
 801808c:	3b01      	subs	r3, #1
 801808e:	9307      	str	r3, [sp, #28]
 8018090:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018092:	3302      	adds	r3, #2
 8018094:	930a      	str	r3, [sp, #40]	; 0x28
 8018096:	e66b      	b.n	8017d70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018098:	d024      	beq.n	80180e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801809a:	9b07      	ldr	r3, [sp, #28]
 801809c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801809e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80180a0:	3b01      	subs	r3, #1
 80180a2:	fb00 4003 	mla	r0, r0, r3, r4
 80180a6:	1400      	asrs	r0, r0, #16
 80180a8:	f53f ae80 	bmi.w	8017dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80180ac:	3901      	subs	r1, #1
 80180ae:	4288      	cmp	r0, r1
 80180b0:	f6bf ae7c 	bge.w	8017dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80180b4:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80180b6:	fb01 5303 	mla	r3, r1, r3, r5
 80180ba:	141b      	asrs	r3, r3, #16
 80180bc:	f53f ae76 	bmi.w	8017dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80180c0:	3a01      	subs	r2, #1
 80180c2:	4293      	cmp	r3, r2
 80180c4:	f6bf ae72 	bge.w	8017dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80180c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80180cc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80180d0:	f1bb 0f00 	cmp.w	fp, #0
 80180d4:	dc70      	bgt.n	80181b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80180d6:	9b07      	ldr	r3, [sp, #28]
 80180d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80180dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80180de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80180e2:	930a      	str	r3, [sp, #40]	; 0x28
 80180e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80180e6:	2b00      	cmp	r3, #0
 80180e8:	f340 81ae 	ble.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80180ec:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80180f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80180f4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80180f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80180fa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80180fe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018102:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018106:	eef0 6a48 	vmov.f32	s13, s16
 801810a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801810e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018112:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018116:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801811a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801811e:	eef0 6a68 	vmov.f32	s13, s17
 8018122:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018126:	ee18 2a10 	vmov	r2, s16
 801812a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801812e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018132:	ee18 2a90 	vmov	r2, s17
 8018136:	932f      	str	r3, [sp, #188]	; 0xbc
 8018138:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801813a:	fb92 f3f3 	sdiv	r3, r2, r3
 801813e:	9330      	str	r3, [sp, #192]	; 0xc0
 8018140:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018142:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018144:	3b01      	subs	r3, #1
 8018146:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801814a:	9316      	str	r3, [sp, #88]	; 0x58
 801814c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801814e:	bf08      	it	eq
 8018150:	4613      	moveq	r3, r2
 8018152:	ee16 5a90 	vmov	r5, s13
 8018156:	9307      	str	r3, [sp, #28]
 8018158:	eef0 8a67 	vmov.f32	s17, s15
 801815c:	eeb0 8a47 	vmov.f32	s16, s14
 8018160:	e5f8      	b.n	8017d54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018162:	2800      	cmp	r0, #0
 8018164:	f43f ae6b 	beq.w	8017e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018168:	f818 1001 	ldrb.w	r1, [r8, r1]
 801816c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018170:	9108      	str	r1, [sp, #32]
 8018172:	0e09      	lsrs	r1, r1, #24
 8018174:	9110      	str	r1, [sp, #64]	; 0x40
 8018176:	e662      	b.n	8017e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018178:	f113 0801 	adds.w	r8, r3, #1
 801817c:	f53f af74 	bmi.w	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018180:	4541      	cmp	r1, r8
 8018182:	f6ff af71 	blt.w	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018186:	f11c 0801 	adds.w	r8, ip, #1
 801818a:	f53f af6d 	bmi.w	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801818e:	45c6      	cmp	lr, r8
 8018190:	f6ff af6a 	blt.w	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018194:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018198:	b209      	sxth	r1, r1
 801819a:	fa0f f38e 	sxth.w	r3, lr
 801819e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80181a2:	9301      	str	r3, [sp, #4]
 80181a4:	9100      	str	r1, [sp, #0]
 80181a6:	4633      	mov	r3, r6
 80181a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80181aa:	9819      	ldr	r0, [sp, #100]	; 0x64
 80181ac:	4639      	mov	r1, r7
 80181ae:	f7ff fc4d 	bl	8017a4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80181b2:	e759      	b.n	8018068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80181b4:	fffff800 	.word	0xfffff800
 80181b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80181ba:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80181bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80181c0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80181c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80181c6:	1427      	asrs	r7, r4, #16
 80181c8:	142b      	asrs	r3, r5, #16
 80181ca:	fb01 7303 	mla	r3, r1, r3, r7
 80181ce:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80181d0:	18e7      	adds	r7, r4, r3
 80181d2:	5ce3      	ldrb	r3, [r4, r3]
 80181d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80181d8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80181dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80181e0:	2a00      	cmp	r2, #0
 80181e2:	f000 8127 	beq.w	8018434 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80181e6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80181ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80181ee:	940d      	str	r4, [sp, #52]	; 0x34
 80181f0:	0e24      	lsrs	r4, r4, #24
 80181f2:	9414      	str	r4, [sp, #80]	; 0x50
 80181f4:	b170      	cbz	r0, 8018214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80181f6:	eb07 0e01 	add.w	lr, r7, r1
 80181fa:	5c79      	ldrb	r1, [r7, r1]
 80181fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018200:	9109      	str	r1, [sp, #36]	; 0x24
 8018202:	0e09      	lsrs	r1, r1, #24
 8018204:	9111      	str	r1, [sp, #68]	; 0x44
 8018206:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801820a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801820e:	910e      	str	r1, [sp, #56]	; 0x38
 8018210:	0e09      	lsrs	r1, r1, #24
 8018212:	9115      	str	r1, [sp, #84]	; 0x54
 8018214:	b292      	uxth	r2, r2
 8018216:	b280      	uxth	r0, r0
 8018218:	fb02 f800 	mul.w	r8, r2, r0
 801821c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018220:	0112      	lsls	r2, r2, #4
 8018222:	eba2 0e08 	sub.w	lr, r2, r8
 8018226:	b280      	uxth	r0, r0
 8018228:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801822c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801822e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018230:	fa1f fe8e 	uxth.w	lr, lr
 8018234:	1a09      	subs	r1, r1, r0
 8018236:	b289      	uxth	r1, r1
 8018238:	fb0e f202 	mul.w	r2, lr, r2
 801823c:	fb01 220c 	mla	r2, r1, ip, r2
 8018240:	fb00 2204 	mla	r2, r0, r4, r2
 8018244:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018246:	fb08 2204 	mla	r2, r8, r4, r2
 801824a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801824e:	2a00      	cmp	r2, #0
 8018250:	f000 80e5 	beq.w	801841e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8018254:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018258:	d019      	beq.n	801828e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 801825a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801825e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018262:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018266:	fb0c fc03 	mul.w	ip, ip, r3
 801826a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801826e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018272:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018276:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801827a:	4453      	add	r3, sl
 801827c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018280:	0a1b      	lsrs	r3, r3, #8
 8018282:	0a3f      	lsrs	r7, r7, #8
 8018284:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018288:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801828c:	433b      	orrs	r3, r7
 801828e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018290:	2cff      	cmp	r4, #255	; 0xff
 8018292:	d020      	beq.n	80182d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8018294:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018296:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801829a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801829c:	4367      	muls	r7, r4
 801829e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80182a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80182a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80182a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80182aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80182ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80182b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80182b6:	44bc      	add	ip, r7
 80182b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80182bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80182c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80182cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80182d0:	ea4c 040a 	orr.w	r4, ip, sl
 80182d4:	940d      	str	r4, [sp, #52]	; 0x34
 80182d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80182d8:	2cff      	cmp	r4, #255	; 0xff
 80182da:	d020      	beq.n	801831e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80182dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80182de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80182e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80182e4:	4367      	muls	r7, r4
 80182e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80182e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80182ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80182ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80182f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80182f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80182fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80182fe:	44bc      	add	ip, r7
 8018300:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018304:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801830c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018310:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018314:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018318:	ea4c 040a 	orr.w	r4, ip, sl
 801831c:	9409      	str	r4, [sp, #36]	; 0x24
 801831e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018320:	2cff      	cmp	r4, #255	; 0xff
 8018322:	d020      	beq.n	8018366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8018324:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018326:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801832a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801832c:	4367      	muls	r7, r4
 801832e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018330:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018334:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018336:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801833a:	fb04 fa0a 	mul.w	sl, r4, sl
 801833e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018342:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018346:	44bc      	add	ip, r7
 8018348:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801834c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018350:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018358:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801835c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018360:	ea4c 040a 	orr.w	r4, ip, sl
 8018364:	940e      	str	r4, [sp, #56]	; 0x38
 8018366:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018368:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801836c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801836e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018372:	fb0e f707 	mul.w	r7, lr, r7
 8018376:	fb01 770c 	mla	r7, r1, ip, r7
 801837a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801837e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018380:	fb00 770c 	mla	r7, r0, ip, r7
 8018384:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018388:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801838a:	fb08 770c 	mla	r7, r8, ip, r7
 801838e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018392:	fb0e fe0c 	mul.w	lr, lr, ip
 8018396:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801839a:	fb01 e303 	mla	r3, r1, r3, lr
 801839e:	9909      	ldr	r1, [sp, #36]	; 0x24
 80183a0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80183a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80183a6:	fb00 330a 	mla	r3, r0, sl, r3
 80183aa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80183ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 80183b2:	f8b9 3000 	ldrh.w	r3, [r9]
 80183b6:	43d2      	mvns	r2, r2
 80183b8:	1218      	asrs	r0, r3, #8
 80183ba:	b2d2      	uxtb	r2, r2
 80183bc:	10d9      	asrs	r1, r3, #3
 80183be:	0a3f      	lsrs	r7, r7, #8
 80183c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80183c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80183c8:	00db      	lsls	r3, r3, #3
 80183ca:	4350      	muls	r0, r2
 80183cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80183d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80183d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80183d8:	b2db      	uxtb	r3, r3
 80183da:	ea47 070c 	orr.w	r7, r7, ip
 80183de:	4351      	muls	r1, r2
 80183e0:	4353      	muls	r3, r2
 80183e2:	1c42      	adds	r2, r0, #1
 80183e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80183e8:	0c3a      	lsrs	r2, r7, #16
 80183ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80183ee:	4a19      	ldr	r2, [pc, #100]	; (8018454 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80183f0:	b2c0      	uxtb	r0, r0
 80183f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80183f6:	1c4a      	adds	r2, r1, #1
 80183f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80183fc:	0a3a      	lsrs	r2, r7, #8
 80183fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018402:	00c9      	lsls	r1, r1, #3
 8018404:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018408:	4301      	orrs	r1, r0
 801840a:	1c58      	adds	r0, r3, #1
 801840c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018410:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018414:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018418:	4308      	orrs	r0, r1
 801841a:	f8a9 0000 	strh.w	r0, [r9]
 801841e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018420:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018422:	441a      	add	r2, r3
 8018424:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018426:	922d      	str	r2, [sp, #180]	; 0xb4
 8018428:	f109 0902 	add.w	r9, r9, #2
 801842c:	441d      	add	r5, r3
 801842e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018432:	e64d      	b.n	80180d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8018434:	2800      	cmp	r0, #0
 8018436:	f43f aeed 	beq.w	8018214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801843a:	5c79      	ldrb	r1, [r7, r1]
 801843c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018440:	9109      	str	r1, [sp, #36]	; 0x24
 8018442:	0e09      	lsrs	r1, r1, #24
 8018444:	9111      	str	r1, [sp, #68]	; 0x44
 8018446:	e6e5      	b.n	8018214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8018448:	b01b      	add	sp, #108	; 0x6c
 801844a:	ecbd 8b08 	vpop	{d8-d11}
 801844e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018452:	bf00      	nop
 8018454:	fffff800 	.word	0xfffff800

08018458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801845c:	b085      	sub	sp, #20
 801845e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018462:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018466:	9103      	str	r1, [sp, #12]
 8018468:	fb05 7106 	mla	r1, r5, r6, r7
 801846c:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8018470:	2d00      	cmp	r5, #0
 8018472:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018476:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801847a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801847e:	9401      	str	r4, [sp, #4]
 8018480:	eb03 0901 	add.w	r9, r3, r1
 8018484:	f2c0 80c0 	blt.w	8018608 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8018488:	45a8      	cmp	r8, r5
 801848a:	f340 80bd 	ble.w	8018608 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801848e:	2f00      	cmp	r7, #0
 8018490:	f2c0 80b6 	blt.w	8018600 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8018494:	42be      	cmp	r6, r7
 8018496:	f340 80b3 	ble.w	8018600 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801849a:	f813 c001 	ldrb.w	ip, [r3, r1]
 801849e:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80184a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80184a6:	d019      	beq.n	80184dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80184a8:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80184ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80184b0:	435a      	muls	r2, r3
 80184b2:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80184b6:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80184ba:	fb0c f403 	mul.w	r4, ip, r3
 80184be:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80184c2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80184c6:	441a      	add	r2, r3
 80184c8:	f104 0320 	add.w	r3, r4, #32
 80184cc:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80184d0:	0a1b      	lsrs	r3, r3, #8
 80184d2:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80184d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80184da:	4319      	orrs	r1, r3
 80184dc:	b289      	uxth	r1, r1
 80184de:	1c7b      	adds	r3, r7, #1
 80184e0:	f100 8097 	bmi.w	8018612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80184e4:	429e      	cmp	r6, r3
 80184e6:	f340 8094 	ble.w	8018612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80184ea:	2800      	cmp	r0, #0
 80184ec:	f000 8094 	beq.w	8018618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80184f0:	f899 4001 	ldrb.w	r4, [r9, #1]
 80184f4:	9b01      	ldr	r3, [sp, #4]
 80184f6:	2cff      	cmp	r4, #255	; 0xff
 80184f8:	885b      	ldrh	r3, [r3, #2]
 80184fa:	d01b      	beq.n	8018534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80184fc:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018500:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018504:	fb0a f202 	mul.w	r2, sl, r2
 8018508:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801850c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018510:	fb04 fa03 	mul.w	sl, r4, r3
 8018514:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018518:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801851c:	441a      	add	r2, r3
 801851e:	f10a 0320 	add.w	r3, sl, #32
 8018522:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018526:	0a1b      	lsrs	r3, r3, #8
 8018528:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801852c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018530:	ea4b 0303 	orr.w	r3, fp, r3
 8018534:	b29b      	uxth	r3, r3
 8018536:	3501      	adds	r5, #1
 8018538:	d474      	bmi.n	8018624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801853a:	45a8      	cmp	r8, r5
 801853c:	dd72      	ble.n	8018624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801853e:	f1be 0f00 	cmp.w	lr, #0
 8018542:	f000 8120 	beq.w	8018786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8018546:	2f00      	cmp	r7, #0
 8018548:	db69      	blt.n	801861e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801854a:	42be      	cmp	r6, r7
 801854c:	dd67      	ble.n	801861e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801854e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018552:	9a01      	ldr	r2, [sp, #4]
 8018554:	2dff      	cmp	r5, #255	; 0xff
 8018556:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801855a:	d01c      	beq.n	8018596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801855c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8018560:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018564:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018568:	fb05 fa0b 	mul.w	sl, r5, fp
 801856c:	fb08 f802 	mul.w	r8, r8, r2
 8018570:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018574:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018578:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801857c:	4490      	add	r8, r2
 801857e:	f10a 0220 	add.w	r2, sl, #32
 8018582:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018586:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801858a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801858e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018592:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018596:	fa1f fb8b 	uxth.w	fp, fp
 801859a:	3701      	adds	r7, #1
 801859c:	d447      	bmi.n	801862e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801859e:	42be      	cmp	r6, r7
 80185a0:	dd45      	ble.n	801862e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80185a2:	2800      	cmp	r0, #0
 80185a4:	d046      	beq.n	8018634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80185a6:	3601      	adds	r6, #1
 80185a8:	9a01      	ldr	r2, [sp, #4]
 80185aa:	f819 7006 	ldrb.w	r7, [r9, r6]
 80185ae:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80185b2:	2fff      	cmp	r7, #255	; 0xff
 80185b4:	d01a      	beq.n	80185ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80185b6:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80185ba:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80185be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185c2:	fb07 f902 	mul.w	r9, r7, r2
 80185c6:	fb08 f806 	mul.w	r8, r8, r6
 80185ca:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80185ce:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80185d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80185d6:	44b0      	add	r8, r6
 80185d8:	f109 0620 	add.w	r6, r9, #32
 80185dc:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80185e0:	0a36      	lsrs	r6, r6, #8
 80185e2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80185e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80185ea:	4332      	orrs	r2, r6
 80185ec:	b292      	uxth	r2, r2
 80185ee:	280f      	cmp	r0, #15
 80185f0:	d922      	bls.n	8018638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80185f2:	4b69      	ldr	r3, [pc, #420]	; (8018798 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80185f4:	4a69      	ldr	r2, [pc, #420]	; (801879c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80185f6:	486a      	ldr	r0, [pc, #424]	; (80187a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80185f8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80185fc:	f004 ffda 	bl	801d5b4 <__assert_func>
 8018600:	f04f 0c00 	mov.w	ip, #0
 8018604:	4661      	mov	r1, ip
 8018606:	e76a      	b.n	80184de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8018608:	2400      	movs	r4, #0
 801860a:	46a4      	mov	ip, r4
 801860c:	4623      	mov	r3, r4
 801860e:	4621      	mov	r1, r4
 8018610:	e791      	b.n	8018536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018612:	2400      	movs	r4, #0
 8018614:	4623      	mov	r3, r4
 8018616:	e78e      	b.n	8018536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018618:	4604      	mov	r4, r0
 801861a:	4603      	mov	r3, r0
 801861c:	e78b      	b.n	8018536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801861e:	2500      	movs	r5, #0
 8018620:	46ab      	mov	fp, r5
 8018622:	e7ba      	b.n	801859a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8018624:	2700      	movs	r7, #0
 8018626:	463d      	mov	r5, r7
 8018628:	463a      	mov	r2, r7
 801862a:	46bb      	mov	fp, r7
 801862c:	e7df      	b.n	80185ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801862e:	2700      	movs	r7, #0
 8018630:	463a      	mov	r2, r7
 8018632:	e7dc      	b.n	80185ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8018634:	4607      	mov	r7, r0
 8018636:	4602      	mov	r2, r0
 8018638:	f1be 0f0f 	cmp.w	lr, #15
 801863c:	d8d9      	bhi.n	80185f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801863e:	b286      	uxth	r6, r0
 8018640:	fa1f f98e 	uxth.w	r9, lr
 8018644:	fb06 f809 	mul.w	r8, r6, r9
 8018648:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801864c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018650:	0136      	lsls	r6, r6, #4
 8018652:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018656:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801865a:	9601      	str	r6, [sp, #4]
 801865c:	ea4a 0101 	orr.w	r1, sl, r1
 8018660:	fa1f f689 	uxth.w	r6, r9
 8018664:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018668:	fb10 f90e 	smulbb	r9, r0, lr
 801866c:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8018670:	9602      	str	r6, [sp, #8]
 8018672:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018676:	460e      	mov	r6, r1
 8018678:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801867c:	f1ce 0110 	rsb	r1, lr, #16
 8018680:	1a09      	subs	r1, r1, r0
 8018682:	ea4a 0303 	orr.w	r3, sl, r3
 8018686:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801868a:	4343      	muls	r3, r0
 801868c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018690:	9801      	ldr	r0, [sp, #4]
 8018692:	fb01 3106 	mla	r1, r1, r6, r3
 8018696:	9e02      	ldr	r6, [sp, #8]
 8018698:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801869c:	1b80      	subs	r0, r0, r6
 801869e:	9e01      	ldr	r6, [sp, #4]
 80186a0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80186a4:	eba6 0608 	sub.w	r6, r6, r8
 80186a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186ac:	b2b6      	uxth	r6, r6
 80186ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80186b2:	ea4a 0202 	orr.w	r2, sl, r2
 80186b6:	b280      	uxth	r0, r0
 80186b8:	4374      	muls	r4, r6
 80186ba:	fb09 1302 	mla	r3, r9, r2, r1
 80186be:	fb0c 4400 	mla	r4, ip, r0, r4
 80186c2:	9a03      	ldr	r2, [sp, #12]
 80186c4:	9802      	ldr	r0, [sp, #8]
 80186c6:	8811      	ldrh	r1, [r2, #0]
 80186c8:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80186cc:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80186d0:	fb00 4505 	mla	r5, r0, r5, r4
 80186d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186d8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80186dc:	fb08 5707 	mla	r7, r8, r7, r5
 80186e0:	ea4a 0b0b 	orr.w	fp, sl, fp
 80186e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80186e8:	b292      	uxth	r2, r2
 80186ea:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80186ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80186f2:	4357      	muls	r7, r2
 80186f4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80186f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80186fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018700:	f107 0801 	add.w	r8, r7, #1
 8018704:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018708:	ea43 0e0e 	orr.w	lr, r3, lr
 801870c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8018710:	fa1f f38e 	uxth.w	r3, lr
 8018714:	1208      	asrs	r0, r1, #8
 8018716:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801871a:	b2ff      	uxtb	r7, r7
 801871c:	121c      	asrs	r4, r3, #8
 801871e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018722:	fb10 f007 	smulbb	r0, r0, r7
 8018726:	10cd      	asrs	r5, r1, #3
 8018728:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801872c:	fb04 0402 	mla	r4, r4, r2, r0
 8018730:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018734:	10d8      	asrs	r0, r3, #3
 8018736:	fb15 f507 	smulbb	r5, r5, r7
 801873a:	00db      	lsls	r3, r3, #3
 801873c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018740:	fb00 5002 	mla	r0, r0, r2, r5
 8018744:	b2dd      	uxtb	r5, r3
 8018746:	00cb      	lsls	r3, r1, #3
 8018748:	b2db      	uxtb	r3, r3
 801874a:	fb13 f307 	smulbb	r3, r3, r7
 801874e:	fb05 3202 	mla	r2, r5, r2, r3
 8018752:	b2a4      	uxth	r4, r4
 8018754:	b292      	uxth	r2, r2
 8018756:	1c63      	adds	r3, r4, #1
 8018758:	b280      	uxth	r0, r0
 801875a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801875e:	1c53      	adds	r3, r2, #1
 8018760:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018764:	1c42      	adds	r2, r0, #1
 8018766:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801876a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801876e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018772:	0940      	lsrs	r0, r0, #5
 8018774:	4323      	orrs	r3, r4
 8018776:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801877a:	9a03      	ldr	r2, [sp, #12]
 801877c:	4303      	orrs	r3, r0
 801877e:	8013      	strh	r3, [r2, #0]
 8018780:	b005      	add	sp, #20
 8018782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018786:	280f      	cmp	r0, #15
 8018788:	f63f af33 	bhi.w	80185f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801878c:	4677      	mov	r7, lr
 801878e:	4675      	mov	r5, lr
 8018790:	4672      	mov	r2, lr
 8018792:	46f3      	mov	fp, lr
 8018794:	e753      	b.n	801863e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8018796:	bf00      	nop
 8018798:	080214b7 	.word	0x080214b7
 801879c:	080219e6 	.word	0x080219e6
 80187a0:	08021484 	.word	0x08021484

080187a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187a8:	ed2d 8b08 	vpush	{d8-d11}
 80187ac:	b097      	sub	sp, #92	; 0x5c
 80187ae:	eeb0 aa40 	vmov.f32	s20, s0
 80187b2:	9214      	str	r2, [sp, #80]	; 0x50
 80187b4:	9308      	str	r3, [sp, #32]
 80187b6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80187b8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80187bc:	9312      	str	r3, [sp, #72]	; 0x48
 80187be:	9111      	str	r1, [sp, #68]	; 0x44
 80187c0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80187c4:	9015      	str	r0, [sp, #84]	; 0x54
 80187c6:	6850      	ldr	r0, [r2, #4]
 80187c8:	6812      	ldr	r2, [r2, #0]
 80187ca:	fb00 1303 	mla	r3, r0, r3, r1
 80187ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80187d2:	9309      	str	r3, [sp, #36]	; 0x24
 80187d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80187d6:	681b      	ldr	r3, [r3, #0]
 80187d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80187da:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80187dc:	685b      	ldr	r3, [r3, #4]
 80187de:	930c      	str	r3, [sp, #48]	; 0x30
 80187e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80187e4:	930a      	str	r3, [sp, #40]	; 0x28
 80187e6:	eef0 9a60 	vmov.f32	s19, s1
 80187ea:	eeb0 9a41 	vmov.f32	s18, s2
 80187ee:	eeb0 8a62 	vmov.f32	s16, s5
 80187f2:	eef0 8a43 	vmov.f32	s17, s6
 80187f6:	eef0 ba44 	vmov.f32	s23, s8
 80187fa:	eeb0 ba64 	vmov.f32	s22, s9
 80187fe:	eef0 aa45 	vmov.f32	s21, s10
 8018802:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018804:	2b00      	cmp	r3, #0
 8018806:	dc03      	bgt.n	8018810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018808:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801880a:	2b00      	cmp	r3, #0
 801880c:	f340 83cb 	ble.w	8018fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018810:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018812:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018816:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801881a:	1e48      	subs	r0, r1, #1
 801881c:	1e55      	subs	r5, r2, #1
 801881e:	9b08      	ldr	r3, [sp, #32]
 8018820:	2b00      	cmp	r3, #0
 8018822:	f340 81a3 	ble.w	8018b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8018826:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8018828:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801882a:	1436      	asrs	r6, r6, #16
 801882c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018830:	d406      	bmi.n	8018840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018832:	4286      	cmp	r6, r0
 8018834:	da04      	bge.n	8018840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018836:	2b00      	cmp	r3, #0
 8018838:	db02      	blt.n	8018840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801883a:	42ab      	cmp	r3, r5
 801883c:	f2c0 8197 	blt.w	8018b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018840:	3601      	adds	r6, #1
 8018842:	f100 8184 	bmi.w	8018b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018846:	42b1      	cmp	r1, r6
 8018848:	f2c0 8181 	blt.w	8018b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801884c:	3301      	adds	r3, #1
 801884e:	f100 817e 	bmi.w	8018b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018852:	429a      	cmp	r2, r3
 8018854:	f2c0 817b 	blt.w	8018b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018858:	9b08      	ldr	r3, [sp, #32]
 801885a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801885c:	9313      	str	r3, [sp, #76]	; 0x4c
 801885e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018862:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018864:	2b00      	cmp	r3, #0
 8018866:	f340 81a4 	ble.w	8018bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801886a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801886c:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801886e:	1418      	asrs	r0, r3, #16
 8018870:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018872:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018876:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018878:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801887c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801887e:	142d      	asrs	r5, r5, #16
 8018880:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018884:	f100 81f8 	bmi.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018888:	f102 3eff 	add.w	lr, r2, #4294967295
 801888c:	4575      	cmp	r5, lr
 801888e:	f280 81f3 	bge.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018892:	2800      	cmp	r0, #0
 8018894:	f2c0 81f0 	blt.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018898:	f103 3eff 	add.w	lr, r3, #4294967295
 801889c:	4570      	cmp	r0, lr
 801889e:	f280 81eb 	bge.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80188a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80188a4:	b212      	sxth	r2, r2
 80188a6:	fb00 5002 	mla	r0, r0, r2, r5
 80188aa:	fa1f fe81 	uxth.w	lr, r1
 80188ae:	eb03 0a00 	add.w	sl, r3, r0
 80188b2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80188b6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80188ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80188be:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80188c2:	b29b      	uxth	r3, r3
 80188c4:	f1bc 0f00 	cmp.w	ip, #0
 80188c8:	f000 81b9 	beq.w	8018c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80188cc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80188d0:	940d      	str	r4, [sp, #52]	; 0x34
 80188d2:	eb0a 0b02 	add.w	fp, sl, r2
 80188d6:	fa1f fa8c 	uxth.w	sl, ip
 80188da:	fb0a fe0e 	mul.w	lr, sl, lr
 80188de:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80188e2:	fa1f fa8a 	uxth.w	sl, sl
 80188e6:	eba5 050e 	sub.w	r5, r5, lr
 80188ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80188ee:	940e      	str	r4, [sp, #56]	; 0x38
 80188f0:	eba3 030a 	sub.w	r3, r3, sl
 80188f4:	b2ad      	uxth	r5, r5
 80188f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188f8:	b29b      	uxth	r3, r3
 80188fa:	fb08 f505 	mul.w	r5, r8, r5
 80188fe:	fb09 5303 	mla	r3, r9, r3, r5
 8018902:	fb0a 3304 	mla	r3, sl, r4, r3
 8018906:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018908:	fb0e 3304 	mla	r3, lr, r4, r3
 801890c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018910:	2b00      	cmp	r3, #0
 8018912:	f000 810f 	beq.w	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018916:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018918:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801891c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018920:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018924:	f000 8190 	beq.w	8018c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8018928:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801892c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018930:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018934:	fb09 f000 	mul.w	r0, r9, r0
 8018938:	fb0a fe0e 	mul.w	lr, sl, lr
 801893c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018940:	f100 0b20 	add.w	fp, r0, #32
 8018944:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018948:	44ce      	add	lr, r9
 801894a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801894e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018952:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018956:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801895a:	ea4e 0909 	orr.w	r9, lr, r9
 801895e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018962:	8868      	ldrh	r0, [r5, #2]
 8018964:	d019      	beq.n	801899a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018966:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801896a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801896e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018972:	fb08 f800 	mul.w	r8, r8, r0
 8018976:	fb0a fe0e 	mul.w	lr, sl, lr
 801897a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801897e:	f108 0b20 	add.w	fp, r8, #32
 8018982:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018986:	4486      	add	lr, r0
 8018988:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801898c:	0a00      	lsrs	r0, r0, #8
 801898e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018992:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018996:	ea4e 0000 	orr.w	r0, lr, r0
 801899a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801899e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80189a2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80189a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80189aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189b2:	ea4e 0909 	orr.w	r9, lr, r9
 80189b6:	ea4a 0000 	orr.w	r0, sl, r0
 80189ba:	f1bc 0f00 	cmp.w	ip, #0
 80189be:	f000 8145 	beq.w	8018c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80189c2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80189c6:	3a01      	subs	r2, #1
 80189c8:	0052      	lsls	r2, r2, #1
 80189ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80189cc:	3202      	adds	r2, #2
 80189ce:	2cff      	cmp	r4, #255	; 0xff
 80189d0:	eb05 0e02 	add.w	lr, r5, r2
 80189d4:	5aaa      	ldrh	r2, [r5, r2]
 80189d6:	d018      	beq.n	8018a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80189d8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80189dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189e0:	fb04 fa02 	mul.w	sl, r4, r2
 80189e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80189e8:	fb08 f805 	mul.w	r8, r8, r5
 80189ec:	f10a 0520 	add.w	r5, sl, #32
 80189f0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80189f4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80189f8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80189fc:	4442      	add	r2, r8
 80189fe:	0a2d      	lsrs	r5, r5, #8
 8018a00:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018a04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018a08:	432a      	orrs	r2, r5
 8018a0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018a0c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018a10:	2cff      	cmp	r4, #255	; 0xff
 8018a12:	d01a      	beq.n	8018a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018a14:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018a18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018a1c:	fb04 fa05 	mul.w	sl, r4, r5
 8018a20:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018a24:	fb08 f80e 	mul.w	r8, r8, lr
 8018a28:	f10a 0e20 	add.w	lr, sl, #32
 8018a2c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018a30:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018a34:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018a38:	4445      	add	r5, r8
 8018a3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018a3e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018a42:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018a46:	ea45 050e 	orr.w	r5, r5, lr
 8018a4a:	fb1c fe01 	smulbb	lr, ip, r1
 8018a4e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018a52:	f1cc 0810 	rsb	r8, ip, #16
 8018a56:	eba8 0801 	sub.w	r8, r8, r1
 8018a5a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018a5e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018a62:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018a66:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8018a6a:	4341      	muls	r1, r0
 8018a6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018a70:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a74:	ea4a 0202 	orr.w	r2, sl, r2
 8018a78:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018a7c:	fb09 1108 	mla	r1, r9, r8, r1
 8018a80:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018a84:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018a88:	fb0c 1102 	mla	r1, ip, r2, r1
 8018a8c:	ea4b 0505 	orr.w	r5, fp, r5
 8018a90:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018a94:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018a98:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018a9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018aa0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018aa4:	ea42 0e0e 	orr.w	lr, r2, lr
 8018aa8:	fa1f f28e 	uxth.w	r2, lr
 8018aac:	2bff      	cmp	r3, #255	; 0xff
 8018aae:	d103      	bne.n	8018ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018ab0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018ab2:	29ff      	cmp	r1, #255	; 0xff
 8018ab4:	f000 80de 	beq.w	8018c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8018ab8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018aba:	8838      	ldrh	r0, [r7, #0]
 8018abc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018abe:	434b      	muls	r3, r1
 8018ac0:	f103 0c01 	add.w	ip, r3, #1
 8018ac4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8018ac8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018acc:	fa5f fc83 	uxtb.w	ip, r3
 8018ad0:	1203      	asrs	r3, r0, #8
 8018ad2:	1215      	asrs	r5, r2, #8
 8018ad4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018ad8:	fb13 f30c 	smulbb	r3, r3, ip
 8018adc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018ae0:	fb05 3501 	mla	r5, r5, r1, r3
 8018ae4:	10c3      	asrs	r3, r0, #3
 8018ae6:	10d1      	asrs	r1, r2, #3
 8018ae8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018aec:	fb13 f30c 	smulbb	r3, r3, ip
 8018af0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018af4:	fb01 3104 	mla	r1, r1, r4, r3
 8018af8:	00c3      	lsls	r3, r0, #3
 8018afa:	00d2      	lsls	r2, r2, #3
 8018afc:	b2db      	uxtb	r3, r3
 8018afe:	b2d2      	uxtb	r2, r2
 8018b00:	fb13 f30c 	smulbb	r3, r3, ip
 8018b04:	b2ad      	uxth	r5, r5
 8018b06:	fb02 3304 	mla	r3, r2, r4, r3
 8018b0a:	b29a      	uxth	r2, r3
 8018b0c:	1c6b      	adds	r3, r5, #1
 8018b0e:	b289      	uxth	r1, r1
 8018b10:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018b14:	1c53      	adds	r3, r2, #1
 8018b16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018b1a:	1c4a      	adds	r2, r1, #1
 8018b1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018b20:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018b24:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018b28:	0949      	lsrs	r1, r1, #5
 8018b2a:	432b      	orrs	r3, r5
 8018b2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018b30:	430b      	orrs	r3, r1
 8018b32:	803b      	strh	r3, [r7, #0]
 8018b34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018b36:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018b38:	4413      	add	r3, r2
 8018b3a:	9329      	str	r3, [sp, #164]	; 0xa4
 8018b3c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018b3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018b40:	441a      	add	r2, r3
 8018b42:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018b44:	922a      	str	r2, [sp, #168]	; 0xa8
 8018b46:	3b01      	subs	r3, #1
 8018b48:	3702      	adds	r7, #2
 8018b4a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018b4c:	e689      	b.n	8018862 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018b4e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018b50:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8018b52:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8018b54:	4433      	add	r3, r6
 8018b56:	9329      	str	r3, [sp, #164]	; 0xa4
 8018b58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018b5a:	441c      	add	r4, r3
 8018b5c:	9b08      	ldr	r3, [sp, #32]
 8018b5e:	942a      	str	r4, [sp, #168]	; 0xa8
 8018b60:	3b01      	subs	r3, #1
 8018b62:	9308      	str	r3, [sp, #32]
 8018b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b66:	3302      	adds	r3, #2
 8018b68:	9309      	str	r3, [sp, #36]	; 0x24
 8018b6a:	e658      	b.n	801881e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018b6c:	d028      	beq.n	8018bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018b6e:	9b08      	ldr	r3, [sp, #32]
 8018b70:	982b      	ldr	r0, [sp, #172]	; 0xac
 8018b72:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8018b74:	3b01      	subs	r3, #1
 8018b76:	fb00 5003 	mla	r0, r0, r3, r5
 8018b7a:	1400      	asrs	r0, r0, #16
 8018b7c:	f53f ae6c 	bmi.w	8018858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018b80:	3901      	subs	r1, #1
 8018b82:	4288      	cmp	r0, r1
 8018b84:	f6bf ae68 	bge.w	8018858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018b88:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8018b8a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8018b8c:	fb01 0303 	mla	r3, r1, r3, r0
 8018b90:	141b      	asrs	r3, r3, #16
 8018b92:	f53f ae61 	bmi.w	8018858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018b96:	3a01      	subs	r2, #1
 8018b98:	4293      	cmp	r3, r2
 8018b9a:	f6bf ae5d 	bge.w	8018858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018b9e:	9b08      	ldr	r3, [sp, #32]
 8018ba0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018ba4:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ba6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018baa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018bac:	2b00      	cmp	r3, #0
 8018bae:	f300 8082 	bgt.w	8018cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018bb2:	9b08      	ldr	r3, [sp, #32]
 8018bb4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018bba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018bbe:	9309      	str	r3, [sp, #36]	; 0x24
 8018bc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018bc2:	2b00      	cmp	r3, #0
 8018bc4:	f340 81ef 	ble.w	8018fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018bc8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018bcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018bd0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018bd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bd6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018bda:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018bde:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018be2:	eef0 6a48 	vmov.f32	s13, s16
 8018be6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018bea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018bee:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018bf2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018bf6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018bfa:	eef0 6a68 	vmov.f32	s13, s17
 8018bfe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018c02:	ee18 2a10 	vmov	r2, s16
 8018c06:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018c0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c0e:	ee18 2a90 	vmov	r2, s17
 8018c12:	932b      	str	r3, [sp, #172]	; 0xac
 8018c14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c16:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c1a:	932c      	str	r3, [sp, #176]	; 0xb0
 8018c1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018c1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018c20:	3b01      	subs	r3, #1
 8018c22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c26:	9311      	str	r3, [sp, #68]	; 0x44
 8018c28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c2a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8018c2e:	bf08      	it	eq
 8018c30:	4613      	moveq	r3, r2
 8018c32:	9308      	str	r3, [sp, #32]
 8018c34:	eef0 8a67 	vmov.f32	s17, s15
 8018c38:	eeb0 8a47 	vmov.f32	s16, s14
 8018c3c:	e5e1      	b.n	8018802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018c3e:	fb08 f505 	mul.w	r5, r8, r5
 8018c42:	fb09 5303 	mla	r3, r9, r3, r5
 8018c46:	e661      	b.n	801890c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8018c48:	4681      	mov	r9, r0
 8018c4a:	e688      	b.n	801895e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8018c4c:	f1c1 0210 	rsb	r2, r1, #16
 8018c50:	4341      	muls	r1, r0
 8018c52:	fb09 1902 	mla	r9, r9, r2, r1
 8018c56:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018c5a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018c5e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018c62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c66:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018c6a:	ea42 0909 	orr.w	r9, r2, r9
 8018c6e:	fa1f f289 	uxth.w	r2, r9
 8018c72:	e71b      	b.n	8018aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8018c74:	803a      	strh	r2, [r7, #0]
 8018c76:	e75d      	b.n	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c78:	f115 0e01 	adds.w	lr, r5, #1
 8018c7c:	f53f af5a 	bmi.w	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c80:	4572      	cmp	r2, lr
 8018c82:	f6ff af57 	blt.w	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c86:	f110 0e01 	adds.w	lr, r0, #1
 8018c8a:	f53f af53 	bmi.w	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c8e:	4573      	cmp	r3, lr
 8018c90:	f6ff af50 	blt.w	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018c96:	9502      	str	r5, [sp, #8]
 8018c98:	b21b      	sxth	r3, r3
 8018c9a:	b212      	sxth	r2, r2
 8018c9c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8018ca0:	9301      	str	r3, [sp, #4]
 8018ca2:	9200      	str	r2, [sp, #0]
 8018ca4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8018ca8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8018cac:	4639      	mov	r1, r7
 8018cae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018cb0:	f7ff fbd2 	bl	8018458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018cb4:	e73e      	b.n	8018b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018cb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018cb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018cbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018cbe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018cc2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018cc4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018cc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018cca:	141f      	asrs	r7, r3, #16
 8018ccc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018cce:	141b      	asrs	r3, r3, #16
 8018cd0:	fb01 3707 	mla	r7, r1, r7, r3
 8018cd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018cd6:	fa1f fc82 	uxth.w	ip, r2
 8018cda:	eb03 0a07 	add.w	sl, r3, r7
 8018cde:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018ce2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018ce6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018cea:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018cee:	b29b      	uxth	r3, r3
 8018cf0:	2d00      	cmp	r5, #0
 8018cf2:	f000 813d 	beq.w	8018f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8018cf6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018cfa:	940f      	str	r4, [sp, #60]	; 0x3c
 8018cfc:	eb0a 0b01 	add.w	fp, sl, r1
 8018d00:	fa1f fa85 	uxth.w	sl, r5
 8018d04:	fb0a fc0c 	mul.w	ip, sl, ip
 8018d08:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018d0c:	fa1f fa8a 	uxth.w	sl, sl
 8018d10:	eba0 000c 	sub.w	r0, r0, ip
 8018d14:	eba3 030a 	sub.w	r3, r3, sl
 8018d18:	b280      	uxth	r0, r0
 8018d1a:	fb08 f000 	mul.w	r0, r8, r0
 8018d1e:	b29b      	uxth	r3, r3
 8018d20:	fb09 0303 	mla	r3, r9, r3, r0
 8018d24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018d26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018d2a:	9410      	str	r4, [sp, #64]	; 0x40
 8018d2c:	fb0a 3300 	mla	r3, sl, r0, r3
 8018d30:	fb0c 3304 	mla	r3, ip, r4, r3
 8018d34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018d38:	2b00      	cmp	r3, #0
 8018d3a:	f000 810b 	beq.w	8018f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8018d3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018d40:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018d42:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018d46:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018d4a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018d4e:	f000 8114 	beq.w	8018f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8018d52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018d56:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018d5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018d5e:	fb09 f707 	mul.w	r7, r9, r7
 8018d62:	fb0a fc0c 	mul.w	ip, sl, ip
 8018d66:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018d6a:	f107 0b20 	add.w	fp, r7, #32
 8018d6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018d72:	44cc      	add	ip, r9
 8018d74:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018d78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018d7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018d80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018d84:	ea4c 0909 	orr.w	r9, ip, r9
 8018d88:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018d8c:	8847      	ldrh	r7, [r0, #2]
 8018d8e:	d019      	beq.n	8018dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8018d90:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018d94:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018d98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018d9c:	fb08 f807 	mul.w	r8, r8, r7
 8018da0:	fb0a fc0c 	mul.w	ip, sl, ip
 8018da4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018da8:	f108 0b20 	add.w	fp, r8, #32
 8018dac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018db0:	44bc      	add	ip, r7
 8018db2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018db6:	0a3f      	lsrs	r7, r7, #8
 8018db8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018dbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018dc0:	ea4c 0707 	orr.w	r7, ip, r7
 8018dc4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018dc8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018dcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018dd0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018dd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018dd8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018ddc:	ea4c 0909 	orr.w	r9, ip, r9
 8018de0:	ea4a 0707 	orr.w	r7, sl, r7
 8018de4:	2d00      	cmp	r5, #0
 8018de6:	f000 80ca 	beq.w	8018f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8018dea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018dee:	3901      	subs	r1, #1
 8018df0:	0049      	lsls	r1, r1, #1
 8018df2:	3102      	adds	r1, #2
 8018df4:	eb00 0c01 	add.w	ip, r0, r1
 8018df8:	5a41      	ldrh	r1, [r0, r1]
 8018dfa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018dfc:	28ff      	cmp	r0, #255	; 0xff
 8018dfe:	d019      	beq.n	8018e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8018e00:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018e02:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018e06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e0a:	fb04 fa01 	mul.w	sl, r4, r1
 8018e0e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018e12:	fb08 f800 	mul.w	r8, r8, r0
 8018e16:	f10a 0020 	add.w	r0, sl, #32
 8018e1a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018e1e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018e22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018e26:	4441      	add	r1, r8
 8018e28:	0a00      	lsrs	r0, r0, #8
 8018e2a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018e2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018e32:	4301      	orrs	r1, r0
 8018e34:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018e36:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018e3a:	2cff      	cmp	r4, #255	; 0xff
 8018e3c:	d01a      	beq.n	8018e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8018e3e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018e42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018e46:	fb04 fa00 	mul.w	sl, r4, r0
 8018e4a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018e4e:	fb08 f80c 	mul.w	r8, r8, ip
 8018e52:	f10a 0c20 	add.w	ip, sl, #32
 8018e56:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018e5a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018e5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018e62:	4440      	add	r0, r8
 8018e64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e68:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018e6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018e70:	ea40 000c 	orr.w	r0, r0, ip
 8018e74:	fb15 fc02 	smulbb	ip, r5, r2
 8018e78:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018e7c:	f1c5 0810 	rsb	r8, r5, #16
 8018e80:	eba8 0802 	sub.w	r8, r8, r2
 8018e84:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018e88:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018e8c:	437a      	muls	r2, r7
 8018e8e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018e92:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018e96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018e9a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e9e:	fb09 2208 	mla	r2, r9, r8, r2
 8018ea2:	ea4a 0101 	orr.w	r1, sl, r1
 8018ea6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018eaa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018eae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018eb2:	fb05 2201 	mla	r2, r5, r1, r2
 8018eb6:	ea4b 0000 	orr.w	r0, fp, r0
 8018eba:	fb0c 2200 	mla	r2, ip, r0, r2
 8018ebe:	0d57      	lsrs	r7, r2, #21
 8018ec0:	0952      	lsrs	r2, r2, #5
 8018ec2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018ec6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018eca:	433a      	orrs	r2, r7
 8018ecc:	2bff      	cmp	r3, #255	; 0xff
 8018ece:	b292      	uxth	r2, r2
 8018ed0:	d102      	bne.n	8018ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8018ed2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018ed4:	29ff      	cmp	r1, #255	; 0xff
 8018ed6:	d063      	beq.n	8018fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8018ed8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018eda:	f8be 1000 	ldrh.w	r1, [lr]
 8018ede:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018ee0:	4343      	muls	r3, r0
 8018ee2:	1c58      	adds	r0, r3, #1
 8018ee4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8018ee8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018eec:	1208      	asrs	r0, r1, #8
 8018eee:	b2db      	uxtb	r3, r3
 8018ef0:	1215      	asrs	r5, r2, #8
 8018ef2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018ef6:	fb10 f003 	smulbb	r0, r0, r3
 8018efa:	10cf      	asrs	r7, r1, #3
 8018efc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018f00:	00c9      	lsls	r1, r1, #3
 8018f02:	fb05 0504 	mla	r5, r5, r4, r0
 8018f06:	b2c9      	uxtb	r1, r1
 8018f08:	10d0      	asrs	r0, r2, #3
 8018f0a:	00d2      	lsls	r2, r2, #3
 8018f0c:	fb11 f103 	smulbb	r1, r1, r3
 8018f10:	b2d2      	uxtb	r2, r2
 8018f12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f16:	fb02 1204 	mla	r2, r2, r4, r1
 8018f1a:	fb17 f703 	smulbb	r7, r7, r3
 8018f1e:	b2ad      	uxth	r5, r5
 8018f20:	b292      	uxth	r2, r2
 8018f22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018f26:	fb00 7004 	mla	r0, r0, r4, r7
 8018f2a:	1c6b      	adds	r3, r5, #1
 8018f2c:	1c57      	adds	r7, r2, #1
 8018f2e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018f32:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018f36:	b280      	uxth	r0, r0
 8018f38:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018f3c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018f40:	433d      	orrs	r5, r7
 8018f42:	1c47      	adds	r7, r0, #1
 8018f44:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018f48:	097f      	lsrs	r7, r7, #5
 8018f4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018f4e:	433d      	orrs	r5, r7
 8018f50:	f8ae 5000 	strh.w	r5, [lr]
 8018f54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018f56:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018f58:	4413      	add	r3, r2
 8018f5a:	9329      	str	r3, [sp, #164]	; 0xa4
 8018f5c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018f5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018f60:	441a      	add	r2, r3
 8018f62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018f64:	922a      	str	r2, [sp, #168]	; 0xa8
 8018f66:	3b01      	subs	r3, #1
 8018f68:	f10e 0e02 	add.w	lr, lr, #2
 8018f6c:	9313      	str	r3, [sp, #76]	; 0x4c
 8018f6e:	e61c      	b.n	8018baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8018f70:	fb08 f000 	mul.w	r0, r8, r0
 8018f74:	fb09 0303 	mla	r3, r9, r3, r0
 8018f78:	e6dc      	b.n	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8018f7a:	46b9      	mov	r9, r7
 8018f7c:	e704      	b.n	8018d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8018f7e:	f1c2 0110 	rsb	r1, r2, #16
 8018f82:	437a      	muls	r2, r7
 8018f84:	fb09 2901 	mla	r9, r9, r1, r2
 8018f88:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018f8c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018f90:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018f94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018f98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f9c:	4302      	orrs	r2, r0
 8018f9e:	e795      	b.n	8018ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8018fa0:	f8ae 2000 	strh.w	r2, [lr]
 8018fa4:	e7d6      	b.n	8018f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8018fa6:	b017      	add	sp, #92	; 0x5c
 8018fa8:	ecbd 8b08 	vpop	{d8-d11}
 8018fac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018fb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fb4:	b085      	sub	sp, #20
 8018fb6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018fba:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018fbe:	9103      	str	r1, [sp, #12]
 8018fc0:	fb05 7106 	mla	r1, r5, r6, r7
 8018fc4:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8018fc8:	2d00      	cmp	r5, #0
 8018fca:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018fce:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018fd2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8018fd6:	9401      	str	r4, [sp, #4]
 8018fd8:	eb02 0901 	add.w	r9, r2, r1
 8018fdc:	f2c0 80c0 	blt.w	8019160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018fe0:	45a8      	cmp	r8, r5
 8018fe2:	f340 80bd 	ble.w	8019160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018fe6:	2f00      	cmp	r7, #0
 8018fe8:	f2c0 80b6 	blt.w	8019158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018fec:	42be      	cmp	r6, r7
 8018fee:	f340 80b3 	ble.w	8019158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018ff2:	f812 c001 	ldrb.w	ip, [r2, r1]
 8018ff6:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8018ffa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018ffe:	d019      	beq.n	8019034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8019000:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8019004:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019008:	435a      	muls	r2, r3
 801900a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801900e:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8019012:	fb0c f403 	mul.w	r4, ip, r3
 8019016:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801901a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801901e:	441a      	add	r2, r3
 8019020:	f104 0320 	add.w	r3, r4, #32
 8019024:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8019028:	0a1b      	lsrs	r3, r3, #8
 801902a:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801902e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019032:	4319      	orrs	r1, r3
 8019034:	b289      	uxth	r1, r1
 8019036:	1c7b      	adds	r3, r7, #1
 8019038:	f100 8097 	bmi.w	801916a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801903c:	429e      	cmp	r6, r3
 801903e:	f340 8094 	ble.w	801916a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8019042:	2800      	cmp	r0, #0
 8019044:	f000 8094 	beq.w	8019170 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8019048:	f899 4001 	ldrb.w	r4, [r9, #1]
 801904c:	9b01      	ldr	r3, [sp, #4]
 801904e:	2cff      	cmp	r4, #255	; 0xff
 8019050:	885b      	ldrh	r3, [r3, #2]
 8019052:	d01b      	beq.n	801908c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8019054:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8019058:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801905c:	fb0a f202 	mul.w	r2, sl, r2
 8019060:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019064:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019068:	fb04 fa03 	mul.w	sl, r4, r3
 801906c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8019070:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019074:	441a      	add	r2, r3
 8019076:	f10a 0320 	add.w	r3, sl, #32
 801907a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801907e:	0a1b      	lsrs	r3, r3, #8
 8019080:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8019084:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019088:	ea4b 0303 	orr.w	r3, fp, r3
 801908c:	b29b      	uxth	r3, r3
 801908e:	3501      	adds	r5, #1
 8019090:	d474      	bmi.n	801917c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8019092:	45a8      	cmp	r8, r5
 8019094:	dd72      	ble.n	801917c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8019096:	f1be 0f00 	cmp.w	lr, #0
 801909a:	f000 8110 	beq.w	80192be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801909e:	2f00      	cmp	r7, #0
 80190a0:	db69      	blt.n	8019176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80190a2:	42be      	cmp	r6, r7
 80190a4:	dd67      	ble.n	8019176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80190a6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80190aa:	9a01      	ldr	r2, [sp, #4]
 80190ac:	2dff      	cmp	r5, #255	; 0xff
 80190ae:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80190b2:	d01c      	beq.n	80190ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80190b4:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80190b8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80190bc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190c0:	fb05 fa0b 	mul.w	sl, r5, fp
 80190c4:	fb08 f802 	mul.w	r8, r8, r2
 80190c8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80190cc:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80190d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80190d4:	4490      	add	r8, r2
 80190d6:	f10a 0220 	add.w	r2, sl, #32
 80190da:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80190de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190e2:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80190e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80190ea:	ea4b 0b0a 	orr.w	fp, fp, sl
 80190ee:	fa1f fb8b 	uxth.w	fp, fp
 80190f2:	3701      	adds	r7, #1
 80190f4:	d447      	bmi.n	8019186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80190f6:	42be      	cmp	r6, r7
 80190f8:	dd45      	ble.n	8019186 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80190fa:	2800      	cmp	r0, #0
 80190fc:	d046      	beq.n	801918c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80190fe:	3601      	adds	r6, #1
 8019100:	9a01      	ldr	r2, [sp, #4]
 8019102:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019106:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801910a:	2fff      	cmp	r7, #255	; 0xff
 801910c:	d01a      	beq.n	8019144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801910e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8019112:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8019116:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801911a:	fb07 f902 	mul.w	r9, r7, r2
 801911e:	fb08 f806 	mul.w	r8, r8, r6
 8019122:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8019126:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801912a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801912e:	44b0      	add	r8, r6
 8019130:	f109 0620 	add.w	r6, r9, #32
 8019134:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8019138:	0a36      	lsrs	r6, r6, #8
 801913a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801913e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019142:	4332      	orrs	r2, r6
 8019144:	b292      	uxth	r2, r2
 8019146:	280f      	cmp	r0, #15
 8019148:	d922      	bls.n	8019190 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801914a:	4b61      	ldr	r3, [pc, #388]	; (80192d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801914c:	4a61      	ldr	r2, [pc, #388]	; (80192d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801914e:	4862      	ldr	r0, [pc, #392]	; (80192d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8019150:	f240 11f9 	movw	r1, #505	; 0x1f9
 8019154:	f004 fa2e 	bl	801d5b4 <__assert_func>
 8019158:	f04f 0c00 	mov.w	ip, #0
 801915c:	4661      	mov	r1, ip
 801915e:	e76a      	b.n	8019036 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8019160:	2400      	movs	r4, #0
 8019162:	46a4      	mov	ip, r4
 8019164:	4623      	mov	r3, r4
 8019166:	4621      	mov	r1, r4
 8019168:	e791      	b.n	801908e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801916a:	2400      	movs	r4, #0
 801916c:	4623      	mov	r3, r4
 801916e:	e78e      	b.n	801908e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8019170:	4604      	mov	r4, r0
 8019172:	4603      	mov	r3, r0
 8019174:	e78b      	b.n	801908e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8019176:	2500      	movs	r5, #0
 8019178:	46ab      	mov	fp, r5
 801917a:	e7ba      	b.n	80190f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801917c:	2700      	movs	r7, #0
 801917e:	463d      	mov	r5, r7
 8019180:	463a      	mov	r2, r7
 8019182:	46bb      	mov	fp, r7
 8019184:	e7df      	b.n	8019146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8019186:	2700      	movs	r7, #0
 8019188:	463a      	mov	r2, r7
 801918a:	e7dc      	b.n	8019146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801918c:	4607      	mov	r7, r0
 801918e:	4602      	mov	r2, r0
 8019190:	f1be 0f0f 	cmp.w	lr, #15
 8019194:	d8d9      	bhi.n	801914a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8019196:	b286      	uxth	r6, r0
 8019198:	fa1f f98e 	uxth.w	r9, lr
 801919c:	fb06 f809 	mul.w	r8, r6, r9
 80191a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80191a4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80191a8:	0136      	lsls	r6, r6, #4
 80191aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191ae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80191b2:	9601      	str	r6, [sp, #4]
 80191b4:	ea4a 0101 	orr.w	r1, sl, r1
 80191b8:	fa1f f689 	uxth.w	r6, r9
 80191bc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80191c0:	fb10 f90e 	smulbb	r9, r0, lr
 80191c4:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80191c8:	9602      	str	r6, [sp, #8]
 80191ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191ce:	460e      	mov	r6, r1
 80191d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80191d4:	f1ce 0110 	rsb	r1, lr, #16
 80191d8:	1a09      	subs	r1, r1, r0
 80191da:	ea4a 0303 	orr.w	r3, sl, r3
 80191de:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80191e2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80191e6:	4343      	muls	r3, r0
 80191e8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80191ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80191f4:	fb01 3106 	mla	r1, r1, r6, r3
 80191f8:	ea4a 0202 	orr.w	r2, sl, r2
 80191fc:	fb09 1302 	mla	r3, r9, r2, r1
 8019200:	9a03      	ldr	r2, [sp, #12]
 8019202:	9802      	ldr	r0, [sp, #8]
 8019204:	8811      	ldrh	r1, [r2, #0]
 8019206:	9a01      	ldr	r2, [sp, #4]
 8019208:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801920c:	1a12      	subs	r2, r2, r0
 801920e:	9801      	ldr	r0, [sp, #4]
 8019210:	eba0 0608 	sub.w	r6, r0, r8
 8019214:	b2b6      	uxth	r6, r6
 8019216:	b292      	uxth	r2, r2
 8019218:	4374      	muls	r4, r6
 801921a:	fb0c 4402 	mla	r4, ip, r2, r4
 801921e:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8019222:	9a02      	ldr	r2, [sp, #8]
 8019224:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019228:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801922c:	fb02 4505 	mla	r5, r2, r5, r4
 8019230:	ea4a 0b0b 	orr.w	fp, sl, fp
 8019234:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019238:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801923c:	fb08 5707 	mla	r7, r8, r7, r5
 8019240:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8019244:	120a      	asrs	r2, r1, #8
 8019246:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801924a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801924e:	b2ff      	uxtb	r7, r7
 8019250:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019254:	10c8      	asrs	r0, r1, #3
 8019256:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801925a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801925e:	00c9      	lsls	r1, r1, #3
 8019260:	437a      	muls	r2, r7
 8019262:	ea43 0e0e 	orr.w	lr, r3, lr
 8019266:	b2c9      	uxtb	r1, r1
 8019268:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801926c:	fa1f f38e 	uxth.w	r3, lr
 8019270:	4378      	muls	r0, r7
 8019272:	434f      	muls	r7, r1
 8019274:	1c51      	adds	r1, r2, #1
 8019276:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801927a:	121a      	asrs	r2, r3, #8
 801927c:	f022 0207 	bic.w	r2, r2, #7
 8019280:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8019284:	1c41      	adds	r1, r0, #1
 8019286:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801928a:	10d9      	asrs	r1, r3, #3
 801928c:	f021 0103 	bic.w	r1, r1, #3
 8019290:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019294:	0212      	lsls	r2, r2, #8
 8019296:	00c9      	lsls	r1, r1, #3
 8019298:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801929c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80192a0:	430a      	orrs	r2, r1
 80192a2:	1c79      	adds	r1, r7, #1
 80192a4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80192a8:	00db      	lsls	r3, r3, #3
 80192aa:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80192ae:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80192b2:	4313      	orrs	r3, r2
 80192b4:	9a03      	ldr	r2, [sp, #12]
 80192b6:	8013      	strh	r3, [r2, #0]
 80192b8:	b005      	add	sp, #20
 80192ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192be:	280f      	cmp	r0, #15
 80192c0:	f63f af43 	bhi.w	801914a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80192c4:	4677      	mov	r7, lr
 80192c6:	4675      	mov	r5, lr
 80192c8:	4672      	mov	r2, lr
 80192ca:	46f3      	mov	fp, lr
 80192cc:	e763      	b.n	8019196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80192ce:	bf00      	nop
 80192d0:	080214b7 	.word	0x080214b7
 80192d4:	080219e6 	.word	0x080219e6
 80192d8:	08021484 	.word	0x08021484

080192dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192e0:	ed2d 8b08 	vpush	{d8-d11}
 80192e4:	b093      	sub	sp, #76	; 0x4c
 80192e6:	eeb0 aa40 	vmov.f32	s20, s0
 80192ea:	9210      	str	r2, [sp, #64]	; 0x40
 80192ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80192ee:	910e      	str	r1, [sp, #56]	; 0x38
 80192f0:	9306      	str	r3, [sp, #24]
 80192f2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80192f6:	9011      	str	r0, [sp, #68]	; 0x44
 80192f8:	6850      	ldr	r0, [r2, #4]
 80192fa:	6812      	ldr	r2, [r2, #0]
 80192fc:	fb00 1303 	mla	r3, r0, r3, r1
 8019300:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019304:	9307      	str	r3, [sp, #28]
 8019306:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019308:	681b      	ldr	r3, [r3, #0]
 801930a:	9308      	str	r3, [sp, #32]
 801930c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801930e:	685b      	ldr	r3, [r3, #4]
 8019310:	9309      	str	r3, [sp, #36]	; 0x24
 8019312:	eef0 9a60 	vmov.f32	s19, s1
 8019316:	eeb0 9a41 	vmov.f32	s18, s2
 801931a:	eeb0 8a62 	vmov.f32	s16, s5
 801931e:	eef0 8a43 	vmov.f32	s17, s6
 8019322:	eef0 ba44 	vmov.f32	s23, s8
 8019326:	eeb0 ba64 	vmov.f32	s22, s9
 801932a:	eef0 aa45 	vmov.f32	s21, s10
 801932e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019330:	2b00      	cmp	r3, #0
 8019332:	dc03      	bgt.n	801933c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019334:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019336:	2b00      	cmp	r3, #0
 8019338:	f340 83b4 	ble.w	8019aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801933c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801933e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019342:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019346:	1e48      	subs	r0, r1, #1
 8019348:	1e55      	subs	r5, r2, #1
 801934a:	9b06      	ldr	r3, [sp, #24]
 801934c:	2b00      	cmp	r3, #0
 801934e:	f340 8163 	ble.w	8019618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8019352:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8019354:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019356:	1436      	asrs	r6, r6, #16
 8019358:	ea4f 4323 	mov.w	r3, r3, asr #16
 801935c:	d406      	bmi.n	801936c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801935e:	4286      	cmp	r6, r0
 8019360:	da04      	bge.n	801936c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019362:	2b00      	cmp	r3, #0
 8019364:	db02      	blt.n	801936c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019366:	42ab      	cmp	r3, r5
 8019368:	f2c0 8157 	blt.w	801961a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801936c:	3601      	adds	r6, #1
 801936e:	f100 8144 	bmi.w	80195fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019372:	42b1      	cmp	r1, r6
 8019374:	f2c0 8141 	blt.w	80195fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019378:	3301      	adds	r3, #1
 801937a:	f100 813e 	bmi.w	80195fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801937e:	429a      	cmp	r2, r3
 8019380:	f2c0 813b 	blt.w	80195fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019384:	9b06      	ldr	r3, [sp, #24]
 8019386:	9f07      	ldr	r7, [sp, #28]
 8019388:	930f      	str	r3, [sp, #60]	; 0x3c
 801938a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801938e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019390:	2b00      	cmp	r3, #0
 8019392:	f340 8164 	ble.w	801965e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8019396:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019398:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801939a:	1418      	asrs	r0, r3, #16
 801939c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801939e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80193a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80193a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80193a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80193aa:	142d      	asrs	r5, r5, #16
 80193ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80193b0:	f100 81ee 	bmi.w	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80193b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80193b8:	4575      	cmp	r5, lr
 80193ba:	f280 81e9 	bge.w	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80193be:	2800      	cmp	r0, #0
 80193c0:	f2c0 81e6 	blt.w	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80193c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80193c8:	4570      	cmp	r0, lr
 80193ca:	f280 81e1 	bge.w	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80193ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193d0:	b212      	sxth	r2, r2
 80193d2:	fb00 5002 	mla	r0, r0, r2, r5
 80193d6:	fa1f fe81 	uxth.w	lr, r1
 80193da:	eb03 0a00 	add.w	sl, r3, r0
 80193de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80193e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80193e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80193ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80193ee:	b29b      	uxth	r3, r3
 80193f0:	f1bc 0f00 	cmp.w	ip, #0
 80193f4:	f000 8179 	beq.w	80196ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80193f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80193fc:	940a      	str	r4, [sp, #40]	; 0x28
 80193fe:	eb0a 0b02 	add.w	fp, sl, r2
 8019402:	fa1f fa8c 	uxth.w	sl, ip
 8019406:	fb0a fe0e 	mul.w	lr, sl, lr
 801940a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801940e:	fa1f fa8a 	uxth.w	sl, sl
 8019412:	eba5 050e 	sub.w	r5, r5, lr
 8019416:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801941a:	940b      	str	r4, [sp, #44]	; 0x2c
 801941c:	eba3 030a 	sub.w	r3, r3, sl
 8019420:	b2ad      	uxth	r5, r5
 8019422:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019424:	b29b      	uxth	r3, r3
 8019426:	fb08 f505 	mul.w	r5, r8, r5
 801942a:	fb09 5303 	mla	r3, r9, r3, r5
 801942e:	fb0a 3304 	mla	r3, sl, r4, r3
 8019432:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019434:	fb0e 3304 	mla	r3, lr, r4, r3
 8019438:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801943c:	2b00      	cmp	r3, #0
 801943e:	f000 80cf 	beq.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8019442:	9c08      	ldr	r4, [sp, #32]
 8019444:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019448:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801944c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019450:	f000 8150 	beq.w	80196f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8019454:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019458:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801945c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019460:	fb09 f000 	mul.w	r0, r9, r0
 8019464:	fb0a fe0e 	mul.w	lr, sl, lr
 8019468:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801946c:	f100 0b20 	add.w	fp, r0, #32
 8019470:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019474:	44ce      	add	lr, r9
 8019476:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801947a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801947e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019482:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019486:	ea4e 0909 	orr.w	r9, lr, r9
 801948a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801948e:	8868      	ldrh	r0, [r5, #2]
 8019490:	d019      	beq.n	80194c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019492:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019496:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801949a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801949e:	fb08 f800 	mul.w	r8, r8, r0
 80194a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80194a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80194aa:	f108 0b20 	add.w	fp, r8, #32
 80194ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80194b2:	4486      	add	lr, r0
 80194b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80194b8:	0a00      	lsrs	r0, r0, #8
 80194ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80194be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80194c2:	ea4e 0000 	orr.w	r0, lr, r0
 80194c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80194ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80194ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80194d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80194d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194de:	ea4e 0909 	orr.w	r9, lr, r9
 80194e2:	ea4a 0000 	orr.w	r0, sl, r0
 80194e6:	f1bc 0f00 	cmp.w	ip, #0
 80194ea:	f000 8105 	beq.w	80196f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80194ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80194f2:	3a01      	subs	r2, #1
 80194f4:	0052      	lsls	r2, r2, #1
 80194f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80194f8:	3202      	adds	r2, #2
 80194fa:	2cff      	cmp	r4, #255	; 0xff
 80194fc:	eb05 0e02 	add.w	lr, r5, r2
 8019500:	5aaa      	ldrh	r2, [r5, r2]
 8019502:	d018      	beq.n	8019536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019504:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019508:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801950c:	fb04 fa02 	mul.w	sl, r4, r2
 8019510:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019514:	fb08 f805 	mul.w	r8, r8, r5
 8019518:	f10a 0520 	add.w	r5, sl, #32
 801951c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019520:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019524:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019528:	4442      	add	r2, r8
 801952a:	0a2d      	lsrs	r5, r5, #8
 801952c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019530:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019534:	432a      	orrs	r2, r5
 8019536:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019538:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801953c:	2cff      	cmp	r4, #255	; 0xff
 801953e:	d01a      	beq.n	8019576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019540:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8019544:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019548:	fb04 fa05 	mul.w	sl, r4, r5
 801954c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019550:	fb08 f80e 	mul.w	r8, r8, lr
 8019554:	f10a 0e20 	add.w	lr, sl, #32
 8019558:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801955c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019560:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019564:	4445      	add	r5, r8
 8019566:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801956a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801956e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019572:	ea45 050e 	orr.w	r5, r5, lr
 8019576:	fb1c fe01 	smulbb	lr, ip, r1
 801957a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801957e:	f1cc 0810 	rsb	r8, ip, #16
 8019582:	eba8 0801 	sub.w	r8, r8, r1
 8019586:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801958a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801958e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019592:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019596:	4341      	muls	r1, r0
 8019598:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801959c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80195a0:	ea4a 0202 	orr.w	r2, sl, r2
 80195a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80195a8:	fb09 1108 	mla	r1, r9, r8, r1
 80195ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80195b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80195b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80195b8:	ea4b 0505 	orr.w	r5, fp, r5
 80195bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80195c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80195c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80195c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80195cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80195d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80195d4:	fa1f f28e 	uxth.w	r2, lr
 80195d8:	2bff      	cmp	r3, #255	; 0xff
 80195da:	f040 80a1 	bne.w	8019720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80195de:	803a      	strh	r2, [r7, #0]
 80195e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80195e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80195e4:	4413      	add	r3, r2
 80195e6:	9325      	str	r3, [sp, #148]	; 0x94
 80195e8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80195ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80195ec:	441a      	add	r2, r3
 80195ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195f0:	9226      	str	r2, [sp, #152]	; 0x98
 80195f2:	3b01      	subs	r3, #1
 80195f4:	3702      	adds	r7, #2
 80195f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80195f8:	e6c9      	b.n	801938e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80195fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80195fc:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80195fe:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8019600:	4433      	add	r3, r6
 8019602:	9325      	str	r3, [sp, #148]	; 0x94
 8019604:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019606:	441c      	add	r4, r3
 8019608:	9b06      	ldr	r3, [sp, #24]
 801960a:	9426      	str	r4, [sp, #152]	; 0x98
 801960c:	3b01      	subs	r3, #1
 801960e:	9306      	str	r3, [sp, #24]
 8019610:	9b07      	ldr	r3, [sp, #28]
 8019612:	3302      	adds	r3, #2
 8019614:	9307      	str	r3, [sp, #28]
 8019616:	e698      	b.n	801934a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019618:	d028      	beq.n	801966c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801961a:	9b06      	ldr	r3, [sp, #24]
 801961c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801961e:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8019620:	3b01      	subs	r3, #1
 8019622:	fb00 5003 	mla	r0, r0, r3, r5
 8019626:	1400      	asrs	r0, r0, #16
 8019628:	f53f aeac 	bmi.w	8019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801962c:	3901      	subs	r1, #1
 801962e:	4288      	cmp	r0, r1
 8019630:	f6bf aea8 	bge.w	8019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019634:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019636:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019638:	fb01 0303 	mla	r3, r1, r3, r0
 801963c:	141b      	asrs	r3, r3, #16
 801963e:	f53f aea1 	bmi.w	8019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019642:	3a01      	subs	r2, #1
 8019644:	4293      	cmp	r3, r2
 8019646:	f6bf ae9d 	bge.w	8019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801964a:	9b06      	ldr	r3, [sp, #24]
 801964c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019650:	930f      	str	r3, [sp, #60]	; 0x3c
 8019652:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019656:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019658:	2b00      	cmp	r3, #0
 801965a:	f300 80b6 	bgt.w	80197ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801965e:	9b06      	ldr	r3, [sp, #24]
 8019660:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019664:	9b07      	ldr	r3, [sp, #28]
 8019666:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801966a:	9307      	str	r3, [sp, #28]
 801966c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801966e:	2b00      	cmp	r3, #0
 8019670:	f340 8218 	ble.w	8019aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8019674:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019678:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801967c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019680:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019682:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019686:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801968a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801968e:	eef0 6a48 	vmov.f32	s13, s16
 8019692:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019696:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801969a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801969e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80196a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80196a6:	eef0 6a68 	vmov.f32	s13, s17
 80196aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80196ae:	ee18 2a10 	vmov	r2, s16
 80196b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80196b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80196ba:	ee18 2a90 	vmov	r2, s17
 80196be:	9327      	str	r3, [sp, #156]	; 0x9c
 80196c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80196c6:	9328      	str	r3, [sp, #160]	; 0xa0
 80196c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80196ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80196cc:	3b01      	subs	r3, #1
 80196ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196d2:	930e      	str	r3, [sp, #56]	; 0x38
 80196d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196d6:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80196da:	bf08      	it	eq
 80196dc:	4613      	moveq	r3, r2
 80196de:	9306      	str	r3, [sp, #24]
 80196e0:	eef0 8a67 	vmov.f32	s17, s15
 80196e4:	eeb0 8a47 	vmov.f32	s16, s14
 80196e8:	e621      	b.n	801932e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80196ea:	fb08 f505 	mul.w	r5, r8, r5
 80196ee:	fb09 5303 	mla	r3, r9, r3, r5
 80196f2:	e6a1      	b.n	8019438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80196f4:	4681      	mov	r9, r0
 80196f6:	e6c8      	b.n	801948a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80196f8:	f1c1 0210 	rsb	r2, r1, #16
 80196fc:	4341      	muls	r1, r0
 80196fe:	fb09 1902 	mla	r9, r9, r2, r1
 8019702:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019706:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801970a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801970e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019712:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019716:	ea42 0909 	orr.w	r9, r2, r9
 801971a:	fa1f f289 	uxth.w	r2, r9
 801971e:	e75b      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019720:	f8b7 c000 	ldrh.w	ip, [r7]
 8019724:	43db      	mvns	r3, r3
 8019726:	ea4f 202c 	mov.w	r0, ip, asr #8
 801972a:	fa5f fe83 	uxtb.w	lr, r3
 801972e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019732:	fb00 f00e 	mul.w	r0, r0, lr
 8019736:	1c41      	adds	r1, r0, #1
 8019738:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801973c:	1211      	asrs	r1, r2, #8
 801973e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019742:	f021 0107 	bic.w	r1, r1, #7
 8019746:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801974a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801974e:	48d8      	ldr	r0, [pc, #864]	; (8019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8019750:	fb05 f50e 	mul.w	r5, r5, lr
 8019754:	b2c9      	uxtb	r1, r1
 8019756:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801975a:	1c69      	adds	r1, r5, #1
 801975c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019760:	10d1      	asrs	r1, r2, #3
 8019762:	f021 0103 	bic.w	r1, r1, #3
 8019766:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801976a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801976e:	b2db      	uxtb	r3, r3
 8019770:	00c9      	lsls	r1, r1, #3
 8019772:	fb03 f30e 	mul.w	r3, r3, lr
 8019776:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801977a:	4301      	orrs	r1, r0
 801977c:	1c58      	adds	r0, r3, #1
 801977e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019782:	00d2      	lsls	r2, r2, #3
 8019784:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019788:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801978c:	430a      	orrs	r2, r1
 801978e:	e726      	b.n	80195de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019790:	f115 0e01 	adds.w	lr, r5, #1
 8019794:	f53f af24 	bmi.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8019798:	4572      	cmp	r2, lr
 801979a:	f6ff af21 	blt.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801979e:	f110 0e01 	adds.w	lr, r0, #1
 80197a2:	f53f af1d 	bmi.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80197a6:	4573      	cmp	r3, lr
 80197a8:	f6ff af1a 	blt.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80197ac:	b21b      	sxth	r3, r3
 80197ae:	b212      	sxth	r2, r2
 80197b0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80197b4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80197b8:	9301      	str	r3, [sp, #4]
 80197ba:	9200      	str	r2, [sp, #0]
 80197bc:	4639      	mov	r1, r7
 80197be:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80197c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80197c4:	f7ff fbf4 	bl	8018fb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80197c8:	e70a      	b.n	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80197ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80197d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80197d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80197d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80197d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80197dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80197de:	141f      	asrs	r7, r3, #16
 80197e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197e2:	141b      	asrs	r3, r3, #16
 80197e4:	fb01 3707 	mla	r7, r1, r7, r3
 80197e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197ea:	fa1f fc82 	uxth.w	ip, r2
 80197ee:	eb03 0a07 	add.w	sl, r3, r7
 80197f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80197f6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80197fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80197fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019802:	b29b      	uxth	r3, r3
 8019804:	2d00      	cmp	r5, #0
 8019806:	f000 80fe 	beq.w	8019a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801980a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801980e:	940c      	str	r4, [sp, #48]	; 0x30
 8019810:	eb0a 0b01 	add.w	fp, sl, r1
 8019814:	fa1f fa85 	uxth.w	sl, r5
 8019818:	fb0a fc0c 	mul.w	ip, sl, ip
 801981c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019820:	fa1f fa8a 	uxth.w	sl, sl
 8019824:	eba0 000c 	sub.w	r0, r0, ip
 8019828:	eba3 030a 	sub.w	r3, r3, sl
 801982c:	b280      	uxth	r0, r0
 801982e:	fb08 f000 	mul.w	r0, r8, r0
 8019832:	b29b      	uxth	r3, r3
 8019834:	fb09 0303 	mla	r3, r9, r3, r0
 8019838:	980c      	ldr	r0, [sp, #48]	; 0x30
 801983a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801983e:	940d      	str	r4, [sp, #52]	; 0x34
 8019840:	fb0a 3300 	mla	r3, sl, r0, r3
 8019844:	fb0c 3304 	mla	r3, ip, r4, r3
 8019848:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801984c:	2b00      	cmp	r3, #0
 801984e:	f000 80cc 	beq.w	80199ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8019852:	9808      	ldr	r0, [sp, #32]
 8019854:	9c08      	ldr	r4, [sp, #32]
 8019856:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801985a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801985e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019862:	f000 80d5 	beq.w	8019a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8019866:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801986a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801986e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019872:	fb09 f707 	mul.w	r7, r9, r7
 8019876:	fb0a fc0c 	mul.w	ip, sl, ip
 801987a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801987e:	f107 0b20 	add.w	fp, r7, #32
 8019882:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019886:	44cc      	add	ip, r9
 8019888:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801988c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019890:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019894:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019898:	ea4c 0909 	orr.w	r9, ip, r9
 801989c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80198a0:	8847      	ldrh	r7, [r0, #2]
 80198a2:	d019      	beq.n	80198d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80198a4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80198a8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80198ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80198b0:	fb08 f807 	mul.w	r8, r8, r7
 80198b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80198b8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80198bc:	f108 0b20 	add.w	fp, r8, #32
 80198c0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80198c4:	44bc      	add	ip, r7
 80198c6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80198ca:	0a3f      	lsrs	r7, r7, #8
 80198cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80198d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80198d4:	ea4c 0707 	orr.w	r7, ip, r7
 80198d8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80198dc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80198e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80198e4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80198e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80198ec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80198f0:	ea4c 0909 	orr.w	r9, ip, r9
 80198f4:	ea4a 0707 	orr.w	r7, sl, r7
 80198f8:	2d00      	cmp	r5, #0
 80198fa:	f000 808b 	beq.w	8019a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80198fe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019902:	3901      	subs	r1, #1
 8019904:	0049      	lsls	r1, r1, #1
 8019906:	3102      	adds	r1, #2
 8019908:	eb00 0c01 	add.w	ip, r0, r1
 801990c:	5a41      	ldrh	r1, [r0, r1]
 801990e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019910:	28ff      	cmp	r0, #255	; 0xff
 8019912:	d019      	beq.n	8019948 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8019914:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019916:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801991a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801991e:	fb04 fa01 	mul.w	sl, r4, r1
 8019922:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019926:	fb08 f800 	mul.w	r8, r8, r0
 801992a:	f10a 0020 	add.w	r0, sl, #32
 801992e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019932:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019936:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801993a:	4441      	add	r1, r8
 801993c:	0a00      	lsrs	r0, r0, #8
 801993e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019946:	4301      	orrs	r1, r0
 8019948:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801994a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801994e:	2cff      	cmp	r4, #255	; 0xff
 8019950:	d01a      	beq.n	8019988 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8019952:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019956:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801995a:	fb04 fa00 	mul.w	sl, r4, r0
 801995e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019962:	fb08 f80c 	mul.w	r8, r8, ip
 8019966:	f10a 0c20 	add.w	ip, sl, #32
 801996a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801996e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019972:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019976:	4440      	add	r0, r8
 8019978:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801997c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019980:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019984:	ea40 000c 	orr.w	r0, r0, ip
 8019988:	fb15 fc02 	smulbb	ip, r5, r2
 801998c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019990:	f1c5 0810 	rsb	r8, r5, #16
 8019994:	eba8 0802 	sub.w	r8, r8, r2
 8019998:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801999c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80199a0:	437a      	muls	r2, r7
 80199a2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80199a6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80199aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80199ae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80199b2:	fb09 2208 	mla	r2, r9, r8, r2
 80199b6:	ea4a 0101 	orr.w	r1, sl, r1
 80199ba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80199be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80199c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199c6:	fb05 2201 	mla	r2, r5, r1, r2
 80199ca:	ea4b 0000 	orr.w	r0, fp, r0
 80199ce:	fb0c 2200 	mla	r2, ip, r0, r2
 80199d2:	0d57      	lsrs	r7, r2, #21
 80199d4:	0952      	lsrs	r2, r2, #5
 80199d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80199da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80199de:	433a      	orrs	r2, r7
 80199e0:	2bff      	cmp	r3, #255	; 0xff
 80199e2:	b292      	uxth	r2, r2
 80199e4:	d127      	bne.n	8019a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80199e6:	f8ae 2000 	strh.w	r2, [lr]
 80199ea:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80199ee:	4413      	add	r3, r2
 80199f0:	9325      	str	r3, [sp, #148]	; 0x94
 80199f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80199f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80199f6:	441a      	add	r2, r3
 80199f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80199fa:	9226      	str	r2, [sp, #152]	; 0x98
 80199fc:	3b01      	subs	r3, #1
 80199fe:	f10e 0e02 	add.w	lr, lr, #2
 8019a02:	930f      	str	r3, [sp, #60]	; 0x3c
 8019a04:	e627      	b.n	8019656 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019a06:	fb08 f000 	mul.w	r0, r8, r0
 8019a0a:	fb09 0303 	mla	r3, r9, r3, r0
 8019a0e:	e71b      	b.n	8019848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019a10:	46b9      	mov	r9, r7
 8019a12:	e743      	b.n	801989c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019a14:	f1c2 0110 	rsb	r1, r2, #16
 8019a18:	437a      	muls	r2, r7
 8019a1a:	fb09 2901 	mla	r9, r9, r1, r2
 8019a1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019a22:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019a26:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019a2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019a2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a32:	4302      	orrs	r2, r0
 8019a34:	e7d4      	b.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8019a36:	f8be 7000 	ldrh.w	r7, [lr]
 8019a3a:	4c1d      	ldr	r4, [pc, #116]	; (8019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8019a3c:	43db      	mvns	r3, r3
 8019a3e:	1238      	asrs	r0, r7, #8
 8019a40:	fa5f fc83 	uxtb.w	ip, r3
 8019a44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019a48:	10fd      	asrs	r5, r7, #3
 8019a4a:	fb00 f00c 	mul.w	r0, r0, ip
 8019a4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019a52:	fb05 f10c 	mul.w	r1, r5, ip
 8019a56:	1c45      	adds	r5, r0, #1
 8019a58:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019a5c:	1215      	asrs	r5, r2, #8
 8019a5e:	f025 0507 	bic.w	r5, r5, #7
 8019a62:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019a66:	1c4d      	adds	r5, r1, #1
 8019a68:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8019a6c:	10d1      	asrs	r1, r2, #3
 8019a6e:	f021 0103 	bic.w	r1, r1, #3
 8019a72:	00fb      	lsls	r3, r7, #3
 8019a74:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019a78:	b2db      	uxtb	r3, r3
 8019a7a:	b2c0      	uxtb	r0, r0
 8019a7c:	00c9      	lsls	r1, r1, #3
 8019a7e:	fb03 f30c 	mul.w	r3, r3, ip
 8019a82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019a86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8019a8a:	4308      	orrs	r0, r1
 8019a8c:	1c59      	adds	r1, r3, #1
 8019a8e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019a92:	00d2      	lsls	r2, r2, #3
 8019a94:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019a98:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019a9c:	4318      	orrs	r0, r3
 8019a9e:	f8ae 0000 	strh.w	r0, [lr]
 8019aa2:	e7a2      	b.n	80199ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8019aa4:	b013      	add	sp, #76	; 0x4c
 8019aa6:	ecbd 8b08 	vpop	{d8-d11}
 8019aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019aae:	bf00      	nop
 8019ab0:	fffff800 	.word	0xfffff800

08019ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8019ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019ab8:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8019abc:	fb0c 4e03 	mla	lr, ip, r3, r4
 8019ac0:	f1bc 0f00 	cmp.w	ip, #0
 8019ac4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019ac8:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8019acc:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8019ad0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8019ad4:	8808      	ldrh	r0, [r1, #0]
 8019ad6:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8019ada:	db2f      	blt.n	8019b3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019adc:	45e2      	cmp	sl, ip
 8019ade:	dd2d      	ble.n	8019b3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019ae0:	2c00      	cmp	r4, #0
 8019ae2:	db29      	blt.n	8019b38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019ae4:	42a3      	cmp	r3, r4
 8019ae6:	dd27      	ble.n	8019b38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019ae8:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8019aec:	1c62      	adds	r2, r4, #1
 8019aee:	d428      	bmi.n	8019b42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019af0:	4293      	cmp	r3, r2
 8019af2:	dd26      	ble.n	8019b42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019af4:	b32f      	cbz	r7, 8019b42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019af6:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8019afa:	f11c 0c01 	adds.w	ip, ip, #1
 8019afe:	d424      	bmi.n	8019b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019b00:	45e2      	cmp	sl, ip
 8019b02:	dd22      	ble.n	8019b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019b04:	2e00      	cmp	r6, #0
 8019b06:	f000 809d 	beq.w	8019c44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8019b0a:	2c00      	cmp	r4, #0
 8019b0c:	db1b      	blt.n	8019b46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019b0e:	42a3      	cmp	r3, r4
 8019b10:	dd19      	ble.n	8019b46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019b12:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8019b16:	3401      	adds	r4, #1
 8019b18:	d41a      	bmi.n	8019b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019b1a:	42a3      	cmp	r3, r4
 8019b1c:	dd18      	ble.n	8019b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019b1e:	b1cf      	cbz	r7, 8019b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8019b20:	3301      	adds	r3, #1
 8019b22:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8019b26:	2f0f      	cmp	r7, #15
 8019b28:	d915      	bls.n	8019b56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8019b2a:	4b49      	ldr	r3, [pc, #292]	; (8019c50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8019b2c:	4a49      	ldr	r2, [pc, #292]	; (8019c54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8019b2e:	484a      	ldr	r0, [pc, #296]	; (8019c58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8019b30:	f240 11db 	movw	r1, #475	; 0x1db
 8019b34:	f003 fd3e 	bl	801d5b4 <__assert_func>
 8019b38:	4681      	mov	r9, r0
 8019b3a:	e7d7      	b.n	8019aec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8019b3c:	4686      	mov	lr, r0
 8019b3e:	4681      	mov	r9, r0
 8019b40:	e7db      	b.n	8019afa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019b42:	4686      	mov	lr, r0
 8019b44:	e7d9      	b.n	8019afa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019b46:	4684      	mov	ip, r0
 8019b48:	e7e5      	b.n	8019b16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8019b4a:	4603      	mov	r3, r0
 8019b4c:	4684      	mov	ip, r0
 8019b4e:	e7ea      	b.n	8019b26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019b50:	4603      	mov	r3, r0
 8019b52:	e7e8      	b.n	8019b26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019b54:	4603      	mov	r3, r0
 8019b56:	2e0f      	cmp	r6, #15
 8019b58:	d8e7      	bhi.n	8019b2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019b5a:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8019b5e:	fb17 f806 	smulbb	r8, r7, r6
 8019b62:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019b66:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8019b6a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019b6e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8019b72:	ea44 0909 	orr.w	r9, r4, r9
 8019b76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019b7a:	f1c6 0410 	rsb	r4, r6, #16
 8019b7e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b82:	1be4      	subs	r4, r4, r7
 8019b84:	041a      	lsls	r2, r3, #16
 8019b86:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8019b8a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019b8e:	fb07 fe0e 	mul.w	lr, r7, lr
 8019b92:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019b96:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019b9a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b9e:	fb04 e409 	mla	r4, r4, r9, lr
 8019ba2:	4313      	orrs	r3, r2
 8019ba4:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8019ba8:	fb08 4303 	mla	r3, r8, r3, r4
 8019bac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019bb0:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8019bb4:	4322      	orrs	r2, r4
 8019bb6:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8019bba:	fb06 3202 	mla	r2, r6, r2, r3
 8019bbe:	0d53      	lsrs	r3, r2, #21
 8019bc0:	0952      	lsrs	r2, r2, #5
 8019bc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019bc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bca:	431a      	orrs	r2, r3
 8019bcc:	b293      	uxth	r3, r2
 8019bce:	b2af      	uxth	r7, r5
 8019bd0:	1202      	asrs	r2, r0, #8
 8019bd2:	43ed      	mvns	r5, r5
 8019bd4:	b2ed      	uxtb	r5, r5
 8019bd6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019bda:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019bde:	fb12 f205 	smulbb	r2, r2, r5
 8019be2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019be6:	fb0c 2c07 	mla	ip, ip, r7, r2
 8019bea:	00dc      	lsls	r4, r3, #3
 8019bec:	10da      	asrs	r2, r3, #3
 8019bee:	10c6      	asrs	r6, r0, #3
 8019bf0:	00c3      	lsls	r3, r0, #3
 8019bf2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bf6:	b2db      	uxtb	r3, r3
 8019bf8:	fb16 f605 	smulbb	r6, r6, r5
 8019bfc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019c00:	b2e4      	uxtb	r4, r4
 8019c02:	fb13 f305 	smulbb	r3, r3, r5
 8019c06:	fa1f fc8c 	uxth.w	ip, ip
 8019c0a:	fb02 6207 	mla	r2, r2, r7, r6
 8019c0e:	fb04 3307 	mla	r3, r4, r7, r3
 8019c12:	b296      	uxth	r6, r2
 8019c14:	b29a      	uxth	r2, r3
 8019c16:	f10c 0301 	add.w	r3, ip, #1
 8019c1a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019c1e:	1c53      	adds	r3, r2, #1
 8019c20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019c24:	1c72      	adds	r2, r6, #1
 8019c26:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8019c2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019c32:	0952      	lsrs	r2, r2, #5
 8019c34:	ea43 030c 	orr.w	r3, r3, ip
 8019c38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c3c:	4313      	orrs	r3, r2
 8019c3e:	800b      	strh	r3, [r1, #0]
 8019c40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019c44:	2f0f      	cmp	r7, #15
 8019c46:	f63f af70 	bhi.w	8019b2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019c4a:	4603      	mov	r3, r0
 8019c4c:	4684      	mov	ip, r0
 8019c4e:	e784      	b.n	8019b5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8019c50:	080214b7 	.word	0x080214b7
 8019c54:	08021a8f 	.word	0x08021a8f
 8019c58:	08021484 	.word	0x08021484

08019c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c60:	ed2d 8b08 	vpush	{d8-d11}
 8019c64:	b093      	sub	sp, #76	; 0x4c
 8019c66:	461d      	mov	r5, r3
 8019c68:	9210      	str	r2, [sp, #64]	; 0x40
 8019c6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019c6c:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8019c70:	920b      	str	r2, [sp, #44]	; 0x2c
 8019c72:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8019c76:	910a      	str	r1, [sp, #40]	; 0x28
 8019c78:	6859      	ldr	r1, [r3, #4]
 8019c7a:	681b      	ldr	r3, [r3, #0]
 8019c7c:	9011      	str	r0, [sp, #68]	; 0x44
 8019c7e:	fb01 2707 	mla	r7, r1, r7, r2
 8019c82:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019c86:	9307      	str	r3, [sp, #28]
 8019c88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019c8a:	681b      	ldr	r3, [r3, #0]
 8019c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8019c8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c90:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8019c94:	43db      	mvns	r3, r3
 8019c96:	b2db      	uxtb	r3, r3
 8019c98:	eeb0 aa40 	vmov.f32	s20, s0
 8019c9c:	eef0 9a60 	vmov.f32	s19, s1
 8019ca0:	eeb0 9a41 	vmov.f32	s18, s2
 8019ca4:	eeb0 8a62 	vmov.f32	s16, s5
 8019ca8:	eef0 8a43 	vmov.f32	s17, s6
 8019cac:	eef0 ba44 	vmov.f32	s23, s8
 8019cb0:	eeb0 ba64 	vmov.f32	s22, s9
 8019cb4:	eef0 aa45 	vmov.f32	s21, s10
 8019cb8:	9308      	str	r3, [sp, #32]
 8019cba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019cbc:	2b00      	cmp	r3, #0
 8019cbe:	dc03      	bgt.n	8019cc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019cc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019cc2:	2b00      	cmp	r3, #0
 8019cc4:	f340 8203 	ble.w	801a0ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019cc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019cca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019cce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019cd2:	1e48      	subs	r0, r1, #1
 8019cd4:	f102 3cff 	add.w	ip, r2, #4294967295
 8019cd8:	2d00      	cmp	r5, #0
 8019cda:	f340 80da 	ble.w	8019e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019cde:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019ce2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ce6:	d406      	bmi.n	8019cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019ce8:	4586      	cmp	lr, r0
 8019cea:	da04      	bge.n	8019cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019cec:	2b00      	cmp	r3, #0
 8019cee:	db02      	blt.n	8019cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019cf0:	4563      	cmp	r3, ip
 8019cf2:	f2c0 80cf 	blt.w	8019e94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8019cf6:	f11e 0e01 	adds.w	lr, lr, #1
 8019cfa:	f100 80c1 	bmi.w	8019e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019cfe:	4571      	cmp	r1, lr
 8019d00:	f2c0 80be 	blt.w	8019e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019d04:	3301      	adds	r3, #1
 8019d06:	f100 80bb 	bmi.w	8019e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019d0a:	429a      	cmp	r2, r3
 8019d0c:	f2c0 80b8 	blt.w	8019e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019d10:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019d14:	46a9      	mov	r9, r5
 8019d16:	f1b9 0f00 	cmp.w	r9, #0
 8019d1a:	f340 80d8 	ble.w	8019ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019d1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019d20:	1421      	asrs	r1, r4, #16
 8019d22:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019d26:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019d2a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019d2e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019d32:	f100 8111 	bmi.w	8019f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019d36:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019d3a:	4551      	cmp	r1, sl
 8019d3c:	f280 810c 	bge.w	8019f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019d40:	2800      	cmp	r0, #0
 8019d42:	f2c0 8109 	blt.w	8019f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019d46:	f103 3aff 	add.w	sl, r3, #4294967295
 8019d4a:	4550      	cmp	r0, sl
 8019d4c:	f280 8104 	bge.w	8019f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019d50:	fa0f f38e 	sxth.w	r3, lr
 8019d54:	fb00 1103 	mla	r1, r0, r3, r1
 8019d58:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019d5a:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8019d5e:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8019d62:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8019d66:	f1bc 0f00 	cmp.w	ip, #0
 8019d6a:	d007      	beq.n	8019d7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8019d6c:	005b      	lsls	r3, r3, #1
 8019d6e:	eb0a 0003 	add.w	r0, sl, r3
 8019d72:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8019d76:	930c      	str	r3, [sp, #48]	; 0x30
 8019d78:	8843      	ldrh	r3, [r0, #2]
 8019d7a:	930d      	str	r3, [sp, #52]	; 0x34
 8019d7c:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8019d80:	fb12 f30c 	smulbb	r3, r2, ip
 8019d84:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019d88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019d8c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019d90:	10db      	asrs	r3, r3, #3
 8019d92:	ea40 000e 	orr.w	r0, r0, lr
 8019d96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019d9a:	f1cc 0e10 	rsb	lr, ip, #16
 8019d9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019da2:	ebae 0e02 	sub.w	lr, lr, r2
 8019da6:	ea4a 0101 	orr.w	r1, sl, r1
 8019daa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019dae:	4351      	muls	r1, r2
 8019db0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019db2:	9f08      	ldr	r7, [sp, #32]
 8019db4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019db8:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019dbc:	0410      	lsls	r0, r2, #16
 8019dbe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019dc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019dc6:	4310      	orrs	r0, r2
 8019dc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019dca:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019dcc:	0412      	lsls	r2, r2, #16
 8019dce:	fb03 e000 	mla	r0, r3, r0, lr
 8019dd2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019dd6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019dda:	ea42 020e 	orr.w	r2, r2, lr
 8019dde:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8019de2:	fb03 0302 	mla	r3, r3, r2, r0
 8019de6:	0d5a      	lsrs	r2, r3, #21
 8019de8:	095b      	lsrs	r3, r3, #5
 8019dea:	f8b8 0000 	ldrh.w	r0, [r8]
 8019dee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019df2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019df6:	4313      	orrs	r3, r2
 8019df8:	b29b      	uxth	r3, r3
 8019dfa:	1201      	asrs	r1, r0, #8
 8019dfc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019e00:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019e04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019e08:	fb11 f107 	smulbb	r1, r1, r7
 8019e0c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019e10:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e14:	00c0      	lsls	r0, r0, #3
 8019e16:	fb0c 1c02 	mla	ip, ip, r2, r1
 8019e1a:	b2c0      	uxtb	r0, r0
 8019e1c:	10d9      	asrs	r1, r3, #3
 8019e1e:	00db      	lsls	r3, r3, #3
 8019e20:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019e24:	b2db      	uxtb	r3, r3
 8019e26:	fb10 f007 	smulbb	r0, r0, r7
 8019e2a:	fa1f fc8c 	uxth.w	ip, ip
 8019e2e:	fb03 0302 	mla	r3, r3, r2, r0
 8019e32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019e36:	fb1e fe07 	smulbb	lr, lr, r7
 8019e3a:	fb01 e102 	mla	r1, r1, r2, lr
 8019e3e:	b29a      	uxth	r2, r3
 8019e40:	f10c 0301 	add.w	r3, ip, #1
 8019e44:	b289      	uxth	r1, r1
 8019e46:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019e4a:	1c53      	adds	r3, r2, #1
 8019e4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019e50:	1c4a      	adds	r2, r1, #1
 8019e52:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e56:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e5e:	0949      	lsrs	r1, r1, #5
 8019e60:	ea43 030c 	orr.w	r3, r3, ip
 8019e64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019e68:	430b      	orrs	r3, r1
 8019e6a:	f8a8 3000 	strh.w	r3, [r8]
 8019e6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019e70:	441c      	add	r4, r3
 8019e72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e74:	f108 0802 	add.w	r8, r8, #2
 8019e78:	441e      	add	r6, r3
 8019e7a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019e7e:	e74a      	b.n	8019d16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8019e80:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019e82:	441c      	add	r4, r3
 8019e84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e86:	441e      	add	r6, r3
 8019e88:	9b07      	ldr	r3, [sp, #28]
 8019e8a:	3302      	adds	r3, #2
 8019e8c:	3d01      	subs	r5, #1
 8019e8e:	9307      	str	r3, [sp, #28]
 8019e90:	e722      	b.n	8019cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019e92:	d022      	beq.n	8019eda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8019e94:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8019e96:	1e6b      	subs	r3, r5, #1
 8019e98:	fb00 4003 	mla	r0, r0, r3, r4
 8019e9c:	1400      	asrs	r0, r0, #16
 8019e9e:	f53f af37 	bmi.w	8019d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019ea2:	3901      	subs	r1, #1
 8019ea4:	4288      	cmp	r0, r1
 8019ea6:	f6bf af33 	bge.w	8019d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019eaa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019eac:	fb01 6303 	mla	r3, r1, r3, r6
 8019eb0:	141b      	asrs	r3, r3, #16
 8019eb2:	f53f af2d 	bmi.w	8019d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019eb6:	3a01      	subs	r2, #1
 8019eb8:	4293      	cmp	r3, r2
 8019eba:	f6bf af29 	bge.w	8019d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019ebe:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019ec2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8019ec6:	46a8      	mov	r8, r5
 8019ec8:	f1b8 0f00 	cmp.w	r8, #0
 8019ecc:	dc5e      	bgt.n	8019f8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8019ece:	9b07      	ldr	r3, [sp, #28]
 8019ed0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019ed4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019ed8:	9307      	str	r3, [sp, #28]
 8019eda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019edc:	2b00      	cmp	r3, #0
 8019ede:	f340 80f6 	ble.w	801a0ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019ee2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019ee6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019eea:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019eee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ef0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019ef4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019ef8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019efc:	eef0 6a48 	vmov.f32	s13, s16
 8019f00:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019f04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f08:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019f0c:	ee16 4a90 	vmov	r4, s13
 8019f10:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019f14:	eef0 6a68 	vmov.f32	s13, s17
 8019f18:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019f1c:	ee18 2a10 	vmov	r2, s16
 8019f20:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019f24:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f28:	ee18 2a90 	vmov	r2, s17
 8019f2c:	9327      	str	r3, [sp, #156]	; 0x9c
 8019f2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f30:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f34:	9328      	str	r3, [sp, #160]	; 0xa0
 8019f36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f3a:	3b01      	subs	r3, #1
 8019f3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f40:	930a      	str	r3, [sp, #40]	; 0x28
 8019f42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f44:	ee16 6a90 	vmov	r6, s13
 8019f48:	bf14      	ite	ne
 8019f4a:	461d      	movne	r5, r3
 8019f4c:	4615      	moveq	r5, r2
 8019f4e:	eef0 8a67 	vmov.f32	s17, s15
 8019f52:	eeb0 8a47 	vmov.f32	s16, s14
 8019f56:	e6b0      	b.n	8019cba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019f58:	f111 0a01 	adds.w	sl, r1, #1
 8019f5c:	d487      	bmi.n	8019e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019f5e:	45d6      	cmp	lr, sl
 8019f60:	db85      	blt.n	8019e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019f62:	f110 0a01 	adds.w	sl, r0, #1
 8019f66:	d482      	bmi.n	8019e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019f68:	4553      	cmp	r3, sl
 8019f6a:	db80      	blt.n	8019e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019f6c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019f6e:	9101      	str	r1, [sp, #4]
 8019f70:	b21b      	sxth	r3, r3
 8019f72:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8019f76:	9300      	str	r3, [sp, #0]
 8019f78:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019f7c:	fa0f f38e 	sxth.w	r3, lr
 8019f80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019f82:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f84:	4641      	mov	r1, r8
 8019f86:	f7ff fd95 	bl	8019ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8019f8a:	e770      	b.n	8019e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019f8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019f8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f94:	1430      	asrs	r0, r6, #16
 8019f96:	1423      	asrs	r3, r4, #16
 8019f98:	fb01 3000 	mla	r0, r1, r0, r3
 8019f9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f9e:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8019fa2:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8019fa6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019faa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019fae:	8858      	ldrh	r0, [r3, #2]
 8019fb0:	f1be 0f00 	cmp.w	lr, #0
 8019fb4:	d00b      	beq.n	8019fce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019fb6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019fba:	3901      	subs	r1, #1
 8019fbc:	0049      	lsls	r1, r1, #1
 8019fbe:	3102      	adds	r1, #2
 8019fc0:	eb03 0b01 	add.w	fp, r3, r1
 8019fc4:	5a5b      	ldrh	r3, [r3, r1]
 8019fc6:	930e      	str	r3, [sp, #56]	; 0x38
 8019fc8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019fcc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019fce:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8019fd2:	fb12 f30e 	smulbb	r3, r2, lr
 8019fd6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019fda:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019fde:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8019fe2:	10db      	asrs	r3, r3, #3
 8019fe4:	ea41 010c 	orr.w	r1, r1, ip
 8019fe8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019fec:	f1ce 0c10 	rsb	ip, lr, #16
 8019ff0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019ff4:	ebac 0c02 	sub.w	ip, ip, r2
 8019ff8:	ea4b 0000 	orr.w	r0, fp, r0
 8019ffc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a000:	4350      	muls	r0, r2
 801a002:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a004:	9f08      	ldr	r7, [sp, #32]
 801a006:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a00a:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a00e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a012:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801a016:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a018:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a01a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a01e:	0412      	lsls	r2, r2, #16
 801a020:	ea4b 0101 	orr.w	r1, fp, r1
 801a024:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a028:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a02c:	fb03 c101 	mla	r1, r3, r1, ip
 801a030:	4302      	orrs	r2, r0
 801a032:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a036:	fb03 1202 	mla	r2, r3, r2, r1
 801a03a:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a03e:	0952      	lsrs	r2, r2, #5
 801a040:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801a044:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a048:	f8b9 2000 	ldrh.w	r2, [r9]
 801a04c:	ea4b 0303 	orr.w	r3, fp, r3
 801a050:	b29b      	uxth	r3, r3
 801a052:	1211      	asrs	r1, r2, #8
 801a054:	1218      	asrs	r0, r3, #8
 801a056:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a05a:	fb11 f107 	smulbb	r1, r1, r7
 801a05e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a062:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a066:	00d2      	lsls	r2, r2, #3
 801a068:	fb00 100a 	mla	r0, r0, sl, r1
 801a06c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a070:	10d9      	asrs	r1, r3, #3
 801a072:	b2d2      	uxtb	r2, r2
 801a074:	00db      	lsls	r3, r3, #3
 801a076:	fb1c fc07 	smulbb	ip, ip, r7
 801a07a:	fb12 f207 	smulbb	r2, r2, r7
 801a07e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a082:	b2db      	uxtb	r3, r3
 801a084:	b280      	uxth	r0, r0
 801a086:	fb01 c10a 	mla	r1, r1, sl, ip
 801a08a:	fb03 230a 	mla	r3, r3, sl, r2
 801a08e:	b29b      	uxth	r3, r3
 801a090:	b289      	uxth	r1, r1
 801a092:	1c42      	adds	r2, r0, #1
 801a094:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a098:	f101 0c01 	add.w	ip, r1, #1
 801a09c:	1c5a      	adds	r2, r3, #1
 801a09e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a0a2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a0a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a0a8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a0ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a0b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a0b4:	4310      	orrs	r0, r2
 801a0b6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a0ba:	441c      	add	r4, r3
 801a0bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a0be:	ea40 000c 	orr.w	r0, r0, ip
 801a0c2:	f829 0b02 	strh.w	r0, [r9], #2
 801a0c6:	441e      	add	r6, r3
 801a0c8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0cc:	e6fc      	b.n	8019ec8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a0ce:	b013      	add	sp, #76	; 0x4c
 801a0d0:	ecbd 8b08 	vpop	{d8-d11}
 801a0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a0dc:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801a0e0:	fb06 5c03 	mla	ip, r6, r3, r5
 801a0e4:	2e00      	cmp	r6, #0
 801a0e6:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801a0ea:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801a0ee:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801a0f2:	8808      	ldrh	r0, [r1, #0]
 801a0f4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a0f8:	db2e      	blt.n	801a158 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a0fa:	45b0      	cmp	r8, r6
 801a0fc:	dd2c      	ble.n	801a158 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a0fe:	2d00      	cmp	r5, #0
 801a100:	db28      	blt.n	801a154 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a102:	42ab      	cmp	r3, r5
 801a104:	dd26      	ble.n	801a154 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a106:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801a10a:	1c6a      	adds	r2, r5, #1
 801a10c:	d427      	bmi.n	801a15e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a10e:	4293      	cmp	r3, r2
 801a110:	dd25      	ble.n	801a15e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a112:	b324      	cbz	r4, 801a15e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a114:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801a118:	3601      	adds	r6, #1
 801a11a:	d424      	bmi.n	801a166 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a11c:	45b0      	cmp	r8, r6
 801a11e:	dd22      	ble.n	801a166 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a120:	b31f      	cbz	r7, 801a16a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801a122:	2d00      	cmp	r5, #0
 801a124:	db1d      	blt.n	801a162 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a126:	42ab      	cmp	r3, r5
 801a128:	dd1b      	ble.n	801a162 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a12a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801a12e:	3501      	adds	r5, #1
 801a130:	d405      	bmi.n	801a13e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a132:	42ab      	cmp	r3, r5
 801a134:	dd03      	ble.n	801a13e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a136:	b124      	cbz	r4, 801a142 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801a138:	3301      	adds	r3, #1
 801a13a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801a13e:	2c0f      	cmp	r4, #15
 801a140:	d801      	bhi.n	801a146 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a142:	2f0f      	cmp	r7, #15
 801a144:	d914      	bls.n	801a170 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801a146:	4b27      	ldr	r3, [pc, #156]	; (801a1e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801a148:	4a27      	ldr	r2, [pc, #156]	; (801a1e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801a14a:	4828      	ldr	r0, [pc, #160]	; (801a1ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801a14c:	f240 11db 	movw	r1, #475	; 0x1db
 801a150:	f003 fa30 	bl	801d5b4 <__assert_func>
 801a154:	4684      	mov	ip, r0
 801a156:	e7d8      	b.n	801a10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801a158:	4602      	mov	r2, r0
 801a15a:	4684      	mov	ip, r0
 801a15c:	e7dc      	b.n	801a118 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a15e:	4602      	mov	r2, r0
 801a160:	e7da      	b.n	801a118 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a162:	4606      	mov	r6, r0
 801a164:	e7e3      	b.n	801a12e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801a166:	4606      	mov	r6, r0
 801a168:	e7e9      	b.n	801a13e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a16a:	2c0f      	cmp	r4, #15
 801a16c:	d8eb      	bhi.n	801a146 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a16e:	4606      	mov	r6, r0
 801a170:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801a174:	fb14 f307 	smulbb	r3, r4, r7
 801a178:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801a17c:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801a180:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a184:	10db      	asrs	r3, r3, #3
 801a186:	ea45 0c0c 	orr.w	ip, r5, ip
 801a18a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a18e:	f1c7 0510 	rsb	r5, r7, #16
 801a192:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a196:	1b2d      	subs	r5, r5, r4
 801a198:	ea4e 0202 	orr.w	r2, lr, r2
 801a19c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801a1a0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a1a4:	4354      	muls	r4, r2
 801a1a6:	fb05 450c 	mla	r5, r5, ip, r4
 801a1aa:	0404      	lsls	r4, r0, #16
 801a1ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a1b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a1b4:	4320      	orrs	r0, r4
 801a1b6:	fb03 5400 	mla	r4, r3, r0, r5
 801a1ba:	0430      	lsls	r0, r6, #16
 801a1bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a1c0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801a1c4:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801a1c8:	4330      	orrs	r0, r6
 801a1ca:	fb07 4000 	mla	r0, r7, r0, r4
 801a1ce:	0d43      	lsrs	r3, r0, #21
 801a1d0:	0940      	lsrs	r0, r0, #5
 801a1d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a1da:	4318      	orrs	r0, r3
 801a1dc:	8008      	strh	r0, [r1, #0]
 801a1de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a1e2:	bf00      	nop
 801a1e4:	080214b7 	.word	0x080214b7
 801a1e8:	08021a8f 	.word	0x08021a8f
 801a1ec:	08021484 	.word	0x08021484

0801a1f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1f4:	ed2d 8b08 	vpush	{d8-d11}
 801a1f8:	b08f      	sub	sp, #60	; 0x3c
 801a1fa:	461d      	mov	r5, r3
 801a1fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a1fe:	920c      	str	r2, [sp, #48]	; 0x30
 801a200:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801a204:	9107      	str	r1, [sp, #28]
 801a206:	6859      	ldr	r1, [r3, #4]
 801a208:	681b      	ldr	r3, [r3, #0]
 801a20a:	900d      	str	r0, [sp, #52]	; 0x34
 801a20c:	fb01 2707 	mla	r7, r1, r7, r2
 801a210:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a214:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a216:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801a21a:	f8d3 8000 	ldr.w	r8, [r3]
 801a21e:	eeb0 aa40 	vmov.f32	s20, s0
 801a222:	eef0 9a60 	vmov.f32	s19, s1
 801a226:	eeb0 9a41 	vmov.f32	s18, s2
 801a22a:	eeb0 8a62 	vmov.f32	s16, s5
 801a22e:	eef0 8a43 	vmov.f32	s17, s6
 801a232:	eef0 ba44 	vmov.f32	s23, s8
 801a236:	eeb0 ba64 	vmov.f32	s22, s9
 801a23a:	eef0 aa45 	vmov.f32	s21, s10
 801a23e:	9b07      	ldr	r3, [sp, #28]
 801a240:	2b00      	cmp	r3, #0
 801a242:	dc03      	bgt.n	801a24c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a244:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a246:	2b00      	cmp	r3, #0
 801a248:	f340 8181 	ble.w	801a54e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a24c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a24e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a252:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a256:	1e48      	subs	r0, r1, #1
 801a258:	f102 3cff 	add.w	ip, r2, #4294967295
 801a25c:	2d00      	cmp	r5, #0
 801a25e:	f340 809b 	ble.w	801a398 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801a262:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a266:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a26a:	d406      	bmi.n	801a27a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a26c:	4586      	cmp	lr, r0
 801a26e:	da04      	bge.n	801a27a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a270:	2b00      	cmp	r3, #0
 801a272:	db02      	blt.n	801a27a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a274:	4563      	cmp	r3, ip
 801a276:	f2c0 8090 	blt.w	801a39a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801a27a:	f11e 0e01 	adds.w	lr, lr, #1
 801a27e:	f100 8084 	bmi.w	801a38a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a282:	4571      	cmp	r1, lr
 801a284:	f2c0 8081 	blt.w	801a38a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a288:	3301      	adds	r3, #1
 801a28a:	d47e      	bmi.n	801a38a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a28c:	429a      	cmp	r2, r3
 801a28e:	db7c      	blt.n	801a38a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a290:	46aa      	mov	sl, r5
 801a292:	46b9      	mov	r9, r7
 801a294:	f1ba 0f00 	cmp.w	sl, #0
 801a298:	f340 8099 	ble.w	801a3ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801a29c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a29e:	1421      	asrs	r1, r4, #16
 801a2a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a2a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a2a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a2ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a2b0:	f100 80d0 	bmi.w	801a454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a2b4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a2b8:	4559      	cmp	r1, fp
 801a2ba:	f280 80cb 	bge.w	801a454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a2be:	2800      	cmp	r0, #0
 801a2c0:	f2c0 80c8 	blt.w	801a454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a2c4:	f103 3bff 	add.w	fp, r3, #4294967295
 801a2c8:	4558      	cmp	r0, fp
 801a2ca:	f280 80c3 	bge.w	801a454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a2ce:	fa0f fe8e 	sxth.w	lr, lr
 801a2d2:	fb00 110e 	mla	r1, r0, lr, r1
 801a2d6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a2da:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a2de:	8841      	ldrh	r1, [r0, #2]
 801a2e0:	f1bc 0f00 	cmp.w	ip, #0
 801a2e4:	d00b      	beq.n	801a2fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a2e6:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801a2ea:	3b01      	subs	r3, #1
 801a2ec:	005b      	lsls	r3, r3, #1
 801a2ee:	3302      	adds	r3, #2
 801a2f0:	eb00 0e03 	add.w	lr, r0, r3
 801a2f4:	5ac3      	ldrh	r3, [r0, r3]
 801a2f6:	9308      	str	r3, [sp, #32]
 801a2f8:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a2fc:	9309      	str	r3, [sp, #36]	; 0x24
 801a2fe:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a302:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a306:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a30a:	ea40 000b 	orr.w	r0, r0, fp
 801a30e:	fb12 f30c 	smulbb	r3, r2, ip
 801a312:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a316:	10db      	asrs	r3, r3, #3
 801a318:	f1cc 0e10 	rsb	lr, ip, #16
 801a31c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a320:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a324:	ebae 0e02 	sub.w	lr, lr, r2
 801a328:	ea4b 0101 	orr.w	r1, fp, r1
 801a32c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a330:	4351      	muls	r1, r2
 801a332:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a334:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a338:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a33c:	0410      	lsls	r0, r2, #16
 801a33e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a342:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a346:	4310      	orrs	r0, r2
 801a348:	9a08      	ldr	r2, [sp, #32]
 801a34a:	9908      	ldr	r1, [sp, #32]
 801a34c:	0412      	lsls	r2, r2, #16
 801a34e:	fb03 e000 	mla	r0, r3, r0, lr
 801a352:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a356:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a35a:	ea42 020e 	orr.w	r2, r2, lr
 801a35e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a362:	fb03 0302 	mla	r3, r3, r2, r0
 801a366:	0d5a      	lsrs	r2, r3, #21
 801a368:	095b      	lsrs	r3, r3, #5
 801a36a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a36e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a372:	4313      	orrs	r3, r2
 801a374:	f8a9 3000 	strh.w	r3, [r9]
 801a378:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a37a:	441c      	add	r4, r3
 801a37c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a37e:	f109 0902 	add.w	r9, r9, #2
 801a382:	441e      	add	r6, r3
 801a384:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a388:	e784      	b.n	801a294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a38a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a38c:	441c      	add	r4, r3
 801a38e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a390:	3d01      	subs	r5, #1
 801a392:	441e      	add	r6, r3
 801a394:	3702      	adds	r7, #2
 801a396:	e761      	b.n	801a25c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a398:	d01d      	beq.n	801a3d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a39a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a39c:	1e6b      	subs	r3, r5, #1
 801a39e:	fb00 4003 	mla	r0, r0, r3, r4
 801a3a2:	1400      	asrs	r0, r0, #16
 801a3a4:	f53f af74 	bmi.w	801a290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3a8:	3901      	subs	r1, #1
 801a3aa:	4288      	cmp	r0, r1
 801a3ac:	f6bf af70 	bge.w	801a290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3b0:	9924      	ldr	r1, [sp, #144]	; 0x90
 801a3b2:	fb01 6303 	mla	r3, r1, r3, r6
 801a3b6:	141b      	asrs	r3, r3, #16
 801a3b8:	f53f af6a 	bmi.w	801a290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3bc:	3a01      	subs	r2, #1
 801a3be:	4293      	cmp	r3, r2
 801a3c0:	f6bf af66 	bge.w	801a290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3c4:	46a9      	mov	r9, r5
 801a3c6:	46ba      	mov	sl, r7
 801a3c8:	f1b9 0f00 	cmp.w	r9, #0
 801a3cc:	dc5a      	bgt.n	801a484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a3ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a3d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a3d6:	9b07      	ldr	r3, [sp, #28]
 801a3d8:	2b00      	cmp	r3, #0
 801a3da:	f340 80b8 	ble.w	801a54e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a3de:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a3e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a3e6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a3ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3ec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a3f0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a3f4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a3f8:	eef0 6a48 	vmov.f32	s13, s16
 801a3fc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a404:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a408:	ee16 4a90 	vmov	r4, s13
 801a40c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a410:	eef0 6a68 	vmov.f32	s13, s17
 801a414:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a418:	ee18 2a10 	vmov	r2, s16
 801a41c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a420:	fb92 f3f3 	sdiv	r3, r2, r3
 801a424:	ee18 2a90 	vmov	r2, s17
 801a428:	9323      	str	r3, [sp, #140]	; 0x8c
 801a42a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a42c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a430:	9324      	str	r3, [sp, #144]	; 0x90
 801a432:	9b07      	ldr	r3, [sp, #28]
 801a434:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a436:	3b01      	subs	r3, #1
 801a438:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a43c:	9307      	str	r3, [sp, #28]
 801a43e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a440:	ee16 6a90 	vmov	r6, s13
 801a444:	bf14      	ite	ne
 801a446:	461d      	movne	r5, r3
 801a448:	4615      	moveq	r5, r2
 801a44a:	eef0 8a67 	vmov.f32	s17, s15
 801a44e:	eeb0 8a47 	vmov.f32	s16, s14
 801a452:	e6f4      	b.n	801a23e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a454:	f111 0b01 	adds.w	fp, r1, #1
 801a458:	d48e      	bmi.n	801a378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a45a:	45de      	cmp	lr, fp
 801a45c:	db8c      	blt.n	801a378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a45e:	f110 0b01 	adds.w	fp, r0, #1
 801a462:	d489      	bmi.n	801a378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a464:	455b      	cmp	r3, fp
 801a466:	db87      	blt.n	801a378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a468:	b21b      	sxth	r3, r3
 801a46a:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a46e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a472:	9300      	str	r3, [sp, #0]
 801a474:	4642      	mov	r2, r8
 801a476:	fa0f f38e 	sxth.w	r3, lr
 801a47a:	4649      	mov	r1, r9
 801a47c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a47e:	f7ff fe2b 	bl	801a0d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a482:	e779      	b.n	801a378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a486:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a48a:	1420      	asrs	r0, r4, #16
 801a48c:	1431      	asrs	r1, r6, #16
 801a48e:	fb03 0101 	mla	r1, r3, r1, r0
 801a492:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a496:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a49a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a49e:	8841      	ldrh	r1, [r0, #2]
 801a4a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a4a4:	f1be 0f00 	cmp.w	lr, #0
 801a4a8:	d00b      	beq.n	801a4c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801a4aa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a4ae:	3b01      	subs	r3, #1
 801a4b0:	005b      	lsls	r3, r3, #1
 801a4b2:	3302      	adds	r3, #2
 801a4b4:	eb00 0b03 	add.w	fp, r0, r3
 801a4b8:	5ac3      	ldrh	r3, [r0, r3]
 801a4ba:	930a      	str	r3, [sp, #40]	; 0x28
 801a4bc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a4c0:	930b      	str	r3, [sp, #44]	; 0x2c
 801a4c2:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a4c6:	fb12 f30e 	smulbb	r3, r2, lr
 801a4ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a4ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a4d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a4d6:	10db      	asrs	r3, r3, #3
 801a4d8:	ea40 000c 	orr.w	r0, r0, ip
 801a4dc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a4e0:	f1ce 0c10 	rsb	ip, lr, #16
 801a4e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a4e8:	ebac 0c02 	sub.w	ip, ip, r2
 801a4ec:	ea4b 0101 	orr.w	r1, fp, r1
 801a4f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a4f4:	4351      	muls	r1, r2
 801a4f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a4f8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a4fc:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a500:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a504:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801a508:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a50a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a50c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a510:	0412      	lsls	r2, r2, #16
 801a512:	ea4b 0000 	orr.w	r0, fp, r0
 801a516:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a51a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801a51e:	fb03 c000 	mla	r0, r3, r0, ip
 801a522:	ea42 0b0b 	orr.w	fp, r2, fp
 801a526:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a52a:	fb03 000b 	mla	r0, r3, fp, r0
 801a52e:	0d43      	lsrs	r3, r0, #21
 801a530:	0940      	lsrs	r0, r0, #5
 801a532:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a536:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a53a:	4318      	orrs	r0, r3
 801a53c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a53e:	f82a 0b02 	strh.w	r0, [sl], #2
 801a542:	441c      	add	r4, r3
 801a544:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a546:	f109 39ff 	add.w	r9, r9, #4294967295
 801a54a:	441e      	add	r6, r3
 801a54c:	e73c      	b.n	801a3c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a54e:	b00f      	add	sp, #60	; 0x3c
 801a550:	ecbd 8b08 	vpop	{d8-d11}
 801a554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a558:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a55c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801a560:	fb04 5603 	mla	r6, r4, r3, r5
 801a564:	2c00      	cmp	r4, #0
 801a566:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a56a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801a56e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801a572:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801a576:	db36      	blt.n	801a5e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801a578:	45a6      	cmp	lr, r4
 801a57a:	dd34      	ble.n	801a5e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801a57c:	2d00      	cmp	r5, #0
 801a57e:	db30      	blt.n	801a5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801a580:	42ab      	cmp	r3, r5
 801a582:	dd2e      	ble.n	801a5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801a584:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801a588:	1c6e      	adds	r6, r5, #1
 801a58a:	d42f      	bmi.n	801a5ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801a58c:	42b3      	cmp	r3, r6
 801a58e:	dd2d      	ble.n	801a5ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801a590:	b370      	cbz	r0, 801a5f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801a592:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a596:	3401      	adds	r4, #1
 801a598:	d42e      	bmi.n	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801a59a:	45a6      	cmp	lr, r4
 801a59c:	dd2c      	ble.n	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801a59e:	b377      	cbz	r7, 801a5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 801a5a0:	2d00      	cmp	r5, #0
 801a5a2:	db27      	blt.n	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a5a4:	42ab      	cmp	r3, r5
 801a5a6:	dd25      	ble.n	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a5a8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a5ac:	3501      	adds	r5, #1
 801a5ae:	d429      	bmi.n	801a604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801a5b0:	42ab      	cmp	r3, r5
 801a5b2:	dd27      	ble.n	801a604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801a5b4:	b340      	cbz	r0, 801a608 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801a5b6:	3301      	adds	r3, #1
 801a5b8:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801a5bc:	280f      	cmp	r0, #15
 801a5be:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a5c2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a5c6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a5ca:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a5ce:	d801      	bhi.n	801a5d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 801a5d0:	2f0f      	cmp	r7, #15
 801a5d2:	d91b      	bls.n	801a60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a5d4:	4b8d      	ldr	r3, [pc, #564]	; (801a80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801a5d6:	4a8e      	ldr	r2, [pc, #568]	; (801a810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801a5d8:	488e      	ldr	r0, [pc, #568]	; (801a814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801a5da:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a5de:	f002 ffe9 	bl	801d5b4 <__assert_func>
 801a5e2:	2200      	movs	r2, #0
 801a5e4:	e7d0      	b.n	801a588 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801a5e6:	2600      	movs	r6, #0
 801a5e8:	4632      	mov	r2, r6
 801a5ea:	e7d4      	b.n	801a596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a5ec:	2600      	movs	r6, #0
 801a5ee:	e7d2      	b.n	801a596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a5f0:	4606      	mov	r6, r0
 801a5f2:	e7d0      	b.n	801a596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a5f4:	2400      	movs	r4, #0
 801a5f6:	e7d9      	b.n	801a5ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801a5f8:	2300      	movs	r3, #0
 801a5fa:	461c      	mov	r4, r3
 801a5fc:	e7de      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a5fe:	463b      	mov	r3, r7
 801a600:	463c      	mov	r4, r7
 801a602:	e7db      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a604:	2300      	movs	r3, #0
 801a606:	e7d9      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a608:	4603      	mov	r3, r0
 801a60a:	e7d7      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a60c:	b280      	uxth	r0, r0
 801a60e:	b2bf      	uxth	r7, r7
 801a610:	fb07 fe00 	mul.w	lr, r7, r0
 801a614:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a618:	0100      	lsls	r0, r0, #4
 801a61a:	eba0 0c0e 	sub.w	ip, r0, lr
 801a61e:	b2bf      	uxth	r7, r7
 801a620:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a624:	fa1f fc8c 	uxth.w	ip, ip
 801a628:	1bed      	subs	r5, r5, r7
 801a62a:	b2ad      	uxth	r5, r5
 801a62c:	fb0a f00c 	mul.w	r0, sl, ip
 801a630:	fb0b 0005 	mla	r0, fp, r5, r0
 801a634:	fb07 0009 	mla	r0, r7, r9, r0
 801a638:	fb0e 0008 	mla	r0, lr, r8, r0
 801a63c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a640:	9001      	str	r0, [sp, #4]
 801a642:	2800      	cmp	r0, #0
 801a644:	f000 80de 	beq.w	801a804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 801a648:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a64c:	d018      	beq.n	801a680 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 801a64e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a652:	fb0b f000 	mul.w	r0, fp, r0
 801a656:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a65a:	fb0b fb02 	mul.w	fp, fp, r2
 801a65e:	0a02      	lsrs	r2, r0, #8
 801a660:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a664:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a668:	4402      	add	r2, r0
 801a66a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a66e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a672:	0a12      	lsrs	r2, r2, #8
 801a674:	0a00      	lsrs	r0, r0, #8
 801a676:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a67a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a67e:	4302      	orrs	r2, r0
 801a680:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a684:	d01a      	beq.n	801a6bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801a686:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a68a:	fb0a f000 	mul.w	r0, sl, r0
 801a68e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a692:	fb0a fa06 	mul.w	sl, sl, r6
 801a696:	0a06      	lsrs	r6, r0, #8
 801a698:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a69c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a6a0:	4406      	add	r6, r0
 801a6a2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a6a6:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a6aa:	0a36      	lsrs	r6, r6, #8
 801a6ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a6b0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a6b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a6b8:	ea46 060a 	orr.w	r6, r6, sl
 801a6bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a6c0:	d01b      	beq.n	801a6fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 801a6c2:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a6c6:	fb09 fa0a 	mul.w	sl, r9, sl
 801a6ca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a6ce:	fb09 f004 	mul.w	r0, r9, r4
 801a6d2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a6d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a6da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a6de:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a6e2:	4454      	add	r4, sl
 801a6e4:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a6e8:	0a24      	lsrs	r4, r4, #8
 801a6ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a6ee:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a6f2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a6f6:	ea44 0409 	orr.w	r4, r4, r9
 801a6fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a6fe:	d01b      	beq.n	801a738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 801a700:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a704:	fb08 f909 	mul.w	r9, r8, r9
 801a708:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a70c:	fb08 f003 	mul.w	r0, r8, r3
 801a710:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a714:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a718:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a71c:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a720:	444b      	add	r3, r9
 801a722:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a726:	0a1b      	lsrs	r3, r3, #8
 801a728:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a72c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a730:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a734:	ea43 0308 	orr.w	r3, r3, r8
 801a738:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a73c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a740:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a744:	fb0c f808 	mul.w	r8, ip, r8
 801a748:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a74c:	fb0c f606 	mul.w	r6, ip, r6
 801a750:	fb05 8909 	mla	r9, r5, r9, r8
 801a754:	fb05 6502 	mla	r5, r5, r2, r6
 801a758:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a75c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a760:	9a01      	ldr	r2, [sp, #4]
 801a762:	8808      	ldrh	r0, [r1, #0]
 801a764:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a768:	fb07 9908 	mla	r9, r7, r8, r9
 801a76c:	fb07 5704 	mla	r7, r7, r4, r5
 801a770:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a774:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a778:	b2b6      	uxth	r6, r6
 801a77a:	fb0e 9808 	mla	r8, lr, r8, r9
 801a77e:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a782:	4372      	muls	r2, r6
 801a784:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a788:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a78c:	1c53      	adds	r3, r2, #1
 801a78e:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a792:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a796:	ea48 0e0e 	orr.w	lr, r8, lr
 801a79a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a79e:	1205      	asrs	r5, r0, #8
 801a7a0:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801a7a4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a7a8:	b2db      	uxtb	r3, r3
 801a7aa:	fb12 f206 	smulbb	r2, r2, r6
 801a7ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a7b2:	fb05 2503 	mla	r5, r5, r3, r2
 801a7b6:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801a7ba:	10c2      	asrs	r2, r0, #3
 801a7bc:	fa5f fe8e 	uxtb.w	lr, lr
 801a7c0:	00c0      	lsls	r0, r0, #3
 801a7c2:	fb14 f406 	smulbb	r4, r4, r6
 801a7c6:	b2c0      	uxtb	r0, r0
 801a7c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a7cc:	fb1e fe06 	smulbb	lr, lr, r6
 801a7d0:	fb02 4203 	mla	r2, r2, r3, r4
 801a7d4:	b2ad      	uxth	r5, r5
 801a7d6:	fb00 e303 	mla	r3, r0, r3, lr
 801a7da:	b298      	uxth	r0, r3
 801a7dc:	b294      	uxth	r4, r2
 801a7de:	1c6b      	adds	r3, r5, #1
 801a7e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a7e4:	1c62      	adds	r2, r4, #1
 801a7e6:	1c43      	adds	r3, r0, #1
 801a7e8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a7ec:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a7f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a7f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a7f8:	0952      	lsrs	r2, r2, #5
 801a7fa:	432b      	orrs	r3, r5
 801a7fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a800:	4313      	orrs	r3, r2
 801a802:	800b      	strh	r3, [r1, #0]
 801a804:	b003      	add	sp, #12
 801a806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a80a:	bf00      	nop
 801a80c:	080214b7 	.word	0x080214b7
 801a810:	080219e6 	.word	0x080219e6
 801a814:	08021484 	.word	0x08021484

0801a818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a81c:	ed2d 8b08 	vpush	{d8-d11}
 801a820:	b09d      	sub	sp, #116	; 0x74
 801a822:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801a826:	9219      	str	r2, [sp, #100]	; 0x64
 801a828:	9307      	str	r3, [sp, #28]
 801a82a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801a82c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801a830:	931a      	str	r3, [sp, #104]	; 0x68
 801a832:	9117      	str	r1, [sp, #92]	; 0x5c
 801a834:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801a838:	901b      	str	r0, [sp, #108]	; 0x6c
 801a83a:	6850      	ldr	r0, [r2, #4]
 801a83c:	6812      	ldr	r2, [r2, #0]
 801a83e:	fb00 1303 	mla	r3, r0, r3, r1
 801a842:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a846:	930a      	str	r3, [sp, #40]	; 0x28
 801a848:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a84a:	681b      	ldr	r3, [r3, #0]
 801a84c:	9310      	str	r3, [sp, #64]	; 0x40
 801a84e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801a852:	930b      	str	r3, [sp, #44]	; 0x2c
 801a854:	eeb0 aa40 	vmov.f32	s20, s0
 801a858:	eef0 9a60 	vmov.f32	s19, s1
 801a85c:	eeb0 9a41 	vmov.f32	s18, s2
 801a860:	eeb0 8a62 	vmov.f32	s16, s5
 801a864:	eef0 8a43 	vmov.f32	s17, s6
 801a868:	eef0 ba44 	vmov.f32	s23, s8
 801a86c:	eeb0 ba64 	vmov.f32	s22, s9
 801a870:	eef0 aa45 	vmov.f32	s21, s10
 801a874:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a876:	2b00      	cmp	r3, #0
 801a878:	dc03      	bgt.n	801a882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a87a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a87c:	2b00      	cmp	r3, #0
 801a87e:	f340 8375 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801a882:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a884:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a888:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a88c:	1e48      	subs	r0, r1, #1
 801a88e:	1e57      	subs	r7, r2, #1
 801a890:	9b07      	ldr	r3, [sp, #28]
 801a892:	2b00      	cmp	r3, #0
 801a894:	f340 818e 	ble.w	801abb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801a898:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a89c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a8a0:	d406      	bmi.n	801a8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8a2:	4584      	cmp	ip, r0
 801a8a4:	da04      	bge.n	801a8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8a6:	2b00      	cmp	r3, #0
 801a8a8:	db02      	blt.n	801a8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a8aa:	42bb      	cmp	r3, r7
 801a8ac:	f2c0 8183 	blt.w	801abb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801a8b0:	f11c 0c01 	adds.w	ip, ip, #1
 801a8b4:	f100 8173 	bmi.w	801ab9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801a8b8:	4561      	cmp	r1, ip
 801a8ba:	f2c0 8170 	blt.w	801ab9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801a8be:	3301      	adds	r3, #1
 801a8c0:	f100 816d 	bmi.w	801ab9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801a8c4:	429a      	cmp	r2, r3
 801a8c6:	f2c0 816a 	blt.w	801ab9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801a8ca:	9b07      	ldr	r3, [sp, #28]
 801a8cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a8ce:	9318      	str	r3, [sp, #96]	; 0x60
 801a8d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a8d2:	2b00      	cmp	r3, #0
 801a8d4:	f340 818c 	ble.w	801abf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801a8d8:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801a8da:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a8dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a8e0:	689b      	ldr	r3, [r3, #8]
 801a8e2:	1422      	asrs	r2, r4, #16
 801a8e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a8e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a8ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a8f0:	f100 81cd 	bmi.w	801ac8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801a8f4:	f103 38ff 	add.w	r8, r3, #4294967295
 801a8f8:	4542      	cmp	r2, r8
 801a8fa:	f280 81c8 	bge.w	801ac8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801a8fe:	f1bc 0f00 	cmp.w	ip, #0
 801a902:	f2c0 81c4 	blt.w	801ac8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801a906:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a90a:	45c4      	cmp	ip, r8
 801a90c:	f280 81bf 	bge.w	801ac8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801a910:	b21b      	sxth	r3, r3
 801a912:	fb0c 2203 	mla	r2, ip, r3, r2
 801a916:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a918:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a91c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a920:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a924:	2800      	cmp	r0, #0
 801a926:	f000 81a9 	beq.w	801ac7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801a92a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a92e:	950c      	str	r5, [sp, #48]	; 0x30
 801a930:	0e2d      	lsrs	r5, r5, #24
 801a932:	9513      	str	r5, [sp, #76]	; 0x4c
 801a934:	b181      	cbz	r1, 801a958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801a936:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a93a:	3b01      	subs	r3, #1
 801a93c:	009b      	lsls	r3, r3, #2
 801a93e:	3304      	adds	r3, #4
 801a940:	eb08 0c03 	add.w	ip, r8, r3
 801a944:	f858 3003 	ldr.w	r3, [r8, r3]
 801a948:	9308      	str	r3, [sp, #32]
 801a94a:	0e1b      	lsrs	r3, r3, #24
 801a94c:	9311      	str	r3, [sp, #68]	; 0x44
 801a94e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a952:	930d      	str	r3, [sp, #52]	; 0x34
 801a954:	0e1b      	lsrs	r3, r3, #24
 801a956:	9314      	str	r3, [sp, #80]	; 0x50
 801a958:	b280      	uxth	r0, r0
 801a95a:	b289      	uxth	r1, r1
 801a95c:	fb00 f901 	mul.w	r9, r0, r1
 801a960:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a964:	0100      	lsls	r0, r0, #4
 801a966:	eba0 0809 	sub.w	r8, r0, r9
 801a96a:	b289      	uxth	r1, r1
 801a96c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a970:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a972:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a974:	fa1f f888 	uxth.w	r8, r8
 801a978:	1a5b      	subs	r3, r3, r1
 801a97a:	b29b      	uxth	r3, r3
 801a97c:	fb08 f000 	mul.w	r0, r8, r0
 801a980:	fb03 000e 	mla	r0, r3, lr, r0
 801a984:	fb01 0005 	mla	r0, r1, r5, r0
 801a988:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a98a:	fb09 0005 	mla	r0, r9, r5, r0
 801a98e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a992:	2800      	cmp	r0, #0
 801a994:	f000 80fa 	beq.w	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801a998:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a99c:	d01b      	beq.n	801a9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801a99e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a9a2:	fb0e fa0a 	mul.w	sl, lr, sl
 801a9a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a9aa:	fb0e fe02 	mul.w	lr, lr, r2
 801a9ae:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a9b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a9ba:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a9be:	4452      	add	r2, sl
 801a9c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a9c4:	0a12      	lsrs	r2, r2, #8
 801a9c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9ce:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a9d2:	ea42 020c 	orr.w	r2, r2, ip
 801a9d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9d8:	2dff      	cmp	r5, #255	; 0xff
 801a9da:	d021      	beq.n	801aa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a9dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a9de:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a9e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9e4:	fb05 fb0b 	mul.w	fp, r5, fp
 801a9e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a9ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a9ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a9f4:	fb05 fa0a 	mul.w	sl, r5, sl
 801a9f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a9fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa04:	44de      	add	lr, fp
 801aa06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aa0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa1a:	ea4e 050a 	orr.w	r5, lr, sl
 801aa1e:	950c      	str	r5, [sp, #48]	; 0x30
 801aa20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa22:	2dff      	cmp	r5, #255	; 0xff
 801aa24:	d021      	beq.n	801aa6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aa26:	9d08      	ldr	r5, [sp, #32]
 801aa28:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801aa2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa2e:	fb05 fb0b 	mul.w	fp, r5, fp
 801aa32:	9d08      	ldr	r5, [sp, #32]
 801aa34:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aa38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aa3e:	fb05 fa0a 	mul.w	sl, r5, sl
 801aa42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa46:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa4a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa4e:	44de      	add	lr, fp
 801aa50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aa58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa64:	ea4e 050a 	orr.w	r5, lr, sl
 801aa68:	9508      	str	r5, [sp, #32]
 801aa6a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa6c:	2dff      	cmp	r5, #255	; 0xff
 801aa6e:	d021      	beq.n	801aab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801aa70:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aa72:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801aa76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa78:	fb05 fb0b 	mul.w	fp, r5, fp
 801aa7c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aa7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aa82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aa88:	fb05 fa0a 	mul.w	sl, r5, sl
 801aa8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa98:	44de      	add	lr, fp
 801aa9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aaa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aaa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aaaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aaae:	ea4e 050a 	orr.w	r5, lr, sl
 801aab2:	950d      	str	r5, [sp, #52]	; 0x34
 801aab4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801aab6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aaba:	9d08      	ldr	r5, [sp, #32]
 801aabc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801aac0:	fb08 fc0c 	mul.w	ip, r8, ip
 801aac4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801aac8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801aacc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aace:	fb01 cc0e 	mla	ip, r1, lr, ip
 801aad2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801aad6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801aad8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aadc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801aae0:	fb08 f80e 	mul.w	r8, r8, lr
 801aae4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aae8:	fb03 8202 	mla	r2, r3, r2, r8
 801aaec:	9b08      	ldr	r3, [sp, #32]
 801aaee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801aaf0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801aaf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aaf6:	fb01 220a 	mla	r2, r1, sl, r2
 801aafa:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801aafe:	fb09 2901 	mla	r9, r9, r1, r2
 801ab02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ab04:	883b      	ldrh	r3, [r7, #0]
 801ab06:	4342      	muls	r2, r0
 801ab08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ab10:	1c50      	adds	r0, r2, #1
 801ab12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab16:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ab1a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ab1e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ab22:	1219      	asrs	r1, r3, #8
 801ab24:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ab28:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ab2c:	b2c0      	uxtb	r0, r0
 801ab2e:	fb12 f205 	smulbb	r2, r2, r5
 801ab32:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ab36:	fb01 2100 	mla	r1, r1, r0, r2
 801ab3a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ab3e:	10da      	asrs	r2, r3, #3
 801ab40:	fa5f fc8c 	uxtb.w	ip, ip
 801ab44:	00db      	lsls	r3, r3, #3
 801ab46:	fb1c fc05 	smulbb	ip, ip, r5
 801ab4a:	b2db      	uxtb	r3, r3
 801ab4c:	b289      	uxth	r1, r1
 801ab4e:	fb03 c300 	mla	r3, r3, r0, ip
 801ab52:	fa1f fc83 	uxth.w	ip, r3
 801ab56:	1c4b      	adds	r3, r1, #1
 801ab58:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ab5c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ab60:	fb1e fe05 	smulbb	lr, lr, r5
 801ab64:	f10c 0301 	add.w	r3, ip, #1
 801ab68:	fb02 e200 	mla	r2, r2, r0, lr
 801ab6c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ab70:	b292      	uxth	r2, r2
 801ab72:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ab76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab7a:	430b      	orrs	r3, r1
 801ab7c:	1c51      	adds	r1, r2, #1
 801ab7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ab82:	0952      	lsrs	r2, r2, #5
 801ab84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab88:	4313      	orrs	r3, r2
 801ab8a:	803b      	strh	r3, [r7, #0]
 801ab8c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801ab8e:	441c      	add	r4, r3
 801ab90:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ab92:	441e      	add	r6, r3
 801ab94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ab96:	3b01      	subs	r3, #1
 801ab98:	3702      	adds	r7, #2
 801ab9a:	9318      	str	r3, [sp, #96]	; 0x60
 801ab9c:	e698      	b.n	801a8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801ab9e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801aba0:	441c      	add	r4, r3
 801aba2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801aba4:	441e      	add	r6, r3
 801aba6:	9b07      	ldr	r3, [sp, #28]
 801aba8:	3b01      	subs	r3, #1
 801abaa:	9307      	str	r3, [sp, #28]
 801abac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801abae:	3302      	adds	r3, #2
 801abb0:	930a      	str	r3, [sp, #40]	; 0x28
 801abb2:	e66d      	b.n	801a890 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801abb4:	d023      	beq.n	801abfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801abb6:	9b07      	ldr	r3, [sp, #28]
 801abb8:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801abba:	3b01      	subs	r3, #1
 801abbc:	fb00 4003 	mla	r0, r0, r3, r4
 801abc0:	1400      	asrs	r0, r0, #16
 801abc2:	f53f ae82 	bmi.w	801a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801abc6:	3901      	subs	r1, #1
 801abc8:	4288      	cmp	r0, r1
 801abca:	f6bf ae7e 	bge.w	801a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801abce:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801abd0:	fb01 6303 	mla	r3, r1, r3, r6
 801abd4:	141b      	asrs	r3, r3, #16
 801abd6:	f53f ae78 	bmi.w	801a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801abda:	3a01      	subs	r2, #1
 801abdc:	4293      	cmp	r3, r2
 801abde:	f6bf ae74 	bge.w	801a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801abe2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801abe6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801abea:	f1bb 0f00 	cmp.w	fp, #0
 801abee:	dc6c      	bgt.n	801acca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801abf0:	9b07      	ldr	r3, [sp, #28]
 801abf2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801abf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801abf8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801abfc:	930a      	str	r3, [sp, #40]	; 0x28
 801abfe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ac00:	2b00      	cmp	r3, #0
 801ac02:	f340 81b3 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801ac06:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ac0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ac0e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ac12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ac14:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ac18:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ac1c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ac20:	eef0 6a48 	vmov.f32	s13, s16
 801ac24:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ac28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac2c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ac30:	ee16 4a90 	vmov	r4, s13
 801ac34:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ac38:	eef0 6a68 	vmov.f32	s13, s17
 801ac3c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ac40:	ee18 2a10 	vmov	r2, s16
 801ac44:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ac48:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac4c:	ee18 2a90 	vmov	r2, s17
 801ac50:	9331      	str	r3, [sp, #196]	; 0xc4
 801ac52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ac54:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac58:	9332      	str	r3, [sp, #200]	; 0xc8
 801ac5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ac5c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801ac5e:	3b01      	subs	r3, #1
 801ac60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac64:	9317      	str	r3, [sp, #92]	; 0x5c
 801ac66:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ac68:	bf08      	it	eq
 801ac6a:	4613      	moveq	r3, r2
 801ac6c:	ee16 6a90 	vmov	r6, s13
 801ac70:	9307      	str	r3, [sp, #28]
 801ac72:	eef0 8a67 	vmov.f32	s17, s15
 801ac76:	eeb0 8a47 	vmov.f32	s16, s14
 801ac7a:	e5fb      	b.n	801a874 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ac7c:	2900      	cmp	r1, #0
 801ac7e:	f43f ae6b 	beq.w	801a958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ac82:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ac86:	9308      	str	r3, [sp, #32]
 801ac88:	0e1b      	lsrs	r3, r3, #24
 801ac8a:	9311      	str	r3, [sp, #68]	; 0x44
 801ac8c:	e664      	b.n	801a958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ac8e:	f112 0801 	adds.w	r8, r2, #1
 801ac92:	f53f af7b 	bmi.w	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ac96:	4543      	cmp	r3, r8
 801ac98:	f6ff af78 	blt.w	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ac9c:	f11c 0801 	adds.w	r8, ip, #1
 801aca0:	f53f af74 	bmi.w	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aca4:	45c6      	cmp	lr, r8
 801aca6:	f6ff af71 	blt.w	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801acaa:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801acac:	9201      	str	r2, [sp, #4]
 801acae:	fa0f f28e 	sxth.w	r2, lr
 801acb2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801acb6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801acba:	9200      	str	r2, [sp, #0]
 801acbc:	b21b      	sxth	r3, r3
 801acbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801acc0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801acc2:	4639      	mov	r1, r7
 801acc4:	f7ff fc48 	bl	801a558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801acc8:	e760      	b.n	801ab8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801acca:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801accc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801acce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801acd2:	1427      	asrs	r7, r4, #16
 801acd4:	1433      	asrs	r3, r6, #16
 801acd6:	fb01 7303 	mla	r3, r1, r3, r7
 801acda:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801acde:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ace2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ace6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801acea:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801acee:	2a00      	cmp	r2, #0
 801acf0:	f000 8133 	beq.w	801af5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801acf4:	687d      	ldr	r5, [r7, #4]
 801acf6:	950e      	str	r5, [sp, #56]	; 0x38
 801acf8:	0e2d      	lsrs	r5, r5, #24
 801acfa:	9515      	str	r5, [sp, #84]	; 0x54
 801acfc:	b178      	cbz	r0, 801ad1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801acfe:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801ad02:	3901      	subs	r1, #1
 801ad04:	0089      	lsls	r1, r1, #2
 801ad06:	3104      	adds	r1, #4
 801ad08:	eb07 0e01 	add.w	lr, r7, r1
 801ad0c:	5879      	ldr	r1, [r7, r1]
 801ad0e:	9109      	str	r1, [sp, #36]	; 0x24
 801ad10:	0e09      	lsrs	r1, r1, #24
 801ad12:	9112      	str	r1, [sp, #72]	; 0x48
 801ad14:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ad18:	910f      	str	r1, [sp, #60]	; 0x3c
 801ad1a:	0e09      	lsrs	r1, r1, #24
 801ad1c:	9116      	str	r1, [sp, #88]	; 0x58
 801ad1e:	b292      	uxth	r2, r2
 801ad20:	b280      	uxth	r0, r0
 801ad22:	fb02 f800 	mul.w	r8, r2, r0
 801ad26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ad2a:	0112      	lsls	r2, r2, #4
 801ad2c:	eba2 0e08 	sub.w	lr, r2, r8
 801ad30:	b280      	uxth	r0, r0
 801ad32:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad36:	9915      	ldr	r1, [sp, #84]	; 0x54
 801ad38:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ad3a:	fa1f fe8e 	uxth.w	lr, lr
 801ad3e:	1a12      	subs	r2, r2, r0
 801ad40:	b292      	uxth	r2, r2
 801ad42:	fb0e f101 	mul.w	r1, lr, r1
 801ad46:	fb02 110c 	mla	r1, r2, ip, r1
 801ad4a:	fb00 1105 	mla	r1, r0, r5, r1
 801ad4e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ad50:	fb08 1105 	mla	r1, r8, r5, r1
 801ad54:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ad58:	2900      	cmp	r1, #0
 801ad5a:	f000 80f5 	beq.w	801af48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ad5e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ad62:	d019      	beq.n	801ad98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801ad64:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ad68:	fb0c fa0a 	mul.w	sl, ip, sl
 801ad6c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ad70:	fb0c fc03 	mul.w	ip, ip, r3
 801ad74:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ad78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad7c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ad80:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ad84:	4453      	add	r3, sl
 801ad86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ad8a:	0a1b      	lsrs	r3, r3, #8
 801ad8c:	0a3f      	lsrs	r7, r7, #8
 801ad8e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad92:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ad96:	433b      	orrs	r3, r7
 801ad98:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ad9a:	2dff      	cmp	r5, #255	; 0xff
 801ad9c:	d020      	beq.n	801ade0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801ad9e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ada0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ada4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ada6:	436f      	muls	r7, r5
 801ada8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801adaa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801adae:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801adb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801adb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801adb8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801adbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801adc0:	44bc      	add	ip, r7
 801adc2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801adc6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801adca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801add2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801add6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adda:	ea4c 050a 	orr.w	r5, ip, sl
 801adde:	950e      	str	r5, [sp, #56]	; 0x38
 801ade0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ade2:	2dff      	cmp	r5, #255	; 0xff
 801ade4:	d020      	beq.n	801ae28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801ade6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ade8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801adec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801adee:	436f      	muls	r7, r5
 801adf0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801adf2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801adf6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801adf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801adfc:	fb05 fa0a 	mul.w	sl, r5, sl
 801ae00:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ae04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae08:	44bc      	add	ip, r7
 801ae0a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ae0e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ae12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae22:	ea4c 050a 	orr.w	r5, ip, sl
 801ae26:	9509      	str	r5, [sp, #36]	; 0x24
 801ae28:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ae2a:	2dff      	cmp	r5, #255	; 0xff
 801ae2c:	d020      	beq.n	801ae70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801ae2e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ae30:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ae34:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ae36:	436f      	muls	r7, r5
 801ae38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ae3a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ae3e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ae40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ae44:	fb05 fa0a 	mul.w	sl, r5, sl
 801ae48:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ae4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae50:	44bc      	add	ip, r7
 801ae52:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ae56:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ae5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae6a:	ea4c 050a 	orr.w	r5, ip, sl
 801ae6e:	950f      	str	r5, [sp, #60]	; 0x3c
 801ae70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ae72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ae76:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ae78:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ae7c:	fb0e f707 	mul.w	r7, lr, r7
 801ae80:	fb02 770c 	mla	r7, r2, ip, r7
 801ae84:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ae88:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ae8a:	fb00 770c 	mla	r7, r0, ip, r7
 801ae8e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ae92:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ae94:	fb08 770c 	mla	r7, r8, ip, r7
 801ae98:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ae9c:	fb0e fe0c 	mul.w	lr, lr, ip
 801aea0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aea4:	fb02 e303 	mla	r3, r2, r3, lr
 801aea8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aeaa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801aeac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801aeb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aeb2:	fb00 330a 	mla	r3, r0, sl, r3
 801aeb6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801aeba:	fb08 3c0c 	mla	ip, r8, ip, r3
 801aebe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aec0:	f8b9 0000 	ldrh.w	r0, [r9]
 801aec4:	4359      	muls	r1, r3
 801aec6:	0a3f      	lsrs	r7, r7, #8
 801aec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aecc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aed0:	1c4b      	adds	r3, r1, #1
 801aed2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801aed6:	ea47 070c 	orr.w	r7, r7, ip
 801aeda:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aede:	1202      	asrs	r2, r0, #8
 801aee0:	0c3b      	lsrs	r3, r7, #16
 801aee2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801aee6:	b2c9      	uxtb	r1, r1
 801aee8:	fb13 f305 	smulbb	r3, r3, r5
 801aeec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801aef0:	fb02 3201 	mla	r2, r2, r1, r3
 801aef4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801aef8:	10c3      	asrs	r3, r0, #3
 801aefa:	b2ff      	uxtb	r7, r7
 801aefc:	00c0      	lsls	r0, r0, #3
 801aefe:	b2c0      	uxtb	r0, r0
 801af00:	fb17 f705 	smulbb	r7, r7, r5
 801af04:	fb00 7001 	mla	r0, r0, r1, r7
 801af08:	b292      	uxth	r2, r2
 801af0a:	fb1c fc05 	smulbb	ip, ip, r5
 801af0e:	b280      	uxth	r0, r0
 801af10:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801af14:	fb03 c301 	mla	r3, r3, r1, ip
 801af18:	1c51      	adds	r1, r2, #1
 801af1a:	f100 0c01 	add.w	ip, r0, #1
 801af1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af22:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801af26:	b29b      	uxth	r3, r3
 801af28:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801af2c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801af30:	ea4c 0202 	orr.w	r2, ip, r2
 801af34:	f103 0c01 	add.w	ip, r3, #1
 801af38:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801af3c:	095b      	lsrs	r3, r3, #5
 801af3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af42:	431a      	orrs	r2, r3
 801af44:	f8a9 2000 	strh.w	r2, [r9]
 801af48:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801af4a:	441c      	add	r4, r3
 801af4c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801af4e:	f109 0902 	add.w	r9, r9, #2
 801af52:	441e      	add	r6, r3
 801af54:	f10b 3bff 	add.w	fp, fp, #4294967295
 801af58:	e647      	b.n	801abea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801af5a:	2800      	cmp	r0, #0
 801af5c:	f43f aedf 	beq.w	801ad1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af60:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801af64:	9109      	str	r1, [sp, #36]	; 0x24
 801af66:	0e09      	lsrs	r1, r1, #24
 801af68:	9112      	str	r1, [sp, #72]	; 0x48
 801af6a:	e6d8      	b.n	801ad1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af6c:	b01d      	add	sp, #116	; 0x74
 801af6e:	ecbd 8b08 	vpop	{d8-d11}
 801af72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801af78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801af78:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af7c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801af80:	fb04 5603 	mla	r6, r4, r3, r5
 801af84:	2c00      	cmp	r4, #0
 801af86:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801af8a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801af8e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801af92:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801af96:	db37      	blt.n	801b008 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801af98:	45a6      	cmp	lr, r4
 801af9a:	dd35      	ble.n	801b008 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801af9c:	2d00      	cmp	r5, #0
 801af9e:	db31      	blt.n	801b004 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801afa0:	42ab      	cmp	r3, r5
 801afa2:	dd2f      	ble.n	801b004 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801afa4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801afa8:	1c6e      	adds	r6, r5, #1
 801afaa:	d430      	bmi.n	801b00e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801afac:	42b3      	cmp	r3, r6
 801afae:	dd2e      	ble.n	801b00e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801afb0:	b378      	cbz	r0, 801b012 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801afb2:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801afb6:	3401      	adds	r4, #1
 801afb8:	d42f      	bmi.n	801b01a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801afba:	45a6      	cmp	lr, r4
 801afbc:	dd2d      	ble.n	801b01a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801afbe:	b37f      	cbz	r7, 801b020 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801afc0:	2d00      	cmp	r5, #0
 801afc2:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801afc6:	db26      	blt.n	801b016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801afc8:	42ab      	cmp	r3, r5
 801afca:	dd24      	ble.n	801b016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801afcc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801afd0:	3501      	adds	r5, #1
 801afd2:	d428      	bmi.n	801b026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801afd4:	42ab      	cmp	r3, r5
 801afd6:	dd26      	ble.n	801b026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801afd8:	b338      	cbz	r0, 801b02a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801afda:	f8de 3004 	ldr.w	r3, [lr, #4]
 801afde:	280f      	cmp	r0, #15
 801afe0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801afe4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801afe8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801afec:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801aff0:	d801      	bhi.n	801aff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801aff2:	2f0f      	cmp	r7, #15
 801aff4:	d91b      	bls.n	801b02e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801aff6:	4b87      	ldr	r3, [pc, #540]	; (801b214 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801aff8:	4a87      	ldr	r2, [pc, #540]	; (801b218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801affa:	4888      	ldr	r0, [pc, #544]	; (801b21c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801affc:	f240 11f9 	movw	r1, #505	; 0x1f9
 801b000:	f002 fad8 	bl	801d5b4 <__assert_func>
 801b004:	2200      	movs	r2, #0
 801b006:	e7cf      	b.n	801afa8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801b008:	2600      	movs	r6, #0
 801b00a:	4632      	mov	r2, r6
 801b00c:	e7d3      	b.n	801afb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b00e:	2600      	movs	r6, #0
 801b010:	e7d1      	b.n	801afb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b012:	4606      	mov	r6, r0
 801b014:	e7cf      	b.n	801afb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b016:	2400      	movs	r4, #0
 801b018:	e7da      	b.n	801afd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801b01a:	2300      	movs	r3, #0
 801b01c:	461c      	mov	r4, r3
 801b01e:	e7de      	b.n	801afde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b020:	463b      	mov	r3, r7
 801b022:	463c      	mov	r4, r7
 801b024:	e7db      	b.n	801afde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b026:	2300      	movs	r3, #0
 801b028:	e7d9      	b.n	801afde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b02a:	4603      	mov	r3, r0
 801b02c:	e7d7      	b.n	801afde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b02e:	b280      	uxth	r0, r0
 801b030:	b2bf      	uxth	r7, r7
 801b032:	fb07 fe00 	mul.w	lr, r7, r0
 801b036:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b03a:	0100      	lsls	r0, r0, #4
 801b03c:	eba0 0c0e 	sub.w	ip, r0, lr
 801b040:	b2bf      	uxth	r7, r7
 801b042:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b046:	fa1f fc8c 	uxth.w	ip, ip
 801b04a:	1bed      	subs	r5, r5, r7
 801b04c:	b2ad      	uxth	r5, r5
 801b04e:	fb0c f00a 	mul.w	r0, ip, sl
 801b052:	fb0b 0005 	mla	r0, fp, r5, r0
 801b056:	fb07 0009 	mla	r0, r7, r9, r0
 801b05a:	fb0e 0008 	mla	r0, lr, r8, r0
 801b05e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b062:	9001      	str	r0, [sp, #4]
 801b064:	2800      	cmp	r0, #0
 801b066:	f000 80d1 	beq.w	801b20c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801b06a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b06e:	d018      	beq.n	801b0a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801b070:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b074:	fb0b f000 	mul.w	r0, fp, r0
 801b078:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b07c:	fb0b fb02 	mul.w	fp, fp, r2
 801b080:	0a02      	lsrs	r2, r0, #8
 801b082:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b086:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b08a:	4402      	add	r2, r0
 801b08c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b090:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b094:	0a12      	lsrs	r2, r2, #8
 801b096:	0a00      	lsrs	r0, r0, #8
 801b098:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b09c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b0a0:	4302      	orrs	r2, r0
 801b0a2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b0a6:	d01a      	beq.n	801b0de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801b0a8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b0ac:	fb0a f000 	mul.w	r0, sl, r0
 801b0b0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b0b4:	fb0a fa06 	mul.w	sl, sl, r6
 801b0b8:	0a06      	lsrs	r6, r0, #8
 801b0ba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b0be:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b0c2:	4406      	add	r6, r0
 801b0c4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b0c8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801b0cc:	0a36      	lsrs	r6, r6, #8
 801b0ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b0d2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b0d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b0da:	ea46 060a 	orr.w	r6, r6, sl
 801b0de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b0e2:	d01b      	beq.n	801b11c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801b0e4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b0e8:	fb09 fa0a 	mul.w	sl, r9, sl
 801b0ec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b0f0:	fb09 f004 	mul.w	r0, r9, r4
 801b0f4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b0f8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b0fc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b100:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801b104:	4454      	add	r4, sl
 801b106:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801b10a:	0a24      	lsrs	r4, r4, #8
 801b10c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b110:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b114:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b118:	ea44 0409 	orr.w	r4, r4, r9
 801b11c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b120:	d01b      	beq.n	801b15a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801b122:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b126:	fb08 f909 	mul.w	r9, r8, r9
 801b12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b12e:	fb08 f003 	mul.w	r0, r8, r3
 801b132:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b136:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b13a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b13e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801b142:	444b      	add	r3, r9
 801b144:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801b148:	0a1b      	lsrs	r3, r3, #8
 801b14a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b14e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b152:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b156:	ea43 0308 	orr.w	r3, r3, r8
 801b15a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801b15e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b162:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801b166:	fb0c f808 	mul.w	r8, ip, r8
 801b16a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b16e:	fb0c f606 	mul.w	r6, ip, r6
 801b172:	fb05 8909 	mla	r9, r5, r9, r8
 801b176:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801b17a:	fb05 6502 	mla	r5, r5, r2, r6
 801b17e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b182:	fb07 9908 	mla	r9, r7, r8, r9
 801b186:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801b18a:	fb07 5704 	mla	r7, r7, r4, r5
 801b18e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b192:	8808      	ldrh	r0, [r1, #0]
 801b194:	fb0e 9808 	mla	r8, lr, r8, r9
 801b198:	fb0e 7e03 	mla	lr, lr, r3, r7
 801b19c:	9b01      	ldr	r3, [sp, #4]
 801b19e:	43da      	mvns	r2, r3
 801b1a0:	1203      	asrs	r3, r0, #8
 801b1a2:	b2d2      	uxtb	r2, r2
 801b1a4:	10c4      	asrs	r4, r0, #3
 801b1a6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b1aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b1ae:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b1b2:	00c0      	lsls	r0, r0, #3
 801b1b4:	4353      	muls	r3, r2
 801b1b6:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801b1ba:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b1be:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801b1c2:	b2c0      	uxtb	r0, r0
 801b1c4:	ea48 0e0e 	orr.w	lr, r8, lr
 801b1c8:	4354      	muls	r4, r2
 801b1ca:	4350      	muls	r0, r2
 801b1cc:	1c5a      	adds	r2, r3, #1
 801b1ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b1d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801b1d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b1da:	1c62      	adds	r2, r4, #1
 801b1dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b1e0:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801b1e4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b1e8:	021b      	lsls	r3, r3, #8
 801b1ea:	00d2      	lsls	r2, r2, #3
 801b1ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b1f4:	4313      	orrs	r3, r2
 801b1f6:	1c42      	adds	r2, r0, #1
 801b1f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b1fc:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801b200:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801b204:	ea4e 0e03 	orr.w	lr, lr, r3
 801b208:	f8a1 e000 	strh.w	lr, [r1]
 801b20c:	b003      	add	sp, #12
 801b20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b212:	bf00      	nop
 801b214:	080214b7 	.word	0x080214b7
 801b218:	080219e6 	.word	0x080219e6
 801b21c:	08021484 	.word	0x08021484

0801b220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b224:	ed2d 8b08 	vpush	{d8-d11}
 801b228:	b09b      	sub	sp, #108	; 0x6c
 801b22a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801b22e:	9218      	str	r2, [sp, #96]	; 0x60
 801b230:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801b232:	9116      	str	r1, [sp, #88]	; 0x58
 801b234:	9307      	str	r3, [sp, #28]
 801b236:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801b23a:	9019      	str	r0, [sp, #100]	; 0x64
 801b23c:	6850      	ldr	r0, [r2, #4]
 801b23e:	6812      	ldr	r2, [r2, #0]
 801b240:	fb00 1303 	mla	r3, r0, r3, r1
 801b244:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b248:	930a      	str	r3, [sp, #40]	; 0x28
 801b24a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b24c:	681b      	ldr	r3, [r3, #0]
 801b24e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b250:	eeb0 aa40 	vmov.f32	s20, s0
 801b254:	eef0 9a60 	vmov.f32	s19, s1
 801b258:	eeb0 9a41 	vmov.f32	s18, s2
 801b25c:	eeb0 8a62 	vmov.f32	s16, s5
 801b260:	eef0 8a43 	vmov.f32	s17, s6
 801b264:	eef0 ba44 	vmov.f32	s23, s8
 801b268:	eeb0 ba64 	vmov.f32	s22, s9
 801b26c:	eef0 aa45 	vmov.f32	s21, s10
 801b270:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b272:	2b00      	cmp	r3, #0
 801b274:	dc03      	bgt.n	801b27e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b276:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b278:	2b00      	cmp	r3, #0
 801b27a:	f340 8386 	ble.w	801b98a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801b27e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b280:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b284:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b288:	1e48      	subs	r0, r1, #1
 801b28a:	1e57      	subs	r7, r2, #1
 801b28c:	9b07      	ldr	r3, [sp, #28]
 801b28e:	2b00      	cmp	r3, #0
 801b290:	f340 8166 	ble.w	801b560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801b294:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b298:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b29c:	d406      	bmi.n	801b2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b29e:	4584      	cmp	ip, r0
 801b2a0:	da04      	bge.n	801b2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b2a2:	2b00      	cmp	r3, #0
 801b2a4:	db02      	blt.n	801b2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b2a6:	42bb      	cmp	r3, r7
 801b2a8:	f2c0 815b 	blt.w	801b562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b2ac:	f11c 0c01 	adds.w	ip, ip, #1
 801b2b0:	f100 814b 	bmi.w	801b54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b2b4:	4561      	cmp	r1, ip
 801b2b6:	f2c0 8148 	blt.w	801b54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b2ba:	3301      	adds	r3, #1
 801b2bc:	f100 8145 	bmi.w	801b54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b2c0:	429a      	cmp	r2, r3
 801b2c2:	f2c0 8142 	blt.w	801b54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b2c6:	9b07      	ldr	r3, [sp, #28]
 801b2c8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b2ca:	9317      	str	r3, [sp, #92]	; 0x5c
 801b2cc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b2ce:	2b00      	cmp	r3, #0
 801b2d0:	f340 8165 	ble.w	801b59e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801b2d4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801b2d6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b2d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b2dc:	689b      	ldr	r3, [r3, #8]
 801b2de:	1422      	asrs	r2, r4, #16
 801b2e0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b2e4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b2e8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b2ec:	f100 81d5 	bmi.w	801b69a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b2f0:	f103 38ff 	add.w	r8, r3, #4294967295
 801b2f4:	4542      	cmp	r2, r8
 801b2f6:	f280 81d0 	bge.w	801b69a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b2fa:	f1bc 0f00 	cmp.w	ip, #0
 801b2fe:	f2c0 81cc 	blt.w	801b69a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b302:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b306:	45c4      	cmp	ip, r8
 801b308:	f280 81c7 	bge.w	801b69a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b30c:	b21b      	sxth	r3, r3
 801b30e:	fb0c 2203 	mla	r2, ip, r3, r2
 801b312:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b314:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b318:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b31c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b320:	2900      	cmp	r1, #0
 801b322:	f000 8182 	beq.w	801b62a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801b326:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b32a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b32c:	0e2d      	lsrs	r5, r5, #24
 801b32e:	9512      	str	r5, [sp, #72]	; 0x48
 801b330:	b180      	cbz	r0, 801b354 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b332:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b336:	3b01      	subs	r3, #1
 801b338:	009b      	lsls	r3, r3, #2
 801b33a:	3304      	adds	r3, #4
 801b33c:	eb08 0c03 	add.w	ip, r8, r3
 801b340:	f858 3003 	ldr.w	r3, [r8, r3]
 801b344:	9308      	str	r3, [sp, #32]
 801b346:	0e1b      	lsrs	r3, r3, #24
 801b348:	9310      	str	r3, [sp, #64]	; 0x40
 801b34a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b34e:	930c      	str	r3, [sp, #48]	; 0x30
 801b350:	0e1b      	lsrs	r3, r3, #24
 801b352:	9313      	str	r3, [sp, #76]	; 0x4c
 801b354:	b289      	uxth	r1, r1
 801b356:	b280      	uxth	r0, r0
 801b358:	fb01 f900 	mul.w	r9, r1, r0
 801b35c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b360:	0109      	lsls	r1, r1, #4
 801b362:	eba1 0809 	sub.w	r8, r1, r9
 801b366:	b280      	uxth	r0, r0
 801b368:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b36c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b36e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b370:	fa1f f888 	uxth.w	r8, r8
 801b374:	1a09      	subs	r1, r1, r0
 801b376:	b289      	uxth	r1, r1
 801b378:	fb08 f303 	mul.w	r3, r8, r3
 801b37c:	fb01 330e 	mla	r3, r1, lr, r3
 801b380:	fb00 3305 	mla	r3, r0, r5, r3
 801b384:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b386:	fb09 3305 	mla	r3, r9, r5, r3
 801b38a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b38e:	2b00      	cmp	r3, #0
 801b390:	f000 80d2 	beq.w	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b394:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b398:	d01b      	beq.n	801b3d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801b39a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b39e:	fb0e fa0a 	mul.w	sl, lr, sl
 801b3a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b3a6:	fb0e fe02 	mul.w	lr, lr, r2
 801b3aa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b3ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b3b6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b3ba:	4452      	add	r2, sl
 801b3bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b3c0:	0a12      	lsrs	r2, r2, #8
 801b3c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3ca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b3ce:	ea42 020c 	orr.w	r2, r2, ip
 801b3d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b3d4:	2dff      	cmp	r5, #255	; 0xff
 801b3d6:	d021      	beq.n	801b41c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b3d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b3da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b3de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b3e0:	fb05 fb0b 	mul.w	fp, r5, fp
 801b3e4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b3e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b3ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b3ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b3f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b3f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b3fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b400:	44de      	add	lr, fp
 801b402:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b406:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b40a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b40e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b412:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b416:	ea4e 050a 	orr.w	r5, lr, sl
 801b41a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b41c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b41e:	2dff      	cmp	r5, #255	; 0xff
 801b420:	d021      	beq.n	801b466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b422:	9d08      	ldr	r5, [sp, #32]
 801b424:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b428:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b42a:	fb05 fb0b 	mul.w	fp, r5, fp
 801b42e:	9d08      	ldr	r5, [sp, #32]
 801b430:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b434:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b436:	fb05 fa0e 	mul.w	sl, r5, lr
 801b43a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b43e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b442:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b446:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b44a:	44de      	add	lr, fp
 801b44c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b450:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b454:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b458:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b45c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b460:	ea4e 050a 	orr.w	r5, lr, sl
 801b464:	9508      	str	r5, [sp, #32]
 801b466:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b468:	2dff      	cmp	r5, #255	; 0xff
 801b46a:	d021      	beq.n	801b4b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b46c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b46e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b472:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b474:	fb05 fb0b 	mul.w	fp, r5, fp
 801b478:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b47a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b47e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b480:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b484:	fb05 fa0a 	mul.w	sl, r5, sl
 801b488:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b48c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b490:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b494:	44de      	add	lr, fp
 801b496:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b49a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b49e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b4a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b4aa:	ea4e 050a 	orr.w	r5, lr, sl
 801b4ae:	950c      	str	r5, [sp, #48]	; 0x30
 801b4b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b4b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b4b6:	9d08      	ldr	r5, [sp, #32]
 801b4b8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b4bc:	fb08 fc0c 	mul.w	ip, r8, ip
 801b4c0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b4c4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b4c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b4ca:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b4ce:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b4d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b4d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b4d8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b4dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b4e0:	fb08 f80e 	mul.w	r8, r8, lr
 801b4e4:	fb01 8202 	mla	r2, r1, r2, r8
 801b4e8:	9908      	ldr	r1, [sp, #32]
 801b4ea:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b4ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b4f0:	fb00 220a 	mla	r2, r0, sl, r2
 801b4f4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801b4f8:	fb09 2900 	mla	r9, r9, r0, r2
 801b4fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b500:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b508:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b50c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b510:	2bff      	cmp	r3, #255	; 0xff
 801b512:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b516:	f040 8091 	bne.w	801b63c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801b51a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801b51e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801b522:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b526:	f022 0207 	bic.w	r2, r2, #7
 801b52a:	431a      	orrs	r2, r3
 801b52c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b530:	ea4c 0c02 	orr.w	ip, ip, r2
 801b534:	f8a7 c000 	strh.w	ip, [r7]
 801b538:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b53a:	441c      	add	r4, r3
 801b53c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b53e:	441e      	add	r6, r3
 801b540:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b542:	3b01      	subs	r3, #1
 801b544:	3702      	adds	r7, #2
 801b546:	9317      	str	r3, [sp, #92]	; 0x5c
 801b548:	e6c0      	b.n	801b2cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801b54a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b54c:	441c      	add	r4, r3
 801b54e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b550:	441e      	add	r6, r3
 801b552:	9b07      	ldr	r3, [sp, #28]
 801b554:	3b01      	subs	r3, #1
 801b556:	9307      	str	r3, [sp, #28]
 801b558:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b55a:	3302      	adds	r3, #2
 801b55c:	930a      	str	r3, [sp, #40]	; 0x28
 801b55e:	e695      	b.n	801b28c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b560:	d024      	beq.n	801b5ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b562:	9b07      	ldr	r3, [sp, #28]
 801b564:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801b566:	3b01      	subs	r3, #1
 801b568:	fb00 4003 	mla	r0, r0, r3, r4
 801b56c:	1400      	asrs	r0, r0, #16
 801b56e:	f53f aeaa 	bmi.w	801b2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b572:	3901      	subs	r1, #1
 801b574:	4288      	cmp	r0, r1
 801b576:	f6bf aea6 	bge.w	801b2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b57a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801b57c:	fb01 6303 	mla	r3, r1, r3, r6
 801b580:	141b      	asrs	r3, r3, #16
 801b582:	f53f aea0 	bmi.w	801b2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b586:	3a01      	subs	r2, #1
 801b588:	4293      	cmp	r3, r2
 801b58a:	f6bf ae9c 	bge.w	801b2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b58e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b592:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801b596:	f1bb 0f00 	cmp.w	fp, #0
 801b59a:	f300 809a 	bgt.w	801b6d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801b59e:	9b07      	ldr	r3, [sp, #28]
 801b5a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b5a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b5a6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b5aa:	930a      	str	r3, [sp, #40]	; 0x28
 801b5ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b5ae:	2b00      	cmp	r3, #0
 801b5b0:	f340 81eb 	ble.w	801b98a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801b5b4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b5b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b5bc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b5c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5c2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b5c6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b5ca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b5ce:	eef0 6a48 	vmov.f32	s13, s16
 801b5d2:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b5d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5da:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b5de:	ee16 4a90 	vmov	r4, s13
 801b5e2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b5e6:	eef0 6a68 	vmov.f32	s13, s17
 801b5ea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b5ee:	ee18 2a10 	vmov	r2, s16
 801b5f2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5fa:	ee18 2a90 	vmov	r2, s17
 801b5fe:	932f      	str	r3, [sp, #188]	; 0xbc
 801b600:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b602:	fb92 f3f3 	sdiv	r3, r2, r3
 801b606:	9330      	str	r3, [sp, #192]	; 0xc0
 801b608:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b60a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b60c:	3b01      	subs	r3, #1
 801b60e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b612:	9316      	str	r3, [sp, #88]	; 0x58
 801b614:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b616:	bf08      	it	eq
 801b618:	4613      	moveq	r3, r2
 801b61a:	ee16 6a90 	vmov	r6, s13
 801b61e:	9307      	str	r3, [sp, #28]
 801b620:	eef0 8a67 	vmov.f32	s17, s15
 801b624:	eeb0 8a47 	vmov.f32	s16, s14
 801b628:	e622      	b.n	801b270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b62a:	2800      	cmp	r0, #0
 801b62c:	f43f ae92 	beq.w	801b354 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b630:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b634:	9308      	str	r3, [sp, #32]
 801b636:	0e1b      	lsrs	r3, r3, #24
 801b638:	9310      	str	r3, [sp, #64]	; 0x40
 801b63a:	e68b      	b.n	801b354 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b63c:	8839      	ldrh	r1, [r7, #0]
 801b63e:	4dd5      	ldr	r5, [pc, #852]	; (801b994 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801b640:	43db      	mvns	r3, r3
 801b642:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801b646:	fa5f f883 	uxtb.w	r8, r3
 801b64a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b64e:	fb0e fe08 	mul.w	lr, lr, r8
 801b652:	10c8      	asrs	r0, r1, #3
 801b654:	00cb      	lsls	r3, r1, #3
 801b656:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b65a:	f10e 0101 	add.w	r1, lr, #1
 801b65e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801b662:	fb00 f008 	mul.w	r0, r0, r8
 801b666:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801b66a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b66e:	f100 0e01 	add.w	lr, r0, #1
 801b672:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b676:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b67a:	b2db      	uxtb	r3, r3
 801b67c:	b2c9      	uxtb	r1, r1
 801b67e:	00d2      	lsls	r2, r2, #3
 801b680:	fb03 f308 	mul.w	r3, r3, r8
 801b684:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801b688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b68c:	430a      	orrs	r2, r1
 801b68e:	1c59      	adds	r1, r3, #1
 801b690:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b694:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b698:	e748      	b.n	801b52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b69a:	f112 0801 	adds.w	r8, r2, #1
 801b69e:	f53f af4b 	bmi.w	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b6a2:	4543      	cmp	r3, r8
 801b6a4:	f6ff af48 	blt.w	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b6a8:	f11c 0801 	adds.w	r8, ip, #1
 801b6ac:	f53f af44 	bmi.w	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b6b0:	45c6      	cmp	lr, r8
 801b6b2:	f6ff af41 	blt.w	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b6b6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b6ba:	fa0f f28e 	sxth.w	r2, lr
 801b6be:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801b6c2:	9200      	str	r2, [sp, #0]
 801b6c4:	b21b      	sxth	r3, r3
 801b6c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b6c8:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b6ca:	4639      	mov	r1, r7
 801b6cc:	f7ff fc54 	bl	801af78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801b6d0:	e732      	b.n	801b538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b6d2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b6d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b6d6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801b6da:	1421      	asrs	r1, r4, #16
 801b6dc:	1433      	asrs	r3, r6, #16
 801b6de:	fb07 1303 	mla	r3, r7, r3, r1
 801b6e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b6e4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801b6e8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b6ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b6f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b6f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b6f8:	2a00      	cmp	r2, #0
 801b6fa:	f000 8107 	beq.w	801b90c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801b6fe:	684d      	ldr	r5, [r1, #4]
 801b700:	950d      	str	r5, [sp, #52]	; 0x34
 801b702:	0e2d      	lsrs	r5, r5, #24
 801b704:	9514      	str	r5, [sp, #80]	; 0x50
 801b706:	b178      	cbz	r0, 801b728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801b708:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801b70c:	3f01      	subs	r7, #1
 801b70e:	00bf      	lsls	r7, r7, #2
 801b710:	3704      	adds	r7, #4
 801b712:	eb01 0e07 	add.w	lr, r1, r7
 801b716:	59c9      	ldr	r1, [r1, r7]
 801b718:	9109      	str	r1, [sp, #36]	; 0x24
 801b71a:	0e09      	lsrs	r1, r1, #24
 801b71c:	9111      	str	r1, [sp, #68]	; 0x44
 801b71e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b722:	910e      	str	r1, [sp, #56]	; 0x38
 801b724:	0e09      	lsrs	r1, r1, #24
 801b726:	9115      	str	r1, [sp, #84]	; 0x54
 801b728:	b292      	uxth	r2, r2
 801b72a:	b280      	uxth	r0, r0
 801b72c:	fb02 f900 	mul.w	r9, r2, r0
 801b730:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b734:	0112      	lsls	r2, r2, #4
 801b736:	eba2 0e09 	sub.w	lr, r2, r9
 801b73a:	b280      	uxth	r0, r0
 801b73c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b740:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b742:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b744:	fa1f fe8e 	uxth.w	lr, lr
 801b748:	1a09      	subs	r1, r1, r0
 801b74a:	b289      	uxth	r1, r1
 801b74c:	fb0e f202 	mul.w	r2, lr, r2
 801b750:	fb01 220c 	mla	r2, r1, ip, r2
 801b754:	fb00 2205 	mla	r2, r0, r5, r2
 801b758:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b75a:	fb09 2205 	mla	r2, r9, r5, r2
 801b75e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b762:	2a00      	cmp	r2, #0
 801b764:	f000 80c9 	beq.w	801b8fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801b768:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b76c:	d019      	beq.n	801b7a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801b76e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b772:	fb0c fa0a 	mul.w	sl, ip, sl
 801b776:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b77a:	fb0c fc03 	mul.w	ip, ip, r3
 801b77e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b782:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b786:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b78a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b78e:	4453      	add	r3, sl
 801b790:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b794:	0a1b      	lsrs	r3, r3, #8
 801b796:	0a3f      	lsrs	r7, r7, #8
 801b798:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b79c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b7a0:	433b      	orrs	r3, r7
 801b7a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b7a4:	2dff      	cmp	r5, #255	; 0xff
 801b7a6:	d020      	beq.n	801b7ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801b7a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b7aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b7ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b7b0:	436f      	muls	r7, r5
 801b7b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b7b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b7b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b7ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7be:	fb05 fa0a 	mul.w	sl, r5, sl
 801b7c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7ca:	44bc      	add	ip, r7
 801b7cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b7d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7e4:	ea4c 050a 	orr.w	r5, ip, sl
 801b7e8:	950d      	str	r5, [sp, #52]	; 0x34
 801b7ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b7ec:	2dff      	cmp	r5, #255	; 0xff
 801b7ee:	d020      	beq.n	801b832 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801b7f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b7f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b7f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b7f8:	436f      	muls	r7, r5
 801b7fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b7fc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b800:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b802:	fb05 fa0c 	mul.w	sl, r5, ip
 801b806:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b80a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b80e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b812:	44bc      	add	ip, r7
 801b814:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b818:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b81c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b820:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b824:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b828:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b82c:	ea4c 050a 	orr.w	r5, ip, sl
 801b830:	9509      	str	r5, [sp, #36]	; 0x24
 801b832:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b834:	2dff      	cmp	r5, #255	; 0xff
 801b836:	d020      	beq.n	801b87a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801b838:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b83a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b83e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b840:	436f      	muls	r7, r5
 801b842:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b844:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b848:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b84a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b84e:	fb05 fa0a 	mul.w	sl, r5, sl
 801b852:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b856:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b85a:	44bc      	add	ip, r7
 801b85c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b860:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b864:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b868:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b86c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b870:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b874:	ea4c 050a 	orr.w	r5, ip, sl
 801b878:	950e      	str	r5, [sp, #56]	; 0x38
 801b87a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b87c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b880:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b882:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b886:	fb0e f707 	mul.w	r7, lr, r7
 801b88a:	fb01 770c 	mla	r7, r1, ip, r7
 801b88e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b892:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b894:	fb00 770c 	mla	r7, r0, ip, r7
 801b898:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b89c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b89e:	fb09 770c 	mla	r7, r9, ip, r7
 801b8a2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b8a6:	fb0e fe0c 	mul.w	lr, lr, ip
 801b8aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8ae:	fb01 e303 	mla	r3, r1, r3, lr
 801b8b2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b8b4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b8b8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b8ba:	fb00 330a 	mla	r3, r0, sl, r3
 801b8be:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b8c2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b8c6:	0a3f      	lsrs	r7, r7, #8
 801b8c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b8d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8d4:	ea47 070c 	orr.w	r7, r7, ip
 801b8d8:	2aff      	cmp	r2, #255	; 0xff
 801b8da:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801b8de:	d11e      	bne.n	801b91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801b8e0:	097a      	lsrs	r2, r7, #5
 801b8e2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801b8e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8ea:	f023 0307 	bic.w	r3, r3, #7
 801b8ee:	4313      	orrs	r3, r2
 801b8f0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801b8f4:	431f      	orrs	r7, r3
 801b8f6:	f8a8 7000 	strh.w	r7, [r8]
 801b8fa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b8fc:	441c      	add	r4, r3
 801b8fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b900:	f108 0802 	add.w	r8, r8, #2
 801b904:	441e      	add	r6, r3
 801b906:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b90a:	e644      	b.n	801b596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b90c:	2800      	cmp	r0, #0
 801b90e:	f43f af0b 	beq.w	801b728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801b912:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801b916:	9109      	str	r1, [sp, #36]	; 0x24
 801b918:	0e09      	lsrs	r1, r1, #24
 801b91a:	9111      	str	r1, [sp, #68]	; 0x44
 801b91c:	e704      	b.n	801b728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801b91e:	f8b8 1000 	ldrh.w	r1, [r8]
 801b922:	43d2      	mvns	r2, r2
 801b924:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801b928:	fa5f fe82 	uxtb.w	lr, r2
 801b92c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b930:	fb0c fc0e 	mul.w	ip, ip, lr
 801b934:	10c8      	asrs	r0, r1, #3
 801b936:	00ca      	lsls	r2, r1, #3
 801b938:	f10c 0101 	add.w	r1, ip, #1
 801b93c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b940:	0c39      	lsrs	r1, r7, #16
 801b942:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b946:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b94a:	4912      	ldr	r1, [pc, #72]	; (801b994 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801b94c:	fb00 f00e 	mul.w	r0, r0, lr
 801b950:	fa5f fc8c 	uxtb.w	ip, ip
 801b954:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801b958:	b2d2      	uxtb	r2, r2
 801b95a:	1c41      	adds	r1, r0, #1
 801b95c:	fb02 f20e 	mul.w	r2, r2, lr
 801b960:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b964:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b968:	1c51      	adds	r1, r2, #1
 801b96a:	00c0      	lsls	r0, r0, #3
 801b96c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b970:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b974:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b978:	ea4c 0c00 	orr.w	ip, ip, r0
 801b97c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801b980:	ea47 0c0c 	orr.w	ip, r7, ip
 801b984:	f8a8 c000 	strh.w	ip, [r8]
 801b988:	e7b7      	b.n	801b8fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801b98a:	b01b      	add	sp, #108	; 0x6c
 801b98c:	ecbd 8b08 	vpop	{d8-d11}
 801b990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b994:	fffff800 	.word	0xfffff800

0801b998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801b998:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b99c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b9a0:	2c00      	cmp	r4, #0
 801b9a2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b9a6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b9aa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b9ae:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b9b2:	fb04 ce03 	mla	lr, r4, r3, ip
 801b9b6:	db60      	blt.n	801ba7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b9b8:	45a1      	cmp	r9, r4
 801b9ba:	dd5e      	ble.n	801ba7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b9bc:	f1bc 0f00 	cmp.w	ip, #0
 801b9c0:	db59      	blt.n	801ba76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b9c2:	45e0      	cmp	r8, ip
 801b9c4:	dd57      	ble.n	801ba76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b9c6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b9ca:	f01e 0f01 	tst.w	lr, #1
 801b9ce:	5c16      	ldrb	r6, [r2, r0]
 801b9d0:	bf0c      	ite	eq
 801b9d2:	f006 060f 	andeq.w	r6, r6, #15
 801b9d6:	1136      	asrne	r6, r6, #4
 801b9d8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b9dc:	b2f6      	uxtb	r6, r6
 801b9de:	f11c 0001 	adds.w	r0, ip, #1
 801b9e2:	d44d      	bmi.n	801ba80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b9e4:	4580      	cmp	r8, r0
 801b9e6:	dd4b      	ble.n	801ba80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b9e8:	2d00      	cmp	r5, #0
 801b9ea:	d04b      	beq.n	801ba84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801b9ec:	f10e 0a01 	add.w	sl, lr, #1
 801b9f0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b9f4:	f01a 0f01 	tst.w	sl, #1
 801b9f8:	5c10      	ldrb	r0, [r2, r0]
 801b9fa:	bf0c      	ite	eq
 801b9fc:	f000 000f 	andeq.w	r0, r0, #15
 801ba00:	1100      	asrne	r0, r0, #4
 801ba02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ba06:	b2c0      	uxtb	r0, r0
 801ba08:	3401      	adds	r4, #1
 801ba0a:	d43f      	bmi.n	801ba8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801ba0c:	45a1      	cmp	r9, r4
 801ba0e:	dd3d      	ble.n	801ba8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801ba10:	2f00      	cmp	r7, #0
 801ba12:	f000 80a8 	beq.w	801bb66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801ba16:	f1bc 0f00 	cmp.w	ip, #0
 801ba1a:	db35      	blt.n	801ba88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801ba1c:	45e0      	cmp	r8, ip
 801ba1e:	dd33      	ble.n	801ba88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801ba20:	eb03 090e 	add.w	r9, r3, lr
 801ba24:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ba28:	f019 0f01 	tst.w	r9, #1
 801ba2c:	5d14      	ldrb	r4, [r2, r4]
 801ba2e:	bf0c      	ite	eq
 801ba30:	f004 040f 	andeq.w	r4, r4, #15
 801ba34:	1124      	asrne	r4, r4, #4
 801ba36:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ba3a:	b2e4      	uxtb	r4, r4
 801ba3c:	f11c 0c01 	adds.w	ip, ip, #1
 801ba40:	d427      	bmi.n	801ba92 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ba42:	45e0      	cmp	r8, ip
 801ba44:	dd25      	ble.n	801ba92 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ba46:	b335      	cbz	r5, 801ba96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801ba48:	3301      	adds	r3, #1
 801ba4a:	449e      	add	lr, r3
 801ba4c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ba50:	f01e 0f01 	tst.w	lr, #1
 801ba54:	5cd2      	ldrb	r2, [r2, r3]
 801ba56:	bf0c      	ite	eq
 801ba58:	f002 020f 	andeq.w	r2, r2, #15
 801ba5c:	1112      	asrne	r2, r2, #4
 801ba5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba62:	b2d3      	uxtb	r3, r2
 801ba64:	2d0f      	cmp	r5, #15
 801ba66:	d917      	bls.n	801ba98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801ba68:	4b42      	ldr	r3, [pc, #264]	; (801bb74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801ba6a:	4a43      	ldr	r2, [pc, #268]	; (801bb78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801ba6c:	4843      	ldr	r0, [pc, #268]	; (801bb7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801ba6e:	f240 11f9 	movw	r1, #505	; 0x1f9
 801ba72:	f001 fd9f 	bl	801d5b4 <__assert_func>
 801ba76:	2600      	movs	r6, #0
 801ba78:	e7b1      	b.n	801b9de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801ba7a:	2000      	movs	r0, #0
 801ba7c:	4606      	mov	r6, r0
 801ba7e:	e7c3      	b.n	801ba08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ba80:	2000      	movs	r0, #0
 801ba82:	e7c1      	b.n	801ba08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ba84:	4628      	mov	r0, r5
 801ba86:	e7bf      	b.n	801ba08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ba88:	2400      	movs	r4, #0
 801ba8a:	e7d7      	b.n	801ba3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801ba8c:	2300      	movs	r3, #0
 801ba8e:	461c      	mov	r4, r3
 801ba90:	e7e8      	b.n	801ba64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ba92:	2300      	movs	r3, #0
 801ba94:	e7e6      	b.n	801ba64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ba96:	462b      	mov	r3, r5
 801ba98:	2f0f      	cmp	r7, #15
 801ba9a:	d8e5      	bhi.n	801ba68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ba9c:	b2ad      	uxth	r5, r5
 801ba9e:	b2bf      	uxth	r7, r7
 801baa0:	fb05 fc07 	mul.w	ip, r5, r7
 801baa4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801baa8:	012d      	lsls	r5, r5, #4
 801baaa:	b2bf      	uxth	r7, r7
 801baac:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801bab0:	eba5 050c 	sub.w	r5, r5, ip
 801bab4:	1bd2      	subs	r2, r2, r7
 801bab6:	b2ad      	uxth	r5, r5
 801bab8:	b292      	uxth	r2, r2
 801baba:	4368      	muls	r0, r5
 801babc:	fb06 0002 	mla	r0, r6, r2, r0
 801bac0:	fb07 0404 	mla	r4, r7, r4, r0
 801bac4:	fb0c 4303 	mla	r3, ip, r3, r4
 801bac8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bacc:	b1b3      	cbz	r3, 801bafc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801bace:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801bad2:	435a      	muls	r2, r3
 801bad4:	1c53      	adds	r3, r2, #1
 801bad6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bada:	4a29      	ldr	r2, [pc, #164]	; (801bb80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801badc:	121b      	asrs	r3, r3, #8
 801bade:	6812      	ldr	r2, [r2, #0]
 801bae0:	2bff      	cmp	r3, #255	; 0xff
 801bae2:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bae6:	d10b      	bne.n	801bb00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801bae8:	4b26      	ldr	r3, [pc, #152]	; (801bb84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801baea:	0950      	lsrs	r0, r2, #5
 801baec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801baf0:	4033      	ands	r3, r6
 801baf2:	4318      	orrs	r0, r3
 801baf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801baf8:	4302      	orrs	r2, r0
 801bafa:	800a      	strh	r2, [r1, #0]
 801bafc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bb00:	880d      	ldrh	r5, [r1, #0]
 801bb02:	b29f      	uxth	r7, r3
 801bb04:	122c      	asrs	r4, r5, #8
 801bb06:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801bb0a:	43db      	mvns	r3, r3
 801bb0c:	b2db      	uxtb	r3, r3
 801bb0e:	fb10 f007 	smulbb	r0, r0, r7
 801bb12:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801bb16:	fb04 0403 	mla	r4, r4, r3, r0
 801bb1a:	b2f6      	uxtb	r6, r6
 801bb1c:	10e8      	asrs	r0, r5, #3
 801bb1e:	b2d2      	uxtb	r2, r2
 801bb20:	00ed      	lsls	r5, r5, #3
 801bb22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bb26:	fb12 f207 	smulbb	r2, r2, r7
 801bb2a:	fb16 f607 	smulbb	r6, r6, r7
 801bb2e:	b2ed      	uxtb	r5, r5
 801bb30:	b2a4      	uxth	r4, r4
 801bb32:	fb00 6603 	mla	r6, r0, r3, r6
 801bb36:	fb05 2303 	mla	r3, r5, r3, r2
 801bb3a:	b29a      	uxth	r2, r3
 801bb3c:	1c63      	adds	r3, r4, #1
 801bb3e:	b2b0      	uxth	r0, r6
 801bb40:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801bb44:	1c53      	adds	r3, r2, #1
 801bb46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bb4a:	1c42      	adds	r2, r0, #1
 801bb4c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bb50:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801bb54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bb58:	0940      	lsrs	r0, r0, #5
 801bb5a:	4323      	orrs	r3, r4
 801bb5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb60:	4303      	orrs	r3, r0
 801bb62:	800b      	strh	r3, [r1, #0]
 801bb64:	e7ca      	b.n	801bafc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801bb66:	2d0f      	cmp	r5, #15
 801bb68:	f63f af7e 	bhi.w	801ba68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801bb6c:	463b      	mov	r3, r7
 801bb6e:	463c      	mov	r4, r7
 801bb70:	e794      	b.n	801ba9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801bb72:	bf00      	nop
 801bb74:	080214b7 	.word	0x080214b7
 801bb78:	080219e6 	.word	0x080219e6
 801bb7c:	08021484 	.word	0x08021484
 801bb80:	2000bfd4 	.word	0x2000bfd4
 801bb84:	00fff800 	.word	0x00fff800

0801bb88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb8c:	ed2d 8b08 	vpush	{d8-d11}
 801bb90:	b097      	sub	sp, #92	; 0x5c
 801bb92:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801bb96:	9214      	str	r2, [sp, #80]	; 0x50
 801bb98:	9309      	str	r3, [sp, #36]	; 0x24
 801bb9a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801bb9c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801bba0:	910d      	str	r1, [sp, #52]	; 0x34
 801bba2:	930f      	str	r3, [sp, #60]	; 0x3c
 801bba4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801bba8:	9015      	str	r0, [sp, #84]	; 0x54
 801bbaa:	6850      	ldr	r0, [r2, #4]
 801bbac:	6812      	ldr	r2, [r2, #0]
 801bbae:	fb00 1303 	mla	r3, r0, r3, r1
 801bbb2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bbb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bbb8:	689b      	ldr	r3, [r3, #8]
 801bbba:	3301      	adds	r3, #1
 801bbbc:	f023 0301 	bic.w	r3, r3, #1
 801bbc0:	930a      	str	r3, [sp, #40]	; 0x28
 801bbc2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bbc4:	681f      	ldr	r7, [r3, #0]
 801bbc6:	eeb0 aa40 	vmov.f32	s20, s0
 801bbca:	eef0 9a60 	vmov.f32	s19, s1
 801bbce:	eeb0 9a41 	vmov.f32	s18, s2
 801bbd2:	eeb0 8a62 	vmov.f32	s16, s5
 801bbd6:	eef0 8a43 	vmov.f32	s17, s6
 801bbda:	eef0 ba44 	vmov.f32	s23, s8
 801bbde:	eeb0 ba64 	vmov.f32	s22, s9
 801bbe2:	eef0 aa45 	vmov.f32	s21, s10
 801bbe6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbe8:	2b00      	cmp	r3, #0
 801bbea:	dc03      	bgt.n	801bbf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bbec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bbee:	2b00      	cmp	r3, #0
 801bbf0:	f340 8287 	ble.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801bbf4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bbf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bbfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bbfe:	1e48      	subs	r0, r1, #1
 801bc00:	f102 3cff 	add.w	ip, r2, #4294967295
 801bc04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc06:	2b00      	cmp	r3, #0
 801bc08:	f340 80c4 	ble.w	801bd94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801bc0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bc10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bc14:	d406      	bmi.n	801bc24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bc16:	4586      	cmp	lr, r0
 801bc18:	da04      	bge.n	801bc24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bc1a:	2b00      	cmp	r3, #0
 801bc1c:	db02      	blt.n	801bc24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801bc1e:	4563      	cmp	r3, ip
 801bc20:	f2c0 80b9 	blt.w	801bd96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801bc24:	f11e 0e01 	adds.w	lr, lr, #1
 801bc28:	f100 80aa 	bmi.w	801bd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801bc2c:	4571      	cmp	r1, lr
 801bc2e:	f2c0 80a7 	blt.w	801bd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801bc32:	3301      	adds	r3, #1
 801bc34:	f100 80a4 	bmi.w	801bd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801bc38:	429a      	cmp	r2, r3
 801bc3a:	f2c0 80a1 	blt.w	801bd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801bc3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc40:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801bc44:	930e      	str	r3, [sp, #56]	; 0x38
 801bc46:	46c8      	mov	r8, r9
 801bc48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc4a:	2b00      	cmp	r3, #0
 801bc4c:	f340 80c3 	ble.w	801bdd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801bc50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bc52:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801bc56:	1423      	asrs	r3, r4, #16
 801bc58:	ea4f 4026 	mov.w	r0, r6, asr #16
 801bc5c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bc60:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bc64:	f100 814d 	bmi.w	801bf02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801bc68:	f10c 3bff 	add.w	fp, ip, #4294967295
 801bc6c:	455b      	cmp	r3, fp
 801bc6e:	f280 8148 	bge.w	801bf02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801bc72:	2800      	cmp	r0, #0
 801bc74:	f2c0 8145 	blt.w	801bf02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801bc78:	f10e 3bff 	add.w	fp, lr, #4294967295
 801bc7c:	4558      	cmp	r0, fp
 801bc7e:	f280 8140 	bge.w	801bf02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801bc82:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801bc84:	fb00 3305 	mla	r3, r0, r5, r3
 801bc88:	0858      	lsrs	r0, r3, #1
 801bc8a:	07dd      	lsls	r5, r3, #31
 801bc8c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801bc90:	bf54      	ite	pl
 801bc92:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bc96:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bc9a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bc9e:	fa5f fc8c 	uxtb.w	ip, ip
 801bca2:	2a00      	cmp	r2, #0
 801bca4:	f000 80db 	beq.w	801be5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bca8:	1c58      	adds	r0, r3, #1
 801bcaa:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801bcae:	07c0      	lsls	r0, r0, #31
 801bcb0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bcb4:	bf54      	ite	pl
 801bcb6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801bcba:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801bcbe:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801bcc2:	fa5f f08e 	uxtb.w	r0, lr
 801bcc6:	9010      	str	r0, [sp, #64]	; 0x40
 801bcc8:	b1c9      	cbz	r1, 801bcfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bcca:	4453      	add	r3, sl
 801bccc:	0858      	lsrs	r0, r3, #1
 801bcce:	07dd      	lsls	r5, r3, #31
 801bcd0:	5c38      	ldrb	r0, [r7, r0]
 801bcd2:	bf54      	ite	pl
 801bcd4:	f000 000f 	andpl.w	r0, r0, #15
 801bcd8:	1100      	asrmi	r0, r0, #4
 801bcda:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bcde:	3301      	adds	r3, #1
 801bce0:	b2c0      	uxtb	r0, r0
 801bce2:	900b      	str	r0, [sp, #44]	; 0x2c
 801bce4:	0858      	lsrs	r0, r3, #1
 801bce6:	07dd      	lsls	r5, r3, #31
 801bce8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801bcec:	bf54      	ite	pl
 801bcee:	f00e 030f 	andpl.w	r3, lr, #15
 801bcf2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801bcf6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801bcfa:	b2db      	uxtb	r3, r3
 801bcfc:	9311      	str	r3, [sp, #68]	; 0x44
 801bcfe:	b292      	uxth	r2, r2
 801bd00:	b289      	uxth	r1, r1
 801bd02:	fb02 f301 	mul.w	r3, r2, r1
 801bd06:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801bd0a:	0112      	lsls	r2, r2, #4
 801bd0c:	b289      	uxth	r1, r1
 801bd0e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801bd12:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bd14:	1ad2      	subs	r2, r2, r3
 801bd16:	1a40      	subs	r0, r0, r1
 801bd18:	b292      	uxth	r2, r2
 801bd1a:	436a      	muls	r2, r5
 801bd1c:	b280      	uxth	r0, r0
 801bd1e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801bd22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bd24:	fb01 c102 	mla	r1, r1, r2, ip
 801bd28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bd2a:	fb03 1302 	mla	r3, r3, r2, r1
 801bd2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd32:	b1db      	cbz	r3, 801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bd34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bd36:	4353      	muls	r3, r2
 801bd38:	1c5a      	adds	r2, r3, #1
 801bd3a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bd3e:	4ac6      	ldr	r2, [pc, #792]	; (801c058 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801bd40:	121b      	asrs	r3, r3, #8
 801bd42:	6812      	ldr	r2, [r2, #0]
 801bd44:	2bff      	cmp	r3, #255	; 0xff
 801bd46:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801bd4a:	f040 8099 	bne.w	801be80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801bd4e:	0953      	lsrs	r3, r2, #5
 801bd50:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801bd54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd58:	f02c 0c07 	bic.w	ip, ip, #7
 801bd5c:	ea43 0c0c 	orr.w	ip, r3, ip
 801bd60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bd64:	ea4c 0202 	orr.w	r2, ip, r2
 801bd68:	f8a8 2000 	strh.w	r2, [r8]
 801bd6c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bd6e:	441c      	add	r4, r3
 801bd70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bd72:	441e      	add	r6, r3
 801bd74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd76:	3b01      	subs	r3, #1
 801bd78:	f108 0802 	add.w	r8, r8, #2
 801bd7c:	930e      	str	r3, [sp, #56]	; 0x38
 801bd7e:	e763      	b.n	801bc48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801bd80:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bd82:	441c      	add	r4, r3
 801bd84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bd86:	441e      	add	r6, r3
 801bd88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd8a:	3b01      	subs	r3, #1
 801bd8c:	9309      	str	r3, [sp, #36]	; 0x24
 801bd8e:	f109 0902 	add.w	r9, r9, #2
 801bd92:	e737      	b.n	801bc04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bd94:	d024      	beq.n	801bde0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801bd96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd98:	982b      	ldr	r0, [sp, #172]	; 0xac
 801bd9a:	3b01      	subs	r3, #1
 801bd9c:	fb00 4003 	mla	r0, r0, r3, r4
 801bda0:	1400      	asrs	r0, r0, #16
 801bda2:	f53f af4c 	bmi.w	801bc3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bda6:	3901      	subs	r1, #1
 801bda8:	4288      	cmp	r0, r1
 801bdaa:	f6bf af48 	bge.w	801bc3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bdae:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801bdb0:	fb01 6303 	mla	r3, r1, r3, r6
 801bdb4:	141b      	asrs	r3, r3, #16
 801bdb6:	f53f af42 	bmi.w	801bc3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bdba:	3a01      	subs	r2, #1
 801bdbc:	4293      	cmp	r3, r2
 801bdbe:	f6bf af3e 	bge.w	801bc3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bdc2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bdc6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bdca:	930e      	str	r3, [sp, #56]	; 0x38
 801bdcc:	46c8      	mov	r8, r9
 801bdce:	f1bb 0f00 	cmp.w	fp, #0
 801bdd2:	f300 80b7 	bgt.w	801bf44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801bdd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdd8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bddc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bde0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bde2:	2b00      	cmp	r3, #0
 801bde4:	f340 818d 	ble.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801bde8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bdec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bdf0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bdf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bdf6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bdfa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bdfe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801be02:	eef0 6a48 	vmov.f32	s13, s16
 801be06:	ee69 7a27 	vmul.f32	s15, s18, s15
 801be0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801be12:	ee16 4a90 	vmov	r4, s13
 801be16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801be1a:	eef0 6a68 	vmov.f32	s13, s17
 801be1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801be22:	ee18 2a10 	vmov	r2, s16
 801be26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801be2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801be2e:	ee18 2a90 	vmov	r2, s17
 801be32:	932b      	str	r3, [sp, #172]	; 0xac
 801be34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be36:	fb92 f3f3 	sdiv	r3, r2, r3
 801be3a:	932c      	str	r3, [sp, #176]	; 0xb0
 801be3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be40:	3b01      	subs	r3, #1
 801be42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be46:	930d      	str	r3, [sp, #52]	; 0x34
 801be48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be4a:	bf08      	it	eq
 801be4c:	4613      	moveq	r3, r2
 801be4e:	ee16 6a90 	vmov	r6, s13
 801be52:	9309      	str	r3, [sp, #36]	; 0x24
 801be54:	eef0 8a67 	vmov.f32	s17, s15
 801be58:	eeb0 8a47 	vmov.f32	s16, s14
 801be5c:	e6c3      	b.n	801bbe6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801be5e:	2900      	cmp	r1, #0
 801be60:	f43f af4d 	beq.w	801bcfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801be64:	eb0a 0003 	add.w	r0, sl, r3
 801be68:	0843      	lsrs	r3, r0, #1
 801be6a:	07c0      	lsls	r0, r0, #31
 801be6c:	5cfb      	ldrb	r3, [r7, r3]
 801be6e:	bf54      	ite	pl
 801be70:	f003 030f 	andpl.w	r3, r3, #15
 801be74:	111b      	asrmi	r3, r3, #4
 801be76:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801be7a:	b2db      	uxtb	r3, r3
 801be7c:	930b      	str	r3, [sp, #44]	; 0x2c
 801be7e:	e73e      	b.n	801bcfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801be80:	f8b8 e000 	ldrh.w	lr, [r8]
 801be84:	fa1f fb83 	uxth.w	fp, r3
 801be88:	ea4f 202e 	mov.w	r0, lr, asr #8
 801be8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801be90:	43db      	mvns	r3, r3
 801be92:	b2db      	uxtb	r3, r3
 801be94:	fb11 f10b 	smulbb	r1, r1, fp
 801be98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801be9c:	fb00 1003 	mla	r0, r0, r3, r1
 801bea0:	fa5f fc8c 	uxtb.w	ip, ip
 801bea4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801bea8:	b2d2      	uxtb	r2, r2
 801beaa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801beae:	b280      	uxth	r0, r0
 801beb0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801beb4:	fb1c fc0b 	smulbb	ip, ip, fp
 801beb8:	fa5f fe8e 	uxtb.w	lr, lr
 801bebc:	fb12 fb0b 	smulbb	fp, r2, fp
 801bec0:	fb01 cc03 	mla	ip, r1, r3, ip
 801bec4:	fb0e bb03 	mla	fp, lr, r3, fp
 801bec8:	1c43      	adds	r3, r0, #1
 801beca:	fa1f fc8c 	uxth.w	ip, ip
 801bece:	fa1f fb8b 	uxth.w	fp, fp
 801bed2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bed6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801beda:	f10c 0101 	add.w	r1, ip, #1
 801bede:	f10b 0001 	add.w	r0, fp, #1
 801bee2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801bee6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801beea:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801beee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bef2:	4318      	orrs	r0, r3
 801bef4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801bef8:	ea40 000c 	orr.w	r0, r0, ip
 801befc:	f8a8 0000 	strh.w	r0, [r8]
 801bf00:	e734      	b.n	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf02:	f113 0b01 	adds.w	fp, r3, #1
 801bf06:	f53f af31 	bmi.w	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf0a:	45dc      	cmp	ip, fp
 801bf0c:	f6ff af2e 	blt.w	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf10:	f110 0b01 	adds.w	fp, r0, #1
 801bf14:	f53f af2a 	bmi.w	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf18:	45de      	cmp	lr, fp
 801bf1a:	f6ff af27 	blt.w	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf1e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bf20:	9302      	str	r3, [sp, #8]
 801bf22:	fa0f f38e 	sxth.w	r3, lr
 801bf26:	9301      	str	r3, [sp, #4]
 801bf28:	fa0f f38c 	sxth.w	r3, ip
 801bf2c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801bf30:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bf34:	9300      	str	r3, [sp, #0]
 801bf36:	463a      	mov	r2, r7
 801bf38:	4653      	mov	r3, sl
 801bf3a:	4641      	mov	r1, r8
 801bf3c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bf3e:	f7ff fd2b 	bl	801b998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801bf42:	e713      	b.n	801bd6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf44:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801bf46:	1422      	asrs	r2, r4, #16
 801bf48:	1433      	asrs	r3, r6, #16
 801bf4a:	fb05 2303 	mla	r3, r5, r3, r2
 801bf4e:	085a      	lsrs	r2, r3, #1
 801bf50:	07dd      	lsls	r5, r3, #31
 801bf52:	5cba      	ldrb	r2, [r7, r2]
 801bf54:	bf54      	ite	pl
 801bf56:	f002 020f 	andpl.w	r2, r2, #15
 801bf5a:	1112      	asrmi	r2, r2, #4
 801bf5c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bf60:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801bf64:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bf68:	b2d2      	uxtb	r2, r2
 801bf6a:	2900      	cmp	r1, #0
 801bf6c:	d076      	beq.n	801c05c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801bf6e:	f103 0e01 	add.w	lr, r3, #1
 801bf72:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801bf76:	f01e 0f01 	tst.w	lr, #1
 801bf7a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bf7e:	bf0c      	ite	eq
 801bf80:	f00c 0c0f 	andeq.w	ip, ip, #15
 801bf84:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801bf88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bf8c:	fa5f f58c 	uxtb.w	r5, ip
 801bf90:	9512      	str	r5, [sp, #72]	; 0x48
 801bf92:	b300      	cbz	r0, 801bfd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801bf94:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf96:	442b      	add	r3, r5
 801bf98:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bf9c:	07dd      	lsls	r5, r3, #31
 801bf9e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bfa2:	bf54      	ite	pl
 801bfa4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bfa8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bfac:	3301      	adds	r3, #1
 801bfae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bfb2:	fa5f f58c 	uxtb.w	r5, ip
 801bfb6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bfba:	950c      	str	r5, [sp, #48]	; 0x30
 801bfbc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bfc0:	07dd      	lsls	r5, r3, #31
 801bfc2:	bf54      	ite	pl
 801bfc4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bfc8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bfcc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bfd0:	fa5f f38c 	uxtb.w	r3, ip
 801bfd4:	9313      	str	r3, [sp, #76]	; 0x4c
 801bfd6:	b289      	uxth	r1, r1
 801bfd8:	b280      	uxth	r0, r0
 801bfda:	fb01 f300 	mul.w	r3, r1, r0
 801bfde:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801bfe2:	0109      	lsls	r1, r1, #4
 801bfe4:	b280      	uxth	r0, r0
 801bfe6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801bfea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bfec:	1ac9      	subs	r1, r1, r3
 801bfee:	ebac 0c00 	sub.w	ip, ip, r0
 801bff2:	b289      	uxth	r1, r1
 801bff4:	4369      	muls	r1, r5
 801bff6:	fa1f fc8c 	uxth.w	ip, ip
 801bffa:	fb02 120c 	mla	r2, r2, ip, r1
 801bffe:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c000:	fb00 2001 	mla	r0, r0, r1, r2
 801c004:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c006:	fb03 0302 	mla	r3, r3, r2, r0
 801c00a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c00e:	b1d3      	cbz	r3, 801c046 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801c010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c012:	4353      	muls	r3, r2
 801c014:	1c5a      	adds	r2, r3, #1
 801c016:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c01a:	4a0f      	ldr	r2, [pc, #60]	; (801c058 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801c01c:	121b      	asrs	r3, r3, #8
 801c01e:	6812      	ldr	r2, [r2, #0]
 801c020:	2bff      	cmp	r3, #255	; 0xff
 801c022:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c026:	d12d      	bne.n	801c084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801c028:	0953      	lsrs	r3, r2, #5
 801c02a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c02e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c032:	f02c 0c07 	bic.w	ip, ip, #7
 801c036:	ea43 0c0c 	orr.w	ip, r3, ip
 801c03a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c03e:	ea4c 0202 	orr.w	r2, ip, r2
 801c042:	f8a8 2000 	strh.w	r2, [r8]
 801c046:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c048:	441c      	add	r4, r3
 801c04a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c04c:	f108 0802 	add.w	r8, r8, #2
 801c050:	441e      	add	r6, r3
 801c052:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c056:	e6ba      	b.n	801bdce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c058:	2000bfd4 	.word	0x2000bfd4
 801c05c:	2800      	cmp	r0, #0
 801c05e:	d0ba      	beq.n	801bfd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c060:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c062:	442b      	add	r3, r5
 801c064:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c068:	07db      	lsls	r3, r3, #31
 801c06a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c06e:	bf54      	ite	pl
 801c070:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c074:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c078:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c07c:	fa5f f38c 	uxtb.w	r3, ip
 801c080:	930c      	str	r3, [sp, #48]	; 0x30
 801c082:	e7a8      	b.n	801bfd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c084:	f8b8 e000 	ldrh.w	lr, [r8]
 801c088:	fa1f fa83 	uxth.w	sl, r3
 801c08c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c090:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c094:	43db      	mvns	r3, r3
 801c096:	b2db      	uxtb	r3, r3
 801c098:	fb11 f10a 	smulbb	r1, r1, sl
 801c09c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c0a0:	fb00 1003 	mla	r0, r0, r3, r1
 801c0a4:	b2d2      	uxtb	r2, r2
 801c0a6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c0aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c0ae:	fa5f fe8e 	uxtb.w	lr, lr
 801c0b2:	fb12 f20a 	smulbb	r2, r2, sl
 801c0b6:	fb0e 2203 	mla	r2, lr, r3, r2
 801c0ba:	fa5f fc8c 	uxtb.w	ip, ip
 801c0be:	b280      	uxth	r0, r0
 801c0c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c0c4:	b292      	uxth	r2, r2
 801c0c6:	fb1c fc0a 	smulbb	ip, ip, sl
 801c0ca:	fb01 cc03 	mla	ip, r1, r3, ip
 801c0ce:	1c43      	adds	r3, r0, #1
 801c0d0:	1c51      	adds	r1, r2, #1
 801c0d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c0d6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c0da:	fa1f fc8c 	uxth.w	ip, ip
 801c0de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c0e2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c0e6:	4308      	orrs	r0, r1
 801c0e8:	f10c 0101 	add.w	r1, ip, #1
 801c0ec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c0f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c0f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c0f8:	ea40 000c 	orr.w	r0, r0, ip
 801c0fc:	f8a8 0000 	strh.w	r0, [r8]
 801c100:	e7a1      	b.n	801c046 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801c102:	b017      	add	sp, #92	; 0x5c
 801c104:	ecbd 8b08 	vpop	{d8-d11}
 801c108:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c10c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c10c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c110:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801c114:	2c00      	cmp	r4, #0
 801c116:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c11a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c11e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801c122:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801c126:	fb04 ce03 	mla	lr, r4, r3, ip
 801c12a:	db60      	blt.n	801c1ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c12c:	45a1      	cmp	r9, r4
 801c12e:	dd5e      	ble.n	801c1ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c130:	f1bc 0f00 	cmp.w	ip, #0
 801c134:	db59      	blt.n	801c1ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c136:	45e0      	cmp	r8, ip
 801c138:	dd57      	ble.n	801c1ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c13a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801c13e:	f01e 0f01 	tst.w	lr, #1
 801c142:	5c16      	ldrb	r6, [r2, r0]
 801c144:	bf0c      	ite	eq
 801c146:	f006 060f 	andeq.w	r6, r6, #15
 801c14a:	1136      	asrne	r6, r6, #4
 801c14c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c150:	b2f6      	uxtb	r6, r6
 801c152:	f11c 0001 	adds.w	r0, ip, #1
 801c156:	d44d      	bmi.n	801c1f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c158:	4580      	cmp	r8, r0
 801c15a:	dd4b      	ble.n	801c1f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c15c:	2d00      	cmp	r5, #0
 801c15e:	d04b      	beq.n	801c1f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801c160:	f10e 0a01 	add.w	sl, lr, #1
 801c164:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801c168:	f01a 0f01 	tst.w	sl, #1
 801c16c:	5c10      	ldrb	r0, [r2, r0]
 801c16e:	bf0c      	ite	eq
 801c170:	f000 000f 	andeq.w	r0, r0, #15
 801c174:	1100      	asrne	r0, r0, #4
 801c176:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c17a:	b2c0      	uxtb	r0, r0
 801c17c:	3401      	adds	r4, #1
 801c17e:	d43f      	bmi.n	801c200 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c180:	45a1      	cmp	r9, r4
 801c182:	dd3d      	ble.n	801c200 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c184:	2f00      	cmp	r7, #0
 801c186:	f000 8093 	beq.w	801c2b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c18a:	f1bc 0f00 	cmp.w	ip, #0
 801c18e:	db35      	blt.n	801c1fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c190:	45e0      	cmp	r8, ip
 801c192:	dd33      	ble.n	801c1fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c194:	eb03 090e 	add.w	r9, r3, lr
 801c198:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801c19c:	f019 0f01 	tst.w	r9, #1
 801c1a0:	5d14      	ldrb	r4, [r2, r4]
 801c1a2:	bf0c      	ite	eq
 801c1a4:	f004 040f 	andeq.w	r4, r4, #15
 801c1a8:	1124      	asrne	r4, r4, #4
 801c1aa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c1ae:	b2e4      	uxtb	r4, r4
 801c1b0:	f11c 0c01 	adds.w	ip, ip, #1
 801c1b4:	d427      	bmi.n	801c206 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c1b6:	45e0      	cmp	r8, ip
 801c1b8:	dd25      	ble.n	801c206 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c1ba:	b335      	cbz	r5, 801c20a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801c1bc:	3301      	adds	r3, #1
 801c1be:	449e      	add	lr, r3
 801c1c0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c1c4:	f01e 0f01 	tst.w	lr, #1
 801c1c8:	5cd2      	ldrb	r2, [r2, r3]
 801c1ca:	bf0c      	ite	eq
 801c1cc:	f002 020f 	andeq.w	r2, r2, #15
 801c1d0:	1112      	asrne	r2, r2, #4
 801c1d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c1d6:	b2d3      	uxtb	r3, r2
 801c1d8:	2d0f      	cmp	r5, #15
 801c1da:	d917      	bls.n	801c20c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801c1dc:	4b37      	ldr	r3, [pc, #220]	; (801c2bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801c1de:	4a38      	ldr	r2, [pc, #224]	; (801c2c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801c1e0:	4838      	ldr	r0, [pc, #224]	; (801c2c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801c1e2:	f240 11f9 	movw	r1, #505	; 0x1f9
 801c1e6:	f001 f9e5 	bl	801d5b4 <__assert_func>
 801c1ea:	2600      	movs	r6, #0
 801c1ec:	e7b1      	b.n	801c152 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801c1ee:	2000      	movs	r0, #0
 801c1f0:	4606      	mov	r6, r0
 801c1f2:	e7c3      	b.n	801c17c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c1f4:	2000      	movs	r0, #0
 801c1f6:	e7c1      	b.n	801c17c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c1f8:	4628      	mov	r0, r5
 801c1fa:	e7bf      	b.n	801c17c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c1fc:	2400      	movs	r4, #0
 801c1fe:	e7d7      	b.n	801c1b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801c200:	2300      	movs	r3, #0
 801c202:	461c      	mov	r4, r3
 801c204:	e7e8      	b.n	801c1d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c206:	2300      	movs	r3, #0
 801c208:	e7e6      	b.n	801c1d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c20a:	462b      	mov	r3, r5
 801c20c:	2f0f      	cmp	r7, #15
 801c20e:	d8e5      	bhi.n	801c1dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c210:	b2ad      	uxth	r5, r5
 801c212:	b2bf      	uxth	r7, r7
 801c214:	fb05 fc07 	mul.w	ip, r5, r7
 801c218:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801c21c:	012d      	lsls	r5, r5, #4
 801c21e:	b2bf      	uxth	r7, r7
 801c220:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801c224:	eba5 050c 	sub.w	r5, r5, ip
 801c228:	1bd2      	subs	r2, r2, r7
 801c22a:	b2ad      	uxth	r5, r5
 801c22c:	b292      	uxth	r2, r2
 801c22e:	4368      	muls	r0, r5
 801c230:	fb06 0002 	mla	r0, r6, r2, r0
 801c234:	fb07 0404 	mla	r4, r7, r4, r0
 801c238:	fb0c 4303 	mla	r3, ip, r3, r4
 801c23c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c240:	b3a3      	cbz	r3, 801c2ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c242:	4a21      	ldr	r2, [pc, #132]	; (801c2c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801c244:	880e      	ldrh	r6, [r1, #0]
 801c246:	6815      	ldr	r5, [r2, #0]
 801c248:	1234      	asrs	r4, r6, #8
 801c24a:	b29a      	uxth	r2, r3
 801c24c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c250:	43db      	mvns	r3, r3
 801c252:	b2db      	uxtb	r3, r3
 801c254:	fb10 f002 	smulbb	r0, r0, r2
 801c258:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c25c:	fb04 0403 	mla	r4, r4, r3, r0
 801c260:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c264:	10f0      	asrs	r0, r6, #3
 801c266:	b2ed      	uxtb	r5, r5
 801c268:	00f6      	lsls	r6, r6, #3
 801c26a:	fb17 f702 	smulbb	r7, r7, r2
 801c26e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c272:	fb15 f202 	smulbb	r2, r5, r2
 801c276:	b2f6      	uxtb	r6, r6
 801c278:	b2a4      	uxth	r4, r4
 801c27a:	fb00 7003 	mla	r0, r0, r3, r7
 801c27e:	fb06 2303 	mla	r3, r6, r3, r2
 801c282:	b29a      	uxth	r2, r3
 801c284:	1c63      	adds	r3, r4, #1
 801c286:	b280      	uxth	r0, r0
 801c288:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c28c:	1c53      	adds	r3, r2, #1
 801c28e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c292:	1c42      	adds	r2, r0, #1
 801c294:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c298:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c29c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c2a0:	0940      	lsrs	r0, r0, #5
 801c2a2:	4323      	orrs	r3, r4
 801c2a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2a8:	4303      	orrs	r3, r0
 801c2aa:	800b      	strh	r3, [r1, #0]
 801c2ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c2b0:	2d0f      	cmp	r5, #15
 801c2b2:	d893      	bhi.n	801c1dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c2b4:	463b      	mov	r3, r7
 801c2b6:	463c      	mov	r4, r7
 801c2b8:	e7aa      	b.n	801c210 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801c2ba:	bf00      	nop
 801c2bc:	080214b7 	.word	0x080214b7
 801c2c0:	080219e6 	.word	0x080219e6
 801c2c4:	08021484 	.word	0x08021484
 801c2c8:	2000bfd4 	.word	0x2000bfd4

0801c2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2d0:	ed2d 8b08 	vpush	{d8-d11}
 801c2d4:	b093      	sub	sp, #76	; 0x4c
 801c2d6:	461d      	mov	r5, r3
 801c2d8:	920c      	str	r2, [sp, #48]	; 0x30
 801c2da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c2dc:	9107      	str	r1, [sp, #28]
 801c2de:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c2e2:	9011      	str	r0, [sp, #68]	; 0x44
 801c2e4:	6850      	ldr	r0, [r2, #4]
 801c2e6:	6812      	ldr	r2, [r2, #0]
 801c2e8:	fb00 1303 	mla	r3, r0, r3, r1
 801c2ec:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c2f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c2f2:	689b      	ldr	r3, [r3, #8]
 801c2f4:	3301      	adds	r3, #1
 801c2f6:	f023 0301 	bic.w	r3, r3, #1
 801c2fa:	9306      	str	r3, [sp, #24]
 801c2fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c2fe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c302:	681f      	ldr	r7, [r3, #0]
 801c304:	eeb0 aa40 	vmov.f32	s20, s0
 801c308:	eef0 9a60 	vmov.f32	s19, s1
 801c30c:	eeb0 9a41 	vmov.f32	s18, s2
 801c310:	eeb0 8a62 	vmov.f32	s16, s5
 801c314:	eef0 8a43 	vmov.f32	s17, s6
 801c318:	eef0 ba44 	vmov.f32	s23, s8
 801c31c:	eeb0 ba64 	vmov.f32	s22, s9
 801c320:	eef0 aa45 	vmov.f32	s21, s10
 801c324:	9b07      	ldr	r3, [sp, #28]
 801c326:	2b00      	cmp	r3, #0
 801c328:	dc03      	bgt.n	801c332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c32a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c32c:	2b00      	cmp	r3, #0
 801c32e:	f340 8267 	ble.w	801c800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c332:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c334:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c338:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c33c:	1e48      	subs	r0, r1, #1
 801c33e:	f102 3cff 	add.w	ip, r2, #4294967295
 801c342:	2d00      	cmp	r5, #0
 801c344:	f340 80b8 	ble.w	801c4b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801c348:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c34c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c350:	d406      	bmi.n	801c360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c352:	4586      	cmp	lr, r0
 801c354:	da04      	bge.n	801c360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c356:	2b00      	cmp	r3, #0
 801c358:	db02      	blt.n	801c360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c35a:	4563      	cmp	r3, ip
 801c35c:	f2c0 80ad 	blt.w	801c4ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c360:	f11e 0e01 	adds.w	lr, lr, #1
 801c364:	f100 80a0 	bmi.w	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c368:	4571      	cmp	r1, lr
 801c36a:	f2c0 809d 	blt.w	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c36e:	3301      	adds	r3, #1
 801c370:	f100 809a 	bmi.w	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c374:	429a      	cmp	r2, r3
 801c376:	f2c0 8097 	blt.w	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c37a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c37e:	9509      	str	r5, [sp, #36]	; 0x24
 801c380:	46c8      	mov	r8, r9
 801c382:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c384:	2b00      	cmp	r3, #0
 801c386:	f340 80b6 	ble.w	801c4f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c38a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c38e:	9308      	str	r3, [sp, #32]
 801c390:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c392:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c396:	1423      	asrs	r3, r4, #16
 801c398:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c39c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c3a0:	f100 813e 	bmi.w	801c620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c3a4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c3a8:	455b      	cmp	r3, fp
 801c3aa:	f280 8139 	bge.w	801c620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c3ae:	2800      	cmp	r0, #0
 801c3b0:	f2c0 8136 	blt.w	801c620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c3b4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c3b8:	4558      	cmp	r0, fp
 801c3ba:	f280 8131 	bge.w	801c620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c3be:	9a06      	ldr	r2, [sp, #24]
 801c3c0:	fb00 3302 	mla	r3, r0, r2, r3
 801c3c4:	0858      	lsrs	r0, r3, #1
 801c3c6:	07da      	lsls	r2, r3, #31
 801c3c8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c3cc:	9a08      	ldr	r2, [sp, #32]
 801c3ce:	bf54      	ite	pl
 801c3d0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c3d4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c3d8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c3dc:	fa5f fc8c 	uxtb.w	ip, ip
 801c3e0:	2a00      	cmp	r2, #0
 801c3e2:	f000 80cb 	beq.w	801c57c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801c3e6:	1c58      	adds	r0, r3, #1
 801c3e8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c3ec:	07c0      	lsls	r0, r0, #31
 801c3ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c3f2:	bf54      	ite	pl
 801c3f4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c3f8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c3fc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c400:	fa5f fe8e 	uxtb.w	lr, lr
 801c404:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801c408:	b1b9      	cbz	r1, 801c43a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c40a:	4453      	add	r3, sl
 801c40c:	0858      	lsrs	r0, r3, #1
 801c40e:	07da      	lsls	r2, r3, #31
 801c410:	5c38      	ldrb	r0, [r7, r0]
 801c412:	bf54      	ite	pl
 801c414:	f000 000f 	andpl.w	r0, r0, #15
 801c418:	1100      	asrmi	r0, r0, #4
 801c41a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c41e:	b2c0      	uxtb	r0, r0
 801c420:	900a      	str	r0, [sp, #40]	; 0x28
 801c422:	1c58      	adds	r0, r3, #1
 801c424:	0843      	lsrs	r3, r0, #1
 801c426:	07c2      	lsls	r2, r0, #31
 801c428:	5cfb      	ldrb	r3, [r7, r3]
 801c42a:	bf54      	ite	pl
 801c42c:	f003 030f 	andpl.w	r3, r3, #15
 801c430:	111b      	asrmi	r3, r3, #4
 801c432:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c436:	b2db      	uxtb	r3, r3
 801c438:	930e      	str	r3, [sp, #56]	; 0x38
 801c43a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c43e:	b289      	uxth	r1, r1
 801c440:	fb02 f301 	mul.w	r3, r2, r1
 801c444:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c448:	0112      	lsls	r2, r2, #4
 801c44a:	b289      	uxth	r1, r1
 801c44c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c450:	1a40      	subs	r0, r0, r1
 801c452:	fa1f fe80 	uxth.w	lr, r0
 801c456:	1ad2      	subs	r2, r2, r3
 801c458:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c45a:	b292      	uxth	r2, r2
 801c45c:	4342      	muls	r2, r0
 801c45e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c462:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c464:	fb01 c102 	mla	r1, r1, r2, ip
 801c468:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c46a:	fb03 1302 	mla	r3, r3, r2, r1
 801c46e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c472:	2bff      	cmp	r3, #255	; 0xff
 801c474:	f040 8093 	bne.w	801c59e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801c478:	4bbe      	ldr	r3, [pc, #760]	; (801c774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c47a:	681a      	ldr	r2, [r3, #0]
 801c47c:	4bbe      	ldr	r3, [pc, #760]	; (801c778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c47e:	0951      	lsrs	r1, r2, #5
 801c480:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c484:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c488:	430b      	orrs	r3, r1
 801c48a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c48e:	4313      	orrs	r3, r2
 801c490:	f8a8 3000 	strh.w	r3, [r8]
 801c494:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c496:	441c      	add	r4, r3
 801c498:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c49a:	441e      	add	r6, r3
 801c49c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c49e:	3b01      	subs	r3, #1
 801c4a0:	f108 0802 	add.w	r8, r8, #2
 801c4a4:	9309      	str	r3, [sp, #36]	; 0x24
 801c4a6:	e76c      	b.n	801c382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801c4a8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c4aa:	441c      	add	r4, r3
 801c4ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4ae:	3d01      	subs	r5, #1
 801c4b0:	441e      	add	r6, r3
 801c4b2:	f109 0902 	add.w	r9, r9, #2
 801c4b6:	e744      	b.n	801c342 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c4b8:	d021      	beq.n	801c4fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801c4ba:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c4bc:	1e6b      	subs	r3, r5, #1
 801c4be:	fb00 4003 	mla	r0, r0, r3, r4
 801c4c2:	1400      	asrs	r0, r0, #16
 801c4c4:	f53f af59 	bmi.w	801c37a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c4c8:	3901      	subs	r1, #1
 801c4ca:	4288      	cmp	r0, r1
 801c4cc:	f6bf af55 	bge.w	801c37a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c4d0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c4d2:	fb01 6303 	mla	r3, r1, r3, r6
 801c4d6:	141b      	asrs	r3, r3, #16
 801c4d8:	f53f af4f 	bmi.w	801c37a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c4dc:	3a01      	subs	r2, #1
 801c4de:	4293      	cmp	r3, r2
 801c4e0:	f6bf af4b 	bge.w	801c37a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c4e4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c4e8:	9308      	str	r3, [sp, #32]
 801c4ea:	46a8      	mov	r8, r5
 801c4ec:	46ce      	mov	lr, r9
 801c4ee:	f1b8 0f00 	cmp.w	r8, #0
 801c4f2:	f300 80b5 	bgt.w	801c660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801c4f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c4fa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c4fe:	9b07      	ldr	r3, [sp, #28]
 801c500:	2b00      	cmp	r3, #0
 801c502:	f340 817d 	ble.w	801c800 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c506:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c50a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c50e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c512:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c514:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c518:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c51c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c520:	eef0 6a48 	vmov.f32	s13, s16
 801c524:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c528:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c52c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c530:	ee16 4a90 	vmov	r4, s13
 801c534:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c538:	eef0 6a68 	vmov.f32	s13, s17
 801c53c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c540:	ee18 2a10 	vmov	r2, s16
 801c544:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c548:	fb92 f3f3 	sdiv	r3, r2, r3
 801c54c:	ee18 2a90 	vmov	r2, s17
 801c550:	9327      	str	r3, [sp, #156]	; 0x9c
 801c552:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c554:	fb92 f3f3 	sdiv	r3, r2, r3
 801c558:	9328      	str	r3, [sp, #160]	; 0xa0
 801c55a:	9b07      	ldr	r3, [sp, #28]
 801c55c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c55e:	3b01      	subs	r3, #1
 801c560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c564:	9307      	str	r3, [sp, #28]
 801c566:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c568:	ee16 6a90 	vmov	r6, s13
 801c56c:	bf14      	ite	ne
 801c56e:	461d      	movne	r5, r3
 801c570:	4615      	moveq	r5, r2
 801c572:	eef0 8a67 	vmov.f32	s17, s15
 801c576:	eeb0 8a47 	vmov.f32	s16, s14
 801c57a:	e6d3      	b.n	801c324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c57c:	2900      	cmp	r1, #0
 801c57e:	f43f af5c 	beq.w	801c43a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c582:	eb0a 0003 	add.w	r0, sl, r3
 801c586:	0843      	lsrs	r3, r0, #1
 801c588:	07c0      	lsls	r0, r0, #31
 801c58a:	5cfb      	ldrb	r3, [r7, r3]
 801c58c:	bf54      	ite	pl
 801c58e:	f003 030f 	andpl.w	r3, r3, #15
 801c592:	111b      	asrmi	r3, r3, #4
 801c594:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c598:	b2db      	uxtb	r3, r3
 801c59a:	930a      	str	r3, [sp, #40]	; 0x28
 801c59c:	e74d      	b.n	801c43a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c59e:	2b00      	cmp	r3, #0
 801c5a0:	f43f af78 	beq.w	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c5a4:	4a73      	ldr	r2, [pc, #460]	; (801c774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c5a6:	f8b8 c000 	ldrh.w	ip, [r8]
 801c5aa:	6810      	ldr	r0, [r2, #0]
 801c5ac:	fa1f fe83 	uxth.w	lr, r3
 801c5b0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c5b4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c5b8:	43db      	mvns	r3, r3
 801c5ba:	b2db      	uxtb	r3, r3
 801c5bc:	fb12 f20e 	smulbb	r2, r2, lr
 801c5c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c5c4:	fb01 2103 	mla	r1, r1, r3, r2
 801c5c8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c5cc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c5d0:	b2c0      	uxtb	r0, r0
 801c5d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c5d6:	fb1b fb0e 	smulbb	fp, fp, lr
 801c5da:	b289      	uxth	r1, r1
 801c5dc:	fb10 fe0e 	smulbb	lr, r0, lr
 801c5e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c5e4:	fa5f fc8c 	uxtb.w	ip, ip
 801c5e8:	fb02 b203 	mla	r2, r2, r3, fp
 801c5ec:	1c48      	adds	r0, r1, #1
 801c5ee:	fb0c e303 	mla	r3, ip, r3, lr
 801c5f2:	b292      	uxth	r2, r2
 801c5f4:	b29b      	uxth	r3, r3
 801c5f6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801c5fa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801c5fe:	f102 0b01 	add.w	fp, r2, #1
 801c602:	1c59      	adds	r1, r3, #1
 801c604:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c608:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c60c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c610:	0952      	lsrs	r2, r2, #5
 801c612:	4301      	orrs	r1, r0
 801c614:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c618:	4311      	orrs	r1, r2
 801c61a:	f8a8 1000 	strh.w	r1, [r8]
 801c61e:	e739      	b.n	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c620:	f113 0b01 	adds.w	fp, r3, #1
 801c624:	f53f af36 	bmi.w	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c628:	45dc      	cmp	ip, fp
 801c62a:	f6ff af33 	blt.w	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c62e:	f110 0b01 	adds.w	fp, r0, #1
 801c632:	f53f af2f 	bmi.w	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c636:	45de      	cmp	lr, fp
 801c638:	f6ff af2c 	blt.w	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c63c:	9a08      	ldr	r2, [sp, #32]
 801c63e:	9302      	str	r3, [sp, #8]
 801c640:	fa0f f38e 	sxth.w	r3, lr
 801c644:	9301      	str	r3, [sp, #4]
 801c646:	fa0f f38c 	sxth.w	r3, ip
 801c64a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c64e:	9105      	str	r1, [sp, #20]
 801c650:	9300      	str	r3, [sp, #0]
 801c652:	463a      	mov	r2, r7
 801c654:	4653      	mov	r3, sl
 801c656:	4641      	mov	r1, r8
 801c658:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c65a:	f7ff fd57 	bl	801c10c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c65e:	e719      	b.n	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c660:	9906      	ldr	r1, [sp, #24]
 801c662:	1422      	asrs	r2, r4, #16
 801c664:	1433      	asrs	r3, r6, #16
 801c666:	fb01 2303 	mla	r3, r1, r3, r2
 801c66a:	085a      	lsrs	r2, r3, #1
 801c66c:	07d9      	lsls	r1, r3, #31
 801c66e:	5cba      	ldrb	r2, [r7, r2]
 801c670:	bf54      	ite	pl
 801c672:	f002 020f 	andpl.w	r2, r2, #15
 801c676:	1112      	asrmi	r2, r2, #4
 801c678:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c67c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c680:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c684:	b2d2      	uxtb	r2, r2
 801c686:	2800      	cmp	r0, #0
 801c688:	d062      	beq.n	801c750 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c68a:	f103 0a01 	add.w	sl, r3, #1
 801c68e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801c692:	f01a 0f01 	tst.w	sl, #1
 801c696:	5c79      	ldrb	r1, [r7, r1]
 801c698:	bf0c      	ite	eq
 801c69a:	f001 010f 	andeq.w	r1, r1, #15
 801c69e:	1109      	asrne	r1, r1, #4
 801c6a0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c6a4:	b2c9      	uxtb	r1, r1
 801c6a6:	910f      	str	r1, [sp, #60]	; 0x3c
 801c6a8:	f1bc 0f00 	cmp.w	ip, #0
 801c6ac:	d019      	beq.n	801c6e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c6ae:	9908      	ldr	r1, [sp, #32]
 801c6b0:	440b      	add	r3, r1
 801c6b2:	0859      	lsrs	r1, r3, #1
 801c6b4:	f013 0f01 	tst.w	r3, #1
 801c6b8:	5c79      	ldrb	r1, [r7, r1]
 801c6ba:	bf0c      	ite	eq
 801c6bc:	f001 010f 	andeq.w	r1, r1, #15
 801c6c0:	1109      	asrne	r1, r1, #4
 801c6c2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c6c6:	b2c9      	uxtb	r1, r1
 801c6c8:	3301      	adds	r3, #1
 801c6ca:	910b      	str	r1, [sp, #44]	; 0x2c
 801c6cc:	0859      	lsrs	r1, r3, #1
 801c6ce:	07db      	lsls	r3, r3, #31
 801c6d0:	5c79      	ldrb	r1, [r7, r1]
 801c6d2:	bf54      	ite	pl
 801c6d4:	f001 010f 	andpl.w	r1, r1, #15
 801c6d8:	1109      	asrmi	r1, r1, #4
 801c6da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c6de:	b2c9      	uxtb	r1, r1
 801c6e0:	9110      	str	r1, [sp, #64]	; 0x40
 801c6e2:	b280      	uxth	r0, r0
 801c6e4:	fa1f fc8c 	uxth.w	ip, ip
 801c6e8:	fb00 f30c 	mul.w	r3, r0, ip
 801c6ec:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c6f0:	0100      	lsls	r0, r0, #4
 801c6f2:	fa1f fc8c 	uxth.w	ip, ip
 801c6f6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801c6fa:	eba1 010c 	sub.w	r1, r1, ip
 801c6fe:	fa1f fa81 	uxth.w	sl, r1
 801c702:	1ac0      	subs	r0, r0, r3
 801c704:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c706:	b280      	uxth	r0, r0
 801c708:	4348      	muls	r0, r1
 801c70a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c70c:	fb02 020a 	mla	r2, r2, sl, r0
 801c710:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c714:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c716:	fb03 c302 	mla	r3, r3, r2, ip
 801c71a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c71e:	2bff      	cmp	r3, #255	; 0xff
 801c720:	d12c      	bne.n	801c77c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c722:	4b14      	ldr	r3, [pc, #80]	; (801c774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c724:	681a      	ldr	r2, [r3, #0]
 801c726:	4b14      	ldr	r3, [pc, #80]	; (801c778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c728:	0951      	lsrs	r1, r2, #5
 801c72a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c72e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c732:	430b      	orrs	r3, r1
 801c734:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c738:	4313      	orrs	r3, r2
 801c73a:	f8ae 3000 	strh.w	r3, [lr]
 801c73e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c740:	441c      	add	r4, r3
 801c742:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c744:	f10e 0e02 	add.w	lr, lr, #2
 801c748:	441e      	add	r6, r3
 801c74a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c74e:	e6ce      	b.n	801c4ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c750:	f1bc 0f00 	cmp.w	ip, #0
 801c754:	d0c5      	beq.n	801c6e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c756:	9908      	ldr	r1, [sp, #32]
 801c758:	440b      	add	r3, r1
 801c75a:	0859      	lsrs	r1, r3, #1
 801c75c:	07db      	lsls	r3, r3, #31
 801c75e:	5c79      	ldrb	r1, [r7, r1]
 801c760:	bf54      	ite	pl
 801c762:	f001 010f 	andpl.w	r1, r1, #15
 801c766:	1109      	asrmi	r1, r1, #4
 801c768:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c76c:	b2c9      	uxtb	r1, r1
 801c76e:	910b      	str	r1, [sp, #44]	; 0x2c
 801c770:	e7b7      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c772:	bf00      	nop
 801c774:	2000bfd4 	.word	0x2000bfd4
 801c778:	fffff800 	.word	0xfffff800
 801c77c:	2b00      	cmp	r3, #0
 801c77e:	d0de      	beq.n	801c73e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c780:	4a22      	ldr	r2, [pc, #136]	; (801c80c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801c782:	f8be c000 	ldrh.w	ip, [lr]
 801c786:	6810      	ldr	r0, [r2, #0]
 801c788:	fa1f fa83 	uxth.w	sl, r3
 801c78c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c790:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c794:	43db      	mvns	r3, r3
 801c796:	b2db      	uxtb	r3, r3
 801c798:	fb12 f20a 	smulbb	r2, r2, sl
 801c79c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c7a0:	fb01 2103 	mla	r1, r1, r3, r2
 801c7a4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c7a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c7ac:	b2c0      	uxtb	r0, r0
 801c7ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7b2:	fa5f fc8c 	uxtb.w	ip, ip
 801c7b6:	fb10 f00a 	smulbb	r0, r0, sl
 801c7ba:	fb0c 0003 	mla	r0, ip, r3, r0
 801c7be:	b289      	uxth	r1, r1
 801c7c0:	fb1b fb0a 	smulbb	fp, fp, sl
 801c7c4:	b280      	uxth	r0, r0
 801c7c6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c7ca:	fb02 b203 	mla	r2, r2, r3, fp
 801c7ce:	1c4b      	adds	r3, r1, #1
 801c7d0:	f100 0b01 	add.w	fp, r0, #1
 801c7d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c7d8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801c7dc:	b292      	uxth	r2, r2
 801c7de:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801c7e2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c7e6:	ea4b 0101 	orr.w	r1, fp, r1
 801c7ea:	f102 0b01 	add.w	fp, r2, #1
 801c7ee:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c7f2:	0952      	lsrs	r2, r2, #5
 801c7f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7f8:	4311      	orrs	r1, r2
 801c7fa:	f8ae 1000 	strh.w	r1, [lr]
 801c7fe:	e79e      	b.n	801c73e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c800:	b013      	add	sp, #76	; 0x4c
 801c802:	ecbd 8b08 	vpop	{d8-d11}
 801c806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c80a:	bf00      	nop
 801c80c:	2000bfd4 	.word	0x2000bfd4

0801c810 <CRC_Lock>:
 801c810:	b530      	push	{r4, r5, lr}
 801c812:	4a20      	ldr	r2, [pc, #128]	; (801c894 <CRC_Lock+0x84>)
 801c814:	6813      	ldr	r3, [r2, #0]
 801c816:	f023 0301 	bic.w	r3, r3, #1
 801c81a:	6013      	str	r3, [r2, #0]
 801c81c:	4b1e      	ldr	r3, [pc, #120]	; (801c898 <CRC_Lock+0x88>)
 801c81e:	681a      	ldr	r2, [r3, #0]
 801c820:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801c824:	4022      	ands	r2, r4
 801c826:	f24c 2540 	movw	r5, #49728	; 0xc240
 801c82a:	42aa      	cmp	r2, r5
 801c82c:	d005      	beq.n	801c83a <CRC_Lock+0x2a>
 801c82e:	681b      	ldr	r3, [r3, #0]
 801c830:	f24c 2270 	movw	r2, #49776	; 0xc270
 801c834:	4023      	ands	r3, r4
 801c836:	4293      	cmp	r3, r2
 801c838:	d124      	bne.n	801c884 <CRC_Lock+0x74>
 801c83a:	4b18      	ldr	r3, [pc, #96]	; (801c89c <CRC_Lock+0x8c>)
 801c83c:	681b      	ldr	r3, [r3, #0]
 801c83e:	bb0b      	cbnz	r3, 801c884 <CRC_Lock+0x74>
 801c840:	4b17      	ldr	r3, [pc, #92]	; (801c8a0 <CRC_Lock+0x90>)
 801c842:	681a      	ldr	r2, [r3, #0]
 801c844:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801c848:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801c84c:	d00d      	beq.n	801c86a <CRC_Lock+0x5a>
 801c84e:	681a      	ldr	r2, [r3, #0]
 801c850:	f240 4483 	movw	r4, #1155	; 0x483
 801c854:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801c858:	42a2      	cmp	r2, r4
 801c85a:	d006      	beq.n	801c86a <CRC_Lock+0x5a>
 801c85c:	681b      	ldr	r3, [r3, #0]
 801c85e:	f240 4285 	movw	r2, #1157	; 0x485
 801c862:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c866:	4293      	cmp	r3, r2
 801c868:	d10c      	bne.n	801c884 <CRC_Lock+0x74>
 801c86a:	4b0e      	ldr	r3, [pc, #56]	; (801c8a4 <CRC_Lock+0x94>)
 801c86c:	2201      	movs	r2, #1
 801c86e:	601a      	str	r2, [r3, #0]
 801c870:	681a      	ldr	r2, [r3, #0]
 801c872:	2a00      	cmp	r2, #0
 801c874:	d1fc      	bne.n	801c870 <CRC_Lock+0x60>
 801c876:	4b0c      	ldr	r3, [pc, #48]	; (801c8a8 <CRC_Lock+0x98>)
 801c878:	6018      	str	r0, [r3, #0]
 801c87a:	6818      	ldr	r0, [r3, #0]
 801c87c:	1a43      	subs	r3, r0, r1
 801c87e:	4258      	negs	r0, r3
 801c880:	4158      	adcs	r0, r3
 801c882:	bd30      	pop	{r4, r5, pc}
 801c884:	4b09      	ldr	r3, [pc, #36]	; (801c8ac <CRC_Lock+0x9c>)
 801c886:	2201      	movs	r2, #1
 801c888:	601a      	str	r2, [r3, #0]
 801c88a:	681a      	ldr	r2, [r3, #0]
 801c88c:	2a00      	cmp	r2, #0
 801c88e:	d1fc      	bne.n	801c88a <CRC_Lock+0x7a>
 801c890:	4b07      	ldr	r3, [pc, #28]	; (801c8b0 <CRC_Lock+0xa0>)
 801c892:	e7f1      	b.n	801c878 <CRC_Lock+0x68>
 801c894:	e0002000 	.word	0xe0002000
 801c898:	e000ed00 	.word	0xe000ed00
 801c89c:	e0042000 	.word	0xe0042000
 801c8a0:	5c001000 	.word	0x5c001000
 801c8a4:	58024c08 	.word	0x58024c08
 801c8a8:	58024c00 	.word	0x58024c00
 801c8ac:	40023008 	.word	0x40023008
 801c8b0:	40023000 	.word	0x40023000

0801c8b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801c8b4:	6101      	str	r1, [r0, #16]
 801c8b6:	4770      	bx	lr

0801c8b8 <_ZN8touchgfx8Gestures4tickEv>:
 801c8b8:	7b83      	ldrb	r3, [r0, #14]
 801c8ba:	b14b      	cbz	r3, 801c8d0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801c8bc:	8903      	ldrh	r3, [r0, #8]
 801c8be:	3301      	adds	r3, #1
 801c8c0:	b29b      	uxth	r3, r3
 801c8c2:	2b07      	cmp	r3, #7
 801c8c4:	8103      	strh	r3, [r0, #8]
 801c8c6:	bf81      	itttt	hi
 801c8c8:	2300      	movhi	r3, #0
 801c8ca:	8143      	strhhi	r3, [r0, #10]
 801c8cc:	8183      	strhhi	r3, [r0, #12]
 801c8ce:	7383      	strbhi	r3, [r0, #14]
 801c8d0:	4770      	bx	lr
	...

0801c8d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801c8d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801c8d8:	4698      	mov	r8, r3
 801c8da:	8883      	ldrh	r3, [r0, #4]
 801c8dc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c8e0:	eba8 0303 	sub.w	r3, r8, r3
 801c8e4:	b21b      	sxth	r3, r3
 801c8e6:	4604      	mov	r4, r0
 801c8e8:	2b00      	cmp	r3, #0
 801c8ea:	4617      	mov	r7, r2
 801c8ec:	4a18      	ldr	r2, [pc, #96]	; (801c950 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801c8ee:	9200      	str	r2, [sp, #0]
 801c8f0:	bfb8      	it	lt
 801c8f2:	425b      	neglt	r3, r3
 801c8f4:	8aa2      	ldrh	r2, [r4, #20]
 801c8f6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801c8fa:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c8fe:	b21b      	sxth	r3, r3
 801c900:	460e      	mov	r6, r1
 801c902:	4293      	cmp	r3, r2
 801c904:	88c1      	ldrh	r1, [r0, #6]
 801c906:	f8ad 1008 	strh.w	r1, [sp, #8]
 801c90a:	f04f 0000 	mov.w	r0, #0
 801c90e:	f88d 0004 	strb.w	r0, [sp, #4]
 801c912:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c916:	dc07      	bgt.n	801c928 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801c918:	1a69      	subs	r1, r5, r1
 801c91a:	b209      	sxth	r1, r1
 801c91c:	2900      	cmp	r1, #0
 801c91e:	bfb8      	it	lt
 801c920:	4249      	neglt	r1, r1
 801c922:	b209      	sxth	r1, r1
 801c924:	428a      	cmp	r2, r1
 801c926:	da10      	bge.n	801c94a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801c928:	6920      	ldr	r0, [r4, #16]
 801c92a:	6803      	ldr	r3, [r0, #0]
 801c92c:	4669      	mov	r1, sp
 801c92e:	685b      	ldr	r3, [r3, #4]
 801c930:	4798      	blx	r3
 801c932:	eba8 0606 	sub.w	r6, r8, r6
 801c936:	2300      	movs	r3, #0
 801c938:	1bef      	subs	r7, r5, r7
 801c93a:	2001      	movs	r0, #1
 801c93c:	8123      	strh	r3, [r4, #8]
 801c93e:	8166      	strh	r6, [r4, #10]
 801c940:	81a7      	strh	r7, [r4, #12]
 801c942:	f8a4 8004 	strh.w	r8, [r4, #4]
 801c946:	80e5      	strh	r5, [r4, #6]
 801c948:	73a0      	strb	r0, [r4, #14]
 801c94a:	b004      	add	sp, #16
 801c94c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c950:	080208e4 	.word	0x080208e4

0801c954 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801c954:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c956:	461e      	mov	r6, r3
 801c958:	1e4b      	subs	r3, r1, #1
 801c95a:	2b01      	cmp	r3, #1
 801c95c:	b085      	sub	sp, #20
 801c95e:	4604      	mov	r4, r0
 801c960:	460d      	mov	r5, r1
 801c962:	4617      	mov	r7, r2
 801c964:	d84b      	bhi.n	801c9fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801c966:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c96a:	1cd3      	adds	r3, r2, #3
 801c96c:	b29b      	uxth	r3, r3
 801c96e:	2b06      	cmp	r3, #6
 801c970:	d916      	bls.n	801c9a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801c972:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801ca14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c976:	f8cd c004 	str.w	ip, [sp, #4]
 801c97a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c97e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c982:	6900      	ldr	r0, [r0, #16]
 801c984:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c988:	f04f 0c00 	mov.w	ip, #0
 801c98c:	f88d c008 	strb.w	ip, [sp, #8]
 801c990:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c994:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c998:	6803      	ldr	r3, [r0, #0]
 801c99a:	a901      	add	r1, sp, #4
 801c99c:	689b      	ldr	r3, [r3, #8]
 801c99e:	4798      	blx	r3
 801c9a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c9a4:	1cd3      	adds	r3, r2, #3
 801c9a6:	b29b      	uxth	r3, r3
 801c9a8:	2b06      	cmp	r3, #6
 801c9aa:	d916      	bls.n	801c9da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c9ac:	f8df c064 	ldr.w	ip, [pc, #100]	; 801ca14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c9b0:	f8cd c004 	str.w	ip, [sp, #4]
 801c9b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c9b8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c9bc:	6920      	ldr	r0, [r4, #16]
 801c9be:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c9c2:	f04f 0c01 	mov.w	ip, #1
 801c9c6:	f88d c008 	strb.w	ip, [sp, #8]
 801c9ca:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c9ce:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c9d2:	6803      	ldr	r3, [r0, #0]
 801c9d4:	a901      	add	r1, sp, #4
 801c9d6:	689b      	ldr	r3, [r3, #8]
 801c9d8:	4798      	blx	r3
 801c9da:	4b0d      	ldr	r3, [pc, #52]	; (801ca10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801c9dc:	9301      	str	r3, [sp, #4]
 801c9de:	6920      	ldr	r0, [r4, #16]
 801c9e0:	f88d 5008 	strb.w	r5, [sp, #8]
 801c9e4:	2300      	movs	r3, #0
 801c9e6:	f8ad 700a 	strh.w	r7, [sp, #10]
 801c9ea:	f8ad 600c 	strh.w	r6, [sp, #12]
 801c9ee:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c9f2:	6803      	ldr	r3, [r0, #0]
 801c9f4:	a901      	add	r1, sp, #4
 801c9f6:	681b      	ldr	r3, [r3, #0]
 801c9f8:	4798      	blx	r3
 801c9fa:	b005      	add	sp, #20
 801c9fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c9fe:	2900      	cmp	r1, #0
 801ca00:	d1eb      	bne.n	801c9da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ca02:	80a2      	strh	r2, [r4, #4]
 801ca04:	80c6      	strh	r6, [r0, #6]
 801ca06:	60a1      	str	r1, [r4, #8]
 801ca08:	81a1      	strh	r1, [r4, #12]
 801ca0a:	73a1      	strb	r1, [r4, #14]
 801ca0c:	e7e5      	b.n	801c9da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ca0e:	bf00      	nop
 801ca10:	080208d0 	.word	0x080208d0
 801ca14:	080208f8 	.word	0x080208f8

0801ca18 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801ca18:	b570      	push	{r4, r5, r6, lr}
 801ca1a:	790b      	ldrb	r3, [r1, #4]
 801ca1c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801ca20:	2b00      	cmp	r3, #0
 801ca22:	bf0c      	ite	eq
 801ca24:	2301      	moveq	r3, #1
 801ca26:	2300      	movne	r3, #0
 801ca28:	4604      	mov	r4, r0
 801ca2a:	460e      	mov	r6, r1
 801ca2c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801ca30:	d109      	bne.n	801ca46 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801ca32:	b14d      	cbz	r5, 801ca48 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801ca34:	7933      	ldrb	r3, [r6, #4]
 801ca36:	2b01      	cmp	r3, #1
 801ca38:	d10c      	bne.n	801ca54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ca3a:	6823      	ldr	r3, [r4, #0]
 801ca3c:	4620      	mov	r0, r4
 801ca3e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801ca40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ca44:	4718      	bx	r3
 801ca46:	b12d      	cbz	r5, 801ca54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ca48:	6823      	ldr	r3, [r4, #0]
 801ca4a:	4620      	mov	r0, r4
 801ca4c:	695b      	ldr	r3, [r3, #20]
 801ca4e:	4798      	blx	r3
 801ca50:	2d00      	cmp	r5, #0
 801ca52:	d1ef      	bne.n	801ca34 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801ca54:	bd70      	pop	{r4, r5, r6, pc}

0801ca56 <__aeabi_atexit>:
 801ca56:	460b      	mov	r3, r1
 801ca58:	4601      	mov	r1, r0
 801ca5a:	4618      	mov	r0, r3
 801ca5c:	f000 bdce 	b.w	801d5fc <__cxa_atexit>

0801ca60 <_ZdlPvj>:
 801ca60:	f000 b812 	b.w	801ca88 <_ZdlPv>

0801ca64 <__cxa_guard_acquire>:
 801ca64:	6803      	ldr	r3, [r0, #0]
 801ca66:	07db      	lsls	r3, r3, #31
 801ca68:	d406      	bmi.n	801ca78 <__cxa_guard_acquire+0x14>
 801ca6a:	7843      	ldrb	r3, [r0, #1]
 801ca6c:	b103      	cbz	r3, 801ca70 <__cxa_guard_acquire+0xc>
 801ca6e:	deff      	udf	#255	; 0xff
 801ca70:	2301      	movs	r3, #1
 801ca72:	7043      	strb	r3, [r0, #1]
 801ca74:	4618      	mov	r0, r3
 801ca76:	4770      	bx	lr
 801ca78:	2000      	movs	r0, #0
 801ca7a:	4770      	bx	lr

0801ca7c <__cxa_guard_release>:
 801ca7c:	2301      	movs	r3, #1
 801ca7e:	6003      	str	r3, [r0, #0]
 801ca80:	4770      	bx	lr

0801ca82 <__cxa_pure_virtual>:
 801ca82:	b508      	push	{r3, lr}
 801ca84:	f000 f80e 	bl	801caa4 <_ZSt9terminatev>

0801ca88 <_ZdlPv>:
 801ca88:	f000 be0a 	b.w	801d6a0 <free>

0801ca8c <_ZN10__cxxabiv111__terminateEPFvvE>:
 801ca8c:	b508      	push	{r3, lr}
 801ca8e:	4780      	blx	r0
 801ca90:	f000 fd88 	bl	801d5a4 <abort>

0801ca94 <_ZSt13get_terminatev>:
 801ca94:	4b02      	ldr	r3, [pc, #8]	; (801caa0 <_ZSt13get_terminatev+0xc>)
 801ca96:	6818      	ldr	r0, [r3, #0]
 801ca98:	f3bf 8f5b 	dmb	ish
 801ca9c:	4770      	bx	lr
 801ca9e:	bf00      	nop
 801caa0:	200000d4 	.word	0x200000d4

0801caa4 <_ZSt9terminatev>:
 801caa4:	b508      	push	{r3, lr}
 801caa6:	f7ff fff5 	bl	801ca94 <_ZSt13get_terminatev>
 801caaa:	f7ff ffef 	bl	801ca8c <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0801cab0 <tanf>:
 801cab0:	ee10 3a10 	vmov	r3, s0
 801cab4:	b507      	push	{r0, r1, r2, lr}
 801cab6:	4a12      	ldr	r2, [pc, #72]	; (801cb00 <tanf+0x50>)
 801cab8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801cabc:	4293      	cmp	r3, r2
 801cabe:	dc07      	bgt.n	801cad0 <tanf+0x20>
 801cac0:	eddf 0a10 	vldr	s1, [pc, #64]	; 801cb04 <tanf+0x54>
 801cac4:	2001      	movs	r0, #1
 801cac6:	b003      	add	sp, #12
 801cac8:	f85d eb04 	ldr.w	lr, [sp], #4
 801cacc:	f000 bbce 	b.w	801d26c <__kernel_tanf>
 801cad0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801cad4:	db04      	blt.n	801cae0 <tanf+0x30>
 801cad6:	ee30 0a40 	vsub.f32	s0, s0, s0
 801cada:	b003      	add	sp, #12
 801cadc:	f85d fb04 	ldr.w	pc, [sp], #4
 801cae0:	4668      	mov	r0, sp
 801cae2:	f000 f811 	bl	801cb08 <__ieee754_rem_pio2f>
 801cae6:	0040      	lsls	r0, r0, #1
 801cae8:	f000 0002 	and.w	r0, r0, #2
 801caec:	eddd 0a01 	vldr	s1, [sp, #4]
 801caf0:	ed9d 0a00 	vldr	s0, [sp]
 801caf4:	f1c0 0001 	rsb	r0, r0, #1
 801caf8:	f000 fbb8 	bl	801d26c <__kernel_tanf>
 801cafc:	e7ed      	b.n	801cada <tanf+0x2a>
 801cafe:	bf00      	nop
 801cb00:	3f490fda 	.word	0x3f490fda
 801cb04:	00000000 	.word	0x00000000

0801cb08 <__ieee754_rem_pio2f>:
 801cb08:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cb0a:	ee10 6a10 	vmov	r6, s0
 801cb0e:	4b8e      	ldr	r3, [pc, #568]	; (801cd48 <__ieee754_rem_pio2f+0x240>)
 801cb10:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 801cb14:	429d      	cmp	r5, r3
 801cb16:	b087      	sub	sp, #28
 801cb18:	eef0 7a40 	vmov.f32	s15, s0
 801cb1c:	4604      	mov	r4, r0
 801cb1e:	dc05      	bgt.n	801cb2c <__ieee754_rem_pio2f+0x24>
 801cb20:	2300      	movs	r3, #0
 801cb22:	ed80 0a00 	vstr	s0, [r0]
 801cb26:	6043      	str	r3, [r0, #4]
 801cb28:	2000      	movs	r0, #0
 801cb2a:	e01a      	b.n	801cb62 <__ieee754_rem_pio2f+0x5a>
 801cb2c:	4b87      	ldr	r3, [pc, #540]	; (801cd4c <__ieee754_rem_pio2f+0x244>)
 801cb2e:	429d      	cmp	r5, r3
 801cb30:	dc46      	bgt.n	801cbc0 <__ieee754_rem_pio2f+0xb8>
 801cb32:	2e00      	cmp	r6, #0
 801cb34:	ed9f 0a86 	vldr	s0, [pc, #536]	; 801cd50 <__ieee754_rem_pio2f+0x248>
 801cb38:	4b86      	ldr	r3, [pc, #536]	; (801cd54 <__ieee754_rem_pio2f+0x24c>)
 801cb3a:	f025 050f 	bic.w	r5, r5, #15
 801cb3e:	dd1f      	ble.n	801cb80 <__ieee754_rem_pio2f+0x78>
 801cb40:	429d      	cmp	r5, r3
 801cb42:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801cb46:	d00e      	beq.n	801cb66 <__ieee754_rem_pio2f+0x5e>
 801cb48:	ed9f 7a83 	vldr	s14, [pc, #524]	; 801cd58 <__ieee754_rem_pio2f+0x250>
 801cb4c:	ee37 0ac7 	vsub.f32	s0, s15, s14
 801cb50:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801cb54:	ed80 0a00 	vstr	s0, [r0]
 801cb58:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801cb5c:	2001      	movs	r0, #1
 801cb5e:	edc4 7a01 	vstr	s15, [r4, #4]
 801cb62:	b007      	add	sp, #28
 801cb64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cb66:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 801cd5c <__ieee754_rem_pio2f+0x254>
 801cb6a:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 801cd60 <__ieee754_rem_pio2f+0x258>
 801cb6e:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801cb72:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801cb76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801cb7a:	edc0 6a00 	vstr	s13, [r0]
 801cb7e:	e7eb      	b.n	801cb58 <__ieee754_rem_pio2f+0x50>
 801cb80:	429d      	cmp	r5, r3
 801cb82:	ee77 7a80 	vadd.f32	s15, s15, s0
 801cb86:	d00e      	beq.n	801cba6 <__ieee754_rem_pio2f+0x9e>
 801cb88:	ed9f 7a73 	vldr	s14, [pc, #460]	; 801cd58 <__ieee754_rem_pio2f+0x250>
 801cb8c:	ee37 0a87 	vadd.f32	s0, s15, s14
 801cb90:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801cb94:	ed80 0a00 	vstr	s0, [r0]
 801cb98:	ee77 7a87 	vadd.f32	s15, s15, s14
 801cb9c:	f04f 30ff 	mov.w	r0, #4294967295
 801cba0:	edc4 7a01 	vstr	s15, [r4, #4]
 801cba4:	e7dd      	b.n	801cb62 <__ieee754_rem_pio2f+0x5a>
 801cba6:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 801cd5c <__ieee754_rem_pio2f+0x254>
 801cbaa:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 801cd60 <__ieee754_rem_pio2f+0x258>
 801cbae:	ee77 7a80 	vadd.f32	s15, s15, s0
 801cbb2:	ee77 6a87 	vadd.f32	s13, s15, s14
 801cbb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801cbba:	edc0 6a00 	vstr	s13, [r0]
 801cbbe:	e7eb      	b.n	801cb98 <__ieee754_rem_pio2f+0x90>
 801cbc0:	4b68      	ldr	r3, [pc, #416]	; (801cd64 <__ieee754_rem_pio2f+0x25c>)
 801cbc2:	429d      	cmp	r5, r3
 801cbc4:	dc72      	bgt.n	801ccac <__ieee754_rem_pio2f+0x1a4>
 801cbc6:	f000 fc31 	bl	801d42c <fabsf>
 801cbca:	ed9f 7a67 	vldr	s14, [pc, #412]	; 801cd68 <__ieee754_rem_pio2f+0x260>
 801cbce:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801cbd2:	eee0 7a07 	vfma.f32	s15, s0, s14
 801cbd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801cbda:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801cbde:	ee17 0a90 	vmov	r0, s15
 801cbe2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 801cd50 <__ieee754_rem_pio2f+0x248>
 801cbe6:	eea7 0a67 	vfms.f32	s0, s14, s15
 801cbea:	281f      	cmp	r0, #31
 801cbec:	eddf 7a5a 	vldr	s15, [pc, #360]	; 801cd58 <__ieee754_rem_pio2f+0x250>
 801cbf0:	ee67 7a27 	vmul.f32	s15, s14, s15
 801cbf4:	eeb1 6a47 	vneg.f32	s12, s14
 801cbf8:	ee70 6a67 	vsub.f32	s13, s0, s15
 801cbfc:	ee16 2a90 	vmov	r2, s13
 801cc00:	dc1c      	bgt.n	801cc3c <__ieee754_rem_pio2f+0x134>
 801cc02:	495a      	ldr	r1, [pc, #360]	; (801cd6c <__ieee754_rem_pio2f+0x264>)
 801cc04:	1e47      	subs	r7, r0, #1
 801cc06:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 801cc0a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801cc0e:	428b      	cmp	r3, r1
 801cc10:	d014      	beq.n	801cc3c <__ieee754_rem_pio2f+0x134>
 801cc12:	6022      	str	r2, [r4, #0]
 801cc14:	ed94 7a00 	vldr	s14, [r4]
 801cc18:	ee30 0a47 	vsub.f32	s0, s0, s14
 801cc1c:	2e00      	cmp	r6, #0
 801cc1e:	ee30 0a67 	vsub.f32	s0, s0, s15
 801cc22:	ed84 0a01 	vstr	s0, [r4, #4]
 801cc26:	da9c      	bge.n	801cb62 <__ieee754_rem_pio2f+0x5a>
 801cc28:	eeb1 7a47 	vneg.f32	s14, s14
 801cc2c:	eeb1 0a40 	vneg.f32	s0, s0
 801cc30:	ed84 7a00 	vstr	s14, [r4]
 801cc34:	ed84 0a01 	vstr	s0, [r4, #4]
 801cc38:	4240      	negs	r0, r0
 801cc3a:	e792      	b.n	801cb62 <__ieee754_rem_pio2f+0x5a>
 801cc3c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801cc40:	15eb      	asrs	r3, r5, #23
 801cc42:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 801cc46:	2d08      	cmp	r5, #8
 801cc48:	dde3      	ble.n	801cc12 <__ieee754_rem_pio2f+0x10a>
 801cc4a:	eddf 7a44 	vldr	s15, [pc, #272]	; 801cd5c <__ieee754_rem_pio2f+0x254>
 801cc4e:	eddf 5a44 	vldr	s11, [pc, #272]	; 801cd60 <__ieee754_rem_pio2f+0x258>
 801cc52:	eef0 6a40 	vmov.f32	s13, s0
 801cc56:	eee6 6a27 	vfma.f32	s13, s12, s15
 801cc5a:	ee30 0a66 	vsub.f32	s0, s0, s13
 801cc5e:	eea6 0a27 	vfma.f32	s0, s12, s15
 801cc62:	eef0 7a40 	vmov.f32	s15, s0
 801cc66:	eed7 7a25 	vfnms.f32	s15, s14, s11
 801cc6a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 801cc6e:	ee15 2a90 	vmov	r2, s11
 801cc72:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801cc76:	1a5b      	subs	r3, r3, r1
 801cc78:	2b19      	cmp	r3, #25
 801cc7a:	dc04      	bgt.n	801cc86 <__ieee754_rem_pio2f+0x17e>
 801cc7c:	edc4 5a00 	vstr	s11, [r4]
 801cc80:	eeb0 0a66 	vmov.f32	s0, s13
 801cc84:	e7c6      	b.n	801cc14 <__ieee754_rem_pio2f+0x10c>
 801cc86:	eddf 5a3a 	vldr	s11, [pc, #232]	; 801cd70 <__ieee754_rem_pio2f+0x268>
 801cc8a:	eeb0 0a66 	vmov.f32	s0, s13
 801cc8e:	eea6 0a25 	vfma.f32	s0, s12, s11
 801cc92:	ee76 7ac0 	vsub.f32	s15, s13, s0
 801cc96:	eddf 6a37 	vldr	s13, [pc, #220]	; 801cd74 <__ieee754_rem_pio2f+0x26c>
 801cc9a:	eee6 7a25 	vfma.f32	s15, s12, s11
 801cc9e:	eed7 7a26 	vfnms.f32	s15, s14, s13
 801cca2:	ee30 7a67 	vsub.f32	s14, s0, s15
 801cca6:	ed84 7a00 	vstr	s14, [r4]
 801ccaa:	e7b3      	b.n	801cc14 <__ieee754_rem_pio2f+0x10c>
 801ccac:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 801ccb0:	db06      	blt.n	801ccc0 <__ieee754_rem_pio2f+0x1b8>
 801ccb2:	ee70 7a40 	vsub.f32	s15, s0, s0
 801ccb6:	edc0 7a01 	vstr	s15, [r0, #4]
 801ccba:	edc0 7a00 	vstr	s15, [r0]
 801ccbe:	e733      	b.n	801cb28 <__ieee754_rem_pio2f+0x20>
 801ccc0:	15ea      	asrs	r2, r5, #23
 801ccc2:	3a86      	subs	r2, #134	; 0x86
 801ccc4:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 801ccc8:	ee07 3a90 	vmov	s15, r3
 801cccc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801ccd0:	eddf 6a29 	vldr	s13, [pc, #164]	; 801cd78 <__ieee754_rem_pio2f+0x270>
 801ccd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801ccd8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ccdc:	ed8d 7a03 	vstr	s14, [sp, #12]
 801cce0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801cce4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801cce8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801ccec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ccf0:	ed8d 7a04 	vstr	s14, [sp, #16]
 801ccf4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ccf8:	eef5 7a40 	vcmp.f32	s15, #0.0
 801ccfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd00:	edcd 7a05 	vstr	s15, [sp, #20]
 801cd04:	d11e      	bne.n	801cd44 <__ieee754_rem_pio2f+0x23c>
 801cd06:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801cd0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd0e:	bf14      	ite	ne
 801cd10:	2302      	movne	r3, #2
 801cd12:	2301      	moveq	r3, #1
 801cd14:	4919      	ldr	r1, [pc, #100]	; (801cd7c <__ieee754_rem_pio2f+0x274>)
 801cd16:	9101      	str	r1, [sp, #4]
 801cd18:	2102      	movs	r1, #2
 801cd1a:	9100      	str	r1, [sp, #0]
 801cd1c:	a803      	add	r0, sp, #12
 801cd1e:	4621      	mov	r1, r4
 801cd20:	f000 f82e 	bl	801cd80 <__kernel_rem_pio2f>
 801cd24:	2e00      	cmp	r6, #0
 801cd26:	f6bf af1c 	bge.w	801cb62 <__ieee754_rem_pio2f+0x5a>
 801cd2a:	edd4 7a00 	vldr	s15, [r4]
 801cd2e:	eef1 7a67 	vneg.f32	s15, s15
 801cd32:	edc4 7a00 	vstr	s15, [r4]
 801cd36:	edd4 7a01 	vldr	s15, [r4, #4]
 801cd3a:	eef1 7a67 	vneg.f32	s15, s15
 801cd3e:	edc4 7a01 	vstr	s15, [r4, #4]
 801cd42:	e779      	b.n	801cc38 <__ieee754_rem_pio2f+0x130>
 801cd44:	2303      	movs	r3, #3
 801cd46:	e7e5      	b.n	801cd14 <__ieee754_rem_pio2f+0x20c>
 801cd48:	3f490fd8 	.word	0x3f490fd8
 801cd4c:	4016cbe3 	.word	0x4016cbe3
 801cd50:	3fc90f80 	.word	0x3fc90f80
 801cd54:	3fc90fd0 	.word	0x3fc90fd0
 801cd58:	37354443 	.word	0x37354443
 801cd5c:	37354400 	.word	0x37354400
 801cd60:	2e85a308 	.word	0x2e85a308
 801cd64:	43490f80 	.word	0x43490f80
 801cd68:	3f22f984 	.word	0x3f22f984
 801cd6c:	08021cb4 	.word	0x08021cb4
 801cd70:	2e85a300 	.word	0x2e85a300
 801cd74:	248d3132 	.word	0x248d3132
 801cd78:	43800000 	.word	0x43800000
 801cd7c:	08021d34 	.word	0x08021d34

0801cd80 <__kernel_rem_pio2f>:
 801cd80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd84:	ed2d 8b04 	vpush	{d8-d9}
 801cd88:	b0d9      	sub	sp, #356	; 0x164
 801cd8a:	4688      	mov	r8, r1
 801cd8c:	9002      	str	r0, [sp, #8]
 801cd8e:	49bb      	ldr	r1, [pc, #748]	; (801d07c <__kernel_rem_pio2f+0x2fc>)
 801cd90:	9866      	ldr	r0, [sp, #408]	; 0x198
 801cd92:	9301      	str	r3, [sp, #4]
 801cd94:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 801cd98:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 801cd9c:	1e59      	subs	r1, r3, #1
 801cd9e:	1d13      	adds	r3, r2, #4
 801cda0:	db27      	blt.n	801cdf2 <__kernel_rem_pio2f+0x72>
 801cda2:	f1b2 0b03 	subs.w	fp, r2, #3
 801cda6:	bf48      	it	mi
 801cda8:	f102 0b04 	addmi.w	fp, r2, #4
 801cdac:	ea4f 00eb 	mov.w	r0, fp, asr #3
 801cdb0:	1c45      	adds	r5, r0, #1
 801cdb2:	00ec      	lsls	r4, r5, #3
 801cdb4:	1a47      	subs	r7, r0, r1
 801cdb6:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801cdba:	9403      	str	r4, [sp, #12]
 801cdbc:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 801cdc0:	eb0a 0c01 	add.w	ip, sl, r1
 801cdc4:	ae1c      	add	r6, sp, #112	; 0x70
 801cdc6:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 801cdca:	2400      	movs	r4, #0
 801cdcc:	4564      	cmp	r4, ip
 801cdce:	dd12      	ble.n	801cdf6 <__kernel_rem_pio2f+0x76>
 801cdd0:	9b01      	ldr	r3, [sp, #4]
 801cdd2:	ac1c      	add	r4, sp, #112	; 0x70
 801cdd4:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 801cdd8:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 801cddc:	f04f 0c00 	mov.w	ip, #0
 801cde0:	45d4      	cmp	ip, sl
 801cde2:	dc27      	bgt.n	801ce34 <__kernel_rem_pio2f+0xb4>
 801cde4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801cde8:	eddf 7aa8 	vldr	s15, [pc, #672]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801cdec:	4627      	mov	r7, r4
 801cdee:	2600      	movs	r6, #0
 801cdf0:	e016      	b.n	801ce20 <__kernel_rem_pio2f+0xa0>
 801cdf2:	2000      	movs	r0, #0
 801cdf4:	e7dc      	b.n	801cdb0 <__kernel_rem_pio2f+0x30>
 801cdf6:	42e7      	cmn	r7, r4
 801cdf8:	bf5d      	ittte	pl
 801cdfa:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 801cdfe:	ee07 3a90 	vmovpl	s15, r3
 801ce02:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 801ce06:	eef0 7a47 	vmovmi.f32	s15, s14
 801ce0a:	ece6 7a01 	vstmia	r6!, {s15}
 801ce0e:	3401      	adds	r4, #1
 801ce10:	e7dc      	b.n	801cdcc <__kernel_rem_pio2f+0x4c>
 801ce12:	ecf9 6a01 	vldmia	r9!, {s13}
 801ce16:	ed97 7a00 	vldr	s14, [r7]
 801ce1a:	eee6 7a87 	vfma.f32	s15, s13, s14
 801ce1e:	3601      	adds	r6, #1
 801ce20:	428e      	cmp	r6, r1
 801ce22:	f1a7 0704 	sub.w	r7, r7, #4
 801ce26:	ddf4      	ble.n	801ce12 <__kernel_rem_pio2f+0x92>
 801ce28:	eceb 7a01 	vstmia	fp!, {s15}
 801ce2c:	f10c 0c01 	add.w	ip, ip, #1
 801ce30:	3404      	adds	r4, #4
 801ce32:	e7d5      	b.n	801cde0 <__kernel_rem_pio2f+0x60>
 801ce34:	ab08      	add	r3, sp, #32
 801ce36:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 801ce3a:	eddf 8a93 	vldr	s17, [pc, #588]	; 801d088 <__kernel_rem_pio2f+0x308>
 801ce3e:	ed9f 9a91 	vldr	s18, [pc, #580]	; 801d084 <__kernel_rem_pio2f+0x304>
 801ce42:	9304      	str	r3, [sp, #16]
 801ce44:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 801ce48:	4656      	mov	r6, sl
 801ce4a:	00b3      	lsls	r3, r6, #2
 801ce4c:	9305      	str	r3, [sp, #20]
 801ce4e:	ab58      	add	r3, sp, #352	; 0x160
 801ce50:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801ce54:	ac08      	add	r4, sp, #32
 801ce56:	ab44      	add	r3, sp, #272	; 0x110
 801ce58:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 801ce5c:	46a4      	mov	ip, r4
 801ce5e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801ce62:	4637      	mov	r7, r6
 801ce64:	2f00      	cmp	r7, #0
 801ce66:	f1a0 0004 	sub.w	r0, r0, #4
 801ce6a:	dc4f      	bgt.n	801cf0c <__kernel_rem_pio2f+0x18c>
 801ce6c:	4628      	mov	r0, r5
 801ce6e:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801ce72:	f000 fb25 	bl	801d4c0 <scalbnf>
 801ce76:	eeb0 8a40 	vmov.f32	s16, s0
 801ce7a:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 801ce7e:	ee28 0a00 	vmul.f32	s0, s16, s0
 801ce82:	f000 fadb 	bl	801d43c <floorf>
 801ce86:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 801ce8a:	eea0 8a67 	vfms.f32	s16, s0, s15
 801ce8e:	2d00      	cmp	r5, #0
 801ce90:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801ce94:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801ce98:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801ce9c:	ee17 9a90 	vmov	r9, s15
 801cea0:	ee38 8a40 	vsub.f32	s16, s16, s0
 801cea4:	dd44      	ble.n	801cf30 <__kernel_rem_pio2f+0x1b0>
 801cea6:	f106 3cff 	add.w	ip, r6, #4294967295
 801ceaa:	ab08      	add	r3, sp, #32
 801ceac:	f1c5 0e08 	rsb	lr, r5, #8
 801ceb0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 801ceb4:	fa47 f00e 	asr.w	r0, r7, lr
 801ceb8:	4481      	add	r9, r0
 801ceba:	fa00 f00e 	lsl.w	r0, r0, lr
 801cebe:	1a3f      	subs	r7, r7, r0
 801cec0:	f1c5 0007 	rsb	r0, r5, #7
 801cec4:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 801cec8:	4107      	asrs	r7, r0
 801ceca:	2f00      	cmp	r7, #0
 801cecc:	dd3f      	ble.n	801cf4e <__kernel_rem_pio2f+0x1ce>
 801cece:	f04f 0e00 	mov.w	lr, #0
 801ced2:	f109 0901 	add.w	r9, r9, #1
 801ced6:	4673      	mov	r3, lr
 801ced8:	4576      	cmp	r6, lr
 801ceda:	dc6b      	bgt.n	801cfb4 <__kernel_rem_pio2f+0x234>
 801cedc:	2d00      	cmp	r5, #0
 801cede:	dd04      	ble.n	801ceea <__kernel_rem_pio2f+0x16a>
 801cee0:	2d01      	cmp	r5, #1
 801cee2:	d078      	beq.n	801cfd6 <__kernel_rem_pio2f+0x256>
 801cee4:	2d02      	cmp	r5, #2
 801cee6:	f000 8081 	beq.w	801cfec <__kernel_rem_pio2f+0x26c>
 801ceea:	2f02      	cmp	r7, #2
 801ceec:	d12f      	bne.n	801cf4e <__kernel_rem_pio2f+0x1ce>
 801ceee:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801cef2:	ee30 8a48 	vsub.f32	s16, s0, s16
 801cef6:	b353      	cbz	r3, 801cf4e <__kernel_rem_pio2f+0x1ce>
 801cef8:	4628      	mov	r0, r5
 801cefa:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801cefe:	f000 fadf 	bl	801d4c0 <scalbnf>
 801cf02:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801cf06:	ee38 8a40 	vsub.f32	s16, s16, s0
 801cf0a:	e020      	b.n	801cf4e <__kernel_rem_pio2f+0x1ce>
 801cf0c:	ee60 7a28 	vmul.f32	s15, s0, s17
 801cf10:	3f01      	subs	r7, #1
 801cf12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801cf16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cf1a:	eea7 0ac9 	vfms.f32	s0, s15, s18
 801cf1e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801cf22:	ecac 0a01 	vstmia	ip!, {s0}
 801cf26:	ed90 0a00 	vldr	s0, [r0]
 801cf2a:	ee37 0a80 	vadd.f32	s0, s15, s0
 801cf2e:	e799      	b.n	801ce64 <__kernel_rem_pio2f+0xe4>
 801cf30:	d105      	bne.n	801cf3e <__kernel_rem_pio2f+0x1be>
 801cf32:	1e70      	subs	r0, r6, #1
 801cf34:	ab08      	add	r3, sp, #32
 801cf36:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 801cf3a:	11ff      	asrs	r7, r7, #7
 801cf3c:	e7c5      	b.n	801ceca <__kernel_rem_pio2f+0x14a>
 801cf3e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801cf42:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801cf46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf4a:	da31      	bge.n	801cfb0 <__kernel_rem_pio2f+0x230>
 801cf4c:	2700      	movs	r7, #0
 801cf4e:	eeb5 8a40 	vcmp.f32	s16, #0.0
 801cf52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf56:	f040 809b 	bne.w	801d090 <__kernel_rem_pio2f+0x310>
 801cf5a:	1e74      	subs	r4, r6, #1
 801cf5c:	46a4      	mov	ip, r4
 801cf5e:	2000      	movs	r0, #0
 801cf60:	45d4      	cmp	ip, sl
 801cf62:	da4a      	bge.n	801cffa <__kernel_rem_pio2f+0x27a>
 801cf64:	2800      	cmp	r0, #0
 801cf66:	d07a      	beq.n	801d05e <__kernel_rem_pio2f+0x2de>
 801cf68:	ab08      	add	r3, sp, #32
 801cf6a:	3d08      	subs	r5, #8
 801cf6c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 801cf70:	2b00      	cmp	r3, #0
 801cf72:	f000 8081 	beq.w	801d078 <__kernel_rem_pio2f+0x2f8>
 801cf76:	4628      	mov	r0, r5
 801cf78:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801cf7c:	00a5      	lsls	r5, r4, #2
 801cf7e:	f000 fa9f 	bl	801d4c0 <scalbnf>
 801cf82:	aa44      	add	r2, sp, #272	; 0x110
 801cf84:	1d2b      	adds	r3, r5, #4
 801cf86:	ed9f 7a40 	vldr	s14, [pc, #256]	; 801d088 <__kernel_rem_pio2f+0x308>
 801cf8a:	18d1      	adds	r1, r2, r3
 801cf8c:	4622      	mov	r2, r4
 801cf8e:	2a00      	cmp	r2, #0
 801cf90:	f280 80ae 	bge.w	801d0f0 <__kernel_rem_pio2f+0x370>
 801cf94:	4622      	mov	r2, r4
 801cf96:	2a00      	cmp	r2, #0
 801cf98:	f2c0 80cc 	blt.w	801d134 <__kernel_rem_pio2f+0x3b4>
 801cf9c:	a944      	add	r1, sp, #272	; 0x110
 801cf9e:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 801cfa2:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 801d080 <__kernel_rem_pio2f+0x300>
 801cfa6:	eddf 7a39 	vldr	s15, [pc, #228]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801cfaa:	2000      	movs	r0, #0
 801cfac:	1aa1      	subs	r1, r4, r2
 801cfae:	e0b6      	b.n	801d11e <__kernel_rem_pio2f+0x39e>
 801cfb0:	2702      	movs	r7, #2
 801cfb2:	e78c      	b.n	801cece <__kernel_rem_pio2f+0x14e>
 801cfb4:	6820      	ldr	r0, [r4, #0]
 801cfb6:	b94b      	cbnz	r3, 801cfcc <__kernel_rem_pio2f+0x24c>
 801cfb8:	b118      	cbz	r0, 801cfc2 <__kernel_rem_pio2f+0x242>
 801cfba:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cfbe:	6020      	str	r0, [r4, #0]
 801cfc0:	2001      	movs	r0, #1
 801cfc2:	f10e 0e01 	add.w	lr, lr, #1
 801cfc6:	3404      	adds	r4, #4
 801cfc8:	4603      	mov	r3, r0
 801cfca:	e785      	b.n	801ced8 <__kernel_rem_pio2f+0x158>
 801cfcc:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 801cfd0:	6020      	str	r0, [r4, #0]
 801cfd2:	4618      	mov	r0, r3
 801cfd4:	e7f5      	b.n	801cfc2 <__kernel_rem_pio2f+0x242>
 801cfd6:	1e74      	subs	r4, r6, #1
 801cfd8:	a808      	add	r0, sp, #32
 801cfda:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801cfde:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 801cfe2:	f10d 0c20 	add.w	ip, sp, #32
 801cfe6:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 801cfea:	e77e      	b.n	801ceea <__kernel_rem_pio2f+0x16a>
 801cfec:	1e74      	subs	r4, r6, #1
 801cfee:	a808      	add	r0, sp, #32
 801cff0:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801cff4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 801cff8:	e7f3      	b.n	801cfe2 <__kernel_rem_pio2f+0x262>
 801cffa:	ab08      	add	r3, sp, #32
 801cffc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d000:	f10c 3cff 	add.w	ip, ip, #4294967295
 801d004:	4318      	orrs	r0, r3
 801d006:	e7ab      	b.n	801cf60 <__kernel_rem_pio2f+0x1e0>
 801d008:	f10c 0c01 	add.w	ip, ip, #1
 801d00c:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 801d010:	2c00      	cmp	r4, #0
 801d012:	d0f9      	beq.n	801d008 <__kernel_rem_pio2f+0x288>
 801d014:	9b05      	ldr	r3, [sp, #20]
 801d016:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 801d01a:	eb0d 0003 	add.w	r0, sp, r3
 801d01e:	9b01      	ldr	r3, [sp, #4]
 801d020:	18f4      	adds	r4, r6, r3
 801d022:	ab1c      	add	r3, sp, #112	; 0x70
 801d024:	1c77      	adds	r7, r6, #1
 801d026:	384c      	subs	r0, #76	; 0x4c
 801d028:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 801d02c:	4466      	add	r6, ip
 801d02e:	42be      	cmp	r6, r7
 801d030:	f6ff af0b 	blt.w	801ce4a <__kernel_rem_pio2f+0xca>
 801d034:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 801d038:	f8dd e008 	ldr.w	lr, [sp, #8]
 801d03c:	ee07 3a90 	vmov	s15, r3
 801d040:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d044:	f04f 0c00 	mov.w	ip, #0
 801d048:	ece4 7a01 	vstmia	r4!, {s15}
 801d04c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801d050:	46a1      	mov	r9, r4
 801d052:	458c      	cmp	ip, r1
 801d054:	dd07      	ble.n	801d066 <__kernel_rem_pio2f+0x2e6>
 801d056:	ece0 7a01 	vstmia	r0!, {s15}
 801d05a:	3701      	adds	r7, #1
 801d05c:	e7e7      	b.n	801d02e <__kernel_rem_pio2f+0x2ae>
 801d05e:	9804      	ldr	r0, [sp, #16]
 801d060:	f04f 0c01 	mov.w	ip, #1
 801d064:	e7d2      	b.n	801d00c <__kernel_rem_pio2f+0x28c>
 801d066:	ecfe 6a01 	vldmia	lr!, {s13}
 801d06a:	ed39 7a01 	vldmdb	r9!, {s14}
 801d06e:	f10c 0c01 	add.w	ip, ip, #1
 801d072:	eee6 7a87 	vfma.f32	s15, s13, s14
 801d076:	e7ec      	b.n	801d052 <__kernel_rem_pio2f+0x2d2>
 801d078:	3c01      	subs	r4, #1
 801d07a:	e775      	b.n	801cf68 <__kernel_rem_pio2f+0x1e8>
 801d07c:	08022078 	.word	0x08022078
 801d080:	0802204c 	.word	0x0802204c
 801d084:	43800000 	.word	0x43800000
 801d088:	3b800000 	.word	0x3b800000
 801d08c:	00000000 	.word	0x00000000
 801d090:	9b03      	ldr	r3, [sp, #12]
 801d092:	eeb0 0a48 	vmov.f32	s0, s16
 801d096:	1a98      	subs	r0, r3, r2
 801d098:	f000 fa12 	bl	801d4c0 <scalbnf>
 801d09c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 801d084 <__kernel_rem_pio2f+0x304>
 801d0a0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801d0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d0a8:	db19      	blt.n	801d0de <__kernel_rem_pio2f+0x35e>
 801d0aa:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 801d088 <__kernel_rem_pio2f+0x308>
 801d0ae:	ee60 7a27 	vmul.f32	s15, s0, s15
 801d0b2:	aa08      	add	r2, sp, #32
 801d0b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801d0b8:	1c74      	adds	r4, r6, #1
 801d0ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d0be:	3508      	adds	r5, #8
 801d0c0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801d0c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801d0c8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801d0cc:	ee10 3a10 	vmov	r3, s0
 801d0d0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801d0d4:	ee17 3a90 	vmov	r3, s15
 801d0d8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801d0dc:	e74b      	b.n	801cf76 <__kernel_rem_pio2f+0x1f6>
 801d0de:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801d0e2:	aa08      	add	r2, sp, #32
 801d0e4:	ee10 3a10 	vmov	r3, s0
 801d0e8:	4634      	mov	r4, r6
 801d0ea:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801d0ee:	e742      	b.n	801cf76 <__kernel_rem_pio2f+0x1f6>
 801d0f0:	a808      	add	r0, sp, #32
 801d0f2:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 801d0f6:	9001      	str	r0, [sp, #4]
 801d0f8:	ee07 0a90 	vmov	s15, r0
 801d0fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d100:	3a01      	subs	r2, #1
 801d102:	ee67 7a80 	vmul.f32	s15, s15, s0
 801d106:	ee20 0a07 	vmul.f32	s0, s0, s14
 801d10a:	ed61 7a01 	vstmdb	r1!, {s15}
 801d10e:	e73e      	b.n	801cf8e <__kernel_rem_pio2f+0x20e>
 801d110:	ecfc 6a01 	vldmia	ip!, {s13}
 801d114:	ecb6 7a01 	vldmia	r6!, {s14}
 801d118:	eee6 7a87 	vfma.f32	s15, s13, s14
 801d11c:	3001      	adds	r0, #1
 801d11e:	4550      	cmp	r0, sl
 801d120:	dc01      	bgt.n	801d126 <__kernel_rem_pio2f+0x3a6>
 801d122:	4288      	cmp	r0, r1
 801d124:	ddf4      	ble.n	801d110 <__kernel_rem_pio2f+0x390>
 801d126:	a858      	add	r0, sp, #352	; 0x160
 801d128:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801d12c:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 801d130:	3a01      	subs	r2, #1
 801d132:	e730      	b.n	801cf96 <__kernel_rem_pio2f+0x216>
 801d134:	9a66      	ldr	r2, [sp, #408]	; 0x198
 801d136:	2a02      	cmp	r2, #2
 801d138:	dc09      	bgt.n	801d14e <__kernel_rem_pio2f+0x3ce>
 801d13a:	2a00      	cmp	r2, #0
 801d13c:	dc2a      	bgt.n	801d194 <__kernel_rem_pio2f+0x414>
 801d13e:	d043      	beq.n	801d1c8 <__kernel_rem_pio2f+0x448>
 801d140:	f009 0007 	and.w	r0, r9, #7
 801d144:	b059      	add	sp, #356	; 0x164
 801d146:	ecbd 8b04 	vpop	{d8-d9}
 801d14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d14e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 801d150:	2b03      	cmp	r3, #3
 801d152:	d1f5      	bne.n	801d140 <__kernel_rem_pio2f+0x3c0>
 801d154:	ab30      	add	r3, sp, #192	; 0xc0
 801d156:	442b      	add	r3, r5
 801d158:	461a      	mov	r2, r3
 801d15a:	4619      	mov	r1, r3
 801d15c:	4620      	mov	r0, r4
 801d15e:	2800      	cmp	r0, #0
 801d160:	f1a1 0104 	sub.w	r1, r1, #4
 801d164:	dc51      	bgt.n	801d20a <__kernel_rem_pio2f+0x48a>
 801d166:	4621      	mov	r1, r4
 801d168:	2901      	cmp	r1, #1
 801d16a:	f1a2 0204 	sub.w	r2, r2, #4
 801d16e:	dc5c      	bgt.n	801d22a <__kernel_rem_pio2f+0x4aa>
 801d170:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801d174:	3304      	adds	r3, #4
 801d176:	2c01      	cmp	r4, #1
 801d178:	dc67      	bgt.n	801d24a <__kernel_rem_pio2f+0x4ca>
 801d17a:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801d17e:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 801d182:	2f00      	cmp	r7, #0
 801d184:	d167      	bne.n	801d256 <__kernel_rem_pio2f+0x4d6>
 801d186:	edc8 6a00 	vstr	s13, [r8]
 801d18a:	ed88 7a01 	vstr	s14, [r8, #4]
 801d18e:	edc8 7a02 	vstr	s15, [r8, #8]
 801d192:	e7d5      	b.n	801d140 <__kernel_rem_pio2f+0x3c0>
 801d194:	aa30      	add	r2, sp, #192	; 0xc0
 801d196:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801d19a:	4413      	add	r3, r2
 801d19c:	4622      	mov	r2, r4
 801d19e:	2a00      	cmp	r2, #0
 801d1a0:	da24      	bge.n	801d1ec <__kernel_rem_pio2f+0x46c>
 801d1a2:	b34f      	cbz	r7, 801d1f8 <__kernel_rem_pio2f+0x478>
 801d1a4:	eef1 7a47 	vneg.f32	s15, s14
 801d1a8:	edc8 7a00 	vstr	s15, [r8]
 801d1ac:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 801d1b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d1b4:	aa31      	add	r2, sp, #196	; 0xc4
 801d1b6:	2301      	movs	r3, #1
 801d1b8:	429c      	cmp	r4, r3
 801d1ba:	da20      	bge.n	801d1fe <__kernel_rem_pio2f+0x47e>
 801d1bc:	b10f      	cbz	r7, 801d1c2 <__kernel_rem_pio2f+0x442>
 801d1be:	eef1 7a67 	vneg.f32	s15, s15
 801d1c2:	edc8 7a01 	vstr	s15, [r8, #4]
 801d1c6:	e7bb      	b.n	801d140 <__kernel_rem_pio2f+0x3c0>
 801d1c8:	aa30      	add	r2, sp, #192	; 0xc0
 801d1ca:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 801d08c <__kernel_rem_pio2f+0x30c>
 801d1ce:	4413      	add	r3, r2
 801d1d0:	2c00      	cmp	r4, #0
 801d1d2:	da05      	bge.n	801d1e0 <__kernel_rem_pio2f+0x460>
 801d1d4:	b10f      	cbz	r7, 801d1da <__kernel_rem_pio2f+0x45a>
 801d1d6:	eef1 7a67 	vneg.f32	s15, s15
 801d1da:	edc8 7a00 	vstr	s15, [r8]
 801d1de:	e7af      	b.n	801d140 <__kernel_rem_pio2f+0x3c0>
 801d1e0:	ed33 7a01 	vldmdb	r3!, {s14}
 801d1e4:	3c01      	subs	r4, #1
 801d1e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 801d1ea:	e7f1      	b.n	801d1d0 <__kernel_rem_pio2f+0x450>
 801d1ec:	ed73 7a01 	vldmdb	r3!, {s15}
 801d1f0:	3a01      	subs	r2, #1
 801d1f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d1f6:	e7d2      	b.n	801d19e <__kernel_rem_pio2f+0x41e>
 801d1f8:	eef0 7a47 	vmov.f32	s15, s14
 801d1fc:	e7d4      	b.n	801d1a8 <__kernel_rem_pio2f+0x428>
 801d1fe:	ecb2 7a01 	vldmia	r2!, {s14}
 801d202:	3301      	adds	r3, #1
 801d204:	ee77 7a87 	vadd.f32	s15, s15, s14
 801d208:	e7d6      	b.n	801d1b8 <__kernel_rem_pio2f+0x438>
 801d20a:	edd1 7a00 	vldr	s15, [r1]
 801d20e:	edd1 6a01 	vldr	s13, [r1, #4]
 801d212:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801d216:	3801      	subs	r0, #1
 801d218:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d21c:	ed81 7a00 	vstr	s14, [r1]
 801d220:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d224:	edc1 7a01 	vstr	s15, [r1, #4]
 801d228:	e799      	b.n	801d15e <__kernel_rem_pio2f+0x3de>
 801d22a:	edd2 7a00 	vldr	s15, [r2]
 801d22e:	edd2 6a01 	vldr	s13, [r2, #4]
 801d232:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801d236:	3901      	subs	r1, #1
 801d238:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d23c:	ed82 7a00 	vstr	s14, [r2]
 801d240:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d244:	edc2 7a01 	vstr	s15, [r2, #4]
 801d248:	e78e      	b.n	801d168 <__kernel_rem_pio2f+0x3e8>
 801d24a:	ed33 7a01 	vldmdb	r3!, {s14}
 801d24e:	3c01      	subs	r4, #1
 801d250:	ee77 7a87 	vadd.f32	s15, s15, s14
 801d254:	e78f      	b.n	801d176 <__kernel_rem_pio2f+0x3f6>
 801d256:	eef1 6a66 	vneg.f32	s13, s13
 801d25a:	eeb1 7a47 	vneg.f32	s14, s14
 801d25e:	edc8 6a00 	vstr	s13, [r8]
 801d262:	ed88 7a01 	vstr	s14, [r8, #4]
 801d266:	eef1 7a67 	vneg.f32	s15, s15
 801d26a:	e790      	b.n	801d18e <__kernel_rem_pio2f+0x40e>

0801d26c <__kernel_tanf>:
 801d26c:	b508      	push	{r3, lr}
 801d26e:	ee10 3a10 	vmov	r3, s0
 801d272:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 801d276:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 801d27a:	eef0 7a40 	vmov.f32	s15, s0
 801d27e:	da17      	bge.n	801d2b0 <__kernel_tanf+0x44>
 801d280:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 801d284:	ee17 1a10 	vmov	r1, s14
 801d288:	bb41      	cbnz	r1, 801d2dc <__kernel_tanf+0x70>
 801d28a:	1c43      	adds	r3, r0, #1
 801d28c:	4313      	orrs	r3, r2
 801d28e:	d108      	bne.n	801d2a2 <__kernel_tanf+0x36>
 801d290:	f000 f8cc 	bl	801d42c <fabsf>
 801d294:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d298:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d29c:	eeb0 0a67 	vmov.f32	s0, s15
 801d2a0:	bd08      	pop	{r3, pc}
 801d2a2:	2801      	cmp	r0, #1
 801d2a4:	d0fa      	beq.n	801d29c <__kernel_tanf+0x30>
 801d2a6:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 801d2aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d2ae:	e7f5      	b.n	801d29c <__kernel_tanf+0x30>
 801d2b0:	494c      	ldr	r1, [pc, #304]	; (801d3e4 <__kernel_tanf+0x178>)
 801d2b2:	428a      	cmp	r2, r1
 801d2b4:	db12      	blt.n	801d2dc <__kernel_tanf+0x70>
 801d2b6:	2b00      	cmp	r3, #0
 801d2b8:	bfb8      	it	lt
 801d2ba:	eef1 7a40 	vneglt.f32	s15, s0
 801d2be:	ed9f 0a4a 	vldr	s0, [pc, #296]	; 801d3e8 <__kernel_tanf+0x17c>
 801d2c2:	ee70 7a67 	vsub.f32	s15, s0, s15
 801d2c6:	ed9f 0a49 	vldr	s0, [pc, #292]	; 801d3ec <__kernel_tanf+0x180>
 801d2ca:	bfb8      	it	lt
 801d2cc:	eef1 0a60 	vneglt.f32	s1, s1
 801d2d0:	ee70 0a60 	vsub.f32	s1, s0, s1
 801d2d4:	ee70 7aa7 	vadd.f32	s15, s1, s15
 801d2d8:	eddf 0a45 	vldr	s1, [pc, #276]	; 801d3f0 <__kernel_tanf+0x184>
 801d2dc:	eddf 5a45 	vldr	s11, [pc, #276]	; 801d3f4 <__kernel_tanf+0x188>
 801d2e0:	ed9f 6a45 	vldr	s12, [pc, #276]	; 801d3f8 <__kernel_tanf+0x18c>
 801d2e4:	ed9f 5a45 	vldr	s10, [pc, #276]	; 801d3fc <__kernel_tanf+0x190>
 801d2e8:	493e      	ldr	r1, [pc, #248]	; (801d3e4 <__kernel_tanf+0x178>)
 801d2ea:	ee67 6aa7 	vmul.f32	s13, s15, s15
 801d2ee:	428a      	cmp	r2, r1
 801d2f0:	ee26 7aa6 	vmul.f32	s14, s13, s13
 801d2f4:	eea7 6a25 	vfma.f32	s12, s14, s11
 801d2f8:	eddf 5a41 	vldr	s11, [pc, #260]	; 801d400 <__kernel_tanf+0x194>
 801d2fc:	eee6 5a07 	vfma.f32	s11, s12, s14
 801d300:	ed9f 6a40 	vldr	s12, [pc, #256]	; 801d404 <__kernel_tanf+0x198>
 801d304:	eea5 6a87 	vfma.f32	s12, s11, s14
 801d308:	eddf 5a3f 	vldr	s11, [pc, #252]	; 801d408 <__kernel_tanf+0x19c>
 801d30c:	eee6 5a07 	vfma.f32	s11, s12, s14
 801d310:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 801d40c <__kernel_tanf+0x1a0>
 801d314:	eea5 6a87 	vfma.f32	s12, s11, s14
 801d318:	eddf 5a3d 	vldr	s11, [pc, #244]	; 801d410 <__kernel_tanf+0x1a4>
 801d31c:	eee7 5a05 	vfma.f32	s11, s14, s10
 801d320:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 801d414 <__kernel_tanf+0x1a8>
 801d324:	eea5 5a87 	vfma.f32	s10, s11, s14
 801d328:	eddf 5a3b 	vldr	s11, [pc, #236]	; 801d418 <__kernel_tanf+0x1ac>
 801d32c:	eee5 5a07 	vfma.f32	s11, s10, s14
 801d330:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 801d41c <__kernel_tanf+0x1b0>
 801d334:	eea5 5a87 	vfma.f32	s10, s11, s14
 801d338:	eddf 5a39 	vldr	s11, [pc, #228]	; 801d420 <__kernel_tanf+0x1b4>
 801d33c:	eee5 5a07 	vfma.f32	s11, s10, s14
 801d340:	eeb0 7a46 	vmov.f32	s14, s12
 801d344:	eea5 7aa6 	vfma.f32	s14, s11, s13
 801d348:	ee27 5aa6 	vmul.f32	s10, s15, s13
 801d34c:	eeb0 6a60 	vmov.f32	s12, s1
 801d350:	eea7 6a05 	vfma.f32	s12, s14, s10
 801d354:	ed9f 7a33 	vldr	s14, [pc, #204]	; 801d424 <__kernel_tanf+0x1b8>
 801d358:	eee6 0a26 	vfma.f32	s1, s12, s13
 801d35c:	eee5 0a07 	vfma.f32	s1, s10, s14
 801d360:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801d364:	db1d      	blt.n	801d3a2 <__kernel_tanf+0x136>
 801d366:	ee06 0a90 	vmov	s13, r0
 801d36a:	eeb8 0ae6 	vcvt.f32.s32	s0, s13
 801d36e:	ee27 6a07 	vmul.f32	s12, s14, s14
 801d372:	ee37 7a00 	vadd.f32	s14, s14, s0
 801d376:	179b      	asrs	r3, r3, #30
 801d378:	eec6 6a07 	vdiv.f32	s13, s12, s14
 801d37c:	f003 0302 	and.w	r3, r3, #2
 801d380:	f1c3 0301 	rsb	r3, r3, #1
 801d384:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 801d388:	ee76 0ae0 	vsub.f32	s1, s13, s1
 801d38c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 801d390:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801d394:	ee07 3a90 	vmov	s15, r3
 801d398:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d39c:	ee67 7a80 	vmul.f32	s15, s15, s0
 801d3a0:	e77c      	b.n	801d29c <__kernel_tanf+0x30>
 801d3a2:	2801      	cmp	r0, #1
 801d3a4:	d01b      	beq.n	801d3de <__kernel_tanf+0x172>
 801d3a6:	4b20      	ldr	r3, [pc, #128]	; (801d428 <__kernel_tanf+0x1bc>)
 801d3a8:	ee17 2a10 	vmov	r2, s14
 801d3ac:	401a      	ands	r2, r3
 801d3ae:	ee06 2a10 	vmov	s12, r2
 801d3b2:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d3b6:	ee70 0ae7 	vsub.f32	s1, s1, s15
 801d3ba:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 801d3be:	eec7 6a87 	vdiv.f32	s13, s15, s14
 801d3c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d3c6:	ee16 2a90 	vmov	r2, s13
 801d3ca:	4013      	ands	r3, r2
 801d3cc:	ee07 3a90 	vmov	s15, r3
 801d3d0:	eea6 7a27 	vfma.f32	s14, s12, s15
 801d3d4:	eea0 7aa7 	vfma.f32	s14, s1, s15
 801d3d8:	eee7 7a26 	vfma.f32	s15, s14, s13
 801d3dc:	e75e      	b.n	801d29c <__kernel_tanf+0x30>
 801d3de:	eef0 7a47 	vmov.f32	s15, s14
 801d3e2:	e75b      	b.n	801d29c <__kernel_tanf+0x30>
 801d3e4:	3f2ca140 	.word	0x3f2ca140
 801d3e8:	3f490fda 	.word	0x3f490fda
 801d3ec:	33222168 	.word	0x33222168
 801d3f0:	00000000 	.word	0x00000000
 801d3f4:	b79bae5f 	.word	0xb79bae5f
 801d3f8:	38a3f445 	.word	0x38a3f445
 801d3fc:	37d95384 	.word	0x37d95384
 801d400:	3a1a26c8 	.word	0x3a1a26c8
 801d404:	3b6b6916 	.word	0x3b6b6916
 801d408:	3cb327a4 	.word	0x3cb327a4
 801d40c:	3e088889 	.word	0x3e088889
 801d410:	3895c07a 	.word	0x3895c07a
 801d414:	398137b9 	.word	0x398137b9
 801d418:	3abede48 	.word	0x3abede48
 801d41c:	3c11371f 	.word	0x3c11371f
 801d420:	3d5d0dd1 	.word	0x3d5d0dd1
 801d424:	3eaaaaab 	.word	0x3eaaaaab
 801d428:	fffff000 	.word	0xfffff000

0801d42c <fabsf>:
 801d42c:	ee10 3a10 	vmov	r3, s0
 801d430:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801d434:	ee00 3a10 	vmov	s0, r3
 801d438:	4770      	bx	lr
	...

0801d43c <floorf>:
 801d43c:	ee10 3a10 	vmov	r3, s0
 801d440:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801d444:	3a7f      	subs	r2, #127	; 0x7f
 801d446:	2a16      	cmp	r2, #22
 801d448:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801d44c:	dc2a      	bgt.n	801d4a4 <floorf+0x68>
 801d44e:	2a00      	cmp	r2, #0
 801d450:	da11      	bge.n	801d476 <floorf+0x3a>
 801d452:	eddf 7a18 	vldr	s15, [pc, #96]	; 801d4b4 <floorf+0x78>
 801d456:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d45a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801d45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d462:	dd05      	ble.n	801d470 <floorf+0x34>
 801d464:	2b00      	cmp	r3, #0
 801d466:	da23      	bge.n	801d4b0 <floorf+0x74>
 801d468:	4a13      	ldr	r2, [pc, #76]	; (801d4b8 <floorf+0x7c>)
 801d46a:	2900      	cmp	r1, #0
 801d46c:	bf18      	it	ne
 801d46e:	4613      	movne	r3, r2
 801d470:	ee00 3a10 	vmov	s0, r3
 801d474:	4770      	bx	lr
 801d476:	4911      	ldr	r1, [pc, #68]	; (801d4bc <floorf+0x80>)
 801d478:	4111      	asrs	r1, r2
 801d47a:	420b      	tst	r3, r1
 801d47c:	d0fa      	beq.n	801d474 <floorf+0x38>
 801d47e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 801d4b4 <floorf+0x78>
 801d482:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d486:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801d48a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d48e:	ddef      	ble.n	801d470 <floorf+0x34>
 801d490:	2b00      	cmp	r3, #0
 801d492:	bfbe      	ittt	lt
 801d494:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 801d498:	fa40 f202 	asrlt.w	r2, r0, r2
 801d49c:	189b      	addlt	r3, r3, r2
 801d49e:	ea23 0301 	bic.w	r3, r3, r1
 801d4a2:	e7e5      	b.n	801d470 <floorf+0x34>
 801d4a4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801d4a8:	d3e4      	bcc.n	801d474 <floorf+0x38>
 801d4aa:	ee30 0a00 	vadd.f32	s0, s0, s0
 801d4ae:	4770      	bx	lr
 801d4b0:	2300      	movs	r3, #0
 801d4b2:	e7dd      	b.n	801d470 <floorf+0x34>
 801d4b4:	7149f2ca 	.word	0x7149f2ca
 801d4b8:	bf800000 	.word	0xbf800000
 801d4bc:	007fffff 	.word	0x007fffff

0801d4c0 <scalbnf>:
 801d4c0:	ee10 3a10 	vmov	r3, s0
 801d4c4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 801d4c8:	d025      	beq.n	801d516 <scalbnf+0x56>
 801d4ca:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 801d4ce:	d302      	bcc.n	801d4d6 <scalbnf+0x16>
 801d4d0:	ee30 0a00 	vadd.f32	s0, s0, s0
 801d4d4:	4770      	bx	lr
 801d4d6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 801d4da:	d122      	bne.n	801d522 <scalbnf+0x62>
 801d4dc:	4b2a      	ldr	r3, [pc, #168]	; (801d588 <scalbnf+0xc8>)
 801d4de:	eddf 7a2b 	vldr	s15, [pc, #172]	; 801d58c <scalbnf+0xcc>
 801d4e2:	4298      	cmp	r0, r3
 801d4e4:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d4e8:	db16      	blt.n	801d518 <scalbnf+0x58>
 801d4ea:	ee10 3a10 	vmov	r3, s0
 801d4ee:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801d4f2:	3a19      	subs	r2, #25
 801d4f4:	4402      	add	r2, r0
 801d4f6:	2afe      	cmp	r2, #254	; 0xfe
 801d4f8:	dd15      	ble.n	801d526 <scalbnf+0x66>
 801d4fa:	ee10 3a10 	vmov	r3, s0
 801d4fe:	eddf 7a24 	vldr	s15, [pc, #144]	; 801d590 <scalbnf+0xd0>
 801d502:	eddf 6a24 	vldr	s13, [pc, #144]	; 801d594 <scalbnf+0xd4>
 801d506:	2b00      	cmp	r3, #0
 801d508:	eeb0 7a67 	vmov.f32	s14, s15
 801d50c:	bfb8      	it	lt
 801d50e:	eef0 7a66 	vmovlt.f32	s15, s13
 801d512:	ee27 0a27 	vmul.f32	s0, s14, s15
 801d516:	4770      	bx	lr
 801d518:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801d598 <scalbnf+0xd8>
 801d51c:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d520:	4770      	bx	lr
 801d522:	0dd2      	lsrs	r2, r2, #23
 801d524:	e7e6      	b.n	801d4f4 <scalbnf+0x34>
 801d526:	2a00      	cmp	r2, #0
 801d528:	dd06      	ble.n	801d538 <scalbnf+0x78>
 801d52a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801d52e:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801d532:	ee00 3a10 	vmov	s0, r3
 801d536:	4770      	bx	lr
 801d538:	f112 0f16 	cmn.w	r2, #22
 801d53c:	da1a      	bge.n	801d574 <scalbnf+0xb4>
 801d53e:	f24c 3350 	movw	r3, #50000	; 0xc350
 801d542:	4298      	cmp	r0, r3
 801d544:	ee10 3a10 	vmov	r3, s0
 801d548:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801d54c:	dd0a      	ble.n	801d564 <scalbnf+0xa4>
 801d54e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 801d590 <scalbnf+0xd0>
 801d552:	ed9f 7a10 	vldr	s14, [pc, #64]	; 801d594 <scalbnf+0xd4>
 801d556:	eef0 7a40 	vmov.f32	s15, s0
 801d55a:	2b00      	cmp	r3, #0
 801d55c:	bf18      	it	ne
 801d55e:	eeb0 0a47 	vmovne.f32	s0, s14
 801d562:	e7db      	b.n	801d51c <scalbnf+0x5c>
 801d564:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 801d598 <scalbnf+0xd8>
 801d568:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 801d59c <scalbnf+0xdc>
 801d56c:	eef0 7a40 	vmov.f32	s15, s0
 801d570:	2b00      	cmp	r3, #0
 801d572:	e7f3      	b.n	801d55c <scalbnf+0x9c>
 801d574:	3219      	adds	r2, #25
 801d576:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801d57a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801d57e:	eddf 7a08 	vldr	s15, [pc, #32]	; 801d5a0 <scalbnf+0xe0>
 801d582:	ee07 3a10 	vmov	s14, r3
 801d586:	e7c4      	b.n	801d512 <scalbnf+0x52>
 801d588:	ffff3cb0 	.word	0xffff3cb0
 801d58c:	4c000000 	.word	0x4c000000
 801d590:	7149f2ca 	.word	0x7149f2ca
 801d594:	f149f2ca 	.word	0xf149f2ca
 801d598:	0da24260 	.word	0x0da24260
 801d59c:	8da24260 	.word	0x8da24260
 801d5a0:	33000000 	.word	0x33000000

0801d5a4 <abort>:
 801d5a4:	b508      	push	{r3, lr}
 801d5a6:	2006      	movs	r0, #6
 801d5a8:	f000 fc9e 	bl	801dee8 <raise>
 801d5ac:	2001      	movs	r0, #1
 801d5ae:	f7e5 f9d1 	bl	8002954 <_exit>
	...

0801d5b4 <__assert_func>:
 801d5b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801d5b6:	4614      	mov	r4, r2
 801d5b8:	461a      	mov	r2, r3
 801d5ba:	4b09      	ldr	r3, [pc, #36]	; (801d5e0 <__assert_func+0x2c>)
 801d5bc:	681b      	ldr	r3, [r3, #0]
 801d5be:	4605      	mov	r5, r0
 801d5c0:	68d8      	ldr	r0, [r3, #12]
 801d5c2:	b14c      	cbz	r4, 801d5d8 <__assert_func+0x24>
 801d5c4:	4b07      	ldr	r3, [pc, #28]	; (801d5e4 <__assert_func+0x30>)
 801d5c6:	9100      	str	r1, [sp, #0]
 801d5c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801d5cc:	4906      	ldr	r1, [pc, #24]	; (801d5e8 <__assert_func+0x34>)
 801d5ce:	462b      	mov	r3, r5
 801d5d0:	f000 f828 	bl	801d624 <fiprintf>
 801d5d4:	f7ff ffe6 	bl	801d5a4 <abort>
 801d5d8:	4b04      	ldr	r3, [pc, #16]	; (801d5ec <__assert_func+0x38>)
 801d5da:	461c      	mov	r4, r3
 801d5dc:	e7f3      	b.n	801d5c6 <__assert_func+0x12>
 801d5de:	bf00      	nop
 801d5e0:	200000d8 	.word	0x200000d8
 801d5e4:	08022084 	.word	0x08022084
 801d5e8:	08022091 	.word	0x08022091
 801d5ec:	080220bf 	.word	0x080220bf

0801d5f0 <atexit>:
 801d5f0:	2300      	movs	r3, #0
 801d5f2:	4601      	mov	r1, r0
 801d5f4:	461a      	mov	r2, r3
 801d5f6:	4618      	mov	r0, r3
 801d5f8:	f000 bd52 	b.w	801e0a0 <__register_exitproc>

0801d5fc <__cxa_atexit>:
 801d5fc:	b510      	push	{r4, lr}
 801d5fe:	4c05      	ldr	r4, [pc, #20]	; (801d614 <__cxa_atexit+0x18>)
 801d600:	4613      	mov	r3, r2
 801d602:	b12c      	cbz	r4, 801d610 <__cxa_atexit+0x14>
 801d604:	460a      	mov	r2, r1
 801d606:	4601      	mov	r1, r0
 801d608:	2002      	movs	r0, #2
 801d60a:	f000 fd49 	bl	801e0a0 <__register_exitproc>
 801d60e:	bd10      	pop	{r4, pc}
 801d610:	4620      	mov	r0, r4
 801d612:	e7fc      	b.n	801d60e <__cxa_atexit+0x12>
 801d614:	0801e0a1 	.word	0x0801e0a1

0801d618 <__errno>:
 801d618:	4b01      	ldr	r3, [pc, #4]	; (801d620 <__errno+0x8>)
 801d61a:	6818      	ldr	r0, [r3, #0]
 801d61c:	4770      	bx	lr
 801d61e:	bf00      	nop
 801d620:	200000d8 	.word	0x200000d8

0801d624 <fiprintf>:
 801d624:	b40e      	push	{r1, r2, r3}
 801d626:	b503      	push	{r0, r1, lr}
 801d628:	4601      	mov	r1, r0
 801d62a:	ab03      	add	r3, sp, #12
 801d62c:	4805      	ldr	r0, [pc, #20]	; (801d644 <fiprintf+0x20>)
 801d62e:	f853 2b04 	ldr.w	r2, [r3], #4
 801d632:	6800      	ldr	r0, [r0, #0]
 801d634:	9301      	str	r3, [sp, #4]
 801d636:	f000 f95b 	bl	801d8f0 <_vfiprintf_r>
 801d63a:	b002      	add	sp, #8
 801d63c:	f85d eb04 	ldr.w	lr, [sp], #4
 801d640:	b003      	add	sp, #12
 801d642:	4770      	bx	lr
 801d644:	200000d8 	.word	0x200000d8

0801d648 <__libc_init_array>:
 801d648:	b570      	push	{r4, r5, r6, lr}
 801d64a:	4d0d      	ldr	r5, [pc, #52]	; (801d680 <__libc_init_array+0x38>)
 801d64c:	4c0d      	ldr	r4, [pc, #52]	; (801d684 <__libc_init_array+0x3c>)
 801d64e:	1b64      	subs	r4, r4, r5
 801d650:	10a4      	asrs	r4, r4, #2
 801d652:	2600      	movs	r6, #0
 801d654:	42a6      	cmp	r6, r4
 801d656:	d109      	bne.n	801d66c <__libc_init_array+0x24>
 801d658:	4d0b      	ldr	r5, [pc, #44]	; (801d688 <__libc_init_array+0x40>)
 801d65a:	4c0c      	ldr	r4, [pc, #48]	; (801d68c <__libc_init_array+0x44>)
 801d65c:	f001 f85a 	bl	801e714 <_init>
 801d660:	1b64      	subs	r4, r4, r5
 801d662:	10a4      	asrs	r4, r4, #2
 801d664:	2600      	movs	r6, #0
 801d666:	42a6      	cmp	r6, r4
 801d668:	d105      	bne.n	801d676 <__libc_init_array+0x2e>
 801d66a:	bd70      	pop	{r4, r5, r6, pc}
 801d66c:	f855 3b04 	ldr.w	r3, [r5], #4
 801d670:	4798      	blx	r3
 801d672:	3601      	adds	r6, #1
 801d674:	e7ee      	b.n	801d654 <__libc_init_array+0xc>
 801d676:	f855 3b04 	ldr.w	r3, [r5], #4
 801d67a:	4798      	blx	r3
 801d67c:	3601      	adds	r6, #1
 801d67e:	e7f2      	b.n	801d666 <__libc_init_array+0x1e>
 801d680:	080221a0 	.word	0x080221a0
 801d684:	080221a0 	.word	0x080221a0
 801d688:	080221a0 	.word	0x080221a0
 801d68c:	080221b8 	.word	0x080221b8

0801d690 <malloc>:
 801d690:	4b02      	ldr	r3, [pc, #8]	; (801d69c <malloc+0xc>)
 801d692:	4601      	mov	r1, r0
 801d694:	6818      	ldr	r0, [r3, #0]
 801d696:	f000 b88d 	b.w	801d7b4 <_malloc_r>
 801d69a:	bf00      	nop
 801d69c:	200000d8 	.word	0x200000d8

0801d6a0 <free>:
 801d6a0:	4b02      	ldr	r3, [pc, #8]	; (801d6ac <free+0xc>)
 801d6a2:	4601      	mov	r1, r0
 801d6a4:	6818      	ldr	r0, [r3, #0]
 801d6a6:	f000 b819 	b.w	801d6dc <_free_r>
 801d6aa:	bf00      	nop
 801d6ac:	200000d8 	.word	0x200000d8

0801d6b0 <memcpy>:
 801d6b0:	440a      	add	r2, r1
 801d6b2:	4291      	cmp	r1, r2
 801d6b4:	f100 33ff 	add.w	r3, r0, #4294967295
 801d6b8:	d100      	bne.n	801d6bc <memcpy+0xc>
 801d6ba:	4770      	bx	lr
 801d6bc:	b510      	push	{r4, lr}
 801d6be:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d6c2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d6c6:	4291      	cmp	r1, r2
 801d6c8:	d1f9      	bne.n	801d6be <memcpy+0xe>
 801d6ca:	bd10      	pop	{r4, pc}

0801d6cc <memset>:
 801d6cc:	4402      	add	r2, r0
 801d6ce:	4603      	mov	r3, r0
 801d6d0:	4293      	cmp	r3, r2
 801d6d2:	d100      	bne.n	801d6d6 <memset+0xa>
 801d6d4:	4770      	bx	lr
 801d6d6:	f803 1b01 	strb.w	r1, [r3], #1
 801d6da:	e7f9      	b.n	801d6d0 <memset+0x4>

0801d6dc <_free_r>:
 801d6dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d6de:	2900      	cmp	r1, #0
 801d6e0:	d044      	beq.n	801d76c <_free_r+0x90>
 801d6e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801d6e6:	9001      	str	r0, [sp, #4]
 801d6e8:	2b00      	cmp	r3, #0
 801d6ea:	f1a1 0404 	sub.w	r4, r1, #4
 801d6ee:	bfb8      	it	lt
 801d6f0:	18e4      	addlt	r4, r4, r3
 801d6f2:	f000 ff57 	bl	801e5a4 <__malloc_lock>
 801d6f6:	4a1e      	ldr	r2, [pc, #120]	; (801d770 <_free_r+0x94>)
 801d6f8:	9801      	ldr	r0, [sp, #4]
 801d6fa:	6813      	ldr	r3, [r2, #0]
 801d6fc:	b933      	cbnz	r3, 801d70c <_free_r+0x30>
 801d6fe:	6063      	str	r3, [r4, #4]
 801d700:	6014      	str	r4, [r2, #0]
 801d702:	b003      	add	sp, #12
 801d704:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801d708:	f000 bf52 	b.w	801e5b0 <__malloc_unlock>
 801d70c:	42a3      	cmp	r3, r4
 801d70e:	d908      	bls.n	801d722 <_free_r+0x46>
 801d710:	6825      	ldr	r5, [r4, #0]
 801d712:	1961      	adds	r1, r4, r5
 801d714:	428b      	cmp	r3, r1
 801d716:	bf01      	itttt	eq
 801d718:	6819      	ldreq	r1, [r3, #0]
 801d71a:	685b      	ldreq	r3, [r3, #4]
 801d71c:	1949      	addeq	r1, r1, r5
 801d71e:	6021      	streq	r1, [r4, #0]
 801d720:	e7ed      	b.n	801d6fe <_free_r+0x22>
 801d722:	461a      	mov	r2, r3
 801d724:	685b      	ldr	r3, [r3, #4]
 801d726:	b10b      	cbz	r3, 801d72c <_free_r+0x50>
 801d728:	42a3      	cmp	r3, r4
 801d72a:	d9fa      	bls.n	801d722 <_free_r+0x46>
 801d72c:	6811      	ldr	r1, [r2, #0]
 801d72e:	1855      	adds	r5, r2, r1
 801d730:	42a5      	cmp	r5, r4
 801d732:	d10b      	bne.n	801d74c <_free_r+0x70>
 801d734:	6824      	ldr	r4, [r4, #0]
 801d736:	4421      	add	r1, r4
 801d738:	1854      	adds	r4, r2, r1
 801d73a:	42a3      	cmp	r3, r4
 801d73c:	6011      	str	r1, [r2, #0]
 801d73e:	d1e0      	bne.n	801d702 <_free_r+0x26>
 801d740:	681c      	ldr	r4, [r3, #0]
 801d742:	685b      	ldr	r3, [r3, #4]
 801d744:	6053      	str	r3, [r2, #4]
 801d746:	4421      	add	r1, r4
 801d748:	6011      	str	r1, [r2, #0]
 801d74a:	e7da      	b.n	801d702 <_free_r+0x26>
 801d74c:	d902      	bls.n	801d754 <_free_r+0x78>
 801d74e:	230c      	movs	r3, #12
 801d750:	6003      	str	r3, [r0, #0]
 801d752:	e7d6      	b.n	801d702 <_free_r+0x26>
 801d754:	6825      	ldr	r5, [r4, #0]
 801d756:	1961      	adds	r1, r4, r5
 801d758:	428b      	cmp	r3, r1
 801d75a:	bf04      	itt	eq
 801d75c:	6819      	ldreq	r1, [r3, #0]
 801d75e:	685b      	ldreq	r3, [r3, #4]
 801d760:	6063      	str	r3, [r4, #4]
 801d762:	bf04      	itt	eq
 801d764:	1949      	addeq	r1, r1, r5
 801d766:	6021      	streq	r1, [r4, #0]
 801d768:	6054      	str	r4, [r2, #4]
 801d76a:	e7ca      	b.n	801d702 <_free_r+0x26>
 801d76c:	b003      	add	sp, #12
 801d76e:	bd30      	pop	{r4, r5, pc}
 801d770:	2000c0c8 	.word	0x2000c0c8

0801d774 <sbrk_aligned>:
 801d774:	b570      	push	{r4, r5, r6, lr}
 801d776:	4e0e      	ldr	r6, [pc, #56]	; (801d7b0 <sbrk_aligned+0x3c>)
 801d778:	460c      	mov	r4, r1
 801d77a:	6831      	ldr	r1, [r6, #0]
 801d77c:	4605      	mov	r5, r0
 801d77e:	b911      	cbnz	r1, 801d786 <sbrk_aligned+0x12>
 801d780:	f000 fb7a 	bl	801de78 <_sbrk_r>
 801d784:	6030      	str	r0, [r6, #0]
 801d786:	4621      	mov	r1, r4
 801d788:	4628      	mov	r0, r5
 801d78a:	f000 fb75 	bl	801de78 <_sbrk_r>
 801d78e:	1c43      	adds	r3, r0, #1
 801d790:	d00a      	beq.n	801d7a8 <sbrk_aligned+0x34>
 801d792:	1cc4      	adds	r4, r0, #3
 801d794:	f024 0403 	bic.w	r4, r4, #3
 801d798:	42a0      	cmp	r0, r4
 801d79a:	d007      	beq.n	801d7ac <sbrk_aligned+0x38>
 801d79c:	1a21      	subs	r1, r4, r0
 801d79e:	4628      	mov	r0, r5
 801d7a0:	f000 fb6a 	bl	801de78 <_sbrk_r>
 801d7a4:	3001      	adds	r0, #1
 801d7a6:	d101      	bne.n	801d7ac <sbrk_aligned+0x38>
 801d7a8:	f04f 34ff 	mov.w	r4, #4294967295
 801d7ac:	4620      	mov	r0, r4
 801d7ae:	bd70      	pop	{r4, r5, r6, pc}
 801d7b0:	2000c0cc 	.word	0x2000c0cc

0801d7b4 <_malloc_r>:
 801d7b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d7b8:	1ccd      	adds	r5, r1, #3
 801d7ba:	f025 0503 	bic.w	r5, r5, #3
 801d7be:	3508      	adds	r5, #8
 801d7c0:	2d0c      	cmp	r5, #12
 801d7c2:	bf38      	it	cc
 801d7c4:	250c      	movcc	r5, #12
 801d7c6:	2d00      	cmp	r5, #0
 801d7c8:	4607      	mov	r7, r0
 801d7ca:	db01      	blt.n	801d7d0 <_malloc_r+0x1c>
 801d7cc:	42a9      	cmp	r1, r5
 801d7ce:	d905      	bls.n	801d7dc <_malloc_r+0x28>
 801d7d0:	230c      	movs	r3, #12
 801d7d2:	603b      	str	r3, [r7, #0]
 801d7d4:	2600      	movs	r6, #0
 801d7d6:	4630      	mov	r0, r6
 801d7d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d7dc:	4e2e      	ldr	r6, [pc, #184]	; (801d898 <_malloc_r+0xe4>)
 801d7de:	f000 fee1 	bl	801e5a4 <__malloc_lock>
 801d7e2:	6833      	ldr	r3, [r6, #0]
 801d7e4:	461c      	mov	r4, r3
 801d7e6:	bb34      	cbnz	r4, 801d836 <_malloc_r+0x82>
 801d7e8:	4629      	mov	r1, r5
 801d7ea:	4638      	mov	r0, r7
 801d7ec:	f7ff ffc2 	bl	801d774 <sbrk_aligned>
 801d7f0:	1c43      	adds	r3, r0, #1
 801d7f2:	4604      	mov	r4, r0
 801d7f4:	d14d      	bne.n	801d892 <_malloc_r+0xde>
 801d7f6:	6834      	ldr	r4, [r6, #0]
 801d7f8:	4626      	mov	r6, r4
 801d7fa:	2e00      	cmp	r6, #0
 801d7fc:	d140      	bne.n	801d880 <_malloc_r+0xcc>
 801d7fe:	6823      	ldr	r3, [r4, #0]
 801d800:	4631      	mov	r1, r6
 801d802:	4638      	mov	r0, r7
 801d804:	eb04 0803 	add.w	r8, r4, r3
 801d808:	f000 fb36 	bl	801de78 <_sbrk_r>
 801d80c:	4580      	cmp	r8, r0
 801d80e:	d13a      	bne.n	801d886 <_malloc_r+0xd2>
 801d810:	6821      	ldr	r1, [r4, #0]
 801d812:	3503      	adds	r5, #3
 801d814:	1a6d      	subs	r5, r5, r1
 801d816:	f025 0503 	bic.w	r5, r5, #3
 801d81a:	3508      	adds	r5, #8
 801d81c:	2d0c      	cmp	r5, #12
 801d81e:	bf38      	it	cc
 801d820:	250c      	movcc	r5, #12
 801d822:	4629      	mov	r1, r5
 801d824:	4638      	mov	r0, r7
 801d826:	f7ff ffa5 	bl	801d774 <sbrk_aligned>
 801d82a:	3001      	adds	r0, #1
 801d82c:	d02b      	beq.n	801d886 <_malloc_r+0xd2>
 801d82e:	6823      	ldr	r3, [r4, #0]
 801d830:	442b      	add	r3, r5
 801d832:	6023      	str	r3, [r4, #0]
 801d834:	e00e      	b.n	801d854 <_malloc_r+0xa0>
 801d836:	6822      	ldr	r2, [r4, #0]
 801d838:	1b52      	subs	r2, r2, r5
 801d83a:	d41e      	bmi.n	801d87a <_malloc_r+0xc6>
 801d83c:	2a0b      	cmp	r2, #11
 801d83e:	d916      	bls.n	801d86e <_malloc_r+0xba>
 801d840:	1961      	adds	r1, r4, r5
 801d842:	42a3      	cmp	r3, r4
 801d844:	6025      	str	r5, [r4, #0]
 801d846:	bf18      	it	ne
 801d848:	6059      	strne	r1, [r3, #4]
 801d84a:	6863      	ldr	r3, [r4, #4]
 801d84c:	bf08      	it	eq
 801d84e:	6031      	streq	r1, [r6, #0]
 801d850:	5162      	str	r2, [r4, r5]
 801d852:	604b      	str	r3, [r1, #4]
 801d854:	4638      	mov	r0, r7
 801d856:	f104 060b 	add.w	r6, r4, #11
 801d85a:	f000 fea9 	bl	801e5b0 <__malloc_unlock>
 801d85e:	f026 0607 	bic.w	r6, r6, #7
 801d862:	1d23      	adds	r3, r4, #4
 801d864:	1af2      	subs	r2, r6, r3
 801d866:	d0b6      	beq.n	801d7d6 <_malloc_r+0x22>
 801d868:	1b9b      	subs	r3, r3, r6
 801d86a:	50a3      	str	r3, [r4, r2]
 801d86c:	e7b3      	b.n	801d7d6 <_malloc_r+0x22>
 801d86e:	6862      	ldr	r2, [r4, #4]
 801d870:	42a3      	cmp	r3, r4
 801d872:	bf0c      	ite	eq
 801d874:	6032      	streq	r2, [r6, #0]
 801d876:	605a      	strne	r2, [r3, #4]
 801d878:	e7ec      	b.n	801d854 <_malloc_r+0xa0>
 801d87a:	4623      	mov	r3, r4
 801d87c:	6864      	ldr	r4, [r4, #4]
 801d87e:	e7b2      	b.n	801d7e6 <_malloc_r+0x32>
 801d880:	4634      	mov	r4, r6
 801d882:	6876      	ldr	r6, [r6, #4]
 801d884:	e7b9      	b.n	801d7fa <_malloc_r+0x46>
 801d886:	230c      	movs	r3, #12
 801d888:	603b      	str	r3, [r7, #0]
 801d88a:	4638      	mov	r0, r7
 801d88c:	f000 fe90 	bl	801e5b0 <__malloc_unlock>
 801d890:	e7a1      	b.n	801d7d6 <_malloc_r+0x22>
 801d892:	6025      	str	r5, [r4, #0]
 801d894:	e7de      	b.n	801d854 <_malloc_r+0xa0>
 801d896:	bf00      	nop
 801d898:	2000c0c8 	.word	0x2000c0c8

0801d89c <__sfputc_r>:
 801d89c:	6893      	ldr	r3, [r2, #8]
 801d89e:	3b01      	subs	r3, #1
 801d8a0:	2b00      	cmp	r3, #0
 801d8a2:	b410      	push	{r4}
 801d8a4:	6093      	str	r3, [r2, #8]
 801d8a6:	da08      	bge.n	801d8ba <__sfputc_r+0x1e>
 801d8a8:	6994      	ldr	r4, [r2, #24]
 801d8aa:	42a3      	cmp	r3, r4
 801d8ac:	db01      	blt.n	801d8b2 <__sfputc_r+0x16>
 801d8ae:	290a      	cmp	r1, #10
 801d8b0:	d103      	bne.n	801d8ba <__sfputc_r+0x1e>
 801d8b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d8b6:	f000 bb33 	b.w	801df20 <__swbuf_r>
 801d8ba:	6813      	ldr	r3, [r2, #0]
 801d8bc:	1c58      	adds	r0, r3, #1
 801d8be:	6010      	str	r0, [r2, #0]
 801d8c0:	7019      	strb	r1, [r3, #0]
 801d8c2:	4608      	mov	r0, r1
 801d8c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d8c8:	4770      	bx	lr

0801d8ca <__sfputs_r>:
 801d8ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d8cc:	4606      	mov	r6, r0
 801d8ce:	460f      	mov	r7, r1
 801d8d0:	4614      	mov	r4, r2
 801d8d2:	18d5      	adds	r5, r2, r3
 801d8d4:	42ac      	cmp	r4, r5
 801d8d6:	d101      	bne.n	801d8dc <__sfputs_r+0x12>
 801d8d8:	2000      	movs	r0, #0
 801d8da:	e007      	b.n	801d8ec <__sfputs_r+0x22>
 801d8dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d8e0:	463a      	mov	r2, r7
 801d8e2:	4630      	mov	r0, r6
 801d8e4:	f7ff ffda 	bl	801d89c <__sfputc_r>
 801d8e8:	1c43      	adds	r3, r0, #1
 801d8ea:	d1f3      	bne.n	801d8d4 <__sfputs_r+0xa>
 801d8ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801d8f0 <_vfiprintf_r>:
 801d8f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8f4:	460d      	mov	r5, r1
 801d8f6:	b09d      	sub	sp, #116	; 0x74
 801d8f8:	4614      	mov	r4, r2
 801d8fa:	4698      	mov	r8, r3
 801d8fc:	4606      	mov	r6, r0
 801d8fe:	b118      	cbz	r0, 801d908 <_vfiprintf_r+0x18>
 801d900:	6983      	ldr	r3, [r0, #24]
 801d902:	b90b      	cbnz	r3, 801d908 <_vfiprintf_r+0x18>
 801d904:	f000 fd48 	bl	801e398 <__sinit>
 801d908:	4b89      	ldr	r3, [pc, #548]	; (801db30 <_vfiprintf_r+0x240>)
 801d90a:	429d      	cmp	r5, r3
 801d90c:	d11b      	bne.n	801d946 <_vfiprintf_r+0x56>
 801d90e:	6875      	ldr	r5, [r6, #4]
 801d910:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d912:	07d9      	lsls	r1, r3, #31
 801d914:	d405      	bmi.n	801d922 <_vfiprintf_r+0x32>
 801d916:	89ab      	ldrh	r3, [r5, #12]
 801d918:	059a      	lsls	r2, r3, #22
 801d91a:	d402      	bmi.n	801d922 <_vfiprintf_r+0x32>
 801d91c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d91e:	f000 fdd9 	bl	801e4d4 <__retarget_lock_acquire_recursive>
 801d922:	89ab      	ldrh	r3, [r5, #12]
 801d924:	071b      	lsls	r3, r3, #28
 801d926:	d501      	bpl.n	801d92c <_vfiprintf_r+0x3c>
 801d928:	692b      	ldr	r3, [r5, #16]
 801d92a:	b9eb      	cbnz	r3, 801d968 <_vfiprintf_r+0x78>
 801d92c:	4629      	mov	r1, r5
 801d92e:	4630      	mov	r0, r6
 801d930:	f000 fb48 	bl	801dfc4 <__swsetup_r>
 801d934:	b1c0      	cbz	r0, 801d968 <_vfiprintf_r+0x78>
 801d936:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d938:	07dc      	lsls	r4, r3, #31
 801d93a:	d50e      	bpl.n	801d95a <_vfiprintf_r+0x6a>
 801d93c:	f04f 30ff 	mov.w	r0, #4294967295
 801d940:	b01d      	add	sp, #116	; 0x74
 801d942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d946:	4b7b      	ldr	r3, [pc, #492]	; (801db34 <_vfiprintf_r+0x244>)
 801d948:	429d      	cmp	r5, r3
 801d94a:	d101      	bne.n	801d950 <_vfiprintf_r+0x60>
 801d94c:	68b5      	ldr	r5, [r6, #8]
 801d94e:	e7df      	b.n	801d910 <_vfiprintf_r+0x20>
 801d950:	4b79      	ldr	r3, [pc, #484]	; (801db38 <_vfiprintf_r+0x248>)
 801d952:	429d      	cmp	r5, r3
 801d954:	bf08      	it	eq
 801d956:	68f5      	ldreq	r5, [r6, #12]
 801d958:	e7da      	b.n	801d910 <_vfiprintf_r+0x20>
 801d95a:	89ab      	ldrh	r3, [r5, #12]
 801d95c:	0598      	lsls	r0, r3, #22
 801d95e:	d4ed      	bmi.n	801d93c <_vfiprintf_r+0x4c>
 801d960:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d962:	f000 fdb9 	bl	801e4d8 <__retarget_lock_release_recursive>
 801d966:	e7e9      	b.n	801d93c <_vfiprintf_r+0x4c>
 801d968:	2300      	movs	r3, #0
 801d96a:	9309      	str	r3, [sp, #36]	; 0x24
 801d96c:	2320      	movs	r3, #32
 801d96e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801d972:	f8cd 800c 	str.w	r8, [sp, #12]
 801d976:	2330      	movs	r3, #48	; 0x30
 801d978:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801db3c <_vfiprintf_r+0x24c>
 801d97c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801d980:	f04f 0901 	mov.w	r9, #1
 801d984:	4623      	mov	r3, r4
 801d986:	469a      	mov	sl, r3
 801d988:	f813 2b01 	ldrb.w	r2, [r3], #1
 801d98c:	b10a      	cbz	r2, 801d992 <_vfiprintf_r+0xa2>
 801d98e:	2a25      	cmp	r2, #37	; 0x25
 801d990:	d1f9      	bne.n	801d986 <_vfiprintf_r+0x96>
 801d992:	ebba 0b04 	subs.w	fp, sl, r4
 801d996:	d00b      	beq.n	801d9b0 <_vfiprintf_r+0xc0>
 801d998:	465b      	mov	r3, fp
 801d99a:	4622      	mov	r2, r4
 801d99c:	4629      	mov	r1, r5
 801d99e:	4630      	mov	r0, r6
 801d9a0:	f7ff ff93 	bl	801d8ca <__sfputs_r>
 801d9a4:	3001      	adds	r0, #1
 801d9a6:	f000 80aa 	beq.w	801dafe <_vfiprintf_r+0x20e>
 801d9aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d9ac:	445a      	add	r2, fp
 801d9ae:	9209      	str	r2, [sp, #36]	; 0x24
 801d9b0:	f89a 3000 	ldrb.w	r3, [sl]
 801d9b4:	2b00      	cmp	r3, #0
 801d9b6:	f000 80a2 	beq.w	801dafe <_vfiprintf_r+0x20e>
 801d9ba:	2300      	movs	r3, #0
 801d9bc:	f04f 32ff 	mov.w	r2, #4294967295
 801d9c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801d9c4:	f10a 0a01 	add.w	sl, sl, #1
 801d9c8:	9304      	str	r3, [sp, #16]
 801d9ca:	9307      	str	r3, [sp, #28]
 801d9cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801d9d0:	931a      	str	r3, [sp, #104]	; 0x68
 801d9d2:	4654      	mov	r4, sl
 801d9d4:	2205      	movs	r2, #5
 801d9d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d9da:	4858      	ldr	r0, [pc, #352]	; (801db3c <_vfiprintf_r+0x24c>)
 801d9dc:	f7e2 fc10 	bl	8000200 <memchr>
 801d9e0:	9a04      	ldr	r2, [sp, #16]
 801d9e2:	b9d8      	cbnz	r0, 801da1c <_vfiprintf_r+0x12c>
 801d9e4:	06d1      	lsls	r1, r2, #27
 801d9e6:	bf44      	itt	mi
 801d9e8:	2320      	movmi	r3, #32
 801d9ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d9ee:	0713      	lsls	r3, r2, #28
 801d9f0:	bf44      	itt	mi
 801d9f2:	232b      	movmi	r3, #43	; 0x2b
 801d9f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d9f8:	f89a 3000 	ldrb.w	r3, [sl]
 801d9fc:	2b2a      	cmp	r3, #42	; 0x2a
 801d9fe:	d015      	beq.n	801da2c <_vfiprintf_r+0x13c>
 801da00:	9a07      	ldr	r2, [sp, #28]
 801da02:	4654      	mov	r4, sl
 801da04:	2000      	movs	r0, #0
 801da06:	f04f 0c0a 	mov.w	ip, #10
 801da0a:	4621      	mov	r1, r4
 801da0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801da10:	3b30      	subs	r3, #48	; 0x30
 801da12:	2b09      	cmp	r3, #9
 801da14:	d94e      	bls.n	801dab4 <_vfiprintf_r+0x1c4>
 801da16:	b1b0      	cbz	r0, 801da46 <_vfiprintf_r+0x156>
 801da18:	9207      	str	r2, [sp, #28]
 801da1a:	e014      	b.n	801da46 <_vfiprintf_r+0x156>
 801da1c:	eba0 0308 	sub.w	r3, r0, r8
 801da20:	fa09 f303 	lsl.w	r3, r9, r3
 801da24:	4313      	orrs	r3, r2
 801da26:	9304      	str	r3, [sp, #16]
 801da28:	46a2      	mov	sl, r4
 801da2a:	e7d2      	b.n	801d9d2 <_vfiprintf_r+0xe2>
 801da2c:	9b03      	ldr	r3, [sp, #12]
 801da2e:	1d19      	adds	r1, r3, #4
 801da30:	681b      	ldr	r3, [r3, #0]
 801da32:	9103      	str	r1, [sp, #12]
 801da34:	2b00      	cmp	r3, #0
 801da36:	bfbb      	ittet	lt
 801da38:	425b      	neglt	r3, r3
 801da3a:	f042 0202 	orrlt.w	r2, r2, #2
 801da3e:	9307      	strge	r3, [sp, #28]
 801da40:	9307      	strlt	r3, [sp, #28]
 801da42:	bfb8      	it	lt
 801da44:	9204      	strlt	r2, [sp, #16]
 801da46:	7823      	ldrb	r3, [r4, #0]
 801da48:	2b2e      	cmp	r3, #46	; 0x2e
 801da4a:	d10c      	bne.n	801da66 <_vfiprintf_r+0x176>
 801da4c:	7863      	ldrb	r3, [r4, #1]
 801da4e:	2b2a      	cmp	r3, #42	; 0x2a
 801da50:	d135      	bne.n	801dabe <_vfiprintf_r+0x1ce>
 801da52:	9b03      	ldr	r3, [sp, #12]
 801da54:	1d1a      	adds	r2, r3, #4
 801da56:	681b      	ldr	r3, [r3, #0]
 801da58:	9203      	str	r2, [sp, #12]
 801da5a:	2b00      	cmp	r3, #0
 801da5c:	bfb8      	it	lt
 801da5e:	f04f 33ff 	movlt.w	r3, #4294967295
 801da62:	3402      	adds	r4, #2
 801da64:	9305      	str	r3, [sp, #20]
 801da66:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801db4c <_vfiprintf_r+0x25c>
 801da6a:	7821      	ldrb	r1, [r4, #0]
 801da6c:	2203      	movs	r2, #3
 801da6e:	4650      	mov	r0, sl
 801da70:	f7e2 fbc6 	bl	8000200 <memchr>
 801da74:	b140      	cbz	r0, 801da88 <_vfiprintf_r+0x198>
 801da76:	2340      	movs	r3, #64	; 0x40
 801da78:	eba0 000a 	sub.w	r0, r0, sl
 801da7c:	fa03 f000 	lsl.w	r0, r3, r0
 801da80:	9b04      	ldr	r3, [sp, #16]
 801da82:	4303      	orrs	r3, r0
 801da84:	3401      	adds	r4, #1
 801da86:	9304      	str	r3, [sp, #16]
 801da88:	f814 1b01 	ldrb.w	r1, [r4], #1
 801da8c:	482c      	ldr	r0, [pc, #176]	; (801db40 <_vfiprintf_r+0x250>)
 801da8e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801da92:	2206      	movs	r2, #6
 801da94:	f7e2 fbb4 	bl	8000200 <memchr>
 801da98:	2800      	cmp	r0, #0
 801da9a:	d03f      	beq.n	801db1c <_vfiprintf_r+0x22c>
 801da9c:	4b29      	ldr	r3, [pc, #164]	; (801db44 <_vfiprintf_r+0x254>)
 801da9e:	bb1b      	cbnz	r3, 801dae8 <_vfiprintf_r+0x1f8>
 801daa0:	9b03      	ldr	r3, [sp, #12]
 801daa2:	3307      	adds	r3, #7
 801daa4:	f023 0307 	bic.w	r3, r3, #7
 801daa8:	3308      	adds	r3, #8
 801daaa:	9303      	str	r3, [sp, #12]
 801daac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801daae:	443b      	add	r3, r7
 801dab0:	9309      	str	r3, [sp, #36]	; 0x24
 801dab2:	e767      	b.n	801d984 <_vfiprintf_r+0x94>
 801dab4:	fb0c 3202 	mla	r2, ip, r2, r3
 801dab8:	460c      	mov	r4, r1
 801daba:	2001      	movs	r0, #1
 801dabc:	e7a5      	b.n	801da0a <_vfiprintf_r+0x11a>
 801dabe:	2300      	movs	r3, #0
 801dac0:	3401      	adds	r4, #1
 801dac2:	9305      	str	r3, [sp, #20]
 801dac4:	4619      	mov	r1, r3
 801dac6:	f04f 0c0a 	mov.w	ip, #10
 801daca:	4620      	mov	r0, r4
 801dacc:	f810 2b01 	ldrb.w	r2, [r0], #1
 801dad0:	3a30      	subs	r2, #48	; 0x30
 801dad2:	2a09      	cmp	r2, #9
 801dad4:	d903      	bls.n	801dade <_vfiprintf_r+0x1ee>
 801dad6:	2b00      	cmp	r3, #0
 801dad8:	d0c5      	beq.n	801da66 <_vfiprintf_r+0x176>
 801dada:	9105      	str	r1, [sp, #20]
 801dadc:	e7c3      	b.n	801da66 <_vfiprintf_r+0x176>
 801dade:	fb0c 2101 	mla	r1, ip, r1, r2
 801dae2:	4604      	mov	r4, r0
 801dae4:	2301      	movs	r3, #1
 801dae6:	e7f0      	b.n	801daca <_vfiprintf_r+0x1da>
 801dae8:	ab03      	add	r3, sp, #12
 801daea:	9300      	str	r3, [sp, #0]
 801daec:	462a      	mov	r2, r5
 801daee:	4b16      	ldr	r3, [pc, #88]	; (801db48 <_vfiprintf_r+0x258>)
 801daf0:	a904      	add	r1, sp, #16
 801daf2:	4630      	mov	r0, r6
 801daf4:	f3af 8000 	nop.w
 801daf8:	4607      	mov	r7, r0
 801dafa:	1c78      	adds	r0, r7, #1
 801dafc:	d1d6      	bne.n	801daac <_vfiprintf_r+0x1bc>
 801dafe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801db00:	07d9      	lsls	r1, r3, #31
 801db02:	d405      	bmi.n	801db10 <_vfiprintf_r+0x220>
 801db04:	89ab      	ldrh	r3, [r5, #12]
 801db06:	059a      	lsls	r2, r3, #22
 801db08:	d402      	bmi.n	801db10 <_vfiprintf_r+0x220>
 801db0a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801db0c:	f000 fce4 	bl	801e4d8 <__retarget_lock_release_recursive>
 801db10:	89ab      	ldrh	r3, [r5, #12]
 801db12:	065b      	lsls	r3, r3, #25
 801db14:	f53f af12 	bmi.w	801d93c <_vfiprintf_r+0x4c>
 801db18:	9809      	ldr	r0, [sp, #36]	; 0x24
 801db1a:	e711      	b.n	801d940 <_vfiprintf_r+0x50>
 801db1c:	ab03      	add	r3, sp, #12
 801db1e:	9300      	str	r3, [sp, #0]
 801db20:	462a      	mov	r2, r5
 801db22:	4b09      	ldr	r3, [pc, #36]	; (801db48 <_vfiprintf_r+0x258>)
 801db24:	a904      	add	r1, sp, #16
 801db26:	4630      	mov	r0, r6
 801db28:	f000 f880 	bl	801dc2c <_printf_i>
 801db2c:	e7e4      	b.n	801daf8 <_vfiprintf_r+0x208>
 801db2e:	bf00      	nop
 801db30:	0802211c 	.word	0x0802211c
 801db34:	0802213c 	.word	0x0802213c
 801db38:	080220fc 	.word	0x080220fc
 801db3c:	080220c4 	.word	0x080220c4
 801db40:	080220ce 	.word	0x080220ce
 801db44:	00000000 	.word	0x00000000
 801db48:	0801d8cb 	.word	0x0801d8cb
 801db4c:	080220ca 	.word	0x080220ca

0801db50 <_printf_common>:
 801db50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801db54:	4616      	mov	r6, r2
 801db56:	4699      	mov	r9, r3
 801db58:	688a      	ldr	r2, [r1, #8]
 801db5a:	690b      	ldr	r3, [r1, #16]
 801db5c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801db60:	4293      	cmp	r3, r2
 801db62:	bfb8      	it	lt
 801db64:	4613      	movlt	r3, r2
 801db66:	6033      	str	r3, [r6, #0]
 801db68:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801db6c:	4607      	mov	r7, r0
 801db6e:	460c      	mov	r4, r1
 801db70:	b10a      	cbz	r2, 801db76 <_printf_common+0x26>
 801db72:	3301      	adds	r3, #1
 801db74:	6033      	str	r3, [r6, #0]
 801db76:	6823      	ldr	r3, [r4, #0]
 801db78:	0699      	lsls	r1, r3, #26
 801db7a:	bf42      	ittt	mi
 801db7c:	6833      	ldrmi	r3, [r6, #0]
 801db7e:	3302      	addmi	r3, #2
 801db80:	6033      	strmi	r3, [r6, #0]
 801db82:	6825      	ldr	r5, [r4, #0]
 801db84:	f015 0506 	ands.w	r5, r5, #6
 801db88:	d106      	bne.n	801db98 <_printf_common+0x48>
 801db8a:	f104 0a19 	add.w	sl, r4, #25
 801db8e:	68e3      	ldr	r3, [r4, #12]
 801db90:	6832      	ldr	r2, [r6, #0]
 801db92:	1a9b      	subs	r3, r3, r2
 801db94:	42ab      	cmp	r3, r5
 801db96:	dc26      	bgt.n	801dbe6 <_printf_common+0x96>
 801db98:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801db9c:	1e13      	subs	r3, r2, #0
 801db9e:	6822      	ldr	r2, [r4, #0]
 801dba0:	bf18      	it	ne
 801dba2:	2301      	movne	r3, #1
 801dba4:	0692      	lsls	r2, r2, #26
 801dba6:	d42b      	bmi.n	801dc00 <_printf_common+0xb0>
 801dba8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801dbac:	4649      	mov	r1, r9
 801dbae:	4638      	mov	r0, r7
 801dbb0:	47c0      	blx	r8
 801dbb2:	3001      	adds	r0, #1
 801dbb4:	d01e      	beq.n	801dbf4 <_printf_common+0xa4>
 801dbb6:	6823      	ldr	r3, [r4, #0]
 801dbb8:	68e5      	ldr	r5, [r4, #12]
 801dbba:	6832      	ldr	r2, [r6, #0]
 801dbbc:	f003 0306 	and.w	r3, r3, #6
 801dbc0:	2b04      	cmp	r3, #4
 801dbc2:	bf08      	it	eq
 801dbc4:	1aad      	subeq	r5, r5, r2
 801dbc6:	68a3      	ldr	r3, [r4, #8]
 801dbc8:	6922      	ldr	r2, [r4, #16]
 801dbca:	bf0c      	ite	eq
 801dbcc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801dbd0:	2500      	movne	r5, #0
 801dbd2:	4293      	cmp	r3, r2
 801dbd4:	bfc4      	itt	gt
 801dbd6:	1a9b      	subgt	r3, r3, r2
 801dbd8:	18ed      	addgt	r5, r5, r3
 801dbda:	2600      	movs	r6, #0
 801dbdc:	341a      	adds	r4, #26
 801dbde:	42b5      	cmp	r5, r6
 801dbe0:	d11a      	bne.n	801dc18 <_printf_common+0xc8>
 801dbe2:	2000      	movs	r0, #0
 801dbe4:	e008      	b.n	801dbf8 <_printf_common+0xa8>
 801dbe6:	2301      	movs	r3, #1
 801dbe8:	4652      	mov	r2, sl
 801dbea:	4649      	mov	r1, r9
 801dbec:	4638      	mov	r0, r7
 801dbee:	47c0      	blx	r8
 801dbf0:	3001      	adds	r0, #1
 801dbf2:	d103      	bne.n	801dbfc <_printf_common+0xac>
 801dbf4:	f04f 30ff 	mov.w	r0, #4294967295
 801dbf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dbfc:	3501      	adds	r5, #1
 801dbfe:	e7c6      	b.n	801db8e <_printf_common+0x3e>
 801dc00:	18e1      	adds	r1, r4, r3
 801dc02:	1c5a      	adds	r2, r3, #1
 801dc04:	2030      	movs	r0, #48	; 0x30
 801dc06:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801dc0a:	4422      	add	r2, r4
 801dc0c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801dc10:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801dc14:	3302      	adds	r3, #2
 801dc16:	e7c7      	b.n	801dba8 <_printf_common+0x58>
 801dc18:	2301      	movs	r3, #1
 801dc1a:	4622      	mov	r2, r4
 801dc1c:	4649      	mov	r1, r9
 801dc1e:	4638      	mov	r0, r7
 801dc20:	47c0      	blx	r8
 801dc22:	3001      	adds	r0, #1
 801dc24:	d0e6      	beq.n	801dbf4 <_printf_common+0xa4>
 801dc26:	3601      	adds	r6, #1
 801dc28:	e7d9      	b.n	801dbde <_printf_common+0x8e>
	...

0801dc2c <_printf_i>:
 801dc2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801dc30:	7e0f      	ldrb	r7, [r1, #24]
 801dc32:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dc34:	2f78      	cmp	r7, #120	; 0x78
 801dc36:	4691      	mov	r9, r2
 801dc38:	4680      	mov	r8, r0
 801dc3a:	460c      	mov	r4, r1
 801dc3c:	469a      	mov	sl, r3
 801dc3e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801dc42:	d807      	bhi.n	801dc54 <_printf_i+0x28>
 801dc44:	2f62      	cmp	r7, #98	; 0x62
 801dc46:	d80a      	bhi.n	801dc5e <_printf_i+0x32>
 801dc48:	2f00      	cmp	r7, #0
 801dc4a:	f000 80d8 	beq.w	801ddfe <_printf_i+0x1d2>
 801dc4e:	2f58      	cmp	r7, #88	; 0x58
 801dc50:	f000 80a3 	beq.w	801dd9a <_printf_i+0x16e>
 801dc54:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801dc58:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801dc5c:	e03a      	b.n	801dcd4 <_printf_i+0xa8>
 801dc5e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801dc62:	2b15      	cmp	r3, #21
 801dc64:	d8f6      	bhi.n	801dc54 <_printf_i+0x28>
 801dc66:	a101      	add	r1, pc, #4	; (adr r1, 801dc6c <_printf_i+0x40>)
 801dc68:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801dc6c:	0801dcc5 	.word	0x0801dcc5
 801dc70:	0801dcd9 	.word	0x0801dcd9
 801dc74:	0801dc55 	.word	0x0801dc55
 801dc78:	0801dc55 	.word	0x0801dc55
 801dc7c:	0801dc55 	.word	0x0801dc55
 801dc80:	0801dc55 	.word	0x0801dc55
 801dc84:	0801dcd9 	.word	0x0801dcd9
 801dc88:	0801dc55 	.word	0x0801dc55
 801dc8c:	0801dc55 	.word	0x0801dc55
 801dc90:	0801dc55 	.word	0x0801dc55
 801dc94:	0801dc55 	.word	0x0801dc55
 801dc98:	0801dde5 	.word	0x0801dde5
 801dc9c:	0801dd09 	.word	0x0801dd09
 801dca0:	0801ddc7 	.word	0x0801ddc7
 801dca4:	0801dc55 	.word	0x0801dc55
 801dca8:	0801dc55 	.word	0x0801dc55
 801dcac:	0801de07 	.word	0x0801de07
 801dcb0:	0801dc55 	.word	0x0801dc55
 801dcb4:	0801dd09 	.word	0x0801dd09
 801dcb8:	0801dc55 	.word	0x0801dc55
 801dcbc:	0801dc55 	.word	0x0801dc55
 801dcc0:	0801ddcf 	.word	0x0801ddcf
 801dcc4:	682b      	ldr	r3, [r5, #0]
 801dcc6:	1d1a      	adds	r2, r3, #4
 801dcc8:	681b      	ldr	r3, [r3, #0]
 801dcca:	602a      	str	r2, [r5, #0]
 801dccc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801dcd0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801dcd4:	2301      	movs	r3, #1
 801dcd6:	e0a3      	b.n	801de20 <_printf_i+0x1f4>
 801dcd8:	6820      	ldr	r0, [r4, #0]
 801dcda:	6829      	ldr	r1, [r5, #0]
 801dcdc:	0606      	lsls	r6, r0, #24
 801dcde:	f101 0304 	add.w	r3, r1, #4
 801dce2:	d50a      	bpl.n	801dcfa <_printf_i+0xce>
 801dce4:	680e      	ldr	r6, [r1, #0]
 801dce6:	602b      	str	r3, [r5, #0]
 801dce8:	2e00      	cmp	r6, #0
 801dcea:	da03      	bge.n	801dcf4 <_printf_i+0xc8>
 801dcec:	232d      	movs	r3, #45	; 0x2d
 801dcee:	4276      	negs	r6, r6
 801dcf0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801dcf4:	485e      	ldr	r0, [pc, #376]	; (801de70 <_printf_i+0x244>)
 801dcf6:	230a      	movs	r3, #10
 801dcf8:	e019      	b.n	801dd2e <_printf_i+0x102>
 801dcfa:	680e      	ldr	r6, [r1, #0]
 801dcfc:	602b      	str	r3, [r5, #0]
 801dcfe:	f010 0f40 	tst.w	r0, #64	; 0x40
 801dd02:	bf18      	it	ne
 801dd04:	b236      	sxthne	r6, r6
 801dd06:	e7ef      	b.n	801dce8 <_printf_i+0xbc>
 801dd08:	682b      	ldr	r3, [r5, #0]
 801dd0a:	6820      	ldr	r0, [r4, #0]
 801dd0c:	1d19      	adds	r1, r3, #4
 801dd0e:	6029      	str	r1, [r5, #0]
 801dd10:	0601      	lsls	r1, r0, #24
 801dd12:	d501      	bpl.n	801dd18 <_printf_i+0xec>
 801dd14:	681e      	ldr	r6, [r3, #0]
 801dd16:	e002      	b.n	801dd1e <_printf_i+0xf2>
 801dd18:	0646      	lsls	r6, r0, #25
 801dd1a:	d5fb      	bpl.n	801dd14 <_printf_i+0xe8>
 801dd1c:	881e      	ldrh	r6, [r3, #0]
 801dd1e:	4854      	ldr	r0, [pc, #336]	; (801de70 <_printf_i+0x244>)
 801dd20:	2f6f      	cmp	r7, #111	; 0x6f
 801dd22:	bf0c      	ite	eq
 801dd24:	2308      	moveq	r3, #8
 801dd26:	230a      	movne	r3, #10
 801dd28:	2100      	movs	r1, #0
 801dd2a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801dd2e:	6865      	ldr	r5, [r4, #4]
 801dd30:	60a5      	str	r5, [r4, #8]
 801dd32:	2d00      	cmp	r5, #0
 801dd34:	bfa2      	ittt	ge
 801dd36:	6821      	ldrge	r1, [r4, #0]
 801dd38:	f021 0104 	bicge.w	r1, r1, #4
 801dd3c:	6021      	strge	r1, [r4, #0]
 801dd3e:	b90e      	cbnz	r6, 801dd44 <_printf_i+0x118>
 801dd40:	2d00      	cmp	r5, #0
 801dd42:	d04d      	beq.n	801dde0 <_printf_i+0x1b4>
 801dd44:	4615      	mov	r5, r2
 801dd46:	fbb6 f1f3 	udiv	r1, r6, r3
 801dd4a:	fb03 6711 	mls	r7, r3, r1, r6
 801dd4e:	5dc7      	ldrb	r7, [r0, r7]
 801dd50:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801dd54:	4637      	mov	r7, r6
 801dd56:	42bb      	cmp	r3, r7
 801dd58:	460e      	mov	r6, r1
 801dd5a:	d9f4      	bls.n	801dd46 <_printf_i+0x11a>
 801dd5c:	2b08      	cmp	r3, #8
 801dd5e:	d10b      	bne.n	801dd78 <_printf_i+0x14c>
 801dd60:	6823      	ldr	r3, [r4, #0]
 801dd62:	07de      	lsls	r6, r3, #31
 801dd64:	d508      	bpl.n	801dd78 <_printf_i+0x14c>
 801dd66:	6923      	ldr	r3, [r4, #16]
 801dd68:	6861      	ldr	r1, [r4, #4]
 801dd6a:	4299      	cmp	r1, r3
 801dd6c:	bfde      	ittt	le
 801dd6e:	2330      	movle	r3, #48	; 0x30
 801dd70:	f805 3c01 	strble.w	r3, [r5, #-1]
 801dd74:	f105 35ff 	addle.w	r5, r5, #4294967295
 801dd78:	1b52      	subs	r2, r2, r5
 801dd7a:	6122      	str	r2, [r4, #16]
 801dd7c:	f8cd a000 	str.w	sl, [sp]
 801dd80:	464b      	mov	r3, r9
 801dd82:	aa03      	add	r2, sp, #12
 801dd84:	4621      	mov	r1, r4
 801dd86:	4640      	mov	r0, r8
 801dd88:	f7ff fee2 	bl	801db50 <_printf_common>
 801dd8c:	3001      	adds	r0, #1
 801dd8e:	d14c      	bne.n	801de2a <_printf_i+0x1fe>
 801dd90:	f04f 30ff 	mov.w	r0, #4294967295
 801dd94:	b004      	add	sp, #16
 801dd96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd9a:	4835      	ldr	r0, [pc, #212]	; (801de70 <_printf_i+0x244>)
 801dd9c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801dda0:	6829      	ldr	r1, [r5, #0]
 801dda2:	6823      	ldr	r3, [r4, #0]
 801dda4:	f851 6b04 	ldr.w	r6, [r1], #4
 801dda8:	6029      	str	r1, [r5, #0]
 801ddaa:	061d      	lsls	r5, r3, #24
 801ddac:	d514      	bpl.n	801ddd8 <_printf_i+0x1ac>
 801ddae:	07df      	lsls	r7, r3, #31
 801ddb0:	bf44      	itt	mi
 801ddb2:	f043 0320 	orrmi.w	r3, r3, #32
 801ddb6:	6023      	strmi	r3, [r4, #0]
 801ddb8:	b91e      	cbnz	r6, 801ddc2 <_printf_i+0x196>
 801ddba:	6823      	ldr	r3, [r4, #0]
 801ddbc:	f023 0320 	bic.w	r3, r3, #32
 801ddc0:	6023      	str	r3, [r4, #0]
 801ddc2:	2310      	movs	r3, #16
 801ddc4:	e7b0      	b.n	801dd28 <_printf_i+0xfc>
 801ddc6:	6823      	ldr	r3, [r4, #0]
 801ddc8:	f043 0320 	orr.w	r3, r3, #32
 801ddcc:	6023      	str	r3, [r4, #0]
 801ddce:	2378      	movs	r3, #120	; 0x78
 801ddd0:	4828      	ldr	r0, [pc, #160]	; (801de74 <_printf_i+0x248>)
 801ddd2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ddd6:	e7e3      	b.n	801dda0 <_printf_i+0x174>
 801ddd8:	0659      	lsls	r1, r3, #25
 801ddda:	bf48      	it	mi
 801dddc:	b2b6      	uxthmi	r6, r6
 801ddde:	e7e6      	b.n	801ddae <_printf_i+0x182>
 801dde0:	4615      	mov	r5, r2
 801dde2:	e7bb      	b.n	801dd5c <_printf_i+0x130>
 801dde4:	682b      	ldr	r3, [r5, #0]
 801dde6:	6826      	ldr	r6, [r4, #0]
 801dde8:	6961      	ldr	r1, [r4, #20]
 801ddea:	1d18      	adds	r0, r3, #4
 801ddec:	6028      	str	r0, [r5, #0]
 801ddee:	0635      	lsls	r5, r6, #24
 801ddf0:	681b      	ldr	r3, [r3, #0]
 801ddf2:	d501      	bpl.n	801ddf8 <_printf_i+0x1cc>
 801ddf4:	6019      	str	r1, [r3, #0]
 801ddf6:	e002      	b.n	801ddfe <_printf_i+0x1d2>
 801ddf8:	0670      	lsls	r0, r6, #25
 801ddfa:	d5fb      	bpl.n	801ddf4 <_printf_i+0x1c8>
 801ddfc:	8019      	strh	r1, [r3, #0]
 801ddfe:	2300      	movs	r3, #0
 801de00:	6123      	str	r3, [r4, #16]
 801de02:	4615      	mov	r5, r2
 801de04:	e7ba      	b.n	801dd7c <_printf_i+0x150>
 801de06:	682b      	ldr	r3, [r5, #0]
 801de08:	1d1a      	adds	r2, r3, #4
 801de0a:	602a      	str	r2, [r5, #0]
 801de0c:	681d      	ldr	r5, [r3, #0]
 801de0e:	6862      	ldr	r2, [r4, #4]
 801de10:	2100      	movs	r1, #0
 801de12:	4628      	mov	r0, r5
 801de14:	f7e2 f9f4 	bl	8000200 <memchr>
 801de18:	b108      	cbz	r0, 801de1e <_printf_i+0x1f2>
 801de1a:	1b40      	subs	r0, r0, r5
 801de1c:	6060      	str	r0, [r4, #4]
 801de1e:	6863      	ldr	r3, [r4, #4]
 801de20:	6123      	str	r3, [r4, #16]
 801de22:	2300      	movs	r3, #0
 801de24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801de28:	e7a8      	b.n	801dd7c <_printf_i+0x150>
 801de2a:	6923      	ldr	r3, [r4, #16]
 801de2c:	462a      	mov	r2, r5
 801de2e:	4649      	mov	r1, r9
 801de30:	4640      	mov	r0, r8
 801de32:	47d0      	blx	sl
 801de34:	3001      	adds	r0, #1
 801de36:	d0ab      	beq.n	801dd90 <_printf_i+0x164>
 801de38:	6823      	ldr	r3, [r4, #0]
 801de3a:	079b      	lsls	r3, r3, #30
 801de3c:	d413      	bmi.n	801de66 <_printf_i+0x23a>
 801de3e:	68e0      	ldr	r0, [r4, #12]
 801de40:	9b03      	ldr	r3, [sp, #12]
 801de42:	4298      	cmp	r0, r3
 801de44:	bfb8      	it	lt
 801de46:	4618      	movlt	r0, r3
 801de48:	e7a4      	b.n	801dd94 <_printf_i+0x168>
 801de4a:	2301      	movs	r3, #1
 801de4c:	4632      	mov	r2, r6
 801de4e:	4649      	mov	r1, r9
 801de50:	4640      	mov	r0, r8
 801de52:	47d0      	blx	sl
 801de54:	3001      	adds	r0, #1
 801de56:	d09b      	beq.n	801dd90 <_printf_i+0x164>
 801de58:	3501      	adds	r5, #1
 801de5a:	68e3      	ldr	r3, [r4, #12]
 801de5c:	9903      	ldr	r1, [sp, #12]
 801de5e:	1a5b      	subs	r3, r3, r1
 801de60:	42ab      	cmp	r3, r5
 801de62:	dcf2      	bgt.n	801de4a <_printf_i+0x21e>
 801de64:	e7eb      	b.n	801de3e <_printf_i+0x212>
 801de66:	2500      	movs	r5, #0
 801de68:	f104 0619 	add.w	r6, r4, #25
 801de6c:	e7f5      	b.n	801de5a <_printf_i+0x22e>
 801de6e:	bf00      	nop
 801de70:	080220d5 	.word	0x080220d5
 801de74:	080220e6 	.word	0x080220e6

0801de78 <_sbrk_r>:
 801de78:	b538      	push	{r3, r4, r5, lr}
 801de7a:	4d06      	ldr	r5, [pc, #24]	; (801de94 <_sbrk_r+0x1c>)
 801de7c:	2300      	movs	r3, #0
 801de7e:	4604      	mov	r4, r0
 801de80:	4608      	mov	r0, r1
 801de82:	602b      	str	r3, [r5, #0]
 801de84:	f7e4 fd94 	bl	80029b0 <_sbrk>
 801de88:	1c43      	adds	r3, r0, #1
 801de8a:	d102      	bne.n	801de92 <_sbrk_r+0x1a>
 801de8c:	682b      	ldr	r3, [r5, #0]
 801de8e:	b103      	cbz	r3, 801de92 <_sbrk_r+0x1a>
 801de90:	6023      	str	r3, [r4, #0]
 801de92:	bd38      	pop	{r3, r4, r5, pc}
 801de94:	2000c26c 	.word	0x2000c26c

0801de98 <_raise_r>:
 801de98:	291f      	cmp	r1, #31
 801de9a:	b538      	push	{r3, r4, r5, lr}
 801de9c:	4604      	mov	r4, r0
 801de9e:	460d      	mov	r5, r1
 801dea0:	d904      	bls.n	801deac <_raise_r+0x14>
 801dea2:	2316      	movs	r3, #22
 801dea4:	6003      	str	r3, [r0, #0]
 801dea6:	f04f 30ff 	mov.w	r0, #4294967295
 801deaa:	bd38      	pop	{r3, r4, r5, pc}
 801deac:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801deae:	b112      	cbz	r2, 801deb6 <_raise_r+0x1e>
 801deb0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801deb4:	b94b      	cbnz	r3, 801deca <_raise_r+0x32>
 801deb6:	4620      	mov	r0, r4
 801deb8:	f000 f830 	bl	801df1c <_getpid_r>
 801debc:	462a      	mov	r2, r5
 801debe:	4601      	mov	r1, r0
 801dec0:	4620      	mov	r0, r4
 801dec2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801dec6:	f000 b817 	b.w	801def8 <_kill_r>
 801deca:	2b01      	cmp	r3, #1
 801decc:	d00a      	beq.n	801dee4 <_raise_r+0x4c>
 801dece:	1c59      	adds	r1, r3, #1
 801ded0:	d103      	bne.n	801deda <_raise_r+0x42>
 801ded2:	2316      	movs	r3, #22
 801ded4:	6003      	str	r3, [r0, #0]
 801ded6:	2001      	movs	r0, #1
 801ded8:	e7e7      	b.n	801deaa <_raise_r+0x12>
 801deda:	2400      	movs	r4, #0
 801dedc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801dee0:	4628      	mov	r0, r5
 801dee2:	4798      	blx	r3
 801dee4:	2000      	movs	r0, #0
 801dee6:	e7e0      	b.n	801deaa <_raise_r+0x12>

0801dee8 <raise>:
 801dee8:	4b02      	ldr	r3, [pc, #8]	; (801def4 <raise+0xc>)
 801deea:	4601      	mov	r1, r0
 801deec:	6818      	ldr	r0, [r3, #0]
 801deee:	f7ff bfd3 	b.w	801de98 <_raise_r>
 801def2:	bf00      	nop
 801def4:	200000d8 	.word	0x200000d8

0801def8 <_kill_r>:
 801def8:	b538      	push	{r3, r4, r5, lr}
 801defa:	4d07      	ldr	r5, [pc, #28]	; (801df18 <_kill_r+0x20>)
 801defc:	2300      	movs	r3, #0
 801defe:	4604      	mov	r4, r0
 801df00:	4608      	mov	r0, r1
 801df02:	4611      	mov	r1, r2
 801df04:	602b      	str	r3, [r5, #0]
 801df06:	f7e4 fd1d 	bl	8002944 <_kill>
 801df0a:	1c43      	adds	r3, r0, #1
 801df0c:	d102      	bne.n	801df14 <_kill_r+0x1c>
 801df0e:	682b      	ldr	r3, [r5, #0]
 801df10:	b103      	cbz	r3, 801df14 <_kill_r+0x1c>
 801df12:	6023      	str	r3, [r4, #0]
 801df14:	bd38      	pop	{r3, r4, r5, pc}
 801df16:	bf00      	nop
 801df18:	2000c26c 	.word	0x2000c26c

0801df1c <_getpid_r>:
 801df1c:	f7e4 bd10 	b.w	8002940 <_getpid>

0801df20 <__swbuf_r>:
 801df20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801df22:	460e      	mov	r6, r1
 801df24:	4614      	mov	r4, r2
 801df26:	4605      	mov	r5, r0
 801df28:	b118      	cbz	r0, 801df32 <__swbuf_r+0x12>
 801df2a:	6983      	ldr	r3, [r0, #24]
 801df2c:	b90b      	cbnz	r3, 801df32 <__swbuf_r+0x12>
 801df2e:	f000 fa33 	bl	801e398 <__sinit>
 801df32:	4b21      	ldr	r3, [pc, #132]	; (801dfb8 <__swbuf_r+0x98>)
 801df34:	429c      	cmp	r4, r3
 801df36:	d12b      	bne.n	801df90 <__swbuf_r+0x70>
 801df38:	686c      	ldr	r4, [r5, #4]
 801df3a:	69a3      	ldr	r3, [r4, #24]
 801df3c:	60a3      	str	r3, [r4, #8]
 801df3e:	89a3      	ldrh	r3, [r4, #12]
 801df40:	071a      	lsls	r2, r3, #28
 801df42:	d52f      	bpl.n	801dfa4 <__swbuf_r+0x84>
 801df44:	6923      	ldr	r3, [r4, #16]
 801df46:	b36b      	cbz	r3, 801dfa4 <__swbuf_r+0x84>
 801df48:	6923      	ldr	r3, [r4, #16]
 801df4a:	6820      	ldr	r0, [r4, #0]
 801df4c:	1ac0      	subs	r0, r0, r3
 801df4e:	6963      	ldr	r3, [r4, #20]
 801df50:	b2f6      	uxtb	r6, r6
 801df52:	4283      	cmp	r3, r0
 801df54:	4637      	mov	r7, r6
 801df56:	dc04      	bgt.n	801df62 <__swbuf_r+0x42>
 801df58:	4621      	mov	r1, r4
 801df5a:	4628      	mov	r0, r5
 801df5c:	f000 f988 	bl	801e270 <_fflush_r>
 801df60:	bb30      	cbnz	r0, 801dfb0 <__swbuf_r+0x90>
 801df62:	68a3      	ldr	r3, [r4, #8]
 801df64:	3b01      	subs	r3, #1
 801df66:	60a3      	str	r3, [r4, #8]
 801df68:	6823      	ldr	r3, [r4, #0]
 801df6a:	1c5a      	adds	r2, r3, #1
 801df6c:	6022      	str	r2, [r4, #0]
 801df6e:	701e      	strb	r6, [r3, #0]
 801df70:	6963      	ldr	r3, [r4, #20]
 801df72:	3001      	adds	r0, #1
 801df74:	4283      	cmp	r3, r0
 801df76:	d004      	beq.n	801df82 <__swbuf_r+0x62>
 801df78:	89a3      	ldrh	r3, [r4, #12]
 801df7a:	07db      	lsls	r3, r3, #31
 801df7c:	d506      	bpl.n	801df8c <__swbuf_r+0x6c>
 801df7e:	2e0a      	cmp	r6, #10
 801df80:	d104      	bne.n	801df8c <__swbuf_r+0x6c>
 801df82:	4621      	mov	r1, r4
 801df84:	4628      	mov	r0, r5
 801df86:	f000 f973 	bl	801e270 <_fflush_r>
 801df8a:	b988      	cbnz	r0, 801dfb0 <__swbuf_r+0x90>
 801df8c:	4638      	mov	r0, r7
 801df8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df90:	4b0a      	ldr	r3, [pc, #40]	; (801dfbc <__swbuf_r+0x9c>)
 801df92:	429c      	cmp	r4, r3
 801df94:	d101      	bne.n	801df9a <__swbuf_r+0x7a>
 801df96:	68ac      	ldr	r4, [r5, #8]
 801df98:	e7cf      	b.n	801df3a <__swbuf_r+0x1a>
 801df9a:	4b09      	ldr	r3, [pc, #36]	; (801dfc0 <__swbuf_r+0xa0>)
 801df9c:	429c      	cmp	r4, r3
 801df9e:	bf08      	it	eq
 801dfa0:	68ec      	ldreq	r4, [r5, #12]
 801dfa2:	e7ca      	b.n	801df3a <__swbuf_r+0x1a>
 801dfa4:	4621      	mov	r1, r4
 801dfa6:	4628      	mov	r0, r5
 801dfa8:	f000 f80c 	bl	801dfc4 <__swsetup_r>
 801dfac:	2800      	cmp	r0, #0
 801dfae:	d0cb      	beq.n	801df48 <__swbuf_r+0x28>
 801dfb0:	f04f 37ff 	mov.w	r7, #4294967295
 801dfb4:	e7ea      	b.n	801df8c <__swbuf_r+0x6c>
 801dfb6:	bf00      	nop
 801dfb8:	0802211c 	.word	0x0802211c
 801dfbc:	0802213c 	.word	0x0802213c
 801dfc0:	080220fc 	.word	0x080220fc

0801dfc4 <__swsetup_r>:
 801dfc4:	4b32      	ldr	r3, [pc, #200]	; (801e090 <__swsetup_r+0xcc>)
 801dfc6:	b570      	push	{r4, r5, r6, lr}
 801dfc8:	681d      	ldr	r5, [r3, #0]
 801dfca:	4606      	mov	r6, r0
 801dfcc:	460c      	mov	r4, r1
 801dfce:	b125      	cbz	r5, 801dfda <__swsetup_r+0x16>
 801dfd0:	69ab      	ldr	r3, [r5, #24]
 801dfd2:	b913      	cbnz	r3, 801dfda <__swsetup_r+0x16>
 801dfd4:	4628      	mov	r0, r5
 801dfd6:	f000 f9df 	bl	801e398 <__sinit>
 801dfda:	4b2e      	ldr	r3, [pc, #184]	; (801e094 <__swsetup_r+0xd0>)
 801dfdc:	429c      	cmp	r4, r3
 801dfde:	d10f      	bne.n	801e000 <__swsetup_r+0x3c>
 801dfe0:	686c      	ldr	r4, [r5, #4]
 801dfe2:	89a3      	ldrh	r3, [r4, #12]
 801dfe4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dfe8:	0719      	lsls	r1, r3, #28
 801dfea:	d42c      	bmi.n	801e046 <__swsetup_r+0x82>
 801dfec:	06dd      	lsls	r5, r3, #27
 801dfee:	d411      	bmi.n	801e014 <__swsetup_r+0x50>
 801dff0:	2309      	movs	r3, #9
 801dff2:	6033      	str	r3, [r6, #0]
 801dff4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801dff8:	81a3      	strh	r3, [r4, #12]
 801dffa:	f04f 30ff 	mov.w	r0, #4294967295
 801dffe:	e03e      	b.n	801e07e <__swsetup_r+0xba>
 801e000:	4b25      	ldr	r3, [pc, #148]	; (801e098 <__swsetup_r+0xd4>)
 801e002:	429c      	cmp	r4, r3
 801e004:	d101      	bne.n	801e00a <__swsetup_r+0x46>
 801e006:	68ac      	ldr	r4, [r5, #8]
 801e008:	e7eb      	b.n	801dfe2 <__swsetup_r+0x1e>
 801e00a:	4b24      	ldr	r3, [pc, #144]	; (801e09c <__swsetup_r+0xd8>)
 801e00c:	429c      	cmp	r4, r3
 801e00e:	bf08      	it	eq
 801e010:	68ec      	ldreq	r4, [r5, #12]
 801e012:	e7e6      	b.n	801dfe2 <__swsetup_r+0x1e>
 801e014:	0758      	lsls	r0, r3, #29
 801e016:	d512      	bpl.n	801e03e <__swsetup_r+0x7a>
 801e018:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e01a:	b141      	cbz	r1, 801e02e <__swsetup_r+0x6a>
 801e01c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e020:	4299      	cmp	r1, r3
 801e022:	d002      	beq.n	801e02a <__swsetup_r+0x66>
 801e024:	4630      	mov	r0, r6
 801e026:	f7ff fb59 	bl	801d6dc <_free_r>
 801e02a:	2300      	movs	r3, #0
 801e02c:	6363      	str	r3, [r4, #52]	; 0x34
 801e02e:	89a3      	ldrh	r3, [r4, #12]
 801e030:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801e034:	81a3      	strh	r3, [r4, #12]
 801e036:	2300      	movs	r3, #0
 801e038:	6063      	str	r3, [r4, #4]
 801e03a:	6923      	ldr	r3, [r4, #16]
 801e03c:	6023      	str	r3, [r4, #0]
 801e03e:	89a3      	ldrh	r3, [r4, #12]
 801e040:	f043 0308 	orr.w	r3, r3, #8
 801e044:	81a3      	strh	r3, [r4, #12]
 801e046:	6923      	ldr	r3, [r4, #16]
 801e048:	b94b      	cbnz	r3, 801e05e <__swsetup_r+0x9a>
 801e04a:	89a3      	ldrh	r3, [r4, #12]
 801e04c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801e050:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801e054:	d003      	beq.n	801e05e <__swsetup_r+0x9a>
 801e056:	4621      	mov	r1, r4
 801e058:	4630      	mov	r0, r6
 801e05a:	f000 fa63 	bl	801e524 <__smakebuf_r>
 801e05e:	89a0      	ldrh	r0, [r4, #12]
 801e060:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e064:	f010 0301 	ands.w	r3, r0, #1
 801e068:	d00a      	beq.n	801e080 <__swsetup_r+0xbc>
 801e06a:	2300      	movs	r3, #0
 801e06c:	60a3      	str	r3, [r4, #8]
 801e06e:	6963      	ldr	r3, [r4, #20]
 801e070:	425b      	negs	r3, r3
 801e072:	61a3      	str	r3, [r4, #24]
 801e074:	6923      	ldr	r3, [r4, #16]
 801e076:	b943      	cbnz	r3, 801e08a <__swsetup_r+0xc6>
 801e078:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801e07c:	d1ba      	bne.n	801dff4 <__swsetup_r+0x30>
 801e07e:	bd70      	pop	{r4, r5, r6, pc}
 801e080:	0781      	lsls	r1, r0, #30
 801e082:	bf58      	it	pl
 801e084:	6963      	ldrpl	r3, [r4, #20]
 801e086:	60a3      	str	r3, [r4, #8]
 801e088:	e7f4      	b.n	801e074 <__swsetup_r+0xb0>
 801e08a:	2000      	movs	r0, #0
 801e08c:	e7f7      	b.n	801e07e <__swsetup_r+0xba>
 801e08e:	bf00      	nop
 801e090:	200000d8 	.word	0x200000d8
 801e094:	0802211c 	.word	0x0802211c
 801e098:	0802213c 	.word	0x0802213c
 801e09c:	080220fc 	.word	0x080220fc

0801e0a0 <__register_exitproc>:
 801e0a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e0a4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801e160 <__register_exitproc+0xc0>
 801e0a8:	4606      	mov	r6, r0
 801e0aa:	f8d8 0000 	ldr.w	r0, [r8]
 801e0ae:	461f      	mov	r7, r3
 801e0b0:	460d      	mov	r5, r1
 801e0b2:	4691      	mov	r9, r2
 801e0b4:	f000 fa0e 	bl	801e4d4 <__retarget_lock_acquire_recursive>
 801e0b8:	4b25      	ldr	r3, [pc, #148]	; (801e150 <__register_exitproc+0xb0>)
 801e0ba:	681c      	ldr	r4, [r3, #0]
 801e0bc:	b934      	cbnz	r4, 801e0cc <__register_exitproc+0x2c>
 801e0be:	4c25      	ldr	r4, [pc, #148]	; (801e154 <__register_exitproc+0xb4>)
 801e0c0:	601c      	str	r4, [r3, #0]
 801e0c2:	4b25      	ldr	r3, [pc, #148]	; (801e158 <__register_exitproc+0xb8>)
 801e0c4:	b113      	cbz	r3, 801e0cc <__register_exitproc+0x2c>
 801e0c6:	681b      	ldr	r3, [r3, #0]
 801e0c8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801e0cc:	6863      	ldr	r3, [r4, #4]
 801e0ce:	2b1f      	cmp	r3, #31
 801e0d0:	dd07      	ble.n	801e0e2 <__register_exitproc+0x42>
 801e0d2:	f8d8 0000 	ldr.w	r0, [r8]
 801e0d6:	f000 f9ff 	bl	801e4d8 <__retarget_lock_release_recursive>
 801e0da:	f04f 30ff 	mov.w	r0, #4294967295
 801e0de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e0e2:	b34e      	cbz	r6, 801e138 <__register_exitproc+0x98>
 801e0e4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801e0e8:	b988      	cbnz	r0, 801e10e <__register_exitproc+0x6e>
 801e0ea:	4b1c      	ldr	r3, [pc, #112]	; (801e15c <__register_exitproc+0xbc>)
 801e0ec:	b923      	cbnz	r3, 801e0f8 <__register_exitproc+0x58>
 801e0ee:	f8d8 0000 	ldr.w	r0, [r8]
 801e0f2:	f000 f9f0 	bl	801e4d6 <__retarget_lock_release>
 801e0f6:	e7f0      	b.n	801e0da <__register_exitproc+0x3a>
 801e0f8:	f44f 7084 	mov.w	r0, #264	; 0x108
 801e0fc:	f7ff fac8 	bl	801d690 <malloc>
 801e100:	2800      	cmp	r0, #0
 801e102:	d0f4      	beq.n	801e0ee <__register_exitproc+0x4e>
 801e104:	2300      	movs	r3, #0
 801e106:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801e10a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801e10e:	6863      	ldr	r3, [r4, #4]
 801e110:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801e114:	2201      	movs	r2, #1
 801e116:	409a      	lsls	r2, r3
 801e118:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801e11c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801e120:	4313      	orrs	r3, r2
 801e122:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801e126:	2e02      	cmp	r6, #2
 801e128:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801e12c:	bf02      	ittt	eq
 801e12e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801e132:	4313      	orreq	r3, r2
 801e134:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801e138:	6863      	ldr	r3, [r4, #4]
 801e13a:	f8d8 0000 	ldr.w	r0, [r8]
 801e13e:	1c5a      	adds	r2, r3, #1
 801e140:	3302      	adds	r3, #2
 801e142:	6062      	str	r2, [r4, #4]
 801e144:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801e148:	f000 f9c6 	bl	801e4d8 <__retarget_lock_release_recursive>
 801e14c:	2000      	movs	r0, #0
 801e14e:	e7c6      	b.n	801e0de <__register_exitproc+0x3e>
 801e150:	2000c264 	.word	0x2000c264
 801e154:	2000c1d8 	.word	0x2000c1d8
 801e158:	080220f8 	.word	0x080220f8
 801e15c:	0801d691 	.word	0x0801d691
 801e160:	2000013c 	.word	0x2000013c

0801e164 <__sflush_r>:
 801e164:	898a      	ldrh	r2, [r1, #12]
 801e166:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e16a:	4605      	mov	r5, r0
 801e16c:	0710      	lsls	r0, r2, #28
 801e16e:	460c      	mov	r4, r1
 801e170:	d458      	bmi.n	801e224 <__sflush_r+0xc0>
 801e172:	684b      	ldr	r3, [r1, #4]
 801e174:	2b00      	cmp	r3, #0
 801e176:	dc05      	bgt.n	801e184 <__sflush_r+0x20>
 801e178:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801e17a:	2b00      	cmp	r3, #0
 801e17c:	dc02      	bgt.n	801e184 <__sflush_r+0x20>
 801e17e:	2000      	movs	r0, #0
 801e180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e184:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e186:	2e00      	cmp	r6, #0
 801e188:	d0f9      	beq.n	801e17e <__sflush_r+0x1a>
 801e18a:	2300      	movs	r3, #0
 801e18c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801e190:	682f      	ldr	r7, [r5, #0]
 801e192:	602b      	str	r3, [r5, #0]
 801e194:	d032      	beq.n	801e1fc <__sflush_r+0x98>
 801e196:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801e198:	89a3      	ldrh	r3, [r4, #12]
 801e19a:	075a      	lsls	r2, r3, #29
 801e19c:	d505      	bpl.n	801e1aa <__sflush_r+0x46>
 801e19e:	6863      	ldr	r3, [r4, #4]
 801e1a0:	1ac0      	subs	r0, r0, r3
 801e1a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801e1a4:	b10b      	cbz	r3, 801e1aa <__sflush_r+0x46>
 801e1a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e1a8:	1ac0      	subs	r0, r0, r3
 801e1aa:	2300      	movs	r3, #0
 801e1ac:	4602      	mov	r2, r0
 801e1ae:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e1b0:	6a21      	ldr	r1, [r4, #32]
 801e1b2:	4628      	mov	r0, r5
 801e1b4:	47b0      	blx	r6
 801e1b6:	1c43      	adds	r3, r0, #1
 801e1b8:	89a3      	ldrh	r3, [r4, #12]
 801e1ba:	d106      	bne.n	801e1ca <__sflush_r+0x66>
 801e1bc:	6829      	ldr	r1, [r5, #0]
 801e1be:	291d      	cmp	r1, #29
 801e1c0:	d82c      	bhi.n	801e21c <__sflush_r+0xb8>
 801e1c2:	4a2a      	ldr	r2, [pc, #168]	; (801e26c <__sflush_r+0x108>)
 801e1c4:	40ca      	lsrs	r2, r1
 801e1c6:	07d6      	lsls	r6, r2, #31
 801e1c8:	d528      	bpl.n	801e21c <__sflush_r+0xb8>
 801e1ca:	2200      	movs	r2, #0
 801e1cc:	6062      	str	r2, [r4, #4]
 801e1ce:	04d9      	lsls	r1, r3, #19
 801e1d0:	6922      	ldr	r2, [r4, #16]
 801e1d2:	6022      	str	r2, [r4, #0]
 801e1d4:	d504      	bpl.n	801e1e0 <__sflush_r+0x7c>
 801e1d6:	1c42      	adds	r2, r0, #1
 801e1d8:	d101      	bne.n	801e1de <__sflush_r+0x7a>
 801e1da:	682b      	ldr	r3, [r5, #0]
 801e1dc:	b903      	cbnz	r3, 801e1e0 <__sflush_r+0x7c>
 801e1de:	6560      	str	r0, [r4, #84]	; 0x54
 801e1e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e1e2:	602f      	str	r7, [r5, #0]
 801e1e4:	2900      	cmp	r1, #0
 801e1e6:	d0ca      	beq.n	801e17e <__sflush_r+0x1a>
 801e1e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e1ec:	4299      	cmp	r1, r3
 801e1ee:	d002      	beq.n	801e1f6 <__sflush_r+0x92>
 801e1f0:	4628      	mov	r0, r5
 801e1f2:	f7ff fa73 	bl	801d6dc <_free_r>
 801e1f6:	2000      	movs	r0, #0
 801e1f8:	6360      	str	r0, [r4, #52]	; 0x34
 801e1fa:	e7c1      	b.n	801e180 <__sflush_r+0x1c>
 801e1fc:	6a21      	ldr	r1, [r4, #32]
 801e1fe:	2301      	movs	r3, #1
 801e200:	4628      	mov	r0, r5
 801e202:	47b0      	blx	r6
 801e204:	1c41      	adds	r1, r0, #1
 801e206:	d1c7      	bne.n	801e198 <__sflush_r+0x34>
 801e208:	682b      	ldr	r3, [r5, #0]
 801e20a:	2b00      	cmp	r3, #0
 801e20c:	d0c4      	beq.n	801e198 <__sflush_r+0x34>
 801e20e:	2b1d      	cmp	r3, #29
 801e210:	d001      	beq.n	801e216 <__sflush_r+0xb2>
 801e212:	2b16      	cmp	r3, #22
 801e214:	d101      	bne.n	801e21a <__sflush_r+0xb6>
 801e216:	602f      	str	r7, [r5, #0]
 801e218:	e7b1      	b.n	801e17e <__sflush_r+0x1a>
 801e21a:	89a3      	ldrh	r3, [r4, #12]
 801e21c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e220:	81a3      	strh	r3, [r4, #12]
 801e222:	e7ad      	b.n	801e180 <__sflush_r+0x1c>
 801e224:	690f      	ldr	r7, [r1, #16]
 801e226:	2f00      	cmp	r7, #0
 801e228:	d0a9      	beq.n	801e17e <__sflush_r+0x1a>
 801e22a:	0793      	lsls	r3, r2, #30
 801e22c:	680e      	ldr	r6, [r1, #0]
 801e22e:	bf08      	it	eq
 801e230:	694b      	ldreq	r3, [r1, #20]
 801e232:	600f      	str	r7, [r1, #0]
 801e234:	bf18      	it	ne
 801e236:	2300      	movne	r3, #0
 801e238:	eba6 0807 	sub.w	r8, r6, r7
 801e23c:	608b      	str	r3, [r1, #8]
 801e23e:	f1b8 0f00 	cmp.w	r8, #0
 801e242:	dd9c      	ble.n	801e17e <__sflush_r+0x1a>
 801e244:	6a21      	ldr	r1, [r4, #32]
 801e246:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801e248:	4643      	mov	r3, r8
 801e24a:	463a      	mov	r2, r7
 801e24c:	4628      	mov	r0, r5
 801e24e:	47b0      	blx	r6
 801e250:	2800      	cmp	r0, #0
 801e252:	dc06      	bgt.n	801e262 <__sflush_r+0xfe>
 801e254:	89a3      	ldrh	r3, [r4, #12]
 801e256:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e25a:	81a3      	strh	r3, [r4, #12]
 801e25c:	f04f 30ff 	mov.w	r0, #4294967295
 801e260:	e78e      	b.n	801e180 <__sflush_r+0x1c>
 801e262:	4407      	add	r7, r0
 801e264:	eba8 0800 	sub.w	r8, r8, r0
 801e268:	e7e9      	b.n	801e23e <__sflush_r+0xda>
 801e26a:	bf00      	nop
 801e26c:	20400001 	.word	0x20400001

0801e270 <_fflush_r>:
 801e270:	b538      	push	{r3, r4, r5, lr}
 801e272:	690b      	ldr	r3, [r1, #16]
 801e274:	4605      	mov	r5, r0
 801e276:	460c      	mov	r4, r1
 801e278:	b913      	cbnz	r3, 801e280 <_fflush_r+0x10>
 801e27a:	2500      	movs	r5, #0
 801e27c:	4628      	mov	r0, r5
 801e27e:	bd38      	pop	{r3, r4, r5, pc}
 801e280:	b118      	cbz	r0, 801e28a <_fflush_r+0x1a>
 801e282:	6983      	ldr	r3, [r0, #24]
 801e284:	b90b      	cbnz	r3, 801e28a <_fflush_r+0x1a>
 801e286:	f000 f887 	bl	801e398 <__sinit>
 801e28a:	4b14      	ldr	r3, [pc, #80]	; (801e2dc <_fflush_r+0x6c>)
 801e28c:	429c      	cmp	r4, r3
 801e28e:	d11b      	bne.n	801e2c8 <_fflush_r+0x58>
 801e290:	686c      	ldr	r4, [r5, #4]
 801e292:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e296:	2b00      	cmp	r3, #0
 801e298:	d0ef      	beq.n	801e27a <_fflush_r+0xa>
 801e29a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e29c:	07d0      	lsls	r0, r2, #31
 801e29e:	d404      	bmi.n	801e2aa <_fflush_r+0x3a>
 801e2a0:	0599      	lsls	r1, r3, #22
 801e2a2:	d402      	bmi.n	801e2aa <_fflush_r+0x3a>
 801e2a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e2a6:	f000 f915 	bl	801e4d4 <__retarget_lock_acquire_recursive>
 801e2aa:	4628      	mov	r0, r5
 801e2ac:	4621      	mov	r1, r4
 801e2ae:	f7ff ff59 	bl	801e164 <__sflush_r>
 801e2b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e2b4:	07da      	lsls	r2, r3, #31
 801e2b6:	4605      	mov	r5, r0
 801e2b8:	d4e0      	bmi.n	801e27c <_fflush_r+0xc>
 801e2ba:	89a3      	ldrh	r3, [r4, #12]
 801e2bc:	059b      	lsls	r3, r3, #22
 801e2be:	d4dd      	bmi.n	801e27c <_fflush_r+0xc>
 801e2c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e2c2:	f000 f909 	bl	801e4d8 <__retarget_lock_release_recursive>
 801e2c6:	e7d9      	b.n	801e27c <_fflush_r+0xc>
 801e2c8:	4b05      	ldr	r3, [pc, #20]	; (801e2e0 <_fflush_r+0x70>)
 801e2ca:	429c      	cmp	r4, r3
 801e2cc:	d101      	bne.n	801e2d2 <_fflush_r+0x62>
 801e2ce:	68ac      	ldr	r4, [r5, #8]
 801e2d0:	e7df      	b.n	801e292 <_fflush_r+0x22>
 801e2d2:	4b04      	ldr	r3, [pc, #16]	; (801e2e4 <_fflush_r+0x74>)
 801e2d4:	429c      	cmp	r4, r3
 801e2d6:	bf08      	it	eq
 801e2d8:	68ec      	ldreq	r4, [r5, #12]
 801e2da:	e7da      	b.n	801e292 <_fflush_r+0x22>
 801e2dc:	0802211c 	.word	0x0802211c
 801e2e0:	0802213c 	.word	0x0802213c
 801e2e4:	080220fc 	.word	0x080220fc

0801e2e8 <std>:
 801e2e8:	2300      	movs	r3, #0
 801e2ea:	b510      	push	{r4, lr}
 801e2ec:	4604      	mov	r4, r0
 801e2ee:	e9c0 3300 	strd	r3, r3, [r0]
 801e2f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801e2f6:	6083      	str	r3, [r0, #8]
 801e2f8:	8181      	strh	r1, [r0, #12]
 801e2fa:	6643      	str	r3, [r0, #100]	; 0x64
 801e2fc:	81c2      	strh	r2, [r0, #14]
 801e2fe:	6183      	str	r3, [r0, #24]
 801e300:	4619      	mov	r1, r3
 801e302:	2208      	movs	r2, #8
 801e304:	305c      	adds	r0, #92	; 0x5c
 801e306:	f7ff f9e1 	bl	801d6cc <memset>
 801e30a:	4b05      	ldr	r3, [pc, #20]	; (801e320 <std+0x38>)
 801e30c:	6263      	str	r3, [r4, #36]	; 0x24
 801e30e:	4b05      	ldr	r3, [pc, #20]	; (801e324 <std+0x3c>)
 801e310:	62a3      	str	r3, [r4, #40]	; 0x28
 801e312:	4b05      	ldr	r3, [pc, #20]	; (801e328 <std+0x40>)
 801e314:	62e3      	str	r3, [r4, #44]	; 0x2c
 801e316:	4b05      	ldr	r3, [pc, #20]	; (801e32c <std+0x44>)
 801e318:	6224      	str	r4, [r4, #32]
 801e31a:	6323      	str	r3, [r4, #48]	; 0x30
 801e31c:	bd10      	pop	{r4, pc}
 801e31e:	bf00      	nop
 801e320:	0801e5bd 	.word	0x0801e5bd
 801e324:	0801e5df 	.word	0x0801e5df
 801e328:	0801e617 	.word	0x0801e617
 801e32c:	0801e63b 	.word	0x0801e63b

0801e330 <_cleanup_r>:
 801e330:	4901      	ldr	r1, [pc, #4]	; (801e338 <_cleanup_r+0x8>)
 801e332:	f000 b8af 	b.w	801e494 <_fwalk_reent>
 801e336:	bf00      	nop
 801e338:	0801e271 	.word	0x0801e271

0801e33c <__sfmoreglue>:
 801e33c:	b570      	push	{r4, r5, r6, lr}
 801e33e:	2268      	movs	r2, #104	; 0x68
 801e340:	1e4d      	subs	r5, r1, #1
 801e342:	4355      	muls	r5, r2
 801e344:	460e      	mov	r6, r1
 801e346:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801e34a:	f7ff fa33 	bl	801d7b4 <_malloc_r>
 801e34e:	4604      	mov	r4, r0
 801e350:	b140      	cbz	r0, 801e364 <__sfmoreglue+0x28>
 801e352:	2100      	movs	r1, #0
 801e354:	e9c0 1600 	strd	r1, r6, [r0]
 801e358:	300c      	adds	r0, #12
 801e35a:	60a0      	str	r0, [r4, #8]
 801e35c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801e360:	f7ff f9b4 	bl	801d6cc <memset>
 801e364:	4620      	mov	r0, r4
 801e366:	bd70      	pop	{r4, r5, r6, pc}

0801e368 <__sfp_lock_acquire>:
 801e368:	4801      	ldr	r0, [pc, #4]	; (801e370 <__sfp_lock_acquire+0x8>)
 801e36a:	f000 b8b3 	b.w	801e4d4 <__retarget_lock_acquire_recursive>
 801e36e:	bf00      	nop
 801e370:	2000c26a 	.word	0x2000c26a

0801e374 <__sfp_lock_release>:
 801e374:	4801      	ldr	r0, [pc, #4]	; (801e37c <__sfp_lock_release+0x8>)
 801e376:	f000 b8af 	b.w	801e4d8 <__retarget_lock_release_recursive>
 801e37a:	bf00      	nop
 801e37c:	2000c26a 	.word	0x2000c26a

0801e380 <__sinit_lock_acquire>:
 801e380:	4801      	ldr	r0, [pc, #4]	; (801e388 <__sinit_lock_acquire+0x8>)
 801e382:	f000 b8a7 	b.w	801e4d4 <__retarget_lock_acquire_recursive>
 801e386:	bf00      	nop
 801e388:	2000c26b 	.word	0x2000c26b

0801e38c <__sinit_lock_release>:
 801e38c:	4801      	ldr	r0, [pc, #4]	; (801e394 <__sinit_lock_release+0x8>)
 801e38e:	f000 b8a3 	b.w	801e4d8 <__retarget_lock_release_recursive>
 801e392:	bf00      	nop
 801e394:	2000c26b 	.word	0x2000c26b

0801e398 <__sinit>:
 801e398:	b510      	push	{r4, lr}
 801e39a:	4604      	mov	r4, r0
 801e39c:	f7ff fff0 	bl	801e380 <__sinit_lock_acquire>
 801e3a0:	69a3      	ldr	r3, [r4, #24]
 801e3a2:	b11b      	cbz	r3, 801e3ac <__sinit+0x14>
 801e3a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3a8:	f7ff bff0 	b.w	801e38c <__sinit_lock_release>
 801e3ac:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801e3b0:	6523      	str	r3, [r4, #80]	; 0x50
 801e3b2:	4b13      	ldr	r3, [pc, #76]	; (801e400 <__sinit+0x68>)
 801e3b4:	4a13      	ldr	r2, [pc, #76]	; (801e404 <__sinit+0x6c>)
 801e3b6:	681b      	ldr	r3, [r3, #0]
 801e3b8:	62a2      	str	r2, [r4, #40]	; 0x28
 801e3ba:	42a3      	cmp	r3, r4
 801e3bc:	bf04      	itt	eq
 801e3be:	2301      	moveq	r3, #1
 801e3c0:	61a3      	streq	r3, [r4, #24]
 801e3c2:	4620      	mov	r0, r4
 801e3c4:	f000 f820 	bl	801e408 <__sfp>
 801e3c8:	6060      	str	r0, [r4, #4]
 801e3ca:	4620      	mov	r0, r4
 801e3cc:	f000 f81c 	bl	801e408 <__sfp>
 801e3d0:	60a0      	str	r0, [r4, #8]
 801e3d2:	4620      	mov	r0, r4
 801e3d4:	f000 f818 	bl	801e408 <__sfp>
 801e3d8:	2200      	movs	r2, #0
 801e3da:	60e0      	str	r0, [r4, #12]
 801e3dc:	2104      	movs	r1, #4
 801e3de:	6860      	ldr	r0, [r4, #4]
 801e3e0:	f7ff ff82 	bl	801e2e8 <std>
 801e3e4:	68a0      	ldr	r0, [r4, #8]
 801e3e6:	2201      	movs	r2, #1
 801e3e8:	2109      	movs	r1, #9
 801e3ea:	f7ff ff7d 	bl	801e2e8 <std>
 801e3ee:	68e0      	ldr	r0, [r4, #12]
 801e3f0:	2202      	movs	r2, #2
 801e3f2:	2112      	movs	r1, #18
 801e3f4:	f7ff ff78 	bl	801e2e8 <std>
 801e3f8:	2301      	movs	r3, #1
 801e3fa:	61a3      	str	r3, [r4, #24]
 801e3fc:	e7d2      	b.n	801e3a4 <__sinit+0xc>
 801e3fe:	bf00      	nop
 801e400:	080220c0 	.word	0x080220c0
 801e404:	0801e331 	.word	0x0801e331

0801e408 <__sfp>:
 801e408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e40a:	4607      	mov	r7, r0
 801e40c:	f7ff ffac 	bl	801e368 <__sfp_lock_acquire>
 801e410:	4b1e      	ldr	r3, [pc, #120]	; (801e48c <__sfp+0x84>)
 801e412:	681e      	ldr	r6, [r3, #0]
 801e414:	69b3      	ldr	r3, [r6, #24]
 801e416:	b913      	cbnz	r3, 801e41e <__sfp+0x16>
 801e418:	4630      	mov	r0, r6
 801e41a:	f7ff ffbd 	bl	801e398 <__sinit>
 801e41e:	3648      	adds	r6, #72	; 0x48
 801e420:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801e424:	3b01      	subs	r3, #1
 801e426:	d503      	bpl.n	801e430 <__sfp+0x28>
 801e428:	6833      	ldr	r3, [r6, #0]
 801e42a:	b30b      	cbz	r3, 801e470 <__sfp+0x68>
 801e42c:	6836      	ldr	r6, [r6, #0]
 801e42e:	e7f7      	b.n	801e420 <__sfp+0x18>
 801e430:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801e434:	b9d5      	cbnz	r5, 801e46c <__sfp+0x64>
 801e436:	4b16      	ldr	r3, [pc, #88]	; (801e490 <__sfp+0x88>)
 801e438:	60e3      	str	r3, [r4, #12]
 801e43a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801e43e:	6665      	str	r5, [r4, #100]	; 0x64
 801e440:	f000 f847 	bl	801e4d2 <__retarget_lock_init_recursive>
 801e444:	f7ff ff96 	bl	801e374 <__sfp_lock_release>
 801e448:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801e44c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801e450:	6025      	str	r5, [r4, #0]
 801e452:	61a5      	str	r5, [r4, #24]
 801e454:	2208      	movs	r2, #8
 801e456:	4629      	mov	r1, r5
 801e458:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801e45c:	f7ff f936 	bl	801d6cc <memset>
 801e460:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801e464:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801e468:	4620      	mov	r0, r4
 801e46a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e46c:	3468      	adds	r4, #104	; 0x68
 801e46e:	e7d9      	b.n	801e424 <__sfp+0x1c>
 801e470:	2104      	movs	r1, #4
 801e472:	4638      	mov	r0, r7
 801e474:	f7ff ff62 	bl	801e33c <__sfmoreglue>
 801e478:	4604      	mov	r4, r0
 801e47a:	6030      	str	r0, [r6, #0]
 801e47c:	2800      	cmp	r0, #0
 801e47e:	d1d5      	bne.n	801e42c <__sfp+0x24>
 801e480:	f7ff ff78 	bl	801e374 <__sfp_lock_release>
 801e484:	230c      	movs	r3, #12
 801e486:	603b      	str	r3, [r7, #0]
 801e488:	e7ee      	b.n	801e468 <__sfp+0x60>
 801e48a:	bf00      	nop
 801e48c:	080220c0 	.word	0x080220c0
 801e490:	ffff0001 	.word	0xffff0001

0801e494 <_fwalk_reent>:
 801e494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e498:	4606      	mov	r6, r0
 801e49a:	4688      	mov	r8, r1
 801e49c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801e4a0:	2700      	movs	r7, #0
 801e4a2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801e4a6:	f1b9 0901 	subs.w	r9, r9, #1
 801e4aa:	d505      	bpl.n	801e4b8 <_fwalk_reent+0x24>
 801e4ac:	6824      	ldr	r4, [r4, #0]
 801e4ae:	2c00      	cmp	r4, #0
 801e4b0:	d1f7      	bne.n	801e4a2 <_fwalk_reent+0xe>
 801e4b2:	4638      	mov	r0, r7
 801e4b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e4b8:	89ab      	ldrh	r3, [r5, #12]
 801e4ba:	2b01      	cmp	r3, #1
 801e4bc:	d907      	bls.n	801e4ce <_fwalk_reent+0x3a>
 801e4be:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801e4c2:	3301      	adds	r3, #1
 801e4c4:	d003      	beq.n	801e4ce <_fwalk_reent+0x3a>
 801e4c6:	4629      	mov	r1, r5
 801e4c8:	4630      	mov	r0, r6
 801e4ca:	47c0      	blx	r8
 801e4cc:	4307      	orrs	r7, r0
 801e4ce:	3568      	adds	r5, #104	; 0x68
 801e4d0:	e7e9      	b.n	801e4a6 <_fwalk_reent+0x12>

0801e4d2 <__retarget_lock_init_recursive>:
 801e4d2:	4770      	bx	lr

0801e4d4 <__retarget_lock_acquire_recursive>:
 801e4d4:	4770      	bx	lr

0801e4d6 <__retarget_lock_release>:
 801e4d6:	4770      	bx	lr

0801e4d8 <__retarget_lock_release_recursive>:
 801e4d8:	4770      	bx	lr

0801e4da <__swhatbuf_r>:
 801e4da:	b570      	push	{r4, r5, r6, lr}
 801e4dc:	460e      	mov	r6, r1
 801e4de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4e2:	2900      	cmp	r1, #0
 801e4e4:	b096      	sub	sp, #88	; 0x58
 801e4e6:	4614      	mov	r4, r2
 801e4e8:	461d      	mov	r5, r3
 801e4ea:	da08      	bge.n	801e4fe <__swhatbuf_r+0x24>
 801e4ec:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801e4f0:	2200      	movs	r2, #0
 801e4f2:	602a      	str	r2, [r5, #0]
 801e4f4:	061a      	lsls	r2, r3, #24
 801e4f6:	d410      	bmi.n	801e51a <__swhatbuf_r+0x40>
 801e4f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801e4fc:	e00e      	b.n	801e51c <__swhatbuf_r+0x42>
 801e4fe:	466a      	mov	r2, sp
 801e500:	f000 f8c2 	bl	801e688 <_fstat_r>
 801e504:	2800      	cmp	r0, #0
 801e506:	dbf1      	blt.n	801e4ec <__swhatbuf_r+0x12>
 801e508:	9a01      	ldr	r2, [sp, #4]
 801e50a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801e50e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801e512:	425a      	negs	r2, r3
 801e514:	415a      	adcs	r2, r3
 801e516:	602a      	str	r2, [r5, #0]
 801e518:	e7ee      	b.n	801e4f8 <__swhatbuf_r+0x1e>
 801e51a:	2340      	movs	r3, #64	; 0x40
 801e51c:	2000      	movs	r0, #0
 801e51e:	6023      	str	r3, [r4, #0]
 801e520:	b016      	add	sp, #88	; 0x58
 801e522:	bd70      	pop	{r4, r5, r6, pc}

0801e524 <__smakebuf_r>:
 801e524:	898b      	ldrh	r3, [r1, #12]
 801e526:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801e528:	079d      	lsls	r5, r3, #30
 801e52a:	4606      	mov	r6, r0
 801e52c:	460c      	mov	r4, r1
 801e52e:	d507      	bpl.n	801e540 <__smakebuf_r+0x1c>
 801e530:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801e534:	6023      	str	r3, [r4, #0]
 801e536:	6123      	str	r3, [r4, #16]
 801e538:	2301      	movs	r3, #1
 801e53a:	6163      	str	r3, [r4, #20]
 801e53c:	b002      	add	sp, #8
 801e53e:	bd70      	pop	{r4, r5, r6, pc}
 801e540:	ab01      	add	r3, sp, #4
 801e542:	466a      	mov	r2, sp
 801e544:	f7ff ffc9 	bl	801e4da <__swhatbuf_r>
 801e548:	9900      	ldr	r1, [sp, #0]
 801e54a:	4605      	mov	r5, r0
 801e54c:	4630      	mov	r0, r6
 801e54e:	f7ff f931 	bl	801d7b4 <_malloc_r>
 801e552:	b948      	cbnz	r0, 801e568 <__smakebuf_r+0x44>
 801e554:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e558:	059a      	lsls	r2, r3, #22
 801e55a:	d4ef      	bmi.n	801e53c <__smakebuf_r+0x18>
 801e55c:	f023 0303 	bic.w	r3, r3, #3
 801e560:	f043 0302 	orr.w	r3, r3, #2
 801e564:	81a3      	strh	r3, [r4, #12]
 801e566:	e7e3      	b.n	801e530 <__smakebuf_r+0xc>
 801e568:	4b0d      	ldr	r3, [pc, #52]	; (801e5a0 <__smakebuf_r+0x7c>)
 801e56a:	62b3      	str	r3, [r6, #40]	; 0x28
 801e56c:	89a3      	ldrh	r3, [r4, #12]
 801e56e:	6020      	str	r0, [r4, #0]
 801e570:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801e574:	81a3      	strh	r3, [r4, #12]
 801e576:	9b00      	ldr	r3, [sp, #0]
 801e578:	6163      	str	r3, [r4, #20]
 801e57a:	9b01      	ldr	r3, [sp, #4]
 801e57c:	6120      	str	r0, [r4, #16]
 801e57e:	b15b      	cbz	r3, 801e598 <__smakebuf_r+0x74>
 801e580:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e584:	4630      	mov	r0, r6
 801e586:	f000 f891 	bl	801e6ac <_isatty_r>
 801e58a:	b128      	cbz	r0, 801e598 <__smakebuf_r+0x74>
 801e58c:	89a3      	ldrh	r3, [r4, #12]
 801e58e:	f023 0303 	bic.w	r3, r3, #3
 801e592:	f043 0301 	orr.w	r3, r3, #1
 801e596:	81a3      	strh	r3, [r4, #12]
 801e598:	89a0      	ldrh	r0, [r4, #12]
 801e59a:	4305      	orrs	r5, r0
 801e59c:	81a5      	strh	r5, [r4, #12]
 801e59e:	e7cd      	b.n	801e53c <__smakebuf_r+0x18>
 801e5a0:	0801e331 	.word	0x0801e331

0801e5a4 <__malloc_lock>:
 801e5a4:	4801      	ldr	r0, [pc, #4]	; (801e5ac <__malloc_lock+0x8>)
 801e5a6:	f7ff bf95 	b.w	801e4d4 <__retarget_lock_acquire_recursive>
 801e5aa:	bf00      	nop
 801e5ac:	2000c269 	.word	0x2000c269

0801e5b0 <__malloc_unlock>:
 801e5b0:	4801      	ldr	r0, [pc, #4]	; (801e5b8 <__malloc_unlock+0x8>)
 801e5b2:	f7ff bf91 	b.w	801e4d8 <__retarget_lock_release_recursive>
 801e5b6:	bf00      	nop
 801e5b8:	2000c269 	.word	0x2000c269

0801e5bc <__sread>:
 801e5bc:	b510      	push	{r4, lr}
 801e5be:	460c      	mov	r4, r1
 801e5c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e5c4:	f000 f894 	bl	801e6f0 <_read_r>
 801e5c8:	2800      	cmp	r0, #0
 801e5ca:	bfab      	itete	ge
 801e5cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801e5ce:	89a3      	ldrhlt	r3, [r4, #12]
 801e5d0:	181b      	addge	r3, r3, r0
 801e5d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801e5d6:	bfac      	ite	ge
 801e5d8:	6563      	strge	r3, [r4, #84]	; 0x54
 801e5da:	81a3      	strhlt	r3, [r4, #12]
 801e5dc:	bd10      	pop	{r4, pc}

0801e5de <__swrite>:
 801e5de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e5e2:	461f      	mov	r7, r3
 801e5e4:	898b      	ldrh	r3, [r1, #12]
 801e5e6:	05db      	lsls	r3, r3, #23
 801e5e8:	4605      	mov	r5, r0
 801e5ea:	460c      	mov	r4, r1
 801e5ec:	4616      	mov	r6, r2
 801e5ee:	d505      	bpl.n	801e5fc <__swrite+0x1e>
 801e5f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e5f4:	2302      	movs	r3, #2
 801e5f6:	2200      	movs	r2, #0
 801e5f8:	f000 f868 	bl	801e6cc <_lseek_r>
 801e5fc:	89a3      	ldrh	r3, [r4, #12]
 801e5fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e602:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801e606:	81a3      	strh	r3, [r4, #12]
 801e608:	4632      	mov	r2, r6
 801e60a:	463b      	mov	r3, r7
 801e60c:	4628      	mov	r0, r5
 801e60e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e612:	f000 b817 	b.w	801e644 <_write_r>

0801e616 <__sseek>:
 801e616:	b510      	push	{r4, lr}
 801e618:	460c      	mov	r4, r1
 801e61a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e61e:	f000 f855 	bl	801e6cc <_lseek_r>
 801e622:	1c43      	adds	r3, r0, #1
 801e624:	89a3      	ldrh	r3, [r4, #12]
 801e626:	bf15      	itete	ne
 801e628:	6560      	strne	r0, [r4, #84]	; 0x54
 801e62a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801e62e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801e632:	81a3      	strheq	r3, [r4, #12]
 801e634:	bf18      	it	ne
 801e636:	81a3      	strhne	r3, [r4, #12]
 801e638:	bd10      	pop	{r4, pc}

0801e63a <__sclose>:
 801e63a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e63e:	f000 b813 	b.w	801e668 <_close_r>
	...

0801e644 <_write_r>:
 801e644:	b538      	push	{r3, r4, r5, lr}
 801e646:	4d07      	ldr	r5, [pc, #28]	; (801e664 <_write_r+0x20>)
 801e648:	4604      	mov	r4, r0
 801e64a:	4608      	mov	r0, r1
 801e64c:	4611      	mov	r1, r2
 801e64e:	2200      	movs	r2, #0
 801e650:	602a      	str	r2, [r5, #0]
 801e652:	461a      	mov	r2, r3
 801e654:	f7e4 f992 	bl	800297c <_write>
 801e658:	1c43      	adds	r3, r0, #1
 801e65a:	d102      	bne.n	801e662 <_write_r+0x1e>
 801e65c:	682b      	ldr	r3, [r5, #0]
 801e65e:	b103      	cbz	r3, 801e662 <_write_r+0x1e>
 801e660:	6023      	str	r3, [r4, #0]
 801e662:	bd38      	pop	{r3, r4, r5, pc}
 801e664:	2000c26c 	.word	0x2000c26c

0801e668 <_close_r>:
 801e668:	b538      	push	{r3, r4, r5, lr}
 801e66a:	4d06      	ldr	r5, [pc, #24]	; (801e684 <_close_r+0x1c>)
 801e66c:	2300      	movs	r3, #0
 801e66e:	4604      	mov	r4, r0
 801e670:	4608      	mov	r0, r1
 801e672:	602b      	str	r3, [r5, #0]
 801e674:	f7e4 f990 	bl	8002998 <_close>
 801e678:	1c43      	adds	r3, r0, #1
 801e67a:	d102      	bne.n	801e682 <_close_r+0x1a>
 801e67c:	682b      	ldr	r3, [r5, #0]
 801e67e:	b103      	cbz	r3, 801e682 <_close_r+0x1a>
 801e680:	6023      	str	r3, [r4, #0]
 801e682:	bd38      	pop	{r3, r4, r5, pc}
 801e684:	2000c26c 	.word	0x2000c26c

0801e688 <_fstat_r>:
 801e688:	b538      	push	{r3, r4, r5, lr}
 801e68a:	4d07      	ldr	r5, [pc, #28]	; (801e6a8 <_fstat_r+0x20>)
 801e68c:	2300      	movs	r3, #0
 801e68e:	4604      	mov	r4, r0
 801e690:	4608      	mov	r0, r1
 801e692:	4611      	mov	r1, r2
 801e694:	602b      	str	r3, [r5, #0]
 801e696:	f7e4 f982 	bl	800299e <_fstat>
 801e69a:	1c43      	adds	r3, r0, #1
 801e69c:	d102      	bne.n	801e6a4 <_fstat_r+0x1c>
 801e69e:	682b      	ldr	r3, [r5, #0]
 801e6a0:	b103      	cbz	r3, 801e6a4 <_fstat_r+0x1c>
 801e6a2:	6023      	str	r3, [r4, #0]
 801e6a4:	bd38      	pop	{r3, r4, r5, pc}
 801e6a6:	bf00      	nop
 801e6a8:	2000c26c 	.word	0x2000c26c

0801e6ac <_isatty_r>:
 801e6ac:	b538      	push	{r3, r4, r5, lr}
 801e6ae:	4d06      	ldr	r5, [pc, #24]	; (801e6c8 <_isatty_r+0x1c>)
 801e6b0:	2300      	movs	r3, #0
 801e6b2:	4604      	mov	r4, r0
 801e6b4:	4608      	mov	r0, r1
 801e6b6:	602b      	str	r3, [r5, #0]
 801e6b8:	f7e4 f976 	bl	80029a8 <_isatty>
 801e6bc:	1c43      	adds	r3, r0, #1
 801e6be:	d102      	bne.n	801e6c6 <_isatty_r+0x1a>
 801e6c0:	682b      	ldr	r3, [r5, #0]
 801e6c2:	b103      	cbz	r3, 801e6c6 <_isatty_r+0x1a>
 801e6c4:	6023      	str	r3, [r4, #0]
 801e6c6:	bd38      	pop	{r3, r4, r5, pc}
 801e6c8:	2000c26c 	.word	0x2000c26c

0801e6cc <_lseek_r>:
 801e6cc:	b538      	push	{r3, r4, r5, lr}
 801e6ce:	4d07      	ldr	r5, [pc, #28]	; (801e6ec <_lseek_r+0x20>)
 801e6d0:	4604      	mov	r4, r0
 801e6d2:	4608      	mov	r0, r1
 801e6d4:	4611      	mov	r1, r2
 801e6d6:	2200      	movs	r2, #0
 801e6d8:	602a      	str	r2, [r5, #0]
 801e6da:	461a      	mov	r2, r3
 801e6dc:	f7e4 f966 	bl	80029ac <_lseek>
 801e6e0:	1c43      	adds	r3, r0, #1
 801e6e2:	d102      	bne.n	801e6ea <_lseek_r+0x1e>
 801e6e4:	682b      	ldr	r3, [r5, #0]
 801e6e6:	b103      	cbz	r3, 801e6ea <_lseek_r+0x1e>
 801e6e8:	6023      	str	r3, [r4, #0]
 801e6ea:	bd38      	pop	{r3, r4, r5, pc}
 801e6ec:	2000c26c 	.word	0x2000c26c

0801e6f0 <_read_r>:
 801e6f0:	b538      	push	{r3, r4, r5, lr}
 801e6f2:	4d07      	ldr	r5, [pc, #28]	; (801e710 <_read_r+0x20>)
 801e6f4:	4604      	mov	r4, r0
 801e6f6:	4608      	mov	r0, r1
 801e6f8:	4611      	mov	r1, r2
 801e6fa:	2200      	movs	r2, #0
 801e6fc:	602a      	str	r2, [r5, #0]
 801e6fe:	461a      	mov	r2, r3
 801e700:	f7e4 f92e 	bl	8002960 <_read>
 801e704:	1c43      	adds	r3, r0, #1
 801e706:	d102      	bne.n	801e70e <_read_r+0x1e>
 801e708:	682b      	ldr	r3, [r5, #0]
 801e70a:	b103      	cbz	r3, 801e70e <_read_r+0x1e>
 801e70c:	6023      	str	r3, [r4, #0]
 801e70e:	bd38      	pop	{r3, r4, r5, pc}
 801e710:	2000c26c 	.word	0x2000c26c

0801e714 <_init>:
 801e714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e716:	bf00      	nop
 801e718:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e71a:	bc08      	pop	{r3}
 801e71c:	469e      	mov	lr, r3
 801e71e:	4770      	bx	lr

0801e720 <_fini>:
 801e720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e722:	bf00      	nop
 801e724:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e726:	bc08      	pop	{r3}
 801e728:	469e      	mov	lr, r3
 801e72a:	4770      	bx	lr
