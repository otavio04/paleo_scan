/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/automatic_screen/AutomaticViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


AutomaticViewBase::AutomaticViewBase() :
    buttonCallback(this, &AutomaticViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &AutomaticViewBase::flexButtonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    swipeContainer1.setXY(0, 0);
    swipeContainer1.setSwipeCutoff(50);
    swipeContainer1.setEndSwipeElasticWidth(50);

    swipeContainer1Page2.setWidth(800);
    swipeContainer1Page2.setHeight(480);

    container5.setPosition(0, 0, 800, 480);

    box2.setPosition(0, 0, 800, 480);
    box2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    container5.add(box2);

    textArea8.setXY(133, 191);
    textArea8.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea8.setLinespacing(0);
    textArea8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GUVU));
    container5.add(textArea8);

    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_CARTOON_HEAD_DINOSAUR_FOSSIL_ID));
    scalableImage1_1.setPosition(431, 105, 300, 270);
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container5.add(scalableImage1_1);
    swipeContainer1Page2.add(container5);
    swipeContainer1.add(swipeContainer1Page2);

    swipeContainer1Page1.setWidth(800);
    swipeContainer1Page1.setHeight(480);

    container4.setPosition(0, 0, 800, 480);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    container4.add(box1);

    btn_return_a.setXY(5, 5);
    btn_return_a.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE11_ID), touchgfx::Bitmap(BITMAP_SLIDE23_ID), touchgfx::Bitmap(BITMAP_SLIDE11_ID), touchgfx::Bitmap(BITMAP_SLIDE23_ID));
    btn_return_a.setIconXY(0, 0);
    btn_return_a.setAction(buttonCallback);
    container4.add(btn_return_a);

    container1.setPosition(39, 113, 300, 323);

    textArea1.setPosition(0, 0, 300, 31);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_650Y));
    container1.add(textArea1);

    textArea2.setPosition(64, 58, 173, 35);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7XWR));
    container1.add(textArea2);

    textArea3.setXY(94, 200);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HMZY));
    container1.add(textArea3);

    pict_h.setPosition(113, 118, 75, 45);
    pict_h.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pict_h.setLinespacing(0);
    Unicode::snprintf(pict_hBuffer, PICT_H_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OJPE).getText());
    pict_h.setWildcard(pict_hBuffer);
    pict_h.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZPX));
    container1.add(pict_h);

    pict_v.setPosition(113, 258, 75, 50);
    pict_v.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pict_v.setLinespacing(0);
    Unicode::snprintf(pict_vBuffer, PICT_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PCTR).getText());
    pict_v.setWildcard(pict_vBuffer);
    pict_v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VZV));
    container1.add(pict_v);

    pict_h_minus.setXY(188, 99);
    pict_h_minus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID), touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID));
    pict_h_minus.setIconXY(0, 0);
    pict_h_minus.setAction(buttonCallback);
    container1.add(pict_h_minus);

    pict_h_plus.setXY(33, 99);
    pict_h_plus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID), touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID));
    pict_h_plus.setIconXY(0, 0);
    pict_h_plus.setAction(buttonCallback);
    container1.add(pict_h_plus);

    pict_v_minus.setXY(188, 243);
    pict_v_minus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID), touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID));
    pict_v_minus.setIconXY(0, 0);
    pict_v_minus.setAction(buttonCallback);
    container1.add(pict_v_minus);

    pict_v_plus.setXY(33, 243);
    pict_v_plus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID), touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID));
    pict_v_plus.setIconXY(0, 0);
    pict_v_plus.setAction(buttonCallback);
    container1.add(pict_v_plus);

    line1.setPosition(0, 31, 300, 20);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(220, 186, 130));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(295, 5);
    line1.setLineWidth(5);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    container1.add(line1);
    container4.add(container1);

    container2.setPosition(370, 113, 235, 323);

    textArea3_1.setXY(61, 200);
    textArea3_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NH8V));
    container2.add(textArea3_1);

    offs_h.setPosition(80, 114, 75, 50);
    offs_h.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    offs_h.setLinespacing(0);
    Unicode::snprintf(offs_hBuffer, OFFS_H_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_33KQ).getText());
    offs_h.setWildcard(offs_hBuffer);
    offs_h.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6ZLA));
    container2.add(offs_h);

    offs_v.setPosition(80, 258, 75, 50);
    offs_v.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    offs_v.setLinespacing(0);
    Unicode::snprintf(offs_vBuffer, OFFS_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3CI3).getText());
    offs_v.setWildcard(offs_vBuffer);
    offs_v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N1CE));
    container2.add(offs_v);

    offs_h_minus.setXY(155, 99);
    offs_h_minus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID), touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID));
    offs_h_minus.setIconXY(0, 0);
    offs_h_minus.setAction(buttonCallback);
    container2.add(offs_h_minus);

    offs_h_plus.setXY(0, 99);
    offs_h_plus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID), touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID));
    offs_h_plus.setIconXY(0, 0);
    offs_h_plus.setAction(buttonCallback);
    container2.add(offs_h_plus);

    offs_v_minus.setXY(155, 243);
    offs_v_minus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID), touchgfx::Bitmap(BITMAP_SLIDE2_ID), touchgfx::Bitmap(BITMAP_SLIDE14_ID));
    offs_v_minus.setIconXY(0, 0);
    offs_v_minus.setAction(buttonCallback);
    container2.add(offs_v_minus);

    offs_v_plus.setXY(0, 243);
    offs_v_plus.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID), touchgfx::Bitmap(BITMAP_SLIDE1_ID), touchgfx::Bitmap(BITMAP_SLIDE13_ID));
    offs_v_plus.setIconXY(0, 0);
    offs_v_plus.setAction(buttonCallback);
    container2.add(offs_v_plus);

    textArea6.setPosition(0, 0, 235, 31);
    textArea6.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea6.setLinespacing(0);
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZVWP));
    container2.add(textArea6);

    textArea7.setPosition(30, 58, 175, 35);
    textArea7.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea7.setLinespacing(0);
    textArea7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DF0Z));
    container2.add(textArea7);

    line1_1.setPosition(0, 31, 235, 20);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(220, 186, 130));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(5, 5);
    line1_1.setEnd(230, 5);
    line1_1.setLineWidth(5);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    container2.add(line1_1);
    container4.add(container2);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_CARTOON_HEAD_DINOSAUR_FOSSIL_ID));
    scalableImage1.setPosition(612, 0, 170, 153);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container4.add(scalableImage1);

    start_auto.setBitmaps(Bitmap(BITMAP_SLIDE1_120_ID), Bitmap(BITMAP_SLIDE2_120_ID));
    start_auto.setBitmapXY(0, 0);
    start_auto.setText(TypedText(T___SINGLEUSE_6IW9));
    start_auto.setTextPosition(0, 79, 120, 200);
    start_auto.setTextColors(touchgfx::Color::getColorFromRGB(248, 242, 232), touchgfx::Color::getColorFromRGB(196, 192, 185));
    start_auto.setPosition(637, 221, 120, 200);
    start_auto.setAction(flexButtonCallback);
    container4.add(start_auto);

    container3.setPosition(140, 20, 363, 71);

    textArea1_1.setXY(0, 0);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_13W7));
    container3.add(textArea1_1);

    line1_2.setPosition(0, 49, 363, 22);
    line1_2Painter.setColor(touchgfx::Color::getColorFromRGB(119, 85, 47));
    line1_2.setPainter(line1_2Painter);
    line1_2.setStart(5, 5);
    line1_2.setEnd(358, 5);
    line1_2.setLineWidth(5);
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    container3.add(line1_2);
    container4.add(container3);
    swipeContainer1Page1.add(container4);
    swipeContainer1.add(swipeContainer1Page1);
    swipeContainer1.setSelectedPage(0);

    add(__background);
    add(swipeContainer1);
}

void AutomaticViewBase::setupScreen()
{

}

//Called when the screen transition ends
void AutomaticViewBase::afterTransition()
{
    //Init_pict
    //When screen transition ends call virtual function
    //Call init_pict
    init_pict();
}

void AutomaticViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_return_a)
    {
        //Interaction1
        //When btn_return_a clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
    else if (&src == &pict_h_minus)
    {
        //Btn_pict_h_m
        //When pict_h_minus clicked call virtual function
        //Call btn_pict_h_m
        btn_pict_h_m();
    }
    else if (&src == &pict_h_plus)
    {
        //Btn_pict_h_p
        //When pict_h_plus clicked call virtual function
        //Call btn_pict_h_p
        btn_pict_h_p();
    }
    else if (&src == &pict_v_minus)
    {
        //Btn_pict_v_m
        //When pict_v_minus clicked call virtual function
        //Call btn_pict_v_m
        btn_pict_v_m();
    }
    else if (&src == &pict_v_plus)
    {
        //Btn_pict_v_p
        //When pict_v_plus clicked call virtual function
        //Call btn_pict_v_p
        btn_pict_v_p();
    }
    else if (&src == &offs_h_minus)
    {
        //Btn_offs_h_m
        //When offs_h_minus clicked call virtual function
        //Call btn_offs_h_m
        btn_offs_h_m();
    }
    else if (&src == &offs_h_plus)
    {
        //Btn_offs_h_p
        //When offs_h_plus clicked call virtual function
        //Call btn_offs_h_p
        btn_offs_h_p();
    }
    else if (&src == &offs_v_minus)
    {
        //Btn_offs_v_m
        //When offs_v_minus clicked call virtual function
        //Call btn_offs_v_m
        btn_offs_v_m();
    }
    else if (&src == &offs_v_plus)
    {
        //Btn_offs_v_p
        //When offs_v_plus clicked call virtual function
        //Call btn_offs_v_p
        btn_offs_v_p();
    }
}

void AutomaticViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &start_auto)
    {
        //Btn_start_auto
        //When start_auto clicked call virtual function
        //Call btn_start_auto
        btn_start_auto();
    }
}
