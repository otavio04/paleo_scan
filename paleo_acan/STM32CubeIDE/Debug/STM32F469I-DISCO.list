
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001dc74  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003ee8  0801de34  0801de34  0002de34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  08021d1c  08021d1c  00031d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08021d34  08021d34  00072490  2**0
                  CONTENTS
  5 .ARM          00000008  08021d34  08021d34  00031d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08021d3c  08021d3c  00072490  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08021d3c  08021d3c  00031d3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08021d54  08021d54  00031d54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08021d5c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a970  20000140  08021e9c  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000aab0  08021e9c  0004aab0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00072490  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 000219e0  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000009f8  900219e0  900219e0  000719e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 000000b8  900223d8  900223d8  000723d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00053d04  00000000  00000000  000724c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000c8993  00000000  00000000  000c61c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001779b  00000000  00000000  0018eb57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002f38  00000000  00000000  001a62f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012fb46  00000000  00000000  001a9230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00005700  00000000  00000000  002d8d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0002bd08  00000000  00000000  002de478  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00039a04  00000000  00000000  0030a180  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00343b84  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000089e4  00000000  00000000  00343c54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801de1c 	.word	0x0801de1c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801de1c 	.word	0x0801de1c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f004 fb77 	bl	8004cc0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01c fbbd 	bl	801cd50 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff7d 	bl	80014d4 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	08021d5c 	.word	0x08021d5c
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000aab0 	.word	0x2000aab0

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf9 	b.w	80011ec <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be67 	b.w	80012cc <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f003 bec5 	b.w	8004390 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f003 befc 	b.w	8004404 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01c fb04 	bl	801cc60 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01c fac3 	bl	801cc60 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01c fabb 	bl	801cc60 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f004 fa33 	bl	8004b64 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2127      	movs	r1, #39	; 0x27
 8000716:	f01c fad1 	bl	801ccbc <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801deb8 	.word	0x0801deb8
 8000724:	0801decb 	.word	0x0801decb
 8000728:	0801def5 	.word	0x0801def5

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f004 fa4b 	bl	8004bd4 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2801      	cmp	r0, #1
 8000762:	d00b      	beq.n	800077c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000764:	2803      	cmp	r0, #3
 8000766:	d010      	beq.n	800078a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000768:	b9c0      	cbnz	r0, 800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0d      	ldr	r3, [pc, #52]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	480b      	ldr	r0, [pc, #44]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	f005 bac6 	b.w	8005d08 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2140      	movs	r1, #64	; 0x40
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800078c:	4806      	ldr	r0, [pc, #24]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 800078e:	68da      	ldr	r2, [r3, #12]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800079a:	e7ed      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000164 	.word	0x20000164
 80007a4:	40020000 	.word	0x40020000
 80007a8:	40021800 	.word	0x40021800

080007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007ac:	2801      	cmp	r0, #1
 80007ae:	d00b      	beq.n	80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 80007b0:	2803      	cmp	r0, #3
 80007b2:	d010      	beq.n	80007d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80007b4:	b9c0      	cbnz	r0, 80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0d      	ldr	r3, [pc, #52]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	480b      	ldr	r0, [pc, #44]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	f005 baa0 	b.w	8005d08 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b08      	ldr	r3, [pc, #32]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2140      	movs	r1, #64	; 0x40
 80007d4:	e7f5      	b.n	80007c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007d8:	4806      	ldr	r0, [pc, #24]	; (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	3a00      	subs	r2, #0
 80007de:	bf18      	it	ne
 80007e0:	2201      	movne	r2, #1
 80007e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007e6:	e7ed      	b.n	80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000164 	.word	0x20000164
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40021800 	.word	0x40021800

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2801      	cmp	r0, #1
 80007fa:	d006      	beq.n	800080a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 80007fc:	2803      	cmp	r0, #3
 80007fe:	d006      	beq.n	800080e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8000800:	b948      	cbnz	r0, 8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000804:	4804      	ldr	r0, [pc, #16]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	f005 ba84 	b.w	8005d12 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080a:	2140      	movs	r1, #64	; 0x40
 800080c:	e7fa      	b.n	8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800080e:	4803      	ldr	r0, [pc, #12]	; (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000810:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000814:	e7f7      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000816:	4770      	bx	lr
 8000818:	40020000 	.word	0x40020000
 800081c:	40021800 	.word	0x40021800

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000820:	2801      	cmp	r0, #1
{
 8000822:	b508      	push	{r3, lr}
    switch (id)
 8000824:	d00a      	beq.n	800083c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000826:	2803      	cmp	r0, #3
 8000828:	d00a      	beq.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 800082a:	b968      	cbnz	r0, 8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800082e:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	f005 fa64 	bl	8005cfc <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000834:	1e43      	subs	r3, r0, #1
 8000836:	4258      	negs	r0, r3
 8000838:	4158      	adcs	r0, r3
 800083a:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083c:	2140      	movs	r1, #64	; 0x40
 800083e:	e7f6      	b.n	800082e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4803      	ldr	r0, [pc, #12]	; (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000846:	e7f3      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000848:	2000      	movs	r0, #0
 800084a:	e7f3      	b.n	8000834 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 800084c:	40020000 	.word	0x40020000
 8000850:	40021800 	.word	0x40021800

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	; (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000164 	.word	0x20000164

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000882:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	2000a80b 	.word	0x2000a80b

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b4:	6840      	ldr	r0, [r0, #4]
 80008b6:	6803      	ldr	r3, [r0, #0]
 80008b8:	699b      	ldr	r3, [r3, #24]
 80008ba:	4718      	bx	r3

080008bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008be:	4770      	bx	lr

080008c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80008c0:	4b01      	ldr	r3, [pc, #4]	; (80008c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	20000174 	.word	0x20000174

080008cc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008cc:	4770      	bx	lr
	...

080008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4604      	mov	r4, r0
    mcuInstr.init();
 80008d4:	4d09      	ldr	r5, [pc, #36]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008d6:	f7ff ffbd 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 fd76 	bl	80013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008e0:	2300      	movs	r3, #0
 80008e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008e6:	4628      	mov	r0, r5
 80008e8:	f7ff fe94 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008ec:	2301      	movs	r3, #1
 80008ee:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008f2:	4b03      	ldr	r3, [pc, #12]	; (8000900 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008f4:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008f6:	6163      	str	r3, [r4, #20]
}
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	bf00      	nop
 80008fc:	20000180 	.word	0x20000180
 8000900:	2000017c 	.word	0x2000017c

08000904 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000904:	6803      	ldr	r3, [r0, #0]
{
 8000906:	4604      	mov	r4, r0
 8000908:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800090a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090e:	4798      	blx	r3
    enableInterrupts();
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	4620      	mov	r0, r4
 8000914:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000916:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000918:	f000 fa2e 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4620      	mov	r0, r4
 8000920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000922:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000924:	2100      	movs	r1, #0
 8000926:	4806      	ldr	r0, [pc, #24]	; (8000940 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	2329      	movs	r3, #41	; 0x29
 800092c:	2215      	movs	r2, #21
 800092e:	f004 ffd4 	bl	80058da <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000932:	f000 fa21 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	4620      	mov	r0, r4
 800093a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800093c:	4798      	blx	r3
    for (;;)
 800093e:	e7f8      	b.n	8000932 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000940:	20001638 	.word	0x20001638

08000944 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000944:	b510      	push	{r4, lr}
 8000946:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000948:	f00a fcc6 	bl	800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800094c:	6823      	ldr	r3, [r4, #0]
 800094e:	4620      	mov	r0, r4
 8000950:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000958:	4718      	bx	r3

0800095a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800095a:	f000 bd36 	b.w	80013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800095e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800095e:	f000 bd4c 	b.w	80013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000962 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000962:	f000 bd4c 	b.w	80013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000966 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000966:	f000 bd1f 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800096a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800096a:	f000 bd25 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800096e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800096e:	f000 bd49 	b.w	8001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000974 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000976:	2200      	movs	r2, #0
 8000978:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800097a:	f009 be75 	b.w	800a668 <_ZN8touchgfx3HAL10beginFrameEv>
 800097e:	bf00      	nop
 8000980:	20000014 	.word	0x20000014

08000984 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000984:	b510      	push	{r4, lr}
 8000986:	4604      	mov	r4, r0
    HAL::endFrame();
 8000988:	f009 fe7a 	bl	800a680 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800098c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000990:	b113      	cbz	r3, 8000998 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000992:	4b02      	ldr	r3, [pc, #8]	; (800099c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
    }
}
 8000998:	bd10      	pop	{r4, pc}
 800099a:	bf00      	nop
 800099c:	20000014 	.word	0x20000014

080009a0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009a0:	f009 be26 	b.w	800a5f0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009a4 <_ZN11TouchGFXHALD0Ev>:
 80009a4:	b510      	push	{r4, lr}
 80009a6:	217c      	movs	r1, #124	; 0x7c
 80009a8:	4604      	mov	r4, r0
 80009aa:	f01c f959 	bl	801cc60 <_ZdlPvj>
 80009ae:	4620      	mov	r0, r4
 80009b0:	bd10      	pop	{r4, pc}

080009b2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009b2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009b6:	b11b      	cbz	r3, 80009c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009b8:	6840      	ldr	r0, [r0, #4]
 80009ba:	6803      	ldr	r3, [r0, #0]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4718      	bx	r3
    }
 80009c0:	4618      	mov	r0, r3
 80009c2:	4770      	bx	lr

080009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009ca:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009d4:	d009      	beq.n	80009ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009d6:	b93a      	cbnz	r2, 80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009d8:	4a0a      	ldr	r2, [pc, #40]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009da:	490b      	ldr	r1, [pc, #44]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009e6:	701a      	strb	r2, [r3, #0]
    }
 80009e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	d0fc      	beq.n	80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ee:	4a05      	ldr	r2, [pc, #20]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f0:	4905      	ldr	r1, [pc, #20]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009fa:	2200      	movs	r2, #0
 80009fc:	e7f3      	b.n	80009e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009fe:	bf00      	nop
 8000a00:	2000a804 	.word	0x2000a804
 8000a04:	2000a800 	.word	0x2000a800
 8000a08:	2000a802 	.word	0x2000a802

08000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a0c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	428b      	cmp	r3, r1
 8000a14:	d803      	bhi.n	8000a1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a16:	4b08      	ldr	r3, [pc, #32]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	4293      	cmp	r3, r2
 8000a1c:	d905      	bls.n	8000a2a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a22:	4808      	ldr	r0, [pc, #32]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a24:	219e      	movs	r1, #158	; 0x9e
 8000a26:	f01c f949 	bl	801ccbc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a2a:	4b07      	ldr	r3, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a2c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a30:	801a      	strh	r2, [r3, #0]
    }
 8000a32:	bd08      	pop	{r3, pc}
 8000a34:	2000a800 	.word	0x2000a800
 8000a38:	2000a802 	.word	0x2000a802
 8000a3c:	0801df58 	.word	0x0801df58
 8000a40:	0801dfbb 	.word	0x0801dfbb
 8000a44:	0801dffe 	.word	0x0801dffe
 8000a48:	2000a806 	.word	0x2000a806
 8000a4c:	2000a808 	.word	0x2000a808

08000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460d      	mov	r5, r1
 8000a54:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000a56:	4b0b      	ldr	r3, [pc, #44]	; (8000a84 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a58:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a5a:	b935      	cbnz	r5, 8000a6a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000a5c:	4b0a      	ldr	r3, [pc, #40]	; (8000a88 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a5e:	4a0b      	ldr	r2, [pc, #44]	; (8000a8c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a60:	480b      	ldr	r0, [pc, #44]	; (8000a90 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a62:	f240 21bb 	movw	r1, #699	; 0x2bb
 8000a66:	f01c f929 	bl	801ccbc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a6a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a6e:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000a70:	3a00      	subs	r2, #0
 8000a72:	bf18      	it	ne
 8000a74:	2201      	movne	r2, #1
 8000a76:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a78:	6803      	ldr	r3, [r0, #0]
}
 8000a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a82:	4718      	bx	r3
 8000a84:	20000174 	.word	0x20000174
 8000a88:	0801e043 	.word	0x0801e043
 8000a8c:	0801e07b 	.word	0x0801e07b
 8000a90:	0801dffe 	.word	0x0801dffe
 8000a94:	2000a80a 	.word	0x2000a80a

08000a98 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a98:	2801      	cmp	r0, #1
    {
 8000a9a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a9c:	d80a      	bhi.n	8000ab4 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a9e:	784b      	ldrb	r3, [r1, #1]
 8000aa0:	9300      	str	r3, [sp, #0]
 8000aa2:	780b      	ldrb	r3, [r1, #0]
 8000aa4:	4808      	ldr	r0, [pc, #32]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000aa6:	2215      	movs	r2, #21
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	f004 ff16 	bl	80058da <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000aae:	b003      	add	sp, #12
 8000ab0:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000ab4:	9101      	str	r1, [sp, #4]
 8000ab6:	5c0b      	ldrb	r3, [r1, r0]
 8000ab8:	9300      	str	r3, [sp, #0]
 8000aba:	2239      	movs	r2, #57	; 0x39
 8000abc:	4603      	mov	r3, r0
 8000abe:	2100      	movs	r1, #0
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000ac2:	f004 ff1b 	bl	80058fc <HAL_DSI_LongWrite>
    }
 8000ac6:	e7f2      	b.n	8000aae <DSI_IO_WriteCmd+0x16>
 8000ac8:	20001638 	.word	0x20001638

08000acc <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ad0:	4c0b      	ldr	r4, [pc, #44]	; (8000b00 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000ad2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000ad6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ada:	9201      	str	r2, [sp, #4]
 8000adc:	2244      	movs	r2, #68	; 0x44
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	2100      	movs	r1, #0
 8000ae2:	2239      	movs	r2, #57	; 0x39
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f004 ff09 	bl	80058fc <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aea:	2100      	movs	r1, #0
 8000aec:	9100      	str	r1, [sp, #0]
 8000aee:	2335      	movs	r3, #53	; 0x35
 8000af0:	462a      	mov	r2, r5
 8000af2:	4620      	mov	r0, r4
 8000af4:	f004 fef1 	bl	80058da <HAL_DSI_ShortWrite>
    }
 8000af8:	b003      	add	sp, #12
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	2000018c 	.word	0x2000018c
 8000b00:	20001638 	.word	0x20001638

08000b04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000b04:	b507      	push	{r0, r1, r2, lr}
 8000b06:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000b08:	f7ff ffe0 	bl	8000acc <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b0c:	9801      	ldr	r0, [sp, #4]
}
 8000b0e:	b003      	add	sp, #12
 8000b10:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b14:	f000 bc58 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000b18 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000b18:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	; (8000b38 <LCD_SetUpdateRegion+0x20>)
 8000b1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000b20:	232a      	movs	r3, #42	; 0x2a
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	9300      	str	r3, [sp, #0]
 8000b26:	2239      	movs	r2, #57	; 0x39
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <LCD_SetUpdateRegion+0x24>)
 8000b2e:	f004 fee5 	bl	80058fc <HAL_DSI_LongWrite>
    }
 8000b32:	b003      	add	sp, #12
 8000b34:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b38:	20000004 	.word	0x20000004
 8000b3c:	20001638 	.word	0x20001638

08000b40 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b40:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b42:	4d15      	ldr	r5, [pc, #84]	; (8000b98 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b44:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b46:	2000      	movs	r0, #0
 8000b48:	f7ff fe0a 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b4c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b4e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b52:	3301      	adds	r3, #1
 8000b54:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b58:	f000 f902 	bl	8000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b5e:	6828      	ldr	r0, [r5, #0]
 8000b60:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b62:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b64:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b68:	b123      	cbz	r3, 8000b74 <HAL_DSI_TearingEffectCallback+0x34>
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ba0 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b6c:	782b      	ldrb	r3, [r5, #0]
 8000b6e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b72:	b123      	cbz	r3, 8000b7e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff be17 	b.w	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b7e:	f00a fbab 	bl	800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b82:	4b08      	ldr	r3, [pc, #32]	; (8000ba4 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b84:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b86:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b88:	f7ff ffc6 	bl	8000b18 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f004 fe94 	bl	80058ba <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b92:	2301      	movs	r3, #1
 8000b94:	702b      	strb	r3, [r5, #0]
    }
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2000a80c 	.word	0x2000a80c
 8000b9c:	20000014 	.word	0x20000014
 8000ba0:	2000018e 	.word	0x2000018e
 8000ba4:	20000178 	.word	0x20000178

08000ba8 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000ba8:	4b33      	ldr	r3, [pc, #204]	; (8000c78 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	3201      	adds	r2, #1
    {
 8000bae:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000bb0:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bb2:	4b32      	ldr	r3, [pc, #200]	; (8000c7c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb4:	4c32      	ldr	r4, [pc, #200]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bb6:	6819      	ldr	r1, [r3, #0]
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000bba:	2a03      	cmp	r2, #3
    {
 8000bbc:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000bbe:	dc2e      	bgt.n	8000c1e <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000bc4:	f020 0008 	bic.w	r0, r0, #8
 8000bc8:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000bd0:	fb00 1102 	mla	r1, r0, r2, r1
 8000bd4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000bd8:	bf0c      	ite	eq
 8000bda:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000bdc:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bde:	3302      	adds	r3, #2
 8000be0:	4928      	ldr	r1, [pc, #160]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	041b      	lsls	r3, r3, #16
 8000be4:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000be8:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bea:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000bec:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bee:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bf2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bf6:	4b25      	ldr	r3, [pc, #148]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bf8:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bfc:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000bfe:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c00:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000c02:	f7ff ff89 	bl	8000b18 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000c06:	4a1e      	ldr	r2, [pc, #120]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000c08:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000c0c:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000c10:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000c1a:	f004 be4e 	b.w	80058ba <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000c1e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000c22:	f022 0208 	bic.w	r2, r2, #8
 8000c26:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000c2c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c30:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000c32:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000c36:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c38:	4a16      	ldr	r2, [pc, #88]	; (8000c94 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c3a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c3e:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c40:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c44:	2201      	movs	r2, #1
 8000c46:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f7ff ff65 	bl	8000b18 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c4e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fda6 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c66:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000c68:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c6a:	b120      	cbz	r0, 8000c76 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000c6c:	6803      	ldr	r3, [r0, #0]
    }
 8000c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c72:	6a1b      	ldr	r3, [r3, #32]
 8000c74:	4718      	bx	r3
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	20000178 	.word	0x20000178
 8000c7c:	20000174 	.word	0x20000174
 8000c80:	40016c00 	.word	0x40016c00
 8000c84:	40016800 	.word	0x40016800
 8000c88:	00ca01e3 	.word	0x00ca01e3
 8000c8c:	06800193 	.word	0x06800193
 8000c90:	00ca01e2 	.word	0x00ca01e2
 8000c94:	00ca0003 	.word	0x00ca0003
 8000c98:	2000018e 	.word	0x2000018e
 8000c9c:	2000a80c 	.word	0x2000a80c

08000ca0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000ca0:	b508      	push	{r3, lr}
        return instance;
 8000ca2:	4b04      	ldr	r3, [pc, #16]	; (8000cb4 <IdleTaskHook+0x14>)
 8000ca4:	4601      	mov	r1, r0
 8000ca6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000ca8:	b101      	cbz	r1, 8000cac <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000caa:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000cac:	f00a fb2e 	bl	800b30c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000cb0:	2001      	movs	r0, #1
 8000cb2:	bd08      	pop	{r3, pc}
 8000cb4:	2000a80c 	.word	0x2000a80c

08000cb8 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000cc4:	601a      	str	r2, [r3, #0]
 8000cc6:	4b05      	ldr	r3, [pc, #20]	; (8000cdc <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000cc8:	6003      	str	r3, [r0, #0]
        init();
 8000cca:	f7ff bcd9 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000cce:	bf00      	nop
 8000cd0:	20000180 	.word	0x20000180
 8000cd4:	2000017c 	.word	0x2000017c
 8000cd8:	0801de7c 	.word	0x0801de7c
 8000cdc:	0801dea4 	.word	0x0801dea4

08000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce0:	2101      	movs	r1, #1
{
 8000ce2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	4608      	mov	r0, r1
 8000ce8:	f007 f88f 	bl	8007e0a <osSemaphoreNew>
 8000cec:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cf0:	b928      	cbnz	r0, 8000cfe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cf4:	4a0a      	ldr	r2, [pc, #40]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cf6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cf8:	480a      	ldr	r0, [pc, #40]	; (8000d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cfa:	f01b ffdf 	bl	801ccbc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cfe:	2200      	movs	r2, #0
 8000d00:	2104      	movs	r1, #4
 8000d02:	2001      	movs	r0, #1
 8000d04:	f007 f91e 	bl	8007f44 <osMessageQueueNew>
 8000d08:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000d0a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000d0c:	b918      	cbnz	r0, 8000d16 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000d0e:	4b07      	ldr	r3, [pc, #28]	; (8000d2c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000d10:	4a03      	ldr	r2, [pc, #12]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000d12:	212c      	movs	r1, #44	; 0x2c
 8000d14:	e7f0      	b.n	8000cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000d16:	bd08      	pop	{r3, pc}
 8000d18:	20000194 	.word	0x20000194
 8000d1c:	0801e1a4 	.word	0x0801e1a4
 8000d20:	0801e1ed 	.word	0x0801e1ed
 8000d24:	0801e21c 	.word	0x0801e21c
 8000d28:	20000190 	.word	0x20000190
 8000d2c:	0801e264 	.word	0x0801e264

08000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000d30:	4b02      	ldr	r3, [pc, #8]	; (8000d3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000d32:	f04f 31ff 	mov.w	r1, #4294967295
 8000d36:	6818      	ldr	r0, [r3, #0]
 8000d38:	f007 b8b1 	b.w	8007e9e <osSemaphoreAcquire>
 8000d3c:	20000194 	.word	0x20000194

08000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d42:	6818      	ldr	r0, [r3, #0]
 8000d44:	f007 b8d6 	b.w	8007ef4 <osSemaphoreRelease>
 8000d48:	20000194 	.word	0x20000194

08000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	6818      	ldr	r0, [r3, #0]
 8000d52:	f007 b8a4 	b.w	8007e9e <osSemaphoreAcquire>
 8000d56:	bf00      	nop
 8000d58:	20000194 	.word	0x20000194

08000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d5c:	f7ff bff0 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d60:	4803      	ldr	r0, [pc, #12]	; (8000d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d62:	4904      	ldr	r1, [pc, #16]	; (8000d74 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d64:	6800      	ldr	r0, [r0, #0]
 8000d66:	2300      	movs	r3, #0
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f007 b926 	b.w	8007fba <osMessageQueuePut>
 8000d6e:	bf00      	nop
 8000d70:	20000190 	.word	0x20000190
 8000d74:	20000018 	.word	0x20000018

08000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d78:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d7a:	4c08      	ldr	r4, [pc, #32]	; (8000d9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	461a      	mov	r2, r3
 8000d80:	a901      	add	r1, sp, #4
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	f007 f949 	bl	800801a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d88:	6820      	ldr	r0, [r4, #0]
 8000d8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000d8e:	2200      	movs	r2, #0
 8000d90:	a901      	add	r1, sp, #4
 8000d92:	f007 f942 	bl	800801a <osMessageQueueGet>
}
 8000d96:	b002      	add	sp, #8
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	20000190 	.word	0x20000190

08000da0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000da4:	4718      	bx	r3

08000da6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000da6:	2001      	movs	r0, #1
 8000da8:	4770      	bx	lr

08000daa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000daa:	6803      	ldr	r3, [r0, #0]
 8000dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000dae:	4718      	bx	r3

08000db0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000db0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	9301      	str	r3, [sp, #4]
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <_ZN8STM32DMA10initializeEv+0x3c>)
 8000db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dba:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000dc6:	9201      	str	r2, [sp, #4]
 8000dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000dca:	691a      	ldr	r2, [r3, #16]
 8000dcc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000dd2:	691a      	ldr	r2, [r3, #16]
 8000dd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000dd8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <_ZN8STM32DMA10initializeEv+0x40>)
 8000ddc:	4a05      	ldr	r2, [pc, #20]	; (8000df4 <_ZN8STM32DMA10initializeEv+0x44>)
 8000dde:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <_ZN8STM32DMA10initializeEv+0x48>)
 8000de2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000de6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000de8:	b002      	add	sp, #8
 8000dea:	4770      	bx	lr
 8000dec:	40023800 	.word	0x40023800
 8000df0:	200015f8 	.word	0x200015f8
 8000df4:	08000e3d 	.word	0x08000e3d
 8000df8:	e000e100 	.word	0xe000e100

08000dfc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dfc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000e00:	4770      	bx	lr
	...

08000e04 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000e04:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8STM32DMAD1Ev+0x18>)
 8000e06:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_ZN8STM32DMAD1Ev+0x1c>)
 8000e0a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000e16:	f3bf 8f6f 	isb	sy
}
 8000e1a:	4770      	bx	lr
 8000e1c:	0801e3fc 	.word	0x0801e3fc
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000e24:	b510      	push	{r4, lr}
 8000e26:	4604      	mov	r4, r0
}
 8000e28:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000e2c:	f7ff ffea 	bl	8000e04 <_ZN8STM32DMAD1Ev>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f01b ff15 	bl	801cc60 <_ZdlPvj>
 8000e36:	4620      	mov	r0, r4
 8000e38:	bd10      	pop	{r4, pc}
	...

08000e3c <DMA2D_XferCpltCallback>:
 8000e3c:	4b02      	ldr	r3, [pc, #8]	; (8000e48 <DMA2D_XferCpltCallback+0xc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e42:	6803      	ldr	r3, [r0, #0]
 8000e44:	695b      	ldr	r3, [r3, #20]
 8000e46:	4718      	bx	r3
 8000e48:	2000a80c 	.word	0x2000a80c

08000e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e4c:	b570      	push	{r4, r5, r6, lr}
 8000e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e50:	4625      	mov	r5, r4
 8000e52:	4b0a      	ldr	r3, [pc, #40]	; (8000e7c <_ZN8STM32DMAC1Ev+0x30>)
 8000e54:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e56:	2600      	movs	r6, #0
 8000e58:	6060      	str	r0, [r4, #4]
 8000e5a:	7226      	strb	r6, [r4, #8]
 8000e5c:	7266      	strb	r6, [r4, #9]
 8000e5e:	f845 3b20 	str.w	r3, [r5], #32
 8000e62:	2260      	movs	r2, #96	; 0x60
 8000e64:	4629      	mov	r1, r5
 8000e66:	f00a fbb7 	bl	800b5d8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000e6e:	60ee      	str	r6, [r5, #12]
 8000e70:	3524      	adds	r5, #36	; 0x24
 8000e72:	42ab      	cmp	r3, r5
 8000e74:	d1fb      	bne.n	8000e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e76:	4620      	mov	r0, r4
 8000e78:	bd70      	pop	{r4, r5, r6, pc}
 8000e7a:	bf00      	nop
 8000e7c:	0801e3fc 	.word	0x0801e3fc

08000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000e80:	b508      	push	{r3, lr}
    switch (format)
 8000e82:	290b      	cmp	r1, #11
 8000e84:	d80b      	bhi.n	8000e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000e86:	e8df f001 	tbb	[pc, r1]
 8000e8a:	0612      	.short	0x0612
 8000e8c:	0a0a0a10 	.word	0x0a0a0a10
 8000e90:	0808080a 	.word	0x0808080a
 8000e94:	0808      	.short	0x0808
 8000e96:	2001      	movs	r0, #1
}
 8000e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000e9a:	2005      	movs	r0, #5
        break;
 8000e9c:	e7fc      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000e9e:	4b05      	ldr	r3, [pc, #20]	; (8000eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ea2:	4806      	ldr	r0, [pc, #24]	; (8000ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000ea4:	2166      	movs	r1, #102	; 0x66
 8000ea6:	f01b ff09 	bl	801ccbc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e7f4      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eb0:	e7f2      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eb2:	bf00      	nop
 8000eb4:	0801e2a6 	.word	0x0801e2a6
 8000eb8:	0801e2c1 	.word	0x0801e2c1
 8000ebc:	0801e30b 	.word	0x0801e30b

08000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ec0:	b508      	push	{r3, lr}
    switch (format)
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d809      	bhi.n	8000eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ec6:	e8df f001 	tbb	[pc, r1]
 8000eca:	0610      	.short	0x0610
 8000ecc:	0808080e 	.word	0x0808080e
 8000ed0:	06060608 	.word	0x06060608
 8000ed4:	06          	.byte	0x06
 8000ed5:	00          	.byte	0x00
 8000ed6:	2001      	movs	r0, #1
}
 8000ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000edc:	4a05      	ldr	r2, [pc, #20]	; (8000ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ede:	4806      	ldr	r0, [pc, #24]	; (8000ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ee0:	2187      	movs	r1, #135	; 0x87
 8000ee2:	f01b feeb 	bl	801ccbc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f6      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eec:	e7f4      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eee:	bf00      	nop
 8000ef0:	0801e2a6 	.word	0x0801e2a6
 8000ef4:	0801e351 	.word	0x0801e351
 8000ef8:	0801e30b 	.word	0x0801e30b

08000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8000f02:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f04:	4639      	mov	r1, r7
{
 8000f06:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f08:	f7ff ffba 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f12:	4641      	mov	r1, r8
 8000f14:	4648      	mov	r0, r9
 8000f16:	f7ff ffb3 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1e:	4648      	mov	r0, r9
 8000f20:	f7ff ffce 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f24:	8aa1      	ldrh	r1, [r4, #20]
 8000f26:	8b62      	ldrh	r2, [r4, #26]
 8000f28:	4b42      	ldr	r3, [pc, #264]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f2a:	1a52      	subs	r2, r2, r1
 8000f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000f30:	8b22      	ldrh	r2, [r4, #24]
 8000f32:	1a52      	subs	r2, r2, r1
 8000f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f3e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f40:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000f54:	d026      	beq.n	8000fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000f56:	d810      	bhi.n	8000f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000f58:	2920      	cmp	r1, #32
 8000f5a:	ea45 0402 	orr.w	r4, r5, r2
 8000f5e:	d061      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f60:	2940      	cmp	r1, #64	; 0x40
 8000f62:	d05f      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f64:	2904      	cmp	r1, #4
 8000f66:	d05d      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	4b32      	ldr	r3, [pc, #200]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f6a:	432a      	orrs	r2, r5
 8000f6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f70:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f74:	d05a      	beq.n	800102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a30      	ldr	r2, [pc, #192]	; (8001038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000f78:	e040      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000f7e:	d007      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000f84:	d1f0      	bne.n	8000f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f8a:	f042 0209 	orr.w	r2, r2, #9
 8000f8e:	e003      	b.n	8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f98:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa0:	6158      	str	r0, [r3, #20]
 8000fa2:	e02a      	b.n	8000ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000fa4:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fa6:	432a      	orrs	r2, r5
 8000fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000fac:	1d21      	adds	r1, r4, #4
 8000fae:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fb0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb2:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb4:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb8:	b142      	cbz	r2, 8000fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000fba:	2a01      	cmp	r2, #1
 8000fbc:	d021      	beq.n	8001002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000fbe:	4b1f      	ldr	r3, [pc, #124]	; (800103c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000fc0:	4a1f      	ldr	r2, [pc, #124]	; (8001040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000fc2:	4820      	ldr	r0, [pc, #128]	; (8001044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000fc4:	f240 1111 	movw	r1, #273	; 0x111
 8000fc8:	f01b fe78 	bl	801ccbc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000fcc:	69da      	ldr	r2, [r3, #28]
 8000fce:	8861      	ldrh	r1, [r4, #2]
 8000fd0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000fd4:	3901      	subs	r1, #1
 8000fd6:	f022 0210 	bic.w	r2, r2, #16
 8000fda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000fde:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000fe0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000fe2:	4b14      	ldr	r3, [pc, #80]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000fe4:	69da      	ldr	r2, [r3, #28]
 8000fe6:	f042 0220 	orr.w	r2, r2, #32
 8000fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000fec:	69da      	ldr	r2, [r3, #28]
 8000fee:	0692      	lsls	r2, r2, #26
 8000ff0:	d4fc      	bmi.n	8000fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ff2:	2210      	movs	r2, #16
 8000ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d0bd      	beq.n	8000f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffa:	4a13      	ldr	r2, [pc, #76]	; (8001048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001002:	8862      	ldrh	r2, [r4, #2]
 8001004:	69d9      	ldr	r1, [r3, #28]
 8001006:	1e54      	subs	r4, r2, #1
 8001008:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800100c:	f022 0210 	bic.w	r2, r2, #16
 8001010:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001014:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001018:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 800101c:	bf18      	it	ne
 800101e:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001020:	61da      	str	r2, [r3, #28]
                break;
 8001022:	e7de      	b.n	8000fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001024:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001028:	61dc      	str	r4, [r3, #28]
 800102a:	e7b8      	b.n	8000f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800102c:	f240 2201 	movw	r2, #513	; 0x201
 8001030:	e7e4      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001032:	bf00      	nop
 8001034:	4002b000 	.word	0x4002b000
 8001038:	00010201 	.word	0x00010201
 800103c:	0801e39c 	.word	0x0801e39c
 8001040:	0801e3b6 	.word	0x0801e3b6
 8001044:	0801e30b 	.word	0x0801e30b
 8001048:	00020201 	.word	0x00020201

0800104c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001050:	7f89      	ldrb	r1, [r1, #30]
 8001052:	f7ff ff35 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001056:	8aa6      	ldrh	r6, [r4, #20]
 8001058:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800105a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800105e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001060:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001062:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001066:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001068:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800106a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800106c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800106e:	6826      	ldr	r6, [r4, #0]
 8001070:	68e1      	ldr	r1, [r4, #12]
 8001072:	2e08      	cmp	r6, #8
 8001074:	d10d      	bne.n	8001092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800107a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800107c:	7f20      	ldrb	r0, [r4, #28]
 800107e:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001086:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001088:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800108e:	601a      	str	r2, [r3, #0]
    }
}
 8001090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001098:	0948      	lsrs	r0, r1, #5
 800109a:	0a0a      	lsrs	r2, r1, #8
 800109c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80010a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80010a4:	4302      	orrs	r2, r0
 80010a6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80010aa:	430a      	orrs	r2, r1
 80010ac:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80010ae:	4a04      	ldr	r2, [pc, #16]	; (80010c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80010b0:	e7ed      	b.n	800108e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80010b2:	bf00      	nop
 80010b4:	4002b000 	.word	0x4002b000
 80010b8:	00010009 	.word	0x00010009
 80010bc:	00020201 	.word	0x00020201
 80010c0:	00030201 	.word	0x00030201

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010c8:	2054      	movs	r0, #84	; 0x54
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010cc:	2354      	movs	r3, #84	; 0x54
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010d6:	2354      	movs	r3, #84	; 0x54
 80010d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e4:	f44f 7071 	mov.w	r0, #964	; 0x3c4
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f44f 7371 	mov.w	r3, #964	; 0x3c4
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f6:	f44f 7371 	mov.w	r3, #964	; 0x3c4
 80010fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010fe:	3008      	adds	r0, #8
 8001100:	4770      	bx	lr

08001102 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001102:	2001      	movs	r0, #1
 8001104:	4770      	bx	lr

08001106 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001106:	2010      	movs	r0, #16
 8001108:	4770      	bx	lr

0800110a <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800110a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110e:	3008      	adds	r0, #8
 8001110:	4770      	bx	lr

08001112 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001112:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001116:	3008      	adds	r0, #8
 8001118:	4770      	bx	lr

0800111a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 800111a:	4608      	mov	r0, r1
 800111c:	f001 bafc 	b.w	8002718 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001120:	b510      	push	{r4, lr}
 8001122:	4b03      	ldr	r3, [pc, #12]	; (8001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001124:	6003      	str	r3, [r0, #0]
 8001126:	4604      	mov	r4, r0
 8001128:	f008 ff88 	bl	800a03c <_ZN8touchgfx17AbstractPartitionD1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	bd10      	pop	{r4, pc}
 8001130:	0801e4b4 	.word	0x0801e4b4

08001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff fff2 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	215c      	movs	r1, #92	; 0x5c
 8001140:	f01b fd8e 	bl	801cc60 <_ZdlPvj>
 8001144:	4620      	mov	r0, r4
 8001146:	bd10      	pop	{r4, pc}

08001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001148:	b510      	push	{r4, lr}
 800114a:	4b03      	ldr	r3, [pc, #12]	; (8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800114c:	6003      	str	r3, [r0, #0]
 800114e:	4604      	mov	r4, r0
 8001150:	f008 ff74 	bl	800a03c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001154:	4620      	mov	r0, r4
 8001156:	bd10      	pop	{r4, pc}
 8001158:	0801e480 	.word	0x0801e480

0800115c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800115c:	b510      	push	{r4, lr}
 800115e:	4604      	mov	r4, r0
 8001160:	f7ff fff2 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	f44f 7173 	mov.w	r1, #972	; 0x3cc
 800116a:	f01b fd79 	bl	801cc60 <_ZdlPvj>
 800116e:	4620      	mov	r0, r4
 8001170:	bd10      	pop	{r4, pc}
	...

08001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001174:	b510      	push	{r4, lr}
 8001176:	4b03      	ldr	r3, [pc, #12]	; (8001184 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001178:	6003      	str	r3, [r0, #0]
 800117a:	4604      	mov	r4, r0
 800117c:	f008 ff5e 	bl	800a03c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001180:	4620      	mov	r0, r4
 8001182:	bd10      	pop	{r4, pc}
 8001184:	0801e44c 	.word	0x0801e44c

08001188 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001188:	b510      	push	{r4, lr}
 800118a:	4604      	mov	r4, r0
 800118c:	f7ff fff2 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001190:	4620      	mov	r0, r4
 8001192:	2118      	movs	r1, #24
 8001194:	f01b fd64 	bl	801cc60 <_ZdlPvj>
 8001198:	4620      	mov	r0, r4
 800119a:	bd10      	pop	{r4, pc}

0800119c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800119c:	b510      	push	{r4, lr}
 800119e:	4b08      	ldr	r3, [pc, #32]	; (80011c0 <_ZN12FrontendHeapD1Ev+0x24>)
 80011a0:	6003      	str	r3, [r0, #0]
 80011a2:	4604      	mov	r4, r0
 80011a4:	f500 707e 	add.w	r0, r0, #1016	; 0x3f8
 80011a8:	f7ff ffba 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80011ac:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011b0:	f7ff ffca 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10ManualViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b4:	f104 0014 	add.w	r0, r4, #20
 80011b8:	f7ff ffdc 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18AutomaticPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011bc:	4620      	mov	r0, r4
 80011be:	bd10      	pop	{r4, pc}
 80011c0:	0801e4e8 	.word	0x0801e4e8

080011c4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011c4:	b508      	push	{r3, lr}
 80011c6:	4802      	ldr	r0, [pc, #8]	; (80011d0 <__tcf_0+0xc>)
 80011c8:	f7ff ffe8 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011cc:	bd08      	pop	{r3, pc}
 80011ce:	bf00      	nop
 80011d0:	2000019c 	.word	0x2000019c

080011d4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011d4:	b510      	push	{r4, lr}
 80011d6:	4604      	mov	r4, r0
 80011d8:	f7ff ffe0 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011dc:	4620      	mov	r0, r4
 80011de:	f44f 61b6 	mov.w	r1, #1456	; 0x5b0
 80011e2:	f01b fd3d 	bl	801cc60 <_ZdlPvj>
 80011e6:	4620      	mov	r0, r4
 80011e8:	bd10      	pop	{r4, pc}
	...

080011ec <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011f0:	f001 f856 	bl	80022a0 <_ZN14BitmapDatabase11getInstanceEv>
 80011f4:	4605      	mov	r5, r0
 80011f6:	f001 f857 	bl	80022a8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011fa:	2400      	movs	r4, #0
 80011fc:	4601      	mov	r1, r0
 80011fe:	4623      	mov	r3, r4
 8001200:	4628      	mov	r0, r5
 8001202:	4622      	mov	r2, r4
 8001204:	9400      	str	r4, [sp, #0]
 8001206:	f00f fbe3 	bl	80109d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800120a:	4b25      	ldr	r3, [pc, #148]	; (80012a0 <touchgfx_init+0xb4>)
 800120c:	4a25      	ldr	r2, [pc, #148]	; (80012a4 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800120e:	4d26      	ldr	r5, [pc, #152]	; (80012a8 <touchgfx_init+0xbc>)
 8001210:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001212:	4620      	mov	r0, r4
 8001214:	f002 fc34 	bl	8003a80 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001218:	4824      	ldr	r0, [pc, #144]	; (80012ac <touchgfx_init+0xc0>)
 800121a:	f00f fb25 	bl	8010868 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800121e:	782b      	ldrb	r3, [r5, #0]
 8001220:	f3bf 8f5b 	dmb	ish
 8001224:	07db      	lsls	r3, r3, #31
 8001226:	d435      	bmi.n	8001294 <touchgfx_init+0xa8>
 8001228:	4628      	mov	r0, r5
 800122a:	f01b fd1b 	bl	801cc64 <__cxa_guard_acquire>
 800122e:	b388      	cbz	r0, 8001294 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001230:	4c1f      	ldr	r4, [pc, #124]	; (80012b0 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001232:	4b20      	ldr	r3, [pc, #128]	; (80012b4 <touchgfx_init+0xc8>)
 8001234:	6023      	str	r3, [r4, #0]
 8001236:	f504 668b 	add.w	r6, r4, #1112	; 0x458
 800123a:	f104 0014 	add.w	r0, r4, #20
 800123e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001242:	f504 777e 	add.w	r7, r4, #1016	; 0x3f8
 8001246:	6060      	str	r0, [r4, #4]
 8001248:	f8c4 8008 	str.w	r8, [r4, #8]
 800124c:	60e7      	str	r7, [r4, #12]
 800124e:	6126      	str	r6, [r4, #16]
 8001250:	f008 fef6 	bl	800a040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001254:	4b18      	ldr	r3, [pc, #96]	; (80012b8 <touchgfx_init+0xcc>)
 8001256:	6163      	str	r3, [r4, #20]
 8001258:	4640      	mov	r0, r8
 800125a:	f008 fef1 	bl	800a040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800125e:	4b17      	ldr	r3, [pc, #92]	; (80012bc <touchgfx_init+0xd0>)
 8001260:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001262:	4638      	mov	r0, r7
 8001264:	f008 feec 	bl	800a040 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001268:	4b15      	ldr	r3, [pc, #84]	; (80012c0 <touchgfx_init+0xd4>)
 800126a:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
 800126e:	f204 4054 	addw	r0, r4, #1108	; 0x454
 8001272:	f002 fd52 	bl	8003d1a <_ZN5ModelC1Ev>
 8001276:	4622      	mov	r2, r4
 8001278:	f204 4154 	addw	r1, r4, #1108	; 0x454
 800127c:	4630      	mov	r0, r6
 800127e:	f002 fca3 	bl	8003bc8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001282:	4630      	mov	r0, r6
 8001284:	f001 fa48 	bl	8002718 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001288:	480e      	ldr	r0, [pc, #56]	; (80012c4 <touchgfx_init+0xd8>)
 800128a:	f01b fd35 	bl	801ccf8 <atexit>
 800128e:	4628      	mov	r0, r5
 8001290:	f01b fcf4 	bl	801cc7c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001294:	480c      	ldr	r0, [pc, #48]	; (80012c8 <touchgfx_init+0xdc>)
}
 8001296:	b002      	add	sp, #8
 8001298:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800129c:	f7ff bb18 	b.w	80008d0 <_ZN11TouchGFXHAL10initializeEv>
 80012a0:	2000a868 	.word	0x2000a868
 80012a4:	2000156c 	.word	0x2000156c
 80012a8:	20000198 	.word	0x20000198
 80012ac:	2000001c 	.word	0x2000001c
 80012b0:	2000019c 	.word	0x2000019c
 80012b4:	0801e4e8 	.word	0x0801e4e8
 80012b8:	0801e44c 	.word	0x0801e44c
 80012bc:	0801e480 	.word	0x0801e480
 80012c0:	0801e4b4 	.word	0x0801e4b4
 80012c4:	080011c5 	.word	0x080011c5
 80012c8:	200014f0 	.word	0x200014f0

080012cc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012cc:	4801      	ldr	r0, [pc, #4]	; (80012d4 <touchgfx_taskEntry+0x8>)
 80012ce:	f7ff bb19 	b.w	8000904 <_ZN11TouchGFXHAL9taskEntryEv>
 80012d2:	bf00      	nop
 80012d4:	200014f0 	.word	0x200014f0

080012d8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012da:	4e23      	ldr	r6, [pc, #140]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80012dc:	4c23      	ldr	r4, [pc, #140]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80012de:	4d24      	ldr	r5, [pc, #144]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012e0:	4b24      	ldr	r3, [pc, #144]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012e2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012e4:	4630      	mov	r0, r6
 80012e6:	f7ff fdb1 	bl	8000e4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012ea:	4628      	mov	r0, r5
 80012ec:	f012 fd1c 	bl	8013d28 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012f0:	4b21      	ldr	r3, [pc, #132]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012f2:	4822      	ldr	r0, [pc, #136]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80012f4:	60dc      	str	r4, [r3, #12]
 80012f6:	2200      	movs	r2, #0
 80012f8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012fc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001300:	491f      	ldr	r1, [pc, #124]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001302:	861a      	strh	r2, [r3, #48]	; 0x30
 8001304:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001308:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800130c:	6759      	str	r1, [r3, #116]	; 0x74
 800130e:	2101      	movs	r1, #1
 8001310:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001314:	491b      	ldr	r1, [pc, #108]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001316:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001318:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800131a:	f44f 7150 	mov.w	r1, #832	; 0x340
 800131e:	8001      	strh	r1, [r0, #0]
 8001320:	4819      	ldr	r0, [pc, #100]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001322:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001326:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001328:	4818      	ldr	r0, [pc, #96]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 800132a:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800132c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001330:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001334:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001338:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800133c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001340:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001344:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001348:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800134c:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001350:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001354:	8001      	strh	r1, [r0, #0]
 8001356:	480e      	ldr	r0, [pc, #56]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001358:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800135c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800135e:	490d      	ldr	r1, [pc, #52]	; (8001394 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001360:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001362:	4a0d      	ldr	r2, [pc, #52]	; (8001398 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001364:	601a      	str	r2, [r3, #0]
}
 8001366:	bd70      	pop	{r4, r5, r6, pc}
 8001368:	20000750 	.word	0x20000750
 800136c:	2000074c 	.word	0x2000074c
 8001370:	20001570 	.word	0x20001570
 8001374:	0801df48 	.word	0x0801df48
 8001378:	200014f0 	.word	0x200014f0
 800137c:	2000a800 	.word	0x2000a800
 8001380:	01000001 	.word	0x01000001
 8001384:	2000a80c 	.word	0x2000a80c
 8001388:	2000a806 	.word	0x2000a806
 800138c:	2000a802 	.word	0x2000a802
 8001390:	2000a808 	.word	0x2000a808
 8001394:	2000a804 	.word	0x2000a804
 8001398:	0801e0d4 	.word	0x0801e0d4

0800139c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800139e:	f7ff bd31 	b.w	8000e04 <_ZN8STM32DMAD1Ev>
 80013a2:	bf00      	nop
 80013a4:	20000750 	.word	0x20000750

080013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013aa:	2290      	movs	r2, #144	; 0x90
 80013ac:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b8:	4b02      	ldr	r3, [pc, #8]	; (80013c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013be:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c8:	4770      	bx	lr

080013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013cc:	b570      	push	{r4, r5, r6, lr}
 80013ce:	4604      	mov	r4, r0
    HAL::initialize();
 80013d0:	f009 f963 	bl	800a69a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013d4:	6823      	ldr	r3, [r4, #0]
 80013d6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80013d8:	f00c fe4e 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 80013dc:	4601      	mov	r1, r0
 80013de:	4620      	mov	r0, r4
 80013e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013e2:	6823      	ldr	r3, [r4, #0]
 80013e4:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80013e8:	2300      	movs	r3, #0
 80013ea:	4620      	mov	r0, r4
 80013ec:	46ac      	mov	ip, r5
 80013ee:	461a      	mov	r2, r3
}
 80013f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013f4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013f8:	4760      	bx	ip

080013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013fa:	f009 b8ff 	b.w	800a5fc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013fe:	f009 ba58 	b.w	800a8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001404:	4b04      	ldr	r3, [pc, #16]	; (8001418 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001406:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800140a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800140e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001412:	f3bf 8f6f 	isb	sy
}
 8001416:	4770      	bx	lr
 8001418:	e000e100 	.word	0xe000e100

0800141c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 800141c:	4901      	ldr	r1, [pc, #4]	; (8001424 <vApplicationIdleHook+0x8>)
 800141e:	2000      	movs	r0, #0
 8001420:	f008 b930 	b.w	8009684 <vTaskSetApplicationTaskTag>
 8001424:	08000ca1 	.word	0x08000ca1

08001428 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001428:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800142a:	2064      	movs	r0, #100	; 0x64
 800142c:	f006 fce1 	bl	8007df2 <osDelay>
  for(;;)
 8001430:	e7fb      	b.n	800142a <StartDefaultTask+0x2>
	...

08001434 <SystemClock_Config>:
{
 8001434:	b530      	push	{r4, r5, lr}
 8001436:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001438:	2210      	movs	r2, #16
 800143a:	2100      	movs	r1, #0
 800143c:	a809      	add	r0, sp, #36	; 0x24
 800143e:	f01b fcc9 	bl	801cdd4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001442:	2214      	movs	r2, #20
 8001444:	2100      	movs	r1, #0
 8001446:	a802      	add	r0, sp, #8
 8001448:	f01b fcc4 	bl	801cdd4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800144c:	2400      	movs	r4, #0
 800144e:	4b1f      	ldr	r3, [pc, #124]	; (80014cc <SystemClock_Config+0x98>)
 8001450:	9400      	str	r4, [sp, #0]
 8001452:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001454:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001458:	641a      	str	r2, [r3, #64]	; 0x40
 800145a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001460:	9300      	str	r3, [sp, #0]
 8001462:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001464:	4b1a      	ldr	r3, [pc, #104]	; (80014d0 <SystemClock_Config+0x9c>)
 8001466:	9401      	str	r4, [sp, #4]
 8001468:	681a      	ldr	r2, [r3, #0]
 800146a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800146e:	601a      	str	r2, [r3, #0]
 8001470:	681b      	ldr	r3, [r3, #0]
 8001472:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001476:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001478:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800147a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800147c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001480:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001484:	2502      	movs	r5, #2
 8001486:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800148a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800148c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001490:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001494:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001498:	2004      	movs	r0, #4
 800149a:	2306      	movs	r3, #6
 800149c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a0:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014a2:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a4:	f005 ffde 	bl	8007464 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a8:	f005 fa32 	bl	8006910 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014ac:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014ae:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014b2:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b8:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	2105      	movs	r1, #5
 80014be:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014c0:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c4:	f005 fda2 	bl	800700c <HAL_RCC_ClockConfig>
}
 80014c8:	b015      	add	sp, #84	; 0x54
 80014ca:	bd30      	pop	{r4, r5, pc}
 80014cc:	40023800 	.word	0x40023800
 80014d0:	40007000 	.word	0x40007000

080014d4 <main>:
{
 80014d4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014d8:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 80014da:	f003 fbff 	bl	8004cdc <HAL_Init>
  SystemClock_Config();
 80014de:	f7ff ffa9 	bl	8001434 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e2:	2214      	movs	r2, #20
 80014e4:	2100      	movs	r1, #0
 80014e6:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ea:	f01b fc73 	bl	801cdd4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ee:	4bc5      	ldr	r3, [pc, #788]	; (8001804 <main+0x330>)
 80014f0:	9403      	str	r4, [sp, #12]
 80014f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOG, Pul_Pin|MCU_ACTIVE_Pin|LED_G_Pin, GPIO_PIN_RESET);
 80014f4:	48c4      	ldr	r0, [pc, #784]	; (8001808 <main+0x334>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f6:	f042 0210 	orr.w	r2, r2, #16
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0210 	and.w	r2, r2, #16
 8001502:	9203      	str	r2, [sp, #12]
 8001504:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001506:	9404      	str	r4, [sp, #16]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0202 	orr.w	r2, r2, #2
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0202 	and.w	r2, r2, #2
 8001516:	9204      	str	r2, [sp, #16]
 8001518:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800151a:	9405      	str	r4, [sp, #20]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800152a:	9205      	str	r2, [sp, #20]
 800152c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152e:	9406      	str	r4, [sp, #24]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f042 0208 	orr.w	r2, r2, #8
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f002 0208 	and.w	r2, r2, #8
 800153e:	9206      	str	r2, [sp, #24]
 8001540:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001542:	9407      	str	r4, [sp, #28]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001552:	9207      	str	r2, [sp, #28]
 8001554:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001556:	9408      	str	r4, [sp, #32]
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f042 0220 	orr.w	r2, r2, #32
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f002 0220 	and.w	r2, r2, #32
 8001566:	9208      	str	r2, [sp, #32]
 8001568:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800156a:	9409      	str	r4, [sp, #36]	; 0x24
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800157a:	9209      	str	r2, [sp, #36]	; 0x24
 800157c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800157e:	940a      	str	r4, [sp, #40]	; 0x28
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800158e:	920a      	str	r2, [sp, #40]	; 0x28
 8001590:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001592:	940b      	str	r4, [sp, #44]	; 0x2c
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f042 0204 	orr.w	r2, r2, #4
 800159a:	631a      	str	r2, [r3, #48]	; 0x30
 800159c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159e:	f002 0204 	and.w	r2, r2, #4
 80015a2:	920b      	str	r2, [sp, #44]	; 0x2c
 80015a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a6:	940c      	str	r4, [sp, #48]	; 0x30
 80015a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015aa:	f042 0201 	orr.w	r2, r2, #1
 80015ae:	631a      	str	r2, [r3, #48]	; 0x30
 80015b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b2:	f002 0201 	and.w	r2, r2, #1
 80015b6:	920c      	str	r2, [sp, #48]	; 0x30
 80015b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015ba:	940d      	str	r4, [sp, #52]	; 0x34
 80015bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015c2:	631a      	str	r2, [r3, #48]	; 0x30
 80015c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c6:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(GPIOG, Pul_Pin|MCU_ACTIVE_Pin|LED_G_Pin, GPIO_PIN_RESET);
 80015ca:	4622      	mov	r2, r4
 80015cc:	f44f 51c2 	mov.w	r1, #6208	; 0x1840
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015d0:	930d      	str	r3, [sp, #52]	; 0x34
 80015d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOG, Pul_Pin|MCU_ACTIVE_Pin|LED_G_Pin, GPIO_PIN_RESET);
 80015d4:	f004 fb98 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(Dir_GPIO_Port, Dir_Pin, GPIO_PIN_RESET);
 80015d8:	488c      	ldr	r0, [pc, #560]	; (800180c <main+0x338>)
 80015da:	4622      	mov	r2, r4
 80015dc:	2108      	movs	r1, #8
 80015de:	f004 fb93 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015e2:	488b      	ldr	r0, [pc, #556]	; (8001810 <main+0x33c>)
 80015e4:	2201      	movs	r2, #1
 80015e6:	2108      	movs	r1, #8
 80015e8:	f004 fb8e 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ec:	4889      	ldr	r0, [pc, #548]	; (8001814 <main+0x340>)
 80015ee:	4622      	mov	r2, r4
 80015f0:	2146      	movs	r1, #70	; 0x46
 80015f2:	f004 fb89 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015f6:	4888      	ldr	r0, [pc, #544]	; (8001818 <main+0x344>)
 80015f8:	4622      	mov	r2, r4
 80015fa:	2180      	movs	r1, #128	; 0x80
 80015fc:	f004 fb84 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(Ena_GPIO_Port, Ena_Pin, GPIO_PIN_RESET);
 8001600:	4622      	mov	r2, r4
 8001602:	4886      	ldr	r0, [pc, #536]	; (800181c <main+0x348>)
 8001604:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001608:	2701      	movs	r7, #1
  HAL_GPIO_WritePin(Ena_GPIO_Port, Ena_Pin, GPIO_PIN_RESET);
 800160a:	f004 fb7d 	bl	8005d08 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800160e:	f44f 6304 	mov.w	r3, #2112	; 0x840
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001612:	487d      	ldr	r0, [pc, #500]	; (8001808 <main+0x334>)
 8001614:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001616:	2503      	movs	r5, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001618:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800161c:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001620:	f004 f9e4 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 8001624:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001628:	4877      	ldr	r0, [pc, #476]	; (8001808 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162a:	9530      	str	r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 800162c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800162e:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = Dir_Pin;
 8001632:	2608      	movs	r6, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001634:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001636:	f004 f9d9 	bl	80059ec <HAL_GPIO_Init>
  HAL_GPIO_Init(Dir_GPIO_Port, &GPIO_InitStruct);
 800163a:	4874      	ldr	r0, [pc, #464]	; (800180c <main+0x338>)
 800163c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800163e:	e9cd 672d 	strd	r6, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001642:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(Dir_GPIO_Port, &GPIO_InitStruct);
 8001646:	f004 f9d1 	bl	80059ec <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800164a:	4871      	ldr	r0, [pc, #452]	; (8001810 <main+0x33c>)
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800164c:	962d      	str	r6, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800164e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001650:	2611      	movs	r6, #17
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001652:	e9cd 642e 	strd	r6, r4, [sp, #184]	; 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001656:	9430      	str	r4, [sp, #192]	; 0xc0
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001658:	f004 f9c8 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 800165c:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800165e:	486d      	ldr	r0, [pc, #436]	; (8001814 <main+0x340>)
 8001660:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001662:	f04f 0880 	mov.w	r8, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001666:	e9cd 272d 	strd	r2, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800166a:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800166e:	f004 f9bd 	bl	80059ec <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001672:	4869      	ldr	r0, [pc, #420]	; (8001818 <main+0x344>)
 8001674:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = Ena_Pin;
 8001676:	f44f 4980 	mov.w	r9, #16384	; 0x4000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800167a:	e9cd 862d 	strd	r8, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800167e:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001682:	f004 f9b3 	bl	80059ec <HAL_GPIO_Init>
  HAL_GPIO_Init(Ena_GPIO_Port, &GPIO_InitStruct);
 8001686:	a92d      	add	r1, sp, #180	; 0xb4
 8001688:	4864      	ldr	r0, [pc, #400]	; (800181c <main+0x348>)
  hdma2d.Instance = DMA2D;
 800168a:	4e65      	ldr	r6, [pc, #404]	; (8001820 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800168c:	e9cd 972d 	strd	r9, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001690:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(Ena_GPIO_Port, &GPIO_InitStruct);
 8001694:	f004 f9aa 	bl	80059ec <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001698:	4862      	ldr	r0, [pc, #392]	; (8001824 <main+0x350>)
 800169a:	4a63      	ldr	r2, [pc, #396]	; (8001828 <main+0x354>)
 800169c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800169e:	f003 fbc3 	bl	8004e28 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 80016a2:	4a62      	ldr	r2, [pc, #392]	; (800182c <main+0x358>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80016a4:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016a8:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016ac:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80016ae:	e9c6 2400 	strd	r2, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80016b2:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016b6:	f003 fccb 	bl	8005050 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016ba:	4639      	mov	r1, r7
 80016bc:	4630      	mov	r0, r6
 80016be:	f003 fd7f 	bl	80051c0 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80016c2:	4641      	mov	r1, r8
 80016c4:	4622      	mov	r2, r4
 80016c6:	4854      	ldr	r0, [pc, #336]	; (8001818 <main+0x344>)
  hdsi.Instance = DSI;
 80016c8:	4e59      	ldr	r6, [pc, #356]	; (8001830 <main+0x35c>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80016ca:	f004 fb1d 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 80016ce:	2014      	movs	r0, #20
 80016d0:	f003 fb30 	bl	8004d34 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 80016d4:	4641      	mov	r1, r8
 80016d6:	463a      	mov	r2, r7
 80016d8:	484f      	ldr	r0, [pc, #316]	; (8001818 <main+0x344>)
 80016da:	f004 fb15 	bl	8005d08 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 80016de:	200a      	movs	r0, #10
 80016e0:	f003 fb28 	bl	8004d34 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016e4:	2224      	movs	r2, #36	; 0x24
 80016e6:	4621      	mov	r1, r4
 80016e8:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80016ea:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016ec:	f01b fb72 	bl	801cdd4 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016f0:	2218      	movs	r2, #24
 80016f2:	4621      	mov	r1, r4
 80016f4:	a811      	add	r0, sp, #68	; 0x44
 80016f6:	f01b fb6d 	bl	801cdd4 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016fa:	2234      	movs	r2, #52	; 0x34
 80016fc:	4621      	mov	r1, r4
 80016fe:	a82d      	add	r0, sp, #180	; 0xb4
 8001700:	f01b fb68 	bl	801cdd4 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001704:	222c      	movs	r2, #44	; 0x2c
 8001706:	4621      	mov	r1, r4
 8001708:	eb0d 0008 	add.w	r0, sp, r8
 800170c:	f01b fb62 	bl	801cdd4 <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001710:	f04f 0802 	mov.w	r8, #2
  hdsi.Instance = DSI;
 8001714:	4a47      	ldr	r2, [pc, #284]	; (8001834 <main+0x360>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001716:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 8001718:	f04f 0a04 	mov.w	sl, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 800171c:	e9cd 180e 	strd	r1, r8, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001720:	4630      	mov	r0, r6
 8001722:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001724:	e9c6 2400 	strd	r2, r4, [r6]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001728:	e9c6 a702 	strd	sl, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800172c:	f003 fe10 	bl	8005350 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001730:	a917      	add	r1, sp, #92	; 0x5c
 8001732:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001734:	e9cd 7417 	strd	r7, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001738:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 800173c:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8001740:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001744:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001746:	f004 f82f 	bl	80057a8 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 800174a:	231c      	movs	r3, #28
 800174c:	2121      	movs	r1, #33	; 0x21
  PhyTimings.DataLaneLP2HSTime = 25;
 800174e:	220f      	movs	r2, #15
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001750:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001754:	2119      	movs	r1, #25
 8001756:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800175a:	4630      	mov	r0, r6
 800175c:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800175e:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001762:	f003 ffe4 	bl	800572e <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001766:	4651      	mov	r1, sl
 8001768:	4630      	mov	r0, r6
 800176a:	f003 ffcf 	bl	800570c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800176e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001772:	4630      	mov	r0, r6
 8001774:	f004 f923 	bl	80059be <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001778:	4621      	mov	r1, r4
 800177a:	4630      	mov	r0, r6
 800177c:	f003 fd85 	bl	800528a <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001780:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001784:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001788:	e9cd 012d 	strd	r0, r1, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 800178c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001790:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001794:	e9cd 312f 	strd	r3, r1, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001798:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800179c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 80017a0:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80017a4:	e9cd 3131 	strd	r3, r1, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 80017a8:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 80017ac:	e9cd c134 	strd	ip, r1, [sp, #208]	; 0xd0
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_ENABLE;
 80017b0:	f44f 2e80 	mov.w	lr, #262144	; 0x40000
 80017b4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80017b8:	e9cd e136 	strd	lr, r1, [sp, #216]	; 0xd8
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80017bc:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 80017c0:	e9cd 1838 	strd	r1, r8, [sp, #224]	; 0xe0
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80017c4:	4630      	mov	r0, r6
 80017c6:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017c8:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.LPGenLongWrite = DSI_LP_GLW_ENABLE;
 80017cc:	f8cd 90cc 	str.w	r9, [sp, #204]	; 0xcc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80017d0:	f003 ff68 	bl	80056a4 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017d4:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017d6:	a920      	add	r1, sp, #128	; 0x80
 80017d8:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017da:	e9cd b322 	strd	fp, r3, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 80017de:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 80017e2:	e9cd 4a24 	strd	r4, sl, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80017e6:	e9cd 8426 	strd	r8, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80017ea:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80017ee:	972a      	str	r7, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017f0:	f003 fee6 	bl	80055c0 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80017f4:	4621      	mov	r1, r4
 80017f6:	4630      	mov	r0, r6
 80017f8:	f003 fed1 	bl	800559e <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017fc:	480e      	ldr	r0, [pc, #56]	; (8001838 <main+0x364>)
 80017fe:	490f      	ldr	r1, [pc, #60]	; (800183c <main+0x368>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001800:	6204      	str	r4, [r0, #32]
 8001802:	e01d      	b.n	8001840 <main+0x36c>
 8001804:	40023800 	.word	0x40023800
 8001808:	40021800 	.word	0x40021800
 800180c:	40020c00 	.word	0x40020c00
 8001810:	40022800 	.word	0x40022800
 8001814:	40020000 	.word	0x40020000
 8001818:	40021c00 	.word	0x40021c00
 800181c:	40020400 	.word	0x40020400
 8001820:	200015f8 	.word	0x200015f8
 8001824:	200015f0 	.word	0x200015f0
 8001828:	40023000 	.word	0x40023000
 800182c:	4002b000 	.word	0x4002b000
 8001830:	20001638 	.word	0x20001638
 8001834:	40016c00 	.word	0x40016c00
 8001838:	2000179c 	.word	0x2000179c
 800183c:	a0000140 	.word	0xa0000140
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001840:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001844:	2320      	movs	r3, #32
 8001846:	2140      	movs	r1, #64	; 0x40
 8001848:	e9c0 3104 	strd	r3, r1, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800184c:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001850:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001854:	e9c0 1406 	strd	r1, r4, [r0, #24]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001858:	e9c0 3909 	strd	r3, r9, [r0, #36]	; 0x24
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800185c:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.ExitSelfRefreshDelay = 7;
 800185e:	2307      	movs	r3, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001860:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  SdramTiming.SelfRefreshTime = 4;
 8001864:	e9cd 3a2e 	strd	r3, sl, [sp, #184]	; 0xb8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001868:	e9c0 4a02 	strd	r4, sl, [r0, #8]
  SdramTiming.RCDDelay = 2;
 800186c:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8001870:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001874:	f005 ffb0 	bl	80077d8 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8001878:	f003 f95e 	bl	8004b38 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 800187c:	f003 f90e 	bl	8004a9c <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001880:	2234      	movs	r2, #52	; 0x34
 8001882:	4621      	mov	r1, r4
 8001884:	a820      	add	r0, sp, #128	; 0x80
  hltdc.Instance = LTDC;
 8001886:	4d52      	ldr	r5, [pc, #328]	; (80019d0 <main+0x4fc>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001888:	f01b faa4 	bl	801cdd4 <memset>
  hltdc.Instance = LTDC;
 800188c:	4b51      	ldr	r3, [pc, #324]	; (80019d4 <main+0x500>)
  hltdc.Init.Backcolor.Blue = 0;
 800188e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001890:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001894:	22ca      	movs	r2, #202	; 0xca
 8001896:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 800189a:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800189e:	21cb      	movs	r1, #203	; 0xcb
 80018a0:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018a4:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80018a6:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80018aa:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80018ae:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80018b2:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80018b6:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80018ba:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018be:	f004 fef1 	bl	80066a4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80018c2:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 80018c4:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018c8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80018cc:	2205      	movs	r2, #5
 80018ce:	e9cd 0227 	strd	r0, r2, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xC0000000;
 80018d2:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
  pLayerCfg.WindowY1 = 480;
 80018d6:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018da:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.ImageWidth = 200;
 80018dc:	e9cd 2b29 	strd	r2, fp, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018e0:	4628      	mov	r0, r5
 80018e2:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80018e4:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 80018e8:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.WindowX1 = 200;
 80018ea:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.WindowY0 = 0;
 80018ee:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 80018f0:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80018f4:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018f8:	f004 ffa0 	bl	800683c <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018fc:	682a      	ldr	r2, [r5, #0]
 80018fe:	6993      	ldr	r3, [r2, #24]
 8001900:	f023 0301 	bic.w	r3, r3, #1
 8001904:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001906:	4630      	mov	r0, r6
 8001908:	f003 ffb4 	bl	8005874 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 800190c:	4639      	mov	r1, r7
 800190e:	4640      	mov	r0, r8
 8001910:	f002 fa88 	bl	8003e24 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001914:	2328      	movs	r3, #40	; 0x28
 8001916:	2215      	movs	r2, #21
 8001918:	4621      	mov	r1, r4
 800191a:	4630      	mov	r0, r6
 800191c:	9400      	str	r4, [sp, #0]
 800191e:	f003 ffdc 	bl	80058da <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001922:	a92d      	add	r1, sp, #180	; 0xb4
 8001924:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001926:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 800192a:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 800192e:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001932:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001936:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 800193a:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800193c:	f003 feb2 	bl	80056a4 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001940:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001944:	4622      	mov	r2, r4
 8001946:	4628      	mov	r0, r5
 8001948:	f004 ffa6 	bl	8006898 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800194c:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 800194e:	4822      	ldr	r0, [pc, #136]	; (80019d8 <main+0x504>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001950:	6993      	ldr	r3, [r2, #24]
  hi2c1.Init.ClockSpeed = 400000;
 8001952:	4e22      	ldr	r6, [pc, #136]	; (80019dc <main+0x508>)
  hqspi.Init.FifoThreshold = 1;
 8001954:	6087      	str	r7, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 8001956:	433b      	orrs	r3, r7
 8001958:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800195a:	4b21      	ldr	r3, [pc, #132]	; (80019e0 <main+0x50c>)
  hqspi.Init.FlashSize = 27;
 800195c:	2510      	movs	r5, #16
  hqspi.Init.ClockPrescaler = 1;
 800195e:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 8001962:	231b      	movs	r3, #27
 8001964:	e9c0 5303 	strd	r5, r3, [r0, #12]
  hi2c1.Instance = I2C1;
 8001968:	4d1e      	ldr	r5, [pc, #120]	; (80019e4 <main+0x510>)
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800196a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800196e:	e9c0 3405 	strd	r3, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001972:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001976:	f005 f8d9 	bl	8006b2c <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800197a:	f002 ff55 	bl	8004828 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800197e:	f002 fe89 	bl	8004694 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001982:	f002 fdff 	bl	8004584 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001986:	4b18      	ldr	r3, [pc, #96]	; (80019e8 <main+0x514>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001988:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800198a:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 800198c:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001990:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001994:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001998:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800199c:	f004 fb9e 	bl	80060dc <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 80019a0:	4628      	mov	r0, r5
 80019a2:	f004 fc43 	bl	800622c <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 80019a6:	f7fe fe26 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 80019aa:	f006 f9ad 	bl	8007d08 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80019ae:	4a0f      	ldr	r2, [pc, #60]	; (80019ec <main+0x518>)
 80019b0:	480f      	ldr	r0, [pc, #60]	; (80019f0 <main+0x51c>)
 80019b2:	4621      	mov	r1, r4
 80019b4:	f006 f9d4 	bl	8007d60 <osThreadNew>
 80019b8:	4b0e      	ldr	r3, [pc, #56]	; (80019f4 <main+0x520>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80019ba:	4a0f      	ldr	r2, [pc, #60]	; (80019f8 <main+0x524>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80019bc:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80019be:	4621      	mov	r1, r4
 80019c0:	480e      	ldr	r0, [pc, #56]	; (80019fc <main+0x528>)
 80019c2:	f006 f9cd 	bl	8007d60 <osThreadNew>
 80019c6:	4b0e      	ldr	r3, [pc, #56]	; (8001a00 <main+0x52c>)
 80019c8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019ca:	f006 f9af 	bl	8007d2c <osKernelStart>
  while (1)
 80019ce:	e7fe      	b.n	80019ce <main+0x4fa>
 80019d0:	200016a8 	.word	0x200016a8
 80019d4:	40016800 	.word	0x40016800
 80019d8:	20001750 	.word	0x20001750
 80019dc:	40005400 	.word	0x40005400
 80019e0:	a0001000 	.word	0xa0001000
 80019e4:	20001654 	.word	0x20001654
 80019e8:	00061a80 	.word	0x00061a80
 80019ec:	0801e534 	.word	0x0801e534
 80019f0:	08001429 	.word	0x08001429
 80019f4:	200015ec 	.word	0x200015ec
 80019f8:	0801e510 	.word	0x0801e510
 80019fc:	080005fb 	.word	0x080005fb
 8001a00:	200015e8 	.word	0x200015e8

08001a04 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a04:	6802      	ldr	r2, [r0, #0]
 8001a06:	4b03      	ldr	r3, [pc, #12]	; (8001a14 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a08:	429a      	cmp	r2, r3
 8001a0a:	d101      	bne.n	8001a10 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001a0c:	f003 b980 	b.w	8004d10 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a10:	4770      	bx	lr
 8001a12:	bf00      	nop
 8001a14:	40001000 	.word	0x40001000

08001a18 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a18:	4770      	bx	lr
	...

08001a1c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a1c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a1e:	4b0e      	ldr	r3, [pc, #56]	; (8001a58 <HAL_MspInit+0x3c>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	9200      	str	r2, [sp, #0]
 8001a24:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a26:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a2a:	6459      	str	r1, [r3, #68]	; 0x44
 8001a2c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a2e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a32:	9100      	str	r1, [sp, #0]
 8001a34:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a36:	9201      	str	r2, [sp, #4]
 8001a38:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001a3a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a3e:	6419      	str	r1, [r3, #64]	; 0x40
 8001a40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a46:	9301      	str	r3, [sp, #4]
 8001a48:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a4a:	210f      	movs	r1, #15
 8001a4c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a50:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a52:	f003 b995 	b.w	8004d80 <HAL_NVIC_SetPriority>
 8001a56:	bf00      	nop
 8001a58:	40023800 	.word	0x40023800

08001a5c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a5c:	6802      	ldr	r2, [r0, #0]
 8001a5e:	4b09      	ldr	r3, [pc, #36]	; (8001a84 <HAL_CRC_MspInit+0x28>)
 8001a60:	429a      	cmp	r2, r3
{
 8001a62:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a64:	d10b      	bne.n	8001a7e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a66:	2300      	movs	r3, #0
 8001a68:	9301      	str	r3, [sp, #4]
 8001a6a:	4b07      	ldr	r3, [pc, #28]	; (8001a88 <HAL_CRC_MspInit+0x2c>)
 8001a6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a6e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a72:	631a      	str	r2, [r3, #48]	; 0x30
 8001a74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a76:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a7a:	9301      	str	r3, [sp, #4]
 8001a7c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a7e:	b002      	add	sp, #8
 8001a80:	4770      	bx	lr
 8001a82:	bf00      	nop
 8001a84:	40023000 	.word	0x40023000
 8001a88:	40023800 	.word	0x40023800

08001a8c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a8c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a8e:	4b0f      	ldr	r3, [pc, #60]	; (8001acc <HAL_DMA2D_MspInit+0x40>)
 8001a90:	6802      	ldr	r2, [r0, #0]
 8001a92:	429a      	cmp	r2, r3
 8001a94:	d116      	bne.n	8001ac4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a96:	2200      	movs	r2, #0
 8001a98:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a9c:	9201      	str	r2, [sp, #4]
 8001a9e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001aa0:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001aa4:	6319      	str	r1, [r3, #48]	; 0x30
 8001aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aa8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001aac:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aae:	2105      	movs	r1, #5
 8001ab0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ab2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ab4:	f003 f964 	bl	8004d80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ab8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aba:	b003      	add	sp, #12
 8001abc:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ac0:	f003 b990 	b.w	8004de4 <HAL_NVIC_EnableIRQ>
}
 8001ac4:	b003      	add	sp, #12
 8001ac6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aca:	bf00      	nop
 8001acc:	4002b000 	.word	0x4002b000

08001ad0 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001ad0:	b510      	push	{r4, lr}
 8001ad2:	4604      	mov	r4, r0
 8001ad4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ad6:	2214      	movs	r2, #20
 8001ad8:	2100      	movs	r1, #0
 8001ada:	a803      	add	r0, sp, #12
 8001adc:	f01b f97a 	bl	801cdd4 <memset>
  if(hdsi->Instance==DSI)
 8001ae0:	6822      	ldr	r2, [r4, #0]
 8001ae2:	4b17      	ldr	r3, [pc, #92]	; (8001b40 <HAL_DSI_MspInit+0x70>)
 8001ae4:	429a      	cmp	r2, r3
 8001ae6:	d128      	bne.n	8001b3a <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ae8:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001aec:	2400      	movs	r4, #0
 8001aee:	9401      	str	r4, [sp, #4]
 8001af0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001af2:	4814      	ldr	r0, [pc, #80]	; (8001b44 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001af4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001af8:	645a      	str	r2, [r3, #68]	; 0x44
 8001afa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001afc:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001b00:	9201      	str	r2, [sp, #4]
 8001b02:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b04:	9402      	str	r4, [sp, #8]
 8001b06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b08:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b0c:	631a      	str	r2, [r3, #48]	; 0x30
 8001b0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b10:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b14:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b16:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b18:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b1a:	2302      	movs	r3, #2
 8001b1c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b20:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b22:	230d      	movs	r3, #13
 8001b24:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b26:	f003 ff61 	bl	80059ec <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b2a:	205c      	movs	r0, #92	; 0x5c
 8001b2c:	4622      	mov	r2, r4
 8001b2e:	2105      	movs	r1, #5
 8001b30:	f003 f926 	bl	8004d80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b34:	205c      	movs	r0, #92	; 0x5c
 8001b36:	f003 f955 	bl	8004de4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b3a:	b008      	add	sp, #32
 8001b3c:	bd10      	pop	{r4, pc}
 8001b3e:	bf00      	nop
 8001b40:	40016c00 	.word	0x40016c00
 8001b44:	40022400 	.word	0x40022400

08001b48 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b48:	b530      	push	{r4, r5, lr}
 8001b4a:	4604      	mov	r4, r0
 8001b4c:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b4e:	2214      	movs	r2, #20
 8001b50:	2100      	movs	r1, #0
 8001b52:	a803      	add	r0, sp, #12
 8001b54:	f01b f93e 	bl	801cdd4 <memset>
  if(hi2c->Instance==I2C1)
 8001b58:	6822      	ldr	r2, [r4, #0]
 8001b5a:	4b1a      	ldr	r3, [pc, #104]	; (8001bc4 <HAL_I2C_MspInit+0x7c>)
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d12f      	bne.n	8001bc0 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b60:	4c19      	ldr	r4, [pc, #100]	; (8001bc8 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b62:	481a      	ldr	r0, [pc, #104]	; (8001bcc <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b64:	2500      	movs	r5, #0
 8001b66:	9501      	str	r5, [sp, #4]
 8001b68:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b6a:	f043 0302 	orr.w	r3, r3, #2
 8001b6e:	6323      	str	r3, [r4, #48]	; 0x30
 8001b70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b72:	f003 0302 	and.w	r3, r3, #2
 8001b76:	9301      	str	r3, [sp, #4]
 8001b78:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b7a:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b7e:	2312      	movs	r3, #18
 8001b80:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b84:	2101      	movs	r1, #1
 8001b86:	2303      	movs	r3, #3
 8001b88:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b8c:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b8e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b90:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b92:	f003 ff2b 	bl	80059ec <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b96:	9502      	str	r5, [sp, #8]
 8001b98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b9a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b9e:	6423      	str	r3, [r4, #64]	; 0x40
 8001ba0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001ba2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001ba6:	9302      	str	r3, [sp, #8]
 8001ba8:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001baa:	6a23      	ldr	r3, [r4, #32]
 8001bac:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bb0:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001bb2:	6a23      	ldr	r3, [r4, #32]
 8001bb4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bb8:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001bba:	2064      	movs	r0, #100	; 0x64
 8001bbc:	f003 f8ba 	bl	8004d34 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bc0:	b009      	add	sp, #36	; 0x24
 8001bc2:	bd30      	pop	{r4, r5, pc}
 8001bc4:	40005400 	.word	0x40005400
 8001bc8:	40023800 	.word	0x40023800
 8001bcc:	40020400 	.word	0x40020400

08001bd0 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bd0:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bd2:	6802      	ldr	r2, [r0, #0]
 8001bd4:	4b0a      	ldr	r3, [pc, #40]	; (8001c00 <HAL_I2C_MspDeInit+0x30>)
 8001bd6:	429a      	cmp	r2, r3
 8001bd8:	d110      	bne.n	8001bfc <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bda:	4a0a      	ldr	r2, [pc, #40]	; (8001c04 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bdc:	480a      	ldr	r0, [pc, #40]	; (8001c08 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bde:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001be0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001be4:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001be6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bea:	f003 ffe5 	bl	8005bb8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bf2:	4805      	ldr	r0, [pc, #20]	; (8001c08 <HAL_I2C_MspDeInit+0x38>)
 8001bf4:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bf8:	f003 bfde 	b.w	8005bb8 <HAL_GPIO_DeInit>
}
 8001bfc:	bd08      	pop	{r3, pc}
 8001bfe:	bf00      	nop
 8001c00:	40005400 	.word	0x40005400
 8001c04:	40023800 	.word	0x40023800
 8001c08:	40020400 	.word	0x40020400

08001c0c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c0c:	b510      	push	{r4, lr}
 8001c0e:	4604      	mov	r4, r0
 8001c10:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c12:	223c      	movs	r2, #60	; 0x3c
 8001c14:	2100      	movs	r1, #0
 8001c16:	a801      	add	r0, sp, #4
 8001c18:	f01b f8dc 	bl	801cdd4 <memset>
  if(hltdc->Instance==LTDC)
 8001c1c:	6822      	ldr	r2, [r4, #0]
 8001c1e:	4b12      	ldr	r3, [pc, #72]	; (8001c68 <HAL_LTDC_MspInit+0x5c>)
 8001c20:	429a      	cmp	r2, r3
 8001c22:	d11f      	bne.n	8001c64 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c24:	2308      	movs	r3, #8
 8001c26:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c28:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c2c:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c2e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c30:	2306      	movs	r3, #6
 8001c32:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c34:	f005 fab4 	bl	80071a0 <HAL_RCCEx_PeriphCLKConfig>
 8001c38:	b108      	cbz	r0, 8001c3e <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8001c3a:	f7ff feed 	bl	8001a18 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c3e:	4b0b      	ldr	r3, [pc, #44]	; (8001c6c <HAL_LTDC_MspInit+0x60>)
 8001c40:	2200      	movs	r2, #0
 8001c42:	9200      	str	r2, [sp, #0]
 8001c44:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c46:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c4a:	6459      	str	r1, [r3, #68]	; 0x44
 8001c4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c4e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c52:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c54:	2058      	movs	r0, #88	; 0x58
 8001c56:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c58:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c5a:	f003 f891 	bl	8004d80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c5e:	2058      	movs	r0, #88	; 0x58
 8001c60:	f003 f8c0 	bl	8004de4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c64:	b010      	add	sp, #64	; 0x40
 8001c66:	bd10      	pop	{r4, pc}
 8001c68:	40016800 	.word	0x40016800
 8001c6c:	40023800 	.word	0x40023800

08001c70 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c72:	4604      	mov	r4, r0
 8001c74:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c76:	2214      	movs	r2, #20
 8001c78:	2100      	movs	r1, #0
 8001c7a:	a803      	add	r0, sp, #12
 8001c7c:	f01b f8aa 	bl	801cdd4 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c80:	6822      	ldr	r2, [r4, #0]
 8001c82:	4b24      	ldr	r3, [pc, #144]	; (8001d14 <HAL_QSPI_MspInit+0xa4>)
 8001c84:	429a      	cmp	r2, r3
 8001c86:	d142      	bne.n	8001d0e <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c88:	4b23      	ldr	r3, [pc, #140]	; (8001d18 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c8a:	4824      	ldr	r0, [pc, #144]	; (8001d1c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c8c:	2400      	movs	r4, #0
 8001c8e:	9400      	str	r4, [sp, #0]
 8001c90:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c92:	f042 0202 	orr.w	r2, r2, #2
 8001c96:	639a      	str	r2, [r3, #56]	; 0x38
 8001c98:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c9a:	f002 0202 	and.w	r2, r2, #2
 8001c9e:	9200      	str	r2, [sp, #0]
 8001ca0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ca2:	9401      	str	r4, [sp, #4]
 8001ca4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca6:	f042 0202 	orr.w	r2, r2, #2
 8001caa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cae:	f002 0202 	and.w	r2, r2, #2
 8001cb2:	9201      	str	r2, [sp, #4]
 8001cb4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cb6:	9402      	str	r4, [sp, #8]
 8001cb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cba:	f042 0220 	orr.w	r2, r2, #32
 8001cbe:	631a      	str	r2, [r3, #48]	; 0x30
 8001cc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cc2:	f003 0320 	and.w	r3, r3, #32
 8001cc6:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc8:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cca:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ccc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cce:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd0:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cd2:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd4:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cd8:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cdc:	f003 fe86 	bl	80059ec <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001ce0:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce4:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce8:	480d      	ldr	r0, [pc, #52]	; (8001d20 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cea:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cec:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cee:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cf0:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cf4:	f003 fe7a 	bl	80059ec <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cf8:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cfc:	4808      	ldr	r0, [pc, #32]	; (8001d20 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cfe:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d00:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d02:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d06:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d0a:	f003 fe6f 	bl	80059ec <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001d0e:	b009      	add	sp, #36	; 0x24
 8001d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d12:	bf00      	nop
 8001d14:	a0001000 	.word	0xa0001000
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020400 	.word	0x40020400
 8001d20:	40021400 	.word	0x40021400

08001d24 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d24:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d26:	6802      	ldr	r2, [r0, #0]
 8001d28:	4b09      	ldr	r3, [pc, #36]	; (8001d50 <HAL_QSPI_MspDeInit+0x2c>)
 8001d2a:	429a      	cmp	r2, r3
 8001d2c:	d10f      	bne.n	8001d4e <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d2e:	4a09      	ldr	r2, [pc, #36]	; (8001d54 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d30:	4809      	ldr	r0, [pc, #36]	; (8001d58 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d32:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d34:	f023 0302 	bic.w	r3, r3, #2
 8001d38:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d3a:	2140      	movs	r1, #64	; 0x40
 8001d3c:	f003 ff3c 	bl	8005bb8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d44:	4805      	ldr	r0, [pc, #20]	; (8001d5c <HAL_QSPI_MspDeInit+0x38>)
 8001d46:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d4a:	f003 bf35 	b.w	8005bb8 <HAL_GPIO_DeInit>
}
 8001d4e:	bd08      	pop	{r3, pc}
 8001d50:	a0001000 	.word	0xa0001000
 8001d54:	40023800 	.word	0x40023800
 8001d58:	40020400 	.word	0x40020400
 8001d5c:	40021400 	.word	0x40021400

08001d60 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d62:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d64:	2300      	movs	r3, #0
 8001d66:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d68:	4b30      	ldr	r3, [pc, #192]	; (8001e2c <HAL_SDRAM_MspInit+0xcc>)
 8001d6a:	681c      	ldr	r4, [r3, #0]
 8001d6c:	2c00      	cmp	r4, #0
 8001d6e:	d15a      	bne.n	8001e26 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d70:	2201      	movs	r2, #1
 8001d72:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d74:	4b2e      	ldr	r3, [pc, #184]	; (8001e30 <HAL_SDRAM_MspInit+0xd0>)
 8001d76:	9400      	str	r4, [sp, #0]
 8001d78:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d7a:	482e      	ldr	r0, [pc, #184]	; (8001e34 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d7c:	f042 0201 	orr.w	r2, r2, #1
 8001d80:	639a      	str	r2, [r3, #56]	; 0x38
 8001d82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d84:	f003 0301 	and.w	r3, r3, #1
 8001d88:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8a:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d8c:	2603      	movs	r6, #3
 8001d8e:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d90:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d94:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d98:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9c:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001da0:	f003 fe24 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001da4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da8:	4823      	ldr	r0, [pc, #140]	; (8001e38 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001daa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dac:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001db6:	f003 fe19 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001dba:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dbe:	481f      	ldr	r0, [pc, #124]	; (8001e3c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dc8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dcc:	f003 fe0e 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001dd0:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dd4:	481a      	ldr	r0, [pc, #104]	; (8001e40 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dd8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dda:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dde:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001de2:	f003 fe03 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001de6:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dea:	4816      	ldr	r0, [pc, #88]	; (8001e44 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dec:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dee:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001df4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001df8:	f003 fdf8 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dfc:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e00:	4811      	ldr	r0, [pc, #68]	; (8001e48 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e02:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e04:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e06:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e0a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e0e:	f003 fded 	bl	80059ec <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e12:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e14:	480d      	ldr	r0, [pc, #52]	; (8001e4c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e16:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e18:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e1e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e22:	f003 fde3 	bl	80059ec <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e26:	b007      	add	sp, #28
 8001e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e2a:	bf00      	nop
 8001e2c:	200017d4 	.word	0x200017d4
 8001e30:	40023800 	.word	0x40023800
 8001e34:	40021000 	.word	0x40021000
 8001e38:	40021800 	.word	0x40021800
 8001e3c:	40020c00 	.word	0x40020c00
 8001e40:	40022000 	.word	0x40022000
 8001e44:	40021400 	.word	0x40021400
 8001e48:	40021c00 	.word	0x40021c00
 8001e4c:	40020800 	.word	0x40020800

08001e50 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e50:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e52:	4b17      	ldr	r3, [pc, #92]	; (8001eb0 <HAL_SDRAM_MspDeInit+0x60>)
 8001e54:	681a      	ldr	r2, [r3, #0]
 8001e56:	bb52      	cbnz	r2, 8001eae <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e58:	2201      	movs	r2, #1
 8001e5a:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e5c:	4a15      	ldr	r2, [pc, #84]	; (8001eb4 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e5e:	4816      	ldr	r0, [pc, #88]	; (8001eb8 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e60:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e62:	f023 0301 	bic.w	r3, r3, #1
 8001e66:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e68:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e6c:	f003 fea4 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e70:	4812      	ldr	r0, [pc, #72]	; (8001ebc <HAL_SDRAM_MspDeInit+0x6c>)
 8001e72:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e76:	f003 fe9f 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e7a:	4811      	ldr	r0, [pc, #68]	; (8001ec0 <HAL_SDRAM_MspDeInit+0x70>)
 8001e7c:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e80:	f003 fe9a 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e84:	480f      	ldr	r0, [pc, #60]	; (8001ec4 <HAL_SDRAM_MspDeInit+0x74>)
 8001e86:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e8a:	f003 fe95 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e8e:	480e      	ldr	r0, [pc, #56]	; (8001ec8 <HAL_SDRAM_MspDeInit+0x78>)
 8001e90:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e94:	f003 fe90 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e98:	480c      	ldr	r0, [pc, #48]	; (8001ecc <HAL_SDRAM_MspDeInit+0x7c>)
 8001e9a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e9e:	f003 fe8b 	bl	8005bb8 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001ea2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001ea6:	480a      	ldr	r0, [pc, #40]	; (8001ed0 <HAL_SDRAM_MspDeInit+0x80>)
 8001ea8:	210d      	movs	r1, #13
 8001eaa:	f003 be85 	b.w	8005bb8 <HAL_GPIO_DeInit>
}
 8001eae:	bd08      	pop	{r3, pc}
 8001eb0:	200017d0 	.word	0x200017d0
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021000 	.word	0x40021000
 8001ebc:	40021800 	.word	0x40021800
 8001ec0:	40020c00 	.word	0x40020c00
 8001ec4:	40022000 	.word	0x40022000
 8001ec8:	40021400 	.word	0x40021400
 8001ecc:	40021c00 	.word	0x40021c00
 8001ed0:	40020800 	.word	0x40020800

08001ed4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001ed4:	b530      	push	{r4, r5, lr}
 8001ed6:	4601      	mov	r1, r0
 8001ed8:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001eda:	2200      	movs	r2, #0
 8001edc:	2036      	movs	r0, #54	; 0x36
 8001ede:	f002 ff4f 	bl	8004d80 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ee2:	2036      	movs	r0, #54	; 0x36
 8001ee4:	f002 ff7e 	bl	8004de4 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ee8:	2500      	movs	r5, #0
 8001eea:	4b15      	ldr	r3, [pc, #84]	; (8001f40 <HAL_InitTick+0x6c>)
 8001eec:	9502      	str	r5, [sp, #8]
 8001eee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001ef0:	4c14      	ldr	r4, [pc, #80]	; (8001f44 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ef2:	f042 0210 	orr.w	r2, r2, #16
 8001ef6:	641a      	str	r2, [r3, #64]	; 0x40
 8001ef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001efa:	f003 0310 	and.w	r3, r3, #16
 8001efe:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f00:	a901      	add	r1, sp, #4
 8001f02:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f04:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f06:	f005 f92d 	bl	8007164 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f0a:	f005 f91b 	bl	8007144 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001f0e:	4b0e      	ldr	r3, [pc, #56]	; (8001f48 <HAL_InitTick+0x74>)
 8001f10:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f12:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f16:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f18:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f1a:	4b0c      	ldr	r3, [pc, #48]	; (8001f4c <HAL_InitTick+0x78>)
 8001f1c:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f20:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f22:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f24:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f26:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f28:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f2a:	f005 fe01 	bl	8007b30 <HAL_TIM_Base_Init>
 8001f2e:	b920      	cbnz	r0, 8001f3a <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f30:	4620      	mov	r0, r4
 8001f32:	f005 fcb7 	bl	80078a4 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f36:	b009      	add	sp, #36	; 0x24
 8001f38:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f3a:	2001      	movs	r0, #1
 8001f3c:	e7fb      	b.n	8001f36 <HAL_InitTick+0x62>
 8001f3e:	bf00      	nop
 8001f40:	40023800 	.word	0x40023800
 8001f44:	200017d8 	.word	0x200017d8
 8001f48:	40001000 	.word	0x40001000
 8001f4c:	000f4240 	.word	0x000f4240

08001f50 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f50:	4770      	bx	lr

08001f52 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f52:	e7fe      	b.n	8001f52 <HardFault_Handler>

08001f54 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f54:	e7fe      	b.n	8001f54 <MemManage_Handler>

08001f56 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f56:	e7fe      	b.n	8001f56 <BusFault_Handler>

08001f58 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f58:	e7fe      	b.n	8001f58 <UsageFault_Handler>

08001f5a <DebugMon_Handler>:
 8001f5a:	4770      	bx	lr

08001f5c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f5c:	4801      	ldr	r0, [pc, #4]	; (8001f64 <TIM6_DAC_IRQHandler+0x8>)
 8001f5e:	f005 bcdf 	b.w	8007920 <HAL_TIM_IRQHandler>
 8001f62:	bf00      	nop
 8001f64:	200017d8 	.word	0x200017d8

08001f68 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f68:	4801      	ldr	r0, [pc, #4]	; (8001f70 <LTDC_IRQHandler+0x8>)
 8001f6a:	f004 bc0a 	b.w	8006782 <HAL_LTDC_IRQHandler>
 8001f6e:	bf00      	nop
 8001f70:	200016a8 	.word	0x200016a8

08001f74 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f74:	4801      	ldr	r0, [pc, #4]	; (8001f7c <DMA2D_IRQHandler+0x8>)
 8001f76:	f003 b899 	b.w	80050ac <HAL_DMA2D_IRQHandler>
 8001f7a:	bf00      	nop
 8001f7c:	200015f8 	.word	0x200015f8

08001f80 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f80:	4801      	ldr	r0, [pc, #4]	; (8001f88 <DSI_IRQHandler+0x8>)
 8001f82:	f003 ba9a 	b.w	80054ba <HAL_DSI_IRQHandler>
 8001f86:	bf00      	nop
 8001f88:	20001638 	.word	0x20001638

08001f8c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f8c:	2001      	movs	r0, #1
 8001f8e:	4770      	bx	lr

08001f90 <_kill>:

int _kill(int pid, int sig)
{
 8001f90:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f92:	f01a fec5 	bl	801cd20 <__errno>
 8001f96:	2316      	movs	r3, #22
 8001f98:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f9a:	f04f 30ff 	mov.w	r0, #4294967295
 8001f9e:	bd08      	pop	{r3, pc}

08001fa0 <_exit>:

void _exit (int status)
{
 8001fa0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fa2:	f01a febd 	bl	801cd20 <__errno>
 8001fa6:	2316      	movs	r3, #22
 8001fa8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001faa:	e7fe      	b.n	8001faa <_exit+0xa>

08001fac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fac:	b570      	push	{r4, r5, r6, lr}
 8001fae:	460d      	mov	r5, r1
 8001fb0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fb2:	460e      	mov	r6, r1
 8001fb4:	1b73      	subs	r3, r6, r5
 8001fb6:	429c      	cmp	r4, r3
 8001fb8:	dc01      	bgt.n	8001fbe <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001fba:	4620      	mov	r0, r4
 8001fbc:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001fbe:	f3af 8000 	nop.w
 8001fc2:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fc6:	e7f5      	b.n	8001fb4 <_read+0x8>

08001fc8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	460d      	mov	r5, r1
 8001fcc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fce:	460e      	mov	r6, r1
 8001fd0:	1b73      	subs	r3, r6, r5
 8001fd2:	429c      	cmp	r4, r3
 8001fd4:	dc01      	bgt.n	8001fda <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001fd6:	4620      	mov	r0, r4
 8001fd8:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001fda:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fde:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fe2:	e7f5      	b.n	8001fd0 <_write+0x8>

08001fe4 <_close>:

int _close(int file)
{
	return -1;
}
 8001fe4:	f04f 30ff 	mov.w	r0, #4294967295
 8001fe8:	4770      	bx	lr

08001fea <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fea:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fee:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001ff0:	2000      	movs	r0, #0
 8001ff2:	4770      	bx	lr

08001ff4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001ff4:	2001      	movs	r0, #1
 8001ff6:	4770      	bx	lr

08001ff8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001ff8:	2000      	movs	r0, #0
 8001ffa:	4770      	bx	lr

08001ffc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001ffc:	4a0a      	ldr	r2, [pc, #40]	; (8002028 <_sbrk+0x2c>)
 8001ffe:	6811      	ldr	r1, [r2, #0]
{
 8002000:	b508      	push	{r3, lr}
 8002002:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002004:	b909      	cbnz	r1, 800200a <_sbrk+0xe>
		heap_end = &end;
 8002006:	4909      	ldr	r1, [pc, #36]	; (800202c <_sbrk+0x30>)
 8002008:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800200a:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800200c:	4669      	mov	r1, sp
 800200e:	4403      	add	r3, r0
 8002010:	428b      	cmp	r3, r1
 8002012:	d906      	bls.n	8002022 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002014:	f01a fe84 	bl	801cd20 <__errno>
 8002018:	230c      	movs	r3, #12
 800201a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800201c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002020:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002022:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002024:	e7fc      	b.n	8002020 <_sbrk+0x24>
 8002026:	bf00      	nop
 8002028:	20001820 	.word	0x20001820
 800202c:	2000aab0 	.word	0x2000aab0

08002030 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002030:	4770      	bx	lr

08002032 <_ZN23ApplicationFontProviderD0Ev>:
 8002032:	b510      	push	{r4, lr}
 8002034:	2104      	movs	r1, #4
 8002036:	4604      	mov	r4, r0
 8002038:	f01a fe12 	bl	801cc60 <_ZdlPvj>
 800203c:	4620      	mov	r0, r4
 800203e:	bd10      	pop	{r4, pc}

08002040 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002040:	2901      	cmp	r1, #1
{
 8002042:	b508      	push	{r3, lr}
    switch (typography)
 8002044:	d006      	beq.n	8002054 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002046:	2902      	cmp	r1, #2
 8002048:	d008      	beq.n	800205c <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800204a:	b959      	cbnz	r1, 8002064 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800204c:	f001 fd64 	bl	8003b18 <_ZN17TypedTextDatabase8getFontsEv>
 8002050:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002052:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002054:	f001 fd60 	bl	8003b18 <_ZN17TypedTextDatabase8getFontsEv>
 8002058:	6840      	ldr	r0, [r0, #4]
 800205a:	e7fa      	b.n	8002052 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800205c:	f001 fd5c 	bl	8003b18 <_ZN17TypedTextDatabase8getFontsEv>
 8002060:	6880      	ldr	r0, [r0, #8]
 8002062:	e7f6      	b.n	8002052 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002064:	2000      	movs	r0, #0
 8002066:	e7f4      	b.n	8002052 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002068 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002068:	2000      	movs	r0, #0
 800206a:	4770      	bx	lr

0800206c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800206c:	8081      	strh	r1, [r0, #4]
    }
 800206e:	4770      	bx	lr

08002070 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002070:	80c1      	strh	r1, [r0, #6]
    }
 8002072:	4770      	bx	lr

08002074 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002074:	8101      	strh	r1, [r0, #8]
    }
 8002076:	4770      	bx	lr

08002078 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002078:	8141      	strh	r1, [r0, #10]
    }
 800207a:	4770      	bx	lr

0800207c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800207c:	4770      	bx	lr

0800207e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002082:	4770      	bx	lr

08002084 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002084:	4770      	bx	lr

08002086 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002086:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002088:	88c4      	ldrh	r4, [r0, #6]
 800208a:	6803      	ldr	r3, [r0, #0]
 800208c:	1b12      	subs	r2, r2, r4
 800208e:	8884      	ldrh	r4, [r0, #4]
 8002090:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002092:	1b09      	subs	r1, r1, r4
 8002094:	b212      	sxth	r2, r2
    }
 8002096:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800209a:	b209      	sxth	r1, r1
 800209c:	4718      	bx	r3

0800209e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800209e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020a2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020a4:	f04f 33ff 	mov.w	r3, #4294967295
 80020a8:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020aa:	6813      	ldr	r3, [r2, #0]
 80020ac:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020ae:	6010      	str	r0, [r2, #0]
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80020bc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80020c0:	b11a      	cbz	r2, 80020ca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80020c2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80020c6:	b102      	cbz	r2, 80020ca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80020c8:	6018      	str	r0, [r3, #0]
        }
    }
 80020ca:	4770      	bx	lr

080020cc <_ZN17AutomaticViewBaseD1Ev>:

class AutomaticViewBase : public touchgfx::View<AutomaticPresenter>
{
public:
    AutomaticViewBase();
    virtual ~AutomaticViewBase() {}
 80020cc:	4770      	bx	lr

080020ce <_ZN17AutomaticViewBase11setupScreenEv>:
}

void AutomaticViewBase::setupScreen()
{

}
 80020ce:	4770      	bx	lr

080020d0 <_ZN8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80020d0:	4770      	bx	lr

080020d2 <_ZN8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80020d2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 80020d4:	68c2      	ldr	r2, [r0, #12]
 80020d6:	6844      	ldr	r4, [r0, #4]
 80020d8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80020da:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80020dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80020e0:	07d2      	lsls	r2, r2, #31
 80020e2:	bf48      	it	mi
 80020e4:	5962      	ldrmi	r2, [r4, r5]
 80020e6:	689b      	ldr	r3, [r3, #8]
    }
 80020e8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80020ea:	bf48      	it	mi
 80020ec:	58d3      	ldrmi	r3, [r2, r3]
 80020ee:	4718      	bx	r3

080020f0 <_ZNK8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80020f0:	6843      	ldr	r3, [r0, #4]
 80020f2:	b12b      	cbz	r3, 8002100 <_ZNK8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80020f4:	6883      	ldr	r3, [r0, #8]
 80020f6:	b92b      	cbnz	r3, 8002104 <_ZNK8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80020f8:	68c0      	ldr	r0, [r0, #12]
 80020fa:	f000 0001 	and.w	r0, r0, #1
 80020fe:	4770      	bx	lr
 8002100:	4618      	mov	r0, r3
 8002102:	4770      	bx	lr
 8002104:	2001      	movs	r0, #1
    }
 8002106:	4770      	bx	lr

08002108 <_ZN8touchgfx8CallbackI17AutomaticViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002108:	b510      	push	{r4, lr}
 800210a:	2110      	movs	r1, #16
 800210c:	4604      	mov	r4, r0
 800210e:	f01a fda7 	bl	801cc60 <_ZdlPvj>
 8002112:	4620      	mov	r0, r4
 8002114:	bd10      	pop	{r4, pc}

08002116 <_ZN17AutomaticViewBaseD0Ev>:
 8002116:	b510      	push	{r4, lr}
 8002118:	21e4      	movs	r1, #228	; 0xe4
 800211a:	4604      	mov	r4, r0
 800211c:	f01a fda0 	bl	801cc60 <_ZdlPvj>
 8002120:	4620      	mov	r0, r4
 8002122:	bd10      	pop	{r4, pc}

08002124 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002124:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002128:	b112      	cbz	r2, 8002130 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800212a:	6803      	ldr	r3, [r0, #0]
 800212c:	695b      	ldr	r3, [r3, #20]
 800212e:	4718      	bx	r3
    }
 8002130:	4770      	bx	lr

08002132 <_ZN17AutomaticViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void AutomaticViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_return)
 8002132:	3098      	adds	r0, #152	; 0x98
 8002134:	4288      	cmp	r0, r1
{
 8002136:	b508      	push	{r3, lr}
    if (&src == &btn_return)
 8002138:	d105      	bne.n	8002146 <_ZN17AutomaticViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800213a:	f00b ff9d 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When btn_return clicked change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenSlideTransitionEast();
    }
}
 800213e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenSlideTransitionEast();
 8002142:	f000 bb09 	b.w	8002758 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionEastEv>
}
 8002146:	bd08      	pop	{r3, pc}

08002148 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002148:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800214a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800214c:	4604      	mov	r4, r0
        setX(x);
 800214e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002150:	4615      	mov	r5, r2
        setX(x);
 8002152:	4798      	blx	r3
        setY(y);
 8002154:	6823      	ldr	r3, [r4, #0]
 8002156:	4629      	mov	r1, r5
 8002158:	4620      	mov	r0, r4
 800215a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800215c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002160:	4718      	bx	r3

08002162 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002162:	b570      	push	{r4, r5, r6, lr}
 8002164:	4604      	mov	r4, r0
 8002166:	461d      	mov	r5, r3
 8002168:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800216c:	f7ff ffec 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002170:	6823      	ldr	r3, [r4, #0]
 8002172:	4629      	mov	r1, r5
 8002174:	4620      	mov	r0, r4
 8002176:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002178:	4798      	blx	r3
        setHeight(height);
 800217a:	6823      	ldr	r3, [r4, #0]
 800217c:	4631      	mov	r1, r6
 800217e:	4620      	mov	r0, r4
 8002180:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002182:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002186:	4718      	bx	r3

08002188 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002188:	4a09      	ldr	r2, [pc, #36]	; (80021b0 <_ZN8touchgfx3BoxC1Ev+0x28>)
 800218a:	6002      	str	r2, [r0, #0]
          visible(true)
 800218c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002190:	2200      	movs	r2, #0
 8002192:	8481      	strh	r1, [r0, #36]	; 0x24
 8002194:	21ff      	movs	r1, #255	; 0xff
 8002196:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800219a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800219e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80021a2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80021a6:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80021aa:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80021ac:	4770      	bx	lr
 80021ae:	bf00      	nop
 80021b0:	08020298 	.word	0x08020298

080021b4 <_ZN17AutomaticViewBaseC1Ev>:
AutomaticViewBase::AutomaticViewBase() :
 80021b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021b8:	4604      	mov	r4, r0
 80021ba:	b088      	sub	sp, #32
    buttonCallback(this, &AutomaticViewBase::buttonCallbackHandler)
 80021bc:	4625      	mov	r5, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80021be:	f00d f989 	bl	800f4d4 <_ZN8touchgfx6ScreenC1Ev>
 80021c2:	4b33      	ldr	r3, [pc, #204]	; (8002290 <_ZN17AutomaticViewBaseC1Ev+0xdc>)
 80021c4:	2200      	movs	r2, #0
 80021c6:	63e2      	str	r2, [r4, #60]	; 0x3c
 80021c8:	f845 3b40 	str.w	r3, [r5], #64
 80021cc:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80021d0:	4628      	mov	r0, r5
 80021d2:	f7ff ffd9 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 80021d6:	f104 0698 	add.w	r6, r4, #152	; 0x98
 80021da:	4638      	mov	r0, r7
 80021dc:	f7ff ffd4 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 80021e0:	4630      	mov	r0, r6
 80021e2:	f00a f929 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80021e6:	4b2b      	ldr	r3, [pc, #172]	; (8002294 <_ZN17AutomaticViewBaseC1Ev+0xe0>)
 80021e8:	2200      	movs	r2, #0
 80021ea:	e9c4 3435 	strd	r3, r4, [r4, #212]	; 0xd4
    __background.setPosition(0, 0, 800, 480);
 80021ee:	f44f 78f0 	mov.w	r8, #480	; 0x1e0
 80021f2:	4b29      	ldr	r3, [pc, #164]	; (8002298 <_ZN17AutomaticViewBaseC1Ev+0xe4>)
 80021f4:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 80021f8:	f8c4 20e0 	str.w	r2, [r4, #224]	; 0xe0
 80021fc:	4611      	mov	r1, r2
 80021fe:	4628      	mov	r0, r5
 8002200:	f8cd 8000 	str.w	r8, [sp]
 8002204:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002208:	f7ff ffab 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setPosition(0, 0, 800, 480);
 800220c:	2200      	movs	r2, #0
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800220e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002212:	66a3      	str	r3, [r4, #104]	; 0x68
 8002214:	4611      	mov	r1, r2
 8002216:	4638      	mov	r0, r7
 8002218:	f8cd 8000 	str.w	r8, [sp]
 800221c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002220:	f7ff ff9f 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002224:	f04f 33ff 	mov.w	r3, #4294967295
 8002228:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    btn_return.setXY(740, 0);
 800222c:	4630      	mov	r0, r6
 800222e:	2200      	movs	r2, #0
 8002230:	f44f 7139 	mov.w	r1, #740	; 0x2e4
 8002234:	f7ff ff88 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002238:	2302      	movs	r3, #2
 800223a:	f8ad 3010 	strh.w	r3, [sp, #16]
 800223e:	2303      	movs	r3, #3
 8002240:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002244:	2309      	movs	r3, #9
 8002246:	f8ad 3018 	strh.w	r3, [sp, #24]
 800224a:	f8ad 301c 	strh.w	r3, [sp, #28]
    btn_return.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_48_ID));
 800224e:	ab07      	add	r3, sp, #28
 8002250:	aa05      	add	r2, sp, #20
 8002252:	9300      	str	r3, [sp, #0]
 8002254:	a904      	add	r1, sp, #16
 8002256:	ab06      	add	r3, sp, #24
 8002258:	4630      	mov	r0, r6
 800225a:	f00a f849 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800225e:	4b0f      	ldr	r3, [pc, #60]	; (800229c <_ZN17AutomaticViewBaseC1Ev+0xe8>)
 8002260:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
    btn_return.setAction(buttonCallback);
 8002264:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002268:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800226c:	1d20      	adds	r0, r4, #4
 800226e:	4629      	mov	r1, r5
 8002270:	9003      	str	r0, [sp, #12]
 8002272:	f007 ff69 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002276:	9803      	ldr	r0, [sp, #12]
 8002278:	4639      	mov	r1, r7
 800227a:	f007 ff65 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800227e:	9803      	ldr	r0, [sp, #12]
 8002280:	4631      	mov	r1, r6
 8002282:	f007 ff61 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002286:	4620      	mov	r0, r4
 8002288:	b008      	add	sp, #32
 800228a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800228e:	bf00      	nop
 8002290:	0801e58c 	.word	0x0801e58c
 8002294:	0801e574 	.word	0x0801e574
 8002298:	08002133 	.word	0x08002133
 800229c:	00070011 	.word	0x00070011

080022a0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80022a0:	4800      	ldr	r0, [pc, #0]	; (80022a4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80022a2:	4770      	bx	lr
 80022a4:	0801e5b8 	.word	0x0801e5b8

080022a8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80022a8:	200c      	movs	r0, #12
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80022ac:	b513      	push	{r0, r1, r4, lr}
 80022ae:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80022b0:	b151      	cbz	r1, 80022c8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022b2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80022b4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80022b6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022ba:	aa01      	add	r2, sp, #4
 80022bc:	689c      	ldr	r4, [r3, #8]
 80022be:	f10d 0303 	add.w	r3, sp, #3
 80022c2:	47a0      	blx	r4
        return glyph;
    }
 80022c4:	b002      	add	sp, #8
 80022c6:	bd10      	pop	{r4, pc}
            return 0;
 80022c8:	4608      	mov	r0, r1
 80022ca:	e7fb      	b.n	80022c4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080022cc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80022cc:	8940      	ldrh	r0, [r0, #10]
 80022ce:	4770      	bx	lr

080022d0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022d0:	8980      	ldrh	r0, [r0, #12]
 80022d2:	4770      	bx	lr

080022d4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80022d4:	8880      	ldrh	r0, [r0, #4]
 80022d6:	4770      	bx	lr

080022d8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80022d8:	7983      	ldrb	r3, [r0, #6]
 80022da:	8880      	ldrh	r0, [r0, #4]
 80022dc:	4418      	add	r0, r3
    }
 80022de:	b280      	uxth	r0, r0
 80022e0:	4770      	bx	lr

080022e2 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022e2:	79c0      	ldrb	r0, [r0, #7]
    }
 80022e4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022e8:	4770      	bx	lr

080022ea <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022ea:	79c0      	ldrb	r0, [r0, #7]
    }
 80022ec:	09c0      	lsrs	r0, r0, #7
 80022ee:	4770      	bx	lr

080022f0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022f0:	4770      	bx	lr

080022f2 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80022f2:	b510      	push	{r4, lr}
    }
 80022f4:	2108      	movs	r1, #8
    virtual ~TypedText()
 80022f6:	4604      	mov	r4, r0
    }
 80022f8:	f01a fcb2 	bl	801cc60 <_ZdlPvj>
 80022fc:	4620      	mov	r0, r4
 80022fe:	bd10      	pop	{r4, pc}

08002300 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002300:	4770      	bx	lr

08002302 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002302:	4770      	bx	lr

08002304 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002304:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002308:	6808      	ldr	r0, [r1, #0]
 800230a:	6849      	ldr	r1, [r1, #4]
 800230c:	c303      	stmia	r3!, {r0, r1}
    }
 800230e:	4770      	bx	lr

08002310 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002310:	4770      	bx	lr

08002312 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002312:	4770      	bx	lr

08002314 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002314:	6041      	str	r1, [r0, #4]
    }
 8002316:	4770      	bx	lr

08002318 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002318:	4770      	bx	lr
	...

0800231c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800231c:	4b06      	ldr	r3, [pc, #24]	; (8002338 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800231e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002322:	2300      	movs	r3, #0
 8002324:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002328:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800232c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002330:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 8002334:	4770      	bx	lr
 8002336:	bf00      	nop
 8002338:	080027c5 	.word	0x080027c5

0800233c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800233c:	2301      	movs	r3, #1
 800233e:	7203      	strb	r3, [r0, #8]
    }
 8002340:	4770      	bx	lr

08002342 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 8002344:	4770      	bx	lr

08002346 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8002346:	4603      	mov	r3, r0
 8002348:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 800234a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800234c:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 800234e:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002350:	d008      	beq.n	8002364 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x1e>

        switch (templateDirection)
        {
        case EAST:
        case WEST:
            d.moveRelative(calculatedValue, 0);
 8002352:	680a      	ldr	r2, [r1, #0]
 8002354:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 8002358:	6d54      	ldr	r4, [r2, #84]	; 0x54
 800235a:	2200      	movs	r2, #0
 800235c:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 800235e:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8002362:	4718      	bx	r3
    }
 8002364:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002368:	4770      	bx	lr

0800236a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 800236a:	4603      	mov	r3, r0
 800236c:	b410      	push	{r4}
        if (&d == snapshotPtr)
 800236e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002370:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002372:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002374:	d008      	beq.n	8002388 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(calculatedValue, 0);
 8002376:	680a      	ldr	r2, [r1, #0]
 8002378:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 800237c:	6d54      	ldr	r4, [r2, #84]	; 0x54
 800237e:	2200      	movs	r2, #0
 8002380:	4623      	mov	r3, r4
    }
 8002382:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8002386:	4718      	bx	r3
    }
 8002388:	f85d 4b04 	ldr.w	r4, [sp], #4
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
class SlideTransition : public Transition
 800238e:	4770      	bx	lr

08002390 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 8002390:	4770      	bx	lr

08002392 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002392:	4770      	bx	lr

08002394 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002394:	4770      	bx	lr
	...

08002398 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8002398:	4b04      	ldr	r3, [pc, #16]	; (80023ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x14>)
    virtual void initMoveDrawable(Drawable& d)
 800239a:	4608      	mov	r0, r1
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 800239c:	8819      	ldrh	r1, [r3, #0]
 800239e:	6803      	ldr	r3, [r0, #0]
 80023a0:	4249      	negs	r1, r1
 80023a2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80023a4:	2200      	movs	r2, #0
 80023a6:	b209      	sxth	r1, r1
 80023a8:	4718      	bx	r3
 80023aa:	bf00      	nop
 80023ac:	2000a800 	.word	0x2000a800

080023b0 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80023b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023b2:	68c2      	ldr	r2, [r0, #12]
 80023b4:	6844      	ldr	r4, [r0, #4]
 80023b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80023b8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80023ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80023be:	07d2      	lsls	r2, r2, #31
 80023c0:	bf48      	it	mi
 80023c2:	5962      	ldrmi	r2, [r4, r5]
 80023c4:	689b      	ldr	r3, [r3, #8]
    }
 80023c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023c8:	bf48      	it	mi
 80023ca:	58d3      	ldrmi	r3, [r2, r3]
 80023cc:	4718      	bx	r3

080023ce <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80023ce:	6843      	ldr	r3, [r0, #4]
 80023d0:	b12b      	cbz	r3, 80023de <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x10>
 80023d2:	6883      	ldr	r3, [r0, #8]
 80023d4:	b92b      	cbnz	r3, 80023e2 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x14>
 80023d6:	68c0      	ldr	r0, [r0, #12]
 80023d8:	f000 0001 	and.w	r0, r0, #1
 80023dc:	4770      	bx	lr
 80023de:	4618      	mov	r0, r3
 80023e0:	4770      	bx	lr
 80023e2:	2001      	movs	r0, #1
    }
 80023e4:	4770      	bx	lr
	...

080023e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80023e8:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 80023ea:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80023ec:	4902      	ldr	r1, [pc, #8]	; (80023f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 80023ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80023f0:	f9b1 1000 	ldrsh.w	r1, [r1]
 80023f4:	2200      	movs	r2, #0
 80023f6:	4718      	bx	r3
 80023f8:	2000a800 	.word	0x2000a800

080023fc <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80023fc:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023fe:	68c2      	ldr	r2, [r0, #12]
 8002400:	6844      	ldr	r4, [r0, #4]
 8002402:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002404:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002406:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800240a:	07d2      	lsls	r2, r2, #31
 800240c:	bf48      	it	mi
 800240e:	5962      	ldrmi	r2, [r4, r5]
 8002410:	689b      	ldr	r3, [r3, #8]
    }
 8002412:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002414:	bf48      	it	mi
 8002416:	58d3      	ldrmi	r3, [r2, r3]
 8002418:	4718      	bx	r3

0800241a <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800241a:	6843      	ldr	r3, [r0, #4]
 800241c:	b12b      	cbz	r3, 800242a <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 800241e:	6883      	ldr	r3, [r0, #8]
 8002420:	b92b      	cbnz	r3, 800242e <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002422:	68c0      	ldr	r0, [r0, #12]
 8002424:	f000 0001 	and.w	r0, r0, #1
 8002428:	4770      	bx	lr
 800242a:	4618      	mov	r0, r3
 800242c:	4770      	bx	lr
 800242e:	2001      	movs	r0, #1
    }
 8002430:	4770      	bx	lr

08002432 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002432:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002434:	68c2      	ldr	r2, [r0, #12]
 8002436:	6841      	ldr	r1, [r0, #4]
 8002438:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800243a:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800243c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002440:	07d2      	lsls	r2, r2, #31
 8002442:	bf48      	it	mi
 8002444:	590a      	ldrmi	r2, [r1, r4]
 8002446:	689b      	ldr	r3, [r3, #8]
    }
 8002448:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800244c:	bf48      	it	mi
 800244e:	58d3      	ldrmi	r3, [r2, r3]
 8002450:	4718      	bx	r3

08002452 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002452:	6843      	ldr	r3, [r0, #4]
 8002454:	b12b      	cbz	r3, 8002462 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002456:	6883      	ldr	r3, [r0, #8]
 8002458:	b92b      	cbnz	r3, 8002466 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800245a:	68c0      	ldr	r0, [r0, #12]
 800245c:	f000 0001 	and.w	r0, r0, #1
 8002460:	4770      	bx	lr
 8002462:	4618      	mov	r0, r3
 8002464:	4770      	bx	lr
 8002466:	2001      	movs	r0, #1
    }
 8002468:	4770      	bx	lr

0800246a <_ZN8touchgfx12NoTransitionD0Ev>:
 800246a:	b510      	push	{r4, lr}
 800246c:	210c      	movs	r1, #12
 800246e:	4604      	mov	r4, r0
 8002470:	f01a fbf6 	bl	801cc60 <_ZdlPvj>
 8002474:	4620      	mov	r0, r4
 8002476:	bd10      	pop	{r4, pc}

08002478 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002478:	b510      	push	{r4, lr}
 800247a:	2110      	movs	r1, #16
 800247c:	4604      	mov	r4, r0
 800247e:	f01a fbef 	bl	801cc60 <_ZdlPvj>
 8002482:	4620      	mov	r0, r4
 8002484:	bd10      	pop	{r4, pc}

08002486 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002486:	b510      	push	{r4, lr}
 8002488:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800248c:	4604      	mov	r4, r0
 800248e:	f01a fbe7 	bl	801cc60 <_ZdlPvj>
 8002492:	4620      	mov	r0, r4
 8002494:	bd10      	pop	{r4, pc}

08002496 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
class SlideTransition : public Transition
 8002496:	b510      	push	{r4, lr}
 8002498:	2154      	movs	r1, #84	; 0x54
 800249a:	4604      	mov	r4, r0
 800249c:	f01a fbe0 	bl	801cc60 <_ZdlPvj>
 80024a0:	4620      	mov	r0, r4
 80024a2:	bd10      	pop	{r4, pc}

080024a4 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80024a4:	b510      	push	{r4, lr}
 80024a6:	2110      	movs	r1, #16
 80024a8:	4604      	mov	r4, r0
 80024aa:	f01a fbd9 	bl	801cc60 <_ZdlPvj>
 80024ae:	4620      	mov	r0, r4
 80024b0:	bd10      	pop	{r4, pc}

080024b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 80024b2:	b510      	push	{r4, lr}
 80024b4:	2154      	movs	r1, #84	; 0x54
 80024b6:	4604      	mov	r4, r0
 80024b8:	f01a fbd2 	bl	801cc60 <_ZdlPvj>
 80024bc:	4620      	mov	r0, r4
 80024be:	bd10      	pop	{r4, pc}

080024c0 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 80024c0:	b510      	push	{r4, lr}
 80024c2:	2110      	movs	r1, #16
 80024c4:	4604      	mov	r4, r0
 80024c6:	f01a fbcb 	bl	801cc60 <_ZdlPvj>
 80024ca:	4620      	mov	r0, r4
 80024cc:	bd10      	pop	{r4, pc}

080024ce <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80024ce:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80024d0:	f00b fdd2 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80024d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80024d8:	f00c b996 	b.w	800e808 <_ZN8touchgfx11Application10invalidateEv>

080024dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80024dc:	4b05      	ldr	r3, [pc, #20]	; (80024f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 80024de:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80024e0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80024e2:	b12b      	cbz	r3, 80024f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 80024e4:	6840      	ldr	r0, [r0, #4]
 80024e6:	b118      	cbz	r0, 80024f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80024e8:	6803      	ldr	r3, [r0, #0]
 80024ea:	310c      	adds	r1, #12
 80024ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80024ee:	4718      	bx	r3
    }
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	2000a80b 	.word	0x2000a80b

080024f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80024f8:	4b05      	ldr	r3, [pc, #20]	; (8002510 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80024fa:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80024fc:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80024fe:	b12b      	cbz	r3, 800250c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8002500:	6840      	ldr	r0, [r0, #4]
 8002502:	b118      	cbz	r0, 800250c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8002504:	6803      	ldr	r3, [r0, #0]
 8002506:	310c      	adds	r1, #12
 8002508:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800250a:	4718      	bx	r3
    }
 800250c:	4770      	bx	lr
 800250e:	bf00      	nop
 8002510:	2000a80b 	.word	0x2000a80b

08002514 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002514:	4b1f      	ldr	r3, [pc, #124]	; (8002594 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>)
 8002516:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8002518:	b510      	push	{r4, lr}
 800251a:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 800251c:	b913      	cbnz	r3, 8002524 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x10>
            done = true;
 800251e:	2301      	movs	r3, #1
 8002520:	7203      	strb	r3, [r0, #8]
    }
 8002522:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002524:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8002528:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 800252c:	3001      	adds	r0, #1
 800252e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002530:	4298      	cmp	r0, r3
        animationCounter++;
 8002532:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8002536:	d824      	bhi.n	8002582 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002538:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 800253c:	2100      	movs	r1, #0
 800253e:	f00d f97b 	bl	800f838 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002542:	f010 0201 	ands.w	r2, r0, #1
 8002546:	b283      	uxth	r3, r0
 8002548:	d021      	beq.n	800258e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800254a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800254e:	2800      	cmp	r0, #0
 8002550:	bfd8      	it	le
 8002552:	460a      	movle	r2, r1
 8002554:	4413      	add	r3, r2
 8002556:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 800255a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800255e:	8a23      	ldrh	r3, [r4, #16]
 8002560:	1ac9      	subs	r1, r1, r3
 8002562:	b209      	sxth	r1, r1
 8002564:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 8002568:	f104 000c 	add.w	r0, r4, #12
 800256c:	2200      	movs	r2, #0
 800256e:	f00c fd91 	bl	800f094 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002572:	6860      	ldr	r0, [r4, #4]
 8002574:	6803      	ldr	r3, [r0, #0]
 8002576:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800257a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 800257c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002580:	4718      	bx	r3
            done = true;
 8002582:	2301      	movs	r3, #1
 8002584:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002586:	2300      	movs	r3, #0
 8002588:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 800258c:	e7c9      	b.n	8002522 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800258e:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8002592:	e7e2      	b.n	800255a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x46>
 8002594:	2000a80b 	.word	0x2000a80b

08002598 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002598:	4b1f      	ldr	r3, [pc, #124]	; (8002618 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>)
 800259a:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 800259c:	b510      	push	{r4, lr}
 800259e:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80025a0:	b913      	cbnz	r3, 80025a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 80025a2:	2301      	movs	r3, #1
 80025a4:	7203      	strb	r3, [r0, #8]
    }
 80025a6:	bd10      	pop	{r4, pc}
        animationCounter++;
 80025a8:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80025ac:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 80025b0:	3001      	adds	r0, #1
 80025b2:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 80025b4:	4298      	cmp	r0, r3
        animationCounter++;
 80025b6:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80025ba:	d824      	bhi.n	8002606 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80025bc:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 80025c0:	2100      	movs	r1, #0
 80025c2:	f00d f939 	bl	800f838 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80025c6:	f010 0201 	ands.w	r2, r0, #1
 80025ca:	b283      	uxth	r3, r0
 80025cc:	d021      	beq.n	8002612 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80025ce:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80025d2:	2800      	cmp	r0, #0
 80025d4:	bfd8      	it	le
 80025d6:	460a      	movle	r2, r1
 80025d8:	4413      	add	r3, r2
 80025da:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 80025de:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 80025e2:	8a23      	ldrh	r3, [r4, #16]
 80025e4:	1ac9      	subs	r1, r1, r3
 80025e6:	b209      	sxth	r1, r1
 80025e8:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 80025ec:	f104 000c 	add.w	r0, r4, #12
 80025f0:	2200      	movs	r2, #0
 80025f2:	f00c fd4f 	bl	800f094 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 80025f6:	6860      	ldr	r0, [r4, #4]
 80025f8:	6803      	ldr	r3, [r0, #0]
 80025fa:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80025fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8002600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002604:	4718      	bx	r3
            done = true;
 8002606:	2301      	movs	r3, #1
 8002608:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800260a:	2300      	movs	r3, #0
 800260c:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8002610:	e7c9      	b.n	80025a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002612:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8002616:	e7e2      	b.n	80025de <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
 8002618:	2000a80b 	.word	0x2000a80b

0800261c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800261c:	b510      	push	{r4, lr}
 800261e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002620:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002624:	b158      	cbz	r0, 800263e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002626:	6803      	ldr	r3, [r0, #0]
 8002628:	68db      	ldr	r3, [r3, #12]
 800262a:	4798      	blx	r3
 800262c:	b138      	cbz	r0, 800263e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800262e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002632:	6803      	ldr	r3, [r0, #0]
 8002634:	689b      	ldr	r3, [r3, #8]
 8002636:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002638:	2300      	movs	r3, #0
 800263a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800263e:	bd10      	pop	{r4, pc}

08002640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
    virtual void init()
 8002640:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002642:	4b0c      	ldr	r3, [pc, #48]	; (8002674 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x34>)
 8002644:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002646:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002648:	b18b      	cbz	r3, 800266e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800264a:	4b0b      	ldr	r3, [pc, #44]	; (8002678 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>)
 800264c:	221c      	movs	r2, #28
 800264e:	e9cd 3000 	strd	r3, r0, [sp]
 8002652:	2301      	movs	r3, #1
 8002654:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002658:	6840      	ldr	r0, [r0, #4]
 800265a:	6803      	ldr	r3, [r0, #0]
 800265c:	4669      	mov	r1, sp
 800265e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002660:	4798      	blx	r3
            screenContainer->add(snapshot);
 8002662:	6860      	ldr	r0, [r4, #4]
 8002664:	6803      	ldr	r3, [r0, #0]
 8002666:	f104 010c 	add.w	r1, r4, #12
 800266a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800266c:	4798      	blx	r3
    }
 800266e:	b004      	add	sp, #16
 8002670:	bd10      	pop	{r4, pc}
 8002672:	bf00      	nop
 8002674:	2000a80b 	.word	0x2000a80b
 8002678:	0801eef8 	.word	0x0801eef8

0800267c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800267c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 800267e:	4b0c      	ldr	r3, [pc, #48]	; (80026b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8002680:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002682:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002684:	b18b      	cbz	r3, 80026aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
 8002686:	4b0b      	ldr	r3, [pc, #44]	; (80026b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
 8002688:	221c      	movs	r2, #28
 800268a:	e9cd 3000 	strd	r3, r0, [sp]
 800268e:	2301      	movs	r3, #1
 8002690:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002694:	6840      	ldr	r0, [r0, #4]
 8002696:	6803      	ldr	r3, [r0, #0]
 8002698:	4669      	mov	r1, sp
 800269a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800269c:	4798      	blx	r3
            screenContainer->add(snapshot);
 800269e:	6860      	ldr	r0, [r4, #4]
 80026a0:	6803      	ldr	r3, [r0, #0]
 80026a2:	f104 010c 	add.w	r1, r4, #12
 80026a6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80026a8:	4798      	blx	r3
    }
 80026aa:	b004      	add	sp, #16
 80026ac:	bd10      	pop	{r4, pc}
 80026ae:	bf00      	nop
 80026b0:	2000a80b 	.word	0x2000a80b
 80026b4:	0801eeb4 	.word	0x0801eeb4

080026b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80026b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ba:	4604      	mov	r4, r0
 80026bc:	4617      	mov	r7, r2
 80026be:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80026c0:	f00b fcfa 	bl	800e0b8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80026c4:	4b10      	ldr	r3, [pc, #64]	; (8002708 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80026c6:	2500      	movs	r5, #0
      model(m)
 80026c8:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80026cc:	4e0f      	ldr	r6, [pc, #60]	; (800270c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80026ce:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80026d0:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80026d4:	4b0e      	ldr	r3, [pc, #56]	; (8002710 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80026d6:	6830      	ldr	r0, [r6, #0]
 80026d8:	6023      	str	r3, [r4, #0]
 80026da:	4b0e      	ldr	r3, [pc, #56]	; (8002714 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80026dc:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80026e0:	6803      	ldr	r3, [r0, #0]
 80026e2:	4629      	mov	r1, r5
 80026e4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80026e6:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80026ea:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80026ec:	4628      	mov	r0, r5
 80026ee:	f001 f9c7 	bl	8003a80 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80026f2:	6833      	ldr	r3, [r6, #0]
 80026f4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80026f8:	b10a      	cbz	r2, 80026fe <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80026fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80026fc:	b900      	cbnz	r0, 8002700 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 80026fe:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002700:	f013 f95d 	bl	80159be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002704:	4620      	mov	r0, r4
 8002706:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002708:	2000a858 	.word	0x2000a858
 800270c:	2000a80c 	.word	0x2000a80c
 8002710:	0801ee44 	.word	0x0801ee44
 8002714:	0801ee2c 	.word	0x0801ee2c

08002718 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002718:	4b06      	ldr	r3, [pc, #24]	; (8002734 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 800271a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800271e:	2300      	movs	r3, #0
 8002720:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002724:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002728:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800272c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002730:	4770      	bx	lr
 8002732:	bf00      	nop
 8002734:	080027c5 	.word	0x080027c5

08002738 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv>:
 8002738:	4b06      	ldr	r3, [pc, #24]	; (8002754 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv+0x1c>)
 800273a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800273e:	2300      	movs	r3, #0
 8002740:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
}

void FrontendApplicationBase::gotoMainScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002744:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002748:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800274c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002750:	4770      	bx	lr
 8002752:	bf00      	nop
 8002754:	08002ac9 	.word	0x08002ac9

08002758 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionEastEv>:
 8002758:	4b06      	ldr	r3, [pc, #24]	; (8002774 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionEastEv+0x1c>)
 800275a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800275e:	2300      	movs	r3, #0
 8002760:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
}

void FrontendApplicationBase::gotoMainScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002764:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002768:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800276c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002770:	4770      	bx	lr
 8002772:	bf00      	nop
 8002774:	08002dc1 	.word	0x08002dc1

08002778 <_ZN23FrontendApplicationBase35gotoManualScreenSlideTransitionEastEv>:
 8002778:	4b06      	ldr	r3, [pc, #24]	; (8002794 <_ZN23FrontendApplicationBase35gotoManualScreenSlideTransitionEastEv+0x1c>)
 800277a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800277e:	2300      	movs	r3, #0
 8002780:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Manual

void FrontendApplicationBase::gotoManualScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoManualScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002784:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002788:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800278c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002790:	4770      	bx	lr
 8002792:	bf00      	nop
 8002794:	08002c81 	.word	0x08002c81

08002798 <_ZN23FrontendApplicationBase38gotoAutomaticScreenSlideTransitionWestEv>:
 8002798:	4b06      	ldr	r3, [pc, #24]	; (80027b4 <_ZN23FrontendApplicationBase38gotoAutomaticScreenSlideTransitionWestEv+0x1c>)
 800279a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800279e:	2300      	movs	r3, #0
 80027a0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Automatic

void FrontendApplicationBase::gotoAutomaticScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoAutomaticScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80027a4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80027a8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80027ac:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80027b0:	4770      	bx	lr
 80027b2:	bf00      	nop
 80027b4:	0800298d 	.word	0x0800298d

080027b8 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80027b8:	6803      	ldr	r3, [r0, #0]
 80027ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027bc:	4718      	bx	r3

080027be <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
 80027be:	6803      	ldr	r3, [r0, #0]
 80027c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027c2:	4718      	bx	r3

080027c4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 80027c4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80027c8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80027cc:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80027ce:	68a8      	ldr	r0, [r5, #8]
 80027d0:	6803      	ldr	r3, [r0, #0]
 80027d2:	6a1b      	ldr	r3, [r3, #32]
 80027d4:	4798      	blx	r3
 80027d6:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 80027da:	d205      	bcs.n	80027e8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
 80027dc:	4b44      	ldr	r3, [pc, #272]	; (80028f0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 80027de:	4a45      	ldr	r2, [pc, #276]	; (80028f4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 80027e0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80027e2:	4845      	ldr	r0, [pc, #276]	; (80028f8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 80027e4:	f01a fa6a 	bl	801ccbc <__assert_func>
 80027e8:	6868      	ldr	r0, [r5, #4]
 80027ea:	6803      	ldr	r3, [r0, #0]
 80027ec:	6a1b      	ldr	r3, [r3, #32]
 80027ee:	4798      	blx	r3
 80027f0:	280f      	cmp	r0, #15
 80027f2:	d803      	bhi.n	80027fc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x38>
 80027f4:	4b41      	ldr	r3, [pc, #260]	; (80028fc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 80027f6:	4a3f      	ldr	r2, [pc, #252]	; (80028f4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 80027f8:	21a4      	movs	r1, #164	; 0xa4
 80027fa:	e7f2      	b.n	80027e2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80027fc:	68e8      	ldr	r0, [r5, #12]
 80027fe:	6803      	ldr	r3, [r0, #0]
 8002800:	6a1b      	ldr	r3, [r3, #32]
 8002802:	4798      	blx	r3
 8002804:	280b      	cmp	r0, #11
 8002806:	d803      	bhi.n	8002810 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4c>
 8002808:	4b3d      	ldr	r3, [pc, #244]	; (8002900 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 800280a:	4a3a      	ldr	r2, [pc, #232]	; (80028f4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 800280c:	21a5      	movs	r1, #165	; 0xa5
 800280e:	e7e8      	b.n	80027e2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002810:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8002908 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002814:	f00b fc30 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 8002818:	f00b fc34 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800281c:	f8d9 0000 	ldr.w	r0, [r9]
 8002820:	b110      	cbz	r0, 8002828 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002822:	6803      	ldr	r3, [r0, #0]
 8002824:	68db      	ldr	r3, [r3, #12]
 8002826:	4798      	blx	r3
    if (*currentTrans)
 8002828:	f8d9 0000 	ldr.w	r0, [r9]
 800282c:	b110      	cbz	r0, 8002834 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800282e:	6803      	ldr	r3, [r0, #0]
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	4798      	blx	r3
    if (*currentScreen)
 8002834:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800290c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>
 8002838:	f8d8 0000 	ldr.w	r0, [r8]
 800283c:	b110      	cbz	r0, 8002844 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800283e:	6803      	ldr	r3, [r0, #0]
 8002840:	695b      	ldr	r3, [r3, #20]
 8002842:	4798      	blx	r3
    if (*currentPresenter)
 8002844:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002848:	b110      	cbz	r0, 8002850 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800284a:	6803      	ldr	r3, [r0, #0]
 800284c:	685b      	ldr	r3, [r3, #4]
 800284e:	4798      	blx	r3
    if (*currentScreen)
 8002850:	f8d8 0000 	ldr.w	r0, [r8]
 8002854:	b110      	cbz	r0, 800285c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002856:	6803      	ldr	r3, [r0, #0]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	4798      	blx	r3
    if (*currentPresenter)
 800285c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002860:	b110      	cbz	r0, 8002868 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002862:	6803      	ldr	r3, [r0, #0]
 8002864:	689b      	ldr	r3, [r3, #8]
 8002866:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002868:	68e8      	ldr	r0, [r5, #12]
 800286a:	6803      	ldr	r3, [r0, #0]
 800286c:	2100      	movs	r1, #0
 800286e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002870:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002872:	f04f 0b00 	mov.w	fp, #0
 8002876:	4b23      	ldr	r3, [pc, #140]	; (8002904 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 8002878:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800287a:	4659      	mov	r1, fp
 800287c:	4604      	mov	r4, r0
 800287e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002882:	f880 b008 	strb.w	fp, [r0, #8]
 8002886:	68a8      	ldr	r0, [r5, #8]
 8002888:	f7ff ff96 	bl	80027b8 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 800288c:	4606      	mov	r6, r0
 800288e:	f001 f9cd 	bl	8003c2c <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002892:	6868      	ldr	r0, [r5, #4]
 8002894:	4659      	mov	r1, fp
 8002896:	f7ff ff92 	bl	80027be <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 800289a:	4631      	mov	r1, r6
 800289c:	4605      	mov	r5, r0
 800289e:	f001 f9ab 	bl	8003bf8 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 80028a2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80028a6:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80028aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80028ae:	b1e5      	cbz	r5, 80028ea <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x126>
 80028b0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80028b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80028b6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80028b8:	f8c5 a008 	str.w	sl, [r5, #8]
 80028bc:	4630      	mov	r0, r6
 80028be:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80028c0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80028c2:	4798      	blx	r3
    newPresenter->activate();
 80028c4:	682b      	ldr	r3, [r5, #0]
 80028c6:	4628      	mov	r0, r5
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80028cc:	4621      	mov	r1, r4
 80028ce:	4630      	mov	r0, r6
 80028d0:	f00c ffac 	bl	800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80028d4:	6823      	ldr	r3, [r4, #0]
 80028d6:	4620      	mov	r0, r4
 80028d8:	691b      	ldr	r3, [r3, #16]
 80028da:	4798      	blx	r3
    newTransition->invalidate();
 80028dc:	6823      	ldr	r3, [r4, #0]
 80028de:	695b      	ldr	r3, [r3, #20]
 80028e0:	4620      	mov	r0, r4
}
 80028e2:	b001      	add	sp, #4
 80028e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028e8:	4718      	bx	r3
    model->bind(newPresenter);
 80028ea:	462b      	mov	r3, r5
 80028ec:	e7e1      	b.n	80028b2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xee>
 80028ee:	bf00      	nop
 80028f0:	0801e6b8 	.word	0x0801e6b8
 80028f4:	0801e746 	.word	0x0801e746
 80028f8:	0801e844 	.word	0x0801e844
 80028fc:	0801e88b 	.word	0x0801e88b
 8002900:	0801e92e 	.word	0x0801e92e
 8002904:	0801ee90 	.word	0x0801ee90
 8002908:	2000a84c 	.word	0x2000a84c
 800290c:	2000a848 	.word	0x2000a848

08002910 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002910:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8002912:	4605      	mov	r5, r0
 8002914:	2600      	movs	r6, #0
 8002916:	4b18      	ldr	r3, [pc, #96]	; (8002978 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x68>)
 8002918:	6046      	str	r6, [r0, #4]
 800291a:	7206      	strb	r6, [r0, #8]
 800291c:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002920:	4604      	mov	r4, r0
          calculatedValue(0)
 8002922:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002924:	460f      	mov	r7, r1
          calculatedValue(0)
 8002926:	f008 fef3 	bl	800b710 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800292a:	4b14      	ldr	r3, [pc, #80]	; (800297c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x6c>)
 800292c:	63a5      	str	r5, [r4, #56]	; 0x38
 800292e:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8002932:	2220      	movs	r2, #32
 8002934:	2301      	movs	r3, #1
 8002936:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 800293a:	4b11      	ldr	r3, [pc, #68]	; (8002980 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x70>)
          calculatedValue(0)
 800293c:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8002940:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8002942:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8002946:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 800294a:	b18b      	cbz	r3, 8002970 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800294c:	4b0d      	ldr	r3, [pc, #52]	; (8002984 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x74>)
 800294e:	4f0e      	ldr	r7, [pc, #56]	; (8002988 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x78>)
 8002950:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002954:	9300      	str	r3, [sp, #0]
 8002956:	f9b7 3000 	ldrsh.w	r3, [r7]
 800295a:	4632      	mov	r2, r6
 800295c:	4631      	mov	r1, r6
 800295e:	4628      	mov	r0, r5
 8002960:	f7ff fbff 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8002964:	4628      	mov	r0, r5
 8002966:	f008 fe4e 	bl	800b606 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = HAL::DISPLAY_WIDTH;
 800296a:	883b      	ldrh	r3, [r7, #0]
 800296c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8002970:	4620      	mov	r0, r4
 8002972:	b003      	add	sp, #12
 8002974:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002976:	bf00      	nop
 8002978:	0801ef10 	.word	0x0801ef10
 800297c:	0801eef8 	.word	0x0801eef8
 8002980:	2000a80b 	.word	0x2000a80b
 8002984:	2000a802 	.word	0x2000a802
 8002988:	2000a800 	.word	0x2000a800

0800298c <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv>:

void FrontendApplicationBase::gotoAutomaticScreenSlideTransitionWestImpl()
{
 800298c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<AutomaticView, AutomaticPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002990:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002994:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002996:	68a0      	ldr	r0, [r4, #8]
 8002998:	6803      	ldr	r3, [r0, #0]
 800299a:	6a1b      	ldr	r3, [r3, #32]
 800299c:	4798      	blx	r3
 800299e:	28e3      	cmp	r0, #227	; 0xe3
 80029a0:	d805      	bhi.n	80029ae <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x22>
 80029a2:	4b42      	ldr	r3, [pc, #264]	; (8002aac <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x120>)
 80029a4:	4a42      	ldr	r2, [pc, #264]	; (8002ab0 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x124>)
 80029a6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80029a8:	4842      	ldr	r0, [pc, #264]	; (8002ab4 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x128>)
 80029aa:	f01a f987 	bl	801ccbc <__assert_func>
 80029ae:	6860      	ldr	r0, [r4, #4]
 80029b0:	6803      	ldr	r3, [r0, #0]
 80029b2:	6a1b      	ldr	r3, [r3, #32]
 80029b4:	4798      	blx	r3
 80029b6:	280f      	cmp	r0, #15
 80029b8:	d803      	bhi.n	80029c2 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x36>
 80029ba:	4b3f      	ldr	r3, [pc, #252]	; (8002ab8 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x12c>)
 80029bc:	4a3c      	ldr	r2, [pc, #240]	; (8002ab0 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x124>)
 80029be:	21a4      	movs	r1, #164	; 0xa4
 80029c0:	e7f2      	b.n	80029a8 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80029c2:	68e0      	ldr	r0, [r4, #12]
 80029c4:	6803      	ldr	r3, [r0, #0]
 80029c6:	6a1b      	ldr	r3, [r3, #32]
 80029c8:	4798      	blx	r3
 80029ca:	2853      	cmp	r0, #83	; 0x53
 80029cc:	d803      	bhi.n	80029d6 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x4a>
 80029ce:	4b3b      	ldr	r3, [pc, #236]	; (8002abc <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x130>)
 80029d0:	4a37      	ldr	r2, [pc, #220]	; (8002ab0 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x124>)
 80029d2:	21a5      	movs	r1, #165	; 0xa5
 80029d4:	e7e8      	b.n	80029a8 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x1c>
    if (*currentTrans)
 80029d6:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002ac0 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 80029da:	f00b fb4d 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 80029de:	f00b fb51 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80029e2:	f8d9 0000 	ldr.w	r0, [r9]
 80029e6:	b110      	cbz	r0, 80029ee <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x62>
        (*currentTrans)->tearDown();
 80029e8:	6803      	ldr	r3, [r0, #0]
 80029ea:	68db      	ldr	r3, [r3, #12]
 80029ec:	4798      	blx	r3
    if (*currentTrans)
 80029ee:	f8d9 0000 	ldr.w	r0, [r9]
 80029f2:	b110      	cbz	r0, 80029fa <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x6e>
        (*currentTrans)->~Transition();
 80029f4:	6803      	ldr	r3, [r0, #0]
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4798      	blx	r3
    if (*currentScreen)
 80029fa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002ac4 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x138>
 80029fe:	f8d8 0000 	ldr.w	r0, [r8]
 8002a02:	b110      	cbz	r0, 8002a0a <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 8002a04:	6803      	ldr	r3, [r0, #0]
 8002a06:	695b      	ldr	r3, [r3, #20]
 8002a08:	4798      	blx	r3
    if (*currentPresenter)
 8002a0a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002a0e:	b110      	cbz	r0, 8002a16 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8002a10:	6803      	ldr	r3, [r0, #0]
 8002a12:	685b      	ldr	r3, [r3, #4]
 8002a14:	4798      	blx	r3
    if (*currentScreen)
 8002a16:	f8d8 0000 	ldr.w	r0, [r8]
 8002a1a:	b110      	cbz	r0, 8002a22 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x96>
        (*currentScreen)->~Screen();
 8002a1c:	6803      	ldr	r3, [r0, #0]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	4798      	blx	r3
    if (*currentPresenter)
 8002a22:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002a26:	b110      	cbz	r0, 8002a2e <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8002a28:	6803      	ldr	r3, [r0, #0]
 8002a2a:	689b      	ldr	r3, [r3, #8]
 8002a2c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a2e:	68e0      	ldr	r0, [r4, #12]
 8002a30:	6803      	ldr	r3, [r0, #0]
 8002a32:	2100      	movs	r1, #0
 8002a34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a36:	4798      	blx	r3
 8002a38:	2114      	movs	r1, #20
 8002a3a:	4605      	mov	r5, r0
 8002a3c:	f7ff ff68 	bl	8002910 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a40:	68a0      	ldr	r0, [r4, #8]
 8002a42:	6803      	ldr	r3, [r0, #0]
 8002a44:	2100      	movs	r1, #0
 8002a46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a48:	4798      	blx	r3
 8002a4a:	4606      	mov	r6, r0
 8002a4c:	f001 f89e 	bl	8003b8c <_ZN13AutomaticViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a50:	6860      	ldr	r0, [r4, #4]
 8002a52:	6803      	ldr	r3, [r0, #0]
 8002a54:	2100      	movs	r1, #0
 8002a56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a58:	4798      	blx	r3
 8002a5a:	4631      	mov	r1, r6
 8002a5c:	4604      	mov	r4, r0
 8002a5e:	f001 f87b 	bl	8003b58 <_ZN18AutomaticPresenterC1ER13AutomaticView>
    *currentTrans = newTransition;
 8002a62:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002a66:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002a6a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002a6e:	b1dc      	cbz	r4, 8002aa8 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0x11c>
 8002a70:	1d23      	adds	r3, r4, #4
 8002a72:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a76:	6833      	ldr	r3, [r6, #0]
 8002a78:	f8c4 a008 	str.w	sl, [r4, #8]
 8002a7c:	4630      	mov	r0, r6
 8002a7e:	68db      	ldr	r3, [r3, #12]
 8002a80:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002a82:	4798      	blx	r3
    newPresenter->activate();
 8002a84:	6823      	ldr	r3, [r4, #0]
 8002a86:	4620      	mov	r0, r4
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a8c:	4629      	mov	r1, r5
 8002a8e:	4630      	mov	r0, r6
 8002a90:	f00c fecc 	bl	800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a94:	682b      	ldr	r3, [r5, #0]
 8002a96:	4628      	mov	r0, r5
 8002a98:	691b      	ldr	r3, [r3, #16]
 8002a9a:	4798      	blx	r3
    newTransition->invalidate();
 8002a9c:	682b      	ldr	r3, [r5, #0]
 8002a9e:	4628      	mov	r0, r5
 8002aa0:	695b      	ldr	r3, [r3, #20]
}
 8002aa2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002aa6:	4718      	bx	r3
    model->bind(newPresenter);
 8002aa8:	4623      	mov	r3, r4
 8002aaa:	e7e2      	b.n	8002a72 <_ZN23FrontendApplicationBase42gotoAutomaticScreenSlideTransitionWestImplEv+0xe6>
 8002aac:	0801e6b8 	.word	0x0801e6b8
 8002ab0:	0801e9d1 	.word	0x0801e9d1
 8002ab4:	0801e844 	.word	0x0801e844
 8002ab8:	0801e88b 	.word	0x0801e88b
 8002abc:	0801e92e 	.word	0x0801e92e
 8002ac0:	2000a84c 	.word	0x2000a84c
 8002ac4:	2000a848 	.word	0x2000a848

08002ac8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv>:
{
 8002ac8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002acc:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002ad0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002ad2:	68a0      	ldr	r0, [r4, #8]
 8002ad4:	6803      	ldr	r3, [r0, #0]
 8002ad6:	6a1b      	ldr	r3, [r3, #32]
 8002ad8:	4798      	blx	r3
 8002ada:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8002ade:	d205      	bcs.n	8002aec <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x24>
 8002ae0:	4b41      	ldr	r3, [pc, #260]	; (8002be8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x120>)
 8002ae2:	4a42      	ldr	r2, [pc, #264]	; (8002bec <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x124>)
 8002ae4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ae6:	4842      	ldr	r0, [pc, #264]	; (8002bf0 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x128>)
 8002ae8:	f01a f8e8 	bl	801ccbc <__assert_func>
 8002aec:	6860      	ldr	r0, [r4, #4]
 8002aee:	6803      	ldr	r3, [r0, #0]
 8002af0:	6a1b      	ldr	r3, [r3, #32]
 8002af2:	4798      	blx	r3
 8002af4:	280f      	cmp	r0, #15
 8002af6:	d803      	bhi.n	8002b00 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x38>
 8002af8:	4b3e      	ldr	r3, [pc, #248]	; (8002bf4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x12c>)
 8002afa:	4a3c      	ldr	r2, [pc, #240]	; (8002bec <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x124>)
 8002afc:	21a4      	movs	r1, #164	; 0xa4
 8002afe:	e7f2      	b.n	8002ae6 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b00:	68e0      	ldr	r0, [r4, #12]
 8002b02:	6803      	ldr	r3, [r0, #0]
 8002b04:	6a1b      	ldr	r3, [r3, #32]
 8002b06:	4798      	blx	r3
 8002b08:	2853      	cmp	r0, #83	; 0x53
 8002b0a:	d803      	bhi.n	8002b14 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x4c>
 8002b0c:	4b3a      	ldr	r3, [pc, #232]	; (8002bf8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x130>)
 8002b0e:	4a37      	ldr	r2, [pc, #220]	; (8002bec <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x124>)
 8002b10:	21a5      	movs	r1, #165	; 0xa5
 8002b12:	e7e8      	b.n	8002ae6 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1e>
    if (*currentTrans)
 8002b14:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002bfc <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8002b18:	f00b faae 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 8002b1c:	f00b fab2 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002b20:	f8d9 0000 	ldr.w	r0, [r9]
 8002b24:	b110      	cbz	r0, 8002b2c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x64>
        (*currentTrans)->tearDown();
 8002b26:	6803      	ldr	r3, [r0, #0]
 8002b28:	68db      	ldr	r3, [r3, #12]
 8002b2a:	4798      	blx	r3
    if (*currentTrans)
 8002b2c:	f8d9 0000 	ldr.w	r0, [r9]
 8002b30:	b110      	cbz	r0, 8002b38 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x70>
        (*currentTrans)->~Transition();
 8002b32:	6803      	ldr	r3, [r0, #0]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	4798      	blx	r3
    if (*currentScreen)
 8002b38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8002c00 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x138>
 8002b3c:	f8d8 0000 	ldr.w	r0, [r8]
 8002b40:	b110      	cbz	r0, 8002b48 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002b42:	6803      	ldr	r3, [r0, #0]
 8002b44:	695b      	ldr	r3, [r3, #20]
 8002b46:	4798      	blx	r3
    if (*currentPresenter)
 8002b48:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002b4c:	b110      	cbz	r0, 8002b54 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002b4e:	6803      	ldr	r3, [r0, #0]
 8002b50:	685b      	ldr	r3, [r3, #4]
 8002b52:	4798      	blx	r3
    if (*currentScreen)
 8002b54:	f8d8 0000 	ldr.w	r0, [r8]
 8002b58:	b110      	cbz	r0, 8002b60 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x98>
        (*currentScreen)->~Screen();
 8002b5a:	6803      	ldr	r3, [r0, #0]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	4798      	blx	r3
    if (*currentPresenter)
 8002b60:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002b64:	b110      	cbz	r0, 8002b6c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002b66:	6803      	ldr	r3, [r0, #0]
 8002b68:	689b      	ldr	r3, [r3, #8]
 8002b6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002b6c:	68e0      	ldr	r0, [r4, #12]
 8002b6e:	6803      	ldr	r3, [r0, #0]
 8002b70:	2100      	movs	r1, #0
 8002b72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b74:	4798      	blx	r3
 8002b76:	2114      	movs	r1, #20
 8002b78:	4605      	mov	r5, r0
 8002b7a:	f7ff fec9 	bl	8002910 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002b7e:	2100      	movs	r1, #0
 8002b80:	68a0      	ldr	r0, [r4, #8]
 8002b82:	f7ff fe19 	bl	80027b8 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8002b86:	4606      	mov	r6, r0
 8002b88:	f001 f850 	bl	8003c2c <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002b8c:	6860      	ldr	r0, [r4, #4]
 8002b8e:	2100      	movs	r1, #0
 8002b90:	f7ff fe15 	bl	80027be <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8002b94:	4631      	mov	r1, r6
 8002b96:	4604      	mov	r4, r0
 8002b98:	f001 f82e 	bl	8003bf8 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 8002b9c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002ba0:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002ba4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002ba8:	b1dc      	cbz	r4, 8002be2 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x11a>
 8002baa:	1d23      	adds	r3, r4, #4
 8002bac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002bb0:	6833      	ldr	r3, [r6, #0]
 8002bb2:	f8c4 a008 	str.w	sl, [r4, #8]
 8002bb6:	4630      	mov	r0, r6
 8002bb8:	68db      	ldr	r3, [r3, #12]
 8002bba:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002bbc:	4798      	blx	r3
    newPresenter->activate();
 8002bbe:	6823      	ldr	r3, [r4, #0]
 8002bc0:	4620      	mov	r0, r4
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002bc6:	4629      	mov	r1, r5
 8002bc8:	4630      	mov	r0, r6
 8002bca:	f00c fe2f 	bl	800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002bce:	682b      	ldr	r3, [r5, #0]
 8002bd0:	4628      	mov	r0, r5
 8002bd2:	691b      	ldr	r3, [r3, #16]
 8002bd4:	4798      	blx	r3
    newTransition->invalidate();
 8002bd6:	682b      	ldr	r3, [r5, #0]
 8002bd8:	4628      	mov	r0, r5
 8002bda:	695b      	ldr	r3, [r3, #20]
}
 8002bdc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002be0:	4718      	bx	r3
    model->bind(newPresenter);
 8002be2:	4623      	mov	r3, r4
 8002be4:	e7e2      	b.n	8002bac <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0xe4>
 8002be6:	bf00      	nop
 8002be8:	0801e6b8 	.word	0x0801e6b8
 8002bec:	0801eaec 	.word	0x0801eaec
 8002bf0:	0801e844 	.word	0x0801e844
 8002bf4:	0801e88b 	.word	0x0801e88b
 8002bf8:	0801e92e 	.word	0x0801e92e
 8002bfc:	2000a84c 	.word	0x2000a84c
 8002c00:	2000a848 	.word	0x2000a848

08002c04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002c04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8002c06:	4605      	mov	r5, r0
 8002c08:	2600      	movs	r6, #0
 8002c0a:	4b18      	ldr	r3, [pc, #96]	; (8002c6c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8002c0c:	6046      	str	r6, [r0, #4]
 8002c0e:	7206      	strb	r6, [r0, #8]
 8002c10:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002c14:	4604      	mov	r4, r0
          calculatedValue(0)
 8002c16:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002c18:	460f      	mov	r7, r1
          calculatedValue(0)
 8002c1a:	f008 fd79 	bl	800b710 <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8002c1e:	4b14      	ldr	r3, [pc, #80]	; (8002c70 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 8002c20:	63a5      	str	r5, [r4, #56]	; 0x38
 8002c22:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8002c26:	2220      	movs	r2, #32
 8002c28:	2301      	movs	r3, #1
 8002c2a:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8002c2e:	4b11      	ldr	r3, [pc, #68]	; (8002c74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
          calculatedValue(0)
 8002c30:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8002c34:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8002c36:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8002c3a:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8002c3e:	b193      	cbz	r3, 8002c66 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x62>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002c40:	4b0d      	ldr	r3, [pc, #52]	; (8002c78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x74>)
 8002c42:	4f0e      	ldr	r7, [pc, #56]	; (8002c7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x78>)
 8002c44:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002c48:	9300      	str	r3, [sp, #0]
 8002c4a:	f9b7 3000 	ldrsh.w	r3, [r7]
 8002c4e:	4632      	mov	r2, r6
 8002c50:	4631      	mov	r1, r6
 8002c52:	4628      	mov	r0, r5
 8002c54:	f7ff fa85 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8002c58:	4628      	mov	r0, r5
 8002c5a:	f008 fcd4 	bl	800b606 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_WIDTH;
 8002c5e:	883b      	ldrh	r3, [r7, #0]
 8002c60:	425b      	negs	r3, r3
 8002c62:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8002c66:	4620      	mov	r0, r4
 8002c68:	b003      	add	sp, #12
 8002c6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c6c:	0801eecc 	.word	0x0801eecc
 8002c70:	0801eeb4 	.word	0x0801eeb4
 8002c74:	2000a80b 	.word	0x2000a80b
 8002c78:	2000a802 	.word	0x2000a802
 8002c7c:	2000a800 	.word	0x2000a800

08002c80 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv>:
{
 8002c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ManualView, ManualPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002c84:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002c88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002c8a:	68a0      	ldr	r0, [r4, #8]
 8002c8c:	6803      	ldr	r3, [r0, #0]
 8002c8e:	6a1b      	ldr	r3, [r3, #32]
 8002c90:	4798      	blx	r3
 8002c92:	f5b0 7f71 	cmp.w	r0, #964	; 0x3c4
 8002c96:	d205      	bcs.n	8002ca4 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x24>
 8002c98:	4b42      	ldr	r3, [pc, #264]	; (8002da4 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x124>)
 8002c9a:	4a43      	ldr	r2, [pc, #268]	; (8002da8 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x128>)
 8002c9c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002c9e:	4843      	ldr	r0, [pc, #268]	; (8002dac <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x12c>)
 8002ca0:	f01a f80c 	bl	801ccbc <__assert_func>
 8002ca4:	6860      	ldr	r0, [r4, #4]
 8002ca6:	6803      	ldr	r3, [r0, #0]
 8002ca8:	6a1b      	ldr	r3, [r3, #32]
 8002caa:	4798      	blx	r3
 8002cac:	280f      	cmp	r0, #15
 8002cae:	d803      	bhi.n	8002cb8 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x38>
 8002cb0:	4b3f      	ldr	r3, [pc, #252]	; (8002db0 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x130>)
 8002cb2:	4a3d      	ldr	r2, [pc, #244]	; (8002da8 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x128>)
 8002cb4:	21a4      	movs	r1, #164	; 0xa4
 8002cb6:	e7f2      	b.n	8002c9e <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002cb8:	68e0      	ldr	r0, [r4, #12]
 8002cba:	6803      	ldr	r3, [r0, #0]
 8002cbc:	6a1b      	ldr	r3, [r3, #32]
 8002cbe:	4798      	blx	r3
 8002cc0:	2853      	cmp	r0, #83	; 0x53
 8002cc2:	d803      	bhi.n	8002ccc <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x4c>
 8002cc4:	4b3b      	ldr	r3, [pc, #236]	; (8002db4 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x134>)
 8002cc6:	4a38      	ldr	r2, [pc, #224]	; (8002da8 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x128>)
 8002cc8:	21a5      	movs	r1, #165	; 0xa5
 8002cca:	e7e8      	b.n	8002c9e <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002ccc:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002db8 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002cd0:	f00b f9d2 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 8002cd4:	f00b f9d6 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002cd8:	f8d9 0000 	ldr.w	r0, [r9]
 8002cdc:	b110      	cbz	r0, 8002ce4 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002cde:	6803      	ldr	r3, [r0, #0]
 8002ce0:	68db      	ldr	r3, [r3, #12]
 8002ce2:	4798      	blx	r3
    if (*currentTrans)
 8002ce4:	f8d9 0000 	ldr.w	r0, [r9]
 8002ce8:	b110      	cbz	r0, 8002cf0 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002cea:	6803      	ldr	r3, [r0, #0]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	4798      	blx	r3
    if (*currentScreen)
 8002cf0:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002dbc <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x13c>
 8002cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8002cf8:	b110      	cbz	r0, 8002d00 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002cfa:	6803      	ldr	r3, [r0, #0]
 8002cfc:	695b      	ldr	r3, [r3, #20]
 8002cfe:	4798      	blx	r3
    if (*currentPresenter)
 8002d00:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d04:	b110      	cbz	r0, 8002d0c <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002d06:	6803      	ldr	r3, [r0, #0]
 8002d08:	685b      	ldr	r3, [r3, #4]
 8002d0a:	4798      	blx	r3
    if (*currentScreen)
 8002d0c:	f8d8 0000 	ldr.w	r0, [r8]
 8002d10:	b110      	cbz	r0, 8002d18 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002d12:	6803      	ldr	r3, [r0, #0]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	4798      	blx	r3
    if (*currentPresenter)
 8002d18:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d1c:	b110      	cbz	r0, 8002d24 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002d1e:	6803      	ldr	r3, [r0, #0]
 8002d20:	689b      	ldr	r3, [r3, #8]
 8002d22:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d24:	68e0      	ldr	r0, [r4, #12]
 8002d26:	6803      	ldr	r3, [r0, #0]
 8002d28:	2100      	movs	r1, #0
 8002d2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d2c:	4798      	blx	r3
 8002d2e:	2114      	movs	r1, #20
 8002d30:	4605      	mov	r5, r0
 8002d32:	f7ff ff67 	bl	8002c04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002d36:	68a0      	ldr	r0, [r4, #8]
 8002d38:	6803      	ldr	r3, [r0, #0]
 8002d3a:	2100      	movs	r1, #0
 8002d3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d3e:	4798      	blx	r3
 8002d40:	4606      	mov	r6, r0
 8002d42:	f000 ffa5 	bl	8003c90 <_ZN10ManualViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002d46:	6860      	ldr	r0, [r4, #4]
 8002d48:	6803      	ldr	r3, [r0, #0]
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d4e:	4798      	blx	r3
 8002d50:	4631      	mov	r1, r6
 8002d52:	4604      	mov	r4, r0
 8002d54:	f000 ff82 	bl	8003c5c <_ZN15ManualPresenterC1ER10ManualView>
    *currentTrans = newTransition;
 8002d58:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002d5c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002d60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002d64:	b1dc      	cbz	r4, 8002d9e <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0x11e>
 8002d66:	1d23      	adds	r3, r4, #4
 8002d68:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002d6c:	6833      	ldr	r3, [r6, #0]
 8002d6e:	f8c4 a008 	str.w	sl, [r4, #8]
 8002d72:	4630      	mov	r0, r6
 8002d74:	68db      	ldr	r3, [r3, #12]
 8002d76:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002d78:	4798      	blx	r3
    newPresenter->activate();
 8002d7a:	6823      	ldr	r3, [r4, #0]
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002d82:	4629      	mov	r1, r5
 8002d84:	4630      	mov	r0, r6
 8002d86:	f00c fd51 	bl	800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002d8a:	682b      	ldr	r3, [r5, #0]
 8002d8c:	4628      	mov	r0, r5
 8002d8e:	691b      	ldr	r3, [r3, #16]
 8002d90:	4798      	blx	r3
    newTransition->invalidate();
 8002d92:	682b      	ldr	r3, [r5, #0]
 8002d94:	4628      	mov	r0, r5
 8002d96:	695b      	ldr	r3, [r3, #20]
}
 8002d98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002d9c:	4718      	bx	r3
    model->bind(newPresenter);
 8002d9e:	4623      	mov	r3, r4
 8002da0:	e7e2      	b.n	8002d68 <_ZN23FrontendApplicationBase39gotoManualScreenSlideTransitionEastImplEv+0xe8>
 8002da2:	bf00      	nop
 8002da4:	0801e6b8 	.word	0x0801e6b8
 8002da8:	0801ebfd 	.word	0x0801ebfd
 8002dac:	0801e844 	.word	0x0801e844
 8002db0:	0801e88b 	.word	0x0801e88b
 8002db4:	0801e92e 	.word	0x0801e92e
 8002db8:	2000a84c 	.word	0x2000a84c
 8002dbc:	2000a848 	.word	0x2000a848

08002dc0 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv>:
{
 8002dc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002dc4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002dc8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002dca:	68a0      	ldr	r0, [r4, #8]
 8002dcc:	6803      	ldr	r3, [r0, #0]
 8002dce:	6a1b      	ldr	r3, [r3, #32]
 8002dd0:	4798      	blx	r3
 8002dd2:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8002dd6:	d205      	bcs.n	8002de4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x24>
 8002dd8:	4b41      	ldr	r3, [pc, #260]	; (8002ee0 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x120>)
 8002dda:	4a42      	ldr	r2, [pc, #264]	; (8002ee4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x124>)
 8002ddc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002dde:	4842      	ldr	r0, [pc, #264]	; (8002ee8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x128>)
 8002de0:	f019 ff6c 	bl	801ccbc <__assert_func>
 8002de4:	6860      	ldr	r0, [r4, #4]
 8002de6:	6803      	ldr	r3, [r0, #0]
 8002de8:	6a1b      	ldr	r3, [r3, #32]
 8002dea:	4798      	blx	r3
 8002dec:	280f      	cmp	r0, #15
 8002dee:	d803      	bhi.n	8002df8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x38>
 8002df0:	4b3e      	ldr	r3, [pc, #248]	; (8002eec <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x12c>)
 8002df2:	4a3c      	ldr	r2, [pc, #240]	; (8002ee4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x124>)
 8002df4:	21a4      	movs	r1, #164	; 0xa4
 8002df6:	e7f2      	b.n	8002dde <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002df8:	68e0      	ldr	r0, [r4, #12]
 8002dfa:	6803      	ldr	r3, [r0, #0]
 8002dfc:	6a1b      	ldr	r3, [r3, #32]
 8002dfe:	4798      	blx	r3
 8002e00:	2853      	cmp	r0, #83	; 0x53
 8002e02:	d803      	bhi.n	8002e0c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x4c>
 8002e04:	4b3a      	ldr	r3, [pc, #232]	; (8002ef0 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x130>)
 8002e06:	4a37      	ldr	r2, [pc, #220]	; (8002ee4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x124>)
 8002e08:	21a5      	movs	r1, #165	; 0xa5
 8002e0a:	e7e8      	b.n	8002dde <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002e0c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002ef4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8002e10:	f00b f932 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 8002e14:	f00b f936 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002e18:	f8d9 0000 	ldr.w	r0, [r9]
 8002e1c:	b110      	cbz	r0, 8002e24 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002e1e:	6803      	ldr	r3, [r0, #0]
 8002e20:	68db      	ldr	r3, [r3, #12]
 8002e22:	4798      	blx	r3
    if (*currentTrans)
 8002e24:	f8d9 0000 	ldr.w	r0, [r9]
 8002e28:	b110      	cbz	r0, 8002e30 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002e2a:	6803      	ldr	r3, [r0, #0]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	4798      	blx	r3
    if (*currentScreen)
 8002e30:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8002ef8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x138>
 8002e34:	f8d8 0000 	ldr.w	r0, [r8]
 8002e38:	b110      	cbz	r0, 8002e40 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002e3a:	6803      	ldr	r3, [r0, #0]
 8002e3c:	695b      	ldr	r3, [r3, #20]
 8002e3e:	4798      	blx	r3
    if (*currentPresenter)
 8002e40:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002e44:	b110      	cbz	r0, 8002e4c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002e46:	6803      	ldr	r3, [r0, #0]
 8002e48:	685b      	ldr	r3, [r3, #4]
 8002e4a:	4798      	blx	r3
    if (*currentScreen)
 8002e4c:	f8d8 0000 	ldr.w	r0, [r8]
 8002e50:	b110      	cbz	r0, 8002e58 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002e52:	6803      	ldr	r3, [r0, #0]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	4798      	blx	r3
    if (*currentPresenter)
 8002e58:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002e5c:	b110      	cbz	r0, 8002e64 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002e5e:	6803      	ldr	r3, [r0, #0]
 8002e60:	689b      	ldr	r3, [r3, #8]
 8002e62:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002e64:	68e0      	ldr	r0, [r4, #12]
 8002e66:	6803      	ldr	r3, [r0, #0]
 8002e68:	2100      	movs	r1, #0
 8002e6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e6c:	4798      	blx	r3
 8002e6e:	2114      	movs	r1, #20
 8002e70:	4605      	mov	r5, r0
 8002e72:	f7ff fec7 	bl	8002c04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002e76:	2100      	movs	r1, #0
 8002e78:	68a0      	ldr	r0, [r4, #8]
 8002e7a:	f7ff fc9d 	bl	80027b8 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8002e7e:	4606      	mov	r6, r0
 8002e80:	f000 fed4 	bl	8003c2c <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002e84:	6860      	ldr	r0, [r4, #4]
 8002e86:	2100      	movs	r1, #0
 8002e88:	f7ff fc99 	bl	80027be <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8002e8c:	4631      	mov	r1, r6
 8002e8e:	4604      	mov	r4, r0
 8002e90:	f000 feb2 	bl	8003bf8 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 8002e94:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002e98:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002e9c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002ea0:	b1dc      	cbz	r4, 8002eda <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0x11a>
 8002ea2:	1d23      	adds	r3, r4, #4
 8002ea4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ea8:	6833      	ldr	r3, [r6, #0]
 8002eaa:	f8c4 a008 	str.w	sl, [r4, #8]
 8002eae:	4630      	mov	r0, r6
 8002eb0:	68db      	ldr	r3, [r3, #12]
 8002eb2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002eb4:	4798      	blx	r3
    newPresenter->activate();
 8002eb6:	6823      	ldr	r3, [r4, #0]
 8002eb8:	4620      	mov	r0, r4
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ebe:	4629      	mov	r1, r5
 8002ec0:	4630      	mov	r0, r6
 8002ec2:	f00c fcb3 	bl	800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002ec6:	682b      	ldr	r3, [r5, #0]
 8002ec8:	4628      	mov	r0, r5
 8002eca:	691b      	ldr	r3, [r3, #16]
 8002ecc:	4798      	blx	r3
    newTransition->invalidate();
 8002ece:	682b      	ldr	r3, [r5, #0]
 8002ed0:	4628      	mov	r0, r5
 8002ed2:	695b      	ldr	r3, [r3, #20]
}
 8002ed4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002ed8:	4718      	bx	r3
    model->bind(newPresenter);
 8002eda:	4623      	mov	r3, r4
 8002edc:	e7e2      	b.n	8002ea4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionEastImplEv+0xe4>
 8002ede:	bf00      	nop
 8002ee0:	0801e6b8 	.word	0x0801e6b8
 8002ee4:	0801ed12 	.word	0x0801ed12
 8002ee8:	0801e844 	.word	0x0801e844
 8002eec:	0801e88b 	.word	0x0801e88b
 8002ef0:	0801e92e 	.word	0x0801e92e
 8002ef4:	2000a84c 	.word	0x2000a84c
 8002ef8:	2000a848 	.word	0x2000a848

08002efc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002efc:	6a00      	ldr	r0, [r0, #32]
 8002efe:	4770      	bx	lr

08002f00 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002f00:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002f02:	4770      	bx	lr

08002f04 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002f04:	4770      	bx	lr

08002f06 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002f06:	888b      	ldrh	r3, [r1, #4]
 8002f08:	6980      	ldr	r0, [r0, #24]
 8002f0a:	680a      	ldr	r2, [r1, #0]
 8002f0c:	0adb      	lsrs	r3, r3, #11
 8002f0e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002f12:	4410      	add	r0, r2
 8002f14:	4770      	bx	lr

08002f16 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002f16:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002f18:	b1c2      	cbz	r2, 8002f4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002f1a:	7b13      	ldrb	r3, [r2, #12]
 8002f1c:	b1b3      	cbz	r3, 8002f4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002f1e:	7b54      	ldrb	r4, [r2, #13]
 8002f20:	7ad2      	ldrb	r2, [r2, #11]
 8002f22:	0224      	lsls	r4, r4, #8
 8002f24:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002f28:	4314      	orrs	r4, r2
 8002f2a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002f2c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002f2e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002f32:	8813      	ldrh	r3, [r2, #0]
 8002f34:	428b      	cmp	r3, r1
 8002f36:	d102      	bne.n	8002f3e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002f38:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002f3c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002f3e:	d805      	bhi.n	8002f4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002f40:	3801      	subs	r0, #1
 8002f42:	b280      	uxth	r0, r0
 8002f44:	3204      	adds	r2, #4
 8002f46:	2800      	cmp	r0, #0
 8002f48:	d1f3      	bne.n	8002f32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002f4a:	e7f7      	b.n	8002f3c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	e7f5      	b.n	8002f3c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002f50 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002f50:	b510      	push	{r4, lr}
 8002f52:	2128      	movs	r1, #40	; 0x28
 8002f54:	4604      	mov	r4, r0
 8002f56:	f019 fe83 	bl	801cc60 <_ZdlPvj>
 8002f5a:	4620      	mov	r0, r4
 8002f5c:	bd10      	pop	{r4, pc}
	...

08002f60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002f60:	b530      	push	{r4, r5, lr}
 8002f62:	b089      	sub	sp, #36	; 0x24
 8002f64:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002f66:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002f6a:	9506      	str	r5, [sp, #24]
 8002f6c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002f70:	9505      	str	r5, [sp, #20]
 8002f72:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002f76:	9504      	str	r5, [sp, #16]
 8002f78:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002f7c:	9503      	str	r5, [sp, #12]
 8002f7e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002f82:	9502      	str	r5, [sp, #8]
 8002f84:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002f88:	9501      	str	r5, [sp, #4]
 8002f8a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002f8e:	9500      	str	r5, [sp, #0]
 8002f90:	f00c f8ac 	bl	800f0ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002f94:	4b06      	ldr	r3, [pc, #24]	; (8002fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002f96:	6023      	str	r3, [r4, #0]
 8002f98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002f9a:	61a3      	str	r3, [r4, #24]
 8002f9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002f9e:	61e3      	str	r3, [r4, #28]
 8002fa0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002fa2:	6223      	str	r3, [r4, #32]
 8002fa4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002fa6:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002fa8:	4620      	mov	r0, r4
 8002faa:	b009      	add	sp, #36	; 0x24
 8002fac:	bd30      	pop	{r4, r5, pc}
 8002fae:	bf00      	nop
 8002fb0:	0801ef3c 	.word	0x0801ef3c

08002fb4 <_ZN12MainViewBaseD1Ev>:

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
 8002fb4:	4770      	bx	lr

08002fb6 <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 8002fb6:	4770      	bx	lr

08002fb8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fb8:	4770      	bx	lr

08002fba <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002fba:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002fbc:	68c2      	ldr	r2, [r0, #12]
 8002fbe:	6844      	ldr	r4, [r0, #4]
 8002fc0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002fc2:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002fc4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002fc8:	07d2      	lsls	r2, r2, #31
 8002fca:	bf48      	it	mi
 8002fcc:	5962      	ldrmi	r2, [r4, r5]
 8002fce:	689b      	ldr	r3, [r3, #8]
    }
 8002fd0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002fd2:	bf48      	it	mi
 8002fd4:	58d3      	ldrmi	r3, [r2, r3]
 8002fd6:	4718      	bx	r3

08002fd8 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002fd8:	6843      	ldr	r3, [r0, #4]
 8002fda:	b12b      	cbz	r3, 8002fe8 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002fdc:	6883      	ldr	r3, [r0, #8]
 8002fde:	b92b      	cbnz	r3, 8002fec <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002fe0:	68c0      	ldr	r0, [r0, #12]
 8002fe2:	f000 0001 	and.w	r0, r0, #1
 8002fe6:	4770      	bx	lr
 8002fe8:	4618      	mov	r0, r3
 8002fea:	4770      	bx	lr
 8002fec:	2001      	movs	r0, #1
    }
 8002fee:	4770      	bx	lr

08002ff0 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ff0:	b510      	push	{r4, lr}
 8002ff2:	2110      	movs	r1, #16
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	f019 fe33 	bl	801cc60 <_ZdlPvj>
 8002ffa:	4620      	mov	r0, r4
 8002ffc:	bd10      	pop	{r4, pc}

08002ffe <_ZN12MainViewBaseD0Ev>:
 8002ffe:	b510      	push	{r4, lr}
 8003000:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8003004:	4604      	mov	r4, r0
 8003006:	f019 fe2b 	bl	801cc60 <_ZdlPvj>
 800300a:	4620      	mov	r0, r4
 800300c:	bd10      	pop	{r4, pc}

0800300e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800300e:	b508      	push	{r3, lr}
    if (&src == &btn_manual)
 8003010:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003014:	4299      	cmp	r1, r3
 8003016:	d105      	bne.n	8003024 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003018:	f00b f82e 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When btn_automatic clicked change screen to Automatic
        //Go to Automatic with screen transition towards West
        application().gotoAutomaticScreenSlideTransitionWest();
    }
}
 800301c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoManualScreenSlideTransitionEast();
 8003020:	f7ff bbaa 	b.w	8002778 <_ZN23FrontendApplicationBase35gotoManualScreenSlideTransitionEastEv>
    else if (&src == &btn_automatic)
 8003024:	30e0      	adds	r0, #224	; 0xe0
 8003026:	4281      	cmp	r1, r0
 8003028:	d105      	bne.n	8003036 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 800302a:	f00b f825 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
}
 800302e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoAutomaticScreenSlideTransitionWest();
 8003032:	f7ff bbb1 	b.w	8002798 <_ZN23FrontendApplicationBase38gotoAutomaticScreenSlideTransitionWestEv>
}
 8003036:	bd08      	pop	{r3, pc}

08003038 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003038:	4b1b      	ldr	r3, [pc, #108]	; (80030a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800303a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800303c:	881b      	ldrh	r3, [r3, #0]
 800303e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003040:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003042:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003044:	d92b      	bls.n	800309e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003046:	4b19      	ldr	r3, [pc, #100]	; (80030ac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	b92b      	cbnz	r3, 8003058 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800304c:	4b18      	ldr	r3, [pc, #96]	; (80030b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800304e:	4a19      	ldr	r2, [pc, #100]	; (80030b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003050:	4819      	ldr	r0, [pc, #100]	; (80030b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003052:	21ae      	movs	r1, #174	; 0xae
 8003054:	f019 fe32 	bl	801ccbc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003058:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800305c:	4b17      	ldr	r3, [pc, #92]	; (80030bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003064:	4b16      	ldr	r3, [pc, #88]	; (80030c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8003066:	6818      	ldr	r0, [r3, #0]
 8003068:	f000 fd46 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800306c:	682b      	ldr	r3, [r5, #0]
 800306e:	9001      	str	r0, [sp, #4]
 8003070:	4601      	mov	r1, r0
 8003072:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003074:	4628      	mov	r0, r5
 8003076:	4798      	blx	r3
 8003078:	682b      	ldr	r3, [r5, #0]
 800307a:	9901      	ldr	r1, [sp, #4]
 800307c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800307e:	4604      	mov	r4, r0
 8003080:	4628      	mov	r0, r5
 8003082:	4798      	blx	r3
 8003084:	682b      	ldr	r3, [r5, #0]
 8003086:	9901      	ldr	r1, [sp, #4]
 8003088:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800308a:	fb14 f400 	smulbb	r4, r4, r0
 800308e:	4628      	mov	r0, r5
 8003090:	4798      	blx	r3
 8003092:	b2e4      	uxtb	r4, r4
 8003094:	4404      	add	r4, r0
 8003096:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800309a:	b002      	add	sp, #8
 800309c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800309e:	2300      	movs	r3, #0
 80030a0:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 80030a4:	e7f9      	b.n	800309a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 80030a6:	bf00      	nop
 80030a8:	2000a860 	.word	0x2000a860
 80030ac:	2000a85c 	.word	0x2000a85c
 80030b0:	0801ef8c 	.word	0x0801ef8c
 80030b4:	0801efce 	.word	0x0801efce
 80030b8:	0801effc 	.word	0x0801effc
 80030bc:	2000a864 	.word	0x2000a864
 80030c0:	2000a868 	.word	0x2000a868

080030c4 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 80030c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030c8:	4604      	mov	r4, r0
 80030ca:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 80030cc:	46a0      	mov	r8, r4
        : presenter(0)
 80030ce:	2500      	movs	r5, #0
 80030d0:	f00c fa00 	bl	800f4d4 <_ZN8touchgfx6ScreenC1Ev>
 80030d4:	4b66      	ldr	r3, [pc, #408]	; (8003270 <_ZN12MainViewBaseC1Ev+0x1ac>)
 80030d6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80030d8:	f848 3b40 	str.w	r3, [r8], #64
 80030dc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80030e0:	4640      	mov	r0, r8
 80030e2:	f7ff f851 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 80030e6:	f104 0798 	add.w	r7, r4, #152	; 0x98
 80030ea:	4650      	mov	r0, sl
 80030ec:	f7ff f84c 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 80030f0:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80030f4:	4638      	mov	r0, r7
 80030f6:	f009 fa91 	bl	800c61c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80030fa:	4630      	mov	r0, r6
 80030fc:	f009 fa8e 	bl	800c61c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003100:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003104:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003108:	4b5a      	ldr	r3, [pc, #360]	; (8003274 <_ZN12MainViewBaseC1Ev+0x1b0>)
 800310a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
        : typedTextId(id)
 800310e:	4b5a      	ldr	r3, [pc, #360]	; (8003278 <_ZN12MainViewBaseC1Ev+0x1b4>)
 8003110:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8003114:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003118:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 800311c:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8003120:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003124:	4b55      	ldr	r3, [pc, #340]	; (800327c <_ZN12MainViewBaseC1Ev+0x1b8>)
 8003126:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800312a:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 800312e:	4b54      	ldr	r3, [pc, #336]	; (8003280 <_ZN12MainViewBaseC1Ev+0x1bc>)
 8003130:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8003134:	f04f 3bff 	mov.w	fp, #4294967295
    __background.setPosition(0, 0, 800, 480);
 8003138:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800313c:	e9c4 355e 	strd	r3, r5, [r4, #376]	; 0x178
        : x(0), y(0), width(0), height(0)
 8003140:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
 8003144:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
 8003148:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 800314c:	e9c4 5551 	strd	r5, r5, [r4, #324]	; 0x144
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003150:	e9c4 b55a 	strd	fp, r5, [r4, #360]	; 0x168
        : x(x), y(y), width(width), height(height)
 8003154:	f8c4 5164 	str.w	r5, [r4, #356]	; 0x164
 8003158:	9200      	str	r2, [sp, #0]
 800315a:	4629      	mov	r1, r5
 800315c:	462a      	mov	r2, r5
 800315e:	4640      	mov	r0, r8
 8003160:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003164:	f7fe fffd 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003168:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800316c:	66a2      	str	r2, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 800316e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003172:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003176:	9200      	str	r2, [sp, #0]
 8003178:	4629      	mov	r1, r5
 800317a:	462a      	mov	r2, r5
 800317c:	4650      	mov	r0, sl
 800317e:	f7fe fff0 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_manual.setXY(145, 210);
 8003182:	4638      	mov	r0, r7
 8003184:	f8c4 b094 	str.w	fp, [r4, #148]	; 0x94
 8003188:	22d2      	movs	r2, #210	; 0xd2
 800318a:	2191      	movs	r1, #145	; 0x91
 800318c:	f7fe ffdc 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
    btn_manual.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003190:	a90a      	add	r1, sp, #40	; 0x28
 8003192:	f04f 0201 	mov.w	r2, #1
 8003196:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800319a:	4638      	mov	r0, r7
 800319c:	460a      	mov	r2, r1
 800319e:	a909      	add	r1, sp, #36	; 0x24
 80031a0:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80031a4:	f008 ffc1 	bl	800c12a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80031a8:	2306      	movs	r3, #6
 80031aa:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 80031ae:	4638      	mov	r0, r7
 80031b0:	f7ff ff42 	bl	8003038 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    btn_manual.setAction(buttonCallback);
 80031b4:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80031b8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    btn_automatic.setXY(489, 210);
 80031bc:	4630      	mov	r0, r6
        colorPressed = col;
 80031be:	e9c4 bb35 	strd	fp, fp, [r4, #212]	; 0xd4
 80031c2:	22d2      	movs	r2, #210	; 0xd2
 80031c4:	f240 11e9 	movw	r1, #489	; 0x1e9
 80031c8:	9303      	str	r3, [sp, #12]
 80031ca:	f7fe ffbd 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 80031ce:	f04f 0201 	mov.w	r2, #1
    btn_automatic.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031d2:	a909      	add	r1, sp, #36	; 0x24
 80031d4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80031d8:	4630      	mov	r0, r6
 80031da:	aa0a      	add	r2, sp, #40	; 0x28
 80031dc:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80031e0:	f008 ffa3 	bl	800c12a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80031e4:	2205      	movs	r2, #5
 80031e6:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 80031ea:	4630      	mov	r0, r6
 80031ec:	f7ff ff24 	bl	8003038 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 80031f0:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80031f4:	9b03      	ldr	r3, [sp, #12]
 80031f6:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    textArea1.setXY(346, 86);
 80031fa:	4648      	mov	r0, r9
        colorPressed = col;
 80031fc:	e9c4 bb47 	strd	fp, fp, [r4, #284]	; 0x11c
 8003200:	2256      	movs	r2, #86	; 0x56
 8003202:	f44f 71ad 	mov.w	r1, #346	; 0x15a
 8003206:	f7fe ff9f 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800320a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        linespace = space;
 800320e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8003212:	ad04      	add	r5, sp, #16
        this->color = color;
 8003214:	f8c4 2158 	str.w	r2, [r4, #344]	; 0x158
        boundingArea = calculateBoundingArea();
 8003218:	4649      	mov	r1, r9
 800321a:	4628      	mov	r0, r5
 800321c:	f008 fbd4 	bl	800b9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003220:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003224:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8003228:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800322c:	4b12      	ldr	r3, [pc, #72]	; (8003278 <_ZN12MainViewBaseC1Ev+0x1b4>)
 800322e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EMVR));
 8003230:	a90a      	add	r1, sp, #40	; 0x28
 8003232:	2304      	movs	r3, #4
 8003234:	4648      	mov	r0, r9
 8003236:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800323a:	f008 ff19 	bl	800c070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800323e:	1d20      	adds	r0, r4, #4
 8003240:	4641      	mov	r1, r8
 8003242:	9003      	str	r0, [sp, #12]
 8003244:	f006 ff80 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003248:	9803      	ldr	r0, [sp, #12]
 800324a:	4651      	mov	r1, sl
 800324c:	f006 ff7c 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003250:	9803      	ldr	r0, [sp, #12]
 8003252:	4639      	mov	r1, r7
 8003254:	f006 ff78 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003258:	9803      	ldr	r0, [sp, #12]
 800325a:	4631      	mov	r1, r6
 800325c:	f006 ff74 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003260:	9803      	ldr	r0, [sp, #12]
 8003262:	4649      	mov	r1, r9
 8003264:	f006 ff70 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003268:	4620      	mov	r0, r4
 800326a:	b00d      	add	sp, #52	; 0x34
 800326c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003270:	0801f064 	.word	0x0801f064
 8003274:	080201d8 	.word	0x080201d8
 8003278:	0801e6b0 	.word	0x0801e6b0
 800327c:	0801f04c 	.word	0x0801f04c
 8003280:	0800300f 	.word	0x0800300f

08003284 <_ZN14ManualViewBaseD1Ev>:

class ManualViewBase : public touchgfx::View<ManualPresenter>
{
public:
    ManualViewBase();
    virtual ~ManualViewBase() {}
 8003284:	4770      	bx	lr

08003286 <_ZN14ManualViewBase7captureEv>:
     * Virtual Action Handlers
     */
    virtual void capture()
    {
        // Override and implement this function in Manual
    }
 8003286:	4770      	bx	lr

08003288 <_ZN14ManualViewBase11setupScreenEv>:
}

void ManualViewBase::setupScreen()
{

}
 8003288:	4770      	bx	lr

0800328a <_ZN8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800328a:	4770      	bx	lr

0800328c <_ZN8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800328c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800328e:	68c2      	ldr	r2, [r0, #12]
 8003290:	6844      	ldr	r4, [r0, #4]
 8003292:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003294:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003296:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800329a:	07d2      	lsls	r2, r2, #31
 800329c:	bf48      	it	mi
 800329e:	5962      	ldrmi	r2, [r4, r5]
 80032a0:	689b      	ldr	r3, [r3, #8]
    }
 80032a2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032a4:	bf48      	it	mi
 80032a6:	58d3      	ldrmi	r3, [r2, r3]
 80032a8:	4718      	bx	r3

080032aa <_ZNK8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80032aa:	6843      	ldr	r3, [r0, #4]
 80032ac:	b12b      	cbz	r3, 80032ba <_ZNK8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80032ae:	6883      	ldr	r3, [r0, #8]
 80032b0:	b92b      	cbnz	r3, 80032be <_ZNK8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80032b2:	68c0      	ldr	r0, [r0, #12]
 80032b4:	f000 0001 	and.w	r0, r0, #1
 80032b8:	4770      	bx	lr
 80032ba:	4618      	mov	r0, r3
 80032bc:	4770      	bx	lr
 80032be:	2001      	movs	r0, #1
    }
 80032c0:	4770      	bx	lr

080032c2 <_ZN8touchgfx8CallbackI14ManualViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80032c2:	b510      	push	{r4, lr}
 80032c4:	2110      	movs	r1, #16
 80032c6:	4604      	mov	r4, r0
 80032c8:	f019 fcca 	bl	801cc60 <_ZdlPvj>
 80032cc:	4620      	mov	r0, r4
 80032ce:	bd10      	pop	{r4, pc}

080032d0 <_ZN14ManualViewBaseD0Ev>:
    virtual ~ManualViewBase() {}
 80032d0:	b510      	push	{r4, lr}
 80032d2:	f44f 7171 	mov.w	r1, #964	; 0x3c4
 80032d6:	4604      	mov	r4, r0
 80032d8:	f019 fcc2 	bl	801cc60 <_ZdlPvj>
 80032dc:	4620      	mov	r0, r4
 80032de:	bd10      	pop	{r4, pc}

080032e0 <_ZN14ManualViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void ManualViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_capture)
 80032e0:	f100 0298 	add.w	r2, r0, #152	; 0x98
 80032e4:	4291      	cmp	r1, r2
{
 80032e6:	b510      	push	{r4, lr}
 80032e8:	4603      	mov	r3, r0
    if (&src == &btn_capture)
 80032ea:	d104      	bne.n	80032f6 <_ZN14ManualViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    {
        //Interaction2
        //When btn_capture clicked call virtual function
        //Call capture
        capture();
 80032ec:	6803      	ldr	r3, [r0, #0]
        //Interaction1
        //When btn_return clicked change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
}
 80032ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        capture();
 80032f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032f4:	4718      	bx	r3
    else if (&src == &btn_return)
 80032f6:	33e0      	adds	r3, #224	; 0xe0
 80032f8:	4299      	cmp	r1, r3
 80032fa:	d105      	bne.n	8003308 <_ZN14ManualViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80032fc:	f00a febc 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003300:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoMainScreenSlideTransitionWest();
 8003304:	f7ff ba18 	b.w	8002738 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv>
}
 8003308:	bd10      	pop	{r4, pc}
	...

0800330c <_ZN8touchgfx8DrawableC1Ev>:
 800330c:	4a07      	ldr	r2, [pc, #28]	; (800332c <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800330e:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8003310:	2200      	movs	r2, #0
 8003312:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003316:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800331a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800331e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003322:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003326:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8003328:	4770      	bx	lr
 800332a:	bf00      	nop
 800332c:	080207a0 	.word	0x080207a0

08003330 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003330:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003332:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003334:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003336:	2100      	movs	r1, #0
 8003338:	f019 fd4c 	bl	801cdd4 <memset>
class Widget : public Drawable
 800333c:	4620      	mov	r0, r4
 800333e:	f7ff ffe5 	bl	800330c <_ZN8touchgfx8DrawableC1Ev>
 8003342:	4b0a      	ldr	r3, [pc, #40]	; (800336c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003344:	6023      	str	r3, [r4, #0]
 8003346:	4b0a      	ldr	r3, [pc, #40]	; (8003370 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003348:	62a3      	str	r3, [r4, #40]	; 0x28
 800334a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800334e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003350:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003354:	2300      	movs	r3, #0
 8003356:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(x), y(y), width(width), height(height)
 800335a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800335e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003362:	8723      	strh	r3, [r4, #56]	; 0x38
 8003364:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003366:	4620      	mov	r0, r4
 8003368:	bd10      	pop	{r4, pc}
 800336a:	bf00      	nop
 800336c:	080201d8 	.word	0x080201d8
 8003370:	0801e6b0 	.word	0x0801e6b0

08003374 <_ZN14ManualViewBaseC1Ev>:
ManualViewBase::ManualViewBase() :
 8003374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003378:	ed2d 8b0c 	vpush	{d8-d13}
 800337c:	4604      	mov	r4, r0
 800337e:	b08f      	sub	sp, #60	; 0x3c
 8003380:	f00c f8a8 	bl	800f4d4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ManualViewBase::buttonCallbackHandler)
 8003384:	4622      	mov	r2, r4
 8003386:	2600      	movs	r6, #0
 8003388:	4be6      	ldr	r3, [pc, #920]	; (8003724 <_ZN14ManualViewBaseC1Ev+0x3b0>)
 800338a:	63e6      	str	r6, [r4, #60]	; 0x3c
 800338c:	f842 3b40 	str.w	r3, [r2], #64
 8003390:	4610      	mov	r0, r2
 8003392:	ee08 2a10 	vmov	s16, r2
 8003396:	f7fe fef7 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 800339a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800339e:	4618      	mov	r0, r3
 80033a0:	ee0d 3a10 	vmov	s26, r3
 80033a4:	f7fe fef0 	bl	8002188 <_ZN8touchgfx3BoxC1Ev>
 80033a8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80033ac:	4618      	mov	r0, r3
 80033ae:	ee08 3a90 	vmov	s17, r3
 80033b2:	f009 f933 	bl	800c61c <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80033b6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80033ba:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 80033be:	4618      	mov	r0, r3
 80033c0:	ee0a 3a10 	vmov	s20, r3
 80033c4:	f009 f838 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 80033c8:	4640      	mov	r0, r8
 80033ca:	f7ff ff9f 	bl	800330c <_ZN8touchgfx8DrawableC1Ev>
 80033ce:	4dd6      	ldr	r5, [pc, #856]	; (8003728 <_ZN14ManualViewBaseC1Ev+0x3b4>)
 80033d0:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 80033d4:	f504 73a4 	add.w	r3, r4, #328	; 0x148
 80033d8:	f504 79c2 	add.w	r9, r4, #388	; 0x184
 80033dc:	4618      	mov	r0, r3
 80033de:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 80033e2:	ee0a 3a90 	vmov	s21, r3
 80033e6:	f009 f827 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033ea:	4648      	mov	r0, r9
 80033ec:	f009 f824 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033f0:	f504 73e0 	add.w	r3, r4, #448	; 0x1c0
 80033f4:	4618      	mov	r0, r3
 80033f6:	ee0b 3a10 	vmov	s22, r3
 80033fa:	f009 f81d 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033fe:	f504 73fe 	add.w	r3, r4, #508	; 0x1fc
 8003402:	f504 7a0e 	add.w	sl, r4, #568	; 0x238
 8003406:	4618      	mov	r0, r3
 8003408:	ee0b 3a90 	vmov	s23, r3
 800340c:	f504 7720 	add.w	r7, r4, #640	; 0x280
 8003410:	f009 f812 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003414:	4650      	mov	r0, sl
 8003416:	f7ff ff8b 	bl	8003330 <_ZN8touchgfx8TextAreaC1Ev>
 800341a:	4638      	mov	r0, r7
 800341c:	f7ff ff76 	bl	800330c <_ZN8touchgfx8DrawableC1Ev>
 8003420:	f504 732b 	add.w	r3, r4, #684	; 0x2ac
 8003424:	f8c4 5280 	str.w	r5, [r4, #640]	; 0x280
 8003428:	f8c4 62a8 	str.w	r6, [r4, #680]	; 0x2a8
 800342c:	4618      	mov	r0, r3
 800342e:	ee0c 3a10 	vmov	s24, r3
 8003432:	f009 f801 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003436:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
 800343a:	4618      	mov	r0, r3
 800343c:	ee0c 3a90 	vmov	s25, r3
 8003440:	f008 fffa 	bl	800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003444:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003448:	4618      	mov	r0, r3
 800344a:	ee09 3a10 	vmov	s18, r3
 800344e:	f7ff ff6f 	bl	8003330 <_ZN8touchgfx8TextAreaC1Ev>
 8003452:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003456:	4618      	mov	r0, r3
 8003458:	ee09 3a90 	vmov	s19, r3
 800345c:	f7ff ff68 	bl	8003330 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003460:	4bb2      	ldr	r3, [pc, #712]	; (800372c <_ZN14ManualViewBaseC1Ev+0x3b8>)
 8003462:	e9c4 34ed 	strd	r3, r4, [r4, #948]	; 0x3b4
 8003466:	4bb2      	ldr	r3, [pc, #712]	; (8003730 <_ZN14ManualViewBaseC1Ev+0x3bc>)
    __background.setPosition(0, 0, 800, 480);
 8003468:	f44f 75f0 	mov.w	r5, #480	; 0x1e0
 800346c:	e9c4 36ef 	strd	r3, r6, [r4, #956]	; 0x3bc
 8003470:	ee18 0a10 	vmov	r0, s16
 8003474:	9500      	str	r5, [sp, #0]
 8003476:	4632      	mov	r2, r6
 8003478:	4631      	mov	r1, r6
 800347a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800347e:	f7fe fe70 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003482:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 800, 480);
 8003486:	ee1d 0a10 	vmov	r0, s26
 800348a:	66a3      	str	r3, [r4, #104]	; 0x68
 800348c:	9500      	str	r5, [sp, #0]
 800348e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003492:	4632      	mov	r2, r6
 8003494:	4631      	mov	r1, r6
 8003496:	f04f 3bff 	mov.w	fp, #4294967295
    btn_capture.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800349a:	ad0c      	add	r5, sp, #48	; 0x30
    box1.setPosition(0, 0, 800, 480);
 800349c:	f7fe fe61 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_capture.setXY(315, 406);
 80034a0:	ee18 0a90 	vmov	r0, s17
 80034a4:	f8c4 b094 	str.w	fp, [r4, #148]	; 0x94
 80034a8:	f44f 72cb 	mov.w	r2, #406	; 0x196
 80034ac:	f240 113b 	movw	r1, #315	; 0x13b
 80034b0:	f7fe fe4a 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
    btn_capture.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80034b4:	462a      	mov	r2, r5
 80034b6:	a90b      	add	r1, sp, #44	; 0x2c
 80034b8:	ee18 0a90 	vmov	r0, s17
 80034bc:	f04f 0301 	mov.w	r3, #1
 80034c0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80034c4:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80034c8:	f008 fe2f 	bl	800c12a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80034cc:	f04f 0303 	mov.w	r3, #3
 80034d0:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 80034d4:	ee18 0a90 	vmov	r0, s17
 80034d8:	f7ff fdae 	bl	8003038 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    btn_capture.setAction(buttonCallback);
 80034dc:	f504 716d 	add.w	r1, r4, #948	; 0x3b4
        colorPressed = col;
 80034e0:	e9c4 bb35 	strd	fp, fp, [r4, #212]	; 0xd4
    btn_return.setXY(0, 0);
 80034e4:	ee1a 0a10 	vmov	r0, s20
    btn_capture.setAction(buttonCallback);
 80034e8:	9103      	str	r1, [sp, #12]
 80034ea:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
    btn_return.setXY(0, 0);
 80034ee:	4632      	mov	r2, r6
 80034f0:	4631      	mov	r1, r6
 80034f2:	f7fe fe29 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 80034f6:	f04f 0303 	mov.w	r3, #3
 80034fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
    btn_return.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_48_ID));
 80034fe:	a90b      	add	r1, sp, #44	; 0x2c
 8003500:	2305      	movs	r3, #5
 8003502:	f04f 0b02 	mov.w	fp, #2
 8003506:	ee1a 0a10 	vmov	r0, s20
 800350a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800350e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8003512:	aa0a      	add	r2, sp, #40	; 0x28
 8003514:	460b      	mov	r3, r1
 8003516:	9500      	str	r5, [sp, #0]
 8003518:	a909      	add	r1, sp, #36	; 0x24
 800351a:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800351e:	f008 fee7 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003522:	4b84      	ldr	r3, [pc, #528]	; (8003734 <_ZN14ManualViewBaseC1Ev+0x3c0>)
 8003524:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003528:	9b03      	ldr	r3, [sp, #12]
 800352a:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    container1.setPosition(530, 121, 238, 238);
 800352e:	23ee      	movs	r3, #238	; 0xee
 8003530:	9300      	str	r3, [sp, #0]
 8003532:	4640      	mov	r0, r8
 8003534:	2279      	movs	r2, #121	; 0x79
 8003536:	f240 2112 	movw	r1, #530	; 0x212
 800353a:	f7fe fe12 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_left.setXY(35, 118);
 800353e:	ee1a 0a90 	vmov	r0, s21
 8003542:	2276      	movs	r2, #118	; 0x76
 8003544:	2123      	movs	r1, #35	; 0x23
 8003546:	f7fe fdff 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 800354a:	f04f 0303 	mov.w	r3, #3
 800354e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 8003552:	a90b      	add	r1, sp, #44	; 0x2c
 8003554:	2304      	movs	r3, #4
 8003556:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800355a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800355e:	460b      	mov	r3, r1
 8003560:	a90a      	add	r1, sp, #40	; 0x28
 8003562:	460a      	mov	r2, r1
 8003564:	ee1a 0a90 	vmov	r0, s21
 8003568:	a909      	add	r1, sp, #36	; 0x24
 800356a:	9500      	str	r5, [sp, #0]
 800356c:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8003570:	f008 febe 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003574:	4b70      	ldr	r3, [pc, #448]	; (8003738 <_ZN14ManualViewBaseC1Ev+0x3c4>)
 8003576:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
    container1.add(btn_left);
 800357a:	ee1a 1a90 	vmov	r1, s21
 800357e:	4640      	mov	r0, r8
 8003580:	f006 fde2 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setXY(155, 118);
 8003584:	4648      	mov	r0, r9
 8003586:	2276      	movs	r2, #118	; 0x76
 8003588:	219b      	movs	r1, #155	; 0x9b
 800358a:	f7fe fddd 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 800358e:	2308      	movs	r3, #8
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
 8003590:	a90b      	add	r1, sp, #44	; 0x2c
 8003592:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003596:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800359a:	f04f 0203 	mov.w	r2, #3
 800359e:	460b      	mov	r3, r1
 80035a0:	a90a      	add	r1, sp, #40	; 0x28
 80035a2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80035a6:	4648      	mov	r0, r9
 80035a8:	460a      	mov	r2, r1
 80035aa:	9500      	str	r5, [sp, #0]
 80035ac:	a909      	add	r1, sp, #36	; 0x24
 80035ae:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80035b2:	f008 fe9d 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035b6:	4b60      	ldr	r3, [pc, #384]	; (8003738 <_ZN14ManualViewBaseC1Ev+0x3c4>)
 80035b8:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
    container1.add(btn_right);
 80035bc:	4649      	mov	r1, r9
 80035be:	4640      	mov	r0, r8
 80035c0:	f006 fdc2 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_down.setXY(95, 178);
 80035c4:	ee1b 0a10 	vmov	r0, s22
 80035c8:	22b2      	movs	r2, #178	; 0xb2
 80035ca:	215f      	movs	r1, #95	; 0x5f
 80035cc:	f7fe fdbc 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 80035d0:	2306      	movs	r3, #6
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 80035d2:	a90b      	add	r1, sp, #44	; 0x2c
 80035d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035d8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80035dc:	f04f 0203 	mov.w	r2, #3
 80035e0:	460b      	mov	r3, r1
 80035e2:	a90a      	add	r1, sp, #40	; 0x28
 80035e4:	ee1b 0a10 	vmov	r0, s22
 80035e8:	f8df 9154 	ldr.w	r9, [pc, #340]	; 8003740 <_ZN14ManualViewBaseC1Ev+0x3cc>
 80035ec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80035f0:	9500      	str	r5, [sp, #0]
 80035f2:	460a      	mov	r2, r1
 80035f4:	a909      	add	r1, sp, #36	; 0x24
 80035f6:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80035fa:	f008 fe79 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container1.add(btn_down);
 80035fe:	ee1b 1a10 	vmov	r1, s22
 8003602:	f8c4 91f8 	str.w	r9, [r4, #504]	; 0x1f8
 8003606:	4640      	mov	r0, r8
 8003608:	f006 fd9e 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_up.setXY(95, 58);
 800360c:	ee1b 0a90 	vmov	r0, s23
 8003610:	223a      	movs	r2, #58	; 0x3a
 8003612:	215f      	movs	r1, #95	; 0x5f
 8003614:	f7fe fd98 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 8003618:	230a      	movs	r3, #10
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 800361a:	a90a      	add	r1, sp, #40	; 0x28
 800361c:	f04f 0203 	mov.w	r2, #3
 8003620:	ee1b 0a90 	vmov	r0, s23
 8003624:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003628:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800362c:	460a      	mov	r2, r1
 800362e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8003632:	a909      	add	r1, sp, #36	; 0x24
 8003634:	ab0b      	add	r3, sp, #44	; 0x2c
 8003636:	9500      	str	r5, [sp, #0]
 8003638:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800363c:	f008 fe58 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container1.add(btn_up);
 8003640:	ee1b 1a90 	vmov	r1, s23
 8003644:	f8c4 9234 	str.w	r9, [r4, #564]	; 0x234
 8003648:	4640      	mov	r0, r8
 800364a:	f006 fd7d 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(51, 15);
 800364e:	220f      	movs	r2, #15
 8003650:	4650      	mov	r0, sl
 8003652:	2133      	movs	r1, #51	; 0x33
 8003654:	f7fe fd78 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003658:	f10d 0910 	add.w	r9, sp, #16
        this->color = color;
 800365c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003660:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        boundingArea = calculateBoundingArea();
 8003664:	4651      	mov	r1, sl
 8003666:	4648      	mov	r0, r9
        linespace = space;
 8003668:	f8a4 626c 	strh.w	r6, [r4, #620]	; 0x26c
        boundingArea = calculateBoundingArea();
 800366c:	f008 f9ac 	bl	800b9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003670:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003674:	f504 731d 	add.w	r3, r4, #628	; 0x274
 8003678:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800367c:	4b2f      	ldr	r3, [pc, #188]	; (800373c <_ZN14ManualViewBaseC1Ev+0x3c8>)
 800367e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OV1C));
 8003680:	4629      	mov	r1, r5
 8003682:	4650      	mov	r0, sl
 8003684:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 8003688:	f008 fcf2 	bl	800c070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container1.add(textArea1);
 800368c:	4651      	mov	r1, sl
 800368e:	4640      	mov	r0, r8
 8003690:	f006 fd5a 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    container2.setPosition(86, 157, 197, 167);
 8003694:	23a7      	movs	r3, #167	; 0xa7
 8003696:	9300      	str	r3, [sp, #0]
 8003698:	4638      	mov	r0, r7
 800369a:	23c5      	movs	r3, #197	; 0xc5
 800369c:	229d      	movs	r2, #157	; 0x9d
 800369e:	2156      	movs	r1, #86	; 0x56
 80036a0:	f7fe fd5f 	bl	8002162 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_plus.setXY(0, 107);
 80036a4:	ee1c 0a10 	vmov	r0, s24
 80036a8:	4631      	mov	r1, r6
 80036aa:	226b      	movs	r2, #107	; 0x6b
 80036ac:	f7fe fd4c 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 80036b0:	230b      	movs	r3, #11
    btn_plus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID));
 80036b2:	a90b      	add	r1, sp, #44	; 0x2c
 80036b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80036b8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80036bc:	f04f 0203 	mov.w	r2, #3
 80036c0:	460b      	mov	r3, r1
 80036c2:	a90a      	add	r1, sp, #40	; 0x28
 80036c4:	ee1c 0a10 	vmov	r0, s24
 80036c8:	f8df a078 	ldr.w	sl, [pc, #120]	; 8003744 <_ZN14ManualViewBaseC1Ev+0x3d0>
 80036cc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80036d0:	9500      	str	r5, [sp, #0]
 80036d2:	460a      	mov	r2, r1
 80036d4:	a909      	add	r1, sp, #36	; 0x24
 80036d6:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80036da:	f008 fe09 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container2.add(btn_plus);
 80036de:	ee1c 1a10 	vmov	r1, s24
 80036e2:	4638      	mov	r0, r7
 80036e4:	f8c4 a2e4 	str.w	sl, [r4, #740]	; 0x2e4
 80036e8:	f006 fd2e 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_minus.setXY(137, 107);
 80036ec:	ee1c 0a90 	vmov	r0, s25
 80036f0:	226b      	movs	r2, #107	; 0x6b
 80036f2:	2189      	movs	r1, #137	; 0x89
 80036f4:	f7fe fd28 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 80036f8:	2307      	movs	r3, #7
    btn_minus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID));
 80036fa:	a90b      	add	r1, sp, #44	; 0x2c
 80036fc:	f04f 0203 	mov.w	r2, #3
 8003700:	ee1c 0a90 	vmov	r0, s25
 8003704:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003708:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800370c:	aa0a      	add	r2, sp, #40	; 0x28
 800370e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8003712:	9500      	str	r5, [sp, #0]
 8003714:	460b      	mov	r3, r1
 8003716:	a909      	add	r1, sp, #36	; 0x24
 8003718:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800371c:	f008 fde8 	bl	800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003720:	e012      	b.n	8003748 <_ZN14ManualViewBaseC1Ev+0x3d4>
 8003722:	bf00      	nop
 8003724:	0801f0b0 	.word	0x0801f0b0
 8003728:	0801f8a8 	.word	0x0801f8a8
 800372c:	0801f098 	.word	0x0801f098
 8003730:	080032e1 	.word	0x080032e1
 8003734:	00070011 	.word	0x00070011
 8003738:	000f0016 	.word	0x000f0016
 800373c:	0801e6b0 	.word	0x0801e6b0
 8003740:	0016000f 	.word	0x0016000f
 8003744:	00110007 	.word	0x00110007
    container2.add(btn_minus);
 8003748:	ee1c 1a90 	vmov	r1, s25
 800374c:	4638      	mov	r0, r7
 800374e:	f8c4 a320 	str.w	sl, [r4, #800]	; 0x320
 8003752:	f006 fcf9 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(85, 59);
 8003756:	ee19 0a10 	vmov	r0, s18
 800375a:	223b      	movs	r2, #59	; 0x3b
 800375c:	2155      	movs	r1, #85	; 0x55
 800375e:	f7fe fcf3 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003762:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8003766:	ee19 1a10 	vmov	r1, s18
        this->color = color;
 800376a:	f8c4 2354 	str.w	r2, [r4, #852]	; 0x354
        boundingArea = calculateBoundingArea();
 800376e:	4648      	mov	r0, r9
        linespace = space;
 8003770:	f8a4 6358 	strh.w	r6, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003774:	f008 f928 	bl	800b9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003778:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800377c:	f504 7358 	add.w	r3, r4, #864	; 0x360
 8003780:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003784:	4b2b      	ldr	r3, [pc, #172]	; (8003834 <_ZN14ManualViewBaseC1Ev+0x4c0>)
 8003786:	930c      	str	r3, [sp, #48]	; 0x30
 8003788:	f04f 0201 	mov.w	r2, #1
    textArea2.setTypedText(touchgfx::TypedText(T_TXT_DIST));
 800378c:	ee19 0a10 	vmov	r0, s18
 8003790:	4629      	mov	r1, r5
 8003792:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8003796:	f008 fc6b 	bl	800c070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container2.add(textArea2);
 800379a:	ee19 1a10 	vmov	r1, s18
 800379e:	4638      	mov	r0, r7
 80037a0:	f006 fcd2 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(30, 18);
 80037a4:	ee19 0a90 	vmov	r0, s19
 80037a8:	2212      	movs	r2, #18
 80037aa:	211e      	movs	r1, #30
 80037ac:	f7fe fccc 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80037b0:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80037b4:	ee19 1a90 	vmov	r1, s19
        this->color = color;
 80037b8:	f8c4 239c 	str.w	r2, [r4, #924]	; 0x39c
        boundingArea = calculateBoundingArea();
 80037bc:	4648      	mov	r0, r9
        linespace = space;
 80037be:	f8a4 63a0 	strh.w	r6, [r4, #928]	; 0x3a0
        boundingArea = calculateBoundingArea();
 80037c2:	f008 f901 	bl	800b9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037c6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80037ca:	f504 736a 	add.w	r3, r4, #936	; 0x3a8
 80037ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80037d2:	4b18      	ldr	r3, [pc, #96]	; (8003834 <_ZN14ManualViewBaseC1Ev+0x4c0>)
 80037d4:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HKAA));
 80037d6:	ee19 0a90 	vmov	r0, s19
 80037da:	4629      	mov	r1, r5
 80037dc:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 80037e0:	f008 fc46 	bl	800c070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container2.add(textArea3);
 80037e4:	ee19 1a90 	vmov	r1, s19
 80037e8:	4638      	mov	r0, r7
 80037ea:	f006 fcad 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037ee:	1d20      	adds	r0, r4, #4
 80037f0:	ee18 1a10 	vmov	r1, s16
 80037f4:	9003      	str	r0, [sp, #12]
 80037f6:	f006 fca7 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037fa:	ee1d 1a10 	vmov	r1, s26
 80037fe:	9803      	ldr	r0, [sp, #12]
 8003800:	f006 fca2 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003804:	ee18 1a90 	vmov	r1, s17
 8003808:	9803      	ldr	r0, [sp, #12]
 800380a:	f006 fc9d 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800380e:	ee1a 1a10 	vmov	r1, s20
 8003812:	9803      	ldr	r0, [sp, #12]
 8003814:	f006 fc98 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003818:	9803      	ldr	r0, [sp, #12]
 800381a:	4641      	mov	r1, r8
 800381c:	f006 fc94 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003820:	9803      	ldr	r0, [sp, #12]
 8003822:	4639      	mov	r1, r7
 8003824:	f006 fc90 	bl	800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003828:	4620      	mov	r0, r4
 800382a:	b00f      	add	sp, #60	; 0x3c
 800382c:	ecbd 8b0c 	vpop	{d8-d13}
 8003830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003834:	0801e6b0 	.word	0x0801e6b0

08003838 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003838:	4770      	bx	lr
	...

0800383c <_Z23getFont_verdana_10_4bppv>:
{
 800383c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800383e:	4d15      	ldr	r5, [pc, #84]	; (8003894 <_Z23getFont_verdana_10_4bppv+0x58>)
 8003840:	782c      	ldrb	r4, [r5, #0]
 8003842:	f3bf 8f5b 	dmb	ish
 8003846:	f014 0401 	ands.w	r4, r4, #1
{
 800384a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800384c:	d11e      	bne.n	800388c <_Z23getFont_verdana_10_4bppv+0x50>
 800384e:	4628      	mov	r0, r5
 8003850:	f019 fa08 	bl	801cc64 <__cxa_guard_acquire>
 8003854:	b1d0      	cbz	r0, 800388c <_Z23getFont_verdana_10_4bppv+0x50>
 8003856:	233f      	movs	r3, #63	; 0x3f
 8003858:	9307      	str	r3, [sp, #28]
 800385a:	4b0f      	ldr	r3, [pc, #60]	; (8003898 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800385c:	9306      	str	r3, [sp, #24]
 800385e:	4b0f      	ldr	r3, [pc, #60]	; (800389c <_Z23getFont_verdana_10_4bppv+0x60>)
 8003860:	490f      	ldr	r1, [pc, #60]	; (80038a0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003862:	4810      	ldr	r0, [pc, #64]	; (80038a4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003864:	9408      	str	r4, [sp, #32]
 8003866:	2201      	movs	r2, #1
 8003868:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800386c:	2304      	movs	r3, #4
 800386e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003872:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003876:	230a      	movs	r3, #10
 8003878:	9403      	str	r4, [sp, #12]
 800387a:	9400      	str	r4, [sp, #0]
 800387c:	f7ff fb70 	bl	8002f60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003880:	4809      	ldr	r0, [pc, #36]	; (80038a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003882:	f019 fa39 	bl	801ccf8 <atexit>
 8003886:	4628      	mov	r0, r5
 8003888:	f019 f9f8 	bl	801cc7c <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800388c:	4805      	ldr	r0, [pc, #20]	; (80038a4 <_Z23getFont_verdana_10_4bppv+0x68>)
 800388e:	b00d      	add	sp, #52	; 0x34
 8003890:	bd30      	pop	{r4, r5, pc}
 8003892:	bf00      	nop
 8003894:	20001824 	.word	0x20001824
 8003898:	08021d1c 	.word	0x08021d1c
 800389c:	08021d28 	.word	0x08021d28
 80038a0:	90022268 	.word	0x90022268
 80038a4:	20001828 	.word	0x20001828
 80038a8:	08003839 	.word	0x08003839

080038ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 23, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80038ac:	4770      	bx	lr
	...

080038b0 <_Z23getFont_verdana_20_4bppv>:
{
 80038b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 23, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80038b2:	4d15      	ldr	r5, [pc, #84]	; (8003908 <_Z23getFont_verdana_20_4bppv+0x58>)
 80038b4:	782c      	ldrb	r4, [r5, #0]
 80038b6:	f3bf 8f5b 	dmb	ish
 80038ba:	f014 0401 	ands.w	r4, r4, #1
{
 80038be:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 23, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80038c0:	d11f      	bne.n	8003902 <_Z23getFont_verdana_20_4bppv+0x52>
 80038c2:	4628      	mov	r0, r5
 80038c4:	f019 f9ce 	bl	801cc64 <__cxa_guard_acquire>
 80038c8:	b1d8      	cbz	r0, 8003902 <_Z23getFont_verdana_20_4bppv+0x52>
 80038ca:	233f      	movs	r3, #63	; 0x3f
 80038cc:	9307      	str	r3, [sp, #28]
 80038ce:	4b0f      	ldr	r3, [pc, #60]	; (800390c <_Z23getFont_verdana_20_4bppv+0x5c>)
 80038d0:	9306      	str	r3, [sp, #24]
 80038d2:	4b0f      	ldr	r3, [pc, #60]	; (8003910 <_Z23getFont_verdana_20_4bppv+0x60>)
 80038d4:	490f      	ldr	r1, [pc, #60]	; (8003914 <_Z23getFont_verdana_20_4bppv+0x64>)
 80038d6:	4810      	ldr	r0, [pc, #64]	; (8003918 <_Z23getFont_verdana_20_4bppv+0x68>)
 80038d8:	9408      	str	r4, [sp, #32]
 80038da:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80038de:	2201      	movs	r2, #1
 80038e0:	2304      	movs	r3, #4
 80038e2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80038e6:	9300      	str	r3, [sp, #0]
 80038e8:	2217      	movs	r2, #23
 80038ea:	2314      	movs	r3, #20
 80038ec:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80038f0:	9403      	str	r4, [sp, #12]
 80038f2:	f7ff fb35 	bl	8002f60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80038f6:	4809      	ldr	r0, [pc, #36]	; (800391c <_Z23getFont_verdana_20_4bppv+0x6c>)
 80038f8:	f019 f9fe 	bl	801ccf8 <atexit>
 80038fc:	4628      	mov	r0, r5
 80038fe:	f019 f9bd 	bl	801cc7c <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003902:	4805      	ldr	r0, [pc, #20]	; (8003918 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003904:	b00d      	add	sp, #52	; 0x34
 8003906:	bd30      	pop	{r4, r5, pc}
 8003908:	20001850 	.word	0x20001850
 800390c:	08021d20 	.word	0x08021d20
 8003910:	08021d2c 	.word	0x08021d2c
 8003914:	90022278 	.word	0x90022278
 8003918:	20001854 	.word	0x20001854
 800391c:	080038ad 	.word	0x080038ad

08003920 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 2, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003920:	4770      	bx	lr
	...

08003924 <_Z23getFont_verdana_40_4bppv>:
{
 8003924:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 2, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003926:	4d15      	ldr	r5, [pc, #84]	; (800397c <_Z23getFont_verdana_40_4bppv+0x58>)
 8003928:	782c      	ldrb	r4, [r5, #0]
 800392a:	f3bf 8f5b 	dmb	ish
 800392e:	f014 0401 	ands.w	r4, r4, #1
{
 8003932:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 2, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003934:	d11f      	bne.n	8003976 <_Z23getFont_verdana_40_4bppv+0x52>
 8003936:	4628      	mov	r0, r5
 8003938:	f019 f994 	bl	801cc64 <__cxa_guard_acquire>
 800393c:	b1d8      	cbz	r0, 8003976 <_Z23getFont_verdana_40_4bppv+0x52>
 800393e:	233f      	movs	r3, #63	; 0x3f
 8003940:	9307      	str	r3, [sp, #28]
 8003942:	4b0f      	ldr	r3, [pc, #60]	; (8003980 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003944:	9306      	str	r3, [sp, #24]
 8003946:	4b0f      	ldr	r3, [pc, #60]	; (8003984 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003948:	490f      	ldr	r1, [pc, #60]	; (8003988 <_Z23getFont_verdana_40_4bppv+0x64>)
 800394a:	4810      	ldr	r0, [pc, #64]	; (800398c <_Z23getFont_verdana_40_4bppv+0x68>)
 800394c:	9408      	str	r4, [sp, #32]
 800394e:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003952:	2204      	movs	r2, #4
 8003954:	2301      	movs	r3, #1
 8003956:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800395a:	9300      	str	r3, [sp, #0]
 800395c:	2202      	movs	r2, #2
 800395e:	2328      	movs	r3, #40	; 0x28
 8003960:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003964:	9403      	str	r4, [sp, #12]
 8003966:	f7ff fafb 	bl	8002f60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800396a:	4809      	ldr	r0, [pc, #36]	; (8003990 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800396c:	f019 f9c4 	bl	801ccf8 <atexit>
 8003970:	4628      	mov	r0, r5
 8003972:	f019 f983 	bl	801cc7c <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003976:	4805      	ldr	r0, [pc, #20]	; (800398c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003978:	b00d      	add	sp, #52	; 0x34
 800397a:	bd30      	pop	{r4, r5, pc}
 800397c:	2000187c 	.word	0x2000187c
 8003980:	08021d24 	.word	0x08021d24
 8003984:	08021d30 	.word	0x08021d30
 8003988:	900223bc 	.word	0x900223bc
 800398c:	20001880 	.word	0x20001880
 8003990:	08003921 	.word	0x08003921

08003994 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003994:	2000      	movs	r0, #0
 8003996:	4770      	bx	lr

08003998 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8003998:	2000      	movs	r0, #0
 800399a:	4770      	bx	lr

0800399c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800399c:	b40e      	push	{r1, r2, r3}
 800399e:	b503      	push	{r0, r1, lr}
 80039a0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80039a2:	2100      	movs	r1, #0
{
 80039a4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80039a8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80039aa:	f00b f9d1 	bl	800ed50 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80039ae:	b002      	add	sp, #8
 80039b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80039b4:	b003      	add	sp, #12
 80039b6:	4770      	bx	lr

080039b8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80039b8:	b40c      	push	{r2, r3}
 80039ba:	b507      	push	{r0, r1, r2, lr}
 80039bc:	ab04      	add	r3, sp, #16
 80039be:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80039c2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80039c4:	f00b f9c4 	bl	800ed50 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80039c8:	b003      	add	sp, #12
 80039ca:	f85d eb04 	ldr.w	lr, [sp], #4
 80039ce:	b002      	add	sp, #8
 80039d0:	4770      	bx	lr
	...

080039d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80039d4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80039d6:	b510      	push	{r4, lr}
 80039d8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80039da:	b373      	cbz	r3, 8003a3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80039dc:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80039de:	b92b      	cbnz	r3, 80039ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80039e0:	4b18      	ldr	r3, [pc, #96]	; (8003a44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80039e2:	4a19      	ldr	r2, [pc, #100]	; (8003a48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80039e4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80039e6:	4819      	ldr	r0, [pc, #100]	; (8003a4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80039e8:	f019 f968 	bl	801ccbc <__assert_func>
            return buffer[pos];
 80039ec:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80039ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80039f2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80039f4:	b30b      	cbz	r3, 8003a3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80039f6:	f00c fce3 	bl	80103c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80039fa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80039fc:	2b01      	cmp	r3, #1
 80039fe:	d803      	bhi.n	8003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003a00:	4b13      	ldr	r3, [pc, #76]	; (8003a50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003a02:	4a14      	ldr	r2, [pc, #80]	; (8003a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003a04:	21c5      	movs	r1, #197	; 0xc5
 8003a06:	e7ee      	b.n	80039e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003a08:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8003a0a:	1c53      	adds	r3, r2, #1
 8003a0c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003a0e:	2b09      	cmp	r3, #9
 8003a10:	4619      	mov	r1, r3
 8003a12:	bf88      	it	hi
 8003a14:	f1a3 010a 	subhi.w	r1, r3, #10
 8003a18:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003a1c:	f640 103f 	movw	r0, #2367	; 0x93f
 8003a20:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8003a22:	4281      	cmp	r1, r0
 8003a24:	d109      	bne.n	8003a3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003a26:	2b0a      	cmp	r3, #10
 8003a28:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a2c:	bf28      	it	cs
 8003a2e:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003a30:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003a34:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8003a36:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8003a38:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003a3a:	4620      	mov	r0, r4
}
 8003a3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003a40:	f00c bba2 	b.w	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003a44:	0801f0e0 	.word	0x0801f0e0
 8003a48:	0801f0e9 	.word	0x0801f0e9
 8003a4c:	0801f194 	.word	0x0801f194
 8003a50:	0801f1de 	.word	0x0801f1de
 8003a54:	0801f1ec 	.word	0x0801f1ec

08003a58 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003a58:	f00c bb4e 	b.w	80100f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003a5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003a5c:	b510      	push	{r4, lr}
 8003a5e:	b086      	sub	sp, #24
 8003a60:	ac02      	add	r4, sp, #8
 8003a62:	e884 0006 	stmia.w	r4, {r1, r2}
 8003a66:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003a68:	ab0a      	add	r3, sp, #40	; 0x28
 8003a6a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003a6c:	9301      	str	r3, [sp, #4]
 8003a6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a70:	9300      	str	r3, [sp, #0]
 8003a72:	4621      	mov	r1, r4
 8003a74:	9b08      	ldr	r3, [sp, #32]
 8003a76:	f009 fe21 	bl	800d6bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003a7a:	b006      	add	sp, #24
 8003a7c:	bd10      	pop	{r4, pc}
	...

08003a80 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003a80:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003a82:	bb18      	cbnz	r0, 8003acc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003a84:	4b12      	ldr	r3, [pc, #72]	; (8003ad0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003a86:	4813      	ldr	r0, [pc, #76]	; (8003ad4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	4913      	ldr	r1, [pc, #76]	; (8003ad8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003a8c:	b1b3      	cbz	r3, 8003abc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003a8e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003a90:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003a92:	441a      	add	r2, r3
 8003a94:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003a96:	685a      	ldr	r2, [r3, #4]
 8003a98:	441a      	add	r2, r3
 8003a9a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003a9c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003a9e:	4b0f      	ldr	r3, [pc, #60]	; (8003adc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003aa4:	f000 f838 	bl	8003b18 <_ZN17TypedTextDatabase8getFontsEv>
 8003aa8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003aaa:	f000 f833 	bl	8003b14 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003aae:	4b0c      	ldr	r3, [pc, #48]	; (8003ae0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003ab0:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003ab2:	4b0c      	ldr	r3, [pc, #48]	; (8003ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003ab4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003ab6:	4b0c      	ldr	r3, [pc, #48]	; (8003ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003ab8:	8018      	strh	r0, [r3, #0]
    }
}
 8003aba:	e007      	b.n	8003acc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003abc:	4b0b      	ldr	r3, [pc, #44]	; (8003aec <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003abe:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003ac0:	4b0b      	ldr	r3, [pc, #44]	; (8003af0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003ac2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003ac4:	4b0b      	ldr	r3, [pc, #44]	; (8003af4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003ac6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003ac8:	2c00      	cmp	r4, #0
 8003aca:	d1e8      	bne.n	8003a9e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003acc:	bd38      	pop	{r3, r4, r5, pc}
 8003ace:	bf00      	nop
 8003ad0:	200018a8 	.word	0x200018a8
 8003ad4:	200018ac 	.word	0x200018ac
 8003ad8:	200018b0 	.word	0x200018b0
 8003adc:	200018b4 	.word	0x200018b4
 8003ae0:	2000a85c 	.word	0x2000a85c
 8003ae4:	2000a864 	.word	0x2000a864
 8003ae8:	2000a860 	.word	0x2000a860
 8003aec:	900223f4 	.word	0x900223f4
 8003af0:	900223d8 	.word	0x900223d8
 8003af4:	9002248c 	.word	0x9002248c

08003af8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003af8:	4b04      	ldr	r3, [pc, #16]	; (8003b0c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003b00:	4b03      	ldr	r3, [pc, #12]	; (8003b10 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003b02:	681b      	ldr	r3, [r3, #0]
}
 8003b04:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003b08:	4770      	bx	lr
 8003b0a:	bf00      	nop
 8003b0c:	200018b0 	.word	0x200018b0
 8003b10:	200018ac 	.word	0x200018ac

08003b14 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003b14:	2007      	movs	r0, #7
 8003b16:	4770      	bx	lr

08003b18 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003b18:	4800      	ldr	r0, [pc, #0]	; (8003b1c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003b1a:	4770      	bx	lr
 8003b1c:	200018b8 	.word	0x200018b8

08003b20 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003b20:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003b22:	f7ff fec5 	bl	80038b0 <_Z23getFont_verdana_20_4bppv>
};
 8003b26:	4c04      	ldr	r4, [pc, #16]	; (8003b38 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003b28:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003b2a:	f7ff fefb 	bl	8003924 <_Z23getFont_verdana_40_4bppv>
};
 8003b2e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8003b30:	f7ff fe84 	bl	800383c <_Z23getFont_verdana_10_4bppv>
};
 8003b34:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8003b36:	bd10      	pop	{r4, pc}
 8003b38:	200018b8 	.word	0x200018b8

08003b3c <_ZN18AutomaticPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~AutomaticPresenter() {};
 8003b3c:	4770      	bx	lr

08003b3e <_ZThn4_N18AutomaticPresenterD1Ev>:
 8003b3e:	3804      	subs	r0, #4
 8003b40:	4770      	bx	lr

08003b42 <_ZN18AutomaticPresenter10deactivateEv>:
}

void AutomaticPresenter::activate()
{

}
 8003b42:	4770      	bx	lr

08003b44 <_ZN18AutomaticPresenterD0Ev>:
 8003b44:	b510      	push	{r4, lr}
 8003b46:	2110      	movs	r1, #16
 8003b48:	4604      	mov	r4, r0
 8003b4a:	f019 f889 	bl	801cc60 <_ZdlPvj>
 8003b4e:	4620      	mov	r0, r4
 8003b50:	bd10      	pop	{r4, pc}

08003b52 <_ZThn4_N18AutomaticPresenterD0Ev>:
 8003b52:	f1a0 0004 	sub.w	r0, r0, #4
 8003b56:	e7f5      	b.n	8003b44 <_ZN18AutomaticPresenterD0Ev>

08003b58 <_ZN18AutomaticPresenterC1ER13AutomaticView>:
AutomaticPresenter::AutomaticPresenter(AutomaticView& v)
 8003b58:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8003b5a:	2200      	movs	r2, #0
 8003b5c:	6082      	str	r2, [r0, #8]
    : view(v)
 8003b5e:	4a04      	ldr	r2, [pc, #16]	; (8003b70 <_ZN18AutomaticPresenterC1ER13AutomaticView+0x18>)
 8003b60:	60c1      	str	r1, [r0, #12]
 8003b62:	f102 0408 	add.w	r4, r2, #8
 8003b66:	3220      	adds	r2, #32
 8003b68:	6004      	str	r4, [r0, #0]
 8003b6a:	6042      	str	r2, [r0, #4]
}
 8003b6c:	bd10      	pop	{r4, pc}
 8003b6e:	bf00      	nop
 8003b70:	0801f2c0 	.word	0x0801f2c0

08003b74 <_ZN13AutomaticViewD1Ev>:

class AutomaticView : public AutomaticViewBase
{
public:
    AutomaticView();
    virtual ~AutomaticView() {}
 8003b74:	4770      	bx	lr

08003b76 <_ZN13AutomaticView14tearDownScreenEv>:
}

void AutomaticView::tearDownScreen()
{
    AutomaticViewBase::tearDownScreen();
}
 8003b76:	4770      	bx	lr

08003b78 <_ZN13AutomaticView11setupScreenEv>:
    AutomaticViewBase::setupScreen();
 8003b78:	f7fe baa9 	b.w	80020ce <_ZN17AutomaticViewBase11setupScreenEv>

08003b7c <_ZN13AutomaticViewD0Ev>:
 8003b7c:	b510      	push	{r4, lr}
 8003b7e:	21e4      	movs	r1, #228	; 0xe4
 8003b80:	4604      	mov	r4, r0
 8003b82:	f019 f86d 	bl	801cc60 <_ZdlPvj>
 8003b86:	4620      	mov	r0, r4
 8003b88:	bd10      	pop	{r4, pc}
	...

08003b8c <_ZN13AutomaticViewC1Ev>:
AutomaticView::AutomaticView()
 8003b8c:	b510      	push	{r4, lr}
 8003b8e:	4604      	mov	r4, r0
 8003b90:	f7fe fb10 	bl	80021b4 <_ZN17AutomaticViewBaseC1Ev>
 8003b94:	4b01      	ldr	r3, [pc, #4]	; (8003b9c <_ZN13AutomaticViewC1Ev+0x10>)
 8003b96:	6023      	str	r3, [r4, #0]
}
 8003b98:	4620      	mov	r0, r4
 8003b9a:	bd10      	pop	{r4, pc}
 8003b9c:	0801f2f0 	.word	0x0801f2f0

08003ba0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003ba0:	4770      	bx	lr

08003ba2 <_ZN19FrontendApplicationD0Ev>:
 8003ba2:	b510      	push	{r4, lr}
 8003ba4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003ba8:	4604      	mov	r4, r0
 8003baa:	f019 f859 	bl	801cc60 <_ZdlPvj>
 8003bae:	4620      	mov	r0, r4
 8003bb0:	bd10      	pop	{r4, pc}

08003bb2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003bb2:	b510      	push	{r4, lr}
 8003bb4:	4604      	mov	r4, r0
    {
        model.tick();
 8003bb6:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003bba:	f000 f8b1 	bl	8003d20 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003bbe:	4620      	mov	r0, r4
    }
 8003bc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003bc4:	f00a b8d8 	b.w	800dd78 <_ZN8touchgfx11Application15handleTickEventEv>

08003bc8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003bc8:	b510      	push	{r4, lr}
 8003bca:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003bcc:	f7fe fd74 	bl	80026b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003bd0:	4b01      	ldr	r3, [pc, #4]	; (8003bd8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003bd2:	6023      	str	r3, [r4, #0]
{

}
 8003bd4:	4620      	mov	r0, r4
 8003bd6:	bd10      	pop	{r4, pc}
 8003bd8:	0801f324 	.word	0x0801f324

08003bdc <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8003bdc:	4770      	bx	lr

08003bde <_ZThn4_N13MainPresenterD1Ev>:
 8003bde:	3804      	subs	r0, #4
 8003be0:	4770      	bx	lr

08003be2 <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8003be2:	4770      	bx	lr

08003be4 <_ZN13MainPresenterD0Ev>:
 8003be4:	b510      	push	{r4, lr}
 8003be6:	2110      	movs	r1, #16
 8003be8:	4604      	mov	r4, r0
 8003bea:	f019 f839 	bl	801cc60 <_ZdlPvj>
 8003bee:	4620      	mov	r0, r4
 8003bf0:	bd10      	pop	{r4, pc}

08003bf2 <_ZThn4_N13MainPresenterD0Ev>:
 8003bf2:	f1a0 0004 	sub.w	r0, r0, #4
 8003bf6:	e7f5      	b.n	8003be4 <_ZN13MainPresenterD0Ev>

08003bf8 <_ZN13MainPresenterC1ER8MainView>:
MainPresenter::MainPresenter(MainView& v)
 8003bf8:	b510      	push	{r4, lr}
 8003bfa:	2200      	movs	r2, #0
 8003bfc:	6082      	str	r2, [r0, #8]
    : view(v)
 8003bfe:	4a04      	ldr	r2, [pc, #16]	; (8003c10 <_ZN13MainPresenterC1ER8MainView+0x18>)
 8003c00:	60c1      	str	r1, [r0, #12]
 8003c02:	f102 0408 	add.w	r4, r2, #8
 8003c06:	3220      	adds	r2, #32
 8003c08:	6004      	str	r4, [r0, #0]
 8003c0a:	6042      	str	r2, [r0, #4]
}
 8003c0c:	bd10      	pop	{r4, pc}
 8003c0e:	bf00      	nop
 8003c10:	0801f368 	.word	0x0801f368

08003c14 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003c14:	4770      	bx	lr

08003c16 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003c16:	4770      	bx	lr

08003c18 <_ZN8MainView11setupScreenEv>:
    MainViewBase::setupScreen();
 8003c18:	f7ff b9cd 	b.w	8002fb6 <_ZN12MainViewBase11setupScreenEv>

08003c1c <_ZN8MainViewD0Ev>:
 8003c1c:	b510      	push	{r4, lr}
 8003c1e:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8003c22:	4604      	mov	r4, r0
 8003c24:	f019 f81c 	bl	801cc60 <_ZdlPvj>
 8003c28:	4620      	mov	r0, r4
 8003c2a:	bd10      	pop	{r4, pc}

08003c2c <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003c2c:	b510      	push	{r4, lr}
 8003c2e:	4604      	mov	r4, r0
 8003c30:	f7ff fa48 	bl	80030c4 <_ZN12MainViewBaseC1Ev>
 8003c34:	4b01      	ldr	r3, [pc, #4]	; (8003c3c <_ZN8MainViewC1Ev+0x10>)
 8003c36:	6023      	str	r3, [r4, #0]
}
 8003c38:	4620      	mov	r0, r4
 8003c3a:	bd10      	pop	{r4, pc}
 8003c3c:	0801f398 	.word	0x0801f398

08003c40 <_ZN15ManualPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ManualPresenter() {};
 8003c40:	4770      	bx	lr

08003c42 <_ZThn4_N15ManualPresenterD1Ev>:
 8003c42:	3804      	subs	r0, #4
 8003c44:	4770      	bx	lr

08003c46 <_ZN15ManualPresenter10deactivateEv>:
}

void ManualPresenter::activate()
{

}
 8003c46:	4770      	bx	lr

08003c48 <_ZN15ManualPresenterD0Ev>:
 8003c48:	b510      	push	{r4, lr}
 8003c4a:	2110      	movs	r1, #16
 8003c4c:	4604      	mov	r4, r0
 8003c4e:	f019 f807 	bl	801cc60 <_ZdlPvj>
 8003c52:	4620      	mov	r0, r4
 8003c54:	bd10      	pop	{r4, pc}

08003c56 <_ZThn4_N15ManualPresenterD0Ev>:
 8003c56:	f1a0 0004 	sub.w	r0, r0, #4
 8003c5a:	e7f5      	b.n	8003c48 <_ZN15ManualPresenterD0Ev>

08003c5c <_ZN15ManualPresenterC1ER10ManualView>:
ManualPresenter::ManualPresenter(ManualView& v)
 8003c5c:	b510      	push	{r4, lr}
 8003c5e:	2200      	movs	r2, #0
 8003c60:	6082      	str	r2, [r0, #8]
    : view(v)
 8003c62:	4a04      	ldr	r2, [pc, #16]	; (8003c74 <_ZN15ManualPresenterC1ER10ManualView+0x18>)
 8003c64:	60c1      	str	r1, [r0, #12]
 8003c66:	f102 0408 	add.w	r4, r2, #8
 8003c6a:	3220      	adds	r2, #32
 8003c6c:	6004      	str	r4, [r0, #0]
 8003c6e:	6042      	str	r2, [r0, #4]
}
 8003c70:	bd10      	pop	{r4, pc}
 8003c72:	bf00      	nop
 8003c74:	0801f3c4 	.word	0x0801f3c4

08003c78 <_ZN10ManualViewD1Ev>:

class ManualView : public ManualViewBase
{
public:
    ManualView();
    virtual ~ManualView() {}
 8003c78:	4770      	bx	lr

08003c7a <_ZN10ManualView14tearDownScreenEv>:
}

void ManualView::tearDownScreen()
{
    ManualViewBase::tearDownScreen();
}
 8003c7a:	4770      	bx	lr

08003c7c <_ZN10ManualView11setupScreenEv>:
    ManualViewBase::setupScreen();
 8003c7c:	f7ff bb04 	b.w	8003288 <_ZN14ManualViewBase11setupScreenEv>

08003c80 <_ZN10ManualViewD0Ev>:
 8003c80:	b510      	push	{r4, lr}
 8003c82:	f44f 7171 	mov.w	r1, #964	; 0x3c4
 8003c86:	4604      	mov	r4, r0
 8003c88:	f018 ffea 	bl	801cc60 <_ZdlPvj>
 8003c8c:	4620      	mov	r0, r4
 8003c8e:	bd10      	pop	{r4, pc}

08003c90 <_ZN10ManualViewC1Ev>:
ManualView::ManualView()
 8003c90:	b510      	push	{r4, lr}
 8003c92:	4604      	mov	r4, r0
 8003c94:	f7ff fb6e 	bl	8003374 <_ZN14ManualViewBaseC1Ev>
 8003c98:	4b01      	ldr	r3, [pc, #4]	; (8003ca0 <_ZN10ManualViewC1Ev+0x10>)
 8003c9a:	6023      	str	r3, [r4, #0]
}
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	bd10      	pop	{r4, pc}
 8003ca0:	0801f3f4 	.word	0x0801f3f4

08003ca4 <_Z5motori>:
	if(dir == 1){
 8003ca4:	2801      	cmp	r0, #1
void motor(int dir){
 8003ca6:	b508      	push	{r3, lr}
 8003ca8:	4602      	mov	r2, r0
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_RESET);	//dir
 8003caa:	f04f 0108 	mov.w	r1, #8
 8003cae:	bf18      	it	ne
 8003cb0:	2200      	movne	r2, #0
 8003cb2:	4811      	ldr	r0, [pc, #68]	; (8003cf8 <_Z5motori+0x54>)
 8003cb4:	f002 f828 	bl	8005d08 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET); 		//ena unlock
 8003cb8:	4810      	ldr	r0, [pc, #64]	; (8003cfc <_Z5motori+0x58>)
 8003cba:	2201      	movs	r2, #1
 8003cbc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003cc0:	f002 f822 	bl	8005d08 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_11, GPIO_PIN_RESET); 		//Pulse LOW
 8003cc4:	2200      	movs	r2, #0
 8003cc6:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003cca:	480d      	ldr	r0, [pc, #52]	; (8003d00 <_Z5motori+0x5c>)
 8003ccc:	f002 f81c 	bl	8005d08 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8003cd0:	2001      	movs	r0, #1
 8003cd2:	f001 f82f 	bl	8004d34 <HAL_Delay>
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_11, GPIO_PIN_SET); 		//Pulse HIGH
 8003cd6:	2201      	movs	r2, #1
 8003cd8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003cdc:	4808      	ldr	r0, [pc, #32]	; (8003d00 <_Z5motori+0x5c>)
 8003cde:	f002 f813 	bl	8005d08 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8003ce2:	2001      	movs	r0, #1
 8003ce4:	f001 f826 	bl	8004d34 <HAL_Delay>
}
 8003ce8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET); 		//ena lock
 8003cec:	4803      	ldr	r0, [pc, #12]	; (8003cfc <_Z5motori+0x58>)
 8003cee:	2200      	movs	r2, #0
 8003cf0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003cf4:	f002 b808 	b.w	8005d08 <HAL_GPIO_WritePin>
 8003cf8:	40020c00 	.word	0x40020c00
 8003cfc:	40020400 	.word	0x40020400
 8003d00:	40021800 	.word	0x40021800

08003d04 <_Z5rodarv>:
void rodar(){
 8003d04:	b510      	push	{r4, lr}
 8003d06:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
		motor(0);
 8003d0a:	2000      	movs	r0, #0
 8003d0c:	f7ff ffca 	bl	8003ca4 <_Z5motori>
	for(int i = 0; i < 1000; i++){
 8003d10:	3c01      	subs	r4, #1
 8003d12:	d1fa      	bne.n	8003d0a <_Z5rodarv+0x6>
}
 8003d14:	bd10      	pop	{r4, pc}

08003d16 <_ZN10ManualView7captureEv>:

void ManualView::capture()
{
	rodar();
 8003d16:	f7ff bff5 	b.w	8003d04 <_Z5rodarv>

08003d1a <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003d1a:	2200      	movs	r2, #0
 8003d1c:	6002      	str	r2, [r0, #0]
{

}
 8003d1e:	4770      	bx	lr

08003d20 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003d20:	4770      	bx	lr

08003d22 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8003d22:	4770      	bx	lr

08003d24 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8003d24:	2000      	movs	r0, #0
 8003d26:	4770      	bx	lr

08003d28 <ft6x06_ReadID>:
{
 8003d28:	b510      	push	{r4, lr}
 8003d2a:	4604      	mov	r4, r0
  TS_IO_Init();
 8003d2c:	f000 fb74 	bl	8004418 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8003d30:	21a8      	movs	r1, #168	; 0xa8
 8003d32:	b2e0      	uxtb	r0, r4
 8003d34:	f000 fb8c 	bl	8004450 <TS_IO_Read>
}
 8003d38:	b280      	uxth	r0, r0
 8003d3a:	bd10      	pop	{r4, pc}

08003d3c <ft6x06_TS_DetectTouch>:
{
 8003d3c:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003d3e:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003d40:	2102      	movs	r1, #2
 8003d42:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8003d44:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003d48:	f000 fb82 	bl	8004450 <TS_IO_Read>
 8003d4c:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8003d50:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003d54:	f003 030f 	and.w	r3, r3, #15
 8003d58:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8003d5c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003d60:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8003d62:	bf88      	it	hi
 8003d64:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003d68:	4b04      	ldr	r3, [pc, #16]	; (8003d7c <ft6x06_TS_DetectTouch+0x40>)
 8003d6a:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8003d6e:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003d72:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8003d74:	2200      	movs	r2, #0
 8003d76:	709a      	strb	r2, [r3, #2]
}
 8003d78:	b002      	add	sp, #8
 8003d7a:	bd10      	pop	{r4, pc}
 8003d7c:	200018c6 	.word	0x200018c6

08003d80 <ft6x06_TS_GetXY>:
{
 8003d80:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003d82:	4c15      	ldr	r4, [pc, #84]	; (8003dd8 <ft6x06_TS_GetXY+0x58>)
{
 8003d84:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003d86:	78a3      	ldrb	r3, [r4, #2]
 8003d88:	7862      	ldrb	r2, [r4, #1]
 8003d8a:	429a      	cmp	r2, r3
{
 8003d8c:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003d8e:	d91f      	bls.n	8003dd0 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8003d90:	b303      	cbz	r3, 8003dd4 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8003d92:	2b01      	cmp	r3, #1
 8003d94:	bf14      	ite	ne
 8003d96:	2100      	movne	r1, #0
 8003d98:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8003d9a:	2304      	movs	r3, #4
 8003d9c:	eb0d 0203 	add.w	r2, sp, r3
 8003da0:	b2c0      	uxtb	r0, r0
 8003da2:	f000 fb73 	bl	800448c <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8003da6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8003daa:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8003dae:	021b      	lsls	r3, r3, #8
 8003db0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003db4:	4313      	orrs	r3, r2
 8003db6:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8003db8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003dbc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003dc0:	021b      	lsls	r3, r3, #8
 8003dc2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003dc6:	4313      	orrs	r3, r2
 8003dc8:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8003dca:	78a3      	ldrb	r3, [r4, #2]
 8003dcc:	3301      	adds	r3, #1
 8003dce:	70a3      	strb	r3, [r4, #2]
}
 8003dd0:	b002      	add	sp, #8
 8003dd2:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8003dd4:	2103      	movs	r1, #3
 8003dd6:	e7e0      	b.n	8003d9a <ft6x06_TS_GetXY+0x1a>
 8003dd8:	200018c6 	.word	0x200018c6

08003ddc <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003ddc:	2201      	movs	r2, #1
 8003dde:	21a4      	movs	r1, #164	; 0xa4
 8003de0:	b2c0      	uxtb	r0, r0
 8003de2:	f000 bb1b 	b.w	800441c <TS_IO_Write>

08003de6 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003de6:	2200      	movs	r2, #0
 8003de8:	21a4      	movs	r1, #164	; 0xa4
 8003dea:	b2c0      	uxtb	r0, r0
 8003dec:	f000 bb16 	b.w	800441c <TS_IO_Write>

08003df0 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8003df0:	f7ff bff9 	b.w	8003de6 <ft6x06_TS_DisableIT>

08003df4 <ft6x06_TS_ClearIT>:
 8003df4:	4770      	bx	lr
	...

08003df8 <ft6x06_Init>:
{  
 8003df8:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8003dfa:	4b09      	ldr	r3, [pc, #36]	; (8003e20 <ft6x06_Init+0x28>)
 8003dfc:	781a      	ldrb	r2, [r3, #0]
 8003dfe:	4290      	cmp	r0, r2
 8003e00:	d00a      	beq.n	8003e18 <ft6x06_Init+0x20>
 8003e02:	7859      	ldrb	r1, [r3, #1]
 8003e04:	4288      	cmp	r0, r1
 8003e06:	d007      	beq.n	8003e18 <ft6x06_Init+0x20>
 8003e08:	b10a      	cbz	r2, 8003e0e <ft6x06_Init+0x16>
 8003e0a:	b929      	cbnz	r1, 8003e18 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8003e0c:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8003e0e:	5498      	strb	r0, [r3, r2]
}
 8003e10:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8003e14:	f000 bb00 	b.w	8004418 <TS_IO_Init>
}
 8003e18:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003e1c:	4770      	bx	lr
 8003e1e:	bf00      	nop
 8003e20:	200018c4 	.word	0x200018c4

08003e24 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8003e24:	b538      	push	{r3, r4, r5, lr}
 8003e26:	4604      	mov	r4, r0
 8003e28:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003e2a:	2000      	movs	r0, #0
 8003e2c:	49c9      	ldr	r1, [pc, #804]	; (8004154 <OTM8009A_Init+0x330>)
 8003e2e:	f7fc fe33 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8003e32:	49c9      	ldr	r1, [pc, #804]	; (8004158 <OTM8009A_Init+0x334>)
 8003e34:	2003      	movs	r0, #3
 8003e36:	f7fc fe2f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8003e3a:	49c8      	ldr	r1, [pc, #800]	; (800415c <OTM8009A_Init+0x338>)
 8003e3c:	2000      	movs	r0, #0
 8003e3e:	f7fc fe2b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8003e42:	49c7      	ldr	r1, [pc, #796]	; (8004160 <OTM8009A_Init+0x33c>)
 8003e44:	2002      	movs	r0, #2
 8003e46:	f7fc fe27 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003e4a:	49c4      	ldr	r1, [pc, #784]	; (800415c <OTM8009A_Init+0x338>)
 8003e4c:	2000      	movs	r0, #0
 8003e4e:	f7fc fe23 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8003e52:	49c4      	ldr	r1, [pc, #784]	; (8004164 <OTM8009A_Init+0x340>)
 8003e54:	2000      	movs	r0, #0
 8003e56:	f7fc fe1f 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003e5a:	200a      	movs	r0, #10
 8003e5c:	f000 fb2e 	bl	80044bc <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8003e60:	49c1      	ldr	r1, [pc, #772]	; (8004168 <OTM8009A_Init+0x344>)
 8003e62:	2000      	movs	r0, #0
 8003e64:	f7fc fe18 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8003e68:	49c0      	ldr	r1, [pc, #768]	; (800416c <OTM8009A_Init+0x348>)
 8003e6a:	2000      	movs	r0, #0
 8003e6c:	f7fc fe14 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003e70:	200a      	movs	r0, #10
 8003e72:	f000 fb23 	bl	80044bc <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8003e76:	49be      	ldr	r1, [pc, #760]	; (8004170 <OTM8009A_Init+0x34c>)
 8003e78:	2000      	movs	r0, #0
 8003e7a:	f7fc fe0d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8003e7e:	49bd      	ldr	r1, [pc, #756]	; (8004174 <OTM8009A_Init+0x350>)
 8003e80:	2000      	movs	r0, #0
 8003e82:	f7fc fe09 	bl	8000a98 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8003e86:	49bc      	ldr	r1, [pc, #752]	; (8004178 <OTM8009A_Init+0x354>)
 8003e88:	2000      	movs	r0, #0
 8003e8a:	f7fc fe05 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003e8e:	49bb      	ldr	r1, [pc, #748]	; (800417c <OTM8009A_Init+0x358>)
 8003e90:	2000      	movs	r0, #0
 8003e92:	f7fc fe01 	bl	8000a98 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8003e96:	49ba      	ldr	r1, [pc, #744]	; (8004180 <OTM8009A_Init+0x35c>)
 8003e98:	2000      	movs	r0, #0
 8003e9a:	f7fc fdfd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8003e9e:	49b9      	ldr	r1, [pc, #740]	; (8004184 <OTM8009A_Init+0x360>)
 8003ea0:	2000      	movs	r0, #0
 8003ea2:	f7fc fdf9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003ea6:	49ab      	ldr	r1, [pc, #684]	; (8004154 <OTM8009A_Init+0x330>)
 8003ea8:	2000      	movs	r0, #0
 8003eaa:	f7fc fdf5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8003eae:	49b6      	ldr	r1, [pc, #728]	; (8004188 <OTM8009A_Init+0x364>)
 8003eb0:	2000      	movs	r0, #0
 8003eb2:	f7fc fdf1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003eb6:	49b5      	ldr	r1, [pc, #724]	; (800418c <OTM8009A_Init+0x368>)
 8003eb8:	2000      	movs	r0, #0
 8003eba:	f7fc fded 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8003ebe:	49b4      	ldr	r1, [pc, #720]	; (8004190 <OTM8009A_Init+0x36c>)
 8003ec0:	2000      	movs	r0, #0
 8003ec2:	f7fc fde9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003ec6:	49b3      	ldr	r1, [pc, #716]	; (8004194 <OTM8009A_Init+0x370>)
 8003ec8:	2000      	movs	r0, #0
 8003eca:	f7fc fde5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8003ece:	49b2      	ldr	r1, [pc, #712]	; (8004198 <OTM8009A_Init+0x374>)
 8003ed0:	2000      	movs	r0, #0
 8003ed2:	f7fc fde1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8003ed6:	49b1      	ldr	r1, [pc, #708]	; (800419c <OTM8009A_Init+0x378>)
 8003ed8:	2000      	movs	r0, #0
 8003eda:	f7fc fddd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8003ede:	49b0      	ldr	r1, [pc, #704]	; (80041a0 <OTM8009A_Init+0x37c>)
 8003ee0:	2000      	movs	r0, #0
 8003ee2:	f7fc fdd9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8003ee6:	49af      	ldr	r1, [pc, #700]	; (80041a4 <OTM8009A_Init+0x380>)
 8003ee8:	2000      	movs	r0, #0
 8003eea:	f7fc fdd5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003eee:	49a3      	ldr	r1, [pc, #652]	; (800417c <OTM8009A_Init+0x358>)
 8003ef0:	2000      	movs	r0, #0
 8003ef2:	f7fc fdd1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003ef6:	4997      	ldr	r1, [pc, #604]	; (8004154 <OTM8009A_Init+0x330>)
 8003ef8:	2000      	movs	r0, #0
 8003efa:	f7fc fdcd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8003efe:	49aa      	ldr	r1, [pc, #680]	; (80041a8 <OTM8009A_Init+0x384>)
 8003f00:	2002      	movs	r0, #2
 8003f02:	f7fc fdc9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8003f06:	49a9      	ldr	r1, [pc, #676]	; (80041ac <OTM8009A_Init+0x388>)
 8003f08:	2000      	movs	r0, #0
 8003f0a:	f7fc fdc5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8003f0e:	49a8      	ldr	r1, [pc, #672]	; (80041b0 <OTM8009A_Init+0x38c>)
 8003f10:	2000      	movs	r0, #0
 8003f12:	f7fc fdc1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8003f16:	49a7      	ldr	r1, [pc, #668]	; (80041b4 <OTM8009A_Init+0x390>)
 8003f18:	2000      	movs	r0, #0
 8003f1a:	f7fc fdbd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8003f1e:	49a6      	ldr	r1, [pc, #664]	; (80041b8 <OTM8009A_Init+0x394>)
 8003f20:	2000      	movs	r0, #0
 8003f22:	f7fc fdb9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8003f26:	49a5      	ldr	r1, [pc, #660]	; (80041bc <OTM8009A_Init+0x398>)
 8003f28:	2000      	movs	r0, #0
 8003f2a:	f7fc fdb5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8003f2e:	49a4      	ldr	r1, [pc, #656]	; (80041c0 <OTM8009A_Init+0x39c>)
 8003f30:	2000      	movs	r0, #0
 8003f32:	f7fc fdb1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003f36:	4995      	ldr	r1, [pc, #596]	; (800418c <OTM8009A_Init+0x368>)
 8003f38:	2000      	movs	r0, #0
 8003f3a:	f7fc fdad 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8003f3e:	49a1      	ldr	r1, [pc, #644]	; (80041c4 <OTM8009A_Init+0x3a0>)
 8003f40:	2000      	movs	r0, #0
 8003f42:	f7fc fda9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003f46:	4993      	ldr	r1, [pc, #588]	; (8004194 <OTM8009A_Init+0x370>)
 8003f48:	2000      	movs	r0, #0
 8003f4a:	f7fc fda5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8003f4e:	499e      	ldr	r1, [pc, #632]	; (80041c8 <OTM8009A_Init+0x3a4>)
 8003f50:	2000      	movs	r0, #0
 8003f52:	f7fc fda1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8003f56:	499d      	ldr	r1, [pc, #628]	; (80041cc <OTM8009A_Init+0x3a8>)
 8003f58:	2000      	movs	r0, #0
 8003f5a:	f7fc fd9d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8003f5e:	499c      	ldr	r1, [pc, #624]	; (80041d0 <OTM8009A_Init+0x3ac>)
 8003f60:	2002      	movs	r0, #2
 8003f62:	f7fc fd99 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003f66:	497d      	ldr	r1, [pc, #500]	; (800415c <OTM8009A_Init+0x338>)
 8003f68:	2000      	movs	r0, #0
 8003f6a:	f7fc fd95 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8003f6e:	4999      	ldr	r1, [pc, #612]	; (80041d4 <OTM8009A_Init+0x3b0>)
 8003f70:	2006      	movs	r0, #6
 8003f72:	f7fc fd91 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003f76:	4998      	ldr	r1, [pc, #608]	; (80041d8 <OTM8009A_Init+0x3b4>)
 8003f78:	2000      	movs	r0, #0
 8003f7a:	f7fc fd8d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8003f7e:	4997      	ldr	r1, [pc, #604]	; (80041dc <OTM8009A_Init+0x3b8>)
 8003f80:	200e      	movs	r0, #14
 8003f82:	f7fc fd89 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003f86:	4996      	ldr	r1, [pc, #600]	; (80041e0 <OTM8009A_Init+0x3bc>)
 8003f88:	2000      	movs	r0, #0
 8003f8a:	f7fc fd85 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8003f8e:	4995      	ldr	r1, [pc, #596]	; (80041e4 <OTM8009A_Init+0x3c0>)
 8003f90:	200e      	movs	r0, #14
 8003f92:	f7fc fd81 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003f96:	4994      	ldr	r1, [pc, #592]	; (80041e8 <OTM8009A_Init+0x3c4>)
 8003f98:	2000      	movs	r0, #0
 8003f9a:	f7fc fd7d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8003f9e:	4993      	ldr	r1, [pc, #588]	; (80041ec <OTM8009A_Init+0x3c8>)
 8003fa0:	200a      	movs	r0, #10
 8003fa2:	f7fc fd79 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003fa6:	4992      	ldr	r1, [pc, #584]	; (80041f0 <OTM8009A_Init+0x3cc>)
 8003fa8:	2000      	movs	r0, #0
 8003faa:	f7fc fd75 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8003fae:	4991      	ldr	r1, [pc, #580]	; (80041f4 <OTM8009A_Init+0x3d0>)
 8003fb0:	2000      	movs	r0, #0
 8003fb2:	f7fc fd71 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003fb6:	4969      	ldr	r1, [pc, #420]	; (800415c <OTM8009A_Init+0x338>)
 8003fb8:	2000      	movs	r0, #0
 8003fba:	f7fc fd6d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8003fbe:	498e      	ldr	r1, [pc, #568]	; (80041f8 <OTM8009A_Init+0x3d4>)
 8003fc0:	200a      	movs	r0, #10
 8003fc2:	f7fc fd69 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8003fc6:	498d      	ldr	r1, [pc, #564]	; (80041fc <OTM8009A_Init+0x3d8>)
 8003fc8:	2000      	movs	r0, #0
 8003fca:	f7fc fd65 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8003fce:	498c      	ldr	r1, [pc, #560]	; (8004200 <OTM8009A_Init+0x3dc>)
 8003fd0:	200f      	movs	r0, #15
 8003fd2:	f7fc fd61 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003fd6:	4980      	ldr	r1, [pc, #512]	; (80041d8 <OTM8009A_Init+0x3b4>)
 8003fd8:	2000      	movs	r0, #0
 8003fda:	f7fc fd5d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8003fde:	4989      	ldr	r1, [pc, #548]	; (8004204 <OTM8009A_Init+0x3e0>)
 8003fe0:	200f      	movs	r0, #15
 8003fe2:	f7fc fd59 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003fe6:	497e      	ldr	r1, [pc, #504]	; (80041e0 <OTM8009A_Init+0x3bc>)
 8003fe8:	2000      	movs	r0, #0
 8003fea:	f7fc fd55 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8003fee:	4986      	ldr	r1, [pc, #536]	; (8004208 <OTM8009A_Init+0x3e4>)
 8003ff0:	200a      	movs	r0, #10
 8003ff2:	f7fc fd51 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003ff6:	497c      	ldr	r1, [pc, #496]	; (80041e8 <OTM8009A_Init+0x3c4>)
 8003ff8:	2000      	movs	r0, #0
 8003ffa:	f7fc fd4d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8003ffe:	4983      	ldr	r1, [pc, #524]	; (800420c <OTM8009A_Init+0x3e8>)
 8004000:	200f      	movs	r0, #15
 8004002:	f7fc fd49 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8004006:	497a      	ldr	r1, [pc, #488]	; (80041f0 <OTM8009A_Init+0x3cc>)
 8004008:	2000      	movs	r0, #0
 800400a:	f7fc fd45 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800400e:	4980      	ldr	r1, [pc, #512]	; (8004210 <OTM8009A_Init+0x3ec>)
 8004010:	200f      	movs	r0, #15
 8004012:	f7fc fd41 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8004016:	497f      	ldr	r1, [pc, #508]	; (8004214 <OTM8009A_Init+0x3f0>)
 8004018:	2000      	movs	r0, #0
 800401a:	f7fc fd3d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800401e:	497e      	ldr	r1, [pc, #504]	; (8004218 <OTM8009A_Init+0x3f4>)
 8004020:	200a      	movs	r0, #10
 8004022:	f7fc fd39 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8004026:	497d      	ldr	r1, [pc, #500]	; (800421c <OTM8009A_Init+0x3f8>)
 8004028:	2000      	movs	r0, #0
 800402a:	f7fc fd35 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800402e:	497c      	ldr	r1, [pc, #496]	; (8004220 <OTM8009A_Init+0x3fc>)
 8004030:	200a      	movs	r0, #10
 8004032:	f7fc fd31 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004036:	4949      	ldr	r1, [pc, #292]	; (800415c <OTM8009A_Init+0x338>)
 8004038:	2000      	movs	r0, #0
 800403a:	f7fc fd2d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800403e:	4979      	ldr	r1, [pc, #484]	; (8004224 <OTM8009A_Init+0x400>)
 8004040:	200a      	movs	r0, #10
 8004042:	f7fc fd29 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8004046:	496d      	ldr	r1, [pc, #436]	; (80041fc <OTM8009A_Init+0x3d8>)
 8004048:	2000      	movs	r0, #0
 800404a:	f7fc fd25 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800404e:	4976      	ldr	r1, [pc, #472]	; (8004228 <OTM8009A_Init+0x404>)
 8004050:	200f      	movs	r0, #15
 8004052:	f7fc fd21 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8004056:	4960      	ldr	r1, [pc, #384]	; (80041d8 <OTM8009A_Init+0x3b4>)
 8004058:	2000      	movs	r0, #0
 800405a:	f7fc fd1d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800405e:	4973      	ldr	r1, [pc, #460]	; (800422c <OTM8009A_Init+0x408>)
 8004060:	200f      	movs	r0, #15
 8004062:	f7fc fd19 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8004066:	495e      	ldr	r1, [pc, #376]	; (80041e0 <OTM8009A_Init+0x3bc>)
 8004068:	2000      	movs	r0, #0
 800406a:	f7fc fd15 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 800406e:	4970      	ldr	r1, [pc, #448]	; (8004230 <OTM8009A_Init+0x40c>)
 8004070:	200a      	movs	r0, #10
 8004072:	f7fc fd11 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8004076:	495c      	ldr	r1, [pc, #368]	; (80041e8 <OTM8009A_Init+0x3c4>)
 8004078:	2000      	movs	r0, #0
 800407a:	f7fc fd0d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 800407e:	496d      	ldr	r1, [pc, #436]	; (8004234 <OTM8009A_Init+0x410>)
 8004080:	200f      	movs	r0, #15
 8004082:	f7fc fd09 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8004086:	495a      	ldr	r1, [pc, #360]	; (80041f0 <OTM8009A_Init+0x3cc>)
 8004088:	2000      	movs	r0, #0
 800408a:	f7fc fd05 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800408e:	496a      	ldr	r1, [pc, #424]	; (8004238 <OTM8009A_Init+0x414>)
 8004090:	200f      	movs	r0, #15
 8004092:	f7fc fd01 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8004096:	493d      	ldr	r1, [pc, #244]	; (800418c <OTM8009A_Init+0x368>)
 8004098:	2000      	movs	r0, #0
 800409a:	f7fc fcfd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800409e:	4967      	ldr	r1, [pc, #412]	; (800423c <OTM8009A_Init+0x418>)
 80040a0:	2000      	movs	r0, #0
 80040a2:	f7fc fcf9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 80040a6:	4966      	ldr	r1, [pc, #408]	; (8004240 <OTM8009A_Init+0x41c>)
 80040a8:	2000      	movs	r0, #0
 80040aa:	f7fc fcf5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 80040ae:	4965      	ldr	r1, [pc, #404]	; (8004244 <OTM8009A_Init+0x420>)
 80040b0:	2000      	movs	r0, #0
 80040b2:	f7fc fcf1 	bl	8000a98 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 80040b6:	4964      	ldr	r1, [pc, #400]	; (8004248 <OTM8009A_Init+0x424>)
 80040b8:	2000      	movs	r0, #0
 80040ba:	f7fc fced 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 80040be:	4963      	ldr	r1, [pc, #396]	; (800424c <OTM8009A_Init+0x428>)
 80040c0:	2000      	movs	r0, #0
 80040c2:	f7fc fce9 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80040c6:	4923      	ldr	r1, [pc, #140]	; (8004154 <OTM8009A_Init+0x330>)
 80040c8:	2000      	movs	r0, #0
 80040ca:	f7fc fce5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 80040ce:	4960      	ldr	r1, [pc, #384]	; (8004250 <OTM8009A_Init+0x42c>)
 80040d0:	2003      	movs	r0, #3
 80040d2:	f7fc fce1 	bl	8000a98 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80040d6:	491f      	ldr	r1, [pc, #124]	; (8004154 <OTM8009A_Init+0x330>)
 80040d8:	2000      	movs	r0, #0
 80040da:	f7fc fcdd 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80040de:	491d      	ldr	r1, [pc, #116]	; (8004154 <OTM8009A_Init+0x330>)
 80040e0:	2000      	movs	r0, #0
 80040e2:	f7fc fcd9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 80040e6:	495b      	ldr	r1, [pc, #364]	; (8004254 <OTM8009A_Init+0x430>)
 80040e8:	2010      	movs	r0, #16
 80040ea:	f7fc fcd5 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80040ee:	4919      	ldr	r1, [pc, #100]	; (8004154 <OTM8009A_Init+0x330>)
 80040f0:	2000      	movs	r0, #0
 80040f2:	f7fc fcd1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 80040f6:	4958      	ldr	r1, [pc, #352]	; (8004258 <OTM8009A_Init+0x434>)
 80040f8:	2010      	movs	r0, #16
 80040fa:	f7fc fccd 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 80040fe:	2000      	movs	r0, #0
 8004100:	4956      	ldr	r1, [pc, #344]	; (800425c <OTM8009A_Init+0x438>)
 8004102:	f7fc fcc9 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8004106:	2078      	movs	r0, #120	; 0x78
 8004108:	f000 f9d8 	bl	80044bc <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800410c:	2c00      	cmp	r4, #0
 800410e:	f000 80c7 	beq.w	80042a0 <OTM8009A_Init+0x47c>
 8004112:	2c02      	cmp	r4, #2
 8004114:	d103      	bne.n	800411e <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8004116:	4952      	ldr	r1, [pc, #328]	; (8004260 <OTM8009A_Init+0x43c>)
 8004118:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800411a:	f7fc fcbd 	bl	8000a98 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800411e:	2d01      	cmp	r5, #1
 8004120:	d10b      	bne.n	800413a <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8004122:	4950      	ldr	r1, [pc, #320]	; (8004264 <OTM8009A_Init+0x440>)
 8004124:	2000      	movs	r0, #0
 8004126:	f7fc fcb7 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 800412a:	494f      	ldr	r1, [pc, #316]	; (8004268 <OTM8009A_Init+0x444>)
 800412c:	2004      	movs	r0, #4
 800412e:	f7fc fcb3 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8004132:	494e      	ldr	r1, [pc, #312]	; (800426c <OTM8009A_Init+0x448>)
 8004134:	2004      	movs	r0, #4
 8004136:	f7fc fcaf 	bl	8000a98 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800413a:	494d      	ldr	r1, [pc, #308]	; (8004270 <OTM8009A_Init+0x44c>)
 800413c:	2000      	movs	r0, #0
 800413e:	f7fc fcab 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8004142:	494c      	ldr	r1, [pc, #304]	; (8004274 <OTM8009A_Init+0x450>)
 8004144:	2000      	movs	r0, #0
 8004146:	f7fc fca7 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800414a:	494b      	ldr	r1, [pc, #300]	; (8004278 <OTM8009A_Init+0x454>)
 800414c:	2000      	movs	r0, #0
 800414e:	f7fc fca3 	bl	8000a98 <DSI_IO_WriteCmd>
 8004152:	e093      	b.n	800427c <OTM8009A_Init+0x458>
 8004154:	0801f424 	.word	0x0801f424
 8004158:	0801f48a 	.word	0x0801f48a
 800415c:	0801f43a 	.word	0x0801f43a
 8004160:	0801f510 	.word	0x0801f510
 8004164:	0801f450 	.word	0x0801f450
 8004168:	0801f466 	.word	0x0801f466
 800416c:	0801f47c 	.word	0x0801f47c
 8004170:	0801f482 	.word	0x0801f482
 8004174:	0801f484 	.word	0x0801f484
 8004178:	0801f486 	.word	0x0801f486
 800417c:	0801f488 	.word	0x0801f488
 8004180:	0801f426 	.word	0x0801f426
 8004184:	0801f428 	.word	0x0801f428
 8004188:	0801f42a 	.word	0x0801f42a
 800418c:	0801f42c 	.word	0x0801f42c
 8004190:	0801f42e 	.word	0x0801f42e
 8004194:	0801f430 	.word	0x0801f430
 8004198:	0801f432 	.word	0x0801f432
 800419c:	0801f434 	.word	0x0801f434
 80041a0:	0801f436 	.word	0x0801f436
 80041a4:	0801f438 	.word	0x0801f438
 80041a8:	0801f58e 	.word	0x0801f58e
 80041ac:	0801f43c 	.word	0x0801f43c
 80041b0:	0801f43e 	.word	0x0801f43e
 80041b4:	0801f440 	.word	0x0801f440
 80041b8:	0801f442 	.word	0x0801f442
 80041bc:	0801f444 	.word	0x0801f444
 80041c0:	0801f446 	.word	0x0801f446
 80041c4:	0801f448 	.word	0x0801f448
 80041c8:	0801f44a 	.word	0x0801f44a
 80041cc:	0801f44c 	.word	0x0801f44c
 80041d0:	0801f591 	.word	0x0801f591
 80041d4:	0801f594 	.word	0x0801f594
 80041d8:	0801f44e 	.word	0x0801f44e
 80041dc:	0801f59b 	.word	0x0801f59b
 80041e0:	0801f452 	.word	0x0801f452
 80041e4:	0801f5aa 	.word	0x0801f5aa
 80041e8:	0801f454 	.word	0x0801f454
 80041ec:	0801f48e 	.word	0x0801f48e
 80041f0:	0801f456 	.word	0x0801f456
 80041f4:	0801f474 	.word	0x0801f474
 80041f8:	0801f499 	.word	0x0801f499
 80041fc:	0801f458 	.word	0x0801f458
 8004200:	0801f4a4 	.word	0x0801f4a4
 8004204:	0801f4b4 	.word	0x0801f4b4
 8004208:	0801f4c4 	.word	0x0801f4c4
 800420c:	0801f4cf 	.word	0x0801f4cf
 8004210:	0801f4df 	.word	0x0801f4df
 8004214:	0801f45a 	.word	0x0801f45a
 8004218:	0801f4ef 	.word	0x0801f4ef
 800421c:	0801f45c 	.word	0x0801f45c
 8004220:	0801f4fa 	.word	0x0801f4fa
 8004224:	0801f505 	.word	0x0801f505
 8004228:	0801f513 	.word	0x0801f513
 800422c:	0801f523 	.word	0x0801f523
 8004230:	0801f533 	.word	0x0801f533
 8004234:	0801f53e 	.word	0x0801f53e
 8004238:	0801f54e 	.word	0x0801f54e
 800423c:	0801f476 	.word	0x0801f476
 8004240:	0801f478 	.word	0x0801f478
 8004244:	0801f47a 	.word	0x0801f47a
 8004248:	0801f47e 	.word	0x0801f47e
 800424c:	0801f480 	.word	0x0801f480
 8004250:	0801f55e 	.word	0x0801f55e
 8004254:	0801f56c 	.word	0x0801f56c
 8004258:	0801f57d 	.word	0x0801f57d
 800425c:	0801f45e 	.word	0x0801f45e
 8004260:	0801f460 	.word	0x0801f460
 8004264:	0801f464 	.word	0x0801f464
 8004268:	0801f562 	.word	0x0801f562
 800426c:	0801f567 	.word	0x0801f567
 8004270:	0801f468 	.word	0x0801f468
 8004274:	0801f46a 	.word	0x0801f46a
 8004278:	0801f46c 	.word	0x0801f46c

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800427c:	490a      	ldr	r1, [pc, #40]	; (80042a8 <OTM8009A_Init+0x484>)
 800427e:	2000      	movs	r0, #0
 8004280:	f7fc fc0a 	bl	8000a98 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8004284:	4909      	ldr	r1, [pc, #36]	; (80042ac <OTM8009A_Init+0x488>)
 8004286:	2000      	movs	r0, #0
 8004288:	f7fc fc06 	bl	8000a98 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800428c:	4908      	ldr	r1, [pc, #32]	; (80042b0 <OTM8009A_Init+0x48c>)
 800428e:	2000      	movs	r0, #0
 8004290:	f7fc fc02 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8004294:	4907      	ldr	r1, [pc, #28]	; (80042b4 <OTM8009A_Init+0x490>)
 8004296:	2000      	movs	r0, #0
 8004298:	f7fc fbfe 	bl	8000a98 <DSI_IO_WriteCmd>

  return 0;
}
 800429c:	2000      	movs	r0, #0
 800429e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80042a0:	4905      	ldr	r1, [pc, #20]	; (80042b8 <OTM8009A_Init+0x494>)
 80042a2:	4620      	mov	r0, r4
 80042a4:	e739      	b.n	800411a <OTM8009A_Init+0x2f6>
 80042a6:	bf00      	nop
 80042a8:	0801f46e 	.word	0x0801f46e
 80042ac:	0801f470 	.word	0x0801f470
 80042b0:	0801f424 	.word	0x0801f424
 80042b4:	0801f472 	.word	0x0801f472
 80042b8:	0801f462 	.word	0x0801f462

080042bc <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 80042bc:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80042be:	4d2f      	ldr	r5, [pc, #188]	; (800437c <I2C1_Init+0xc0>)
{
 80042c0:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80042c2:	4628      	mov	r0, r5
 80042c4:	f002 f964 	bl	8006590 <HAL_I2C_GetState>
 80042c8:	4604      	mov	r4, r0
 80042ca:	2800      	cmp	r0, #0
 80042cc:	d154      	bne.n	8004378 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80042ce:	4a2c      	ldr	r2, [pc, #176]	; (8004380 <I2C1_Init+0xc4>)
 80042d0:	4b2c      	ldr	r3, [pc, #176]	; (8004384 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80042d2:	4e2d      	ldr	r6, [pc, #180]	; (8004388 <I2C1_Init+0xcc>)
 80042d4:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80042d6:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 80042da:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 80042de:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80042e2:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80042e6:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 80042ea:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80042ec:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80042ee:	f043 0302 	orr.w	r3, r3, #2
 80042f2:	6333      	str	r3, [r6, #48]	; 0x30
 80042f4:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 80042f6:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80042f8:	f003 0302 	and.w	r3, r3, #2
 80042fc:	9301      	str	r3, [sp, #4]
 80042fe:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004300:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004304:	2312      	movs	r3, #18
 8004306:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800430a:	2002      	movs	r0, #2
 800430c:	2304      	movs	r3, #4
 800430e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004312:	a903      	add	r1, sp, #12
 8004314:	481d      	ldr	r0, [pc, #116]	; (800438c <I2C1_Init+0xd0>)
 8004316:	f001 fb69 	bl	80059ec <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800431a:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800431e:	a903      	add	r1, sp, #12
 8004320:	481a      	ldr	r0, [pc, #104]	; (800438c <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8004322:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004324:	f001 fb62 	bl	80059ec <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8004328:	9402      	str	r4, [sp, #8]
 800432a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800432c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004330:	6433      	str	r3, [r6, #64]	; 0x40
 8004332:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8004334:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004338:	9302      	str	r3, [sp, #8]
 800433a:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 800433c:	6a33      	ldr	r3, [r6, #32]
 800433e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004342:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8004344:	6a33      	ldr	r3, [r6, #32]
 8004346:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800434a:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 800434c:	4622      	mov	r2, r4
 800434e:	2105      	movs	r1, #5
 8004350:	201f      	movs	r0, #31
 8004352:	f000 fd15 	bl	8004d80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8004356:	201f      	movs	r0, #31
 8004358:	f000 fd44 	bl	8004de4 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 800435c:	4622      	mov	r2, r4
 800435e:	2105      	movs	r1, #5
 8004360:	2020      	movs	r0, #32
 8004362:	f000 fd0d 	bl	8004d80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8004366:	2020      	movs	r0, #32
 8004368:	f000 fd3c 	bl	8004de4 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 800436c:	4628      	mov	r0, r5
  }
}
 800436e:	b008      	add	sp, #32
 8004370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8004374:	f001 beb2 	b.w	80060dc <HAL_I2C_Init>
}
 8004378:	b008      	add	sp, #32
 800437a:	bd70      	pop	{r4, r5, r6, pc}
 800437c:	200018cc 	.word	0x200018cc
 8004380:	40005400 	.word	0x40005400
 8004384:	00061a80 	.word	0x00061a80
 8004388:	40023800 	.word	0x40023800
 800438c:	40020400 	.word	0x40020400

08004390 <BSP_PB_Init>:
{
 8004390:	b510      	push	{r4, lr}
 8004392:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8004394:	4b19      	ldr	r3, [pc, #100]	; (80043fc <BSP_PB_Init+0x6c>)
 8004396:	2400      	movs	r4, #0
 8004398:	9400      	str	r4, [sp, #0]
 800439a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800439c:	f042 0201 	orr.w	r2, r2, #1
 80043a0:	631a      	str	r2, [r3, #48]	; 0x30
 80043a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043a4:	f003 0301 	and.w	r3, r3, #1
 80043a8:	9300      	str	r3, [sp, #0]
 80043aa:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80043ac:	b969      	cbnz	r1, 80043ca <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80043ae:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80043b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80043b4:	2302      	movs	r3, #2
 80043b6:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80043b8:	4b11      	ldr	r3, [pc, #68]	; (8004400 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 80043ba:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80043bc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80043c0:	a901      	add	r1, sp, #4
 80043c2:	f001 fb13 	bl	80059ec <HAL_GPIO_Init>
}
 80043c6:	b006      	add	sp, #24
 80043c8:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 80043ca:	2901      	cmp	r1, #1
 80043cc:	d1fb      	bne.n	80043c6 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80043ce:	2302      	movs	r3, #2
 80043d0:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 80043d2:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80043d6:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80043d8:	4b09      	ldr	r3, [pc, #36]	; (8004400 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80043da:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80043dc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 80043e0:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80043e2:	a901      	add	r1, sp, #4
 80043e4:	f001 fb02 	bl	80059ec <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 80043e8:	4622      	mov	r2, r4
 80043ea:	210f      	movs	r1, #15
 80043ec:	2006      	movs	r0, #6
 80043ee:	f000 fcc7 	bl	8004d80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 80043f2:	2006      	movs	r0, #6
 80043f4:	f000 fcf6 	bl	8004de4 <HAL_NVIC_EnableIRQ>
}
 80043f8:	e7e5      	b.n	80043c6 <BSP_PB_Init+0x36>
 80043fa:	bf00      	nop
 80043fc:	40023800 	.word	0x40023800
 8004400:	20000048 	.word	0x20000048

08004404 <BSP_PB_GetState>:
{
 8004404:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8004406:	4b03      	ldr	r3, [pc, #12]	; (8004414 <BSP_PB_GetState+0x10>)
 8004408:	2101      	movs	r1, #1
 800440a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800440e:	f001 fc75 	bl	8005cfc <HAL_GPIO_ReadPin>
}
 8004412:	bd08      	pop	{r3, pc}
 8004414:	20000048 	.word	0x20000048

08004418 <TS_IO_Init>:
 8004418:	f7ff bf50 	b.w	80042bc <I2C1_Init>

0800441c <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800441c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800441e:	2301      	movs	r3, #1
 8004420:	f88d 2017 	strb.w	r2, [sp, #23]
 8004424:	2264      	movs	r2, #100	; 0x64
 8004426:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800442a:	f10d 0217 	add.w	r2, sp, #23
 800442e:	9200      	str	r2, [sp, #0]
 8004430:	460a      	mov	r2, r1
 8004432:	4601      	mov	r1, r0
 8004434:	4805      	ldr	r0, [pc, #20]	; (800444c <TS_IO_Write+0x30>)
 8004436:	f001 ff13 	bl	8006260 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800443a:	b120      	cbz	r0, 8004446 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 800443c:	4803      	ldr	r0, [pc, #12]	; (800444c <TS_IO_Write+0x30>)
 800443e:	f001 fef5 	bl	800622c <HAL_I2C_DeInit>
  I2C1_Init();
 8004442:	f7ff ff3b 	bl	80042bc <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8004446:	b007      	add	sp, #28
 8004448:	f85d fb04 	ldr.w	pc, [sp], #4
 800444c:	200018cc 	.word	0x200018cc

08004450 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8004450:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8004452:	2300      	movs	r3, #0
{
 8004454:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8004456:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800445a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800445e:	2301      	movs	r3, #1
 8004460:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8004464:	f10d 0117 	add.w	r1, sp, #23
 8004468:	9100      	str	r1, [sp, #0]
 800446a:	4601      	mov	r1, r0
 800446c:	4806      	ldr	r0, [pc, #24]	; (8004488 <TS_IO_Read+0x38>)
 800446e:	f001 ff87 	bl	8006380 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8004472:	b120      	cbz	r0, 800447e <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8004474:	4804      	ldr	r0, [pc, #16]	; (8004488 <TS_IO_Read+0x38>)
 8004476:	f001 fed9 	bl	800622c <HAL_I2C_DeInit>
  I2C1_Init();
 800447a:	f7ff ff1f 	bl	80042bc <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 800447e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8004482:	b007      	add	sp, #28
 8004484:	f85d fb04 	ldr.w	pc, [sp], #4
 8004488:	200018cc 	.word	0x200018cc

0800448c <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800448c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800448e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004492:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004496:	9200      	str	r2, [sp, #0]
 8004498:	2301      	movs	r3, #1
 800449a:	460a      	mov	r2, r1
 800449c:	4601      	mov	r1, r0
 800449e:	4806      	ldr	r0, [pc, #24]	; (80044b8 <TS_IO_ReadMultiple+0x2c>)
 80044a0:	f001 ff6e 	bl	8006380 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80044a4:	4604      	mov	r4, r0
 80044a6:	b120      	cbz	r0, 80044b2 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 80044a8:	4803      	ldr	r0, [pc, #12]	; (80044b8 <TS_IO_ReadMultiple+0x2c>)
 80044aa:	f001 febf 	bl	800622c <HAL_I2C_DeInit>
  I2C1_Init();
 80044ae:	f7ff ff05 	bl	80042bc <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 80044b2:	b2a0      	uxth	r0, r4
 80044b4:	b004      	add	sp, #16
 80044b6:	bd10      	pop	{r4, pc}
 80044b8:	200018cc 	.word	0x200018cc

080044bc <OTM8009A_IO_Delay>:
 80044bc:	f000 bc3a 	b.w	8004d34 <HAL_Delay>

080044c0 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80044c0:	b500      	push	{lr}
 80044c2:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80044c4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80044c8:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80044ca:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80044ce:	2205      	movs	r2, #5
 80044d0:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80044d2:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80044d4:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80044d6:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 80044d8:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80044dc:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80044e0:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 80044e4:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80044e6:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 80044e8:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 80044ea:	2210      	movs	r2, #16
 80044ec:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80044ee:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80044f2:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 80044f4:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80044f6:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80044f8:	a906      	add	r1, sp, #24
 80044fa:	466a      	mov	r2, sp
 80044fc:	4804      	ldr	r0, [pc, #16]	; (8004510 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 80044fe:	f002 fbc0 	bl	8006c82 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8004502:	3800      	subs	r0, #0
 8004504:	bf18      	it	ne
 8004506:	2001      	movne	r0, #1
 8004508:	b015      	add	sp, #84	; 0x54
 800450a:	f85d fb04 	ldr.w	pc, [sp], #4
 800450e:	bf00      	nop
 8004510:	20001920 	.word	0x20001920

08004514 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004514:	b500      	push	{lr}
 8004516:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004518:	f44f 7380 	mov.w	r3, #256	; 0x100
 800451c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800451e:	2306      	movs	r3, #6
 8004520:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004522:	4817      	ldr	r0, [pc, #92]	; (8004580 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004524:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004526:	f241 3288 	movw	r2, #5000	; 0x1388
 800452a:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800452c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004530:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8004534:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8004536:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004538:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800453a:	f002 fb5e 	bl	8006bfa <HAL_QSPI_Command>
 800453e:	b9e0      	cbnz	r0, 800457a <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004540:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8004542:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004546:	2201      	movs	r2, #1
 8004548:	2310      	movs	r3, #16
 800454a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800454e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004552:	2305      	movs	r3, #5
 8004554:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004558:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800455c:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800455e:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004560:	4807      	ldr	r0, [pc, #28]	; (8004580 <QSPI_WriteEnable.constprop.0+0x6c>)
 8004562:	f241 3388 	movw	r3, #5000	; 0x1388
 8004566:	466a      	mov	r2, sp
 8004568:	a906      	add	r1, sp, #24
 800456a:	f002 fb8a 	bl	8006c82 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800456e:	3800      	subs	r0, #0
 8004570:	bf18      	it	ne
 8004572:	2001      	movne	r0, #1
}
 8004574:	b015      	add	sp, #84	; 0x54
 8004576:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800457a:	2001      	movs	r0, #1
 800457c:	e7fa      	b.n	8004574 <QSPI_WriteEnable.constprop.0+0x60>
 800457e:	bf00      	nop
 8004580:	20001920 	.word	0x20001920

08004584 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8004584:	b500      	push	{lr}
 8004586:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004588:	f44f 7380 	mov.w	r3, #256	; 0x100
 800458c:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800458e:	23eb      	movs	r3, #235	; 0xeb
 8004590:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8004592:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004596:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8004598:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800459c:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800459e:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80045a2:	2300      	movs	r3, #0
 80045a4:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80045a8:	220a      	movs	r2, #10
 80045aa:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80045ac:	a902      	add	r1, sp, #8
 80045ae:	466a      	mov	r2, sp
 80045b0:	4806      	ldr	r0, [pc, #24]	; (80045cc <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80045b2:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80045b4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 80045b8:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80045ba:	f002 fbb2 	bl	8006d22 <HAL_QSPI_MemoryMapped>
}
 80045be:	3800      	subs	r0, #0
 80045c0:	bf18      	it	ne
 80045c2:	2001      	movne	r0, #1
 80045c4:	b011      	add	sp, #68	; 0x44
 80045c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80045ca:	bf00      	nop
 80045cc:	20001920 	.word	0x20001920

080045d0 <BSP_QSPI_MspInit>:
{
 80045d0:	b570      	push	{r4, r5, r6, lr}
 80045d2:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 80045d4:	4b2c      	ldr	r3, [pc, #176]	; (8004688 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80045d6:	482d      	ldr	r0, [pc, #180]	; (800468c <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 80045d8:	2400      	movs	r4, #0
 80045da:	9400      	str	r4, [sp, #0]
 80045dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80045de:	f042 0202 	orr.w	r2, r2, #2
 80045e2:	639a      	str	r2, [r3, #56]	; 0x38
 80045e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80045e6:	f002 0202 	and.w	r2, r2, #2
 80045ea:	9200      	str	r2, [sp, #0]
 80045ec:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80045ee:	699a      	ldr	r2, [r3, #24]
 80045f0:	f042 0202 	orr.w	r2, r2, #2
 80045f4:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80045f6:	699a      	ldr	r2, [r3, #24]
 80045f8:	f022 0202 	bic.w	r2, r2, #2
 80045fc:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80045fe:	9401      	str	r4, [sp, #4]
 8004600:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004602:	f042 0202 	orr.w	r2, r2, #2
 8004606:	631a      	str	r2, [r3, #48]	; 0x30
 8004608:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800460a:	f002 0202 	and.w	r2, r2, #2
 800460e:	9201      	str	r2, [sp, #4]
 8004610:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004612:	9402      	str	r4, [sp, #8]
 8004614:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004616:	f042 0220 	orr.w	r2, r2, #32
 800461a:	631a      	str	r2, [r3, #48]	; 0x30
 800461c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800461e:	f003 0320 	and.w	r3, r3, #32
 8004622:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004624:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004626:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004628:	2302      	movs	r3, #2
 800462a:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800462e:	2101      	movs	r1, #1
 8004630:	2303      	movs	r3, #3
 8004632:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004636:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004638:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800463a:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800463c:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800463e:	f001 f9d5 	bl	80059ec <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004642:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004646:	a903      	add	r1, sp, #12
 8004648:	4811      	ldr	r0, [pc, #68]	; (8004690 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800464a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800464c:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800464e:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004650:	f001 f9cc 	bl	80059ec <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8004654:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004658:	a903      	add	r1, sp, #12
 800465a:	480d      	ldr	r0, [pc, #52]	; (8004690 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800465c:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800465e:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004660:	f001 f9c4 	bl	80059ec <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8004664:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004666:	a903      	add	r1, sp, #12
 8004668:	4809      	ldr	r0, [pc, #36]	; (8004690 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800466a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800466c:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800466e:	f001 f9bd 	bl	80059ec <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8004672:	4622      	mov	r2, r4
 8004674:	210f      	movs	r1, #15
 8004676:	205b      	movs	r0, #91	; 0x5b
 8004678:	f000 fb82 	bl	8004d80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800467c:	205b      	movs	r0, #91	; 0x5b
 800467e:	f000 fbb1 	bl	8004de4 <HAL_NVIC_EnableIRQ>
}
 8004682:	b008      	add	sp, #32
 8004684:	bd70      	pop	{r4, r5, r6, pc}
 8004686:	bf00      	nop
 8004688:	40023800 	.word	0x40023800
 800468c:	40020400 	.word	0x40020400
 8004690:	40021400 	.word	0x40021400

08004694 <BSP_QSPI_Init>:
{
 8004694:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8004696:	4c48      	ldr	r4, [pc, #288]	; (80047b8 <BSP_QSPI_Init+0x124>)
 8004698:	4b48      	ldr	r3, [pc, #288]	; (80047bc <BSP_QSPI_Init+0x128>)
 800469a:	6023      	str	r3, [r4, #0]
{
 800469c:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800469e:	4620      	mov	r0, r4
 80046a0:	f002 fa98 	bl	8006bd4 <HAL_QSPI_DeInit>
 80046a4:	4605      	mov	r5, r0
 80046a6:	b110      	cbz	r0, 80046ae <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 80046a8:	2001      	movs	r0, #1
}
 80046aa:	b011      	add	sp, #68	; 0x44
 80046ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 80046ae:	4601      	mov	r1, r0
 80046b0:	4620      	mov	r0, r4
 80046b2:	f7ff ff8d 	bl	80045d0 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 80046b6:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80046b8:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 80046ba:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80046be:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80046c0:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 80046c4:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 80046c8:	fab3 f383 	clz	r3, r3
 80046cc:	3b01      	subs	r3, #1
 80046ce:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80046d0:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80046d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80046d6:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 80046da:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80046de:	f002 fa25 	bl	8006b2c <HAL_QSPI_Init>
 80046e2:	2800      	cmp	r0, #0
 80046e4:	d1e0      	bne.n	80046a8 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80046e6:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80046ea:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80046ee:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 80046f2:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80046f4:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 80046f6:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80046f8:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80046fa:	f241 3288 	movw	r2, #5000	; 0x1388
 80046fe:	a902      	add	r1, sp, #8
 8004700:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004702:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004704:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004706:	f002 fa78 	bl	8006bfa <HAL_QSPI_Command>
 800470a:	b108      	cbz	r0, 8004710 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800470c:	2004      	movs	r0, #4
 800470e:	e7cc      	b.n	80046aa <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8004710:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004712:	f241 3288 	movw	r2, #5000	; 0x1388
 8004716:	a902      	add	r1, sp, #8
 8004718:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800471a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800471c:	f002 fa6d 	bl	8006bfa <HAL_QSPI_Command>
 8004720:	2800      	cmp	r0, #0
 8004722:	d1f3      	bne.n	800470c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8004724:	f241 3088 	movw	r0, #5000	; 0x1388
 8004728:	f7ff feca 	bl	80044c0 <QSPI_AutoPollingMemReady.constprop.0>
 800472c:	2800      	cmp	r0, #0
 800472e:	d1ed      	bne.n	800470c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004730:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004734:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004738:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800473c:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800473e:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004740:	f241 3288 	movw	r2, #5000	; 0x1388
 8004744:	a902      	add	r1, sp, #8
 8004746:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004748:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800474a:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800474c:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800474e:	f002 fa54 	bl	8006bfa <HAL_QSPI_Command>
 8004752:	2800      	cmp	r0, #0
 8004754:	d1da      	bne.n	800470c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004756:	f241 3288 	movw	r2, #5000	; 0x1388
 800475a:	f10d 0107 	add.w	r1, sp, #7
 800475e:	4620      	mov	r0, r4
 8004760:	f002 fbc4 	bl	8006eec <HAL_QSPI_Receive>
 8004764:	2800      	cmp	r0, #0
 8004766:	d1d1      	bne.n	800470c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004768:	f7ff fed4 	bl	8004514 <QSPI_WriteEnable.constprop.0>
 800476c:	2800      	cmp	r0, #0
 800476e:	d1cd      	bne.n	800470c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004770:	2381      	movs	r3, #129	; 0x81
 8004772:	9302      	str	r3, [sp, #8]
 8004774:	22f0      	movs	r2, #240	; 0xf0
 8004776:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800477a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800477e:	210a      	movs	r1, #10
 8004780:	fab2 f282 	clz	r2, r2
 8004784:	fa01 f202 	lsl.w	r2, r1, r2
 8004788:	f003 030f 	and.w	r3, r3, #15
 800478c:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800478e:	a902      	add	r1, sp, #8
 8004790:	f241 3288 	movw	r2, #5000	; 0x1388
 8004794:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004796:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800479a:	f002 fa2e 	bl	8006bfa <HAL_QSPI_Command>
 800479e:	2800      	cmp	r0, #0
 80047a0:	d1b4      	bne.n	800470c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80047a6:	f10d 0107 	add.w	r1, sp, #7
 80047aa:	4620      	mov	r0, r4
 80047ac:	f002 fb42 	bl	8006e34 <HAL_QSPI_Transmit>
 80047b0:	2800      	cmp	r0, #0
 80047b2:	f43f af7a 	beq.w	80046aa <BSP_QSPI_Init+0x16>
 80047b6:	e7a9      	b.n	800470c <BSP_QSPI_Init+0x78>
 80047b8:	20001920 	.word	0x20001920
 80047bc:	a0001000 	.word	0xa0001000

080047c0 <BSP_QSPI_MspDeInit>:
{
 80047c0:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 80047c2:	205b      	movs	r0, #91	; 0x5b
 80047c4:	f000 fb1c 	bl	8004e00 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 80047c8:	4814      	ldr	r0, [pc, #80]	; (800481c <BSP_QSPI_MspDeInit+0x5c>)
 80047ca:	2140      	movs	r1, #64	; 0x40
 80047cc:	f001 f9f4 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 80047d0:	4813      	ldr	r0, [pc, #76]	; (8004820 <BSP_QSPI_MspDeInit+0x60>)
 80047d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80047d6:	f001 f9ef 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 80047da:	4811      	ldr	r0, [pc, #68]	; (8004820 <BSP_QSPI_MspDeInit+0x60>)
 80047dc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80047e0:	f001 f9ea 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 80047e4:	480e      	ldr	r0, [pc, #56]	; (8004820 <BSP_QSPI_MspDeInit+0x60>)
 80047e6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80047ea:	f001 f9e5 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 80047ee:	480c      	ldr	r0, [pc, #48]	; (8004820 <BSP_QSPI_MspDeInit+0x60>)
 80047f0:	2180      	movs	r1, #128	; 0x80
 80047f2:	f001 f9e1 	bl	8005bb8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80047f6:	480a      	ldr	r0, [pc, #40]	; (8004820 <BSP_QSPI_MspDeInit+0x60>)
 80047f8:	2140      	movs	r1, #64	; 0x40
 80047fa:	f001 f9dd 	bl	8005bb8 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80047fe:	4b09      	ldr	r3, [pc, #36]	; (8004824 <BSP_QSPI_MspDeInit+0x64>)
 8004800:	699a      	ldr	r2, [r3, #24]
 8004802:	f042 0202 	orr.w	r2, r2, #2
 8004806:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004808:	699a      	ldr	r2, [r3, #24]
 800480a:	f022 0202 	bic.w	r2, r2, #2
 800480e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8004810:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004812:	f022 0202 	bic.w	r2, r2, #2
 8004816:	639a      	str	r2, [r3, #56]	; 0x38
}
 8004818:	bd08      	pop	{r3, pc}
 800481a:	bf00      	nop
 800481c:	40020400 	.word	0x40020400
 8004820:	40021400 	.word	0x40021400
 8004824:	40023800 	.word	0x40023800

08004828 <BSP_QSPI_DeInit>:
{
 8004828:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800482a:	4d08      	ldr	r5, [pc, #32]	; (800484c <BSP_QSPI_DeInit+0x24>)
 800482c:	4b08      	ldr	r3, [pc, #32]	; (8004850 <BSP_QSPI_DeInit+0x28>)
 800482e:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004830:	4628      	mov	r0, r5
 8004832:	f002 f9cf 	bl	8006bd4 <HAL_QSPI_DeInit>
 8004836:	4604      	mov	r4, r0
 8004838:	b928      	cbnz	r0, 8004846 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800483a:	4601      	mov	r1, r0
 800483c:	4628      	mov	r0, r5
 800483e:	f7ff ffbf 	bl	80047c0 <BSP_QSPI_MspDeInit>
}
 8004842:	4620      	mov	r0, r4
 8004844:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8004846:	2401      	movs	r4, #1
 8004848:	e7fb      	b.n	8004842 <BSP_QSPI_DeInit+0x1a>
 800484a:	bf00      	nop
 800484c:	20001920 	.word	0x20001920
 8004850:	a0001000 	.word	0xa0001000

08004854 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8004854:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8004858:	4c21      	ldr	r4, [pc, #132]	; (80048e0 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800485a:	4d22      	ldr	r5, [pc, #136]	; (80048e4 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800485c:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800485e:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004862:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004864:	4621      	mov	r1, r4
{
 8004866:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004868:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800486c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800486e:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8004872:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8004876:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800487a:	f002 ffdb 	bl	8007834 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800487e:	4630      	mov	r0, r6
 8004880:	f000 fa58 	bl	8004d34 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8004884:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004886:	4621      	mov	r1, r4
 8004888:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800488c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800488e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8004892:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004896:	f002 ffcd 	bl	8007834 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800489a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800489c:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048a0:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80048a2:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80048a8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 80048aa:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048ae:	f002 ffc1 	bl	8007834 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 80048b2:	f44f 730c 	mov.w	r3, #560	; 0x230
 80048b6:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80048b8:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80048ba:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048be:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 80048c0:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 80048c2:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80048c8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 80048ca:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80048cc:	f002 ffb2 	bl	8007834 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80048d0:	4649      	mov	r1, r9
 80048d2:	4628      	mov	r0, r5
}
 80048d4:	b003      	add	sp, #12
 80048d6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80048da:	f002 bfc9 	b.w	8007870 <HAL_SDRAM_ProgramRefreshRate>
 80048de:	bf00      	nop
 80048e0:	2000196c 	.word	0x2000196c
 80048e4:	20001a58 	.word	0x20001a58

080048e8 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80048e8:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80048ea:	4606      	mov	r6, r0
{
 80048ec:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80048ee:	2800      	cmp	r0, #0
 80048f0:	f000 80bd 	beq.w	8004a6e <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80048f4:	4b5f      	ldr	r3, [pc, #380]	; (8004a74 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80048f6:	4860      	ldr	r0, [pc, #384]	; (8004a78 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80048f8:	4c60      	ldr	r4, [pc, #384]	; (8004a7c <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80048fa:	2500      	movs	r5, #0
 80048fc:	9500      	str	r5, [sp, #0]
 80048fe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004900:	f042 0201 	orr.w	r2, r2, #1
 8004904:	639a      	str	r2, [r3, #56]	; 0x38
 8004906:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004908:	f002 0201 	and.w	r2, r2, #1
 800490c:	9200      	str	r2, [sp, #0]
 800490e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8004910:	9501      	str	r5, [sp, #4]
 8004912:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004914:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8004918:	631a      	str	r2, [r3, #48]	; 0x30
 800491a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800491c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8004920:	9201      	str	r2, [sp, #4]
 8004922:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004924:	9502      	str	r5, [sp, #8]
 8004926:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004928:	f042 0204 	orr.w	r2, r2, #4
 800492c:	631a      	str	r2, [r3, #48]	; 0x30
 800492e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004930:	f002 0204 	and.w	r2, r2, #4
 8004934:	9202      	str	r2, [sp, #8]
 8004936:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004938:	9503      	str	r5, [sp, #12]
 800493a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800493c:	f042 0208 	orr.w	r2, r2, #8
 8004940:	631a      	str	r2, [r3, #48]	; 0x30
 8004942:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004944:	f002 0208 	and.w	r2, r2, #8
 8004948:	9203      	str	r2, [sp, #12]
 800494a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800494c:	9504      	str	r5, [sp, #16]
 800494e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004950:	f042 0210 	orr.w	r2, r2, #16
 8004954:	631a      	str	r2, [r3, #48]	; 0x30
 8004956:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004958:	f002 0210 	and.w	r2, r2, #16
 800495c:	9204      	str	r2, [sp, #16]
 800495e:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004960:	9505      	str	r5, [sp, #20]
 8004962:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004964:	f042 0220 	orr.w	r2, r2, #32
 8004968:	631a      	str	r2, [r3, #48]	; 0x30
 800496a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800496c:	f002 0220 	and.w	r2, r2, #32
 8004970:	9205      	str	r2, [sp, #20]
 8004972:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8004974:	9506      	str	r5, [sp, #24]
 8004976:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004978:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800497c:	631a      	str	r2, [r3, #48]	; 0x30
 800497e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004980:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004984:	9206      	str	r2, [sp, #24]
 8004986:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8004988:	9507      	str	r5, [sp, #28]
 800498a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800498c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004990:	631a      	str	r2, [r3, #48]	; 0x30
 8004992:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004994:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004998:	9207      	str	r2, [sp, #28]
 800499a:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800499c:	9508      	str	r5, [sp, #32]
 800499e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80049a0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80049a4:	631a      	str	r2, [r3, #48]	; 0x30
 80049a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80049ac:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80049ae:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80049b0:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 80049b2:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80049b4:	2301      	movs	r3, #1
 80049b6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80049ba:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80049bc:	220c      	movs	r2, #12
 80049be:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 80049c0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80049c2:	f001 f813 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80049c6:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80049ca:	482d      	ldr	r0, [pc, #180]	; (8004a80 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80049cc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80049ce:	a909      	add	r1, sp, #36	; 0x24
 80049d0:	f001 f80c 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80049d4:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80049d8:	482a      	ldr	r0, [pc, #168]	; (8004a84 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80049da:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80049dc:	a909      	add	r1, sp, #36	; 0x24
 80049de:	f001 f805 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80049e2:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80049e6:	4828      	ldr	r0, [pc, #160]	; (8004a88 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80049e8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80049ea:	a909      	add	r1, sp, #36	; 0x24
 80049ec:	f000 fffe 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80049f0:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80049f4:	4825      	ldr	r0, [pc, #148]	; (8004a8c <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80049f6:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80049f8:	a909      	add	r1, sp, #36	; 0x24
 80049fa:	f000 fff7 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80049fe:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004a02:	4823      	ldr	r0, [pc, #140]	; (8004a90 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004a04:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004a06:	a909      	add	r1, sp, #36	; 0x24
 8004a08:	f000 fff0 	bl	80059ec <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004a0c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004a10:	4820      	ldr	r0, [pc, #128]	; (8004a94 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004a12:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004a14:	a909      	add	r1, sp, #36	; 0x24
 8004a16:	f000 ffe9 	bl	80059ec <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8004a1a:	2280      	movs	r2, #128	; 0x80
 8004a1c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a20:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8004a24:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004a28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004a2c:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8004a30:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8004a34:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8004a38:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8004a3c:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8004a40:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8004a42:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8004a46:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8004a48:	4b13      	ldr	r3, [pc, #76]	; (8004a98 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8004a4a:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8004a4c:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8004a4e:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8004a50:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8004a52:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8004a54:	f000 fa8e 	bl	8004f74 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8004a58:	4620      	mov	r0, r4
 8004a5a:	f000 fa0b 	bl	8004e74 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8004a5e:	2038      	movs	r0, #56	; 0x38
 8004a60:	462a      	mov	r2, r5
 8004a62:	2105      	movs	r1, #5
 8004a64:	f000 f98c 	bl	8004d80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8004a68:	2038      	movs	r0, #56	; 0x38
 8004a6a:	f000 f9bb 	bl	8004de4 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8004a6e:	b00e      	add	sp, #56	; 0x38
 8004a70:	bd70      	pop	{r4, r5, r6, pc}
 8004a72:	bf00      	nop
 8004a74:	40023800 	.word	0x40023800
 8004a78:	40020800 	.word	0x40020800
 8004a7c:	200019f8 	.word	0x200019f8
 8004a80:	40020c00 	.word	0x40020c00
 8004a84:	40021000 	.word	0x40021000
 8004a88:	40021400 	.word	0x40021400
 8004a8c:	40021800 	.word	0x40021800
 8004a90:	40021c00 	.word	0x40021c00
 8004a94:	40022000 	.word	0x40022000
 8004a98:	40026410 	.word	0x40026410

08004a9c <BSP_SDRAM_Init>:
{
 8004a9c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004a9e:	4c19      	ldr	r4, [pc, #100]	; (8004b04 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8004aa0:	4d19      	ldr	r5, [pc, #100]	; (8004b08 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004aa2:	4b1a      	ldr	r3, [pc, #104]	; (8004b0c <BSP_SDRAM_Init+0x70>)
 8004aa4:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8004aa6:	2107      	movs	r1, #7
 8004aa8:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8004aaa:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8004aac:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8004ab0:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8004ab4:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8004ab8:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8004aba:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8004abc:	2340      	movs	r3, #64	; 0x40
 8004abe:	2220      	movs	r2, #32
 8004ac0:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8004ac4:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004ac6:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8004aca:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8004ace:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8004ad2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004ad6:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8004ada:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8004adc:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8004ae0:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8004ae2:	f7ff ff01 	bl	80048e8 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8004ae6:	4629      	mov	r1, r5
 8004ae8:	4620      	mov	r0, r4
 8004aea:	f002 fe75 	bl	80077d8 <HAL_SDRAM_Init>
 8004aee:	4c08      	ldr	r4, [pc, #32]	; (8004b10 <BSP_SDRAM_Init+0x74>)
 8004af0:	3800      	subs	r0, #0
 8004af2:	bf18      	it	ne
 8004af4:	2001      	movne	r0, #1
 8004af6:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8004af8:	f240 5069 	movw	r0, #1385	; 0x569
 8004afc:	f7ff feaa 	bl	8004854 <BSP_SDRAM_Initialization_sequence>
}
 8004b00:	7820      	ldrb	r0, [r4, #0]
 8004b02:	bd38      	pop	{r3, r4, r5, pc}
 8004b04:	20001a58 	.word	0x20001a58
 8004b08:	2000197c 	.word	0x2000197c
 8004b0c:	a0000140 	.word	0xa0000140
 8004b10:	2000004d 	.word	0x2000004d

08004b14 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8004b14:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8004b16:	b148      	cbz	r0, 8004b2c <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8004b18:	2038      	movs	r0, #56	; 0x38
 8004b1a:	f000 f971 	bl	8004e00 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8004b1e:	4804      	ldr	r0, [pc, #16]	; (8004b30 <BSP_SDRAM_MspDeInit+0x1c>)
 8004b20:	4b04      	ldr	r3, [pc, #16]	; (8004b34 <BSP_SDRAM_MspDeInit+0x20>)
 8004b22:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8004b24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8004b28:	f000 ba24 	b.w	8004f74 <HAL_DMA_DeInit>
}
 8004b2c:	bd08      	pop	{r3, pc}
 8004b2e:	bf00      	nop
 8004b30:	20001998 	.word	0x20001998
 8004b34:	40026410 	.word	0x40026410

08004b38 <BSP_SDRAM_DeInit>:
{
 8004b38:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004b3a:	4c07      	ldr	r4, [pc, #28]	; (8004b58 <BSP_SDRAM_DeInit+0x20>)
 8004b3c:	4b07      	ldr	r3, [pc, #28]	; (8004b5c <BSP_SDRAM_DeInit+0x24>)
 8004b3e:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8004b40:	4620      	mov	r0, r4
 8004b42:	f002 fe69 	bl	8007818 <HAL_SDRAM_DeInit>
 8004b46:	4d06      	ldr	r5, [pc, #24]	; (8004b60 <BSP_SDRAM_DeInit+0x28>)
 8004b48:	4601      	mov	r1, r0
 8004b4a:	b918      	cbnz	r0, 8004b54 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8004b4c:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8004b4e:	4620      	mov	r0, r4
 8004b50:	f7ff ffe0 	bl	8004b14 <BSP_SDRAM_MspDeInit>
}
 8004b54:	7828      	ldrb	r0, [r5, #0]
 8004b56:	bd38      	pop	{r3, r4, r5, pc}
 8004b58:	20001a58 	.word	0x20001a58
 8004b5c:	a0000140 	.word	0xa0000140
 8004b60:	2000004c 	.word	0x2000004c

08004b64 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8004b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8004b68:	4d16      	ldr	r5, [pc, #88]	; (8004bc4 <BSP_TS_Init+0x60>)
 8004b6a:	4c17      	ldr	r4, [pc, #92]	; (8004bc8 <BSP_TS_Init+0x64>)
 8004b6c:	682b      	ldr	r3, [r5, #0]
{
 8004b6e:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8004b70:	7820      	ldrb	r0, [r4, #0]
{
 8004b72:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8004b74:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8004b76:	686b      	ldr	r3, [r5, #4]
 8004b78:	2054      	movs	r0, #84	; 0x54
 8004b7a:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8004b7c:	b2c0      	uxtb	r0, r0
 8004b7e:	2811      	cmp	r0, #17
 8004b80:	d00a      	beq.n	8004b98 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8004b82:	686b      	ldr	r3, [r5, #4]
 8004b84:	2070      	movs	r0, #112	; 0x70
 8004b86:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004b88:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8004b8a:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004b8c:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8004b8e:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004b90:	d004      	beq.n	8004b9c <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8004b92:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8004b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8004b98:	2354      	movs	r3, #84	; 0x54
 8004b9a:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8004b9c:	4b0b      	ldr	r3, [pc, #44]	; (8004bcc <BSP_TS_Init+0x68>)
 8004b9e:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004bd0 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8004ba2:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8004ba4:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8004ba8:	42be      	cmp	r6, r7
 8004baa:	bf34      	ite	cc
 8004bac:	2601      	movcc	r6, #1
 8004bae:	260c      	movcs	r6, #12
 8004bb0:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8004bb2:	68ab      	ldr	r3, [r5, #8]
 8004bb4:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8004bb6:	f8d8 3000 	ldr.w	r3, [r8]
 8004bba:	7820      	ldrb	r0, [r4, #0]
 8004bbc:	68db      	ldr	r3, [r3, #12]
 8004bbe:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8004bc0:	2000      	movs	r0, #0
 8004bc2:	e7e7      	b.n	8004b94 <BSP_TS_Init+0x30>
 8004bc4:	20000020 	.word	0x20000020
 8004bc8:	20001a8c 	.word	0x20001a8c
 8004bcc:	20001aa4 	.word	0x20001aa4
 8004bd0:	20001aa0 	.word	0x20001aa0

08004bd4 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8004bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004bd8:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8004cb8 <BSP_TS_GetState+0xe4>
 8004bdc:	4a33      	ldr	r2, [pc, #204]	; (8004cac <BSP_TS_GetState+0xd8>)
 8004bde:	f8db 3000 	ldr.w	r3, [fp]
{
 8004be2:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004be4:	691b      	ldr	r3, [r3, #16]
 8004be6:	7810      	ldrb	r0, [r2, #0]
{
 8004be8:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004bea:	4798      	blx	r3
 8004bec:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8004bee:	b158      	cbz	r0, 8004c08 <BSP_TS_GetState+0x34>
 8004bf0:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cbc <BSP_TS_GetState+0xe8>
 8004bf4:	4f2e      	ldr	r7, [pc, #184]	; (8004cb0 <BSP_TS_GetState+0xdc>)
 8004bf6:	f106 0a02 	add.w	sl, r6, #2
 8004bfa:	ad03      	add	r5, sp, #12
 8004bfc:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8004bfe:	f04f 0900 	mov.w	r9, #0
 8004c02:	7833      	ldrb	r3, [r6, #0]
 8004c04:	454b      	cmp	r3, r9
 8004c06:	d803      	bhi.n	8004c10 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8004c08:	2000      	movs	r0, #0
 8004c0a:	b005      	add	sp, #20
 8004c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8004c10:	f8db 3000 	ldr.w	r3, [fp]
 8004c14:	4825      	ldr	r0, [pc, #148]	; (8004cac <BSP_TS_GetState+0xd8>)
 8004c16:	695b      	ldr	r3, [r3, #20]
 8004c18:	7800      	ldrb	r0, [r0, #0]
 8004c1a:	9101      	str	r1, [sp, #4]
 8004c1c:	462a      	mov	r2, r5
 8004c1e:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8004c20:	4b24      	ldr	r3, [pc, #144]	; (8004cb4 <BSP_TS_GetState+0xe0>)
 8004c22:	9901      	ldr	r1, [sp, #4]
 8004c24:	781b      	ldrb	r3, [r3, #0]
 8004c26:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8004c2a:	bf1f      	itttt	ne
 8004c2c:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8004c2e:	8828      	ldrhne	r0, [r5, #0]
 8004c30:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8004c32:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8004c34:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8004c36:	bf41      	itttt	mi
 8004c38:	880a      	ldrhmi	r2, [r1, #0]
 8004c3a:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8004c3e:	3203      	addmi	r2, #3
 8004c40:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8004c42:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8004c44:	bf48      	it	mi
 8004c46:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004c48:	f8d8 2000 	ldr.w	r2, [r8]
 8004c4c:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8004c50:	bf42      	ittt	mi
 8004c52:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8004c56:	3301      	addmi	r3, #1
 8004c58:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004c5a:	b293      	uxth	r3, r2
 8004c5c:	4290      	cmp	r0, r2
 8004c5e:	bf8c      	ite	hi
 8004c60:	1ac3      	subhi	r3, r0, r3
 8004c62:	1a1b      	subls	r3, r3, r0
 8004c64:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004c66:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004c6a:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004c6c:	683b      	ldr	r3, [r7, #0]
 8004c6e:	b29c      	uxth	r4, r3
 8004c70:	429a      	cmp	r2, r3
 8004c72:	bf88      	it	hi
 8004c74:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8004c76:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004c78:	bf98      	it	ls
 8004c7a:	1aa4      	subls	r4, r4, r2
 8004c7c:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8004c7e:	441c      	add	r4, r3
 8004c80:	46c4      	mov	ip, r8
 8004c82:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8004c84:	bfc8      	it	gt
 8004c86:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8004c8a:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8004c8e:	bfc8      	it	gt
 8004c90:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8004c92:	46be      	mov	lr, r7
 8004c94:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8004c98:	f8de 3000 	ldr.w	r3, [lr]
 8004c9c:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8004ca0:	f108 0804 	add.w	r8, r8, #4
 8004ca4:	3704      	adds	r7, #4
 8004ca6:	f109 0901 	add.w	r9, r9, #1
 8004caa:	e7aa      	b.n	8004c02 <BSP_TS_GetState+0x2e>
 8004cac:	20001a8c 	.word	0x20001a8c
 8004cb0:	20001a98 	.word	0x20001a98
 8004cb4:	20001aa4 	.word	0x20001aa4
 8004cb8:	20001aa0 	.word	0x20001aa0
 8004cbc:	20001a90 	.word	0x20001a90

08004cc0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004cc0:	4b05      	ldr	r3, [pc, #20]	; (8004cd8 <SystemInit+0x18>)
 8004cc2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004cc6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004cca:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004cce:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004cd2:	609a      	str	r2, [r3, #8]
#endif
}
 8004cd4:	4770      	bx	lr
 8004cd6:	bf00      	nop
 8004cd8:	e000ed00 	.word	0xe000ed00

08004cdc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004cdc:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004cde:	4b0b      	ldr	r3, [pc, #44]	; (8004d0c <HAL_Init+0x30>)
 8004ce0:	681a      	ldr	r2, [r3, #0]
 8004ce2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ce6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004ce8:	681a      	ldr	r2, [r3, #0]
 8004cea:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004cee:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004cf0:	681a      	ldr	r2, [r3, #0]
 8004cf2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004cf6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004cf8:	2003      	movs	r0, #3
 8004cfa:	f000 f82f 	bl	8004d5c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004cfe:	200f      	movs	r0, #15
 8004d00:	f7fd f8e8 	bl	8001ed4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004d04:	f7fc fe8a 	bl	8001a1c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004d08:	2000      	movs	r0, #0
 8004d0a:	bd08      	pop	{r3, pc}
 8004d0c:	40023c00 	.word	0x40023c00

08004d10 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004d10:	4a03      	ldr	r2, [pc, #12]	; (8004d20 <HAL_IncTick+0x10>)
 8004d12:	4b04      	ldr	r3, [pc, #16]	; (8004d24 <HAL_IncTick+0x14>)
 8004d14:	6811      	ldr	r1, [r2, #0]
 8004d16:	781b      	ldrb	r3, [r3, #0]
 8004d18:	440b      	add	r3, r1
 8004d1a:	6013      	str	r3, [r2, #0]
}
 8004d1c:	4770      	bx	lr
 8004d1e:	bf00      	nop
 8004d20:	20001aa8 	.word	0x20001aa8
 8004d24:	20000054 	.word	0x20000054

08004d28 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004d28:	4b01      	ldr	r3, [pc, #4]	; (8004d30 <HAL_GetTick+0x8>)
 8004d2a:	6818      	ldr	r0, [r3, #0]
}
 8004d2c:	4770      	bx	lr
 8004d2e:	bf00      	nop
 8004d30:	20001aa8 	.word	0x20001aa8

08004d34 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004d34:	b538      	push	{r3, r4, r5, lr}
 8004d36:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004d38:	f7ff fff6 	bl	8004d28 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004d3c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004d3e:	bf1c      	itt	ne
 8004d40:	4b05      	ldrne	r3, [pc, #20]	; (8004d58 <HAL_Delay+0x24>)
 8004d42:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004d44:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004d46:	bf18      	it	ne
 8004d48:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004d4a:	f7ff ffed 	bl	8004d28 <HAL_GetTick>
 8004d4e:	1b43      	subs	r3, r0, r5
 8004d50:	42a3      	cmp	r3, r4
 8004d52:	d3fa      	bcc.n	8004d4a <HAL_Delay+0x16>
  {
  }
}
 8004d54:	bd38      	pop	{r3, r4, r5, pc}
 8004d56:	bf00      	nop
 8004d58:	20000054 	.word	0x20000054

08004d5c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004d5c:	4907      	ldr	r1, [pc, #28]	; (8004d7c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004d5e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d60:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004d64:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d66:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004d68:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d6c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004d6e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004d70:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004d74:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004d78:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004d7a:	4770      	bx	lr
 8004d7c:	e000ed00 	.word	0xe000ed00

08004d80 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004d80:	4b16      	ldr	r3, [pc, #88]	; (8004ddc <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004d82:	b530      	push	{r4, r5, lr}
 8004d84:	68dc      	ldr	r4, [r3, #12]
 8004d86:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004d8a:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d8e:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004d90:	2d04      	cmp	r5, #4
 8004d92:	bf28      	it	cs
 8004d94:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d96:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d98:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d9c:	bf8c      	ite	hi
 8004d9e:	3c03      	subhi	r4, #3
 8004da0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004da2:	fa03 f505 	lsl.w	r5, r3, r5
 8004da6:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004daa:	40a3      	lsls	r3, r4
 8004dac:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004db0:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8004db2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004db4:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004db8:	bfac      	ite	ge
 8004dba:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dbe:	4a08      	ldrlt	r2, [pc, #32]	; (8004de0 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dc0:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dc4:	bfb8      	it	lt
 8004dc6:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dca:	b2db      	uxtb	r3, r3
 8004dcc:	bfaa      	itet	ge
 8004dce:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dd2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dd4:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004dd8:	bd30      	pop	{r4, r5, pc}
 8004dda:	bf00      	nop
 8004ddc:	e000ed00 	.word	0xe000ed00
 8004de0:	e000ed14 	.word	0xe000ed14

08004de4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004de4:	2800      	cmp	r0, #0
 8004de6:	db08      	blt.n	8004dfa <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004de8:	0942      	lsrs	r2, r0, #5
 8004dea:	2301      	movs	r3, #1
 8004dec:	f000 001f 	and.w	r0, r0, #31
 8004df0:	fa03 f000 	lsl.w	r0, r3, r0
 8004df4:	4b01      	ldr	r3, [pc, #4]	; (8004dfc <HAL_NVIC_EnableIRQ+0x18>)
 8004df6:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004dfa:	4770      	bx	lr
 8004dfc:	e000e100 	.word	0xe000e100

08004e00 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004e00:	2800      	cmp	r0, #0
 8004e02:	db0d      	blt.n	8004e20 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004e04:	0943      	lsrs	r3, r0, #5
 8004e06:	2201      	movs	r2, #1
 8004e08:	f000 001f 	and.w	r0, r0, #31
 8004e0c:	fa02 f000 	lsl.w	r0, r2, r0
 8004e10:	3320      	adds	r3, #32
 8004e12:	4a04      	ldr	r2, [pc, #16]	; (8004e24 <HAL_NVIC_DisableIRQ+0x24>)
 8004e14:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004e18:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004e1c:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004e20:	4770      	bx	lr
 8004e22:	bf00      	nop
 8004e24:	e000e100 	.word	0xe000e100

08004e28 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004e28:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004e2a:	4604      	mov	r4, r0
 8004e2c:	b150      	cbz	r0, 8004e44 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004e2e:	7943      	ldrb	r3, [r0, #5]
 8004e30:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e34:	b913      	cbnz	r3, 8004e3c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004e36:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004e38:	f7fc fe10 	bl	8001a5c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004e3c:	2301      	movs	r3, #1
 8004e3e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004e40:	2000      	movs	r0, #0
}
 8004e42:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e44:	2001      	movs	r0, #1
 8004e46:	e7fc      	b.n	8004e42 <HAL_CRC_Init+0x1a>

08004e48 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004e48:	6803      	ldr	r3, [r0, #0]
{
 8004e4a:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004e4c:	4c08      	ldr	r4, [pc, #32]	; (8004e70 <DMA_CalcBaseAndBitshift+0x28>)
{
 8004e4e:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004e50:	b2d9      	uxtb	r1, r3
 8004e52:	3910      	subs	r1, #16
 8004e54:	2018      	movs	r0, #24
 8004e56:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004e5a:	5c20      	ldrb	r0, [r4, r0]
 8004e5c:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004e5e:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8004e62:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8004e66:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004e68:	bf88      	it	hi
 8004e6a:	3004      	addhi	r0, #4
 8004e6c:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8004e6e:	bd10      	pop	{r4, pc}
 8004e70:	0801f5d1 	.word	0x0801f5d1

08004e74 <HAL_DMA_Init>:
{
 8004e74:	b570      	push	{r4, r5, r6, lr}
 8004e76:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004e78:	f7ff ff56 	bl	8004d28 <HAL_GetTick>
 8004e7c:	4605      	mov	r5, r0
  if(hdma == NULL)
 8004e7e:	2c00      	cmp	r4, #0
 8004e80:	d073      	beq.n	8004f6a <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8004e82:	2302      	movs	r3, #2
 8004e84:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8004e88:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8004e8a:	2300      	movs	r3, #0
 8004e8c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8004e90:	6813      	ldr	r3, [r2, #0]
 8004e92:	f023 0301 	bic.w	r3, r3, #1
 8004e96:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004e98:	6821      	ldr	r1, [r4, #0]
 8004e9a:	680b      	ldr	r3, [r1, #0]
 8004e9c:	07d8      	lsls	r0, r3, #31
 8004e9e:	d42f      	bmi.n	8004f00 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8004ea0:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004ea2:	4d33      	ldr	r5, [pc, #204]	; (8004f70 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004ea4:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004ea6:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004ea8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8004eac:	4313      	orrs	r3, r2
 8004eae:	68e2      	ldr	r2, [r4, #12]
 8004eb0:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004eb2:	6922      	ldr	r2, [r4, #16]
 8004eb4:	4313      	orrs	r3, r2
 8004eb6:	6962      	ldr	r2, [r4, #20]
 8004eb8:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004eba:	69e2      	ldr	r2, [r4, #28]
 8004ebc:	4303      	orrs	r3, r0
 8004ebe:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8004ec0:	6a22      	ldr	r2, [r4, #32]
 8004ec2:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004ec4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004ec6:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004ec8:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004ecc:	bf02      	ittt	eq
 8004ece:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8004ed2:	4335      	orreq	r5, r6
 8004ed4:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8004ed6:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004ed8:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004eda:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004edc:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004ee0:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004ee4:	d133      	bne.n	8004f4e <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8004ee6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004ee8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8004eea:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004eec:	b37d      	cbz	r5, 8004f4e <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004eee:	b990      	cbnz	r0, 8004f16 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8004ef0:	2a01      	cmp	r2, #1
 8004ef2:	d021      	beq.n	8004f38 <HAL_DMA_Init+0xc4>
 8004ef4:	f032 0202 	bics.w	r2, r2, #2
 8004ef8:	d129      	bne.n	8004f4e <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004efa:	01ea      	lsls	r2, r5, #7
 8004efc:	d527      	bpl.n	8004f4e <HAL_DMA_Init+0xda>
 8004efe:	e01e      	b.n	8004f3e <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004f00:	f7ff ff12 	bl	8004d28 <HAL_GetTick>
 8004f04:	1b40      	subs	r0, r0, r5
 8004f06:	2805      	cmp	r0, #5
 8004f08:	d9c6      	bls.n	8004e98 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004f0a:	2320      	movs	r3, #32
 8004f0c:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004f0e:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8004f10:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8004f14:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004f16:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004f1a:	d114      	bne.n	8004f46 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8004f1c:	2a03      	cmp	r2, #3
 8004f1e:	d816      	bhi.n	8004f4e <HAL_DMA_Init+0xda>
 8004f20:	a001      	add	r0, pc, #4	; (adr r0, 8004f28 <HAL_DMA_Init+0xb4>)
 8004f22:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8004f26:	bf00      	nop
 8004f28:	08004f3f 	.word	0x08004f3f
 8004f2c:	08004efb 	.word	0x08004efb
 8004f30:	08004f3f 	.word	0x08004f3f
 8004f34:	08004f39 	.word	0x08004f39
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004f38:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004f3c:	d107      	bne.n	8004f4e <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004f3e:	2340      	movs	r3, #64	; 0x40
 8004f40:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8004f42:	2001      	movs	r0, #1
 8004f44:	e7e4      	b.n	8004f10 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8004f46:	2a02      	cmp	r2, #2
 8004f48:	d9f9      	bls.n	8004f3e <HAL_DMA_Init+0xca>
 8004f4a:	2a03      	cmp	r2, #3
 8004f4c:	d0d5      	beq.n	8004efa <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8004f4e:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004f50:	4620      	mov	r0, r4
 8004f52:	f7ff ff79 	bl	8004e48 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004f56:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004f58:	233f      	movs	r3, #63	; 0x3f
 8004f5a:	4093      	lsls	r3, r2
 8004f5c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004f5e:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004f60:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004f62:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8004f64:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8004f68:	e7d4      	b.n	8004f14 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8004f6a:	2001      	movs	r0, #1
 8004f6c:	e7d2      	b.n	8004f14 <HAL_DMA_Init+0xa0>
 8004f6e:	bf00      	nop
 8004f70:	f010803f 	.word	0xf010803f

08004f74 <HAL_DMA_DeInit>:
{
 8004f74:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8004f76:	4605      	mov	r5, r0
 8004f78:	b320      	cbz	r0, 8004fc4 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8004f7a:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004f7e:	2b02      	cmp	r3, #2
 8004f80:	b2dc      	uxtb	r4, r3
 8004f82:	d01d      	beq.n	8004fc0 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8004f84:	6803      	ldr	r3, [r0, #0]
 8004f86:	681a      	ldr	r2, [r3, #0]
 8004f88:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8004f8c:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8004f8e:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8004f90:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8004f92:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8004f94:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8004f96:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8004f98:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8004f9a:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8004f9c:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004f9e:	f7ff ff53 	bl	8004e48 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004fa2:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004fa4:	233f      	movs	r3, #63	; 0x3f
 8004fa6:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8004fa8:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004fac:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8004fb0:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004fb4:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004fb6:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004fb8:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004fbc:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8004fc0:	4620      	mov	r0, r4
 8004fc2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004fc4:	2401      	movs	r4, #1
 8004fc6:	e7fb      	b.n	8004fc0 <HAL_DMA_DeInit+0x4c>

08004fc8 <HAL_DMA_Abort>:
{
 8004fc8:	b570      	push	{r4, r5, r6, lr}
 8004fca:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004fcc:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8004fce:	f7ff feab 	bl	8004d28 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004fd2:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8004fd6:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004fd8:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004fda:	d006      	beq.n	8004fea <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004fdc:	2380      	movs	r3, #128	; 0x80
 8004fde:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8004fe0:	2300      	movs	r3, #0
 8004fe2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8004fe6:	2001      	movs	r0, #1
}
 8004fe8:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004fea:	6823      	ldr	r3, [r4, #0]
 8004fec:	681a      	ldr	r2, [r3, #0]
 8004fee:	f022 0216 	bic.w	r2, r2, #22
 8004ff2:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004ff4:	695a      	ldr	r2, [r3, #20]
 8004ff6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004ffa:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004ffc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ffe:	b90a      	cbnz	r2, 8005004 <HAL_DMA_Abort+0x3c>
 8005000:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005002:	b11a      	cbz	r2, 800500c <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8005004:	681a      	ldr	r2, [r3, #0]
 8005006:	f022 0208 	bic.w	r2, r2, #8
 800500a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800500c:	681a      	ldr	r2, [r3, #0]
 800500e:	f022 0201 	bic.w	r2, r2, #1
 8005012:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005014:	6823      	ldr	r3, [r4, #0]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	f013 0301 	ands.w	r3, r3, #1
 800501c:	d10a      	bne.n	8005034 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800501e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8005020:	223f      	movs	r2, #63	; 0x3f
 8005022:	408a      	lsls	r2, r1
 8005024:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8005026:	2201      	movs	r2, #1
 8005028:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800502c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8005030:	4618      	mov	r0, r3
 8005032:	e7d9      	b.n	8004fe8 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8005034:	f7ff fe78 	bl	8004d28 <HAL_GetTick>
 8005038:	1b40      	subs	r0, r0, r5
 800503a:	2805      	cmp	r0, #5
 800503c:	d9ea      	bls.n	8005014 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800503e:	2320      	movs	r3, #32
 8005040:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005042:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8005044:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005046:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800504a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800504e:	e7cb      	b.n	8004fe8 <HAL_DMA_Abort+0x20>

08005050 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005050:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8005052:	4604      	mov	r4, r0
 8005054:	b330      	cbz	r0, 80050a4 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005056:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800505a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800505e:	b91b      	cbnz	r3, 8005068 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005060:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005064:	f7fc fd12 	bl	8001a8c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005068:	6822      	ldr	r2, [r4, #0]
 800506a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800506c:	2302      	movs	r3, #2
 800506e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005072:	6813      	ldr	r3, [r2, #0]
 8005074:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005078:	430b      	orrs	r3, r1
 800507a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800507c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800507e:	68a1      	ldr	r1, [r4, #8]
 8005080:	f023 0307 	bic.w	r3, r3, #7
 8005084:	430b      	orrs	r3, r1
 8005086:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005088:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800508a:	68e1      	ldr	r1, [r4, #12]
 800508c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005090:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005094:	430b      	orrs	r3, r1
 8005096:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005098:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800509a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800509c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800509e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80050a2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80050a4:	2001      	movs	r0, #1
 80050a6:	e7fc      	b.n	80050a2 <HAL_DMA2D_Init+0x52>

080050a8 <HAL_DMA2D_LineEventCallback>:
 80050a8:	4770      	bx	lr

080050aa <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80050aa:	4770      	bx	lr

080050ac <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80050ac:	6803      	ldr	r3, [r0, #0]
{
 80050ae:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80050b0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80050b2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80050b4:	07f2      	lsls	r2, r6, #31
{
 80050b6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80050b8:	d514      	bpl.n	80050e4 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80050ba:	05e9      	lsls	r1, r5, #23
 80050bc:	d512      	bpl.n	80050e4 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80050be:	681a      	ldr	r2, [r3, #0]
 80050c0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80050c4:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80050c6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80050c8:	f042 0201 	orr.w	r2, r2, #1
 80050cc:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80050ce:	2201      	movs	r2, #1
 80050d0:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80050d2:	2304      	movs	r3, #4
 80050d4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80050d8:	2300      	movs	r3, #0
 80050da:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80050de:	6943      	ldr	r3, [r0, #20]
 80050e0:	b103      	cbz	r3, 80050e4 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80050e2:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80050e4:	06b2      	lsls	r2, r6, #26
 80050e6:	d516      	bpl.n	8005116 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80050e8:	04ab      	lsls	r3, r5, #18
 80050ea:	d514      	bpl.n	8005116 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80050ec:	6823      	ldr	r3, [r4, #0]
 80050ee:	681a      	ldr	r2, [r3, #0]
 80050f0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80050f4:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80050f6:	2220      	movs	r2, #32
 80050f8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80050fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80050fc:	f043 0302 	orr.w	r3, r3, #2
 8005100:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005102:	2304      	movs	r3, #4
 8005104:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005108:	2300      	movs	r3, #0
 800510a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800510e:	6963      	ldr	r3, [r4, #20]
 8005110:	b10b      	cbz	r3, 8005116 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005112:	4620      	mov	r0, r4
 8005114:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005116:	0730      	lsls	r0, r6, #28
 8005118:	d516      	bpl.n	8005148 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800511a:	0529      	lsls	r1, r5, #20
 800511c:	d514      	bpl.n	8005148 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800511e:	6823      	ldr	r3, [r4, #0]
 8005120:	681a      	ldr	r2, [r3, #0]
 8005122:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005126:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005128:	2208      	movs	r2, #8
 800512a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800512c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800512e:	f043 0304 	orr.w	r3, r3, #4
 8005132:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005134:	2304      	movs	r3, #4
 8005136:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800513a:	2300      	movs	r3, #0
 800513c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005140:	6963      	ldr	r3, [r4, #20]
 8005142:	b10b      	cbz	r3, 8005148 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005144:	4620      	mov	r0, r4
 8005146:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005148:	0772      	lsls	r2, r6, #29
 800514a:	d50b      	bpl.n	8005164 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800514c:	056b      	lsls	r3, r5, #21
 800514e:	d509      	bpl.n	8005164 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005150:	6823      	ldr	r3, [r4, #0]
 8005152:	681a      	ldr	r2, [r3, #0]
 8005154:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005158:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800515a:	2204      	movs	r2, #4
 800515c:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800515e:	4620      	mov	r0, r4
 8005160:	f7ff ffa2 	bl	80050a8 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005164:	07b0      	lsls	r0, r6, #30
 8005166:	d514      	bpl.n	8005192 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005168:	05a9      	lsls	r1, r5, #22
 800516a:	d512      	bpl.n	8005192 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800516c:	6823      	ldr	r3, [r4, #0]
 800516e:	681a      	ldr	r2, [r3, #0]
 8005170:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005174:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005176:	2202      	movs	r2, #2
 8005178:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800517a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800517c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800517e:	2301      	movs	r3, #1
 8005180:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005184:	2300      	movs	r3, #0
 8005186:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800518a:	6923      	ldr	r3, [r4, #16]
 800518c:	b10b      	cbz	r3, 8005192 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800518e:	4620      	mov	r0, r4
 8005190:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005192:	06f2      	lsls	r2, r6, #27
 8005194:	d513      	bpl.n	80051be <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005196:	04eb      	lsls	r3, r5, #19
 8005198:	d511      	bpl.n	80051be <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800519a:	6823      	ldr	r3, [r4, #0]
 800519c:	681a      	ldr	r2, [r3, #0]
 800519e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80051a2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80051a4:	2210      	movs	r2, #16
 80051a6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80051a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80051aa:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80051ac:	2301      	movs	r3, #1
 80051ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80051b2:	2300      	movs	r3, #0
 80051b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80051b8:	4620      	mov	r0, r4
 80051ba:	f7ff ff76 	bl	80050aa <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80051be:	bd70      	pop	{r4, r5, r6, pc}

080051c0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80051c0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80051c2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80051c6:	2b01      	cmp	r3, #1
 80051c8:	f04f 0302 	mov.w	r3, #2
 80051cc:	d02b      	beq.n	8005226 <HAL_DMA2D_ConfigLayer+0x66>
 80051ce:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80051d0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80051d4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80051d8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80051dc:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80051e0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80051e2:	4f18      	ldr	r7, [pc, #96]	; (8005244 <HAL_DMA2D_ConfigLayer+0x84>)
 80051e4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80051e8:	3c09      	subs	r4, #9
 80051ea:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80051ec:	bf9c      	itt	ls
 80051ee:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80051f2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80051f4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80051f8:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80051fa:	bf88      	it	hi
 80051fc:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005200:	b999      	cbnz	r1, 800522a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005202:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005204:	4039      	ands	r1, r7
 8005206:	430a      	orrs	r2, r1
 8005208:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800520a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800520c:	6982      	ldr	r2, [r0, #24]
 800520e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005210:	d803      	bhi.n	800521a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8005212:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005214:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005218:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800521a:	2301      	movs	r3, #1
 800521c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005220:	2300      	movs	r3, #0
 8005222:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005226:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005228:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800522a:	69d9      	ldr	r1, [r3, #28]
 800522c:	4039      	ands	r1, r7
 800522e:	430a      	orrs	r2, r1
 8005230:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005232:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005234:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005236:	6992      	ldr	r2, [r2, #24]
 8005238:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800523a:	bf9c      	itt	ls
 800523c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8005240:	621d      	strls	r5, [r3, #32]
 8005242:	e7ea      	b.n	800521a <HAL_DMA2D_ConfigLayer+0x5a>
 8005244:	00fcfff0 	.word	0x00fcfff0

08005248 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8005248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800524c:	4607      	mov	r7, r0
 800524e:	460d      	mov	r5, r1
 8005250:	4614      	mov	r4, r2
 8005252:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8005254:	f7ff fd68 	bl	8004d28 <HAL_GetTick>
 8005258:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800525a:	683b      	ldr	r3, [r7, #0]
 800525c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800525e:	07d2      	lsls	r2, r2, #31
 8005260:	d50a      	bpl.n	8005278 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8005262:	9906      	ldr	r1, [sp, #24]
 8005264:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8005268:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800526c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8005270:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8005272:	2000      	movs	r0, #0
}
 8005274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005278:	f7ff fd56 	bl	8004d28 <HAL_GetTick>
 800527c:	eba0 0008 	sub.w	r0, r0, r8
 8005280:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005284:	d9e9      	bls.n	800525a <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8005286:	2003      	movs	r0, #3
 8005288:	e7f4      	b.n	8005274 <DSI_ShortWrite+0x2c>

0800528a <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800528a:	7c03      	ldrb	r3, [r0, #16]
 800528c:	2b01      	cmp	r3, #1
 800528e:	d05d      	beq.n	800534c <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8005290:	6803      	ldr	r3, [r0, #0]
 8005292:	2200      	movs	r2, #0
 8005294:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8005298:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800529c:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800529e:	bf48      	it	mi
 80052a0:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 80052a4:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80052a6:	bf42      	ittt	mi
 80052a8:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 80052ac:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 80052b0:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 80052b4:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 80052b6:	bf42      	ittt	mi
 80052b8:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 80052bc:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 80052c0:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 80052c4:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 80052c6:	bf42      	ittt	mi
 80052c8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80052cc:	f042 0201 	orrmi.w	r2, r2, #1
 80052d0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80052d4:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80052d6:	bf42      	ittt	mi
 80052d8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80052dc:	f042 0202 	orrmi.w	r2, r2, #2
 80052e0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 80052e4:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 80052e6:	bf42      	ittt	mi
 80052e8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80052ec:	f042 020c 	orrmi.w	r2, r2, #12
 80052f0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 80052f4:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 80052f6:	bf42      	ittt	mi
 80052f8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80052fc:	f042 0210 	orrmi.w	r2, r2, #16
 8005300:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8005304:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8005306:	bf42      	ittt	mi
 8005308:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800530c:	f042 0220 	orrmi.w	r2, r2, #32
 8005310:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8005314:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8005316:	bf42      	ittt	mi
 8005318:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800531c:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8005320:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8005324:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8005326:	bf42      	ittt	mi
 8005328:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800532c:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005330:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8005334:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8005336:	bf42      	ittt	mi
 8005338:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800533c:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8005340:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8005344:	2300      	movs	r3, #0
 8005346:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005348:	4618      	mov	r0, r3
 800534a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800534c:	2002      	movs	r0, #2
}
 800534e:	4770      	bx	lr

08005350 <HAL_DSI_Init>:
{
 8005350:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005352:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8005354:	4604      	mov	r4, r0
 8005356:	2800      	cmp	r0, #0
 8005358:	f000 80a9 	beq.w	80054ae <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800535c:	7c43      	ldrb	r3, [r0, #17]
 800535e:	b90b      	cbnz	r3, 8005364 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8005360:	f7fc fbb6 	bl	8001ad0 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8005364:	2303      	movs	r3, #3
 8005366:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8005368:	2300      	movs	r3, #0
 800536a:	9300      	str	r3, [sp, #0]
 800536c:	6823      	ldr	r3, [r4, #0]
 800536e:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8005372:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8005376:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800537a:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800537e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005382:	9300      	str	r3, [sp, #0]
 8005384:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8005386:	f7ff fccf 	bl	8004d28 <HAL_GetTick>
 800538a:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800538c:	6822      	ldr	r2, [r4, #0]
 800538e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8005392:	04d9      	lsls	r1, r3, #19
 8005394:	d57a      	bpl.n	800548c <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8005396:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800539a:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800539e:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80053a2:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80053a6:	e9d5 0300 	ldrd	r0, r3, [r5]
 80053aa:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80053ac:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 80053b0:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80053b2:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80053b6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80053ba:	430b      	orrs	r3, r1
 80053bc:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 80053c0:	2300      	movs	r3, #0
 80053c2:	9301      	str	r3, [sp, #4]
 80053c4:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80053c8:	f043 0301 	orr.w	r3, r3, #1
 80053cc:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80053d0:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80053d4:	f003 0301 	and.w	r3, r3, #1
 80053d8:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 80053da:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 80053dc:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 80053de:	f7ff fca9 	bl	8004d34 <HAL_Delay>
  tickstart = HAL_GetTick();
 80053e2:	f7ff fca1 	bl	8004d28 <HAL_GetTick>
 80053e6:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80053e8:	6823      	ldr	r3, [r4, #0]
 80053ea:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80053ee:	05d2      	lsls	r2, r2, #23
 80053f0:	d556      	bpl.n	80054a0 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80053f2:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80053f6:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80053f8:	f042 0206 	orr.w	r2, r2, #6
 80053fc:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8005400:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005404:	f022 0203 	bic.w	r2, r2, #3
 8005408:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800540c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005410:	430a      	orrs	r2, r1
 8005412:	f042 0201 	orr.w	r2, r2, #1
 8005416:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800541a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800541e:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8005420:	f022 0203 	bic.w	r2, r2, #3
 8005424:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005428:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800542c:	430a      	orrs	r2, r1
 800542e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005432:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005434:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005436:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800543a:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800543c:	689a      	ldr	r2, [r3, #8]
 800543e:	430a      	orrs	r2, r1
 8005440:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005442:	686a      	ldr	r2, [r5, #4]
 8005444:	491b      	ldr	r1, [pc, #108]	; (80054b4 <HAL_DSI_Init+0x164>)
 8005446:	2a01      	cmp	r2, #1
 8005448:	bf38      	it	cc
 800544a:	2201      	movcc	r2, #1
 800544c:	434a      	muls	r2, r1
 800544e:	68a9      	ldr	r1, [r5, #8]
 8005450:	f001 0103 	and.w	r1, r1, #3
 8005454:	408a      	lsls	r2, r1
 8005456:	6829      	ldr	r1, [r5, #0]
 8005458:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800545c:	4341      	muls	r1, r0
 800545e:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8005462:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8005466:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800546a:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800546e:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8005472:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8005474:	430a      	orrs	r2, r1
 8005476:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800547a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800547e:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8005482:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8005484:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8005486:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8005488:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800548a:	e007      	b.n	800549c <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800548c:	f7ff fc4c 	bl	8004d28 <HAL_GetTick>
 8005490:	1b80      	subs	r0, r0, r6
 8005492:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005496:	f67f af79 	bls.w	800538c <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800549a:	2003      	movs	r0, #3
}
 800549c:	b002      	add	sp, #8
 800549e:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80054a0:	f7ff fc42 	bl	8004d28 <HAL_GetTick>
 80054a4:	1b80      	subs	r0, r0, r6
 80054a6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80054aa:	d99d      	bls.n	80053e8 <HAL_DSI_Init+0x98>
 80054ac:	e7f5      	b.n	800549a <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 80054ae:	2001      	movs	r0, #1
 80054b0:	e7f4      	b.n	800549c <HAL_DSI_Init+0x14c>
 80054b2:	bf00      	nop
 80054b4:	003d0900 	.word	0x003d0900

080054b8 <HAL_DSI_ErrorCallback>:
 80054b8:	4770      	bx	lr

080054ba <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80054ba:	6803      	ldr	r3, [r0, #0]
 80054bc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80054c0:	07d1      	lsls	r1, r2, #31
{
 80054c2:	b510      	push	{r4, lr}
 80054c4:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80054c6:	d508      	bpl.n	80054da <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 80054c8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80054cc:	07d2      	lsls	r2, r2, #31
 80054ce:	d504      	bpl.n	80054da <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80054d0:	2201      	movs	r2, #1
 80054d2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80054d6:	f7fb fb33 	bl	8000b40 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80054da:	6823      	ldr	r3, [r4, #0]
 80054dc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80054e0:	0791      	lsls	r1, r2, #30
 80054e2:	d509      	bpl.n	80054f8 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80054e4:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80054e8:	0792      	lsls	r2, r2, #30
 80054ea:	d505      	bpl.n	80054f8 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80054ec:	2202      	movs	r2, #2
 80054ee:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80054f2:	4620      	mov	r0, r4
 80054f4:	f7fb fb58 	bl	8000ba8 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80054f8:	69a3      	ldr	r3, [r4, #24]
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d04e      	beq.n	800559c <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80054fe:	6821      	ldr	r1, [r4, #0]
 8005500:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8005504:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8005508:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800550c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800550e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005512:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8005514:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005516:	b119      	cbz	r1, 8005520 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8005518:	6961      	ldr	r1, [r4, #20]
 800551a:	f041 0101 	orr.w	r1, r1, #1
 800551e:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8005520:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8005524:	bf1e      	ittt	ne
 8005526:	6962      	ldrne	r2, [r4, #20]
 8005528:	f042 0202 	orrne.w	r2, r2, #2
 800552c:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800552e:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8005530:	bf42      	ittt	mi
 8005532:	6962      	ldrmi	r2, [r4, #20]
 8005534:	f042 0204 	orrmi.w	r2, r2, #4
 8005538:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800553a:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800553c:	bf42      	ittt	mi
 800553e:	6962      	ldrmi	r2, [r4, #20]
 8005540:	f042 0208 	orrmi.w	r2, r2, #8
 8005544:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8005546:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800554a:	bf1e      	ittt	ne
 800554c:	6962      	ldrne	r2, [r4, #20]
 800554e:	f042 0210 	orrne.w	r2, r2, #16
 8005552:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8005554:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8005556:	bf42      	ittt	mi
 8005558:	6962      	ldrmi	r2, [r4, #20]
 800555a:	f042 0220 	orrmi.w	r2, r2, #32
 800555e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8005560:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8005562:	bf42      	ittt	mi
 8005564:	6962      	ldrmi	r2, [r4, #20]
 8005566:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800556a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800556c:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800556e:	bf42      	ittt	mi
 8005570:	6962      	ldrmi	r2, [r4, #20]
 8005572:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005576:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8005578:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800557a:	bf42      	ittt	mi
 800557c:	6962      	ldrmi	r2, [r4, #20]
 800557e:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8005582:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8005584:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8005588:	bf1e      	ittt	ne
 800558a:	6963      	ldrne	r3, [r4, #20]
 800558c:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8005590:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8005592:	6963      	ldr	r3, [r4, #20]
 8005594:	b113      	cbz	r3, 800559c <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8005596:	4620      	mov	r0, r4
 8005598:	f7ff ff8e 	bl	80054b8 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800559c:	bd10      	pop	{r4, pc}

0800559e <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800559e:	7c03      	ldrb	r3, [r0, #16]
 80055a0:	2b01      	cmp	r3, #1
 80055a2:	d00b      	beq.n	80055bc <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 80055a4:	6803      	ldr	r3, [r0, #0]
 80055a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055a8:	f022 0203 	bic.w	r2, r2, #3
 80055ac:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 80055ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055b0:	4311      	orrs	r1, r2
 80055b2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80055b4:	2300      	movs	r3, #0
 80055b6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80055b8:	4618      	mov	r0, r3
 80055ba:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80055bc:	2002      	movs	r0, #2
}
 80055be:	4770      	bx	lr

080055c0 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 80055c0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80055c2:	7c03      	ldrb	r3, [r0, #16]
 80055c4:	2b01      	cmp	r3, #1
 80055c6:	d06a      	beq.n	800569e <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80055c8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80055ca:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80055cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80055ce:	f042 0201 	orr.w	r2, r2, #1
 80055d2:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80055d4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80055d8:	f022 0201 	bic.w	r2, r2, #1
 80055dc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80055e0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80055e4:	f042 0201 	orr.w	r2, r2, #1
 80055e8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80055ec:	68da      	ldr	r2, [r3, #12]
 80055ee:	f022 0203 	bic.w	r2, r2, #3
 80055f2:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80055f4:	68da      	ldr	r2, [r3, #12]
 80055f6:	4322      	orrs	r2, r4
 80055f8:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80055fa:	695a      	ldr	r2, [r3, #20]
 80055fc:	f022 0207 	bic.w	r2, r2, #7
 8005600:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8005602:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8005606:	432a      	orrs	r2, r5
 8005608:	694d      	ldr	r5, [r1, #20]
 800560a:	695c      	ldr	r4, [r3, #20]
 800560c:	432a      	orrs	r2, r5
 800560e:	4322      	orrs	r2, r4
 8005610:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8005612:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8005614:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8005616:	f022 020f 	bic.w	r2, r2, #15
 800561a:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800561c:	691c      	ldr	r4, [r3, #16]
 800561e:	432c      	orrs	r4, r5
 8005620:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8005622:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005626:	f024 040e 	bic.w	r4, r4, #14
 800562a:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800562e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005632:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005634:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8005638:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800563c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800563e:	0c12      	lsrs	r2, r2, #16
 8005640:	0412      	lsls	r2, r2, #16
 8005642:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005644:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005646:	4322      	orrs	r2, r4
 8005648:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800564a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800564e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005652:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005656:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800565a:	432a      	orrs	r2, r5
 800565c:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800565e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005662:	432a      	orrs	r2, r5
 8005664:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005666:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005668:	432a      	orrs	r2, r5
 800566a:	4322      	orrs	r2, r4
 800566c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8005670:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005672:	f022 0201 	bic.w	r2, r2, #1
 8005676:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005678:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800567a:	430a      	orrs	r2, r1
 800567c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800567e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005682:	f042 0201 	orr.w	r2, r2, #1
 8005686:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800568a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800568e:	f042 0202 	orr.w	r2, r2, #2
 8005692:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005696:	2300      	movs	r3, #0
 8005698:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800569a:	4618      	mov	r0, r3
}
 800569c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800569e:	2002      	movs	r0, #2
 80056a0:	e7fc      	b.n	800569c <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

080056a4 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 80056a4:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80056a6:	7c03      	ldrb	r3, [r0, #16]
 80056a8:	2b01      	cmp	r3, #1
 80056aa:	d02a      	beq.n	8005702 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 80056ac:	6802      	ldr	r2, [r0, #0]
 80056ae:	4b16      	ldr	r3, [pc, #88]	; (8005708 <HAL_DSI_ConfigCommand+0x64>)
 80056b0:	6e94      	ldr	r4, [r2, #104]	; 0x68
 80056b2:	4023      	ands	r3, r4
 80056b4:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80056b6:	e9d1 3500 	ldrd	r3, r5, [r1]
 80056ba:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 80056bc:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80056be:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 80056c0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 80056c2:	68cd      	ldr	r5, [r1, #12]
 80056c4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 80056c6:	690d      	ldr	r5, [r1, #16]
 80056c8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 80056ca:	694d      	ldr	r5, [r1, #20]
 80056cc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80056ce:	698d      	ldr	r5, [r1, #24]
 80056d0:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80056d2:	69cd      	ldr	r5, [r1, #28]
 80056d4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80056d6:	6a0d      	ldr	r5, [r1, #32]
 80056d8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80056da:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80056dc:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80056de:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80056e0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80056e2:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80056e4:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80056e6:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80056e8:	4323      	orrs	r3, r4
 80056ea:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80056ec:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80056ee:	f023 0302 	bic.w	r3, r3, #2
 80056f2:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80056f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80056f6:	430b      	orrs	r3, r1
 80056f8:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80056fa:	2300      	movs	r3, #0
 80056fc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80056fe:	4618      	mov	r0, r3
}
 8005700:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005702:	2002      	movs	r0, #2
 8005704:	e7fc      	b.n	8005700 <HAL_DSI_ConfigCommand+0x5c>
 8005706:	bf00      	nop
 8005708:	fef080ff 	.word	0xfef080ff

0800570c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800570c:	7c03      	ldrb	r3, [r0, #16]
 800570e:	2b01      	cmp	r3, #1
 8005710:	d00b      	beq.n	800572a <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8005712:	6803      	ldr	r3, [r0, #0]
 8005714:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005716:	f022 021f 	bic.w	r2, r2, #31
 800571a:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800571c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800571e:	4311      	orrs	r1, r2
 8005720:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005722:	2300      	movs	r3, #0
 8005724:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005726:	4618      	mov	r0, r3
 8005728:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800572a:	2002      	movs	r0, #2
}
 800572c:	4770      	bx	lr

0800572e <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800572e:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005730:	7c03      	ldrb	r3, [r0, #16]
 8005732:	2b01      	cmp	r3, #1
 8005734:	d035      	beq.n	80057a2 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005736:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800573a:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800573c:	4294      	cmp	r4, r2
 800573e:	bf38      	it	cc
 8005740:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005742:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005746:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800574a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800574e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005752:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005756:	4322      	orrs	r2, r4
 8005758:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800575c:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8005760:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8005764:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8005768:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800576c:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800576e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8005772:	690d      	ldr	r5, [r1, #16]
 8005774:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005778:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800577a:	432a      	orrs	r2, r5
 800577c:	4322      	orrs	r2, r4
 800577e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8005782:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005786:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800578a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800578e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005792:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005796:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800579a:	2300      	movs	r3, #0
 800579c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800579e:	4618      	mov	r0, r3
}
 80057a0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80057a2:	2002      	movs	r0, #2
 80057a4:	e7fc      	b.n	80057a0 <HAL_DSI_ConfigPhyTimer+0x72>
	...

080057a8 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 80057a8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80057aa:	7c03      	ldrb	r3, [r0, #16]
 80057ac:	2b01      	cmp	r3, #1
 80057ae:	d05c      	beq.n	800586a <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80057b0:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80057b2:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80057b4:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80057b6:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80057b8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80057bc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80057be:	689a      	ldr	r2, [r3, #8]
 80057c0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80057c4:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80057c6:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80057c8:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80057ca:	b292      	uxth	r2, r2
 80057cc:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80057ce:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80057d0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80057d4:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80057d6:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80057d8:	4a25      	ldr	r2, [pc, #148]	; (8005870 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80057da:	4014      	ands	r4, r2
 80057dc:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80057de:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80057e0:	432c      	orrs	r4, r5
 80057e2:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80057e4:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80057e6:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80057e8:	4014      	ands	r4, r2
 80057ea:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80057ec:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80057ee:	432c      	orrs	r4, r5
 80057f0:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80057f2:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80057f6:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80057f8:	4014      	ands	r4, r2
 80057fa:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80057fe:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8005802:	432c      	orrs	r4, r5
 8005804:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8005808:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800580c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800580e:	4014      	ands	r4, r2
 8005810:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8005814:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005818:	432c      	orrs	r4, r5
 800581a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800581e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005822:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8005826:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800582a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800582e:	698d      	ldr	r5, [r1, #24]
 8005830:	432c      	orrs	r4, r5
 8005832:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8005836:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800583a:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800583c:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800583e:	4014      	ands	r4, r2
 8005840:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8005844:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8005848:	432c      	orrs	r4, r5
 800584a:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800584e:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8005852:	4022      	ands	r2, r4
 8005854:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8005858:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800585c:	430a      	orrs	r2, r1
 800585e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005862:	2300      	movs	r3, #0
 8005864:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005866:	4618      	mov	r0, r3
}
 8005868:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800586a:	2002      	movs	r0, #2
 800586c:	e7fc      	b.n	8005868 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800586e:	bf00      	nop
 8005870:	ffff0000 	.word	0xffff0000

08005874 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005874:	7c03      	ldrb	r3, [r0, #16]
 8005876:	2b01      	cmp	r3, #1
{
 8005878:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800587a:	d01c      	beq.n	80058b6 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800587c:	6802      	ldr	r2, [r0, #0]
 800587e:	2300      	movs	r3, #0
 8005880:	9300      	str	r3, [sp, #0]
 8005882:	6851      	ldr	r1, [r2, #4]
 8005884:	f041 0101 	orr.w	r1, r1, #1
 8005888:	6051      	str	r1, [r2, #4]
 800588a:	6851      	ldr	r1, [r2, #4]
 800588c:	f001 0101 	and.w	r1, r1, #1
 8005890:	9100      	str	r1, [sp, #0]
 8005892:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005894:	9301      	str	r3, [sp, #4]
 8005896:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800589a:	f041 0108 	orr.w	r1, r1, #8
 800589e:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 80058a2:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80058a6:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80058a8:	f002 0208 	and.w	r2, r2, #8
 80058ac:	9201      	str	r2, [sp, #4]
 80058ae:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 80058b0:	4618      	mov	r0, r3
}
 80058b2:	b002      	add	sp, #8
 80058b4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80058b6:	2002      	movs	r0, #2
 80058b8:	e7fb      	b.n	80058b2 <HAL_DSI_Start+0x3e>

080058ba <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80058ba:	7c03      	ldrb	r3, [r0, #16]
 80058bc:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 80058be:	bf1f      	itttt	ne
 80058c0:	6802      	ldrne	r2, [r0, #0]
 80058c2:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 80058c6:	f043 0304 	orrne.w	r3, r3, #4
 80058ca:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80058ce:	bf1d      	ittte	ne
 80058d0:	2300      	movne	r3, #0
 80058d2:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80058d4:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80058d6:	2002      	moveq	r0, #2
}
 80058d8:	4770      	bx	lr

080058da <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80058da:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80058dc:	7c05      	ldrb	r5, [r0, #16]
 80058de:	2d01      	cmp	r5, #1
{
 80058e0:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80058e2:	d009      	beq.n	80058f8 <HAL_DSI_ShortWrite+0x1e>
 80058e4:	2501      	movs	r5, #1
 80058e6:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80058e8:	9d06      	ldr	r5, [sp, #24]
 80058ea:	9500      	str	r5, [sp, #0]
 80058ec:	f7ff fcac 	bl	8005248 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80058f0:	2300      	movs	r3, #0
 80058f2:	7423      	strb	r3, [r4, #16]

  return status;
}
 80058f4:	b003      	add	sp, #12
 80058f6:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80058f8:	2002      	movs	r0, #2
 80058fa:	e7fb      	b.n	80058f4 <HAL_DSI_ShortWrite+0x1a>

080058fc <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80058fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005900:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8005902:	7c03      	ldrb	r3, [r0, #16]
 8005904:	2b01      	cmp	r3, #1
{
 8005906:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800590a:	4606      	mov	r6, r0
 800590c:	460f      	mov	r7, r1
 800590e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8005910:	d053      	beq.n	80059ba <HAL_DSI_LongWrite+0xbe>
 8005912:	2301      	movs	r3, #1
 8005914:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8005916:	f7ff fa07 	bl	8004d28 <HAL_GetTick>
 800591a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800591c:	6831      	ldr	r1, [r6, #0]
 800591e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8005920:	f013 0a01 	ands.w	sl, r3, #1
 8005924:	d01a      	beq.n	800595c <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8005926:	2c03      	cmp	r4, #3
 8005928:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800592a:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800592e:	bf28      	it	cs
 8005930:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8005932:	4282      	cmp	r2, r0
 8005934:	d11e      	bne.n	8005974 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8005936:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8005938:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800593c:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800593e:	bb1b      	cbnz	r3, 8005988 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8005940:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8005942:	0222      	lsls	r2, r4, #8
 8005944:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8005948:	b292      	uxth	r2, r2
 800594a:	0224      	lsls	r4, r4, #8
 800594c:	4315      	orrs	r5, r2
 800594e:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8005952:	432c      	orrs	r4, r5
 8005954:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8005956:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8005958:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800595a:	e009      	b.n	8005970 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800595c:	f7ff f9e4 	bl	8004d28 <HAL_GetTick>
 8005960:	eba0 000b 	sub.w	r0, r0, fp
 8005964:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005968:	d9d8      	bls.n	800591c <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800596a:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800596e:	2003      	movs	r0, #3
}
 8005970:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8005974:	f818 3002 	ldrb.w	r3, [r8, r2]
 8005978:	3201      	adds	r2, #1
 800597a:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800597e:	fa03 f30c 	lsl.w	r3, r3, ip
 8005982:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8005986:	e7d4      	b.n	8005932 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005988:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800598a:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800598e:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8005990:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005992:	bf28      	it	cs
 8005994:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005998:	f812 8000 	ldrb.w	r8, [r2, r0]
 800599c:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 80059a0:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80059a2:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 80059a6:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80059a8:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 80059ac:	d1f4      	bne.n	8005998 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 80059ae:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 80059b2:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 80059b6:	4472      	add	r2, lr
 80059b8:	e7c1      	b.n	800593e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 80059ba:	2002      	movs	r0, #2
 80059bc:	e7d8      	b.n	8005970 <HAL_DSI_LongWrite+0x74>

080059be <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80059be:	7c03      	ldrb	r3, [r0, #16]
 80059c0:	2b01      	cmp	r3, #1
 80059c2:	d010      	beq.n	80059e6 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 80059c4:	6803      	ldr	r3, [r0, #0]
 80059c6:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80059ca:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80059ce:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 80059d2:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80059d6:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 80059da:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80059de:	2300      	movs	r3, #0
 80059e0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80059e2:	4618      	mov	r0, r3
 80059e4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80059e6:	2002      	movs	r0, #2
}
 80059e8:	4770      	bx	lr
	...

080059ec <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80059ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80059f0:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005bb4 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80059f4:	4a6d      	ldr	r2, [pc, #436]	; (8005bac <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80059f6:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80059f8:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80059fa:	2401      	movs	r4, #1
 80059fc:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80059fe:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8005a02:	43ac      	bics	r4, r5
 8005a04:	f040 80b9 	bne.w	8005b7a <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005a08:	684d      	ldr	r5, [r1, #4]
 8005a0a:	f005 0403 	and.w	r4, r5, #3
 8005a0e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005a12:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005a14:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005a16:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005a1a:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005a1c:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005a20:	d834      	bhi.n	8005a8c <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8005a22:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005a24:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005a28:	68cf      	ldr	r7, [r1, #12]
 8005a2a:	fa07 f708 	lsl.w	r7, r7, r8
 8005a2e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8005a32:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005a34:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005a36:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005a3a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8005a3e:	409f      	lsls	r7, r3
 8005a40:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005a44:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005a46:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005a48:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005a4c:	688f      	ldr	r7, [r1, #8]
 8005a4e:	fa07 f708 	lsl.w	r7, r7, r8
 8005a52:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005a56:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005a58:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005a5a:	d119      	bne.n	8005a90 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005a5c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005a60:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005a64:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005a68:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005a6c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005a70:	f04f 0e0f 	mov.w	lr, #15
 8005a74:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005a78:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005a7c:	690f      	ldr	r7, [r1, #16]
 8005a7e:	fa07 f70b 	lsl.w	r7, r7, fp
 8005a82:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005a86:	f8ca 7020 	str.w	r7, [sl, #32]
 8005a8a:	e001      	b.n	8005a90 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005a8c:	2c03      	cmp	r4, #3
 8005a8e:	d1da      	bne.n	8005a46 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005a90:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005a92:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005a96:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005a98:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005a9a:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8005a9e:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005aa0:	d06b      	beq.n	8005b7a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005aa2:	f04f 0a00 	mov.w	sl, #0
 8005aa6:	f8cd a004 	str.w	sl, [sp, #4]
 8005aaa:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005aae:	4c40      	ldr	r4, [pc, #256]	; (8005bb0 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005ab0:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005ab4:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8005ab8:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8005abc:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8005ac0:	9601      	str	r6, [sp, #4]
 8005ac2:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005ac4:	f023 0603 	bic.w	r6, r3, #3
 8005ac8:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8005acc:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005ad0:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005ad4:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005ad8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005adc:	270f      	movs	r7, #15
 8005ade:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005ae2:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005ae4:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005ae8:	d04e      	beq.n	8005b88 <HAL_GPIO_Init+0x19c>
 8005aea:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005aee:	42a0      	cmp	r0, r4
 8005af0:	d04c      	beq.n	8005b8c <HAL_GPIO_Init+0x1a0>
 8005af2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005af6:	42a0      	cmp	r0, r4
 8005af8:	d04a      	beq.n	8005b90 <HAL_GPIO_Init+0x1a4>
 8005afa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005afe:	42a0      	cmp	r0, r4
 8005b00:	d048      	beq.n	8005b94 <HAL_GPIO_Init+0x1a8>
 8005b02:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b06:	42a0      	cmp	r0, r4
 8005b08:	d046      	beq.n	8005b98 <HAL_GPIO_Init+0x1ac>
 8005b0a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b0e:	42a0      	cmp	r0, r4
 8005b10:	d044      	beq.n	8005b9c <HAL_GPIO_Init+0x1b0>
 8005b12:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b16:	42a0      	cmp	r0, r4
 8005b18:	d042      	beq.n	8005ba0 <HAL_GPIO_Init+0x1b4>
 8005b1a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b1e:	42a0      	cmp	r0, r4
 8005b20:	d040      	beq.n	8005ba4 <HAL_GPIO_Init+0x1b8>
 8005b22:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b26:	42a0      	cmp	r0, r4
 8005b28:	d03e      	beq.n	8005ba8 <HAL_GPIO_Init+0x1bc>
 8005b2a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005b2e:	42a0      	cmp	r0, r4
 8005b30:	bf0c      	ite	eq
 8005b32:	2409      	moveq	r4, #9
 8005b34:	240a      	movne	r4, #10
 8005b36:	fa04 f40e 	lsl.w	r4, r4, lr
 8005b3a:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005b3c:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8005b3e:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8005b40:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005b44:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8005b46:	bf54      	ite	pl
 8005b48:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005b4a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8005b4e:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8005b50:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005b52:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8005b54:	bf54      	ite	pl
 8005b56:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005b58:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8005b5c:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8005b5e:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005b60:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8005b62:	bf54      	ite	pl
 8005b64:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005b66:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8005b6a:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005b6c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005b6e:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8005b70:	bf54      	ite	pl
 8005b72:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005b74:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8005b78:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005b7a:	3301      	adds	r3, #1
 8005b7c:	2b10      	cmp	r3, #16
 8005b7e:	f47f af3b 	bne.w	80059f8 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8005b82:	b003      	add	sp, #12
 8005b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005b88:	4654      	mov	r4, sl
 8005b8a:	e7d4      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005b8c:	2401      	movs	r4, #1
 8005b8e:	e7d2      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005b90:	2402      	movs	r4, #2
 8005b92:	e7d0      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005b94:	2403      	movs	r4, #3
 8005b96:	e7ce      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005b98:	2404      	movs	r4, #4
 8005b9a:	e7cc      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005b9c:	2405      	movs	r4, #5
 8005b9e:	e7ca      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005ba0:	2406      	movs	r4, #6
 8005ba2:	e7c8      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005ba4:	2407      	movs	r4, #7
 8005ba6:	e7c6      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005ba8:	2408      	movs	r4, #8
 8005baa:	e7c4      	b.n	8005b36 <HAL_GPIO_Init+0x14a>
 8005bac:	40013c00 	.word	0x40013c00
 8005bb0:	40020000 	.word	0x40020000
 8005bb4:	40023800 	.word	0x40023800

08005bb8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005bbc:	4c4a      	ldr	r4, [pc, #296]	; (8005ce8 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005bbe:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8005cf0 <HAL_GPIO_DeInit+0x138>
 8005bc2:	f8df a130 	ldr.w	sl, [pc, #304]	; 8005cf4 <HAL_GPIO_DeInit+0x13c>
 8005bc6:	f8df b130 	ldr.w	fp, [pc, #304]	; 8005cf8 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005bca:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8005bcc:	2301      	movs	r3, #1
 8005bce:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8005bd2:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8005bd6:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8005bda:	d16e      	bne.n	8005cba <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005bdc:	f022 0503 	bic.w	r5, r2, #3
 8005be0:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8005be4:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005be8:	4b40      	ldr	r3, [pc, #256]	; (8005cec <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005bea:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8005bee:	f002 0c03 	and.w	ip, r2, #3
 8005bf2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005bf6:	260f      	movs	r6, #15
 8005bf8:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005bfc:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8005bfe:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005c02:	d05f      	beq.n	8005cc4 <HAL_GPIO_DeInit+0x10c>
 8005c04:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005c08:	4298      	cmp	r0, r3
 8005c0a:	d05d      	beq.n	8005cc8 <HAL_GPIO_DeInit+0x110>
 8005c0c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005c10:	4298      	cmp	r0, r3
 8005c12:	d05b      	beq.n	8005ccc <HAL_GPIO_DeInit+0x114>
 8005c14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005c18:	4298      	cmp	r0, r3
 8005c1a:	d059      	beq.n	8005cd0 <HAL_GPIO_DeInit+0x118>
 8005c1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005c20:	4298      	cmp	r0, r3
 8005c22:	d057      	beq.n	8005cd4 <HAL_GPIO_DeInit+0x11c>
 8005c24:	4548      	cmp	r0, r9
 8005c26:	d057      	beq.n	8005cd8 <HAL_GPIO_DeInit+0x120>
 8005c28:	4550      	cmp	r0, sl
 8005c2a:	d057      	beq.n	8005cdc <HAL_GPIO_DeInit+0x124>
 8005c2c:	4558      	cmp	r0, fp
 8005c2e:	d057      	beq.n	8005ce0 <HAL_GPIO_DeInit+0x128>
 8005c30:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005c34:	4298      	cmp	r0, r3
 8005c36:	d055      	beq.n	8005ce4 <HAL_GPIO_DeInit+0x12c>
 8005c38:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005c3c:	4298      	cmp	r0, r3
 8005c3e:	bf0c      	ite	eq
 8005c40:	2309      	moveq	r3, #9
 8005c42:	230a      	movne	r3, #10
 8005c44:	fa03 f30c 	lsl.w	r3, r3, ip
 8005c48:	4543      	cmp	r3, r8
 8005c4a:	d113      	bne.n	8005c74 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005c4c:	6823      	ldr	r3, [r4, #0]
 8005c4e:	ea23 0307 	bic.w	r3, r3, r7
 8005c52:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8005c54:	6863      	ldr	r3, [r4, #4]
 8005c56:	ea23 0307 	bic.w	r3, r3, r7
 8005c5a:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8005c5c:	68e3      	ldr	r3, [r4, #12]
 8005c5e:	ea23 0307 	bic.w	r3, r3, r7
 8005c62:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8005c64:	68a3      	ldr	r3, [r4, #8]
 8005c66:	ea23 0307 	bic.w	r3, r3, r7
 8005c6a:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005c6c:	68ab      	ldr	r3, [r5, #8]
 8005c6e:	ea23 0306 	bic.w	r3, r3, r6
 8005c72:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005c74:	6805      	ldr	r5, [r0, #0]
 8005c76:	2603      	movs	r6, #3
 8005c78:	0053      	lsls	r3, r2, #1
 8005c7a:	fa06 f303 	lsl.w	r3, r6, r3
 8005c7e:	ea25 0503 	bic.w	r5, r5, r3
 8005c82:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005c84:	fa22 f506 	lsr.w	r5, r2, r6
 8005c88:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005c8c:	f002 0c07 	and.w	ip, r2, #7
 8005c90:	6a2e      	ldr	r6, [r5, #32]
 8005c92:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005c96:	270f      	movs	r7, #15
 8005c98:	fa07 f70c 	lsl.w	r7, r7, ip
 8005c9c:	ea26 0707 	bic.w	r7, r6, r7
 8005ca0:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005ca2:	68c5      	ldr	r5, [r0, #12]
 8005ca4:	ea25 0503 	bic.w	r5, r5, r3
 8005ca8:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005caa:	6845      	ldr	r5, [r0, #4]
 8005cac:	ea25 050e 	bic.w	r5, r5, lr
 8005cb0:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005cb2:	6885      	ldr	r5, [r0, #8]
 8005cb4:	ea25 0303 	bic.w	r3, r5, r3
 8005cb8:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005cba:	3201      	adds	r2, #1
 8005cbc:	2a10      	cmp	r2, #16
 8005cbe:	d185      	bne.n	8005bcc <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8005cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005cc4:	2300      	movs	r3, #0
 8005cc6:	e7bd      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005cc8:	2301      	movs	r3, #1
 8005cca:	e7bb      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005ccc:	2302      	movs	r3, #2
 8005cce:	e7b9      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005cd0:	2303      	movs	r3, #3
 8005cd2:	e7b7      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005cd4:	2304      	movs	r3, #4
 8005cd6:	e7b5      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005cd8:	2305      	movs	r3, #5
 8005cda:	e7b3      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005cdc:	2306      	movs	r3, #6
 8005cde:	e7b1      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005ce0:	2307      	movs	r3, #7
 8005ce2:	e7af      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005ce4:	2308      	movs	r3, #8
 8005ce6:	e7ad      	b.n	8005c44 <HAL_GPIO_DeInit+0x8c>
 8005ce8:	40013c00 	.word	0x40013c00
 8005cec:	40020000 	.word	0x40020000
 8005cf0:	40021400 	.word	0x40021400
 8005cf4:	40021800 	.word	0x40021800
 8005cf8:	40021c00 	.word	0x40021c00

08005cfc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005cfc:	6903      	ldr	r3, [r0, #16]
 8005cfe:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005d00:	bf14      	ite	ne
 8005d02:	2001      	movne	r0, #1
 8005d04:	2000      	moveq	r0, #0
 8005d06:	4770      	bx	lr

08005d08 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005d08:	b10a      	cbz	r2, 8005d0e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005d0a:	6181      	str	r1, [r0, #24]
  }
}
 8005d0c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005d0e:	0409      	lsls	r1, r1, #16
 8005d10:	e7fb      	b.n	8005d0a <HAL_GPIO_WritePin+0x2>

08005d12 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8005d12:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005d14:	ea01 0203 	and.w	r2, r1, r3
 8005d18:	ea21 0103 	bic.w	r1, r1, r3
 8005d1c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005d20:	6181      	str	r1, [r0, #24]
}
 8005d22:	4770      	bx	lr

08005d24 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005d24:	6801      	ldr	r1, [r0, #0]
 8005d26:	694b      	ldr	r3, [r1, #20]
 8005d28:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005d2c:	f04f 0200 	mov.w	r2, #0
 8005d30:	d010      	beq.n	8005d54 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005d32:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005d36:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005d38:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005d3a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005d3c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005d40:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005d44:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005d46:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005d4a:	f043 0304 	orr.w	r3, r3, #4
 8005d4e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005d50:	2001      	movs	r0, #1
 8005d52:	4770      	bx	lr
  }
  return HAL_OK;
 8005d54:	4618      	mov	r0, r3
}
 8005d56:	4770      	bx	lr

08005d58 <I2C_WaitOnFlagUntilTimeout>:
{
 8005d58:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005d5c:	4606      	mov	r6, r0
 8005d5e:	460f      	mov	r7, r1
 8005d60:	4691      	mov	r9, r2
 8005d62:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005d64:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005d68:	6833      	ldr	r3, [r6, #0]
 8005d6a:	f1ba 0f01 	cmp.w	sl, #1
 8005d6e:	bf0c      	ite	eq
 8005d70:	695c      	ldreq	r4, [r3, #20]
 8005d72:	699c      	ldrne	r4, [r3, #24]
 8005d74:	ea27 0404 	bic.w	r4, r7, r4
 8005d78:	b2a4      	uxth	r4, r4
 8005d7a:	fab4 f484 	clz	r4, r4
 8005d7e:	0964      	lsrs	r4, r4, #5
 8005d80:	45a1      	cmp	r9, r4
 8005d82:	d001      	beq.n	8005d88 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005d84:	2000      	movs	r0, #0
 8005d86:	e017      	b.n	8005db8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005d88:	1c6a      	adds	r2, r5, #1
 8005d8a:	d0ee      	beq.n	8005d6a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005d8c:	f7fe ffcc 	bl	8004d28 <HAL_GetTick>
 8005d90:	9b08      	ldr	r3, [sp, #32]
 8005d92:	1ac0      	subs	r0, r0, r3
 8005d94:	42a8      	cmp	r0, r5
 8005d96:	d801      	bhi.n	8005d9c <I2C_WaitOnFlagUntilTimeout+0x44>
 8005d98:	2d00      	cmp	r5, #0
 8005d9a:	d1e5      	bne.n	8005d68 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005d9c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005d9e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005da0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005da2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005da6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005daa:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005dac:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005db0:	f042 0220 	orr.w	r2, r2, #32
 8005db4:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005db6:	2001      	movs	r0, #1
}
 8005db8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005dbc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005dbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005dc0:	4604      	mov	r4, r0
 8005dc2:	460f      	mov	r7, r1
 8005dc4:	4616      	mov	r6, r2
 8005dc6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005dc8:	6825      	ldr	r5, [r4, #0]
 8005dca:	6968      	ldr	r0, [r5, #20]
 8005dcc:	ea27 0000 	bic.w	r0, r7, r0
 8005dd0:	b280      	uxth	r0, r0
 8005dd2:	b1b8      	cbz	r0, 8005e04 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005dd4:	696b      	ldr	r3, [r5, #20]
 8005dd6:	055a      	lsls	r2, r3, #21
 8005dd8:	d516      	bpl.n	8005e08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005dda:	682b      	ldr	r3, [r5, #0]
 8005ddc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005de0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005de2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005de6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005de8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005dea:	2300      	movs	r3, #0
 8005dec:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005dee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005df2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005df6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005df8:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005dfc:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005dfe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005e02:	2001      	movs	r0, #1
}
 8005e04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005e08:	1c73      	adds	r3, r6, #1
 8005e0a:	d0de      	beq.n	8005dca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005e0c:	f7fe ff8c 	bl	8004d28 <HAL_GetTick>
 8005e10:	eba0 0008 	sub.w	r0, r0, r8
 8005e14:	42b0      	cmp	r0, r6
 8005e16:	d801      	bhi.n	8005e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005e18:	2e00      	cmp	r6, #0
 8005e1a:	d1d5      	bne.n	8005dc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005e1c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005e1e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005e20:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005e22:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005e26:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005e2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005e2c:	f042 0220 	orr.w	r2, r2, #32
 8005e30:	e7e4      	b.n	8005dfc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005e32 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005e32:	b570      	push	{r4, r5, r6, lr}
 8005e34:	4604      	mov	r4, r0
 8005e36:	460d      	mov	r5, r1
 8005e38:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005e3a:	6821      	ldr	r1, [r4, #0]
 8005e3c:	694b      	ldr	r3, [r1, #20]
 8005e3e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8005e42:	d001      	beq.n	8005e48 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005e44:	2000      	movs	r0, #0
 8005e46:	e010      	b.n	8005e6a <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005e48:	694a      	ldr	r2, [r1, #20]
 8005e4a:	06d2      	lsls	r2, r2, #27
 8005e4c:	d50e      	bpl.n	8005e6c <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005e4e:	f06f 0210 	mvn.w	r2, #16
 8005e52:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005e54:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005e56:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005e58:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005e5c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005e60:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005e62:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8005e64:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8005e68:	2001      	movs	r0, #1
}
 8005e6a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005e6c:	f7fe ff5c 	bl	8004d28 <HAL_GetTick>
 8005e70:	1b80      	subs	r0, r0, r6
 8005e72:	42a8      	cmp	r0, r5
 8005e74:	d801      	bhi.n	8005e7a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005e76:	2d00      	cmp	r5, #0
 8005e78:	d1df      	bne.n	8005e3a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005e7a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8005e7c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005e7e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005e80:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005e84:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005e88:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005e8a:	f042 0220 	orr.w	r2, r2, #32
 8005e8e:	e7e8      	b.n	8005e62 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005e90 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005e90:	b570      	push	{r4, r5, r6, lr}
 8005e92:	4604      	mov	r4, r0
 8005e94:	460d      	mov	r5, r1
 8005e96:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005e98:	6823      	ldr	r3, [r4, #0]
 8005e9a:	695b      	ldr	r3, [r3, #20]
 8005e9c:	075b      	lsls	r3, r3, #29
 8005e9e:	d501      	bpl.n	8005ea4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005ea0:	2000      	movs	r0, #0
}
 8005ea2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005ea4:	4620      	mov	r0, r4
 8005ea6:	f7ff ff3d 	bl	8005d24 <I2C_IsAcknowledgeFailed>
 8005eaa:	b9a8      	cbnz	r0, 8005ed8 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005eac:	1c6a      	adds	r2, r5, #1
 8005eae:	d0f3      	beq.n	8005e98 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005eb0:	f7fe ff3a 	bl	8004d28 <HAL_GetTick>
 8005eb4:	1b80      	subs	r0, r0, r6
 8005eb6:	42a8      	cmp	r0, r5
 8005eb8:	d801      	bhi.n	8005ebe <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005eba:	2d00      	cmp	r5, #0
 8005ebc:	d1ec      	bne.n	8005e98 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005ebe:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005ec0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005ec2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005ec4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005ec8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005ecc:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005ece:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005ed2:	f042 0220 	orr.w	r2, r2, #32
 8005ed6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005ed8:	2001      	movs	r0, #1
 8005eda:	e7e2      	b.n	8005ea2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005edc <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005edc:	b570      	push	{r4, r5, r6, lr}
 8005ede:	4604      	mov	r4, r0
 8005ee0:	460d      	mov	r5, r1
 8005ee2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005ee4:	6823      	ldr	r3, [r4, #0]
 8005ee6:	695b      	ldr	r3, [r3, #20]
 8005ee8:	061b      	lsls	r3, r3, #24
 8005eea:	d501      	bpl.n	8005ef0 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005eec:	2000      	movs	r0, #0
}
 8005eee:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005ef0:	4620      	mov	r0, r4
 8005ef2:	f7ff ff17 	bl	8005d24 <I2C_IsAcknowledgeFailed>
 8005ef6:	b9a8      	cbnz	r0, 8005f24 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005ef8:	1c6a      	adds	r2, r5, #1
 8005efa:	d0f3      	beq.n	8005ee4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005efc:	f7fe ff14 	bl	8004d28 <HAL_GetTick>
 8005f00:	1b80      	subs	r0, r0, r6
 8005f02:	42a8      	cmp	r0, r5
 8005f04:	d801      	bhi.n	8005f0a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005f06:	2d00      	cmp	r5, #0
 8005f08:	d1ec      	bne.n	8005ee4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005f0a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005f0c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005f0e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005f10:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005f14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f18:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005f1a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f1e:	f042 0220 	orr.w	r2, r2, #32
 8005f22:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005f24:	2001      	movs	r0, #1
 8005f26:	e7e2      	b.n	8005eee <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08005f28 <I2C_RequestMemoryWrite>:
{
 8005f28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005f2c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005f2e:	6802      	ldr	r2, [r0, #0]
{
 8005f30:	b085      	sub	sp, #20
 8005f32:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005f36:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005f38:	6813      	ldr	r3, [r2, #0]
 8005f3a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005f3e:	6013      	str	r3, [r2, #0]
{
 8005f40:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005f42:	463b      	mov	r3, r7
 8005f44:	f8cd 8000 	str.w	r8, [sp]
 8005f48:	2200      	movs	r2, #0
 8005f4a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005f4e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005f50:	f7ff ff02 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 8005f54:	6823      	ldr	r3, [r4, #0]
 8005f56:	b138      	cbz	r0, 8005f68 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005f58:	681b      	ldr	r3, [r3, #0]
 8005f5a:	05db      	lsls	r3, r3, #23
 8005f5c:	d502      	bpl.n	8005f64 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005f5e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005f62:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005f64:	2003      	movs	r0, #3
 8005f66:	e00a      	b.n	8005f7e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005f68:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005f6c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005f6e:	4919      	ldr	r1, [pc, #100]	; (8005fd4 <I2C_RequestMemoryWrite+0xac>)
 8005f70:	4643      	mov	r3, r8
 8005f72:	463a      	mov	r2, r7
 8005f74:	4620      	mov	r0, r4
 8005f76:	f7ff ff21 	bl	8005dbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f7a:	b118      	cbz	r0, 8005f84 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005f7c:	2001      	movs	r0, #1
}
 8005f7e:	b005      	add	sp, #20
 8005f80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f84:	6823      	ldr	r3, [r4, #0]
 8005f86:	9003      	str	r0, [sp, #12]
 8005f88:	695a      	ldr	r2, [r3, #20]
 8005f8a:	9203      	str	r2, [sp, #12]
 8005f8c:	699b      	ldr	r3, [r3, #24]
 8005f8e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005f90:	4642      	mov	r2, r8
 8005f92:	4639      	mov	r1, r7
 8005f94:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f96:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005f98:	f7ff ffa0 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 8005f9c:	b140      	cbz	r0, 8005fb0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005f9e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005fa0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005fa2:	bf01      	itttt	eq
 8005fa4:	6822      	ldreq	r2, [r4, #0]
 8005fa6:	6813      	ldreq	r3, [r2, #0]
 8005fa8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005fac:	6013      	streq	r3, [r2, #0]
 8005fae:	e7e5      	b.n	8005f7c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005fb0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005fb4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005fb6:	d102      	bne.n	8005fbe <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005fb8:	b2ed      	uxtb	r5, r5
 8005fba:	611d      	str	r5, [r3, #16]
 8005fbc:	e7df      	b.n	8005f7e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005fbe:	0a2a      	lsrs	r2, r5, #8
 8005fc0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005fc2:	4639      	mov	r1, r7
 8005fc4:	4642      	mov	r2, r8
 8005fc6:	4620      	mov	r0, r4
 8005fc8:	f7ff ff88 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 8005fcc:	2800      	cmp	r0, #0
 8005fce:	d1e6      	bne.n	8005f9e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005fd0:	6823      	ldr	r3, [r4, #0]
 8005fd2:	e7f1      	b.n	8005fb8 <I2C_RequestMemoryWrite+0x90>
 8005fd4:	00010002 	.word	0x00010002

08005fd8 <I2C_RequestMemoryRead>:
{
 8005fd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005fdc:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005fde:	6803      	ldr	r3, [r0, #0]
{
 8005fe0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005fe2:	681a      	ldr	r2, [r3, #0]
 8005fe4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005fe8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005fea:	681a      	ldr	r2, [r3, #0]
{
 8005fec:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005ff0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ff4:	601a      	str	r2, [r3, #0]
{
 8005ff6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005ff8:	463b      	mov	r3, r7
 8005ffa:	f8cd 8000 	str.w	r8, [sp]
 8005ffe:	2200      	movs	r2, #0
 8006000:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006004:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006006:	f7ff fea7 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 800600a:	6823      	ldr	r3, [r4, #0]
 800600c:	b148      	cbz	r0, 8006022 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800600e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006010:	05db      	lsls	r3, r3, #23
 8006012:	d502      	bpl.n	800601a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006014:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006018:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800601a:	2003      	movs	r0, #3
}
 800601c:	b004      	add	sp, #16
 800601e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006022:	fa5f f986 	uxtb.w	r9, r6
 8006026:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800602a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800602c:	492a      	ldr	r1, [pc, #168]	; (80060d8 <I2C_RequestMemoryRead+0x100>)
 800602e:	4643      	mov	r3, r8
 8006030:	463a      	mov	r2, r7
 8006032:	4620      	mov	r0, r4
 8006034:	f7ff fec2 	bl	8005dbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006038:	b108      	cbz	r0, 800603e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800603a:	2001      	movs	r0, #1
 800603c:	e7ee      	b.n	800601c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800603e:	6823      	ldr	r3, [r4, #0]
 8006040:	9003      	str	r0, [sp, #12]
 8006042:	695a      	ldr	r2, [r3, #20]
 8006044:	9203      	str	r2, [sp, #12]
 8006046:	699b      	ldr	r3, [r3, #24]
 8006048:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800604a:	4642      	mov	r2, r8
 800604c:	4639      	mov	r1, r7
 800604e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006050:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006052:	f7ff ff43 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 8006056:	b140      	cbz	r0, 800606a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006058:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800605a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800605c:	bf01      	itttt	eq
 800605e:	6822      	ldreq	r2, [r4, #0]
 8006060:	6813      	ldreq	r3, [r2, #0]
 8006062:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006066:	6013      	streq	r3, [r2, #0]
 8006068:	e7e7      	b.n	800603a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800606a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800606e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006070:	d11a      	bne.n	80060a8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006072:	b2ed      	uxtb	r5, r5
 8006074:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006076:	4642      	mov	r2, r8
 8006078:	4639      	mov	r1, r7
 800607a:	4620      	mov	r0, r4
 800607c:	f7ff ff2e 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 8006080:	2800      	cmp	r0, #0
 8006082:	d1e9      	bne.n	8006058 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006084:	6822      	ldr	r2, [r4, #0]
 8006086:	6813      	ldr	r3, [r2, #0]
 8006088:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800608c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800608e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006092:	4602      	mov	r2, r0
 8006094:	f8cd 8000 	str.w	r8, [sp]
 8006098:	463b      	mov	r3, r7
 800609a:	4620      	mov	r0, r4
 800609c:	f7ff fe5c 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 80060a0:	6822      	ldr	r2, [r4, #0]
 80060a2:	b160      	cbz	r0, 80060be <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80060a4:	6813      	ldr	r3, [r2, #0]
 80060a6:	e7b3      	b.n	8006010 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80060a8:	0a2a      	lsrs	r2, r5, #8
 80060aa:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060ac:	4639      	mov	r1, r7
 80060ae:	4642      	mov	r2, r8
 80060b0:	4620      	mov	r0, r4
 80060b2:	f7ff ff13 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 80060b6:	2800      	cmp	r0, #0
 80060b8:	d1ce      	bne.n	8006058 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80060ba:	6823      	ldr	r3, [r4, #0]
 80060bc:	e7d9      	b.n	8006072 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80060be:	f049 0301 	orr.w	r3, r9, #1
 80060c2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80060c4:	4904      	ldr	r1, [pc, #16]	; (80060d8 <I2C_RequestMemoryRead+0x100>)
 80060c6:	4643      	mov	r3, r8
 80060c8:	463a      	mov	r2, r7
 80060ca:	4620      	mov	r0, r4
 80060cc:	f7ff fe76 	bl	8005dbc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80060d0:	3800      	subs	r0, #0
 80060d2:	bf18      	it	ne
 80060d4:	2001      	movne	r0, #1
 80060d6:	e7a1      	b.n	800601c <I2C_RequestMemoryRead+0x44>
 80060d8:	00010002 	.word	0x00010002

080060dc <HAL_I2C_Init>:
{
 80060dc:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80060de:	4604      	mov	r4, r0
 80060e0:	b908      	cbnz	r0, 80060e6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80060e2:	2001      	movs	r0, #1
}
 80060e4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80060e6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80060ea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80060ee:	b91b      	cbnz	r3, 80060f8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80060f0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80060f4:	f7fb fd28 	bl	8001b48 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80060f8:	2324      	movs	r3, #36	; 0x24
 80060fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80060fe:	6823      	ldr	r3, [r4, #0]
 8006100:	681a      	ldr	r2, [r3, #0]
 8006102:	f022 0201 	bic.w	r2, r2, #1
 8006106:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006108:	681a      	ldr	r2, [r3, #0]
 800610a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800610e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006110:	681a      	ldr	r2, [r3, #0]
 8006112:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006116:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006118:	f001 f814 	bl	8007144 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800611c:	4b3f      	ldr	r3, [pc, #252]	; (800621c <HAL_I2C_Init+0x140>)
 800611e:	6865      	ldr	r5, [r4, #4]
 8006120:	429d      	cmp	r5, r3
 8006122:	bf94      	ite	ls
 8006124:	4b3e      	ldrls	r3, [pc, #248]	; (8006220 <HAL_I2C_Init+0x144>)
 8006126:	4b3f      	ldrhi	r3, [pc, #252]	; (8006224 <HAL_I2C_Init+0x148>)
 8006128:	4298      	cmp	r0, r3
 800612a:	bf8c      	ite	hi
 800612c:	2300      	movhi	r3, #0
 800612e:	2301      	movls	r3, #1
 8006130:	2b00      	cmp	r3, #0
 8006132:	d1d6      	bne.n	80060e2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006134:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006136:	4e39      	ldr	r6, [pc, #228]	; (800621c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006138:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800613a:	493b      	ldr	r1, [pc, #236]	; (8006228 <HAL_I2C_Init+0x14c>)
 800613c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006140:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006144:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006146:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006148:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800614a:	bf88      	it	hi
 800614c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006150:	6a13      	ldr	r3, [r2, #32]
 8006152:	bf88      	it	hi
 8006154:	4371      	mulhi	r1, r6
 8006156:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800615a:	bf84      	itt	hi
 800615c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006160:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006164:	3101      	adds	r1, #1
 8006166:	4319      	orrs	r1, r3
 8006168:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800616a:	69d1      	ldr	r1, [r2, #28]
 800616c:	1e43      	subs	r3, r0, #1
 800616e:	482b      	ldr	r0, [pc, #172]	; (800621c <HAL_I2C_Init+0x140>)
 8006170:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006174:	4285      	cmp	r5, r0
 8006176:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800617a:	d832      	bhi.n	80061e2 <HAL_I2C_Init+0x106>
 800617c:	006d      	lsls	r5, r5, #1
 800617e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006182:	fbb3 f3f5 	udiv	r3, r3, r5
 8006186:	3301      	adds	r3, #1
 8006188:	4203      	tst	r3, r0
 800618a:	d042      	beq.n	8006212 <HAL_I2C_Init+0x136>
 800618c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006190:	430b      	orrs	r3, r1
 8006192:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006194:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006198:	6811      	ldr	r1, [r2, #0]
 800619a:	4303      	orrs	r3, r0
 800619c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80061a0:	430b      	orrs	r3, r1
 80061a2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80061a4:	6891      	ldr	r1, [r2, #8]
 80061a6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80061aa:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80061ae:	4303      	orrs	r3, r0
 80061b0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80061b4:	430b      	orrs	r3, r1
 80061b6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80061b8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80061bc:	68d1      	ldr	r1, [r2, #12]
 80061be:	4303      	orrs	r3, r0
 80061c0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80061c4:	430b      	orrs	r3, r1
 80061c6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80061c8:	6813      	ldr	r3, [r2, #0]
 80061ca:	f043 0301 	orr.w	r3, r3, #1
 80061ce:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80061d0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80061d2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80061d4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80061d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80061da:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80061dc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80061e0:	e780      	b.n	80060e4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80061e2:	68a0      	ldr	r0, [r4, #8]
 80061e4:	b950      	cbnz	r0, 80061fc <HAL_I2C_Init+0x120>
 80061e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80061ea:	fbb3 f3f5 	udiv	r3, r3, r5
 80061ee:	3301      	adds	r3, #1
 80061f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80061f4:	b17b      	cbz	r3, 8006216 <HAL_I2C_Init+0x13a>
 80061f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80061fa:	e7c9      	b.n	8006190 <HAL_I2C_Init+0xb4>
 80061fc:	2019      	movs	r0, #25
 80061fe:	4345      	muls	r5, r0
 8006200:	fbb3 f3f5 	udiv	r3, r3, r5
 8006204:	3301      	adds	r3, #1
 8006206:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800620a:	b123      	cbz	r3, 8006216 <HAL_I2C_Init+0x13a>
 800620c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006210:	e7be      	b.n	8006190 <HAL_I2C_Init+0xb4>
 8006212:	2304      	movs	r3, #4
 8006214:	e7bc      	b.n	8006190 <HAL_I2C_Init+0xb4>
 8006216:	2301      	movs	r3, #1
 8006218:	e7ba      	b.n	8006190 <HAL_I2C_Init+0xb4>
 800621a:	bf00      	nop
 800621c:	000186a0 	.word	0x000186a0
 8006220:	001e847f 	.word	0x001e847f
 8006224:	003d08ff 	.word	0x003d08ff
 8006228:	000f4240 	.word	0x000f4240

0800622c <HAL_I2C_DeInit>:
{
 800622c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800622e:	4604      	mov	r4, r0
 8006230:	b198      	cbz	r0, 800625a <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8006232:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006234:	2324      	movs	r3, #36	; 0x24
 8006236:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800623a:	6813      	ldr	r3, [r2, #0]
 800623c:	f023 0301 	bic.w	r3, r3, #1
 8006240:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8006242:	f7fb fcc5 	bl	8001bd0 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8006246:	2000      	movs	r0, #0
 8006248:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800624a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800624e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006252:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8006254:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8006258:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800625a:	2001      	movs	r0, #1
 800625c:	e7fc      	b.n	8006258 <HAL_I2C_DeInit+0x2c>
	...

08006260 <HAL_I2C_Mem_Write>:
{
 8006260:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006264:	4604      	mov	r4, r0
 8006266:	4699      	mov	r9, r3
 8006268:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800626a:	460f      	mov	r7, r1
 800626c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800626e:	f7fe fd5b 	bl	8004d28 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006272:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006276:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006278:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800627a:	d003      	beq.n	8006284 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800627c:	2002      	movs	r0, #2
}
 800627e:	b003      	add	sp, #12
 8006280:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006284:	9000      	str	r0, [sp, #0]
 8006286:	493c      	ldr	r1, [pc, #240]	; (8006378 <HAL_I2C_Mem_Write+0x118>)
 8006288:	2319      	movs	r3, #25
 800628a:	2201      	movs	r2, #1
 800628c:	4620      	mov	r0, r4
 800628e:	f7ff fd63 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 8006292:	2800      	cmp	r0, #0
 8006294:	d1f2      	bne.n	800627c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006296:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800629a:	2b01      	cmp	r3, #1
 800629c:	d0ee      	beq.n	800627c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800629e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80062a0:	2301      	movs	r3, #1
 80062a2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80062a6:	6803      	ldr	r3, [r0, #0]
 80062a8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80062aa:	bf5e      	ittt	pl
 80062ac:	6803      	ldrpl	r3, [r0, #0]
 80062ae:	f043 0301 	orrpl.w	r3, r3, #1
 80062b2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80062b4:	6803      	ldr	r3, [r0, #0]
 80062b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80062ba:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80062bc:	2321      	movs	r3, #33	; 0x21
 80062be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80062c2:	2340      	movs	r3, #64	; 0x40
 80062c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80062c8:	2300      	movs	r3, #0
 80062ca:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80062cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80062ce:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80062d0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80062d4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80062d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062d8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80062da:	4b28      	ldr	r3, [pc, #160]	; (800637c <HAL_I2C_Mem_Write+0x11c>)
 80062dc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80062de:	e9cd 6500 	strd	r6, r5, [sp]
 80062e2:	464b      	mov	r3, r9
 80062e4:	4642      	mov	r2, r8
 80062e6:	4639      	mov	r1, r7
 80062e8:	4620      	mov	r0, r4
 80062ea:	f7ff fe1d 	bl	8005f28 <I2C_RequestMemoryWrite>
 80062ee:	2800      	cmp	r0, #0
 80062f0:	d02a      	beq.n	8006348 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80062f2:	2001      	movs	r0, #1
 80062f4:	e7c3      	b.n	800627e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80062f6:	f7ff fdf1 	bl	8005edc <I2C_WaitOnTXEFlagUntilTimeout>
 80062fa:	b140      	cbz	r0, 800630e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80062fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80062fe:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006300:	bf01      	itttt	eq
 8006302:	6822      	ldreq	r2, [r4, #0]
 8006304:	6813      	ldreq	r3, [r2, #0]
 8006306:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800630a:	6013      	streq	r3, [r2, #0]
 800630c:	e7f1      	b.n	80062f2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800630e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006310:	6827      	ldr	r7, [r4, #0]
 8006312:	461a      	mov	r2, r3
 8006314:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006318:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800631a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800631c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800631e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006320:	3a01      	subs	r2, #1
 8006322:	b292      	uxth	r2, r2
 8006324:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006326:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006328:	1e48      	subs	r0, r1, #1
 800632a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800632c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800632e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006330:	d50a      	bpl.n	8006348 <HAL_I2C_Mem_Write+0xe8>
 8006332:	b148      	cbz	r0, 8006348 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006334:	785a      	ldrb	r2, [r3, #1]
 8006336:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006338:	3302      	adds	r3, #2
 800633a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800633c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800633e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006340:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006342:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006344:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006346:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006348:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800634a:	462a      	mov	r2, r5
 800634c:	4631      	mov	r1, r6
 800634e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006350:	2b00      	cmp	r3, #0
 8006352:	d1d0      	bne.n	80062f6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006354:	f7ff fd9c 	bl	8005e90 <I2C_WaitOnBTFFlagUntilTimeout>
 8006358:	2800      	cmp	r0, #0
 800635a:	d1cf      	bne.n	80062fc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800635c:	6822      	ldr	r2, [r4, #0]
 800635e:	6813      	ldr	r3, [r2, #0]
 8006360:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006364:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006366:	2320      	movs	r3, #32
 8006368:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800636c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006370:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006374:	e783      	b.n	800627e <HAL_I2C_Mem_Write+0x1e>
 8006376:	bf00      	nop
 8006378:	00100002 	.word	0x00100002
 800637c:	ffff0000 	.word	0xffff0000

08006380 <HAL_I2C_Mem_Read>:
{
 8006380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006384:	4604      	mov	r4, r0
 8006386:	b087      	sub	sp, #28
 8006388:	4699      	mov	r9, r3
 800638a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800638c:	460d      	mov	r5, r1
 800638e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006390:	f7fe fcca 	bl	8004d28 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006394:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006398:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800639a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800639c:	d004      	beq.n	80063a8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800639e:	2502      	movs	r5, #2
}
 80063a0:	4628      	mov	r0, r5
 80063a2:	b007      	add	sp, #28
 80063a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80063a8:	9000      	str	r0, [sp, #0]
 80063aa:	4976      	ldr	r1, [pc, #472]	; (8006584 <HAL_I2C_Mem_Read+0x204>)
 80063ac:	2319      	movs	r3, #25
 80063ae:	2201      	movs	r2, #1
 80063b0:	4620      	mov	r0, r4
 80063b2:	f7ff fcd1 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 80063b6:	2800      	cmp	r0, #0
 80063b8:	d1f1      	bne.n	800639e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80063ba:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80063be:	2b01      	cmp	r3, #1
 80063c0:	d0ed      	beq.n	800639e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80063c2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80063c4:	2301      	movs	r3, #1
 80063c6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80063ca:	6803      	ldr	r3, [r0, #0]
 80063cc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80063ce:	bf5e      	ittt	pl
 80063d0:	6803      	ldrpl	r3, [r0, #0]
 80063d2:	f043 0301 	orrpl.w	r3, r3, #1
 80063d6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80063d8:	6803      	ldr	r3, [r0, #0]
 80063da:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80063de:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80063e0:	2322      	movs	r3, #34	; 0x22
 80063e2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80063e6:	2340      	movs	r3, #64	; 0x40
 80063e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80063ec:	2300      	movs	r3, #0
 80063ee:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80063f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80063f2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80063f4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80063f8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80063fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80063fc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80063fe:	4b62      	ldr	r3, [pc, #392]	; (8006588 <HAL_I2C_Mem_Read+0x208>)
 8006400:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006402:	4629      	mov	r1, r5
 8006404:	e9cd 7600 	strd	r7, r6, [sp]
 8006408:	464b      	mov	r3, r9
 800640a:	4642      	mov	r2, r8
 800640c:	4620      	mov	r0, r4
 800640e:	f7ff fde3 	bl	8005fd8 <I2C_RequestMemoryRead>
 8006412:	4605      	mov	r5, r0
 8006414:	b108      	cbz	r0, 800641a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006416:	2501      	movs	r5, #1
 8006418:	e7c2      	b.n	80063a0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800641a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800641c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800641e:	b9b2      	cbnz	r2, 800644e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006420:	9002      	str	r0, [sp, #8]
 8006422:	695a      	ldr	r2, [r3, #20]
 8006424:	9202      	str	r2, [sp, #8]
 8006426:	699a      	ldr	r2, [r3, #24]
 8006428:	9202      	str	r2, [sp, #8]
 800642a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800642c:	681a      	ldr	r2, [r3, #0]
 800642e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006432:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006434:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800658c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006438:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800643a:	2b00      	cmp	r3, #0
 800643c:	d12c      	bne.n	8006498 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800643e:	2220      	movs	r2, #32
 8006440:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006444:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006448:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800644c:	e7a8      	b.n	80063a0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800644e:	2a01      	cmp	r2, #1
 8006450:	d10a      	bne.n	8006468 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006452:	681a      	ldr	r2, [r3, #0]
 8006454:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006458:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800645a:	9003      	str	r0, [sp, #12]
 800645c:	695a      	ldr	r2, [r3, #20]
 800645e:	9203      	str	r2, [sp, #12]
 8006460:	699a      	ldr	r2, [r3, #24]
 8006462:	9203      	str	r2, [sp, #12]
 8006464:	9a03      	ldr	r2, [sp, #12]
 8006466:	e7e1      	b.n	800642c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006468:	2a02      	cmp	r2, #2
 800646a:	d10e      	bne.n	800648a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800646c:	681a      	ldr	r2, [r3, #0]
 800646e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006472:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006474:	681a      	ldr	r2, [r3, #0]
 8006476:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800647a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800647c:	9004      	str	r0, [sp, #16]
 800647e:	695a      	ldr	r2, [r3, #20]
 8006480:	9204      	str	r2, [sp, #16]
 8006482:	699b      	ldr	r3, [r3, #24]
 8006484:	9304      	str	r3, [sp, #16]
 8006486:	9b04      	ldr	r3, [sp, #16]
 8006488:	e7d4      	b.n	8006434 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800648a:	9005      	str	r0, [sp, #20]
 800648c:	695a      	ldr	r2, [r3, #20]
 800648e:	9205      	str	r2, [sp, #20]
 8006490:	699b      	ldr	r3, [r3, #24]
 8006492:	9305      	str	r3, [sp, #20]
 8006494:	9b05      	ldr	r3, [sp, #20]
 8006496:	e7cd      	b.n	8006434 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006498:	2b03      	cmp	r3, #3
 800649a:	d856      	bhi.n	800654a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800649c:	2b01      	cmp	r3, #1
 800649e:	d115      	bne.n	80064cc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80064a0:	4632      	mov	r2, r6
 80064a2:	4639      	mov	r1, r7
 80064a4:	4620      	mov	r0, r4
 80064a6:	f7ff fcc4 	bl	8005e32 <I2C_WaitOnRXNEFlagUntilTimeout>
 80064aa:	2800      	cmp	r0, #0
 80064ac:	d1b3      	bne.n	8006416 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80064ae:	6823      	ldr	r3, [r4, #0]
 80064b0:	691a      	ldr	r2, [r3, #16]
 80064b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064b4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80064b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064b8:	3301      	adds	r3, #1
 80064ba:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80064bc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80064be:	3b01      	subs	r3, #1
 80064c0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80064c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80064c4:	3b01      	subs	r3, #1
 80064c6:	b29b      	uxth	r3, r3
 80064c8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80064ca:	e7b5      	b.n	8006438 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80064cc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80064ce:	9600      	str	r6, [sp, #0]
 80064d0:	463b      	mov	r3, r7
 80064d2:	f04f 0200 	mov.w	r2, #0
 80064d6:	4641      	mov	r1, r8
 80064d8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80064da:	d119      	bne.n	8006510 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80064dc:	f7ff fc3c 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 80064e0:	2800      	cmp	r0, #0
 80064e2:	d198      	bne.n	8006416 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80064e4:	6823      	ldr	r3, [r4, #0]
 80064e6:	681a      	ldr	r2, [r3, #0]
 80064e8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80064ec:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80064ee:	691a      	ldr	r2, [r3, #16]
 80064f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064f2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80064f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80064f6:	1c53      	adds	r3, r2, #1
 80064f8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80064fa:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80064fc:	3b01      	subs	r3, #1
 80064fe:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006500:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006502:	3b01      	subs	r3, #1
 8006504:	b29b      	uxth	r3, r3
 8006506:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006508:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800650a:	691b      	ldr	r3, [r3, #16]
 800650c:	7053      	strb	r3, [r2, #1]
 800650e:	e7d2      	b.n	80064b6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006510:	f7ff fc22 	bl	8005d58 <I2C_WaitOnFlagUntilTimeout>
 8006514:	2800      	cmp	r0, #0
 8006516:	f47f af7e 	bne.w	8006416 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800651a:	6823      	ldr	r3, [r4, #0]
 800651c:	681a      	ldr	r2, [r3, #0]
 800651e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006522:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006524:	691a      	ldr	r2, [r3, #16]
 8006526:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006528:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800652a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800652c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800652e:	3301      	adds	r3, #1
 8006530:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006532:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006534:	3b01      	subs	r3, #1
 8006536:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006538:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800653a:	3b01      	subs	r3, #1
 800653c:	b29b      	uxth	r3, r3
 800653e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006540:	4602      	mov	r2, r0
 8006542:	463b      	mov	r3, r7
 8006544:	4641      	mov	r1, r8
 8006546:	4620      	mov	r0, r4
 8006548:	e7c8      	b.n	80064dc <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800654a:	4632      	mov	r2, r6
 800654c:	4639      	mov	r1, r7
 800654e:	4620      	mov	r0, r4
 8006550:	f7ff fc6f 	bl	8005e32 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006554:	2800      	cmp	r0, #0
 8006556:	f47f af5e 	bne.w	8006416 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800655a:	6823      	ldr	r3, [r4, #0]
 800655c:	691a      	ldr	r2, [r3, #16]
 800655e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006560:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006562:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006564:	1c53      	adds	r3, r2, #1
 8006566:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006568:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800656a:	3b01      	subs	r3, #1
 800656c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800656e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006570:	3b01      	subs	r3, #1
 8006572:	b29b      	uxth	r3, r3
 8006574:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006576:	6823      	ldr	r3, [r4, #0]
 8006578:	6959      	ldr	r1, [r3, #20]
 800657a:	0749      	lsls	r1, r1, #29
 800657c:	f57f af5c 	bpl.w	8006438 <HAL_I2C_Mem_Read+0xb8>
 8006580:	e7c3      	b.n	800650a <HAL_I2C_Mem_Read+0x18a>
 8006582:	bf00      	nop
 8006584:	00100002 	.word	0x00100002
 8006588:	ffff0000 	.word	0xffff0000
 800658c:	00010004 	.word	0x00010004

08006590 <HAL_I2C_GetState>:
  return hi2c->State;
 8006590:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8006594:	4770      	bx	lr

08006596 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006596:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006598:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800659c:	01d2      	lsls	r2, r2, #7
 800659e:	3284      	adds	r2, #132	; 0x84
 80065a0:	1883      	adds	r3, r0, r2
{
 80065a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80065a6:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80065a8:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80065aa:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80065ac:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80065b0:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80065b4:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80065b6:	68c5      	ldr	r5, [r0, #12]
 80065b8:	f10c 0701 	add.w	r7, ip, #1
 80065bc:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80065c0:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80065c4:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80065c6:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80065c8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80065cc:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80065ce:	68c5      	ldr	r5, [r0, #12]
 80065d0:	68ce      	ldr	r6, [r1, #12]
 80065d2:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80065d6:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80065d8:	689d      	ldr	r5, [r3, #8]
 80065da:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80065de:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80065e0:	68c7      	ldr	r7, [r0, #12]
 80065e2:	688d      	ldr	r5, [r1, #8]
 80065e4:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80065e8:	3501      	adds	r5, #1
 80065ea:	443d      	add	r5, r7
 80065ec:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80065f0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80065f2:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80065f4:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80065f6:	f025 0507 	bic.w	r5, r5, #7
 80065fa:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80065fc:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006600:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006602:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006604:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006608:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800660c:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006610:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006614:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006618:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800661c:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006620:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006622:	695d      	ldr	r5, [r3, #20]
 8006624:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006628:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800662a:	694d      	ldr	r5, [r1, #20]
 800662c:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800662e:	69dd      	ldr	r5, [r3, #28]
 8006630:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006634:	f025 0507 	bic.w	r5, r5, #7
 8006638:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800663a:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800663e:	433d      	orrs	r5, r7
 8006640:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006642:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006644:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006646:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800664a:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800664c:	b31e      	cbz	r6, 8006696 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800664e:	2e01      	cmp	r6, #1
 8006650:	d023      	beq.n	800669a <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006652:	1eb5      	subs	r5, r6, #2
 8006654:	2d02      	cmp	r5, #2
 8006656:	d922      	bls.n	800669e <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006658:	2e07      	cmp	r6, #7
 800665a:	bf0c      	ite	eq
 800665c:	2502      	moveq	r5, #2
 800665e:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006660:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006662:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006666:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006668:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800666c:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800666e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006670:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006672:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006674:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006676:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800667a:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800667c:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800667e:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006682:	f024 0407 	bic.w	r4, r4, #7
 8006686:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006688:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800668a:	5883      	ldr	r3, [r0, r2]
 800668c:	f043 0301 	orr.w	r3, r3, #1
 8006690:	5083      	str	r3, [r0, r2]
}
 8006692:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006696:	2504      	movs	r5, #4
 8006698:	e7e2      	b.n	8006660 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800669a:	2503      	movs	r5, #3
 800669c:	e7e0      	b.n	8006660 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800669e:	2502      	movs	r5, #2
 80066a0:	e7de      	b.n	8006660 <LTDC_SetConfig+0xca>
	...

080066a4 <HAL_LTDC_Init>:
{
 80066a4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80066a6:	4604      	mov	r4, r0
 80066a8:	2800      	cmp	r0, #0
 80066aa:	d063      	beq.n	8006774 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80066ac:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80066b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80066b4:	b91b      	cbnz	r3, 80066be <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80066b6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80066ba:	f7fb faa7 	bl	8001c0c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80066be:	2302      	movs	r3, #2
 80066c0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80066c4:	6823      	ldr	r3, [r4, #0]
 80066c6:	699a      	ldr	r2, [r3, #24]
 80066c8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80066cc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80066ce:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80066d2:	4302      	orrs	r2, r0
 80066d4:	68e0      	ldr	r0, [r4, #12]
 80066d6:	6999      	ldr	r1, [r3, #24]
 80066d8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80066da:	6920      	ldr	r0, [r4, #16]
 80066dc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80066de:	430a      	orrs	r2, r1
 80066e0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80066e2:	689a      	ldr	r2, [r3, #8]
 80066e4:	4924      	ldr	r1, [pc, #144]	; (8006778 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80066e6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80066e8:	400a      	ands	r2, r1
 80066ea:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80066ec:	689a      	ldr	r2, [r3, #8]
 80066ee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80066f2:	69a0      	ldr	r0, [r4, #24]
 80066f4:	4302      	orrs	r2, r0
 80066f6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80066f8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80066fa:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80066fc:	400a      	ands	r2, r1
 80066fe:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006700:	68da      	ldr	r2, [r3, #12]
 8006702:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006706:	6a20      	ldr	r0, [r4, #32]
 8006708:	4302      	orrs	r2, r0
 800670a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800670c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800670e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006710:	400a      	ands	r2, r1
 8006712:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006714:	691a      	ldr	r2, [r3, #16]
 8006716:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800671a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800671c:	4302      	orrs	r2, r0
 800671e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006720:	695a      	ldr	r2, [r3, #20]
 8006722:	4011      	ands	r1, r2
 8006724:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006726:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006728:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800672a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800672e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006730:	430a      	orrs	r2, r1
 8006732:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006734:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006736:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800673a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800673e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8006742:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006744:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006746:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800674a:	430a      	orrs	r2, r1
 800674c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006750:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006754:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006756:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006758:	f042 0206 	orr.w	r2, r2, #6
 800675c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800675e:	699a      	ldr	r2, [r3, #24]
 8006760:	f042 0201 	orr.w	r2, r2, #1
 8006764:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006766:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006768:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800676a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800676e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8006772:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006774:	2001      	movs	r0, #1
 8006776:	e7fc      	b.n	8006772 <HAL_LTDC_Init+0xce>
 8006778:	f000f800 	.word	0xf000f800

0800677c <HAL_LTDC_ErrorCallback>:
 800677c:	4770      	bx	lr

0800677e <HAL_LTDC_LineEventCallback>:
 800677e:	4770      	bx	lr

08006780 <HAL_LTDC_ReloadEventCallback>:
 8006780:	4770      	bx	lr

08006782 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006782:	6803      	ldr	r3, [r0, #0]
{
 8006784:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006786:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006788:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800678a:	0772      	lsls	r2, r6, #29
{
 800678c:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800678e:	d514      	bpl.n	80067ba <HAL_LTDC_IRQHandler+0x38>
 8006790:	0769      	lsls	r1, r5, #29
 8006792:	d512      	bpl.n	80067ba <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006794:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006796:	f022 0204 	bic.w	r2, r2, #4
 800679a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800679c:	2204      	movs	r2, #4
 800679e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80067a0:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80067a4:	f043 0301 	orr.w	r3, r3, #1
 80067a8:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80067ac:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80067ae:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80067b2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80067b6:	f7ff ffe1 	bl	800677c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80067ba:	07b2      	lsls	r2, r6, #30
 80067bc:	d516      	bpl.n	80067ec <HAL_LTDC_IRQHandler+0x6a>
 80067be:	07ab      	lsls	r3, r5, #30
 80067c0:	d514      	bpl.n	80067ec <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80067c2:	6823      	ldr	r3, [r4, #0]
 80067c4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80067c6:	f022 0202 	bic.w	r2, r2, #2
 80067ca:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80067cc:	2202      	movs	r2, #2
 80067ce:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80067d0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80067d4:	4313      	orrs	r3, r2
 80067d6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80067da:	2304      	movs	r3, #4
 80067dc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80067e0:	2300      	movs	r3, #0
 80067e2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80067e6:	4620      	mov	r0, r4
 80067e8:	f7ff ffc8 	bl	800677c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80067ec:	07f0      	lsls	r0, r6, #31
 80067ee:	d510      	bpl.n	8006812 <HAL_LTDC_IRQHandler+0x90>
 80067f0:	07e9      	lsls	r1, r5, #31
 80067f2:	d50e      	bpl.n	8006812 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80067f4:	6823      	ldr	r3, [r4, #0]
 80067f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80067f8:	f022 0201 	bic.w	r2, r2, #1
 80067fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80067fe:	2201      	movs	r2, #1
 8006800:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006802:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006804:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006808:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800680c:	4620      	mov	r0, r4
 800680e:	f7ff ffb6 	bl	800677e <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006812:	0732      	lsls	r2, r6, #28
 8006814:	d511      	bpl.n	800683a <HAL_LTDC_IRQHandler+0xb8>
 8006816:	072b      	lsls	r3, r5, #28
 8006818:	d50f      	bpl.n	800683a <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800681a:	6823      	ldr	r3, [r4, #0]
 800681c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800681e:	f022 0208 	bic.w	r2, r2, #8
 8006822:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006824:	2208      	movs	r2, #8
 8006826:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006828:	2301      	movs	r3, #1
 800682a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800682e:	2300      	movs	r3, #0
 8006830:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006834:	4620      	mov	r0, r4
 8006836:	f7ff ffa3 	bl	8006780 <HAL_LTDC_ReloadEventCallback>
}
 800683a:	bd70      	pop	{r4, r5, r6, pc}

0800683c <HAL_LTDC_ConfigLayer>:
{
 800683c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006840:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006844:	2b01      	cmp	r3, #1
{
 8006846:	4606      	mov	r6, r0
 8006848:	460f      	mov	r7, r1
 800684a:	4694      	mov	ip, r2
 800684c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8006850:	d01f      	beq.n	8006892 <HAL_LTDC_ConfigLayer+0x56>
 8006852:	f04f 0801 	mov.w	r8, #1
 8006856:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800685a:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800685e:	2434      	movs	r4, #52	; 0x34
 8006860:	460d      	mov	r5, r1
 8006862:	fb04 6402 	mla	r4, r4, r2, r6
 8006866:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006868:	3438      	adds	r4, #56	; 0x38
 800686a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800686c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800686e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006870:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006872:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006874:	682b      	ldr	r3, [r5, #0]
 8006876:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006878:	4630      	mov	r0, r6
 800687a:	4662      	mov	r2, ip
 800687c:	4639      	mov	r1, r7
 800687e:	f7ff fe8a 	bl	8006596 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006882:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006884:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006886:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800688a:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800688e:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006892:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006898 <HAL_LTDC_SetPitch>:
{
 8006898:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800689a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800689e:	2b01      	cmp	r3, #1
 80068a0:	f04f 0302 	mov.w	r3, #2
 80068a4:	d02c      	beq.n	8006900 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80068a6:	2434      	movs	r4, #52	; 0x34
 80068a8:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80068ac:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80068b0:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80068b2:	b33c      	cbz	r4, 8006904 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80068b4:	2c01      	cmp	r4, #1
 80068b6:	d027      	beq.n	8006908 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80068b8:	1ea5      	subs	r5, r4, #2
 80068ba:	429d      	cmp	r5, r3
 80068bc:	d902      	bls.n	80068c4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 80068be:	2c07      	cmp	r4, #7
 80068c0:	bf18      	it	ne
 80068c2:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80068c4:	6804      	ldr	r4, [r0, #0]
 80068c6:	01d2      	lsls	r2, r2, #7
 80068c8:	3284      	adds	r2, #132	; 0x84
 80068ca:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80068cc:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80068ce:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80068d0:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80068d4:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80068d8:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80068da:	4c0c      	ldr	r4, [pc, #48]	; (800690c <HAL_LTDC_SetPitch+0x74>)
 80068dc:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80068de:	f045 0501 	orr.w	r5, r5, #1
 80068e2:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80068e4:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80068e6:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80068ea:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80068ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80068ee:	f043 0301 	orr.w	r3, r3, #1
 80068f2:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80068f4:	2301      	movs	r3, #1
 80068f6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80068fa:	2300      	movs	r3, #0
 80068fc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8006900:	4618      	mov	r0, r3
 8006902:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8006904:	2304      	movs	r3, #4
 8006906:	e7dd      	b.n	80068c4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8006908:	2303      	movs	r3, #3
 800690a:	e7db      	b.n	80068c4 <HAL_LTDC_SetPitch+0x2c>
 800690c:	40016800 	.word	0x40016800

08006910 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8006910:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8006912:	2300      	movs	r3, #0
 8006914:	9301      	str	r3, [sp, #4]
 8006916:	4b18      	ldr	r3, [pc, #96]	; (8006978 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006918:	4d18      	ldr	r5, [pc, #96]	; (800697c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800691a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800691c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006920:	641a      	str	r2, [r3, #64]	; 0x40
 8006922:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006924:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006928:	9301      	str	r3, [sp, #4]
 800692a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800692c:	4b14      	ldr	r3, [pc, #80]	; (8006980 <HAL_PWREx_EnableOverDrive+0x70>)
 800692e:	2201      	movs	r2, #1
 8006930:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 8006932:	f7fe f9f9 	bl	8004d28 <HAL_GetTick>
 8006936:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006938:	686b      	ldr	r3, [r5, #4]
 800693a:	03da      	lsls	r2, r3, #15
 800693c:	d50b      	bpl.n	8006956 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800693e:	4b10      	ldr	r3, [pc, #64]	; (8006980 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006940:	4d0e      	ldr	r5, [pc, #56]	; (800697c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8006942:	2201      	movs	r2, #1
 8006944:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8006946:	f7fe f9ef 	bl	8004d28 <HAL_GetTick>
 800694a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800694c:	686b      	ldr	r3, [r5, #4]
 800694e:	039b      	lsls	r3, r3, #14
 8006950:	d50a      	bpl.n	8006968 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8006952:	2000      	movs	r0, #0
 8006954:	e006      	b.n	8006964 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006956:	f7fe f9e7 	bl	8004d28 <HAL_GetTick>
 800695a:	1b00      	subs	r0, r0, r4
 800695c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006960:	d9ea      	bls.n	8006938 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8006962:	2003      	movs	r0, #3
}
 8006964:	b003      	add	sp, #12
 8006966:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006968:	f7fe f9de 	bl	8004d28 <HAL_GetTick>
 800696c:	1b00      	subs	r0, r0, r4
 800696e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006972:	d9eb      	bls.n	800694c <HAL_PWREx_EnableOverDrive+0x3c>
 8006974:	e7f5      	b.n	8006962 <HAL_PWREx_EnableOverDrive+0x52>
 8006976:	bf00      	nop
 8006978:	40023800 	.word	0x40023800
 800697c:	40007000 	.word	0x40007000
 8006980:	420e0000 	.word	0x420e0000

08006984 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006984:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006988:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800698a:	b13e      	cbz	r6, 800699c <QSPI_Config+0x18>
 800698c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006990:	bf1f      	itttt	ne
 8006992:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8006994:	6804      	ldrne	r4, [r0, #0]
 8006996:	f103 33ff 	addne.w	r3, r3, #4294967295
 800699a:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800699c:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80069a0:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 80069a4:	f1b9 0f00 	cmp.w	r9, #0
 80069a8:	d04f      	beq.n	8006a4a <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069aa:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80069ac:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069ae:	f8d1 a000 	ldr.w	sl, [r1]
 80069b2:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 80069b6:	ea46 0909 	orr.w	r9, r6, r9
 80069ba:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 80069be:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 80069c2:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80069c6:	b335      	cbz	r5, 8006a16 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80069c8:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069ca:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80069cc:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80069ce:	ea49 0505 	orr.w	r5, r9, r5
 80069d2:	b19f      	cbz	r7, 80069fc <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069d4:	ea4a 0307 	orr.w	r3, sl, r7
 80069d8:	4323      	orrs	r3, r4
 80069da:	ea43 0308 	orr.w	r3, r3, r8
 80069de:	68cc      	ldr	r4, [r1, #12]
 80069e0:	ea43 030e 	orr.w	r3, r3, lr
 80069e4:	4333      	orrs	r3, r6
 80069e6:	4323      	orrs	r3, r4
 80069e8:	ea43 030c 	orr.w	r3, r3, ip
 80069ec:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80069ee:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069f2:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80069f4:	d00d      	beq.n	8006a12 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80069f6:	684b      	ldr	r3, [r1, #4]
 80069f8:	6183      	str	r3, [r0, #24]
 80069fa:	e00a      	b.n	8006a12 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80069fc:	ea4a 0304 	orr.w	r3, sl, r4
 8006a00:	ea43 0308 	orr.w	r3, r3, r8
 8006a04:	ea43 030e 	orr.w	r3, r3, lr
 8006a08:	4333      	orrs	r3, r6
 8006a0a:	ea43 030c 	orr.w	r3, r3, ip
 8006a0e:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a10:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8006a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006a16:	b16f      	cbz	r7, 8006a34 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a18:	ea4a 0307 	orr.w	r3, sl, r7
 8006a1c:	4323      	orrs	r3, r4
 8006a1e:	ea43 0308 	orr.w	r3, r3, r8
 8006a22:	68cc      	ldr	r4, [r1, #12]
 8006a24:	ea43 030e 	orr.w	r3, r3, lr
 8006a28:	4323      	orrs	r3, r4
 8006a2a:	ea43 030c 	orr.w	r3, r3, ip
 8006a2e:	ea43 0309 	orr.w	r3, r3, r9
 8006a32:	e7dc      	b.n	80069ee <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a34:	ea4a 0304 	orr.w	r3, sl, r4
 8006a38:	ea43 0308 	orr.w	r3, r3, r8
 8006a3c:	ea43 030e 	orr.w	r3, r3, lr
 8006a40:	ea43 030c 	orr.w	r3, r3, ip
 8006a44:	ea43 0309 	orr.w	r3, r3, r9
 8006a48:	e7e2      	b.n	8006a10 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006a4a:	b345      	cbz	r5, 8006a9e <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006a4c:	6804      	ldr	r4, [r0, #0]
 8006a4e:	688b      	ldr	r3, [r1, #8]
 8006a50:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006a52:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a56:	694e      	ldr	r6, [r1, #20]
 8006a58:	6908      	ldr	r0, [r1, #16]
 8006a5a:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8006a5e:	ea43 0502 	orr.w	r5, r3, r2
 8006a62:	04b6      	lsls	r6, r6, #18
 8006a64:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006a68:	b187      	cbz	r7, 8006a8c <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a6a:	4338      	orrs	r0, r7
 8006a6c:	ea40 0008 	orr.w	r0, r0, r8
 8006a70:	4303      	orrs	r3, r0
 8006a72:	68c8      	ldr	r0, [r1, #12]
 8006a74:	ea43 030c 	orr.w	r3, r3, ip
 8006a78:	4303      	orrs	r3, r0
 8006a7a:	4333      	orrs	r3, r6
 8006a7c:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006a7e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a82:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006a84:	d0c5      	beq.n	8006a12 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006a86:	684b      	ldr	r3, [r1, #4]
 8006a88:	61a3      	str	r3, [r4, #24]
 8006a8a:	e7c2      	b.n	8006a12 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006a8c:	ea40 0008 	orr.w	r0, r0, r8
 8006a90:	4303      	orrs	r3, r0
 8006a92:	ea43 030c 	orr.w	r3, r3, ip
 8006a96:	4333      	orrs	r3, r6
 8006a98:	432b      	orrs	r3, r5
 8006a9a:	6163      	str	r3, [r4, #20]
 8006a9c:	e7b9      	b.n	8006a12 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006a9e:	b17f      	cbz	r7, 8006ac0 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006aa0:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8006aa2:	6800      	ldr	r0, [r0, #0]
 8006aa4:	ea46 0307 	orr.w	r3, r6, r7
 8006aa8:	4313      	orrs	r3, r2
 8006aaa:	4323      	orrs	r3, r4
 8006aac:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8006aae:	4323      	orrs	r3, r4
 8006ab0:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8006ab2:	4323      	orrs	r3, r4
 8006ab4:	68cc      	ldr	r4, [r1, #12]
 8006ab6:	4323      	orrs	r3, r4
 8006ab8:	694c      	ldr	r4, [r1, #20]
 8006aba:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8006abe:	e796      	b.n	80069ee <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006ac0:	2e00      	cmp	r6, #0
 8006ac2:	d0a6      	beq.n	8006a12 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006ac4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8006ac6:	6800      	ldr	r0, [r0, #0]
 8006ac8:	4333      	orrs	r3, r6
 8006aca:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8006acc:	431a      	orrs	r2, r3
 8006ace:	4332      	orrs	r2, r6
 8006ad0:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8006ad2:	694b      	ldr	r3, [r1, #20]
 8006ad4:	4332      	orrs	r2, r6
 8006ad6:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8006ada:	6142      	str	r2, [r0, #20]
}
 8006adc:	e799      	b.n	8006a12 <QSPI_Config+0x8e>

08006ade <QSPI_WaitFlagStateUntilTimeout>:
{
 8006ade:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ae2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006ae6:	4604      	mov	r4, r0
 8006ae8:	460e      	mov	r6, r1
 8006aea:	4615      	mov	r5, r2
 8006aec:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006aee:	6822      	ldr	r2, [r4, #0]
 8006af0:	6893      	ldr	r3, [r2, #8]
 8006af2:	4233      	tst	r3, r6
 8006af4:	bf14      	ite	ne
 8006af6:	2301      	movne	r3, #1
 8006af8:	2300      	moveq	r3, #0
 8006afa:	42ab      	cmp	r3, r5
 8006afc:	d101      	bne.n	8006b02 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006afe:	2000      	movs	r0, #0
 8006b00:	e012      	b.n	8006b28 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8006b02:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006b06:	d0f3      	beq.n	8006af0 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006b08:	f7fe f90e 	bl	8004d28 <HAL_GetTick>
 8006b0c:	1bc0      	subs	r0, r0, r7
 8006b0e:	4540      	cmp	r0, r8
 8006b10:	d802      	bhi.n	8006b18 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8006b12:	f1b8 0f00 	cmp.w	r8, #0
 8006b16:	d1ea      	bne.n	8006aee <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006b18:	2304      	movs	r3, #4
 8006b1a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006b1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006b20:	f043 0301 	orr.w	r3, r3, #1
 8006b24:	6463      	str	r3, [r4, #68]	; 0x44
 8006b26:	2001      	movs	r0, #1
}
 8006b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006b2c <HAL_QSPI_Init>:
{
 8006b2c:	b530      	push	{r4, r5, lr}
 8006b2e:	b085      	sub	sp, #20
 8006b30:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006b32:	f7fe f8f9 	bl	8004d28 <HAL_GetTick>
 8006b36:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8006b38:	2c00      	cmp	r4, #0
 8006b3a:	d047      	beq.n	8006bcc <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006b3c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006b40:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8006b44:	b94a      	cbnz	r2, 8006b5a <HAL_QSPI_Init+0x2e>
 8006b46:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8006b48:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8006b4c:	4620      	mov	r0, r4
 8006b4e:	f7fb f88f 	bl	8001c70 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8006b52:	f241 3288 	movw	r2, #5000	; 0x1388
 8006b56:	9b03      	ldr	r3, [sp, #12]
 8006b58:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006b5a:	6820      	ldr	r0, [r4, #0]
 8006b5c:	68a1      	ldr	r1, [r4, #8]
 8006b5e:	6802      	ldr	r2, [r0, #0]
 8006b60:	3901      	subs	r1, #1
 8006b62:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8006b66:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006b6a:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006b6c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006b6e:	9200      	str	r2, [sp, #0]
 8006b70:	2120      	movs	r1, #32
 8006b72:	2200      	movs	r2, #0
 8006b74:	4620      	mov	r0, r4
 8006b76:	f7ff ffb2 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006b7a:	bb10      	cbnz	r0, 8006bc2 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006b7c:	69e5      	ldr	r5, [r4, #28]
 8006b7e:	68e3      	ldr	r3, [r4, #12]
 8006b80:	6822      	ldr	r2, [r4, #0]
 8006b82:	432b      	orrs	r3, r5
 8006b84:	6a25      	ldr	r5, [r4, #32]
 8006b86:	6811      	ldr	r1, [r2, #0]
 8006b88:	432b      	orrs	r3, r5
 8006b8a:	6865      	ldr	r5, [r4, #4]
 8006b8c:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8006b90:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006b94:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8006b98:	430b      	orrs	r3, r1
 8006b9a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006b9c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8006ba0:	430b      	orrs	r3, r1
 8006ba2:	6921      	ldr	r1, [r4, #16]
 8006ba4:	6855      	ldr	r5, [r2, #4]
 8006ba6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006baa:	4909      	ldr	r1, [pc, #36]	; (8006bd0 <HAL_QSPI_Init+0xa4>)
 8006bac:	4029      	ands	r1, r5
 8006bae:	430b      	orrs	r3, r1
 8006bb0:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8006bb2:	6813      	ldr	r3, [r2, #0]
 8006bb4:	f043 0301 	orr.w	r3, r3, #1
 8006bb8:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006bba:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006bbc:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8006bbe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006bc2:	2300      	movs	r3, #0
 8006bc4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006bc8:	b005      	add	sp, #20
 8006bca:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8006bcc:	2001      	movs	r0, #1
 8006bce:	e7fb      	b.n	8006bc8 <HAL_QSPI_Init+0x9c>
 8006bd0:	ffe0f8fe 	.word	0xffe0f8fe

08006bd4 <HAL_QSPI_DeInit>:
{
 8006bd4:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8006bd6:	4604      	mov	r4, r0
 8006bd8:	b168      	cbz	r0, 8006bf6 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8006bda:	6802      	ldr	r2, [r0, #0]
 8006bdc:	6813      	ldr	r3, [r2, #0]
 8006bde:	f023 0301 	bic.w	r3, r3, #1
 8006be2:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8006be4:	f7fb f89e 	bl	8001d24 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006be8:	2000      	movs	r0, #0
 8006bea:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8006bec:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006bf0:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8006bf4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006bf6:	2001      	movs	r0, #1
 8006bf8:	e7fc      	b.n	8006bf4 <HAL_QSPI_DeInit+0x20>

08006bfa <HAL_QSPI_Command>:
{
 8006bfa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006bfe:	4604      	mov	r4, r0
 8006c00:	b085      	sub	sp, #20
 8006c02:	4617      	mov	r7, r2
 8006c04:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8006c06:	f7fe f88f 	bl	8004d28 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006c0a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006c0e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006c10:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006c12:	d034      	beq.n	8006c7e <HAL_QSPI_Command+0x84>
 8006c14:	2201      	movs	r2, #1
 8006c16:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006c1a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006c1e:	2a01      	cmp	r2, #1
 8006c20:	fa5f f882 	uxtb.w	r8, r2
 8006c24:	f04f 0602 	mov.w	r6, #2
 8006c28:	d127      	bne.n	8006c7a <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006c2a:	2200      	movs	r2, #0
 8006c2c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006c2e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8006c30:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006c34:	9700      	str	r7, [sp, #0]
 8006c36:	2120      	movs	r1, #32
 8006c38:	4620      	mov	r0, r4
 8006c3a:	f7ff ff50 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006c3e:	4605      	mov	r5, r0
 8006c40:	b9a0      	cbnz	r0, 8006c6c <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006c42:	4602      	mov	r2, r0
 8006c44:	4649      	mov	r1, r9
 8006c46:	4620      	mov	r0, r4
 8006c48:	f7ff fe9c 	bl	8006984 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006c4c:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8006c50:	9b03      	ldr	r3, [sp, #12]
 8006c52:	b94a      	cbnz	r2, 8006c68 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006c54:	9700      	str	r7, [sp, #0]
 8006c56:	4642      	mov	r2, r8
 8006c58:	4631      	mov	r1, r6
 8006c5a:	4620      	mov	r0, r4
 8006c5c:	f7ff ff3f 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006c60:	4605      	mov	r5, r0
 8006c62:	b918      	cbnz	r0, 8006c6c <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006c64:	6823      	ldr	r3, [r4, #0]
 8006c66:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006c68:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006c6c:	2300      	movs	r3, #0
 8006c6e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006c72:	4628      	mov	r0, r5
 8006c74:	b005      	add	sp, #20
 8006c76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8006c7a:	4635      	mov	r5, r6
 8006c7c:	e7f6      	b.n	8006c6c <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8006c7e:	2502      	movs	r5, #2
 8006c80:	e7f7      	b.n	8006c72 <HAL_QSPI_Command+0x78>

08006c82 <HAL_QSPI_AutoPolling>:
{
 8006c82:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006c86:	4604      	mov	r4, r0
 8006c88:	4615      	mov	r5, r2
 8006c8a:	461e      	mov	r6, r3
 8006c8c:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8006c8e:	f7fe f84b 	bl	8004d28 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006c92:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006c96:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006c98:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006c9a:	d040      	beq.n	8006d1e <HAL_QSPI_AutoPolling+0x9c>
 8006c9c:	2201      	movs	r2, #1
 8006c9e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006ca2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006ca6:	2a01      	cmp	r2, #1
 8006ca8:	b2d7      	uxtb	r7, r2
 8006caa:	d136      	bne.n	8006d1a <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006cac:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006cae:	2200      	movs	r2, #0
 8006cb0:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006cb2:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006cb4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006cb8:	9600      	str	r6, [sp, #0]
 8006cba:	2120      	movs	r1, #32
 8006cbc:	4620      	mov	r0, r4
 8006cbe:	f7ff ff0e 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006cc2:	bb20      	cbnz	r0, 8006d0e <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006cc4:	6821      	ldr	r1, [r4, #0]
 8006cc6:	682a      	ldr	r2, [r5, #0]
 8006cc8:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006cca:	686a      	ldr	r2, [r5, #4]
 8006ccc:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8006cce:	68aa      	ldr	r2, [r5, #8]
 8006cd0:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006cd2:	680a      	ldr	r2, [r1, #0]
 8006cd4:	6928      	ldr	r0, [r5, #16]
 8006cd6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8006cda:	4302      	orrs	r2, r0
 8006cdc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006ce0:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8006ce2:	68ea      	ldr	r2, [r5, #12]
 8006ce4:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006ce8:	4641      	mov	r1, r8
 8006cea:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006cee:	4620      	mov	r0, r4
 8006cf0:	f7ff fe48 	bl	8006984 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8006cf4:	9b03      	ldr	r3, [sp, #12]
 8006cf6:	9600      	str	r6, [sp, #0]
 8006cf8:	463a      	mov	r2, r7
 8006cfa:	2108      	movs	r1, #8
 8006cfc:	4620      	mov	r0, r4
 8006cfe:	f7ff feee 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006d02:	b920      	cbnz	r0, 8006d0e <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8006d04:	6823      	ldr	r3, [r4, #0]
 8006d06:	2208      	movs	r2, #8
 8006d08:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006d0a:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006d0e:	2300      	movs	r3, #0
 8006d10:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006d14:	b004      	add	sp, #16
 8006d16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8006d1a:	2002      	movs	r0, #2
 8006d1c:	e7f7      	b.n	8006d0e <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8006d1e:	2002      	movs	r0, #2
 8006d20:	e7f8      	b.n	8006d14 <HAL_QSPI_AutoPolling+0x92>

08006d22 <HAL_QSPI_MemoryMapped>:
{
 8006d22:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006d24:	4604      	mov	r4, r0
 8006d26:	4616      	mov	r6, r2
 8006d28:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006d2a:	f7fd fffd 	bl	8004d28 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006d2e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006d32:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006d34:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006d36:	d032      	beq.n	8006d9e <HAL_QSPI_MemoryMapped+0x7c>
 8006d38:	2201      	movs	r2, #1
 8006d3a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006d3e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006d42:	2a01      	cmp	r2, #1
 8006d44:	d129      	bne.n	8006d9a <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006d46:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006d48:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006d4a:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006d4c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006d50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006d52:	9100      	str	r1, [sp, #0]
 8006d54:	4620      	mov	r0, r4
 8006d56:	2120      	movs	r1, #32
 8006d58:	f7ff fec1 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006d5c:	4605      	mov	r5, r0
 8006d5e:	b9b0      	cbnz	r0, 8006d8e <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006d60:	6823      	ldr	r3, [r4, #0]
 8006d62:	6872      	ldr	r2, [r6, #4]
 8006d64:	6818      	ldr	r0, [r3, #0]
 8006d66:	f020 0008 	bic.w	r0, r0, #8
 8006d6a:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006d6c:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006d6e:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006d70:	d107      	bne.n	8006d82 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006d72:	6832      	ldr	r2, [r6, #0]
 8006d74:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006d76:	2210      	movs	r2, #16
 8006d78:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8006d7a:	681a      	ldr	r2, [r3, #0]
 8006d7c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8006d80:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006d82:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8006d86:	4639      	mov	r1, r7
 8006d88:	4620      	mov	r0, r4
 8006d8a:	f7ff fdfb 	bl	8006984 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8006d8e:	2300      	movs	r3, #0
 8006d90:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006d94:	4628      	mov	r0, r5
 8006d96:	b003      	add	sp, #12
 8006d98:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006d9a:	2502      	movs	r5, #2
 8006d9c:	e7f7      	b.n	8006d8e <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8006d9e:	2502      	movs	r5, #2
 8006da0:	e7f8      	b.n	8006d94 <HAL_QSPI_MemoryMapped+0x72>

08006da2 <HAL_QSPI_Abort>:
{
 8006da2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006da4:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006da6:	f7fd ffbf 	bl	8004d28 <HAL_GetTick>
 8006daa:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006dac:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8006db0:	f010 0002 	ands.w	r0, r0, #2
 8006db4:	d03a      	beq.n	8006e2c <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8006db6:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006db8:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8006dba:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006dbe:	680a      	ldr	r2, [r1, #0]
 8006dc0:	f012 0204 	ands.w	r2, r2, #4
 8006dc4:	d034      	beq.n	8006e30 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006dc6:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006dc8:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006dca:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006dcc:	f022 0204 	bic.w	r2, r2, #4
 8006dd0:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006dd2:	f7fe f8f9 	bl	8004fc8 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8006dd6:	9b03      	ldr	r3, [sp, #12]
 8006dd8:	b118      	cbz	r0, 8006de2 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006dda:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006ddc:	f042 0204 	orr.w	r2, r2, #4
 8006de0:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8006de2:	6822      	ldr	r2, [r4, #0]
 8006de4:	6891      	ldr	r1, [r2, #8]
 8006de6:	0689      	lsls	r1, r1, #26
 8006de8:	d51d      	bpl.n	8006e26 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006dea:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006dec:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006dee:	f041 0102 	orr.w	r1, r1, #2
 8006df2:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006df4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006df6:	9200      	str	r2, [sp, #0]
 8006df8:	2102      	movs	r1, #2
 8006dfa:	2201      	movs	r2, #1
 8006dfc:	4620      	mov	r0, r4
 8006dfe:	f7ff fe6e 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006e02:	9b03      	ldr	r3, [sp, #12]
 8006e04:	b990      	cbnz	r0, 8006e2c <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006e06:	6822      	ldr	r2, [r4, #0]
 8006e08:	2102      	movs	r1, #2
 8006e0a:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006e0c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006e0e:	9200      	str	r2, [sp, #0]
 8006e10:	2120      	movs	r1, #32
 8006e12:	4602      	mov	r2, r0
 8006e14:	4620      	mov	r0, r4
 8006e16:	f7ff fe62 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006e1a:	b938      	cbnz	r0, 8006e2c <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8006e1c:	6822      	ldr	r2, [r4, #0]
 8006e1e:	6953      	ldr	r3, [r2, #20]
 8006e20:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006e24:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006e26:	2301      	movs	r3, #1
 8006e28:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8006e2c:	b004      	add	sp, #16
 8006e2e:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8006e30:	4610      	mov	r0, r2
 8006e32:	e7d6      	b.n	8006de2 <HAL_QSPI_Abort+0x40>

08006e34 <HAL_QSPI_Transmit>:
{
 8006e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e36:	4604      	mov	r4, r0
 8006e38:	b085      	sub	sp, #20
 8006e3a:	4616      	mov	r6, r2
 8006e3c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006e3e:	f7fd ff73 	bl	8004d28 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006e42:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006e46:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8006e48:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006e4a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006e4c:	d04c      	beq.n	8006ee8 <HAL_QSPI_Transmit+0xb4>
 8006e4e:	2201      	movs	r2, #1
 8006e50:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006e54:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006e58:	2a01      	cmp	r2, #1
 8006e5a:	b2d0      	uxtb	r0, r2
 8006e5c:	d142      	bne.n	8006ee4 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006e5e:	2200      	movs	r2, #0
 8006e60:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8006e62:	2f00      	cmp	r7, #0
 8006e64:	d039      	beq.n	8006eda <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8006e66:	2212      	movs	r2, #18
 8006e68:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006e6c:	692a      	ldr	r2, [r5, #16]
 8006e6e:	3201      	adds	r2, #1
 8006e70:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006e72:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006e74:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006e76:	3201      	adds	r2, #1
 8006e78:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006e7a:	696a      	ldr	r2, [r5, #20]
 8006e7c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8006e80:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006e82:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006e84:	b9a2      	cbnz	r2, 8006eb0 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006e86:	9600      	str	r6, [sp, #0]
 8006e88:	2201      	movs	r2, #1
 8006e8a:	2102      	movs	r1, #2
 8006e8c:	4620      	mov	r0, r4
 8006e8e:	f7ff fe26 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006e92:	b928      	cbnz	r0, 8006ea0 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006e94:	6823      	ldr	r3, [r4, #0]
 8006e96:	2202      	movs	r2, #2
 8006e98:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006e9a:	4620      	mov	r0, r4
 8006e9c:	f7ff ff81 	bl	8006da2 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006ea0:	2301      	movs	r3, #1
 8006ea2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006ea6:	2300      	movs	r3, #0
 8006ea8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006eac:	b005      	add	sp, #20
 8006eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006eb0:	9600      	str	r6, [sp, #0]
 8006eb2:	2201      	movs	r2, #1
 8006eb4:	2104      	movs	r1, #4
 8006eb6:	4620      	mov	r0, r4
 8006eb8:	9303      	str	r3, [sp, #12]
 8006eba:	f7ff fe10 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006ebe:	2800      	cmp	r0, #0
 8006ec0:	d1ee      	bne.n	8006ea0 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006ec2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006ec4:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006ec6:	7812      	ldrb	r2, [r2, #0]
 8006ec8:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006ecc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006ece:	3201      	adds	r2, #1
 8006ed0:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006ed2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006ed4:	3a01      	subs	r2, #1
 8006ed6:	62e2      	str	r2, [r4, #44]	; 0x2c
 8006ed8:	e7d3      	b.n	8006e82 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006eda:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006edc:	f043 0308 	orr.w	r3, r3, #8
 8006ee0:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006ee2:	e7e0      	b.n	8006ea6 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006ee4:	2002      	movs	r0, #2
 8006ee6:	e7de      	b.n	8006ea6 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8006ee8:	2002      	movs	r0, #2
 8006eea:	e7df      	b.n	8006eac <HAL_QSPI_Transmit+0x78>

08006eec <HAL_QSPI_Receive>:
{
 8006eec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006eee:	4604      	mov	r4, r0
 8006ef0:	b085      	sub	sp, #20
 8006ef2:	4616      	mov	r6, r2
 8006ef4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006ef6:	f7fd ff17 	bl	8004d28 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006efa:	6825      	ldr	r5, [r4, #0]
 8006efc:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8006f00:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006f04:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006f06:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006f08:	d050      	beq.n	8006fac <HAL_QSPI_Receive+0xc0>
 8006f0a:	2201      	movs	r2, #1
 8006f0c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006f10:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006f14:	2a01      	cmp	r2, #1
 8006f16:	b2d0      	uxtb	r0, r2
 8006f18:	d146      	bne.n	8006fa8 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006f1a:	2200      	movs	r2, #0
 8006f1c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8006f1e:	2f00      	cmp	r7, #0
 8006f20:	d03d      	beq.n	8006f9e <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8006f22:	2222      	movs	r2, #34	; 0x22
 8006f24:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006f28:	692a      	ldr	r2, [r5, #16]
 8006f2a:	3201      	adds	r2, #1
 8006f2c:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006f2e:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8006f30:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006f32:	3201      	adds	r2, #1
 8006f34:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006f36:	6969      	ldr	r1, [r5, #20]
 8006f38:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006f3c:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8006f40:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006f42:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006f46:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006f48:	b9a2      	cbnz	r2, 8006f74 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006f4a:	9600      	str	r6, [sp, #0]
 8006f4c:	2201      	movs	r2, #1
 8006f4e:	2102      	movs	r1, #2
 8006f50:	4620      	mov	r0, r4
 8006f52:	f7ff fdc4 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006f56:	b928      	cbnz	r0, 8006f64 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006f58:	6823      	ldr	r3, [r4, #0]
 8006f5a:	2202      	movs	r2, #2
 8006f5c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006f5e:	4620      	mov	r0, r4
 8006f60:	f7ff ff1f 	bl	8006da2 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006f64:	2301      	movs	r3, #1
 8006f66:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006f6a:	2300      	movs	r3, #0
 8006f6c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006f70:	b005      	add	sp, #20
 8006f72:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006f74:	9600      	str	r6, [sp, #0]
 8006f76:	2201      	movs	r2, #1
 8006f78:	2106      	movs	r1, #6
 8006f7a:	4620      	mov	r0, r4
 8006f7c:	9303      	str	r3, [sp, #12]
 8006f7e:	f7ff fdae 	bl	8006ade <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006f82:	2800      	cmp	r0, #0
 8006f84:	d1ee      	bne.n	8006f64 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006f86:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006f88:	f895 1020 	ldrb.w	r1, [r5, #32]
 8006f8c:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8006f8e:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006f90:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006f92:	3201      	adds	r2, #1
 8006f94:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006f96:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006f98:	3a01      	subs	r2, #1
 8006f9a:	63a2      	str	r2, [r4, #56]	; 0x38
 8006f9c:	e7d3      	b.n	8006f46 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006f9e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006fa0:	f043 0308 	orr.w	r3, r3, #8
 8006fa4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006fa6:	e7e0      	b.n	8006f6a <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006fa8:	2002      	movs	r0, #2
 8006faa:	e7de      	b.n	8006f6a <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8006fac:	2002      	movs	r0, #2
 8006fae:	e7df      	b.n	8006f70 <HAL_QSPI_Receive+0x84>

08006fb0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006fb0:	4913      	ldr	r1, [pc, #76]	; (8007000 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006fb2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006fb4:	688b      	ldr	r3, [r1, #8]
 8006fb6:	f003 030c 	and.w	r3, r3, #12
 8006fba:	2b04      	cmp	r3, #4
 8006fbc:	d01c      	beq.n	8006ff8 <HAL_RCC_GetSysClockFreq+0x48>
 8006fbe:	2b08      	cmp	r3, #8
 8006fc0:	d11c      	bne.n	8006ffc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006fc2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006fc4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fc6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006fc8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fcc:	bf14      	ite	ne
 8006fce:	480d      	ldrne	r0, [pc, #52]	; (8007004 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fd0:	480d      	ldreq	r0, [pc, #52]	; (8007008 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fd2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006fd6:	bf18      	it	ne
 8006fd8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006fda:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fde:	fba1 0100 	umull	r0, r1, r1, r0
 8006fe2:	f7f9 f95d 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006fe6:	4b06      	ldr	r3, [pc, #24]	; (8007000 <HAL_RCC_GetSysClockFreq+0x50>)
 8006fe8:	685b      	ldr	r3, [r3, #4]
 8006fea:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006fee:	3301      	adds	r3, #1
 8006ff0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006ff2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006ff6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ff8:	4802      	ldr	r0, [pc, #8]	; (8007004 <HAL_RCC_GetSysClockFreq+0x54>)
 8006ffa:	e7fc      	b.n	8006ff6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006ffc:	4802      	ldr	r0, [pc, #8]	; (8007008 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006ffe:	e7fa      	b.n	8006ff6 <HAL_RCC_GetSysClockFreq+0x46>
 8007000:	40023800 	.word	0x40023800
 8007004:	007a1200 	.word	0x007a1200
 8007008:	00f42400 	.word	0x00f42400

0800700c <HAL_RCC_ClockConfig>:
{
 800700c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007010:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007012:	4604      	mov	r4, r0
 8007014:	b910      	cbnz	r0, 800701c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007016:	2001      	movs	r0, #1
}
 8007018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800701c:	4b44      	ldr	r3, [pc, #272]	; (8007130 <HAL_RCC_ClockConfig+0x124>)
 800701e:	681a      	ldr	r2, [r3, #0]
 8007020:	f002 020f 	and.w	r2, r2, #15
 8007024:	428a      	cmp	r2, r1
 8007026:	d328      	bcc.n	800707a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007028:	6822      	ldr	r2, [r4, #0]
 800702a:	0797      	lsls	r7, r2, #30
 800702c:	d42d      	bmi.n	800708a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800702e:	07d0      	lsls	r0, r2, #31
 8007030:	d441      	bmi.n	80070b6 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007032:	4b3f      	ldr	r3, [pc, #252]	; (8007130 <HAL_RCC_ClockConfig+0x124>)
 8007034:	681a      	ldr	r2, [r3, #0]
 8007036:	f002 020f 	and.w	r2, r2, #15
 800703a:	42aa      	cmp	r2, r5
 800703c:	d866      	bhi.n	800710c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800703e:	6822      	ldr	r2, [r4, #0]
 8007040:	0751      	lsls	r1, r2, #29
 8007042:	d46c      	bmi.n	800711e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007044:	0713      	lsls	r3, r2, #28
 8007046:	d507      	bpl.n	8007058 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007048:	4a3a      	ldr	r2, [pc, #232]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 800704a:	6921      	ldr	r1, [r4, #16]
 800704c:	6893      	ldr	r3, [r2, #8]
 800704e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007052:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007056:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007058:	f7ff ffaa 	bl	8006fb0 <HAL_RCC_GetSysClockFreq>
 800705c:	4b35      	ldr	r3, [pc, #212]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 800705e:	4a36      	ldr	r2, [pc, #216]	; (8007138 <HAL_RCC_ClockConfig+0x12c>)
 8007060:	689b      	ldr	r3, [r3, #8]
 8007062:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007066:	5cd3      	ldrb	r3, [r2, r3]
 8007068:	40d8      	lsrs	r0, r3
 800706a:	4b34      	ldr	r3, [pc, #208]	; (800713c <HAL_RCC_ClockConfig+0x130>)
 800706c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800706e:	4b34      	ldr	r3, [pc, #208]	; (8007140 <HAL_RCC_ClockConfig+0x134>)
 8007070:	6818      	ldr	r0, [r3, #0]
 8007072:	f7fa ff2f 	bl	8001ed4 <HAL_InitTick>
  return HAL_OK;
 8007076:	2000      	movs	r0, #0
 8007078:	e7ce      	b.n	8007018 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800707a:	b2ca      	uxtb	r2, r1
 800707c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800707e:	681b      	ldr	r3, [r3, #0]
 8007080:	f003 030f 	and.w	r3, r3, #15
 8007084:	428b      	cmp	r3, r1
 8007086:	d1c6      	bne.n	8007016 <HAL_RCC_ClockConfig+0xa>
 8007088:	e7ce      	b.n	8007028 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800708a:	4b2a      	ldr	r3, [pc, #168]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 800708c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007090:	bf1e      	ittt	ne
 8007092:	6899      	ldrne	r1, [r3, #8]
 8007094:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007098:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800709a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800709c:	bf42      	ittt	mi
 800709e:	6899      	ldrmi	r1, [r3, #8]
 80070a0:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 80070a4:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80070a6:	4923      	ldr	r1, [pc, #140]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 80070a8:	68a0      	ldr	r0, [r4, #8]
 80070aa:	688b      	ldr	r3, [r1, #8]
 80070ac:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80070b0:	4303      	orrs	r3, r0
 80070b2:	608b      	str	r3, [r1, #8]
 80070b4:	e7bb      	b.n	800702e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80070b6:	6862      	ldr	r2, [r4, #4]
 80070b8:	4b1e      	ldr	r3, [pc, #120]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 80070ba:	2a01      	cmp	r2, #1
 80070bc:	d11c      	bne.n	80070f8 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80070c4:	d0a7      	beq.n	8007016 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80070c6:	4e1b      	ldr	r6, [pc, #108]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 80070c8:	68b3      	ldr	r3, [r6, #8]
 80070ca:	f023 0303 	bic.w	r3, r3, #3
 80070ce:	4313      	orrs	r3, r2
 80070d0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80070d2:	f7fd fe29 	bl	8004d28 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80070d6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80070da:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80070dc:	68b3      	ldr	r3, [r6, #8]
 80070de:	6862      	ldr	r2, [r4, #4]
 80070e0:	f003 030c 	and.w	r3, r3, #12
 80070e4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80070e8:	d0a3      	beq.n	8007032 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80070ea:	f7fd fe1d 	bl	8004d28 <HAL_GetTick>
 80070ee:	1bc0      	subs	r0, r0, r7
 80070f0:	4540      	cmp	r0, r8
 80070f2:	d9f3      	bls.n	80070dc <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80070f4:	2003      	movs	r0, #3
 80070f6:	e78f      	b.n	8007018 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80070f8:	1e91      	subs	r1, r2, #2
 80070fa:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80070fc:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80070fe:	d802      	bhi.n	8007106 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007100:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007104:	e7de      	b.n	80070c4 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007106:	f013 0f02 	tst.w	r3, #2
 800710a:	e7db      	b.n	80070c4 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800710c:	b2ea      	uxtb	r2, r5
 800710e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007110:	681b      	ldr	r3, [r3, #0]
 8007112:	f003 030f 	and.w	r3, r3, #15
 8007116:	42ab      	cmp	r3, r5
 8007118:	f47f af7d 	bne.w	8007016 <HAL_RCC_ClockConfig+0xa>
 800711c:	e78f      	b.n	800703e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800711e:	4905      	ldr	r1, [pc, #20]	; (8007134 <HAL_RCC_ClockConfig+0x128>)
 8007120:	68e0      	ldr	r0, [r4, #12]
 8007122:	688b      	ldr	r3, [r1, #8]
 8007124:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007128:	4303      	orrs	r3, r0
 800712a:	608b      	str	r3, [r1, #8]
 800712c:	e78a      	b.n	8007044 <HAL_RCC_ClockConfig+0x38>
 800712e:	bf00      	nop
 8007130:	40023c00 	.word	0x40023c00
 8007134:	40023800 	.word	0x40023800
 8007138:	0801f5b9 	.word	0x0801f5b9
 800713c:	20000050 	.word	0x20000050
 8007140:	20000058 	.word	0x20000058

08007144 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007144:	4b04      	ldr	r3, [pc, #16]	; (8007158 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007146:	4a05      	ldr	r2, [pc, #20]	; (800715c <HAL_RCC_GetPCLK1Freq+0x18>)
 8007148:	689b      	ldr	r3, [r3, #8]
 800714a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800714e:	5cd3      	ldrb	r3, [r2, r3]
 8007150:	4a03      	ldr	r2, [pc, #12]	; (8007160 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007152:	6810      	ldr	r0, [r2, #0]
}
 8007154:	40d8      	lsrs	r0, r3
 8007156:	4770      	bx	lr
 8007158:	40023800 	.word	0x40023800
 800715c:	0801f5c9 	.word	0x0801f5c9
 8007160:	20000050 	.word	0x20000050

08007164 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007164:	230f      	movs	r3, #15
 8007166:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007168:	4b0b      	ldr	r3, [pc, #44]	; (8007198 <HAL_RCC_GetClockConfig+0x34>)
 800716a:	689a      	ldr	r2, [r3, #8]
 800716c:	f002 0203 	and.w	r2, r2, #3
 8007170:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007172:	689a      	ldr	r2, [r3, #8]
 8007174:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007178:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800717a:	689a      	ldr	r2, [r3, #8]
 800717c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007180:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007182:	689b      	ldr	r3, [r3, #8]
 8007184:	08db      	lsrs	r3, r3, #3
 8007186:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800718a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800718c:	4b03      	ldr	r3, [pc, #12]	; (800719c <HAL_RCC_GetClockConfig+0x38>)
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	f003 030f 	and.w	r3, r3, #15
 8007194:	600b      	str	r3, [r1, #0]
}
 8007196:	4770      	bx	lr
 8007198:	40023800 	.word	0x40023800
 800719c:	40023c00 	.word	0x40023c00

080071a0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80071a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80071a2:	6802      	ldr	r2, [r0, #0]
{
 80071a4:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80071a6:	0610      	lsls	r0, r2, #24
 80071a8:	d508      	bpl.n	80071bc <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 80071aa:	49aa      	ldr	r1, [pc, #680]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80071ac:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80071ae:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80071b2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80071b6:	4303      	orrs	r3, r0
 80071b8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 80071bc:	05d1      	lsls	r1, r2, #23
 80071be:	d508      	bpl.n	80071d2 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 80071c0:	49a4      	ldr	r1, [pc, #656]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80071c2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80071c4:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80071c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80071cc:	4303      	orrs	r3, r0
 80071ce:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80071d2:	f012 0f43 	tst.w	r2, #67	; 0x43
 80071d6:	d173      	bne.n	80072c0 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80071d8:	6823      	ldr	r3, [r4, #0]
 80071da:	f013 0f0c 	tst.w	r3, #12
 80071de:	f000 80c1 	beq.w	8007364 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80071e2:	4b9d      	ldr	r3, [pc, #628]	; (8007458 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80071e4:	4d9b      	ldr	r5, [pc, #620]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 80071e6:	2200      	movs	r2, #0
 80071e8:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80071ea:	f7fd fd9d 	bl	8004d28 <HAL_GetTick>
 80071ee:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80071f0:	682b      	ldr	r3, [r5, #0]
 80071f2:	009b      	lsls	r3, r3, #2
 80071f4:	f100 80fc 	bmi.w	80073f0 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80071f8:	6821      	ldr	r1, [r4, #0]
 80071fa:	074f      	lsls	r7, r1, #29
 80071fc:	d51a      	bpl.n	8007234 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80071fe:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007202:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8007206:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800720a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800720e:	4313      	orrs	r3, r2
 8007210:	6922      	ldr	r2, [r4, #16]
 8007212:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007216:	69a2      	ldr	r2, [r4, #24]
 8007218:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800721c:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007220:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007224:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007226:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800722a:	3a01      	subs	r2, #1
 800722c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007230:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007234:	070e      	lsls	r6, r1, #28
 8007236:	d519      	bpl.n	800726c <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8007238:	4a86      	ldr	r2, [pc, #536]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800723a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800723e:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8007242:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007246:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800724a:	4303      	orrs	r3, r0
 800724c:	6920      	ldr	r0, [r4, #16]
 800724e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007252:	69e0      	ldr	r0, [r4, #28]
 8007254:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8007258:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800725c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007260:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007262:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007266:	4303      	orrs	r3, r0
 8007268:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800726c:	060d      	lsls	r5, r1, #24
 800726e:	d517      	bpl.n	80072a0 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8007270:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007272:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8007276:	d113      	bne.n	80072a0 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007278:	4976      	ldr	r1, [pc, #472]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800727a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800727e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8007282:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8007286:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800728a:	4313      	orrs	r3, r2
 800728c:	6922      	ldr	r2, [r4, #16]
 800728e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007292:	6962      	ldr	r2, [r4, #20]
 8007294:	0852      	lsrs	r2, r2, #1
 8007296:	3a01      	subs	r2, #1
 8007298:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800729c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80072a0:	4b6d      	ldr	r3, [pc, #436]	; (8007458 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80072a2:	4e6c      	ldr	r6, [pc, #432]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 80072a4:	2201      	movs	r2, #1
 80072a6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80072a8:	f7fd fd3e 	bl	8004d28 <HAL_GetTick>
 80072ac:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80072ae:	6833      	ldr	r3, [r6, #0]
 80072b0:	0098      	lsls	r0, r3, #2
 80072b2:	d459      	bmi.n	8007368 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80072b4:	f7fd fd38 	bl	8004d28 <HAL_GetTick>
 80072b8:	1b40      	subs	r0, r0, r5
 80072ba:	2802      	cmp	r0, #2
 80072bc:	d9f7      	bls.n	80072ae <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80072be:	e04e      	b.n	800735e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80072c0:	4b65      	ldr	r3, [pc, #404]	; (8007458 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80072c2:	4e64      	ldr	r6, [pc, #400]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 80072c4:	2200      	movs	r2, #0
 80072c6:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80072c8:	f7fd fd2e 	bl	8004d28 <HAL_GetTick>
 80072cc:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80072ce:	6833      	ldr	r3, [r6, #0]
 80072d0:	011b      	lsls	r3, r3, #4
 80072d2:	d43f      	bmi.n	8007354 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80072d4:	6821      	ldr	r1, [r4, #0]
 80072d6:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80072d8:	bf41      	itttt	mi
 80072da:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80072de:	071b      	lslmi	r3, r3, #28
 80072e0:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80072e4:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80072e8:	078e      	lsls	r6, r1, #30
 80072ea:	d515      	bpl.n	8007318 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80072ec:	4a59      	ldr	r2, [pc, #356]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80072ee:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80072f0:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80072f4:	6865      	ldr	r5, [r4, #4]
 80072f6:	061b      	lsls	r3, r3, #24
 80072f8:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80072fc:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007300:	4303      	orrs	r3, r0
 8007302:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007306:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800730a:	6a23      	ldr	r3, [r4, #32]
 800730c:	f020 001f 	bic.w	r0, r0, #31
 8007310:	3b01      	subs	r3, #1
 8007312:	4303      	orrs	r3, r0
 8007314:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007318:	064d      	lsls	r5, r1, #25
 800731a:	d50a      	bpl.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800731c:	68e3      	ldr	r3, [r4, #12]
 800731e:	6862      	ldr	r2, [r4, #4]
 8007320:	061b      	lsls	r3, r3, #24
 8007322:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007326:	68a2      	ldr	r2, [r4, #8]
 8007328:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800732c:	4a49      	ldr	r2, [pc, #292]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800732e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007332:	4b49      	ldr	r3, [pc, #292]	; (8007458 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007334:	4e47      	ldr	r6, [pc, #284]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007336:	2201      	movs	r2, #1
 8007338:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800733a:	f7fd fcf5 	bl	8004d28 <HAL_GetTick>
 800733e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007340:	6833      	ldr	r3, [r6, #0]
 8007342:	0118      	lsls	r0, r3, #4
 8007344:	f53f af48 	bmi.w	80071d8 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007348:	f7fd fcee 	bl	8004d28 <HAL_GetTick>
 800734c:	1b40      	subs	r0, r0, r5
 800734e:	2802      	cmp	r0, #2
 8007350:	d9f6      	bls.n	8007340 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8007352:	e004      	b.n	800735e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007354:	f7fd fce8 	bl	8004d28 <HAL_GetTick>
 8007358:	1b40      	subs	r0, r0, r5
 800735a:	2802      	cmp	r0, #2
 800735c:	d9b7      	bls.n	80072ce <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800735e:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8007360:	b003      	add	sp, #12
 8007362:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8007364:	0619      	lsls	r1, r3, #24
 8007366:	d43e      	bmi.n	80073e6 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007368:	6823      	ldr	r3, [r4, #0]
 800736a:	069a      	lsls	r2, r3, #26
 800736c:	d530      	bpl.n	80073d0 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800736e:	2300      	movs	r3, #0
 8007370:	9301      	str	r3, [sp, #4]
 8007372:	4b38      	ldr	r3, [pc, #224]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8007374:	4d39      	ldr	r5, [pc, #228]	; (800745c <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007376:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007378:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800737c:	641a      	str	r2, [r3, #64]	; 0x40
 800737e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007380:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007384:	9301      	str	r3, [sp, #4]
 8007386:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007388:	682b      	ldr	r3, [r5, #0]
 800738a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800738e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8007390:	f7fd fcca 	bl	8004d28 <HAL_GetTick>
 8007394:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007396:	682b      	ldr	r3, [r5, #0]
 8007398:	05d9      	lsls	r1, r3, #23
 800739a:	d530      	bpl.n	80073fe <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800739c:	4d2d      	ldr	r5, [pc, #180]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800739e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80073a0:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80073a4:	d131      	bne.n	800740a <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80073a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80073a8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80073ac:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80073b0:	4a28      	ldr	r2, [pc, #160]	; (8007454 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80073b2:	d14b      	bne.n	800744c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 80073b4:	6891      	ldr	r1, [r2, #8]
 80073b6:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80073ba:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80073be:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80073c2:	4301      	orrs	r1, r0
 80073c4:	6091      	str	r1, [r2, #8]
 80073c6:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80073c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80073cc:	430b      	orrs	r3, r1
 80073ce:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80073d0:	6820      	ldr	r0, [r4, #0]
 80073d2:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80073d6:	bf1f      	itttt	ne
 80073d8:	4b21      	ldrne	r3, [pc, #132]	; (8007460 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80073da:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 80073de:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 80073e2:	2000      	movne	r0, #0
 80073e4:	e7bc      	b.n	8007360 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 80073e6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80073e8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80073ec:	d1bc      	bne.n	8007368 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80073ee:	e6f8      	b.n	80071e2 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80073f0:	f7fd fc9a 	bl	8004d28 <HAL_GetTick>
 80073f4:	1b80      	subs	r0, r0, r6
 80073f6:	2802      	cmp	r0, #2
 80073f8:	f67f aefa 	bls.w	80071f0 <HAL_RCCEx_PeriphCLKConfig+0x50>
 80073fc:	e7af      	b.n	800735e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80073fe:	f7fd fc93 	bl	8004d28 <HAL_GetTick>
 8007402:	1b80      	subs	r0, r0, r6
 8007404:	2802      	cmp	r0, #2
 8007406:	d9c6      	bls.n	8007396 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8007408:	e7a9      	b.n	800735e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800740a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800740c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007410:	4293      	cmp	r3, r2
 8007412:	d0c8      	beq.n	80073a6 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007414:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007416:	4a10      	ldr	r2, [pc, #64]	; (8007458 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8007418:	2101      	movs	r1, #1
 800741a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800741e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007422:	2100      	movs	r1, #0
 8007424:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007428:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800742a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800742c:	07da      	lsls	r2, r3, #31
 800742e:	d5ba      	bpl.n	80073a6 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8007430:	f7fd fc7a 	bl	8004d28 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007434:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007438:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800743a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800743c:	079b      	lsls	r3, r3, #30
 800743e:	d4b2      	bmi.n	80073a6 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007440:	f7fd fc72 	bl	8004d28 <HAL_GetTick>
 8007444:	1b80      	subs	r0, r0, r6
 8007446:	42b8      	cmp	r0, r7
 8007448:	d9f7      	bls.n	800743a <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800744a:	e788      	b.n	800735e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800744c:	6891      	ldr	r1, [r2, #8]
 800744e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007452:	e7b7      	b.n	80073c4 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8007454:	40023800 	.word	0x40023800
 8007458:	42470000 	.word	0x42470000
 800745c:	40007000 	.word	0x40007000
 8007460:	42471000 	.word	0x42471000

08007464 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007464:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007468:	4604      	mov	r4, r0
 800746a:	b340      	cbz	r0, 80074be <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800746c:	6803      	ldr	r3, [r0, #0]
 800746e:	07dd      	lsls	r5, r3, #31
 8007470:	d410      	bmi.n	8007494 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007472:	6823      	ldr	r3, [r4, #0]
 8007474:	0798      	lsls	r0, r3, #30
 8007476:	d45e      	bmi.n	8007536 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007478:	6823      	ldr	r3, [r4, #0]
 800747a:	071a      	lsls	r2, r3, #28
 800747c:	f100 80a0 	bmi.w	80075c0 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007480:	6823      	ldr	r3, [r4, #0]
 8007482:	075b      	lsls	r3, r3, #29
 8007484:	f100 80c0 	bmi.w	8007608 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007488:	69a0      	ldr	r0, [r4, #24]
 800748a:	2800      	cmp	r0, #0
 800748c:	f040 8128 	bne.w	80076e0 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007490:	2000      	movs	r0, #0
 8007492:	e02b      	b.n	80074ec <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8007494:	4b8f      	ldr	r3, [pc, #572]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 8007496:	689a      	ldr	r2, [r3, #8]
 8007498:	f002 020c 	and.w	r2, r2, #12
 800749c:	2a04      	cmp	r2, #4
 800749e:	d007      	beq.n	80074b0 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80074a0:	689a      	ldr	r2, [r3, #8]
 80074a2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80074a6:	2a08      	cmp	r2, #8
 80074a8:	d10b      	bne.n	80074c2 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80074aa:	685a      	ldr	r2, [r3, #4]
 80074ac:	0251      	lsls	r1, r2, #9
 80074ae:	d508      	bpl.n	80074c2 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80074b0:	4b88      	ldr	r3, [pc, #544]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	039a      	lsls	r2, r3, #14
 80074b6:	d5dc      	bpl.n	8007472 <HAL_RCC_OscConfig+0xe>
 80074b8:	6863      	ldr	r3, [r4, #4]
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d1d9      	bne.n	8007472 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80074be:	2001      	movs	r0, #1
 80074c0:	e014      	b.n	80074ec <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80074c2:	6862      	ldr	r2, [r4, #4]
 80074c4:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80074c8:	d113      	bne.n	80074f2 <HAL_RCC_OscConfig+0x8e>
 80074ca:	681a      	ldr	r2, [r3, #0]
 80074cc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80074d0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80074d2:	f7fd fc29 	bl	8004d28 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80074d6:	4e7f      	ldr	r6, [pc, #508]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80074d8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80074da:	6833      	ldr	r3, [r6, #0]
 80074dc:	039b      	lsls	r3, r3, #14
 80074de:	d4c8      	bmi.n	8007472 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80074e0:	f7fd fc22 	bl	8004d28 <HAL_GetTick>
 80074e4:	1b40      	subs	r0, r0, r5
 80074e6:	2864      	cmp	r0, #100	; 0x64
 80074e8:	d9f7      	bls.n	80074da <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80074ea:	2003      	movs	r0, #3
}
 80074ec:	b002      	add	sp, #8
 80074ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80074f2:	4d78      	ldr	r5, [pc, #480]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 80074f4:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80074f8:	682b      	ldr	r3, [r5, #0]
 80074fa:	d107      	bne.n	800750c <HAL_RCC_OscConfig+0xa8>
 80074fc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007500:	602b      	str	r3, [r5, #0]
 8007502:	682b      	ldr	r3, [r5, #0]
 8007504:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007508:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800750a:	e7e2      	b.n	80074d2 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800750c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007510:	602b      	str	r3, [r5, #0]
 8007512:	682b      	ldr	r3, [r5, #0]
 8007514:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007518:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800751a:	2a00      	cmp	r2, #0
 800751c:	d1d9      	bne.n	80074d2 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800751e:	f7fd fc03 	bl	8004d28 <HAL_GetTick>
 8007522:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007524:	682b      	ldr	r3, [r5, #0]
 8007526:	039f      	lsls	r7, r3, #14
 8007528:	d5a3      	bpl.n	8007472 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800752a:	f7fd fbfd 	bl	8004d28 <HAL_GetTick>
 800752e:	1b80      	subs	r0, r0, r6
 8007530:	2864      	cmp	r0, #100	; 0x64
 8007532:	d9f7      	bls.n	8007524 <HAL_RCC_OscConfig+0xc0>
 8007534:	e7d9      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007536:	4b67      	ldr	r3, [pc, #412]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 8007538:	689a      	ldr	r2, [r3, #8]
 800753a:	f012 0f0c 	tst.w	r2, #12
 800753e:	d007      	beq.n	8007550 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007540:	689a      	ldr	r2, [r3, #8]
 8007542:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007546:	2a08      	cmp	r2, #8
 8007548:	d111      	bne.n	800756e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800754a:	685b      	ldr	r3, [r3, #4]
 800754c:	025e      	lsls	r6, r3, #9
 800754e:	d40e      	bmi.n	800756e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007550:	4a60      	ldr	r2, [pc, #384]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 8007552:	6813      	ldr	r3, [r2, #0]
 8007554:	079d      	lsls	r5, r3, #30
 8007556:	d502      	bpl.n	800755e <HAL_RCC_OscConfig+0xfa>
 8007558:	68e3      	ldr	r3, [r4, #12]
 800755a:	2b01      	cmp	r3, #1
 800755c:	d1af      	bne.n	80074be <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800755e:	6813      	ldr	r3, [r2, #0]
 8007560:	6921      	ldr	r1, [r4, #16]
 8007562:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007566:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800756a:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800756c:	e784      	b.n	8007478 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800756e:	68e2      	ldr	r2, [r4, #12]
 8007570:	4b59      	ldr	r3, [pc, #356]	; (80076d8 <HAL_RCC_OscConfig+0x274>)
 8007572:	b1b2      	cbz	r2, 80075a2 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007574:	2201      	movs	r2, #1
 8007576:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007578:	f7fd fbd6 	bl	8004d28 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800757c:	4d55      	ldr	r5, [pc, #340]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800757e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007580:	682b      	ldr	r3, [r5, #0]
 8007582:	0798      	lsls	r0, r3, #30
 8007584:	d507      	bpl.n	8007596 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007586:	682b      	ldr	r3, [r5, #0]
 8007588:	6922      	ldr	r2, [r4, #16]
 800758a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800758e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007592:	602b      	str	r3, [r5, #0]
 8007594:	e770      	b.n	8007478 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007596:	f7fd fbc7 	bl	8004d28 <HAL_GetTick>
 800759a:	1b80      	subs	r0, r0, r6
 800759c:	2802      	cmp	r0, #2
 800759e:	d9ef      	bls.n	8007580 <HAL_RCC_OscConfig+0x11c>
 80075a0:	e7a3      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80075a2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80075a4:	f7fd fbc0 	bl	8004d28 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80075a8:	4e4a      	ldr	r6, [pc, #296]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80075aa:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80075ac:	6833      	ldr	r3, [r6, #0]
 80075ae:	0799      	lsls	r1, r3, #30
 80075b0:	f57f af62 	bpl.w	8007478 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80075b4:	f7fd fbb8 	bl	8004d28 <HAL_GetTick>
 80075b8:	1b40      	subs	r0, r0, r5
 80075ba:	2802      	cmp	r0, #2
 80075bc:	d9f6      	bls.n	80075ac <HAL_RCC_OscConfig+0x148>
 80075be:	e794      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80075c0:	6962      	ldr	r2, [r4, #20]
 80075c2:	4b45      	ldr	r3, [pc, #276]	; (80076d8 <HAL_RCC_OscConfig+0x274>)
 80075c4:	b182      	cbz	r2, 80075e8 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80075c6:	2201      	movs	r2, #1
 80075c8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80075cc:	f7fd fbac 	bl	8004d28 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80075d0:	4e40      	ldr	r6, [pc, #256]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80075d2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80075d4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80075d6:	079f      	lsls	r7, r3, #30
 80075d8:	f53f af52 	bmi.w	8007480 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80075dc:	f7fd fba4 	bl	8004d28 <HAL_GetTick>
 80075e0:	1b40      	subs	r0, r0, r5
 80075e2:	2802      	cmp	r0, #2
 80075e4:	d9f6      	bls.n	80075d4 <HAL_RCC_OscConfig+0x170>
 80075e6:	e780      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80075e8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80075ec:	f7fd fb9c 	bl	8004d28 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80075f0:	4e38      	ldr	r6, [pc, #224]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80075f2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80075f4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80075f6:	0798      	lsls	r0, r3, #30
 80075f8:	f57f af42 	bpl.w	8007480 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80075fc:	f7fd fb94 	bl	8004d28 <HAL_GetTick>
 8007600:	1b40      	subs	r0, r0, r5
 8007602:	2802      	cmp	r0, #2
 8007604:	d9f6      	bls.n	80075f4 <HAL_RCC_OscConfig+0x190>
 8007606:	e770      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007608:	4b32      	ldr	r3, [pc, #200]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 800760a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800760c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8007610:	d128      	bne.n	8007664 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8007612:	9201      	str	r2, [sp, #4]
 8007614:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007616:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800761a:	641a      	str	r2, [r3, #64]	; 0x40
 800761c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800761e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007622:	9301      	str	r3, [sp, #4]
 8007624:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007626:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007628:	4d2c      	ldr	r5, [pc, #176]	; (80076dc <HAL_RCC_OscConfig+0x278>)
 800762a:	682b      	ldr	r3, [r5, #0]
 800762c:	05d9      	lsls	r1, r3, #23
 800762e:	d51b      	bpl.n	8007668 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007630:	68a3      	ldr	r3, [r4, #8]
 8007632:	4d28      	ldr	r5, [pc, #160]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 8007634:	2b01      	cmp	r3, #1
 8007636:	d127      	bne.n	8007688 <HAL_RCC_OscConfig+0x224>
 8007638:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800763a:	f043 0301 	orr.w	r3, r3, #1
 800763e:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007640:	f7fd fb72 	bl	8004d28 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007644:	4e23      	ldr	r6, [pc, #140]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007646:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007648:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800764c:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800764e:	079b      	lsls	r3, r3, #30
 8007650:	d539      	bpl.n	80076c6 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8007652:	2f00      	cmp	r7, #0
 8007654:	f43f af18 	beq.w	8007488 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007658:	4a1e      	ldr	r2, [pc, #120]	; (80076d4 <HAL_RCC_OscConfig+0x270>)
 800765a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800765c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007660:	6413      	str	r3, [r2, #64]	; 0x40
 8007662:	e711      	b.n	8007488 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007664:	2700      	movs	r7, #0
 8007666:	e7df      	b.n	8007628 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007668:	682b      	ldr	r3, [r5, #0]
 800766a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800766e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007670:	f7fd fb5a 	bl	8004d28 <HAL_GetTick>
 8007674:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007676:	682b      	ldr	r3, [r5, #0]
 8007678:	05da      	lsls	r2, r3, #23
 800767a:	d4d9      	bmi.n	8007630 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800767c:	f7fd fb54 	bl	8004d28 <HAL_GetTick>
 8007680:	1b80      	subs	r0, r0, r6
 8007682:	2802      	cmp	r0, #2
 8007684:	d9f7      	bls.n	8007676 <HAL_RCC_OscConfig+0x212>
 8007686:	e730      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007688:	2b05      	cmp	r3, #5
 800768a:	d104      	bne.n	8007696 <HAL_RCC_OscConfig+0x232>
 800768c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800768e:	f043 0304 	orr.w	r3, r3, #4
 8007692:	672b      	str	r3, [r5, #112]	; 0x70
 8007694:	e7d0      	b.n	8007638 <HAL_RCC_OscConfig+0x1d4>
 8007696:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007698:	f022 0201 	bic.w	r2, r2, #1
 800769c:	672a      	str	r2, [r5, #112]	; 0x70
 800769e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80076a0:	f022 0204 	bic.w	r2, r2, #4
 80076a4:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80076a6:	2b00      	cmp	r3, #0
 80076a8:	d1ca      	bne.n	8007640 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80076aa:	f7fd fb3d 	bl	8004d28 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80076ae:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80076b2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80076b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80076b6:	0798      	lsls	r0, r3, #30
 80076b8:	d5cb      	bpl.n	8007652 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80076ba:	f7fd fb35 	bl	8004d28 <HAL_GetTick>
 80076be:	1b80      	subs	r0, r0, r6
 80076c0:	4540      	cmp	r0, r8
 80076c2:	d9f7      	bls.n	80076b4 <HAL_RCC_OscConfig+0x250>
 80076c4:	e711      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80076c6:	f7fd fb2f 	bl	8004d28 <HAL_GetTick>
 80076ca:	1b40      	subs	r0, r0, r5
 80076cc:	4540      	cmp	r0, r8
 80076ce:	d9bd      	bls.n	800764c <HAL_RCC_OscConfig+0x1e8>
 80076d0:	e70b      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
 80076d2:	bf00      	nop
 80076d4:	40023800 	.word	0x40023800
 80076d8:	42470000 	.word	0x42470000
 80076dc:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80076e0:	4d3b      	ldr	r5, [pc, #236]	; (80077d0 <HAL_RCC_OscConfig+0x36c>)
 80076e2:	68ab      	ldr	r3, [r5, #8]
 80076e4:	f003 030c 	and.w	r3, r3, #12
 80076e8:	2b08      	cmp	r3, #8
 80076ea:	d040      	beq.n	800776e <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80076ec:	4b39      	ldr	r3, [pc, #228]	; (80077d4 <HAL_RCC_OscConfig+0x370>)
 80076ee:	2200      	movs	r2, #0
 80076f0:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80076f2:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80076f4:	d12e      	bne.n	8007754 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80076f6:	f7fd fb17 	bl	8004d28 <HAL_GetTick>
 80076fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80076fc:	682b      	ldr	r3, [r5, #0]
 80076fe:	0199      	lsls	r1, r3, #6
 8007700:	d422      	bmi.n	8007748 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8007702:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007706:	4313      	orrs	r3, r2
 8007708:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800770a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800770e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007710:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007714:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007716:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800771a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800771c:	0852      	lsrs	r2, r2, #1
 800771e:	3a01      	subs	r2, #1
 8007720:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007724:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007726:	4b2b      	ldr	r3, [pc, #172]	; (80077d4 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007728:	4d29      	ldr	r5, [pc, #164]	; (80077d0 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800772a:	2201      	movs	r2, #1
 800772c:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800772e:	f7fd fafb 	bl	8004d28 <HAL_GetTick>
 8007732:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007734:	682b      	ldr	r3, [r5, #0]
 8007736:	019a      	lsls	r2, r3, #6
 8007738:	f53f aeaa 	bmi.w	8007490 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800773c:	f7fd faf4 	bl	8004d28 <HAL_GetTick>
 8007740:	1b00      	subs	r0, r0, r4
 8007742:	2802      	cmp	r0, #2
 8007744:	d9f6      	bls.n	8007734 <HAL_RCC_OscConfig+0x2d0>
 8007746:	e6d0      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007748:	f7fd faee 	bl	8004d28 <HAL_GetTick>
 800774c:	1b80      	subs	r0, r0, r6
 800774e:	2802      	cmp	r0, #2
 8007750:	d9d4      	bls.n	80076fc <HAL_RCC_OscConfig+0x298>
 8007752:	e6ca      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007754:	f7fd fae8 	bl	8004d28 <HAL_GetTick>
 8007758:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800775a:	682b      	ldr	r3, [r5, #0]
 800775c:	019b      	lsls	r3, r3, #6
 800775e:	f57f ae97 	bpl.w	8007490 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007762:	f7fd fae1 	bl	8004d28 <HAL_GetTick>
 8007766:	1b00      	subs	r0, r0, r4
 8007768:	2802      	cmp	r0, #2
 800776a:	d9f6      	bls.n	800775a <HAL_RCC_OscConfig+0x2f6>
 800776c:	e6bd      	b.n	80074ea <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800776e:	2801      	cmp	r0, #1
 8007770:	f43f aebc 	beq.w	80074ec <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007774:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007776:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007778:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800777c:	4291      	cmp	r1, r2
 800777e:	f47f ae9e 	bne.w	80074be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007782:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007784:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007788:	428a      	cmp	r2, r1
 800778a:	f47f ae98 	bne.w	80074be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800778e:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007790:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007794:	401a      	ands	r2, r3
 8007796:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800779a:	f47f ae90 	bne.w	80074be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800779e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80077a0:	0852      	lsrs	r2, r2, #1
 80077a2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80077a6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80077a8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80077ac:	f47f ae87 	bne.w	80074be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80077b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077b2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80077b6:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 80077ba:	f47f ae80 	bne.w	80074be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80077be:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80077c0:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80077c4:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 80077c8:	f43f ae62 	beq.w	8007490 <HAL_RCC_OscConfig+0x2c>
 80077cc:	e677      	b.n	80074be <HAL_RCC_OscConfig+0x5a>
 80077ce:	bf00      	nop
 80077d0:	40023800 	.word	0x40023800
 80077d4:	42470000 	.word	0x42470000

080077d8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80077d8:	b538      	push	{r3, r4, r5, lr}
 80077da:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80077dc:	4604      	mov	r4, r0
 80077de:	b1c8      	cbz	r0, 8007814 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80077e0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80077e4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80077e8:	b91b      	cbnz	r3, 80077f2 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80077ea:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80077ee:	f7fa fab7 	bl	8001d60 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80077f2:	2302      	movs	r3, #2
 80077f4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80077f8:	1d21      	adds	r1, r4, #4
 80077fa:	6820      	ldr	r0, [r4, #0]
 80077fc:	f000 f9c6 	bl	8007b8c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8007800:	6862      	ldr	r2, [r4, #4]
 8007802:	6820      	ldr	r0, [r4, #0]
 8007804:	4629      	mov	r1, r5
 8007806:	f000 f9fc 	bl	8007c02 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800780a:	2301      	movs	r3, #1
 800780c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8007810:	2000      	movs	r0, #0
}
 8007812:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007814:	2001      	movs	r0, #1
 8007816:	e7fc      	b.n	8007812 <HAL_SDRAM_Init+0x3a>

08007818 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8007818:	b510      	push	{r4, lr}
 800781a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800781c:	f7fa fb18 	bl	8001e50 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8007820:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007824:	f000 fa23 	bl	8007c6e <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8007828:	2000      	movs	r0, #0
 800782a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800782e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8007832:	bd10      	pop	{r4, pc}

08007834 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8007834:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007836:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800783a:	2b02      	cmp	r3, #2
{
 800783c:	4605      	mov	r5, r0
 800783e:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007840:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8007842:	d012      	beq.n	800786a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8007844:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8007848:	2c01      	cmp	r4, #1
 800784a:	d10f      	bne.n	800786c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800784c:	2302      	movs	r3, #2
 800784e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007852:	6828      	ldr	r0, [r5, #0]
 8007854:	f000 fa1a 	bl	8007c8c <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007858:	6833      	ldr	r3, [r6, #0]
 800785a:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800785c:	bf06      	itte	eq
 800785e:	2305      	moveq	r3, #5
 8007860:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8007864:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007868:	2000      	movs	r0, #0
}
 800786a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800786c:	2001      	movs	r0, #1
 800786e:	e7fc      	b.n	800786a <HAL_SDRAM_SendCommand+0x36>

08007870 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007870:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007872:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007876:	2b02      	cmp	r3, #2
{
 8007878:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800787a:	b2d8      	uxtb	r0, r3
 800787c:	d00d      	beq.n	800789a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800787e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8007882:	2b01      	cmp	r3, #1
 8007884:	b2dd      	uxtb	r5, r3
 8007886:	d109      	bne.n	800789c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007888:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800788a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800788c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007890:	f000 fa22 	bl	8007cd8 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007894:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007898:	2000      	movs	r0, #0
}
 800789a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800789c:	2001      	movs	r0, #1
 800789e:	e7fc      	b.n	800789a <HAL_SDRAM_ProgramRefreshRate+0x2a>

080078a0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80078a0:	4770      	bx	lr
	...

080078a4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80078a4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80078a8:	2b01      	cmp	r3, #1
 80078aa:	d130      	bne.n	800790e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80078ac:	2302      	movs	r3, #2
 80078ae:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80078b2:	6803      	ldr	r3, [r0, #0]
 80078b4:	68da      	ldr	r2, [r3, #12]
 80078b6:	f042 0201 	orr.w	r2, r2, #1
 80078ba:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80078bc:	4a15      	ldr	r2, [pc, #84]	; (8007914 <HAL_TIM_Base_Start_IT+0x70>)
 80078be:	4293      	cmp	r3, r2
 80078c0:	d01a      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80078c6:	d017      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078c8:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80078cc:	4293      	cmp	r3, r2
 80078ce:	d013      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078d0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80078d4:	4293      	cmp	r3, r2
 80078d6:	d00f      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078d8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80078dc:	4293      	cmp	r3, r2
 80078de:	d00b      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078e0:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80078e4:	4293      	cmp	r3, r2
 80078e6:	d007      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078e8:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d003      	beq.n	80078f8 <HAL_TIM_Base_Start_IT+0x54>
 80078f0:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80078f4:	4293      	cmp	r3, r2
 80078f6:	d104      	bne.n	8007902 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80078f8:	689a      	ldr	r2, [r3, #8]
 80078fa:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80078fe:	2a06      	cmp	r2, #6
 8007900:	d003      	beq.n	800790a <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007902:	681a      	ldr	r2, [r3, #0]
 8007904:	f042 0201 	orr.w	r2, r2, #1
 8007908:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800790a:	2000      	movs	r0, #0
}
 800790c:	4770      	bx	lr
    return HAL_ERROR;
 800790e:	2001      	movs	r0, #1
 8007910:	4770      	bx	lr
 8007912:	bf00      	nop
 8007914:	40010000 	.word	0x40010000

08007918 <HAL_TIM_OC_DelayElapsedCallback>:
 8007918:	4770      	bx	lr

0800791a <HAL_TIM_IC_CaptureCallback>:
 800791a:	4770      	bx	lr

0800791c <HAL_TIM_PWM_PulseFinishedCallback>:
 800791c:	4770      	bx	lr

0800791e <HAL_TIM_TriggerCallback>:
 800791e:	4770      	bx	lr

08007920 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007920:	6803      	ldr	r3, [r0, #0]
 8007922:	691a      	ldr	r2, [r3, #16]
 8007924:	0791      	lsls	r1, r2, #30
{
 8007926:	b510      	push	{r4, lr}
 8007928:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800792a:	d50e      	bpl.n	800794a <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800792c:	68da      	ldr	r2, [r3, #12]
 800792e:	0792      	lsls	r2, r2, #30
 8007930:	d50b      	bpl.n	800794a <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007932:	f06f 0202 	mvn.w	r2, #2
 8007936:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007938:	2201      	movs	r2, #1
 800793a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800793c:	699b      	ldr	r3, [r3, #24]
 800793e:	079b      	lsls	r3, r3, #30
 8007940:	d077      	beq.n	8007a32 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007942:	f7ff ffea 	bl	800791a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007946:	2300      	movs	r3, #0
 8007948:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800794a:	6823      	ldr	r3, [r4, #0]
 800794c:	691a      	ldr	r2, [r3, #16]
 800794e:	0750      	lsls	r0, r2, #29
 8007950:	d510      	bpl.n	8007974 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007952:	68da      	ldr	r2, [r3, #12]
 8007954:	0751      	lsls	r1, r2, #29
 8007956:	d50d      	bpl.n	8007974 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007958:	f06f 0204 	mvn.w	r2, #4
 800795c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800795e:	2202      	movs	r2, #2
 8007960:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007962:	699b      	ldr	r3, [r3, #24]
 8007964:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007968:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800796a:	d068      	beq.n	8007a3e <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800796c:	f7ff ffd5 	bl	800791a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007970:	2300      	movs	r3, #0
 8007972:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007974:	6823      	ldr	r3, [r4, #0]
 8007976:	691a      	ldr	r2, [r3, #16]
 8007978:	0712      	lsls	r2, r2, #28
 800797a:	d50f      	bpl.n	800799c <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800797c:	68da      	ldr	r2, [r3, #12]
 800797e:	0710      	lsls	r0, r2, #28
 8007980:	d50c      	bpl.n	800799c <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007982:	f06f 0208 	mvn.w	r2, #8
 8007986:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007988:	2204      	movs	r2, #4
 800798a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800798c:	69db      	ldr	r3, [r3, #28]
 800798e:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007990:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007992:	d05a      	beq.n	8007a4a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007994:	f7ff ffc1 	bl	800791a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007998:	2300      	movs	r3, #0
 800799a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800799c:	6823      	ldr	r3, [r4, #0]
 800799e:	691a      	ldr	r2, [r3, #16]
 80079a0:	06d2      	lsls	r2, r2, #27
 80079a2:	d510      	bpl.n	80079c6 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80079a4:	68da      	ldr	r2, [r3, #12]
 80079a6:	06d0      	lsls	r0, r2, #27
 80079a8:	d50d      	bpl.n	80079c6 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80079aa:	f06f 0210 	mvn.w	r2, #16
 80079ae:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80079b0:	2208      	movs	r2, #8
 80079b2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80079b4:	69db      	ldr	r3, [r3, #28]
 80079b6:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80079ba:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80079bc:	d04b      	beq.n	8007a56 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80079be:	f7ff ffac 	bl	800791a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80079c2:	2300      	movs	r3, #0
 80079c4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80079c6:	6823      	ldr	r3, [r4, #0]
 80079c8:	691a      	ldr	r2, [r3, #16]
 80079ca:	07d1      	lsls	r1, r2, #31
 80079cc:	d508      	bpl.n	80079e0 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80079ce:	68da      	ldr	r2, [r3, #12]
 80079d0:	07d2      	lsls	r2, r2, #31
 80079d2:	d505      	bpl.n	80079e0 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80079d4:	f06f 0201 	mvn.w	r2, #1
 80079d8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80079da:	4620      	mov	r0, r4
 80079dc:	f7fa f812 	bl	8001a04 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80079e0:	6823      	ldr	r3, [r4, #0]
 80079e2:	691a      	ldr	r2, [r3, #16]
 80079e4:	0610      	lsls	r0, r2, #24
 80079e6:	d508      	bpl.n	80079fa <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80079e8:	68da      	ldr	r2, [r3, #12]
 80079ea:	0611      	lsls	r1, r2, #24
 80079ec:	d505      	bpl.n	80079fa <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80079ee:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80079f2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80079f4:	4620      	mov	r0, r4
 80079f6:	f000 f8c8 	bl	8007b8a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80079fa:	6823      	ldr	r3, [r4, #0]
 80079fc:	691a      	ldr	r2, [r3, #16]
 80079fe:	0652      	lsls	r2, r2, #25
 8007a00:	d508      	bpl.n	8007a14 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007a02:	68da      	ldr	r2, [r3, #12]
 8007a04:	0650      	lsls	r0, r2, #25
 8007a06:	d505      	bpl.n	8007a14 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007a08:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007a0c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007a0e:	4620      	mov	r0, r4
 8007a10:	f7ff ff85 	bl	800791e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007a14:	6823      	ldr	r3, [r4, #0]
 8007a16:	691a      	ldr	r2, [r3, #16]
 8007a18:	0691      	lsls	r1, r2, #26
 8007a1a:	d522      	bpl.n	8007a62 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007a1c:	68da      	ldr	r2, [r3, #12]
 8007a1e:	0692      	lsls	r2, r2, #26
 8007a20:	d51f      	bpl.n	8007a62 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007a22:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007a26:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007a28:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007a2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007a2e:	f000 b8ab 	b.w	8007b88 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a32:	f7ff ff71 	bl	8007918 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a36:	4620      	mov	r0, r4
 8007a38:	f7ff ff70 	bl	800791c <HAL_TIM_PWM_PulseFinishedCallback>
 8007a3c:	e783      	b.n	8007946 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a3e:	f7ff ff6b 	bl	8007918 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a42:	4620      	mov	r0, r4
 8007a44:	f7ff ff6a 	bl	800791c <HAL_TIM_PWM_PulseFinishedCallback>
 8007a48:	e792      	b.n	8007970 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a4a:	f7ff ff65 	bl	8007918 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a4e:	4620      	mov	r0, r4
 8007a50:	f7ff ff64 	bl	800791c <HAL_TIM_PWM_PulseFinishedCallback>
 8007a54:	e7a0      	b.n	8007998 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007a56:	f7ff ff5f 	bl	8007918 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007a5a:	4620      	mov	r0, r4
 8007a5c:	f7ff ff5e 	bl	800791c <HAL_TIM_PWM_PulseFinishedCallback>
 8007a60:	e7af      	b.n	80079c2 <HAL_TIM_IRQHandler+0xa2>
}
 8007a62:	bd10      	pop	{r4, pc}

08007a64 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a64:	4a30      	ldr	r2, [pc, #192]	; (8007b28 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8007a66:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a68:	4290      	cmp	r0, r2
 8007a6a:	d012      	beq.n	8007a92 <TIM_Base_SetConfig+0x2e>
 8007a6c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007a70:	d00f      	beq.n	8007a92 <TIM_Base_SetConfig+0x2e>
 8007a72:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007a76:	4290      	cmp	r0, r2
 8007a78:	d00b      	beq.n	8007a92 <TIM_Base_SetConfig+0x2e>
 8007a7a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a7e:	4290      	cmp	r0, r2
 8007a80:	d007      	beq.n	8007a92 <TIM_Base_SetConfig+0x2e>
 8007a82:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a86:	4290      	cmp	r0, r2
 8007a88:	d003      	beq.n	8007a92 <TIM_Base_SetConfig+0x2e>
 8007a8a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007a8e:	4290      	cmp	r0, r2
 8007a90:	d119      	bne.n	8007ac6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007a92:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007a94:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007a98:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007a9a:	4a23      	ldr	r2, [pc, #140]	; (8007b28 <TIM_Base_SetConfig+0xc4>)
 8007a9c:	4290      	cmp	r0, r2
 8007a9e:	d029      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007aa0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007aa4:	d026      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007aa6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007aaa:	4290      	cmp	r0, r2
 8007aac:	d022      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007aae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ab2:	4290      	cmp	r0, r2
 8007ab4:	d01e      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007ab6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007aba:	4290      	cmp	r0, r2
 8007abc:	d01a      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007abe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007ac2:	4290      	cmp	r0, r2
 8007ac4:	d016      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007ac6:	4a19      	ldr	r2, [pc, #100]	; (8007b2c <TIM_Base_SetConfig+0xc8>)
 8007ac8:	4290      	cmp	r0, r2
 8007aca:	d013      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007acc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ad0:	4290      	cmp	r0, r2
 8007ad2:	d00f      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007ad4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ad8:	4290      	cmp	r0, r2
 8007ada:	d00b      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007adc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8007ae0:	4290      	cmp	r0, r2
 8007ae2:	d007      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007ae4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007ae8:	4290      	cmp	r0, r2
 8007aea:	d003      	beq.n	8007af4 <TIM_Base_SetConfig+0x90>
 8007aec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007af0:	4290      	cmp	r0, r2
 8007af2:	d103      	bne.n	8007afc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007af4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007af6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007afa:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007afc:	694a      	ldr	r2, [r1, #20]
 8007afe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007b02:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007b04:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007b06:	688b      	ldr	r3, [r1, #8]
 8007b08:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007b0a:	680b      	ldr	r3, [r1, #0]
 8007b0c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007b0e:	4b06      	ldr	r3, [pc, #24]	; (8007b28 <TIM_Base_SetConfig+0xc4>)
 8007b10:	4298      	cmp	r0, r3
 8007b12:	d003      	beq.n	8007b1c <TIM_Base_SetConfig+0xb8>
 8007b14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007b18:	4298      	cmp	r0, r3
 8007b1a:	d101      	bne.n	8007b20 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007b1c:	690b      	ldr	r3, [r1, #16]
 8007b1e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007b20:	2301      	movs	r3, #1
 8007b22:	6143      	str	r3, [r0, #20]
}
 8007b24:	4770      	bx	lr
 8007b26:	bf00      	nop
 8007b28:	40010000 	.word	0x40010000
 8007b2c:	40014000 	.word	0x40014000

08007b30 <HAL_TIM_Base_Init>:
{
 8007b30:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007b32:	4604      	mov	r4, r0
 8007b34:	b330      	cbz	r0, 8007b84 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007b36:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007b3a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b3e:	b91b      	cbnz	r3, 8007b48 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007b40:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007b44:	f7ff feac 	bl	80078a0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007b48:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007b4a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007b4c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007b50:	1d21      	adds	r1, r4, #4
 8007b52:	f7ff ff87 	bl	8007a64 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007b56:	2301      	movs	r3, #1
 8007b58:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8007b5c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007b5e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8007b62:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8007b66:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007b6a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007b6e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007b72:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007b76:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8007b7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007b7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8007b82:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007b84:	2001      	movs	r0, #1
 8007b86:	e7fc      	b.n	8007b82 <HAL_TIM_Base_Init+0x52>

08007b88 <HAL_TIMEx_CommutCallback>:
 8007b88:	4770      	bx	lr

08007b8a <HAL_TIMEx_BreakCallback>:
 8007b8a:	4770      	bx	lr

08007b8c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007b90:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007b94:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007b96:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8007b9a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8007b9e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8007ba2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8007ba6:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007ba8:	b9a2      	cbnz	r2, 8007bd4 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007baa:	ea43 0209 	orr.w	r2, r3, r9
 8007bae:	432a      	orrs	r2, r5
 8007bb0:	ea42 0308 	orr.w	r3, r2, r8
 8007bb4:	6801      	ldr	r1, [r0, #0]
 8007bb6:	ea43 030e 	orr.w	r3, r3, lr
 8007bba:	ea43 030c 	orr.w	r3, r3, ip
 8007bbe:	433b      	orrs	r3, r7
 8007bc0:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8007bc4:	4333      	orrs	r3, r6
 8007bc6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8007bca:	430b      	orrs	r3, r1
 8007bcc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007bce:	2000      	movs	r0, #0
 8007bd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007bd4:	6802      	ldr	r2, [r0, #0]
 8007bd6:	ea43 0309 	orr.w	r3, r3, r9
 8007bda:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007bde:	4313      	orrs	r3, r2
 8007be0:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8007be2:	ea45 0308 	orr.w	r3, r5, r8
 8007be6:	6842      	ldr	r2, [r0, #4]
 8007be8:	ea43 030e 	orr.w	r3, r3, lr
 8007bec:	ea43 030c 	orr.w	r3, r3, ip
 8007bf0:	433b      	orrs	r3, r7
 8007bf2:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8007bf6:	4333      	orrs	r3, r6
 8007bf8:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8007bfc:	4313      	orrs	r3, r2
 8007bfe:	6043      	str	r3, [r0, #4]
 8007c00:	e7e5      	b.n	8007bce <FMC_SDRAM_Init+0x42>

08007c02 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c02:	68cb      	ldr	r3, [r1, #12]
 8007c04:	f103 3cff 	add.w	ip, r3, #4294967295
 8007c08:	694b      	ldr	r3, [r1, #20]
{
 8007c0a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c0c:	680f      	ldr	r7, [r1, #0]
 8007c0e:	684c      	ldr	r4, [r1, #4]
 8007c10:	688e      	ldr	r6, [r1, #8]
 8007c12:	690d      	ldr	r5, [r1, #16]
 8007c14:	6989      	ldr	r1, [r1, #24]
 8007c16:	3b01      	subs	r3, #1
 8007c18:	051b      	lsls	r3, r3, #20
 8007c1a:	3c01      	subs	r4, #1
 8007c1c:	3e01      	subs	r6, #1
 8007c1e:	3d01      	subs	r5, #1
 8007c20:	3901      	subs	r1, #1
 8007c22:	3f01      	subs	r7, #1
 8007c24:	0124      	lsls	r4, r4, #4
 8007c26:	0236      	lsls	r6, r6, #8
 8007c28:	042d      	lsls	r5, r5, #16
 8007c2a:	0609      	lsls	r1, r1, #24
 8007c2c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007c30:	b95a      	cbnz	r2, 8007c4a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c32:	433b      	orrs	r3, r7
 8007c34:	4323      	orrs	r3, r4
 8007c36:	6882      	ldr	r2, [r0, #8]
 8007c38:	4333      	orrs	r3, r6
 8007c3a:	432b      	orrs	r3, r5
 8007c3c:	430b      	orrs	r3, r1
 8007c3e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007c42:	4313      	orrs	r3, r2
 8007c44:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007c46:	2000      	movs	r0, #0
 8007c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c4a:	6882      	ldr	r2, [r0, #8]
 8007c4c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007c50:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8007c54:	431a      	orrs	r2, r3
 8007c56:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007c58:	ea44 0306 	orr.w	r3, r4, r6
 8007c5c:	68c2      	ldr	r2, [r0, #12]
 8007c5e:	433b      	orrs	r3, r7
 8007c60:	432b      	orrs	r3, r5
 8007c62:	430b      	orrs	r3, r1
 8007c64:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007c68:	4313      	orrs	r3, r2
 8007c6a:	60c3      	str	r3, [r0, #12]
 8007c6c:	e7eb      	b.n	8007c46 <FMC_SDRAM_Timing_Init+0x44>

08007c6e <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8007c6e:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8007c72:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8007c76:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8007c7a:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8007c7e:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8007c80:	2300      	movs	r3, #0
 8007c82:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8007c84:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8007c86:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8007c88:	4618      	mov	r0, r3
 8007c8a:	4770      	bx	lr

08007c8c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007c8c:	b570      	push	{r4, r5, r6, lr}
 8007c8e:	4604      	mov	r4, r0
 8007c90:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007c92:	6902      	ldr	r2, [r0, #16]
 8007c94:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007c98:	4303      	orrs	r3, r0
 8007c9a:	68c8      	ldr	r0, [r1, #12]
 8007c9c:	0d92      	lsrs	r2, r2, #22
 8007c9e:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007ca2:	0592      	lsls	r2, r2, #22
 8007ca4:	4313      	orrs	r3, r2
 8007ca6:	688a      	ldr	r2, [r1, #8]
 8007ca8:	3a01      	subs	r2, #1
 8007caa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007cae:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007cb0:	f7fd f83a 	bl	8004d28 <HAL_GetTick>
 8007cb4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007cb6:	69a3      	ldr	r3, [r4, #24]
 8007cb8:	f013 0320 	ands.w	r3, r3, #32
 8007cbc:	d101      	bne.n	8007cc2 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8007cbe:	4618      	mov	r0, r3
 8007cc0:	e003      	b.n	8007cca <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8007cc2:	1c6b      	adds	r3, r5, #1
 8007cc4:	d0f7      	beq.n	8007cb6 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007cc6:	b90d      	cbnz	r5, 8007ccc <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8007cc8:	2003      	movs	r0, #3
}
 8007cca:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007ccc:	f7fd f82c 	bl	8004d28 <HAL_GetTick>
 8007cd0:	1b80      	subs	r0, r0, r6
 8007cd2:	42a8      	cmp	r0, r5
 8007cd4:	d9ef      	bls.n	8007cb6 <FMC_SDRAM_SendCommand+0x2a>
 8007cd6:	e7f7      	b.n	8007cc8 <FMC_SDRAM_SendCommand+0x3c>

08007cd8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007cd8:	6943      	ldr	r3, [r0, #20]
 8007cda:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007cde:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8007ce2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007ce6:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8007ce8:	2000      	movs	r0, #0
 8007cea:	4770      	bx	lr

08007cec <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007cec:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007cee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007cf2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007cf4:	f001 fe3e 	bl	8009974 <xTaskGetSchedulerState>
 8007cf8:	2801      	cmp	r0, #1
 8007cfa:	d003      	beq.n	8007d04 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007cfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007d00:	f000 bbe0 	b.w	80084c4 <xPortSysTickHandler>
}
 8007d04:	bd08      	pop	{r3, pc}
	...

08007d08 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d08:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007d0c:	b92b      	cbnz	r3, 8007d1a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007d0e:	4b06      	ldr	r3, [pc, #24]	; (8007d28 <osKernelInitialize+0x20>)
 8007d10:	6818      	ldr	r0, [r3, #0]
 8007d12:	b928      	cbnz	r0, 8007d20 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007d14:	2201      	movs	r2, #1
 8007d16:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007d18:	4770      	bx	lr
    stat = osErrorISR;
 8007d1a:	f06f 0005 	mvn.w	r0, #5
 8007d1e:	4770      	bx	lr
    } else {
      stat = osError;
 8007d20:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007d24:	4770      	bx	lr
 8007d26:	bf00      	nop
 8007d28:	20001d0c 	.word	0x20001d0c

08007d2c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007d2c:	b510      	push	{r4, lr}
 8007d2e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007d32:	b95c      	cbnz	r4, 8007d4c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007d34:	4b08      	ldr	r3, [pc, #32]	; (8007d58 <osKernelStart+0x2c>)
 8007d36:	681a      	ldr	r2, [r3, #0]
 8007d38:	2a01      	cmp	r2, #1
 8007d3a:	d10a      	bne.n	8007d52 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007d3c:	4a07      	ldr	r2, [pc, #28]	; (8007d5c <osKernelStart+0x30>)
 8007d3e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007d40:	2202      	movs	r2, #2
 8007d42:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007d44:	f001 fcba 	bl	80096bc <vTaskStartScheduler>
      stat = osOK;
 8007d48:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007d4a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007d4c:	f06f 0005 	mvn.w	r0, #5
 8007d50:	e7fb      	b.n	8007d4a <osKernelStart+0x1e>
      stat = osError;
 8007d52:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007d56:	e7f8      	b.n	8007d4a <osKernelStart+0x1e>
 8007d58:	20001d0c 	.word	0x20001d0c
 8007d5c:	e000ed00 	.word	0xe000ed00

08007d60 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d62:	b087      	sub	sp, #28
 8007d64:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007d66:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d68:	460b      	mov	r3, r1
  hTask = NULL;
 8007d6a:	9205      	str	r2, [sp, #20]
 8007d6c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007d70:	b9d2      	cbnz	r2, 8007da8 <osThreadNew+0x48>
 8007d72:	b1c8      	cbz	r0, 8007da8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007d74:	2c00      	cmp	r4, #0
 8007d76:	d02f      	beq.n	8007dd8 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007d78:	69a5      	ldr	r5, [r4, #24]
 8007d7a:	2d00      	cmp	r5, #0
 8007d7c:	bf08      	it	eq
 8007d7e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007d80:	1e69      	subs	r1, r5, #1
 8007d82:	2937      	cmp	r1, #55	; 0x37
 8007d84:	46ac      	mov	ip, r5
 8007d86:	d82b      	bhi.n	8007de0 <osThreadNew+0x80>
 8007d88:	6861      	ldr	r1, [r4, #4]
 8007d8a:	07c9      	lsls	r1, r1, #31
 8007d8c:	d428      	bmi.n	8007de0 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007d8e:	6966      	ldr	r6, [r4, #20]
 8007d90:	b16e      	cbz	r6, 8007dae <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007d92:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d94:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007d98:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d9a:	b157      	cbz	r7, 8007db2 <osThreadNew+0x52>
 8007d9c:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007da0:	d902      	bls.n	8007da8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007da2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007da4:	b104      	cbz	r4, 8007da8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007da6:	b9ee      	cbnz	r6, 8007de4 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007da8:	9805      	ldr	r0, [sp, #20]
}
 8007daa:	b007      	add	sp, #28
 8007dac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007dae:	2280      	movs	r2, #128	; 0x80
 8007db0:	e7f0      	b.n	8007d94 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007db2:	f1be 0f00 	cmp.w	lr, #0
 8007db6:	d1f7      	bne.n	8007da8 <osThreadNew+0x48>
      if (mem == 0) {
 8007db8:	6924      	ldr	r4, [r4, #16]
 8007dba:	2c00      	cmp	r4, #0
 8007dbc:	d1f4      	bne.n	8007da8 <osThreadNew+0x48>
 8007dbe:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007dc0:	a905      	add	r1, sp, #20
 8007dc2:	e9cd c100 	strd	ip, r1, [sp]
 8007dc6:	b292      	uxth	r2, r2
 8007dc8:	4621      	mov	r1, r4
 8007dca:	f001 faf2 	bl	80093b2 <xTaskCreate>
 8007dce:	2801      	cmp	r0, #1
            hTask = NULL;
 8007dd0:	bf1c      	itt	ne
 8007dd2:	2300      	movne	r3, #0
 8007dd4:	9305      	strne	r3, [sp, #20]
 8007dd6:	e7e7      	b.n	8007da8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8007dd8:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007ddc:	2280      	movs	r2, #128	; 0x80
 8007dde:	e7ef      	b.n	8007dc0 <osThreadNew+0x60>
        return (NULL);
 8007de0:	4610      	mov	r0, r2
 8007de2:	e7e2      	b.n	8007daa <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007de4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007de8:	9500      	str	r5, [sp, #0]
 8007dea:	f001 faaa 	bl	8009342 <xTaskCreateStatic>
 8007dee:	9005      	str	r0, [sp, #20]
 8007df0:	e7da      	b.n	8007da8 <osThreadNew+0x48>

08007df2 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007df2:	b510      	push	{r4, lr}
 8007df4:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007df8:	b924      	cbnz	r4, 8007e04 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007dfa:	b110      	cbz	r0, 8007e02 <osDelay+0x10>
      vTaskDelay(ticks);
 8007dfc:	f001 fc1e 	bl	800963c <vTaskDelay>
    stat = osOK;
 8007e00:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8007e02:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007e04:	f06f 0005 	mvn.w	r0, #5
 8007e08:	e7fb      	b.n	8007e02 <osDelay+0x10>

08007e0a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007e0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e0c:	4604      	mov	r4, r0
 8007e0e:	460e      	mov	r6, r1
 8007e10:	4615      	mov	r5, r2
 8007e12:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007e16:	b11a      	cbz	r2, 8007e20 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007e18:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007e1a:	4620      	mov	r0, r4
 8007e1c:	b003      	add	sp, #12
 8007e1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007e20:	2800      	cmp	r0, #0
 8007e22:	d0f9      	beq.n	8007e18 <osSemaphoreNew+0xe>
 8007e24:	4288      	cmp	r0, r1
 8007e26:	d3f7      	bcc.n	8007e18 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8007e28:	b1e5      	cbz	r5, 8007e64 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007e2a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007e2e:	b1bb      	cbz	r3, 8007e60 <osSemaphoreNew+0x56>
 8007e30:	2f4f      	cmp	r7, #79	; 0x4f
 8007e32:	d9f1      	bls.n	8007e18 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007e34:	2801      	cmp	r0, #1
 8007e36:	d12a      	bne.n	8007e8e <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007e38:	2103      	movs	r1, #3
 8007e3a:	9100      	str	r1, [sp, #0]
 8007e3c:	4611      	mov	r1, r2
 8007e3e:	f000 fcea 	bl	8008816 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007e42:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007e44:	2800      	cmp	r0, #0
 8007e46:	d0e7      	beq.n	8007e18 <osSemaphoreNew+0xe>
 8007e48:	b1de      	cbz	r6, 8007e82 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007e4a:	2300      	movs	r3, #0
 8007e4c:	461a      	mov	r2, r3
 8007e4e:	4619      	mov	r1, r3
 8007e50:	f000 fd96 	bl	8008980 <xQueueGenericSend>
 8007e54:	2801      	cmp	r0, #1
 8007e56:	d014      	beq.n	8007e82 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8007e58:	4620      	mov	r0, r4
 8007e5a:	f001 f8d1 	bl	8009000 <vQueueDelete>
 8007e5e:	e7db      	b.n	8007e18 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007e60:	2f00      	cmp	r7, #0
 8007e62:	d1d9      	bne.n	8007e18 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007e64:	2c01      	cmp	r4, #1
 8007e66:	d105      	bne.n	8007e74 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8007e68:	2203      	movs	r2, #3
 8007e6a:	2100      	movs	r1, #0
 8007e6c:	4620      	mov	r0, r4
 8007e6e:	f000 fd20 	bl	80088b2 <xQueueGenericCreate>
 8007e72:	e7e6      	b.n	8007e42 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007e74:	4620      	mov	r0, r4
 8007e76:	4631      	mov	r1, r6
 8007e78:	f000 fd64 	bl	8008944 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007e7c:	4604      	mov	r4, r0
 8007e7e:	2800      	cmp	r0, #0
 8007e80:	d0ca      	beq.n	8007e18 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8007e82:	b955      	cbnz	r5, 8007e9a <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8007e84:	4629      	mov	r1, r5
 8007e86:	4620      	mov	r0, r4
 8007e88:	f001 f894 	bl	8008fb4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007e8c:	e7c5      	b.n	8007e1a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007e8e:	461a      	mov	r2, r3
 8007e90:	f000 fd36 	bl	8008900 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007e94:	4604      	mov	r4, r0
 8007e96:	2800      	cmp	r0, #0
 8007e98:	d0be      	beq.n	8007e18 <osSemaphoreNew+0xe>
          name = attr->name;
 8007e9a:	682d      	ldr	r5, [r5, #0]
 8007e9c:	e7f2      	b.n	8007e84 <osSemaphoreNew+0x7a>

08007e9e <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007e9e:	b513      	push	{r0, r1, r4, lr}
 8007ea0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007ea2:	b308      	cbz	r0, 8007ee8 <osSemaphoreAcquire+0x4a>
 8007ea4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007ea8:	b1b3      	cbz	r3, 8007ed8 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8007eaa:	b9e9      	cbnz	r1, 8007ee8 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007eac:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007eae:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007eb0:	f001 f831 	bl	8008f16 <xQueueReceiveFromISR>
 8007eb4:	2801      	cmp	r0, #1
 8007eb6:	d114      	bne.n	8007ee2 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007eb8:	9b01      	ldr	r3, [sp, #4]
 8007eba:	b913      	cbnz	r3, 8007ec2 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007ebc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007ebe:	b002      	add	sp, #8
 8007ec0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007ec2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ec6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007eca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007ece:	f3bf 8f4f 	dsb	sy
 8007ed2:	f3bf 8f6f 	isb	sy
 8007ed6:	e7f1      	b.n	8007ebc <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007ed8:	f000 ff5a 	bl	8008d90 <xQueueSemaphoreTake>
 8007edc:	2801      	cmp	r0, #1
 8007ede:	d0ed      	beq.n	8007ebc <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8007ee0:	b92c      	cbnz	r4, 8007eee <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8007ee2:	f06f 0002 	mvn.w	r0, #2
 8007ee6:	e7ea      	b.n	8007ebe <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8007ee8:	f06f 0003 	mvn.w	r0, #3
 8007eec:	e7e7      	b.n	8007ebe <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8007eee:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007ef2:	e7e4      	b.n	8007ebe <osSemaphoreAcquire+0x20>

08007ef4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007ef4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007ef6:	b310      	cbz	r0, 8007f3e <osSemaphoreRelease+0x4a>
 8007ef8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007efc:	b1b3      	cbz	r3, 8007f2c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8007efe:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007f00:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007f02:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007f04:	f000 fe51 	bl	8008baa <xQueueGiveFromISR>
 8007f08:	2801      	cmp	r0, #1
 8007f0a:	d115      	bne.n	8007f38 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8007f0c:	9b01      	ldr	r3, [sp, #4]
 8007f0e:	b913      	cbnz	r3, 8007f16 <osSemaphoreRelease+0x22>
  stat = osOK;
 8007f10:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8007f12:	b002      	add	sp, #8
 8007f14:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007f16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f22:	f3bf 8f4f 	dsb	sy
 8007f26:	f3bf 8f6f 	isb	sy
 8007f2a:	e7f1      	b.n	8007f10 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007f2c:	461a      	mov	r2, r3
 8007f2e:	4619      	mov	r1, r3
 8007f30:	f000 fd26 	bl	8008980 <xQueueGenericSend>
 8007f34:	2801      	cmp	r0, #1
 8007f36:	d0eb      	beq.n	8007f10 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007f38:	f06f 0002 	mvn.w	r0, #2
 8007f3c:	e7e9      	b.n	8007f12 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007f3e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f42:	e7e6      	b.n	8007f12 <osSemaphoreRelease+0x1e>

08007f44 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007f44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f46:	4605      	mov	r5, r0
 8007f48:	460e      	mov	r6, r1
 8007f4a:	4614      	mov	r4, r2
 8007f4c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007f50:	b11f      	cbz	r7, 8007f5a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007f52:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007f54:	4628      	mov	r0, r5
 8007f56:	b003      	add	sp, #12
 8007f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007f5a:	2800      	cmp	r0, #0
 8007f5c:	d0f9      	beq.n	8007f52 <osMessageQueueNew+0xe>
 8007f5e:	2900      	cmp	r1, #0
 8007f60:	d0f7      	beq.n	8007f52 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007f62:	b1da      	cbz	r2, 8007f9c <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007f64:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007f68:	b183      	cbz	r3, 8007f8c <osMessageQueueNew+0x48>
 8007f6a:	2a4f      	cmp	r2, #79	; 0x4f
 8007f6c:	d9f1      	bls.n	8007f52 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007f6e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007f70:	2a00      	cmp	r2, #0
 8007f72:	d0ee      	beq.n	8007f52 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007f74:	6966      	ldr	r6, [r4, #20]
 8007f76:	434d      	muls	r5, r1
 8007f78:	42ae      	cmp	r6, r5
 8007f7a:	d3ea      	bcc.n	8007f52 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007f7c:	9700      	str	r7, [sp, #0]
 8007f7e:	f000 fc4a 	bl	8008816 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007f82:	4605      	mov	r5, r0
 8007f84:	2800      	cmp	r0, #0
 8007f86:	d0e4      	beq.n	8007f52 <osMessageQueueNew+0xe>
        name = attr->name;
 8007f88:	6824      	ldr	r4, [r4, #0]
 8007f8a:	e011      	b.n	8007fb0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007f8c:	2a00      	cmp	r2, #0
 8007f8e:	d1e0      	bne.n	8007f52 <osMessageQueueNew+0xe>
 8007f90:	6923      	ldr	r3, [r4, #16]
 8007f92:	2b00      	cmp	r3, #0
 8007f94:	d1dd      	bne.n	8007f52 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007f96:	6963      	ldr	r3, [r4, #20]
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d1da      	bne.n	8007f52 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007f9c:	4628      	mov	r0, r5
 8007f9e:	2200      	movs	r2, #0
 8007fa0:	4631      	mov	r1, r6
 8007fa2:	f000 fc86 	bl	80088b2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007fa6:	4605      	mov	r5, r0
 8007fa8:	2800      	cmp	r0, #0
 8007faa:	d0d2      	beq.n	8007f52 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007fac:	2c00      	cmp	r4, #0
 8007fae:	d1eb      	bne.n	8007f88 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007fb0:	4621      	mov	r1, r4
 8007fb2:	4628      	mov	r0, r5
 8007fb4:	f000 fffe 	bl	8008fb4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007fb8:	e7cc      	b.n	8007f54 <osMessageQueueNew+0x10>

08007fba <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007fba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007fbc:	461c      	mov	r4, r3
 8007fbe:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007fc2:	b1c6      	cbz	r6, 8007ff6 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007fc4:	b318      	cbz	r0, 800800e <osMessageQueuePut+0x54>
 8007fc6:	b311      	cbz	r1, 800800e <osMessageQueuePut+0x54>
 8007fc8:	bb0b      	cbnz	r3, 800800e <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007fca:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007fcc:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007fce:	f000 fd8a 	bl	8008ae6 <xQueueGenericSendFromISR>
 8007fd2:	2801      	cmp	r0, #1
 8007fd4:	d118      	bne.n	8008008 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007fd6:	9b01      	ldr	r3, [sp, #4]
 8007fd8:	b913      	cbnz	r3, 8007fe0 <osMessageQueuePut+0x26>
  stat = osOK;
 8007fda:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007fdc:	b002      	add	sp, #8
 8007fde:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007fe0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007fe4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007fe8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007fec:	f3bf 8f4f 	dsb	sy
 8007ff0:	f3bf 8f6f 	isb	sy
 8007ff4:	e7f1      	b.n	8007fda <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007ff6:	b150      	cbz	r0, 800800e <osMessageQueuePut+0x54>
 8007ff8:	b149      	cbz	r1, 800800e <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007ffa:	4633      	mov	r3, r6
 8007ffc:	4622      	mov	r2, r4
 8007ffe:	f000 fcbf 	bl	8008980 <xQueueGenericSend>
 8008002:	2801      	cmp	r0, #1
 8008004:	d0e9      	beq.n	8007fda <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008006:	b92c      	cbnz	r4, 8008014 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008008:	f06f 0002 	mvn.w	r0, #2
 800800c:	e7e6      	b.n	8007fdc <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800800e:	f06f 0003 	mvn.w	r0, #3
 8008012:	e7e3      	b.n	8007fdc <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8008014:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008018:	e7e0      	b.n	8007fdc <osMessageQueuePut+0x22>

0800801a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800801a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800801c:	461c      	mov	r4, r3
 800801e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008022:	b1c3      	cbz	r3, 8008056 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008024:	b310      	cbz	r0, 800806c <osMessageQueueGet+0x52>
 8008026:	b309      	cbz	r1, 800806c <osMessageQueueGet+0x52>
 8008028:	bb04      	cbnz	r4, 800806c <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800802a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800802c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800802e:	f000 ff72 	bl	8008f16 <xQueueReceiveFromISR>
 8008032:	2801      	cmp	r0, #1
 8008034:	d117      	bne.n	8008066 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008036:	9b01      	ldr	r3, [sp, #4]
 8008038:	b913      	cbnz	r3, 8008040 <osMessageQueueGet+0x26>
  stat = osOK;
 800803a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800803c:	b003      	add	sp, #12
 800803e:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008040:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008044:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008048:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800804c:	f3bf 8f4f 	dsb	sy
 8008050:	f3bf 8f6f 	isb	sy
 8008054:	e7f1      	b.n	800803a <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008056:	b148      	cbz	r0, 800806c <osMessageQueueGet+0x52>
 8008058:	b141      	cbz	r1, 800806c <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800805a:	4622      	mov	r2, r4
 800805c:	f000 fdf9 	bl	8008c52 <xQueueReceive>
 8008060:	2801      	cmp	r0, #1
 8008062:	d0ea      	beq.n	800803a <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8008064:	b92c      	cbnz	r4, 8008072 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8008066:	f06f 0002 	mvn.w	r0, #2
 800806a:	e7e7      	b.n	800803c <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800806c:	f06f 0003 	mvn.w	r0, #3
 8008070:	e7e4      	b.n	800803c <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8008072:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008076:	e7e1      	b.n	800803c <osMessageQueueGet+0x22>

08008078 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008078:	4b03      	ldr	r3, [pc, #12]	; (8008088 <vApplicationGetIdleTaskMemory+0x10>)
 800807a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800807c:	4b03      	ldr	r3, [pc, #12]	; (800808c <vApplicationGetIdleTaskMemory+0x14>)
 800807e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008080:	2380      	movs	r3, #128	; 0x80
 8008082:	6013      	str	r3, [r2, #0]
}
 8008084:	4770      	bx	lr
 8008086:	bf00      	nop
 8008088:	20001cac 	.word	0x20001cac
 800808c:	20001aac 	.word	0x20001aac

08008090 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008090:	4b03      	ldr	r3, [pc, #12]	; (80080a0 <vApplicationGetTimerTaskMemory+0x10>)
 8008092:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008094:	4b03      	ldr	r3, [pc, #12]	; (80080a4 <vApplicationGetTimerTaskMemory+0x14>)
 8008096:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008098:	f44f 7380 	mov.w	r3, #256	; 0x100
 800809c:	6013      	str	r3, [r2, #0]
}
 800809e:	4770      	bx	lr
 80080a0:	20002110 	.word	0x20002110
 80080a4:	20001d10 	.word	0x20001d10

080080a8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80080a8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80080aa:	4b0f      	ldr	r3, [pc, #60]	; (80080e8 <prvInsertBlockIntoFreeList+0x40>)
 80080ac:	461a      	mov	r2, r3
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	4283      	cmp	r3, r0
 80080b2:	d3fb      	bcc.n	80080ac <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80080b4:	6854      	ldr	r4, [r2, #4]
 80080b6:	1911      	adds	r1, r2, r4
 80080b8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80080ba:	bf01      	itttt	eq
 80080bc:	6841      	ldreq	r1, [r0, #4]
 80080be:	4610      	moveq	r0, r2
 80080c0:	1909      	addeq	r1, r1, r4
 80080c2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80080c4:	6844      	ldr	r4, [r0, #4]
 80080c6:	1901      	adds	r1, r0, r4
 80080c8:	428b      	cmp	r3, r1
 80080ca:	d107      	bne.n	80080dc <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80080cc:	4907      	ldr	r1, [pc, #28]	; (80080ec <prvInsertBlockIntoFreeList+0x44>)
 80080ce:	6809      	ldr	r1, [r1, #0]
 80080d0:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80080d2:	bf1f      	itttt	ne
 80080d4:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80080d6:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80080d8:	1909      	addne	r1, r1, r4
 80080da:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80080dc:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80080de:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80080e0:	bf18      	it	ne
 80080e2:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80080e4:	bd10      	pop	{r4, pc}
 80080e6:	bf00      	nop
 80080e8:	2000a188 	.word	0x2000a188
 80080ec:	20002170 	.word	0x20002170

080080f0 <pvPortMalloc>:
{
 80080f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080f4:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80080f6:	f001 f989 	bl	800940c <vTaskSuspendAll>
		if( pxEnd == NULL )
 80080fa:	4842      	ldr	r0, [pc, #264]	; (8008204 <pvPortMalloc+0x114>)
 80080fc:	4d42      	ldr	r5, [pc, #264]	; (8008208 <pvPortMalloc+0x118>)
 80080fe:	6803      	ldr	r3, [r0, #0]
 8008100:	bb0b      	cbnz	r3, 8008146 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008102:	4942      	ldr	r1, [pc, #264]	; (800820c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008104:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008106:	bf1f      	itttt	ne
 8008108:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800810a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800810e:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8008112:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008114:	bf14      	ite	ne
 8008116:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008118:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800811c:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800811e:	4e3c      	ldr	r6, [pc, #240]	; (8008210 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008120:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008122:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008126:	2300      	movs	r3, #0
 8008128:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800812a:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800812c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008130:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008132:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008136:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008138:	4a36      	ldr	r2, [pc, #216]	; (8008214 <pvPortMalloc+0x124>)
 800813a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800813c:	4a36      	ldr	r2, [pc, #216]	; (8008218 <pvPortMalloc+0x128>)
 800813e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008140:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008144:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008146:	682f      	ldr	r7, [r5, #0]
 8008148:	4227      	tst	r7, r4
 800814a:	d155      	bne.n	80081f8 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800814c:	2c00      	cmp	r4, #0
 800814e:	d046      	beq.n	80081de <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008150:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008154:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008156:	bf1c      	itt	ne
 8008158:	f023 0307 	bicne.w	r3, r3, #7
 800815c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800815e:	2b00      	cmp	r3, #0
 8008160:	d04a      	beq.n	80081f8 <pvPortMalloc+0x108>
 8008162:	4c2d      	ldr	r4, [pc, #180]	; (8008218 <pvPortMalloc+0x128>)
 8008164:	6826      	ldr	r6, [r4, #0]
 8008166:	429e      	cmp	r6, r3
 8008168:	d346      	bcc.n	80081f8 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800816a:	4a29      	ldr	r2, [pc, #164]	; (8008210 <pvPortMalloc+0x120>)
 800816c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800816e:	6869      	ldr	r1, [r5, #4]
 8008170:	4299      	cmp	r1, r3
 8008172:	d204      	bcs.n	800817e <pvPortMalloc+0x8e>
 8008174:	f8d5 c000 	ldr.w	ip, [r5]
 8008178:	f1bc 0f00 	cmp.w	ip, #0
 800817c:	d115      	bne.n	80081aa <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800817e:	6800      	ldr	r0, [r0, #0]
 8008180:	42a8      	cmp	r0, r5
 8008182:	d039      	beq.n	80081f8 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008184:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008186:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008188:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800818c:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800818e:	2910      	cmp	r1, #16
 8008190:	d912      	bls.n	80081b8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008192:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008194:	0742      	lsls	r2, r0, #29
 8008196:	d00b      	beq.n	80081b0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008198:	f04f 0350 	mov.w	r3, #80	; 0x50
 800819c:	f383 8811 	msr	BASEPRI, r3
 80081a0:	f3bf 8f6f 	isb	sy
 80081a4:	f3bf 8f4f 	dsb	sy
 80081a8:	e7fe      	b.n	80081a8 <pvPortMalloc+0xb8>
 80081aa:	462a      	mov	r2, r5
 80081ac:	4665      	mov	r5, ip
 80081ae:	e7de      	b.n	800816e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80081b0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80081b2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80081b4:	f7ff ff78 	bl	80080a8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80081b8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80081ba:	4916      	ldr	r1, [pc, #88]	; (8008214 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 80081bc:	4a17      	ldr	r2, [pc, #92]	; (800821c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80081be:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80081c0:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80081c2:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80081c4:	2300      	movs	r3, #0
 80081c6:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80081c8:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80081ca:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80081cc:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80081ce:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80081d2:	bf38      	it	cc
 80081d4:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80081d6:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80081da:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80081dc:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80081de:	f001 f9b9 	bl	8009554 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80081e2:	0763      	lsls	r3, r4, #29
 80081e4:	d00a      	beq.n	80081fc <pvPortMalloc+0x10c>
 80081e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081ea:	f383 8811 	msr	BASEPRI, r3
 80081ee:	f3bf 8f6f 	isb	sy
 80081f2:	f3bf 8f4f 	dsb	sy
 80081f6:	e7fe      	b.n	80081f6 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80081f8:	2400      	movs	r4, #0
 80081fa:	e7f0      	b.n	80081de <pvPortMalloc+0xee>
}
 80081fc:	4620      	mov	r0, r4
 80081fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008202:	bf00      	nop
 8008204:	20002170 	.word	0x20002170
 8008208:	2000a174 	.word	0x2000a174
 800820c:	20002174 	.word	0x20002174
 8008210:	2000a188 	.word	0x2000a188
 8008214:	2000a17c 	.word	0x2000a17c
 8008218:	2000a178 	.word	0x2000a178
 800821c:	2000a180 	.word	0x2000a180

08008220 <vPortFree>:
{
 8008220:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008222:	4604      	mov	r4, r0
 8008224:	b390      	cbz	r0, 800828c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008226:	4a1a      	ldr	r2, [pc, #104]	; (8008290 <vPortFree+0x70>)
 8008228:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800822c:	6812      	ldr	r2, [r2, #0]
 800822e:	4213      	tst	r3, r2
 8008230:	d108      	bne.n	8008244 <vPortFree+0x24>
 8008232:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008236:	f383 8811 	msr	BASEPRI, r3
 800823a:	f3bf 8f6f 	isb	sy
 800823e:	f3bf 8f4f 	dsb	sy
 8008242:	e7fe      	b.n	8008242 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008244:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008248:	b141      	cbz	r1, 800825c <vPortFree+0x3c>
 800824a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800824e:	f383 8811 	msr	BASEPRI, r3
 8008252:	f3bf 8f6f 	isb	sy
 8008256:	f3bf 8f4f 	dsb	sy
 800825a:	e7fe      	b.n	800825a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800825c:	ea23 0302 	bic.w	r3, r3, r2
 8008260:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008264:	f001 f8d2 	bl	800940c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008268:	4a0a      	ldr	r2, [pc, #40]	; (8008294 <vPortFree+0x74>)
 800826a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800826e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008270:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008274:	440b      	add	r3, r1
 8008276:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008278:	f7ff ff16 	bl	80080a8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800827c:	4a06      	ldr	r2, [pc, #24]	; (8008298 <vPortFree+0x78>)
 800827e:	6813      	ldr	r3, [r2, #0]
}
 8008280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008284:	3301      	adds	r3, #1
 8008286:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008288:	f001 b964 	b.w	8009554 <xTaskResumeAll>
}
 800828c:	bd10      	pop	{r4, pc}
 800828e:	bf00      	nop
 8008290:	2000a174 	.word	0x2000a174
 8008294:	2000a178 	.word	0x2000a178
 8008298:	2000a184 	.word	0x2000a184

0800829c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800829c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80082a0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80082a4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80082a8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80082aa:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80082ac:	2300      	movs	r3, #0
 80082ae:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80082b0:	4770      	bx	lr

080082b2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80082b2:	2300      	movs	r3, #0
 80082b4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80082b6:	4770      	bx	lr

080082b8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80082b8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80082ba:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80082bc:	689a      	ldr	r2, [r3, #8]
 80082be:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80082c0:	689a      	ldr	r2, [r3, #8]
 80082c2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80082c4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80082c6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80082c8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80082ca:	3301      	adds	r3, #1
 80082cc:	6003      	str	r3, [r0, #0]
}
 80082ce:	4770      	bx	lr

080082d0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80082d0:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80082d2:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80082d4:	1c63      	adds	r3, r4, #1
 80082d6:	d10a      	bne.n	80082ee <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80082d8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80082da:	685a      	ldr	r2, [r3, #4]
 80082dc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80082de:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80082e0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80082e2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80082e4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80082e6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80082e8:	3301      	adds	r3, #1
 80082ea:	6003      	str	r3, [r0, #0]
}
 80082ec:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80082ee:	f100 0208 	add.w	r2, r0, #8
 80082f2:	4613      	mov	r3, r2
 80082f4:	6852      	ldr	r2, [r2, #4]
 80082f6:	6815      	ldr	r5, [r2, #0]
 80082f8:	42a5      	cmp	r5, r4
 80082fa:	d9fa      	bls.n	80082f2 <vListInsert+0x22>
 80082fc:	e7ed      	b.n	80082da <vListInsert+0xa>

080082fe <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80082fe:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008302:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008304:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008306:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008308:	6859      	ldr	r1, [r3, #4]
 800830a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800830c:	bf08      	it	eq
 800830e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008310:	2200      	movs	r2, #0
 8008312:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008314:	681a      	ldr	r2, [r3, #0]
 8008316:	3a01      	subs	r2, #1
 8008318:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800831a:	6818      	ldr	r0, [r3, #0]
}
 800831c:	4770      	bx	lr
	...

08008320 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008320:	4808      	ldr	r0, [pc, #32]	; (8008344 <prvPortStartFirstTask+0x24>)
 8008322:	6800      	ldr	r0, [r0, #0]
 8008324:	6800      	ldr	r0, [r0, #0]
 8008326:	f380 8808 	msr	MSP, r0
 800832a:	f04f 0000 	mov.w	r0, #0
 800832e:	f380 8814 	msr	CONTROL, r0
 8008332:	b662      	cpsie	i
 8008334:	b661      	cpsie	f
 8008336:	f3bf 8f4f 	dsb	sy
 800833a:	f3bf 8f6f 	isb	sy
 800833e:	df00      	svc	0
 8008340:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008342:	0000      	.short	0x0000
 8008344:	e000ed08 	.word	0xe000ed08

08008348 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008348:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008358 <vPortEnableVFP+0x10>
 800834c:	6801      	ldr	r1, [r0, #0]
 800834e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008352:	6001      	str	r1, [r0, #0]
 8008354:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008356:	0000      	.short	0x0000
 8008358:	e000ed88 	.word	0xe000ed88

0800835c <prvTaskExitError>:
{
 800835c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800835e:	2300      	movs	r3, #0
 8008360:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008362:	4b0d      	ldr	r3, [pc, #52]	; (8008398 <prvTaskExitError+0x3c>)
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	3301      	adds	r3, #1
 8008368:	d008      	beq.n	800837c <prvTaskExitError+0x20>
 800836a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800836e:	f383 8811 	msr	BASEPRI, r3
 8008372:	f3bf 8f6f 	isb	sy
 8008376:	f3bf 8f4f 	dsb	sy
 800837a:	e7fe      	b.n	800837a <prvTaskExitError+0x1e>
 800837c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008380:	f383 8811 	msr	BASEPRI, r3
 8008384:	f3bf 8f6f 	isb	sy
 8008388:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800838c:	9b01      	ldr	r3, [sp, #4]
 800838e:	2b00      	cmp	r3, #0
 8008390:	d0fc      	beq.n	800838c <prvTaskExitError+0x30>
}
 8008392:	b002      	add	sp, #8
 8008394:	4770      	bx	lr
 8008396:	bf00      	nop
 8008398:	2000005c 	.word	0x2000005c

0800839c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800839c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80083a0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80083a4:	4b07      	ldr	r3, [pc, #28]	; (80083c4 <pxPortInitialiseStack+0x28>)
 80083a6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80083aa:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80083ae:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80083b2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80083b6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80083ba:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80083be:	3844      	subs	r0, #68	; 0x44
 80083c0:	4770      	bx	lr
 80083c2:	bf00      	nop
 80083c4:	0800835d 	.word	0x0800835d
	...

080083d0 <SVC_Handler>:
	__asm volatile (
 80083d0:	4b07      	ldr	r3, [pc, #28]	; (80083f0 <pxCurrentTCBConst2>)
 80083d2:	6819      	ldr	r1, [r3, #0]
 80083d4:	6808      	ldr	r0, [r1, #0]
 80083d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083da:	f380 8809 	msr	PSP, r0
 80083de:	f3bf 8f6f 	isb	sy
 80083e2:	f04f 0000 	mov.w	r0, #0
 80083e6:	f380 8811 	msr	BASEPRI, r0
 80083ea:	4770      	bx	lr
 80083ec:	f3af 8000 	nop.w

080083f0 <pxCurrentTCBConst2>:
 80083f0:	2000a1d8 	.word	0x2000a1d8

080083f4 <vPortEnterCritical>:
 80083f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083f8:	f383 8811 	msr	BASEPRI, r3
 80083fc:	f3bf 8f6f 	isb	sy
 8008400:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008404:	4a0a      	ldr	r2, [pc, #40]	; (8008430 <vPortEnterCritical+0x3c>)
 8008406:	6813      	ldr	r3, [r2, #0]
 8008408:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800840a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800840c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800840e:	d10e      	bne.n	800842e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008410:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008414:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008418:	b2db      	uxtb	r3, r3
 800841a:	b143      	cbz	r3, 800842e <vPortEnterCritical+0x3a>
 800841c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008420:	f383 8811 	msr	BASEPRI, r3
 8008424:	f3bf 8f6f 	isb	sy
 8008428:	f3bf 8f4f 	dsb	sy
 800842c:	e7fe      	b.n	800842c <vPortEnterCritical+0x38>
}
 800842e:	4770      	bx	lr
 8008430:	2000005c 	.word	0x2000005c

08008434 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008434:	4a08      	ldr	r2, [pc, #32]	; (8008458 <vPortExitCritical+0x24>)
 8008436:	6813      	ldr	r3, [r2, #0]
 8008438:	b943      	cbnz	r3, 800844c <vPortExitCritical+0x18>
 800843a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800843e:	f383 8811 	msr	BASEPRI, r3
 8008442:	f3bf 8f6f 	isb	sy
 8008446:	f3bf 8f4f 	dsb	sy
 800844a:	e7fe      	b.n	800844a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800844c:	3b01      	subs	r3, #1
 800844e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008450:	b90b      	cbnz	r3, 8008456 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008452:	f383 8811 	msr	BASEPRI, r3
}
 8008456:	4770      	bx	lr
 8008458:	2000005c 	.word	0x2000005c
 800845c:	00000000 	.word	0x00000000

08008460 <PendSV_Handler>:
	__asm volatile
 8008460:	f3ef 8009 	mrs	r0, PSP
 8008464:	f3bf 8f6f 	isb	sy
 8008468:	4b15      	ldr	r3, [pc, #84]	; (80084c0 <pxCurrentTCBConst>)
 800846a:	681a      	ldr	r2, [r3, #0]
 800846c:	f01e 0f10 	tst.w	lr, #16
 8008470:	bf08      	it	eq
 8008472:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008476:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800847a:	6010      	str	r0, [r2, #0]
 800847c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008480:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008484:	f380 8811 	msr	BASEPRI, r0
 8008488:	f3bf 8f4f 	dsb	sy
 800848c:	f3bf 8f6f 	isb	sy
 8008490:	f001 f962 	bl	8009758 <vTaskSwitchContext>
 8008494:	f04f 0000 	mov.w	r0, #0
 8008498:	f380 8811 	msr	BASEPRI, r0
 800849c:	bc09      	pop	{r0, r3}
 800849e:	6819      	ldr	r1, [r3, #0]
 80084a0:	6808      	ldr	r0, [r1, #0]
 80084a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084a6:	f01e 0f10 	tst.w	lr, #16
 80084aa:	bf08      	it	eq
 80084ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80084b0:	f380 8809 	msr	PSP, r0
 80084b4:	f3bf 8f6f 	isb	sy
 80084b8:	4770      	bx	lr
 80084ba:	bf00      	nop
 80084bc:	f3af 8000 	nop.w

080084c0 <pxCurrentTCBConst>:
 80084c0:	2000a1d8 	.word	0x2000a1d8

080084c4 <xPortSysTickHandler>:
{
 80084c4:	b508      	push	{r3, lr}
	__asm volatile
 80084c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084ca:	f383 8811 	msr	BASEPRI, r3
 80084ce:	f3bf 8f6f 	isb	sy
 80084d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80084d6:	f000 ffa7 	bl	8009428 <xTaskIncrementTick>
 80084da:	b128      	cbz	r0, 80084e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80084dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80084e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80084e8:	2300      	movs	r3, #0
 80084ea:	f383 8811 	msr	BASEPRI, r3
}
 80084ee:	bd08      	pop	{r3, pc}

080084f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80084f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80084f4:	2300      	movs	r3, #0
 80084f6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80084f8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80084fa:	4b05      	ldr	r3, [pc, #20]	; (8008510 <vPortSetupTimerInterrupt+0x20>)
 80084fc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	fbb3 f3f1 	udiv	r3, r3, r1
 8008506:	3b01      	subs	r3, #1
 8008508:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800850a:	2307      	movs	r3, #7
 800850c:	6113      	str	r3, [r2, #16]
}
 800850e:	4770      	bx	lr
 8008510:	20000050 	.word	0x20000050

08008514 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008514:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008518:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800851a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800851e:	4a3a      	ldr	r2, [pc, #232]	; (8008608 <xPortStartScheduler+0xf4>)
 8008520:	4291      	cmp	r1, r2
 8008522:	d108      	bne.n	8008536 <xPortStartScheduler+0x22>
	__asm volatile
 8008524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008528:	f383 8811 	msr	BASEPRI, r3
 800852c:	f3bf 8f6f 	isb	sy
 8008530:	f3bf 8f4f 	dsb	sy
 8008534:	e7fe      	b.n	8008534 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008536:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800853a:	4b34      	ldr	r3, [pc, #208]	; (800860c <xPortStartScheduler+0xf8>)
 800853c:	429a      	cmp	r2, r3
 800853e:	d108      	bne.n	8008552 <xPortStartScheduler+0x3e>
 8008540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008544:	f383 8811 	msr	BASEPRI, r3
 8008548:	f3bf 8f6f 	isb	sy
 800854c:	f3bf 8f4f 	dsb	sy
 8008550:	e7fe      	b.n	8008550 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008552:	4b2f      	ldr	r3, [pc, #188]	; (8008610 <xPortStartScheduler+0xfc>)
 8008554:	781a      	ldrb	r2, [r3, #0]
 8008556:	b2d2      	uxtb	r2, r2
 8008558:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800855a:	22ff      	movs	r2, #255	; 0xff
 800855c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800855e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008560:	4a2c      	ldr	r2, [pc, #176]	; (8008614 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008562:	b2db      	uxtb	r3, r3
 8008564:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008568:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800856c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008570:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008572:	4a29      	ldr	r2, [pc, #164]	; (8008618 <xPortStartScheduler+0x104>)
 8008574:	2307      	movs	r3, #7
 8008576:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008578:	2100      	movs	r1, #0
 800857a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800857e:	0600      	lsls	r0, r0, #24
 8008580:	f103 34ff 	add.w	r4, r3, #4294967295
 8008584:	d40c      	bmi.n	80085a0 <xPortStartScheduler+0x8c>
 8008586:	b111      	cbz	r1, 800858e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008588:	2b03      	cmp	r3, #3
 800858a:	6013      	str	r3, [r2, #0]
 800858c:	d011      	beq.n	80085b2 <xPortStartScheduler+0x9e>
 800858e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008592:	f383 8811 	msr	BASEPRI, r3
 8008596:	f3bf 8f6f 	isb	sy
 800859a:	f3bf 8f4f 	dsb	sy
 800859e:	e7fe      	b.n	800859e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80085a0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80085a4:	005b      	lsls	r3, r3, #1
 80085a6:	b2db      	uxtb	r3, r3
 80085a8:	f88d 3003 	strb.w	r3, [sp, #3]
 80085ac:	2101      	movs	r1, #1
 80085ae:	4623      	mov	r3, r4
 80085b0:	e7e3      	b.n	800857a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80085b2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80085b6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80085b8:	9b01      	ldr	r3, [sp, #4]
 80085ba:	4a15      	ldr	r2, [pc, #84]	; (8008610 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80085bc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80085c0:	b2db      	uxtb	r3, r3
 80085c2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80085c4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80085c8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80085cc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80085d0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80085d4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80085d8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 80085dc:	f7ff ff88 	bl	80084f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80085e0:	4b0e      	ldr	r3, [pc, #56]	; (800861c <xPortStartScheduler+0x108>)
 80085e2:	2500      	movs	r5, #0
 80085e4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80085e6:	f7ff feaf 	bl	8008348 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80085ea:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 80085ee:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80085f2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 80085f6:	f7ff fe93 	bl	8008320 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80085fa:	f001 f8ad 	bl	8009758 <vTaskSwitchContext>
	prvTaskExitError();
 80085fe:	f7ff fead 	bl	800835c <prvTaskExitError>
}
 8008602:	4628      	mov	r0, r5
 8008604:	b003      	add	sp, #12
 8008606:	bd30      	pop	{r4, r5, pc}
 8008608:	410fc271 	.word	0x410fc271
 800860c:	410fc270 	.word	0x410fc270
 8008610:	e000e400 	.word	0xe000e400
 8008614:	2000a190 	.word	0x2000a190
 8008618:	2000a194 	.word	0x2000a194
 800861c:	2000005c 	.word	0x2000005c

08008620 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008620:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008624:	2b0f      	cmp	r3, #15
 8008626:	d90e      	bls.n	8008646 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008628:	4a11      	ldr	r2, [pc, #68]	; (8008670 <vPortValidateInterruptPriority+0x50>)
 800862a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800862c:	4a11      	ldr	r2, [pc, #68]	; (8008674 <vPortValidateInterruptPriority+0x54>)
 800862e:	7812      	ldrb	r2, [r2, #0]
 8008630:	429a      	cmp	r2, r3
 8008632:	d908      	bls.n	8008646 <vPortValidateInterruptPriority+0x26>
 8008634:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008638:	f383 8811 	msr	BASEPRI, r3
 800863c:	f3bf 8f6f 	isb	sy
 8008640:	f3bf 8f4f 	dsb	sy
 8008644:	e7fe      	b.n	8008644 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008646:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800864a:	4a0b      	ldr	r2, [pc, #44]	; (8008678 <vPortValidateInterruptPriority+0x58>)
 800864c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008650:	6812      	ldr	r2, [r2, #0]
 8008652:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008656:	4293      	cmp	r3, r2
 8008658:	d908      	bls.n	800866c <vPortValidateInterruptPriority+0x4c>
 800865a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800865e:	f383 8811 	msr	BASEPRI, r3
 8008662:	f3bf 8f6f 	isb	sy
 8008666:	f3bf 8f4f 	dsb	sy
 800866a:	e7fe      	b.n	800866a <vPortValidateInterruptPriority+0x4a>
	}
 800866c:	4770      	bx	lr
 800866e:	bf00      	nop
 8008670:	e000e3f0 	.word	0xe000e3f0
 8008674:	2000a190 	.word	0x2000a190
 8008678:	2000a194 	.word	0x2000a194

0800867c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800867c:	b510      	push	{r4, lr}
 800867e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008680:	f7ff feb8 	bl	80083f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008684:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008686:	f7ff fed5 	bl	8008434 <vPortExitCritical>

	return xReturn;
}
 800868a:	fab4 f084 	clz	r0, r4
 800868e:	0940      	lsrs	r0, r0, #5
 8008690:	bd10      	pop	{r4, pc}

08008692 <prvCopyDataToQueue>:
{
 8008692:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008694:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008696:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008698:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800869a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800869c:	b952      	cbnz	r2, 80086b4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800869e:	6807      	ldr	r7, [r0, #0]
 80086a0:	bb47      	cbnz	r7, 80086f4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80086a2:	6880      	ldr	r0, [r0, #8]
 80086a4:	f001 f9b8 	bl	8009a18 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80086a8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80086aa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80086ac:	3601      	adds	r6, #1
 80086ae:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80086b0:	4628      	mov	r0, r5
 80086b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80086b4:	b965      	cbnz	r5, 80086d0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80086b6:	6840      	ldr	r0, [r0, #4]
 80086b8:	f014 fb7e 	bl	801cdb8 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80086bc:	6863      	ldr	r3, [r4, #4]
 80086be:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80086c0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80086c2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80086c4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80086c6:	4293      	cmp	r3, r2
 80086c8:	d3f0      	bcc.n	80086ac <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80086ca:	6823      	ldr	r3, [r4, #0]
 80086cc:	6063      	str	r3, [r4, #4]
 80086ce:	e7ed      	b.n	80086ac <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80086d0:	68c0      	ldr	r0, [r0, #12]
 80086d2:	f014 fb71 	bl	801cdb8 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80086d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80086d8:	68e3      	ldr	r3, [r4, #12]
 80086da:	4251      	negs	r1, r2
 80086dc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80086de:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80086e0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80086e2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80086e4:	bf3e      	ittt	cc
 80086e6:	68a3      	ldrcc	r3, [r4, #8]
 80086e8:	185b      	addcc	r3, r3, r1
 80086ea:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80086ec:	2d02      	cmp	r5, #2
 80086ee:	d101      	bne.n	80086f4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80086f0:	b116      	cbz	r6, 80086f8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 80086f2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 80086f4:	2500      	movs	r5, #0
 80086f6:	e7d9      	b.n	80086ac <prvCopyDataToQueue+0x1a>
 80086f8:	4635      	mov	r5, r6
 80086fa:	e7d7      	b.n	80086ac <prvCopyDataToQueue+0x1a>

080086fc <prvCopyDataFromQueue>:
{
 80086fc:	4603      	mov	r3, r0
 80086fe:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008700:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008702:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008704:	b16a      	cbz	r2, 8008722 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008706:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008708:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800870a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800870c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800870e:	bf28      	it	cs
 8008710:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008712:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008714:	bf28      	it	cs
 8008716:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008718:	68d9      	ldr	r1, [r3, #12]
}
 800871a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800871e:	f014 bb4b 	b.w	801cdb8 <memcpy>
}
 8008722:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008726:	4770      	bx	lr

08008728 <prvUnlockQueue>:
{
 8008728:	b570      	push	{r4, r5, r6, lr}
 800872a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800872c:	f7ff fe62 	bl	80083f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008730:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008734:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008738:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800873a:	2d00      	cmp	r5, #0
 800873c:	dc14      	bgt.n	8008768 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800873e:	23ff      	movs	r3, #255	; 0xff
 8008740:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008744:	f7ff fe76 	bl	8008434 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008748:	f7ff fe54 	bl	80083f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800874c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008750:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008754:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008756:	2d00      	cmp	r5, #0
 8008758:	dc12      	bgt.n	8008780 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800875a:	23ff      	movs	r3, #255	; 0xff
 800875c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008760:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008764:	f7ff be66 	b.w	8008434 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008768:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800876a:	2b00      	cmp	r3, #0
 800876c:	d0e7      	beq.n	800873e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800876e:	4630      	mov	r0, r6
 8008770:	f001 f86e 	bl	8009850 <xTaskRemoveFromEventList>
 8008774:	b108      	cbz	r0, 800877a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008776:	f001 f8f7 	bl	8009968 <vTaskMissedYield>
			--cTxLock;
 800877a:	3d01      	subs	r5, #1
 800877c:	b26d      	sxtb	r5, r5
 800877e:	e7dc      	b.n	800873a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008780:	6923      	ldr	r3, [r4, #16]
 8008782:	2b00      	cmp	r3, #0
 8008784:	d0e9      	beq.n	800875a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008786:	4630      	mov	r0, r6
 8008788:	f001 f862 	bl	8009850 <xTaskRemoveFromEventList>
 800878c:	b108      	cbz	r0, 8008792 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800878e:	f001 f8eb 	bl	8009968 <vTaskMissedYield>
				--cRxLock;
 8008792:	3d01      	subs	r5, #1
 8008794:	b26d      	sxtb	r5, r5
 8008796:	e7de      	b.n	8008756 <prvUnlockQueue+0x2e>

08008798 <xQueueGenericReset>:
{
 8008798:	b538      	push	{r3, r4, r5, lr}
 800879a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800879c:	4604      	mov	r4, r0
 800879e:	b940      	cbnz	r0, 80087b2 <xQueueGenericReset+0x1a>
 80087a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087a4:	f383 8811 	msr	BASEPRI, r3
 80087a8:	f3bf 8f6f 	isb	sy
 80087ac:	f3bf 8f4f 	dsb	sy
 80087b0:	e7fe      	b.n	80087b0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80087b2:	f7ff fe1f 	bl	80083f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087b6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80087ba:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80087bc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087be:	434b      	muls	r3, r1
 80087c0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087c2:	1a5b      	subs	r3, r3, r1
 80087c4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087c6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087c8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80087ca:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80087cc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80087ce:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80087d0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80087d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80087d8:	b9a5      	cbnz	r5, 8008804 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80087da:	6923      	ldr	r3, [r4, #16]
 80087dc:	b173      	cbz	r3, 80087fc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80087de:	f104 0010 	add.w	r0, r4, #16
 80087e2:	f001 f835 	bl	8009850 <xTaskRemoveFromEventList>
 80087e6:	b148      	cbz	r0, 80087fc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80087e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087f4:	f3bf 8f4f 	dsb	sy
 80087f8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80087fc:	f7ff fe1a 	bl	8008434 <vPortExitCritical>
}
 8008800:	2001      	movs	r0, #1
 8008802:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008804:	f104 0010 	add.w	r0, r4, #16
 8008808:	f7ff fd48 	bl	800829c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800880c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008810:	f7ff fd44 	bl	800829c <vListInitialise>
 8008814:	e7f2      	b.n	80087fc <xQueueGenericReset+0x64>

08008816 <xQueueGenericCreateStatic>:
	{
 8008816:	b513      	push	{r0, r1, r4, lr}
 8008818:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800881a:	b940      	cbnz	r0, 800882e <xQueueGenericCreateStatic+0x18>
 800881c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008820:	f383 8811 	msr	BASEPRI, r3
 8008824:	f3bf 8f6f 	isb	sy
 8008828:	f3bf 8f4f 	dsb	sy
 800882c:	e7fe      	b.n	800882c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800882e:	b943      	cbnz	r3, 8008842 <xQueueGenericCreateStatic+0x2c>
 8008830:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008834:	f383 8811 	msr	BASEPRI, r3
 8008838:	f3bf 8f6f 	isb	sy
 800883c:	f3bf 8f4f 	dsb	sy
 8008840:	e7fe      	b.n	8008840 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008842:	b14a      	cbz	r2, 8008858 <xQueueGenericCreateStatic+0x42>
 8008844:	b991      	cbnz	r1, 800886c <xQueueGenericCreateStatic+0x56>
 8008846:	f04f 0350 	mov.w	r3, #80	; 0x50
 800884a:	f383 8811 	msr	BASEPRI, r3
 800884e:	f3bf 8f6f 	isb	sy
 8008852:	f3bf 8f4f 	dsb	sy
 8008856:	e7fe      	b.n	8008856 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008858:	b141      	cbz	r1, 800886c <xQueueGenericCreateStatic+0x56>
 800885a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800885e:	f383 8811 	msr	BASEPRI, r3
 8008862:	f3bf 8f6f 	isb	sy
 8008866:	f3bf 8f4f 	dsb	sy
 800886a:	e7fe      	b.n	800886a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800886c:	2350      	movs	r3, #80	; 0x50
 800886e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008870:	9b01      	ldr	r3, [sp, #4]
 8008872:	2b50      	cmp	r3, #80	; 0x50
 8008874:	d008      	beq.n	8008888 <xQueueGenericCreateStatic+0x72>
 8008876:	f04f 0350 	mov.w	r3, #80	; 0x50
 800887a:	f383 8811 	msr	BASEPRI, r3
 800887e:	f3bf 8f6f 	isb	sy
 8008882:	f3bf 8f4f 	dsb	sy
 8008886:	e7fe      	b.n	8008886 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008888:	2900      	cmp	r1, #0
 800888a:	bf08      	it	eq
 800888c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800888e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008890:	6022      	str	r2, [r4, #0]
 8008892:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008894:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008898:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800889c:	4619      	mov	r1, r3
 800889e:	4620      	mov	r0, r4
 80088a0:	f7ff ff7a 	bl	8008798 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80088a4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80088a8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80088ac:	4620      	mov	r0, r4
 80088ae:	b002      	add	sp, #8
 80088b0:	bd10      	pop	{r4, pc}

080088b2 <xQueueGenericCreate>:
	{
 80088b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088b4:	460d      	mov	r5, r1
 80088b6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80088b8:	4606      	mov	r6, r0
 80088ba:	b940      	cbnz	r0, 80088ce <xQueueGenericCreate+0x1c>
 80088bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088c0:	f383 8811 	msr	BASEPRI, r3
 80088c4:	f3bf 8f6f 	isb	sy
 80088c8:	f3bf 8f4f 	dsb	sy
 80088cc:	e7fe      	b.n	80088cc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088ce:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80088d0:	3050      	adds	r0, #80	; 0x50
 80088d2:	f7ff fc0d 	bl	80080f0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80088d6:	4604      	mov	r4, r0
 80088d8:	b170      	cbz	r0, 80088f8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80088da:	2300      	movs	r3, #0
 80088dc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80088e0:	b165      	cbz	r5, 80088fc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80088e2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80088e6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80088ea:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80088ec:	2101      	movs	r1, #1
 80088ee:	4620      	mov	r0, r4
 80088f0:	f7ff ff52 	bl	8008798 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80088f4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80088f8:	4620      	mov	r0, r4
 80088fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80088fc:	4603      	mov	r3, r0
 80088fe:	e7f2      	b.n	80088e6 <xQueueGenericCreate+0x34>

08008900 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008900:	b513      	push	{r0, r1, r4, lr}
 8008902:	4613      	mov	r3, r2
 8008904:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008906:	b940      	cbnz	r0, 800891a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008908:	f04f 0350 	mov.w	r3, #80	; 0x50
 800890c:	f383 8811 	msr	BASEPRI, r3
 8008910:	f3bf 8f6f 	isb	sy
 8008914:	f3bf 8f4f 	dsb	sy
 8008918:	e7fe      	b.n	8008918 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800891a:	4288      	cmp	r0, r1
 800891c:	d208      	bcs.n	8008930 <xQueueCreateCountingSemaphoreStatic+0x30>
 800891e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008922:	f383 8811 	msr	BASEPRI, r3
 8008926:	f3bf 8f6f 	isb	sy
 800892a:	f3bf 8f4f 	dsb	sy
 800892e:	e7fe      	b.n	800892e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008930:	2202      	movs	r2, #2
 8008932:	9200      	str	r2, [sp, #0]
 8008934:	2200      	movs	r2, #0
 8008936:	4611      	mov	r1, r2
 8008938:	f7ff ff6d 	bl	8008816 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800893c:	b100      	cbz	r0, 8008940 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800893e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008940:	b002      	add	sp, #8
 8008942:	bd10      	pop	{r4, pc}

08008944 <xQueueCreateCountingSemaphore>:
	{
 8008944:	b510      	push	{r4, lr}
 8008946:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008948:	b940      	cbnz	r0, 800895c <xQueueCreateCountingSemaphore+0x18>
 800894a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800894e:	f383 8811 	msr	BASEPRI, r3
 8008952:	f3bf 8f6f 	isb	sy
 8008956:	f3bf 8f4f 	dsb	sy
 800895a:	e7fe      	b.n	800895a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800895c:	4288      	cmp	r0, r1
 800895e:	d208      	bcs.n	8008972 <xQueueCreateCountingSemaphore+0x2e>
 8008960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008964:	f383 8811 	msr	BASEPRI, r3
 8008968:	f3bf 8f6f 	isb	sy
 800896c:	f3bf 8f4f 	dsb	sy
 8008970:	e7fe      	b.n	8008970 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008972:	2202      	movs	r2, #2
 8008974:	2100      	movs	r1, #0
 8008976:	f7ff ff9c 	bl	80088b2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800897a:	b100      	cbz	r0, 800897e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800897c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800897e:	bd10      	pop	{r4, pc}

08008980 <xQueueGenericSend>:
{
 8008980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008984:	b085      	sub	sp, #20
 8008986:	4688      	mov	r8, r1
 8008988:	9201      	str	r2, [sp, #4]
 800898a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800898c:	4604      	mov	r4, r0
 800898e:	b940      	cbnz	r0, 80089a2 <xQueueGenericSend+0x22>
 8008990:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008994:	f383 8811 	msr	BASEPRI, r3
 8008998:	f3bf 8f6f 	isb	sy
 800899c:	f3bf 8f4f 	dsb	sy
 80089a0:	e7fe      	b.n	80089a0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80089a2:	b951      	cbnz	r1, 80089ba <xQueueGenericSend+0x3a>
 80089a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80089a6:	b143      	cbz	r3, 80089ba <xQueueGenericSend+0x3a>
 80089a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ac:	f383 8811 	msr	BASEPRI, r3
 80089b0:	f3bf 8f6f 	isb	sy
 80089b4:	f3bf 8f4f 	dsb	sy
 80089b8:	e7fe      	b.n	80089b8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80089ba:	2f02      	cmp	r7, #2
 80089bc:	d10b      	bne.n	80089d6 <xQueueGenericSend+0x56>
 80089be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80089c0:	2b01      	cmp	r3, #1
 80089c2:	d008      	beq.n	80089d6 <xQueueGenericSend+0x56>
 80089c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089c8:	f383 8811 	msr	BASEPRI, r3
 80089cc:	f3bf 8f6f 	isb	sy
 80089d0:	f3bf 8f4f 	dsb	sy
 80089d4:	e7fe      	b.n	80089d4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80089d6:	f000 ffcd 	bl	8009974 <xTaskGetSchedulerState>
 80089da:	4606      	mov	r6, r0
 80089dc:	b950      	cbnz	r0, 80089f4 <xQueueGenericSend+0x74>
 80089de:	9b01      	ldr	r3, [sp, #4]
 80089e0:	b14b      	cbz	r3, 80089f6 <xQueueGenericSend+0x76>
 80089e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089e6:	f383 8811 	msr	BASEPRI, r3
 80089ea:	f3bf 8f6f 	isb	sy
 80089ee:	f3bf 8f4f 	dsb	sy
 80089f2:	e7fe      	b.n	80089f2 <xQueueGenericSend+0x72>
 80089f4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80089f6:	f04f 0900 	mov.w	r9, #0
 80089fa:	e037      	b.n	8008a6c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80089fc:	9d01      	ldr	r5, [sp, #4]
 80089fe:	b91d      	cbnz	r5, 8008a08 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008a00:	f7ff fd18 	bl	8008434 <vPortExitCritical>
			return errQUEUE_FULL;
 8008a04:	2000      	movs	r0, #0
 8008a06:	e052      	b.n	8008aae <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008a08:	b916      	cbnz	r6, 8008a10 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008a0a:	a802      	add	r0, sp, #8
 8008a0c:	f000 ff64 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008a10:	f7ff fd10 	bl	8008434 <vPortExitCritical>
		vTaskSuspendAll();
 8008a14:	f000 fcfa 	bl	800940c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008a18:	f7ff fcec 	bl	80083f4 <vPortEnterCritical>
 8008a1c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008a20:	2bff      	cmp	r3, #255	; 0xff
 8008a22:	bf08      	it	eq
 8008a24:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008a28:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008a2c:	2bff      	cmp	r3, #255	; 0xff
 8008a2e:	bf08      	it	eq
 8008a30:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008a34:	f7ff fcfe 	bl	8008434 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008a38:	a901      	add	r1, sp, #4
 8008a3a:	a802      	add	r0, sp, #8
 8008a3c:	f000 ff58 	bl	80098f0 <xTaskCheckForTimeOut>
 8008a40:	2800      	cmp	r0, #0
 8008a42:	d14a      	bne.n	8008ada <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008a44:	f7ff fcd6 	bl	80083f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008a48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008a4a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008a4c:	429a      	cmp	r2, r3
 8008a4e:	d131      	bne.n	8008ab4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008a50:	f7ff fcf0 	bl	8008434 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008a54:	9901      	ldr	r1, [sp, #4]
 8008a56:	f104 0010 	add.w	r0, r4, #16
 8008a5a:	f000 fec1 	bl	80097e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008a5e:	4620      	mov	r0, r4
 8008a60:	f7ff fe62 	bl	8008728 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008a64:	f000 fd76 	bl	8009554 <xTaskResumeAll>
 8008a68:	b360      	cbz	r0, 8008ac4 <xQueueGenericSend+0x144>
 8008a6a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008a6c:	f7ff fcc2 	bl	80083f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008a70:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008a72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008a74:	429a      	cmp	r2, r3
 8008a76:	d301      	bcc.n	8008a7c <xQueueGenericSend+0xfc>
 8008a78:	2f02      	cmp	r7, #2
 8008a7a:	d1bf      	bne.n	80089fc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a7c:	463a      	mov	r2, r7
 8008a7e:	4641      	mov	r1, r8
 8008a80:	4620      	mov	r0, r4
 8008a82:	f7ff fe06 	bl	8008692 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008a88:	b11b      	cbz	r3, 8008a92 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a8a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a8e:	f000 fedf 	bl	8009850 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008a92:	b148      	cbz	r0, 8008aa8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008a94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008aa0:	f3bf 8f4f 	dsb	sy
 8008aa4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008aa8:	f7ff fcc4 	bl	8008434 <vPortExitCritical>
				return pdPASS;
 8008aac:	2001      	movs	r0, #1
}
 8008aae:	b005      	add	sp, #20
 8008ab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008ab4:	f7ff fcbe 	bl	8008434 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008ab8:	4620      	mov	r0, r4
 8008aba:	f7ff fe35 	bl	8008728 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008abe:	f000 fd49 	bl	8009554 <xTaskResumeAll>
 8008ac2:	e7d2      	b.n	8008a6a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008ac4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ac8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008acc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ad0:	f3bf 8f4f 	dsb	sy
 8008ad4:	f3bf 8f6f 	isb	sy
 8008ad8:	e7c7      	b.n	8008a6a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008ada:	4620      	mov	r0, r4
 8008adc:	f7ff fe24 	bl	8008728 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008ae0:	f000 fd38 	bl	8009554 <xTaskResumeAll>
 8008ae4:	e78e      	b.n	8008a04 <xQueueGenericSend+0x84>

08008ae6 <xQueueGenericSendFromISR>:
{
 8008ae6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008aea:	4689      	mov	r9, r1
 8008aec:	4690      	mov	r8, r2
 8008aee:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008af0:	4604      	mov	r4, r0
 8008af2:	b940      	cbnz	r0, 8008b06 <xQueueGenericSendFromISR+0x20>
 8008af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af8:	f383 8811 	msr	BASEPRI, r3
 8008afc:	f3bf 8f6f 	isb	sy
 8008b00:	f3bf 8f4f 	dsb	sy
 8008b04:	e7fe      	b.n	8008b04 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b06:	b951      	cbnz	r1, 8008b1e <xQueueGenericSendFromISR+0x38>
 8008b08:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008b0a:	b143      	cbz	r3, 8008b1e <xQueueGenericSendFromISR+0x38>
 8008b0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b10:	f383 8811 	msr	BASEPRI, r3
 8008b14:	f3bf 8f6f 	isb	sy
 8008b18:	f3bf 8f4f 	dsb	sy
 8008b1c:	e7fe      	b.n	8008b1c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008b1e:	2f02      	cmp	r7, #2
 8008b20:	d10b      	bne.n	8008b3a <xQueueGenericSendFromISR+0x54>
 8008b22:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008b24:	2b01      	cmp	r3, #1
 8008b26:	d008      	beq.n	8008b3a <xQueueGenericSendFromISR+0x54>
 8008b28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b2c:	f383 8811 	msr	BASEPRI, r3
 8008b30:	f3bf 8f6f 	isb	sy
 8008b34:	f3bf 8f4f 	dsb	sy
 8008b38:	e7fe      	b.n	8008b38 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008b3a:	f7ff fd71 	bl	8008620 <vPortValidateInterruptPriority>
	__asm volatile
 8008b3e:	f3ef 8611 	mrs	r6, BASEPRI
 8008b42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b46:	f383 8811 	msr	BASEPRI, r3
 8008b4a:	f3bf 8f6f 	isb	sy
 8008b4e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008b52:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008b54:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008b56:	429a      	cmp	r2, r3
 8008b58:	d301      	bcc.n	8008b5e <xQueueGenericSendFromISR+0x78>
 8008b5a:	2f02      	cmp	r7, #2
 8008b5c:	d123      	bne.n	8008ba6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b5e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b64:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008b66:	463a      	mov	r2, r7
 8008b68:	4649      	mov	r1, r9
 8008b6a:	4620      	mov	r0, r4
 8008b6c:	f7ff fd91 	bl	8008692 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008b70:	1c6b      	adds	r3, r5, #1
 8008b72:	d113      	bne.n	8008b9c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008b76:	b90b      	cbnz	r3, 8008b7c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008b78:	2001      	movs	r0, #1
 8008b7a:	e00b      	b.n	8008b94 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b7c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008b80:	f000 fe66 	bl	8009850 <xTaskRemoveFromEventList>
 8008b84:	2800      	cmp	r0, #0
 8008b86:	d0f7      	beq.n	8008b78 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008b88:	f1b8 0f00 	cmp.w	r8, #0
 8008b8c:	d0f4      	beq.n	8008b78 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008b8e:	2001      	movs	r0, #1
 8008b90:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008b94:	f386 8811 	msr	BASEPRI, r6
}
 8008b98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008b9c:	3501      	adds	r5, #1
 8008b9e:	b26d      	sxtb	r5, r5
 8008ba0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008ba4:	e7e8      	b.n	8008b78 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008ba6:	2000      	movs	r0, #0
 8008ba8:	e7f4      	b.n	8008b94 <xQueueGenericSendFromISR+0xae>

08008baa <xQueueGiveFromISR>:
{
 8008baa:	b570      	push	{r4, r5, r6, lr}
 8008bac:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008bae:	4604      	mov	r4, r0
 8008bb0:	b940      	cbnz	r0, 8008bc4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008bb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bb6:	f383 8811 	msr	BASEPRI, r3
 8008bba:	f3bf 8f6f 	isb	sy
 8008bbe:	f3bf 8f4f 	dsb	sy
 8008bc2:	e7fe      	b.n	8008bc2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008bc4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008bc6:	b143      	cbz	r3, 8008bda <xQueueGiveFromISR+0x30>
 8008bc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bcc:	f383 8811 	msr	BASEPRI, r3
 8008bd0:	f3bf 8f6f 	isb	sy
 8008bd4:	f3bf 8f4f 	dsb	sy
 8008bd8:	e7fe      	b.n	8008bd8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008bda:	6803      	ldr	r3, [r0, #0]
 8008bdc:	b953      	cbnz	r3, 8008bf4 <xQueueGiveFromISR+0x4a>
 8008bde:	6883      	ldr	r3, [r0, #8]
 8008be0:	b143      	cbz	r3, 8008bf4 <xQueueGiveFromISR+0x4a>
 8008be2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008be6:	f383 8811 	msr	BASEPRI, r3
 8008bea:	f3bf 8f6f 	isb	sy
 8008bee:	f3bf 8f4f 	dsb	sy
 8008bf2:	e7fe      	b.n	8008bf2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008bf4:	f7ff fd14 	bl	8008620 <vPortValidateInterruptPriority>
	__asm volatile
 8008bf8:	f3ef 8611 	mrs	r6, BASEPRI
 8008bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c00:	f383 8811 	msr	BASEPRI, r3
 8008c04:	f3bf 8f6f 	isb	sy
 8008c08:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008c0c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008c0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008c10:	4293      	cmp	r3, r2
 8008c12:	d91c      	bls.n	8008c4e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008c14:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008c18:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008c1a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008c1c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008c1e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008c20:	d110      	bne.n	8008c44 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008c22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008c24:	b90b      	cbnz	r3, 8008c2a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008c26:	2001      	movs	r0, #1
 8008c28:	e009      	b.n	8008c3e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008c2a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008c2e:	f000 fe0f 	bl	8009850 <xTaskRemoveFromEventList>
 8008c32:	2800      	cmp	r0, #0
 8008c34:	d0f7      	beq.n	8008c26 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008c36:	2d00      	cmp	r5, #0
 8008c38:	d0f5      	beq.n	8008c26 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008c3a:	2001      	movs	r0, #1
 8008c3c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008c3e:	f386 8811 	msr	BASEPRI, r6
}
 8008c42:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008c44:	3301      	adds	r3, #1
 8008c46:	b25b      	sxtb	r3, r3
 8008c48:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008c4c:	e7eb      	b.n	8008c26 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008c4e:	2000      	movs	r0, #0
 8008c50:	e7f5      	b.n	8008c3e <xQueueGiveFromISR+0x94>

08008c52 <xQueueReceive>:
{
 8008c52:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008c56:	460f      	mov	r7, r1
 8008c58:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008c5a:	4604      	mov	r4, r0
 8008c5c:	b940      	cbnz	r0, 8008c70 <xQueueReceive+0x1e>
	__asm volatile
 8008c5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c62:	f383 8811 	msr	BASEPRI, r3
 8008c66:	f3bf 8f6f 	isb	sy
 8008c6a:	f3bf 8f4f 	dsb	sy
 8008c6e:	e7fe      	b.n	8008c6e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008c70:	b951      	cbnz	r1, 8008c88 <xQueueReceive+0x36>
 8008c72:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008c74:	b143      	cbz	r3, 8008c88 <xQueueReceive+0x36>
 8008c76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c7a:	f383 8811 	msr	BASEPRI, r3
 8008c7e:	f3bf 8f6f 	isb	sy
 8008c82:	f3bf 8f4f 	dsb	sy
 8008c86:	e7fe      	b.n	8008c86 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008c88:	f000 fe74 	bl	8009974 <xTaskGetSchedulerState>
 8008c8c:	4606      	mov	r6, r0
 8008c8e:	b950      	cbnz	r0, 8008ca6 <xQueueReceive+0x54>
 8008c90:	9b01      	ldr	r3, [sp, #4]
 8008c92:	b14b      	cbz	r3, 8008ca8 <xQueueReceive+0x56>
 8008c94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c98:	f383 8811 	msr	BASEPRI, r3
 8008c9c:	f3bf 8f6f 	isb	sy
 8008ca0:	f3bf 8f4f 	dsb	sy
 8008ca4:	e7fe      	b.n	8008ca4 <xQueueReceive+0x52>
 8008ca6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008ca8:	f04f 0800 	mov.w	r8, #0
 8008cac:	e03d      	b.n	8008d2a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008cae:	9d01      	ldr	r5, [sp, #4]
 8008cb0:	b91d      	cbnz	r5, 8008cba <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008cb2:	f7ff fbbf 	bl	8008434 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008cb6:	2000      	movs	r0, #0
 8008cb8:	e056      	b.n	8008d68 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008cba:	b916      	cbnz	r6, 8008cc2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008cbc:	a802      	add	r0, sp, #8
 8008cbe:	f000 fe0b 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008cc2:	f7ff fbb7 	bl	8008434 <vPortExitCritical>
		vTaskSuspendAll();
 8008cc6:	f000 fba1 	bl	800940c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008cca:	f7ff fb93 	bl	80083f4 <vPortEnterCritical>
 8008cce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008cd2:	2bff      	cmp	r3, #255	; 0xff
 8008cd4:	bf08      	it	eq
 8008cd6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008cda:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008cde:	2bff      	cmp	r3, #255	; 0xff
 8008ce0:	bf08      	it	eq
 8008ce2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008ce6:	f7ff fba5 	bl	8008434 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008cea:	a901      	add	r1, sp, #4
 8008cec:	a802      	add	r0, sp, #8
 8008cee:	f000 fdff 	bl	80098f0 <xTaskCheckForTimeOut>
 8008cf2:	2800      	cmp	r0, #0
 8008cf4:	d141      	bne.n	8008d7a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008cf6:	4620      	mov	r0, r4
 8008cf8:	f7ff fcc0 	bl	800867c <prvIsQueueEmpty>
 8008cfc:	b3b8      	cbz	r0, 8008d6e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008cfe:	9901      	ldr	r1, [sp, #4]
 8008d00:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008d04:	f000 fd6c 	bl	80097e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008d08:	4620      	mov	r0, r4
 8008d0a:	f7ff fd0d 	bl	8008728 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008d0e:	f000 fc21 	bl	8009554 <xTaskResumeAll>
 8008d12:	b948      	cbnz	r0, 8008d28 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008d14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d20:	f3bf 8f4f 	dsb	sy
 8008d24:	f3bf 8f6f 	isb	sy
 8008d28:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008d2a:	f7ff fb63 	bl	80083f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008d2e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008d30:	2d00      	cmp	r5, #0
 8008d32:	d0bc      	beq.n	8008cae <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008d34:	4639      	mov	r1, r7
 8008d36:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008d38:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008d3a:	f7ff fcdf 	bl	80086fc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008d3e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008d40:	6923      	ldr	r3, [r4, #16]
 8008d42:	b173      	cbz	r3, 8008d62 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008d44:	f104 0010 	add.w	r0, r4, #16
 8008d48:	f000 fd82 	bl	8009850 <xTaskRemoveFromEventList>
 8008d4c:	b148      	cbz	r0, 8008d62 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8008d4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d5a:	f3bf 8f4f 	dsb	sy
 8008d5e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008d62:	f7ff fb67 	bl	8008434 <vPortExitCritical>
				return pdPASS;
 8008d66:	2001      	movs	r0, #1
}
 8008d68:	b004      	add	sp, #16
 8008d6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008d6e:	4620      	mov	r0, r4
 8008d70:	f7ff fcda 	bl	8008728 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008d74:	f000 fbee 	bl	8009554 <xTaskResumeAll>
 8008d78:	e7d6      	b.n	8008d28 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008d7a:	4620      	mov	r0, r4
 8008d7c:	f7ff fcd4 	bl	8008728 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008d80:	f000 fbe8 	bl	8009554 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d84:	4620      	mov	r0, r4
 8008d86:	f7ff fc79 	bl	800867c <prvIsQueueEmpty>
 8008d8a:	2800      	cmp	r0, #0
 8008d8c:	d0cc      	beq.n	8008d28 <xQueueReceive+0xd6>
 8008d8e:	e792      	b.n	8008cb6 <xQueueReceive+0x64>

08008d90 <xQueueSemaphoreTake>:
{
 8008d90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d92:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008d94:	4604      	mov	r4, r0
{
 8008d96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008d98:	b940      	cbnz	r0, 8008dac <xQueueSemaphoreTake+0x1c>
 8008d9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d9e:	f383 8811 	msr	BASEPRI, r3
 8008da2:	f3bf 8f6f 	isb	sy
 8008da6:	f3bf 8f4f 	dsb	sy
 8008daa:	e7fe      	b.n	8008daa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008dac:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008dae:	b145      	cbz	r5, 8008dc2 <xQueueSemaphoreTake+0x32>
 8008db0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db4:	f383 8811 	msr	BASEPRI, r3
 8008db8:	f3bf 8f6f 	isb	sy
 8008dbc:	f3bf 8f4f 	dsb	sy
 8008dc0:	e7fe      	b.n	8008dc0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008dc2:	f000 fdd7 	bl	8009974 <xTaskGetSchedulerState>
 8008dc6:	4606      	mov	r6, r0
 8008dc8:	b950      	cbnz	r0, 8008de0 <xQueueSemaphoreTake+0x50>
 8008dca:	9b01      	ldr	r3, [sp, #4]
 8008dcc:	b15b      	cbz	r3, 8008de6 <xQueueSemaphoreTake+0x56>
 8008dce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd2:	f383 8811 	msr	BASEPRI, r3
 8008dd6:	f3bf 8f6f 	isb	sy
 8008dda:	f3bf 8f4f 	dsb	sy
 8008dde:	e7fe      	b.n	8008dde <xQueueSemaphoreTake+0x4e>
 8008de0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008de2:	2700      	movs	r7, #0
 8008de4:	e053      	b.n	8008e8e <xQueueSemaphoreTake+0xfe>
 8008de6:	4605      	mov	r5, r0
 8008de8:	e7fb      	b.n	8008de2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008dea:	9b01      	ldr	r3, [sp, #4]
 8008dec:	b963      	cbnz	r3, 8008e08 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008dee:	b145      	cbz	r5, 8008e02 <xQueueSemaphoreTake+0x72>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8008e02:	f7ff fb17 	bl	8008434 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008e06:	e062      	b.n	8008ece <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8008e08:	b916      	cbnz	r6, 8008e10 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008e0a:	a802      	add	r0, sp, #8
 8008e0c:	f000 fd64 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008e10:	f7ff fb10 	bl	8008434 <vPortExitCritical>
		vTaskSuspendAll();
 8008e14:	f000 fafa 	bl	800940c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008e18:	f7ff faec 	bl	80083f4 <vPortEnterCritical>
 8008e1c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008e20:	2bff      	cmp	r3, #255	; 0xff
 8008e22:	bf08      	it	eq
 8008e24:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008e28:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008e2c:	2bff      	cmp	r3, #255	; 0xff
 8008e2e:	bf08      	it	eq
 8008e30:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008e34:	f7ff fafe 	bl	8008434 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008e38:	a901      	add	r1, sp, #4
 8008e3a:	a802      	add	r0, sp, #8
 8008e3c:	f000 fd58 	bl	80098f0 <xTaskCheckForTimeOut>
 8008e40:	2800      	cmp	r0, #0
 8008e42:	d14d      	bne.n	8008ee0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008e44:	4620      	mov	r0, r4
 8008e46:	f7ff fc19 	bl	800867c <prvIsQueueEmpty>
 8008e4a:	2800      	cmp	r0, #0
 8008e4c:	d042      	beq.n	8008ed4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008e4e:	6823      	ldr	r3, [r4, #0]
 8008e50:	b93b      	cbnz	r3, 8008e62 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008e52:	f7ff facf 	bl	80083f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008e56:	68a0      	ldr	r0, [r4, #8]
 8008e58:	f000 fd9c 	bl	8009994 <xTaskPriorityInherit>
 8008e5c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008e5e:	f7ff fae9 	bl	8008434 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008e62:	9901      	ldr	r1, [sp, #4]
 8008e64:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008e68:	f000 fcba 	bl	80097e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008e6c:	4620      	mov	r0, r4
 8008e6e:	f7ff fc5b 	bl	8008728 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008e72:	f000 fb6f 	bl	8009554 <xTaskResumeAll>
 8008e76:	b948      	cbnz	r0, 8008e8c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008e78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e84:	f3bf 8f4f 	dsb	sy
 8008e88:	f3bf 8f6f 	isb	sy
 8008e8c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008e8e:	f7ff fab1 	bl	80083f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008e92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008e94:	2b00      	cmp	r3, #0
 8008e96:	d0a8      	beq.n	8008dea <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008e98:	3b01      	subs	r3, #1
 8008e9a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008e9c:	6823      	ldr	r3, [r4, #0]
 8008e9e:	b913      	cbnz	r3, 8008ea6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008ea0:	f000 fe50 	bl	8009b44 <pvTaskIncrementMutexHeldCount>
 8008ea4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ea6:	6923      	ldr	r3, [r4, #16]
 8008ea8:	b173      	cbz	r3, 8008ec8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008eaa:	f104 0010 	add.w	r0, r4, #16
 8008eae:	f000 fccf 	bl	8009850 <xTaskRemoveFromEventList>
 8008eb2:	b148      	cbz	r0, 8008ec8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008eb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ebc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ec0:	f3bf 8f4f 	dsb	sy
 8008ec4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008ec8:	f7ff fab4 	bl	8008434 <vPortExitCritical>
				return pdPASS;
 8008ecc:	2501      	movs	r5, #1
}
 8008ece:	4628      	mov	r0, r5
 8008ed0:	b005      	add	sp, #20
 8008ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008ed4:	4620      	mov	r0, r4
 8008ed6:	f7ff fc27 	bl	8008728 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008eda:	f000 fb3b 	bl	8009554 <xTaskResumeAll>
 8008ede:	e7d5      	b.n	8008e8c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8008ee0:	4620      	mov	r0, r4
 8008ee2:	f7ff fc21 	bl	8008728 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008ee6:	f000 fb35 	bl	8009554 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008eea:	4620      	mov	r0, r4
 8008eec:	f7ff fbc6 	bl	800867c <prvIsQueueEmpty>
 8008ef0:	2800      	cmp	r0, #0
 8008ef2:	d0cb      	beq.n	8008e8c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008ef4:	2d00      	cmp	r5, #0
 8008ef6:	d0ea      	beq.n	8008ece <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8008ef8:	f7ff fa7c 	bl	80083f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008efc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008efe:	b119      	cbz	r1, 8008f08 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008f00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008f02:	6819      	ldr	r1, [r3, #0]
 8008f04:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008f08:	68a0      	ldr	r0, [r4, #8]
 8008f0a:	f000 fdc9 	bl	8009aa0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8008f0e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8008f10:	f7ff fa90 	bl	8008434 <vPortExitCritical>
 8008f14:	e7db      	b.n	8008ece <xQueueSemaphoreTake+0x13e>

08008f16 <xQueueReceiveFromISR>:
{
 8008f16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008f1a:	4689      	mov	r9, r1
 8008f1c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008f1e:	4605      	mov	r5, r0
 8008f20:	b940      	cbnz	r0, 8008f34 <xQueueReceiveFromISR+0x1e>
 8008f22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f26:	f383 8811 	msr	BASEPRI, r3
 8008f2a:	f3bf 8f6f 	isb	sy
 8008f2e:	f3bf 8f4f 	dsb	sy
 8008f32:	e7fe      	b.n	8008f32 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008f34:	b951      	cbnz	r1, 8008f4c <xQueueReceiveFromISR+0x36>
 8008f36:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008f38:	b143      	cbz	r3, 8008f4c <xQueueReceiveFromISR+0x36>
 8008f3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f3e:	f383 8811 	msr	BASEPRI, r3
 8008f42:	f3bf 8f6f 	isb	sy
 8008f46:	f3bf 8f4f 	dsb	sy
 8008f4a:	e7fe      	b.n	8008f4a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008f4c:	f7ff fb68 	bl	8008620 <vPortValidateInterruptPriority>
	__asm volatile
 8008f50:	f3ef 8711 	mrs	r7, BASEPRI
 8008f54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f58:	f383 8811 	msr	BASEPRI, r3
 8008f5c:	f3bf 8f6f 	isb	sy
 8008f60:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f64:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f66:	b31c      	cbz	r4, 8008fb0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008f68:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f6c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008f6e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f70:	4628      	mov	r0, r5
 8008f72:	f7ff fbc3 	bl	80086fc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f76:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008f78:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f7a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8008f7c:	d113      	bne.n	8008fa6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f7e:	692b      	ldr	r3, [r5, #16]
 8008f80:	b90b      	cbnz	r3, 8008f86 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008f82:	2001      	movs	r0, #1
 8008f84:	e00b      	b.n	8008f9e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f86:	f105 0010 	add.w	r0, r5, #16
 8008f8a:	f000 fc61 	bl	8009850 <xTaskRemoveFromEventList>
 8008f8e:	2800      	cmp	r0, #0
 8008f90:	d0f7      	beq.n	8008f82 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008f92:	f1b8 0f00 	cmp.w	r8, #0
 8008f96:	d0f4      	beq.n	8008f82 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008f98:	2001      	movs	r0, #1
 8008f9a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008f9e:	f387 8811 	msr	BASEPRI, r7
}
 8008fa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008fa6:	3601      	adds	r6, #1
 8008fa8:	b276      	sxtb	r6, r6
 8008faa:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008fae:	e7e8      	b.n	8008f82 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	e7f4      	b.n	8008f9e <xQueueReceiveFromISR+0x88>

08008fb4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008fb4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008fb6:	4a07      	ldr	r2, [pc, #28]	; (8008fd4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008fb8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008fba:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8008fbe:	b92c      	cbnz	r4, 8008fcc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008fc0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008fc4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008fc8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008fca:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008fcc:	3301      	adds	r3, #1
 8008fce:	2b08      	cmp	r3, #8
 8008fd0:	d1f3      	bne.n	8008fba <vQueueAddToRegistry+0x6>
 8008fd2:	e7fa      	b.n	8008fca <vQueueAddToRegistry+0x16>
 8008fd4:	2000a198 	.word	0x2000a198

08008fd8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008fd8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008fda:	4a08      	ldr	r2, [pc, #32]	; (8008ffc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008fdc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008fde:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008fe2:	684c      	ldr	r4, [r1, #4]
 8008fe4:	4284      	cmp	r4, r0
 8008fe6:	d104      	bne.n	8008ff2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008fe8:	2000      	movs	r0, #0
 8008fea:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008fee:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008ff0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ff2:	3301      	adds	r3, #1
 8008ff4:	2b08      	cmp	r3, #8
 8008ff6:	d1f2      	bne.n	8008fde <vQueueUnregisterQueue+0x6>
 8008ff8:	e7fa      	b.n	8008ff0 <vQueueUnregisterQueue+0x18>
 8008ffa:	bf00      	nop
 8008ffc:	2000a198 	.word	0x2000a198

08009000 <vQueueDelete>:
{
 8009000:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009002:	4604      	mov	r4, r0
 8009004:	b940      	cbnz	r0, 8009018 <vQueueDelete+0x18>
	__asm volatile
 8009006:	f04f 0350 	mov.w	r3, #80	; 0x50
 800900a:	f383 8811 	msr	BASEPRI, r3
 800900e:	f3bf 8f6f 	isb	sy
 8009012:	f3bf 8f4f 	dsb	sy
 8009016:	e7fe      	b.n	8009016 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009018:	f7ff ffde 	bl	8008fd8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800901c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009020:	b923      	cbnz	r3, 800902c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009022:	4620      	mov	r0, r4
}
 8009024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009028:	f7ff b8fa 	b.w	8008220 <vPortFree>
}
 800902c:	bd10      	pop	{r4, pc}

0800902e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800902e:	b570      	push	{r4, r5, r6, lr}
 8009030:	4604      	mov	r4, r0
 8009032:	460d      	mov	r5, r1
 8009034:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009036:	f7ff f9dd 	bl	80083f4 <vPortEnterCritical>
 800903a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800903e:	2bff      	cmp	r3, #255	; 0xff
 8009040:	bf04      	itt	eq
 8009042:	2300      	moveq	r3, #0
 8009044:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009048:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800904c:	2bff      	cmp	r3, #255	; 0xff
 800904e:	bf04      	itt	eq
 8009050:	2300      	moveq	r3, #0
 8009052:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009056:	f7ff f9ed 	bl	8008434 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800905a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800905c:	b92b      	cbnz	r3, 800906a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800905e:	4632      	mov	r2, r6
 8009060:	4629      	mov	r1, r5
 8009062:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009066:	f000 fbd5 	bl	8009814 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800906a:	4620      	mov	r0, r4
	}
 800906c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009070:	f7ff bb5a 	b.w	8008728 <prvUnlockQueue>

08009074 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009078:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800907a:	f7ff f9bb 	bl	80083f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800907e:	4b30      	ldr	r3, [pc, #192]	; (8009140 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009080:	4e30      	ldr	r6, [pc, #192]	; (8009144 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009082:	681a      	ldr	r2, [r3, #0]
 8009084:	4f30      	ldr	r7, [pc, #192]	; (8009148 <prvAddNewTaskToReadyList+0xd4>)
 8009086:	3201      	adds	r2, #1
 8009088:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800908a:	6835      	ldr	r5, [r6, #0]
 800908c:	2d00      	cmp	r5, #0
 800908e:	d14b      	bne.n	8009128 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009090:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	2b01      	cmp	r3, #1
 8009096:	d11f      	bne.n	80090d8 <prvAddNewTaskToReadyList+0x64>
 8009098:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800909a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800909c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800909e:	f7ff f8fd 	bl	800829c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80090a2:	2d38      	cmp	r5, #56	; 0x38
 80090a4:	f108 0814 	add.w	r8, r8, #20
 80090a8:	d1f7      	bne.n	800909a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80090aa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009170 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80090ae:	4d27      	ldr	r5, [pc, #156]	; (800914c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80090b0:	4640      	mov	r0, r8
 80090b2:	f7ff f8f3 	bl	800829c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80090b6:	4628      	mov	r0, r5
 80090b8:	f7ff f8f0 	bl	800829c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80090bc:	4824      	ldr	r0, [pc, #144]	; (8009150 <prvAddNewTaskToReadyList+0xdc>)
 80090be:	f7ff f8ed 	bl	800829c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80090c2:	4824      	ldr	r0, [pc, #144]	; (8009154 <prvAddNewTaskToReadyList+0xe0>)
 80090c4:	f7ff f8ea 	bl	800829c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80090c8:	4823      	ldr	r0, [pc, #140]	; (8009158 <prvAddNewTaskToReadyList+0xe4>)
 80090ca:	f7ff f8e7 	bl	800829c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80090ce:	4b23      	ldr	r3, [pc, #140]	; (800915c <prvAddNewTaskToReadyList+0xe8>)
 80090d0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80090d4:	4b22      	ldr	r3, [pc, #136]	; (8009160 <prvAddNewTaskToReadyList+0xec>)
 80090d6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80090d8:	4a22      	ldr	r2, [pc, #136]	; (8009164 <prvAddNewTaskToReadyList+0xf0>)
 80090da:	6813      	ldr	r3, [r2, #0]
 80090dc:	3301      	adds	r3, #1
 80090de:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80090e0:	4a21      	ldr	r2, [pc, #132]	; (8009168 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80090e2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80090e4:	6811      	ldr	r1, [r2, #0]
 80090e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80090e8:	2014      	movs	r0, #20
 80090ea:	428b      	cmp	r3, r1
 80090ec:	fb00 7003 	mla	r0, r0, r3, r7
 80090f0:	f104 0104 	add.w	r1, r4, #4
 80090f4:	bf88      	it	hi
 80090f6:	6013      	strhi	r3, [r2, #0]
 80090f8:	f7ff f8de 	bl	80082b8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80090fc:	f7ff f99a 	bl	8008434 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009100:	4b1a      	ldr	r3, [pc, #104]	; (800916c <prvAddNewTaskToReadyList+0xf8>)
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	b173      	cbz	r3, 8009124 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009106:	6833      	ldr	r3, [r6, #0]
 8009108:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800910a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800910c:	429a      	cmp	r2, r3
 800910e:	d209      	bcs.n	8009124 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009110:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009114:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009118:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800911c:	f3bf 8f4f 	dsb	sy
 8009120:	f3bf 8f6f 	isb	sy
}
 8009124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009128:	4b10      	ldr	r3, [pc, #64]	; (800916c <prvAddNewTaskToReadyList+0xf8>)
 800912a:	681b      	ldr	r3, [r3, #0]
 800912c:	2b00      	cmp	r3, #0
 800912e:	d1d3      	bne.n	80090d8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009130:	6833      	ldr	r3, [r6, #0]
 8009132:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009134:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009136:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009138:	bf98      	it	ls
 800913a:	6034      	strls	r4, [r6, #0]
 800913c:	e7cc      	b.n	80090d8 <prvAddNewTaskToReadyList+0x64>
 800913e:	bf00      	nop
 8009140:	2000a644 	.word	0x2000a644
 8009144:	2000a1d8 	.word	0x2000a1d8
 8009148:	2000a1e4 	.word	0x2000a1e4
 800914c:	2000a66c 	.word	0x2000a66c
 8009150:	2000a68c 	.word	0x2000a68c
 8009154:	2000a6b8 	.word	0x2000a6b8
 8009158:	2000a6a4 	.word	0x2000a6a4
 800915c:	2000a1dc 	.word	0x2000a1dc
 8009160:	2000a1e0 	.word	0x2000a1e0
 8009164:	2000a650 	.word	0x2000a650
 8009168:	2000a654 	.word	0x2000a654
 800916c:	2000a6a0 	.word	0x2000a6a0
 8009170:	2000a658 	.word	0x2000a658

08009174 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009176:	4b15      	ldr	r3, [pc, #84]	; (80091cc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009178:	4e15      	ldr	r6, [pc, #84]	; (80091d0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800917a:	681d      	ldr	r5, [r3, #0]
{
 800917c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800917e:	6830      	ldr	r0, [r6, #0]
 8009180:	3004      	adds	r0, #4
{
 8009182:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009184:	f7ff f8bb 	bl	80082fe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009188:	1c63      	adds	r3, r4, #1
 800918a:	d107      	bne.n	800919c <prvAddCurrentTaskToDelayedList+0x28>
 800918c:	b137      	cbz	r7, 800919c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800918e:	6831      	ldr	r1, [r6, #0]
 8009190:	4810      	ldr	r0, [pc, #64]	; (80091d4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009192:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009196:	3104      	adds	r1, #4
 8009198:	f7ff b88e 	b.w	80082b8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800919c:	6833      	ldr	r3, [r6, #0]
 800919e:	192c      	adds	r4, r5, r4
 80091a0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80091a2:	d307      	bcc.n	80091b4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80091a4:	4b0c      	ldr	r3, [pc, #48]	; (80091d8 <prvAddCurrentTaskToDelayedList+0x64>)
 80091a6:	6818      	ldr	r0, [r3, #0]
 80091a8:	6831      	ldr	r1, [r6, #0]
}
 80091aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80091ae:	3104      	adds	r1, #4
 80091b0:	f7ff b88e 	b.w	80082d0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80091b4:	4b09      	ldr	r3, [pc, #36]	; (80091dc <prvAddCurrentTaskToDelayedList+0x68>)
 80091b6:	6818      	ldr	r0, [r3, #0]
 80091b8:	6831      	ldr	r1, [r6, #0]
 80091ba:	3104      	adds	r1, #4
 80091bc:	f7ff f888 	bl	80082d0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80091c0:	4b07      	ldr	r3, [pc, #28]	; (80091e0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80091c2:	681a      	ldr	r2, [r3, #0]
 80091c4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80091c6:	bf88      	it	hi
 80091c8:	601c      	strhi	r4, [r3, #0]
}
 80091ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091cc:	2000a6cc 	.word	0x2000a6cc
 80091d0:	2000a1d8 	.word	0x2000a1d8
 80091d4:	2000a6a4 	.word	0x2000a6a4
 80091d8:	2000a1e0 	.word	0x2000a1e0
 80091dc:	2000a1dc 	.word	0x2000a1dc
 80091e0:	2000a680 	.word	0x2000a680

080091e4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80091e4:	4a06      	ldr	r2, [pc, #24]	; (8009200 <prvResetNextTaskUnblockTime+0x1c>)
 80091e6:	6813      	ldr	r3, [r2, #0]
 80091e8:	6819      	ldr	r1, [r3, #0]
 80091ea:	4b06      	ldr	r3, [pc, #24]	; (8009204 <prvResetNextTaskUnblockTime+0x20>)
 80091ec:	b919      	cbnz	r1, 80091f6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80091ee:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80091f2:	601a      	str	r2, [r3, #0]
}
 80091f4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091f6:	6812      	ldr	r2, [r2, #0]
 80091f8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80091fa:	68d2      	ldr	r2, [r2, #12]
 80091fc:	6852      	ldr	r2, [r2, #4]
 80091fe:	e7f8      	b.n	80091f2 <prvResetNextTaskUnblockTime+0xe>
 8009200:	2000a1dc 	.word	0x2000a1dc
 8009204:	2000a680 	.word	0x2000a680

08009208 <prvDeleteTCB>:
	{
 8009208:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800920a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800920e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009210:	b93b      	cbnz	r3, 8009222 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009212:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009214:	f7ff f804 	bl	8008220 <vPortFree>
				vPortFree( pxTCB );
 8009218:	4620      	mov	r0, r4
	}
 800921a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800921e:	f7fe bfff 	b.w	8008220 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009222:	2b01      	cmp	r3, #1
 8009224:	d0f9      	beq.n	800921a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009226:	2b02      	cmp	r3, #2
 8009228:	d008      	beq.n	800923c <prvDeleteTCB+0x34>
 800922a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800922e:	f383 8811 	msr	BASEPRI, r3
 8009232:	f3bf 8f6f 	isb	sy
 8009236:	f3bf 8f4f 	dsb	sy
 800923a:	e7fe      	b.n	800923a <prvDeleteTCB+0x32>
	}
 800923c:	bd10      	pop	{r4, pc}
	...

08009240 <prvIdleTask>:
{
 8009240:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009242:	4c14      	ldr	r4, [pc, #80]	; (8009294 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009244:	4f14      	ldr	r7, [pc, #80]	; (8009298 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009246:	4d15      	ldr	r5, [pc, #84]	; (800929c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009248:	6823      	ldr	r3, [r4, #0]
 800924a:	b983      	cbnz	r3, 800926e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800924c:	4b14      	ldr	r3, [pc, #80]	; (80092a0 <prvIdleTask+0x60>)
 800924e:	681b      	ldr	r3, [r3, #0]
 8009250:	2b01      	cmp	r3, #1
 8009252:	d909      	bls.n	8009268 <prvIdleTask+0x28>
				taskYIELD();
 8009254:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009258:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800925c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009260:	f3bf 8f4f 	dsb	sy
 8009264:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009268:	f7f8 f8d8 	bl	800141c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800926c:	e7eb      	b.n	8009246 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800926e:	f7ff f8c1 	bl	80083f4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009276:	1d30      	adds	r0, r6, #4
 8009278:	f7ff f841 	bl	80082fe <uxListRemove>
				--uxCurrentNumberOfTasks;
 800927c:	682b      	ldr	r3, [r5, #0]
 800927e:	3b01      	subs	r3, #1
 8009280:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009282:	6823      	ldr	r3, [r4, #0]
 8009284:	3b01      	subs	r3, #1
 8009286:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009288:	f7ff f8d4 	bl	8008434 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800928c:	4630      	mov	r0, r6
 800928e:	f7ff ffbb 	bl	8009208 <prvDeleteTCB>
 8009292:	e7d9      	b.n	8009248 <prvIdleTask+0x8>
 8009294:	2000a648 	.word	0x2000a648
 8009298:	2000a6b8 	.word	0x2000a6b8
 800929c:	2000a644 	.word	0x2000a644
 80092a0:	2000a1e4 	.word	0x2000a1e4

080092a4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80092a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80092a8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80092ac:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80092b0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80092b2:	4606      	mov	r6, r0
 80092b4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80092b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80092b8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80092ba:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80092bc:	f013 fd8a 	bl	801cdd4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80092c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80092c2:	f1a9 0904 	sub.w	r9, r9, #4
 80092c6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80092c8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80092cc:	b3b5      	cbz	r5, 800933c <prvInitialiseNewTask.constprop.0+0x98>
 80092ce:	1e6b      	subs	r3, r5, #1
 80092d0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80092d4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80092d6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80092da:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80092de:	b108      	cbz	r0, 80092e4 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80092e0:	42ab      	cmp	r3, r5
 80092e2:	d1f8      	bne.n	80092d6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80092e4:	2300      	movs	r3, #0
 80092e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80092ea:	9d08      	ldr	r5, [sp, #32]
 80092ec:	2d37      	cmp	r5, #55	; 0x37
 80092ee:	bf28      	it	cs
 80092f0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80092f2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80092f6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80092f8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80092fa:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80092fc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009300:	f7fe ffd7 	bl	80082b2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009304:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009308:	f104 0018 	add.w	r0, r4, #24
 800930c:	f7fe ffd1 	bl	80082b2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009310:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009314:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009316:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009318:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800931a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800931e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009322:	463a      	mov	r2, r7
 8009324:	4631      	mov	r1, r6
 8009326:	4648      	mov	r0, r9
 8009328:	f7ff f838 	bl	800839c <pxPortInitialiseStack>
 800932c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800932e:	f1b8 0f00 	cmp.w	r8, #0
 8009332:	d001      	beq.n	8009338 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009334:	f8c8 4000 	str.w	r4, [r8]
}
 8009338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800933c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009340:	e7d3      	b.n	80092ea <prvInitialiseNewTask.constprop.0+0x46>

08009342 <xTaskCreateStatic>:
	{
 8009342:	b570      	push	{r4, r5, r6, lr}
 8009344:	b086      	sub	sp, #24
 8009346:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800934a:	b945      	cbnz	r5, 800935e <xTaskCreateStatic+0x1c>
 800934c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009350:	f383 8811 	msr	BASEPRI, r3
 8009354:	f3bf 8f6f 	isb	sy
 8009358:	f3bf 8f4f 	dsb	sy
 800935c:	e7fe      	b.n	800935c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800935e:	b944      	cbnz	r4, 8009372 <xTaskCreateStatic+0x30>
 8009360:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009364:	f383 8811 	msr	BASEPRI, r3
 8009368:	f3bf 8f6f 	isb	sy
 800936c:	f3bf 8f4f 	dsb	sy
 8009370:	e7fe      	b.n	8009370 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009372:	2660      	movs	r6, #96	; 0x60
 8009374:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009376:	9e05      	ldr	r6, [sp, #20]
 8009378:	2e60      	cmp	r6, #96	; 0x60
 800937a:	d008      	beq.n	800938e <xTaskCreateStatic+0x4c>
 800937c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009380:	f383 8811 	msr	BASEPRI, r3
 8009384:	f3bf 8f6f 	isb	sy
 8009388:	f3bf 8f4f 	dsb	sy
 800938c:	e7fe      	b.n	800938c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800938e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009390:	2502      	movs	r5, #2
 8009392:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009396:	ad04      	add	r5, sp, #16
 8009398:	9501      	str	r5, [sp, #4]
 800939a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800939c:	9402      	str	r4, [sp, #8]
 800939e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80093a0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80093a2:	f7ff ff7f 	bl	80092a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80093a6:	4620      	mov	r0, r4
 80093a8:	f7ff fe64 	bl	8009074 <prvAddNewTaskToReadyList>
	}
 80093ac:	9804      	ldr	r0, [sp, #16]
 80093ae:	b006      	add	sp, #24
 80093b0:	bd70      	pop	{r4, r5, r6, pc}

080093b2 <xTaskCreate>:
	{
 80093b2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80093b6:	4607      	mov	r7, r0
 80093b8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80093ba:	0090      	lsls	r0, r2, #2
	{
 80093bc:	4688      	mov	r8, r1
 80093be:	4616      	mov	r6, r2
 80093c0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80093c2:	f7fe fe95 	bl	80080f0 <pvPortMalloc>
			if( pxStack != NULL )
 80093c6:	4605      	mov	r5, r0
 80093c8:	b1e8      	cbz	r0, 8009406 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80093ca:	2060      	movs	r0, #96	; 0x60
 80093cc:	f7fe fe90 	bl	80080f0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80093d0:	4604      	mov	r4, r0
 80093d2:	b1a8      	cbz	r0, 8009400 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80093d4:	2300      	movs	r3, #0
 80093d6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80093da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80093dc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80093de:	9301      	str	r3, [sp, #4]
 80093e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80093e2:	9002      	str	r0, [sp, #8]
 80093e4:	9300      	str	r3, [sp, #0]
 80093e6:	4632      	mov	r2, r6
 80093e8:	464b      	mov	r3, r9
 80093ea:	4641      	mov	r1, r8
 80093ec:	4638      	mov	r0, r7
 80093ee:	f7ff ff59 	bl	80092a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80093f2:	4620      	mov	r0, r4
 80093f4:	f7ff fe3e 	bl	8009074 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80093f8:	2001      	movs	r0, #1
	}
 80093fa:	b005      	add	sp, #20
 80093fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009400:	4628      	mov	r0, r5
 8009402:	f7fe ff0d 	bl	8008220 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009406:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800940a:	e7f6      	b.n	80093fa <xTaskCreate+0x48>

0800940c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800940c:	4a02      	ldr	r2, [pc, #8]	; (8009418 <vTaskSuspendAll+0xc>)
 800940e:	6813      	ldr	r3, [r2, #0]
 8009410:	3301      	adds	r3, #1
 8009412:	6013      	str	r3, [r2, #0]
}
 8009414:	4770      	bx	lr
 8009416:	bf00      	nop
 8009418:	2000a64c 	.word	0x2000a64c

0800941c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800941c:	4b01      	ldr	r3, [pc, #4]	; (8009424 <xTaskGetTickCount+0x8>)
 800941e:	6818      	ldr	r0, [r3, #0]
}
 8009420:	4770      	bx	lr
 8009422:	bf00      	nop
 8009424:	2000a6cc 	.word	0x2000a6cc

08009428 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009428:	4b3f      	ldr	r3, [pc, #252]	; (8009528 <xTaskIncrementTick+0x100>)
 800942a:	681b      	ldr	r3, [r3, #0]
{
 800942c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009430:	2b00      	cmp	r3, #0
 8009432:	d173      	bne.n	800951c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009434:	4b3d      	ldr	r3, [pc, #244]	; (800952c <xTaskIncrementTick+0x104>)
 8009436:	681d      	ldr	r5, [r3, #0]
 8009438:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800943a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800943c:	b9bd      	cbnz	r5, 800946e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800943e:	4b3c      	ldr	r3, [pc, #240]	; (8009530 <xTaskIncrementTick+0x108>)
 8009440:	681a      	ldr	r2, [r3, #0]
 8009442:	6812      	ldr	r2, [r2, #0]
 8009444:	b142      	cbz	r2, 8009458 <xTaskIncrementTick+0x30>
 8009446:	f04f 0350 	mov.w	r3, #80	; 0x50
 800944a:	f383 8811 	msr	BASEPRI, r3
 800944e:	f3bf 8f6f 	isb	sy
 8009452:	f3bf 8f4f 	dsb	sy
 8009456:	e7fe      	b.n	8009456 <xTaskIncrementTick+0x2e>
 8009458:	4a36      	ldr	r2, [pc, #216]	; (8009534 <xTaskIncrementTick+0x10c>)
 800945a:	6819      	ldr	r1, [r3, #0]
 800945c:	6810      	ldr	r0, [r2, #0]
 800945e:	6018      	str	r0, [r3, #0]
 8009460:	6011      	str	r1, [r2, #0]
 8009462:	4a35      	ldr	r2, [pc, #212]	; (8009538 <xTaskIncrementTick+0x110>)
 8009464:	6813      	ldr	r3, [r2, #0]
 8009466:	3301      	adds	r3, #1
 8009468:	6013      	str	r3, [r2, #0]
 800946a:	f7ff febb 	bl	80091e4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800946e:	4e33      	ldr	r6, [pc, #204]	; (800953c <xTaskIncrementTick+0x114>)
 8009470:	4f33      	ldr	r7, [pc, #204]	; (8009540 <xTaskIncrementTick+0x118>)
 8009472:	6833      	ldr	r3, [r6, #0]
 8009474:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800954c <xTaskIncrementTick+0x124>
 8009478:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800947a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800947e:	d211      	bcs.n	80094a4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009480:	f8d8 3000 	ldr.w	r3, [r8]
 8009484:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009486:	2214      	movs	r2, #20
 8009488:	4353      	muls	r3, r2
 800948a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800948c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800948e:	4b2d      	ldr	r3, [pc, #180]	; (8009544 <xTaskIncrementTick+0x11c>)
 8009490:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8009492:	bf28      	it	cs
 8009494:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8009496:	2b00      	cmp	r3, #0
 8009498:	bf18      	it	ne
 800949a:	2401      	movne	r4, #1
}
 800949c:	4620      	mov	r0, r4
 800949e:	b003      	add	sp, #12
 80094a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80094a4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009530 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80094a8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009550 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80094ac:	f8d9 3000 	ldr.w	r3, [r9]
 80094b0:	681b      	ldr	r3, [r3, #0]
 80094b2:	b91b      	cbnz	r3, 80094bc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80094b4:	f04f 33ff 	mov.w	r3, #4294967295
 80094b8:	6033      	str	r3, [r6, #0]
					break;
 80094ba:	e7e1      	b.n	8009480 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094bc:	f8d9 3000 	ldr.w	r3, [r9]
 80094c0:	68db      	ldr	r3, [r3, #12]
 80094c2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80094c6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80094ca:	4295      	cmp	r5, r2
 80094cc:	d201      	bcs.n	80094d2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80094ce:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80094d0:	e7d6      	b.n	8009480 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80094d2:	f10b 0104 	add.w	r1, fp, #4
 80094d6:	4608      	mov	r0, r1
 80094d8:	9101      	str	r1, [sp, #4]
 80094da:	f7fe ff10 	bl	80082fe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80094de:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80094e2:	9901      	ldr	r1, [sp, #4]
 80094e4:	b122      	cbz	r2, 80094f0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80094e6:	f10b 0018 	add.w	r0, fp, #24
 80094ea:	f7fe ff08 	bl	80082fe <uxListRemove>
 80094ee:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80094f0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80094f4:	f8da 2000 	ldr.w	r2, [sl]
 80094f8:	2314      	movs	r3, #20
 80094fa:	4290      	cmp	r0, r2
 80094fc:	bf88      	it	hi
 80094fe:	f8ca 0000 	strhi.w	r0, [sl]
 8009502:	fb03 7000 	mla	r0, r3, r0, r7
 8009506:	f7fe fed7 	bl	80082b8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800950a:	f8d8 1000 	ldr.w	r1, [r8]
 800950e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009512:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009514:	429a      	cmp	r2, r3
 8009516:	bf28      	it	cs
 8009518:	2401      	movcs	r4, #1
 800951a:	e7c7      	b.n	80094ac <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800951c:	4a0a      	ldr	r2, [pc, #40]	; (8009548 <xTaskIncrementTick+0x120>)
 800951e:	6813      	ldr	r3, [r2, #0]
 8009520:	3301      	adds	r3, #1
 8009522:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009524:	2400      	movs	r4, #0
	return xSwitchRequired;
 8009526:	e7b9      	b.n	800949c <xTaskIncrementTick+0x74>
 8009528:	2000a64c 	.word	0x2000a64c
 800952c:	2000a6cc 	.word	0x2000a6cc
 8009530:	2000a1dc 	.word	0x2000a1dc
 8009534:	2000a1e0 	.word	0x2000a1e0
 8009538:	2000a684 	.word	0x2000a684
 800953c:	2000a680 	.word	0x2000a680
 8009540:	2000a1e4 	.word	0x2000a1e4
 8009544:	2000a6d0 	.word	0x2000a6d0
 8009548:	2000a688 	.word	0x2000a688
 800954c:	2000a1d8 	.word	0x2000a1d8
 8009550:	2000a654 	.word	0x2000a654

08009554 <xTaskResumeAll>:
{
 8009554:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009556:	4c31      	ldr	r4, [pc, #196]	; (800961c <xTaskResumeAll+0xc8>)
 8009558:	6823      	ldr	r3, [r4, #0]
 800955a:	b943      	cbnz	r3, 800956e <xTaskResumeAll+0x1a>
 800955c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009560:	f383 8811 	msr	BASEPRI, r3
 8009564:	f3bf 8f6f 	isb	sy
 8009568:	f3bf 8f4f 	dsb	sy
 800956c:	e7fe      	b.n	800956c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800956e:	f7fe ff41 	bl	80083f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009572:	6823      	ldr	r3, [r4, #0]
 8009574:	3b01      	subs	r3, #1
 8009576:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009578:	6824      	ldr	r4, [r4, #0]
 800957a:	b12c      	cbz	r4, 8009588 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800957c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800957e:	f7fe ff59 	bl	8008434 <vPortExitCritical>
}
 8009582:	4620      	mov	r0, r4
 8009584:	b003      	add	sp, #12
 8009586:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009588:	4b25      	ldr	r3, [pc, #148]	; (8009620 <xTaskResumeAll+0xcc>)
 800958a:	681b      	ldr	r3, [r3, #0]
 800958c:	2b00      	cmp	r3, #0
 800958e:	d0f5      	beq.n	800957c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009590:	4d24      	ldr	r5, [pc, #144]	; (8009624 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009592:	4e25      	ldr	r6, [pc, #148]	; (8009628 <xTaskResumeAll+0xd4>)
 8009594:	4f25      	ldr	r7, [pc, #148]	; (800962c <xTaskResumeAll+0xd8>)
 8009596:	e01e      	b.n	80095d6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009598:	68eb      	ldr	r3, [r5, #12]
 800959a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800959c:	f104 0018 	add.w	r0, r4, #24
 80095a0:	f7fe fead 	bl	80082fe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80095a4:	1d21      	adds	r1, r4, #4
 80095a6:	4608      	mov	r0, r1
 80095a8:	9101      	str	r1, [sp, #4]
 80095aa:	f7fe fea8 	bl	80082fe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80095ae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80095b0:	6832      	ldr	r2, [r6, #0]
 80095b2:	9901      	ldr	r1, [sp, #4]
 80095b4:	2014      	movs	r0, #20
 80095b6:	4293      	cmp	r3, r2
 80095b8:	fb00 7003 	mla	r0, r0, r3, r7
 80095bc:	bf88      	it	hi
 80095be:	6033      	strhi	r3, [r6, #0]
 80095c0:	f7fe fe7a 	bl	80082b8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80095c4:	4b1a      	ldr	r3, [pc, #104]	; (8009630 <xTaskResumeAll+0xdc>)
 80095c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80095c8:	681b      	ldr	r3, [r3, #0]
 80095ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095cc:	429a      	cmp	r2, r3
 80095ce:	d302      	bcc.n	80095d6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80095d0:	4b18      	ldr	r3, [pc, #96]	; (8009634 <xTaskResumeAll+0xe0>)
 80095d2:	2201      	movs	r2, #1
 80095d4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80095d6:	682b      	ldr	r3, [r5, #0]
 80095d8:	2b00      	cmp	r3, #0
 80095da:	d1dd      	bne.n	8009598 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80095dc:	b10c      	cbz	r4, 80095e2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80095de:	f7ff fe01 	bl	80091e4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80095e2:	4d15      	ldr	r5, [pc, #84]	; (8009638 <xTaskResumeAll+0xe4>)
 80095e4:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80095e6:	b144      	cbz	r4, 80095fa <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80095e8:	4e12      	ldr	r6, [pc, #72]	; (8009634 <xTaskResumeAll+0xe0>)
 80095ea:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80095ec:	f7ff ff1c 	bl	8009428 <xTaskIncrementTick>
 80095f0:	b100      	cbz	r0, 80095f4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80095f2:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80095f4:	3c01      	subs	r4, #1
 80095f6:	d1f9      	bne.n	80095ec <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 80095f8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80095fa:	4b0e      	ldr	r3, [pc, #56]	; (8009634 <xTaskResumeAll+0xe0>)
 80095fc:	681b      	ldr	r3, [r3, #0]
 80095fe:	2b00      	cmp	r3, #0
 8009600:	d0bc      	beq.n	800957c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009602:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009606:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800960a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800960e:	f3bf 8f4f 	dsb	sy
 8009612:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009616:	2401      	movs	r4, #1
 8009618:	e7b1      	b.n	800957e <xTaskResumeAll+0x2a>
 800961a:	bf00      	nop
 800961c:	2000a64c 	.word	0x2000a64c
 8009620:	2000a644 	.word	0x2000a644
 8009624:	2000a68c 	.word	0x2000a68c
 8009628:	2000a654 	.word	0x2000a654
 800962c:	2000a1e4 	.word	0x2000a1e4
 8009630:	2000a1d8 	.word	0x2000a1d8
 8009634:	2000a6d0 	.word	0x2000a6d0
 8009638:	2000a688 	.word	0x2000a688

0800963c <vTaskDelay>:
	{
 800963c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800963e:	b950      	cbnz	r0, 8009656 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009640:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009644:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009648:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800964c:	f3bf 8f4f 	dsb	sy
 8009650:	f3bf 8f6f 	isb	sy
	}
 8009654:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009656:	4b0a      	ldr	r3, [pc, #40]	; (8009680 <vTaskDelay+0x44>)
 8009658:	6819      	ldr	r1, [r3, #0]
 800965a:	b141      	cbz	r1, 800966e <vTaskDelay+0x32>
 800965c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009660:	f383 8811 	msr	BASEPRI, r3
 8009664:	f3bf 8f6f 	isb	sy
 8009668:	f3bf 8f4f 	dsb	sy
 800966c:	e7fe      	b.n	800966c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800966e:	f7ff fecd 	bl	800940c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009672:	f7ff fd7f 	bl	8009174 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009676:	f7ff ff6d 	bl	8009554 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800967a:	2800      	cmp	r0, #0
 800967c:	d0e0      	beq.n	8009640 <vTaskDelay+0x4>
 800967e:	e7e9      	b.n	8009654 <vTaskDelay+0x18>
 8009680:	2000a64c 	.word	0x2000a64c

08009684 <vTaskSetApplicationTaskTag>:
	{
 8009684:	b538      	push	{r3, r4, r5, lr}
 8009686:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009688:	4604      	mov	r4, r0
 800968a:	b908      	cbnz	r0, 8009690 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800968c:	4b04      	ldr	r3, [pc, #16]	; (80096a0 <vTaskSetApplicationTaskTag+0x1c>)
 800968e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009690:	f7fe feb0 	bl	80083f4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009694:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009696:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800969a:	f7fe becb 	b.w	8008434 <vPortExitCritical>
 800969e:	bf00      	nop
 80096a0:	2000a1d8 	.word	0x2000a1d8

080096a4 <xTaskCallApplicationTaskHook>:
	{
 80096a4:	4603      	mov	r3, r0
 80096a6:	4608      	mov	r0, r1
		if( xTask == NULL )
 80096a8:	b90b      	cbnz	r3, 80096ae <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80096aa:	4b03      	ldr	r3, [pc, #12]	; (80096b8 <xTaskCallApplicationTaskHook+0x14>)
 80096ac:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80096ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80096b0:	b103      	cbz	r3, 80096b4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80096b2:	4718      	bx	r3
	}
 80096b4:	4618      	mov	r0, r3
 80096b6:	4770      	bx	lr
 80096b8:	2000a1d8 	.word	0x2000a1d8

080096bc <vTaskStartScheduler>:
{
 80096bc:	b510      	push	{r4, lr}
 80096be:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80096c0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80096c2:	aa07      	add	r2, sp, #28
 80096c4:	a906      	add	r1, sp, #24
 80096c6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80096c8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80096cc:	f7fe fcd4 	bl	8008078 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80096d0:	9b05      	ldr	r3, [sp, #20]
 80096d2:	9302      	str	r3, [sp, #8]
 80096d4:	9b06      	ldr	r3, [sp, #24]
 80096d6:	9a07      	ldr	r2, [sp, #28]
 80096d8:	4919      	ldr	r1, [pc, #100]	; (8009740 <vTaskStartScheduler+0x84>)
 80096da:	481a      	ldr	r0, [pc, #104]	; (8009744 <vTaskStartScheduler+0x88>)
 80096dc:	e9cd 4300 	strd	r4, r3, [sp]
 80096e0:	4623      	mov	r3, r4
 80096e2:	f7ff fe2e 	bl	8009342 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80096e6:	b340      	cbz	r0, 800973a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 80096e8:	f000 fa8a 	bl	8009c00 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80096ec:	2801      	cmp	r0, #1
 80096ee:	d119      	bne.n	8009724 <vTaskStartScheduler+0x68>
 80096f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096f4:	f383 8811 	msr	BASEPRI, r3
 80096f8:	f3bf 8f6f 	isb	sy
 80096fc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009700:	4b11      	ldr	r3, [pc, #68]	; (8009748 <vTaskStartScheduler+0x8c>)
 8009702:	f04f 32ff 	mov.w	r2, #4294967295
 8009706:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009708:	4b10      	ldr	r3, [pc, #64]	; (800974c <vTaskStartScheduler+0x90>)
 800970a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800970c:	4b10      	ldr	r3, [pc, #64]	; (8009750 <vTaskStartScheduler+0x94>)
 800970e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009710:	4b10      	ldr	r3, [pc, #64]	; (8009754 <vTaskStartScheduler+0x98>)
 8009712:	4621      	mov	r1, r4
 8009714:	6818      	ldr	r0, [r3, #0]
 8009716:	f7ff ffc5 	bl	80096a4 <xTaskCallApplicationTaskHook>
}
 800971a:	b008      	add	sp, #32
 800971c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009720:	f7fe bef8 	b.w	8008514 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009724:	3001      	adds	r0, #1
 8009726:	d108      	bne.n	800973a <vTaskStartScheduler+0x7e>
 8009728:	f04f 0350 	mov.w	r3, #80	; 0x50
 800972c:	f383 8811 	msr	BASEPRI, r3
 8009730:	f3bf 8f6f 	isb	sy
 8009734:	f3bf 8f4f 	dsb	sy
 8009738:	e7fe      	b.n	8009738 <vTaskStartScheduler+0x7c>
}
 800973a:	b008      	add	sp, #32
 800973c:	bd10      	pop	{r4, pc}
 800973e:	bf00      	nop
 8009740:	0801f5d9 	.word	0x0801f5d9
 8009744:	08009241 	.word	0x08009241
 8009748:	2000a680 	.word	0x2000a680
 800974c:	2000a6a0 	.word	0x2000a6a0
 8009750:	2000a6cc 	.word	0x2000a6cc
 8009754:	2000a1d8 	.word	0x2000a1d8

08009758 <vTaskSwitchContext>:
{
 8009758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800975a:	4b1c      	ldr	r3, [pc, #112]	; (80097cc <vTaskSwitchContext+0x74>)
 800975c:	681a      	ldr	r2, [r3, #0]
 800975e:	4b1c      	ldr	r3, [pc, #112]	; (80097d0 <vTaskSwitchContext+0x78>)
 8009760:	b112      	cbz	r2, 8009768 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009762:	2201      	movs	r2, #1
 8009764:	601a      	str	r2, [r3, #0]
}
 8009766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009768:	4c1a      	ldr	r4, [pc, #104]	; (80097d4 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800976a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800976c:	4e1a      	ldr	r6, [pc, #104]	; (80097d8 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800976e:	6820      	ldr	r0, [r4, #0]
 8009770:	2101      	movs	r1, #1
 8009772:	f7ff ff97 	bl	80096a4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009776:	6832      	ldr	r2, [r6, #0]
 8009778:	4918      	ldr	r1, [pc, #96]	; (80097dc <vTaskSwitchContext+0x84>)
 800977a:	2714      	movs	r7, #20
 800977c:	fb07 f302 	mul.w	r3, r7, r2
 8009780:	18c8      	adds	r0, r1, r3
 8009782:	58cd      	ldr	r5, [r1, r3]
 8009784:	b1ad      	cbz	r5, 80097b2 <vTaskSwitchContext+0x5a>
 8009786:	6845      	ldr	r5, [r0, #4]
 8009788:	3308      	adds	r3, #8
 800978a:	686d      	ldr	r5, [r5, #4]
 800978c:	6045      	str	r5, [r0, #4]
 800978e:	440b      	add	r3, r1
 8009790:	429d      	cmp	r5, r3
 8009792:	bf04      	itt	eq
 8009794:	686b      	ldreq	r3, [r5, #4]
 8009796:	6043      	streq	r3, [r0, #4]
 8009798:	2314      	movs	r3, #20
 800979a:	fb03 1102 	mla	r1, r3, r2, r1
 800979e:	684b      	ldr	r3, [r1, #4]
 80097a0:	68db      	ldr	r3, [r3, #12]
 80097a2:	6023      	str	r3, [r4, #0]
 80097a4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 80097a6:	6820      	ldr	r0, [r4, #0]
 80097a8:	2100      	movs	r1, #0
}
 80097aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 80097ae:	f7ff bf79 	b.w	80096a4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097b2:	b942      	cbnz	r2, 80097c6 <vTaskSwitchContext+0x6e>
 80097b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097b8:	f383 8811 	msr	BASEPRI, r3
 80097bc:	f3bf 8f6f 	isb	sy
 80097c0:	f3bf 8f4f 	dsb	sy
 80097c4:	e7fe      	b.n	80097c4 <vTaskSwitchContext+0x6c>
 80097c6:	3a01      	subs	r2, #1
 80097c8:	e7d8      	b.n	800977c <vTaskSwitchContext+0x24>
 80097ca:	bf00      	nop
 80097cc:	2000a64c 	.word	0x2000a64c
 80097d0:	2000a6d0 	.word	0x2000a6d0
 80097d4:	2000a1d8 	.word	0x2000a1d8
 80097d8:	2000a654 	.word	0x2000a654
 80097dc:	2000a1e4 	.word	0x2000a1e4

080097e0 <vTaskPlaceOnEventList>:
{
 80097e0:	b510      	push	{r4, lr}
 80097e2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80097e4:	b940      	cbnz	r0, 80097f8 <vTaskPlaceOnEventList+0x18>
 80097e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ea:	f383 8811 	msr	BASEPRI, r3
 80097ee:	f3bf 8f6f 	isb	sy
 80097f2:	f3bf 8f4f 	dsb	sy
 80097f6:	e7fe      	b.n	80097f6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80097f8:	4b05      	ldr	r3, [pc, #20]	; (8009810 <vTaskPlaceOnEventList+0x30>)
 80097fa:	6819      	ldr	r1, [r3, #0]
 80097fc:	3118      	adds	r1, #24
 80097fe:	f7fe fd67 	bl	80082d0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009802:	4620      	mov	r0, r4
 8009804:	2101      	movs	r1, #1
}
 8009806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800980a:	f7ff bcb3 	b.w	8009174 <prvAddCurrentTaskToDelayedList>
 800980e:	bf00      	nop
 8009810:	2000a1d8 	.word	0x2000a1d8

08009814 <vTaskPlaceOnEventListRestricted>:
	{
 8009814:	b538      	push	{r3, r4, r5, lr}
 8009816:	460d      	mov	r5, r1
 8009818:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800981a:	b940      	cbnz	r0, 800982e <vTaskPlaceOnEventListRestricted+0x1a>
 800981c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009820:	f383 8811 	msr	BASEPRI, r3
 8009824:	f3bf 8f6f 	isb	sy
 8009828:	f3bf 8f4f 	dsb	sy
 800982c:	e7fe      	b.n	800982c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800982e:	4b07      	ldr	r3, [pc, #28]	; (800984c <vTaskPlaceOnEventListRestricted+0x38>)
 8009830:	6819      	ldr	r1, [r3, #0]
 8009832:	3118      	adds	r1, #24
 8009834:	f7fe fd40 	bl	80082b8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009838:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800983a:	4621      	mov	r1, r4
 800983c:	bf0c      	ite	eq
 800983e:	4628      	moveq	r0, r5
 8009840:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009848:	f7ff bc94 	b.w	8009174 <prvAddCurrentTaskToDelayedList>
 800984c:	2000a1d8 	.word	0x2000a1d8

08009850 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009850:	68c3      	ldr	r3, [r0, #12]
{
 8009852:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009854:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009856:	b944      	cbnz	r4, 800986a <xTaskRemoveFromEventList+0x1a>
 8009858:	f04f 0350 	mov.w	r3, #80	; 0x50
 800985c:	f383 8811 	msr	BASEPRI, r3
 8009860:	f3bf 8f6f 	isb	sy
 8009864:	f3bf 8f4f 	dsb	sy
 8009868:	e7fe      	b.n	8009868 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800986a:	f104 0118 	add.w	r1, r4, #24
 800986e:	4608      	mov	r0, r1
 8009870:	9101      	str	r1, [sp, #4]
 8009872:	f7fe fd44 	bl	80082fe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009876:	4b12      	ldr	r3, [pc, #72]	; (80098c0 <xTaskRemoveFromEventList+0x70>)
 8009878:	9901      	ldr	r1, [sp, #4]
 800987a:	681b      	ldr	r3, [r3, #0]
 800987c:	b9eb      	cbnz	r3, 80098ba <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800987e:	1d21      	adds	r1, r4, #4
 8009880:	4608      	mov	r0, r1
 8009882:	9101      	str	r1, [sp, #4]
 8009884:	f7fe fd3b 	bl	80082fe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009888:	4a0e      	ldr	r2, [pc, #56]	; (80098c4 <xTaskRemoveFromEventList+0x74>)
 800988a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800988c:	6810      	ldr	r0, [r2, #0]
 800988e:	9901      	ldr	r1, [sp, #4]
 8009890:	4283      	cmp	r3, r0
 8009892:	bf88      	it	hi
 8009894:	6013      	strhi	r3, [r2, #0]
 8009896:	4a0c      	ldr	r2, [pc, #48]	; (80098c8 <xTaskRemoveFromEventList+0x78>)
 8009898:	2014      	movs	r0, #20
 800989a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800989e:	f7fe fd0b 	bl	80082b8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80098a2:	4b0a      	ldr	r3, [pc, #40]	; (80098cc <xTaskRemoveFromEventList+0x7c>)
 80098a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80098a6:	681b      	ldr	r3, [r3, #0]
 80098a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80098aa:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80098ac:	bf85      	ittet	hi
 80098ae:	4b08      	ldrhi	r3, [pc, #32]	; (80098d0 <xTaskRemoveFromEventList+0x80>)
 80098b0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80098b2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80098b4:	6018      	strhi	r0, [r3, #0]
}
 80098b6:	b002      	add	sp, #8
 80098b8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80098ba:	4806      	ldr	r0, [pc, #24]	; (80098d4 <xTaskRemoveFromEventList+0x84>)
 80098bc:	e7ef      	b.n	800989e <xTaskRemoveFromEventList+0x4e>
 80098be:	bf00      	nop
 80098c0:	2000a64c 	.word	0x2000a64c
 80098c4:	2000a654 	.word	0x2000a654
 80098c8:	2000a1e4 	.word	0x2000a1e4
 80098cc:	2000a1d8 	.word	0x2000a1d8
 80098d0:	2000a6d0 	.word	0x2000a6d0
 80098d4:	2000a68c 	.word	0x2000a68c

080098d8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80098d8:	4b03      	ldr	r3, [pc, #12]	; (80098e8 <vTaskInternalSetTimeOutState+0x10>)
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80098de:	4b03      	ldr	r3, [pc, #12]	; (80098ec <vTaskInternalSetTimeOutState+0x14>)
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	6043      	str	r3, [r0, #4]
}
 80098e4:	4770      	bx	lr
 80098e6:	bf00      	nop
 80098e8:	2000a684 	.word	0x2000a684
 80098ec:	2000a6cc 	.word	0x2000a6cc

080098f0 <xTaskCheckForTimeOut>:
{
 80098f0:	b570      	push	{r4, r5, r6, lr}
 80098f2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80098f4:	4605      	mov	r5, r0
 80098f6:	b940      	cbnz	r0, 800990a <xTaskCheckForTimeOut+0x1a>
 80098f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098fc:	f383 8811 	msr	BASEPRI, r3
 8009900:	f3bf 8f6f 	isb	sy
 8009904:	f3bf 8f4f 	dsb	sy
 8009908:	e7fe      	b.n	8009908 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800990a:	b941      	cbnz	r1, 800991e <xTaskCheckForTimeOut+0x2e>
 800990c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009910:	f383 8811 	msr	BASEPRI, r3
 8009914:	f3bf 8f6f 	isb	sy
 8009918:	f3bf 8f4f 	dsb	sy
 800991c:	e7fe      	b.n	800991c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800991e:	f7fe fd69 	bl	80083f4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009922:	4b0f      	ldr	r3, [pc, #60]	; (8009960 <xTaskCheckForTimeOut+0x70>)
 8009924:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009926:	6823      	ldr	r3, [r4, #0]
 8009928:	1c5a      	adds	r2, r3, #1
 800992a:	d010      	beq.n	800994e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800992c:	480d      	ldr	r0, [pc, #52]	; (8009964 <xTaskCheckForTimeOut+0x74>)
 800992e:	682e      	ldr	r6, [r5, #0]
 8009930:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009932:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009934:	4286      	cmp	r6, r0
 8009936:	d001      	beq.n	800993c <xTaskCheckForTimeOut+0x4c>
 8009938:	428a      	cmp	r2, r1
 800993a:	d90f      	bls.n	800995c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800993c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800993e:	4283      	cmp	r3, r0
 8009940:	d90a      	bls.n	8009958 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009942:	1a5b      	subs	r3, r3, r1
 8009944:	4413      	add	r3, r2
 8009946:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009948:	4628      	mov	r0, r5
 800994a:	f7ff ffc5 	bl	80098d8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800994e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009950:	f7fe fd70 	bl	8008434 <vPortExitCritical>
}
 8009954:	4620      	mov	r0, r4
 8009956:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009958:	2300      	movs	r3, #0
 800995a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800995c:	2401      	movs	r4, #1
 800995e:	e7f7      	b.n	8009950 <xTaskCheckForTimeOut+0x60>
 8009960:	2000a6cc 	.word	0x2000a6cc
 8009964:	2000a684 	.word	0x2000a684

08009968 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009968:	4b01      	ldr	r3, [pc, #4]	; (8009970 <vTaskMissedYield+0x8>)
 800996a:	2201      	movs	r2, #1
 800996c:	601a      	str	r2, [r3, #0]
}
 800996e:	4770      	bx	lr
 8009970:	2000a6d0 	.word	0x2000a6d0

08009974 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009974:	4b05      	ldr	r3, [pc, #20]	; (800998c <xTaskGetSchedulerState+0x18>)
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	b133      	cbz	r3, 8009988 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800997a:	4b05      	ldr	r3, [pc, #20]	; (8009990 <xTaskGetSchedulerState+0x1c>)
 800997c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800997e:	2b00      	cmp	r3, #0
 8009980:	bf0c      	ite	eq
 8009982:	2002      	moveq	r0, #2
 8009984:	2000      	movne	r0, #0
 8009986:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009988:	2001      	movs	r0, #1
	}
 800998a:	4770      	bx	lr
 800998c:	2000a6a0 	.word	0x2000a6a0
 8009990:	2000a64c 	.word	0x2000a64c

08009994 <xTaskPriorityInherit>:
	{
 8009994:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009996:	4604      	mov	r4, r0
 8009998:	b348      	cbz	r0, 80099ee <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800999a:	4d1c      	ldr	r5, [pc, #112]	; (8009a0c <xTaskPriorityInherit+0x78>)
 800999c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800999e:	682a      	ldr	r2, [r5, #0]
 80099a0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80099a2:	4293      	cmp	r3, r2
 80099a4:	d229      	bcs.n	80099fa <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099a6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099a8:	4e19      	ldr	r6, [pc, #100]	; (8009a10 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099aa:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80099ac:	bfa1      	itttt	ge
 80099ae:	682a      	ldrge	r2, [r5, #0]
 80099b0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80099b2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80099b6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099b8:	2214      	movs	r2, #20
 80099ba:	fb02 6303 	mla	r3, r2, r3, r6
 80099be:	6942      	ldr	r2, [r0, #20]
 80099c0:	429a      	cmp	r2, r3
 80099c2:	d116      	bne.n	80099f2 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c4:	1d01      	adds	r1, r0, #4
 80099c6:	4608      	mov	r0, r1
 80099c8:	9101      	str	r1, [sp, #4]
 80099ca:	f7fe fc98 	bl	80082fe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099ce:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099d0:	4a10      	ldr	r2, [pc, #64]	; (8009a14 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099d4:	6810      	ldr	r0, [r2, #0]
 80099d6:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099d8:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099da:	4283      	cmp	r3, r0
 80099dc:	f04f 0014 	mov.w	r0, #20
 80099e0:	fb00 6003 	mla	r0, r0, r3, r6
 80099e4:	bf88      	it	hi
 80099e6:	6013      	strhi	r3, [r2, #0]
 80099e8:	f7fe fc66 	bl	80082b8 <vListInsertEnd>
				xReturn = pdTRUE;
 80099ec:	2001      	movs	r0, #1
	}
 80099ee:	b002      	add	sp, #8
 80099f0:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099f2:	682b      	ldr	r3, [r5, #0]
 80099f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099f6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80099f8:	e7f8      	b.n	80099ec <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80099fa:	682b      	ldr	r3, [r5, #0]
 80099fc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80099fe:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009a00:	42a0      	cmp	r0, r4
 8009a02:	bf2c      	ite	cs
 8009a04:	2000      	movcs	r0, #0
 8009a06:	2001      	movcc	r0, #1
 8009a08:	e7f1      	b.n	80099ee <xTaskPriorityInherit+0x5a>
 8009a0a:	bf00      	nop
 8009a0c:	2000a1d8 	.word	0x2000a1d8
 8009a10:	2000a1e4 	.word	0x2000a1e4
 8009a14:	2000a654 	.word	0x2000a654

08009a18 <xTaskPriorityDisinherit>:
	{
 8009a18:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009a1a:	b910      	cbnz	r0, 8009a22 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009a1c:	2000      	movs	r0, #0
	}
 8009a1e:	b002      	add	sp, #8
 8009a20:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009a22:	4b1c      	ldr	r3, [pc, #112]	; (8009a94 <xTaskPriorityDisinherit+0x7c>)
 8009a24:	681c      	ldr	r4, [r3, #0]
 8009a26:	4284      	cmp	r4, r0
 8009a28:	d008      	beq.n	8009a3c <xTaskPriorityDisinherit+0x24>
 8009a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a2e:	f383 8811 	msr	BASEPRI, r3
 8009a32:	f3bf 8f6f 	isb	sy
 8009a36:	f3bf 8f4f 	dsb	sy
 8009a3a:	e7fe      	b.n	8009a3a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009a3c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009a3e:	b943      	cbnz	r3, 8009a52 <xTaskPriorityDisinherit+0x3a>
 8009a40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a44:	f383 8811 	msr	BASEPRI, r3
 8009a48:	f3bf 8f6f 	isb	sy
 8009a4c:	f3bf 8f4f 	dsb	sy
 8009a50:	e7fe      	b.n	8009a50 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a52:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009a54:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009a56:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a58:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009a5a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a5c:	d0de      	beq.n	8009a1c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009a5e:	2b00      	cmp	r3, #0
 8009a60:	d1dc      	bne.n	8009a1c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a62:	1d21      	adds	r1, r4, #4
 8009a64:	4608      	mov	r0, r1
 8009a66:	9101      	str	r1, [sp, #4]
 8009a68:	f7fe fc49 	bl	80082fe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009a6c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009a6e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009a70:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a72:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009a76:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009a78:	4a07      	ldr	r2, [pc, #28]	; (8009a98 <xTaskPriorityDisinherit+0x80>)
 8009a7a:	6810      	ldr	r0, [r2, #0]
 8009a7c:	4283      	cmp	r3, r0
 8009a7e:	bf88      	it	hi
 8009a80:	6013      	strhi	r3, [r2, #0]
 8009a82:	4a06      	ldr	r2, [pc, #24]	; (8009a9c <xTaskPriorityDisinherit+0x84>)
 8009a84:	2014      	movs	r0, #20
 8009a86:	fb00 2003 	mla	r0, r0, r3, r2
 8009a8a:	f7fe fc15 	bl	80082b8 <vListInsertEnd>
					xReturn = pdTRUE;
 8009a8e:	2001      	movs	r0, #1
		return xReturn;
 8009a90:	e7c5      	b.n	8009a1e <xTaskPriorityDisinherit+0x6>
 8009a92:	bf00      	nop
 8009a94:	2000a1d8 	.word	0x2000a1d8
 8009a98:	2000a654 	.word	0x2000a654
 8009a9c:	2000a1e4 	.word	0x2000a1e4

08009aa0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009aa2:	4604      	mov	r4, r0
 8009aa4:	2800      	cmp	r0, #0
 8009aa6:	d044      	beq.n	8009b32 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009aa8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009aaa:	b942      	cbnz	r2, 8009abe <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009aac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ab0:	f383 8811 	msr	BASEPRI, r3
 8009ab4:	f3bf 8f6f 	isb	sy
 8009ab8:	f3bf 8f4f 	dsb	sy
 8009abc:	e7fe      	b.n	8009abc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009abe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009ac0:	4299      	cmp	r1, r3
 8009ac2:	bf38      	it	cc
 8009ac4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009ac6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009ac8:	428b      	cmp	r3, r1
 8009aca:	d032      	beq.n	8009b32 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009acc:	2a01      	cmp	r2, #1
 8009ace:	d130      	bne.n	8009b32 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009ad0:	4a19      	ldr	r2, [pc, #100]	; (8009b38 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009ad2:	6812      	ldr	r2, [r2, #0]
 8009ad4:	4282      	cmp	r2, r0
 8009ad6:	d108      	bne.n	8009aea <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009ad8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009adc:	f383 8811 	msr	BASEPRI, r3
 8009ae0:	f3bf 8f6f 	isb	sy
 8009ae4:	f3bf 8f4f 	dsb	sy
 8009ae8:	e7fe      	b.n	8009ae8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009aea:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009aec:	4d13      	ldr	r5, [pc, #76]	; (8009b3c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009aee:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009af0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009af2:	f04f 0214 	mov.w	r2, #20
 8009af6:	fb02 5303 	mla	r3, r2, r3, r5
 8009afa:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009afc:	bfa4      	itt	ge
 8009afe:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009b02:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009b04:	429a      	cmp	r2, r3
 8009b06:	d114      	bne.n	8009b32 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b08:	1d01      	adds	r1, r0, #4
 8009b0a:	4608      	mov	r0, r1
 8009b0c:	9101      	str	r1, [sp, #4]
 8009b0e:	f7fe fbf6 	bl	80082fe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009b12:	4a0b      	ldr	r2, [pc, #44]	; (8009b40 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009b14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009b16:	6810      	ldr	r0, [r2, #0]
 8009b18:	9901      	ldr	r1, [sp, #4]
 8009b1a:	4283      	cmp	r3, r0
 8009b1c:	f04f 0014 	mov.w	r0, #20
 8009b20:	fb00 5003 	mla	r0, r0, r3, r5
 8009b24:	bf88      	it	hi
 8009b26:	6013      	strhi	r3, [r2, #0]
	}
 8009b28:	b003      	add	sp, #12
 8009b2a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009b2e:	f7fe bbc3 	b.w	80082b8 <vListInsertEnd>
	}
 8009b32:	b003      	add	sp, #12
 8009b34:	bd30      	pop	{r4, r5, pc}
 8009b36:	bf00      	nop
 8009b38:	2000a1d8 	.word	0x2000a1d8
 8009b3c:	2000a1e4 	.word	0x2000a1e4
 8009b40:	2000a654 	.word	0x2000a654

08009b44 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009b44:	4b04      	ldr	r3, [pc, #16]	; (8009b58 <pvTaskIncrementMutexHeldCount+0x14>)
 8009b46:	681a      	ldr	r2, [r3, #0]
 8009b48:	b11a      	cbz	r2, 8009b52 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009b4a:	6819      	ldr	r1, [r3, #0]
 8009b4c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009b4e:	3201      	adds	r2, #1
 8009b50:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009b52:	6818      	ldr	r0, [r3, #0]
	}
 8009b54:	4770      	bx	lr
 8009b56:	bf00      	nop
 8009b58:	2000a1d8 	.word	0x2000a1d8

08009b5c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009b5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009b5e:	4c11      	ldr	r4, [pc, #68]	; (8009ba4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009b60:	f7fe fc48 	bl	80083f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009b64:	6825      	ldr	r5, [r4, #0]
 8009b66:	b9bd      	cbnz	r5, 8009b98 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009b68:	4f0f      	ldr	r7, [pc, #60]	; (8009ba8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009b6a:	4e10      	ldr	r6, [pc, #64]	; (8009bac <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009b6c:	4638      	mov	r0, r7
 8009b6e:	f7fe fb95 	bl	800829c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009b72:	4630      	mov	r0, r6
 8009b74:	f7fe fb92 	bl	800829c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009b78:	4b0d      	ldr	r3, [pc, #52]	; (8009bb0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b7a:	4a0e      	ldr	r2, [pc, #56]	; (8009bb4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009b7c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009b7e:	4b0e      	ldr	r3, [pc, #56]	; (8009bb8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b80:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009b82:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009b84:	200a      	movs	r0, #10
 8009b86:	4b0d      	ldr	r3, [pc, #52]	; (8009bbc <prvCheckForValidListAndQueue+0x60>)
 8009b88:	9500      	str	r5, [sp, #0]
 8009b8a:	f7fe fe44 	bl	8008816 <xQueueGenericCreateStatic>
 8009b8e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009b90:	b110      	cbz	r0, 8009b98 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009b92:	490b      	ldr	r1, [pc, #44]	; (8009bc0 <prvCheckForValidListAndQueue+0x64>)
 8009b94:	f7ff fa0e 	bl	8008fb4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009b98:	b003      	add	sp, #12
 8009b9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009b9e:	f7fe bc49 	b.w	8008434 <vPortExitCritical>
 8009ba2:	bf00      	nop
 8009ba4:	2000a7f8 	.word	0x2000a7f8
 8009ba8:	2000a77c 	.word	0x2000a77c
 8009bac:	2000a790 	.word	0x2000a790
 8009bb0:	2000a6d4 	.word	0x2000a6d4
 8009bb4:	2000a6dc 	.word	0x2000a6dc
 8009bb8:	2000a6d8 	.word	0x2000a6d8
 8009bbc:	2000a7a8 	.word	0x2000a7a8
 8009bc0:	0801f5de 	.word	0x0801f5de

08009bc4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009bc4:	4291      	cmp	r1, r2
{
 8009bc6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009bc8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009bca:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009bcc:	d80a      	bhi.n	8009be4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bce:	1ad2      	subs	r2, r2, r3
 8009bd0:	6983      	ldr	r3, [r0, #24]
 8009bd2:	429a      	cmp	r2, r3
 8009bd4:	d20d      	bcs.n	8009bf2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009bd6:	4b08      	ldr	r3, [pc, #32]	; (8009bf8 <prvInsertTimerInActiveList+0x34>)
 8009bd8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009bda:	6818      	ldr	r0, [r3, #0]
 8009bdc:	f7fe fb78 	bl	80082d0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009be0:	2000      	movs	r0, #0
}
 8009be2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009be4:	429a      	cmp	r2, r3
 8009be6:	d201      	bcs.n	8009bec <prvInsertTimerInActiveList+0x28>
 8009be8:	4299      	cmp	r1, r3
 8009bea:	d202      	bcs.n	8009bf2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009bec:	4b03      	ldr	r3, [pc, #12]	; (8009bfc <prvInsertTimerInActiveList+0x38>)
 8009bee:	1d01      	adds	r1, r0, #4
 8009bf0:	e7f3      	b.n	8009bda <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009bf2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009bf4:	e7f5      	b.n	8009be2 <prvInsertTimerInActiveList+0x1e>
 8009bf6:	bf00      	nop
 8009bf8:	2000a6d8 	.word	0x2000a6d8
 8009bfc:	2000a6d4 	.word	0x2000a6d4

08009c00 <xTimerCreateTimerTask>:
{
 8009c00:	b510      	push	{r4, lr}
 8009c02:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009c04:	f7ff ffaa 	bl	8009b5c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009c08:	4b12      	ldr	r3, [pc, #72]	; (8009c54 <xTimerCreateTimerTask+0x54>)
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	b1b3      	cbz	r3, 8009c3c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009c0e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c10:	aa07      	add	r2, sp, #28
 8009c12:	a906      	add	r1, sp, #24
 8009c14:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009c16:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c1a:	f7fe fa39 	bl	8008090 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009c1e:	9b05      	ldr	r3, [sp, #20]
 8009c20:	9302      	str	r3, [sp, #8]
 8009c22:	9b06      	ldr	r3, [sp, #24]
 8009c24:	9301      	str	r3, [sp, #4]
 8009c26:	2302      	movs	r3, #2
 8009c28:	9300      	str	r3, [sp, #0]
 8009c2a:	9a07      	ldr	r2, [sp, #28]
 8009c2c:	490a      	ldr	r1, [pc, #40]	; (8009c58 <xTimerCreateTimerTask+0x58>)
 8009c2e:	480b      	ldr	r0, [pc, #44]	; (8009c5c <xTimerCreateTimerTask+0x5c>)
 8009c30:	4623      	mov	r3, r4
 8009c32:	f7ff fb86 	bl	8009342 <xTaskCreateStatic>
 8009c36:	4b0a      	ldr	r3, [pc, #40]	; (8009c60 <xTimerCreateTimerTask+0x60>)
 8009c38:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009c3a:	b940      	cbnz	r0, 8009c4e <xTimerCreateTimerTask+0x4e>
 8009c3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c40:	f383 8811 	msr	BASEPRI, r3
 8009c44:	f3bf 8f6f 	isb	sy
 8009c48:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009c4c:	e7fe      	b.n	8009c4c <xTimerCreateTimerTask+0x4c>
}
 8009c4e:	2001      	movs	r0, #1
 8009c50:	b008      	add	sp, #32
 8009c52:	bd10      	pop	{r4, pc}
 8009c54:	2000a7f8 	.word	0x2000a7f8
 8009c58:	0801f5e3 	.word	0x0801f5e3
 8009c5c:	08009d69 	.word	0x08009d69
 8009c60:	2000a7fc 	.word	0x2000a7fc

08009c64 <xTimerGenericCommand>:
{
 8009c64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009c66:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009c68:	4604      	mov	r4, r0
{
 8009c6a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009c6c:	b940      	cbnz	r0, 8009c80 <xTimerGenericCommand+0x1c>
 8009c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c72:	f383 8811 	msr	BASEPRI, r3
 8009c76:	f3bf 8f6f 	isb	sy
 8009c7a:	f3bf 8f4f 	dsb	sy
 8009c7e:	e7fe      	b.n	8009c7e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009c80:	4d0d      	ldr	r5, [pc, #52]	; (8009cb8 <xTimerGenericCommand+0x54>)
 8009c82:	6828      	ldr	r0, [r5, #0]
 8009c84:	b180      	cbz	r0, 8009ca8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c86:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009c88:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009c8c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c8e:	dc0d      	bgt.n	8009cac <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c90:	f7ff fe70 	bl	8009974 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c94:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c96:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c98:	bf08      	it	eq
 8009c9a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009c9c:	6828      	ldr	r0, [r5, #0]
 8009c9e:	bf18      	it	ne
 8009ca0:	461a      	movne	r2, r3
 8009ca2:	4669      	mov	r1, sp
 8009ca4:	f7fe fe6c 	bl	8008980 <xQueueGenericSend>
}
 8009ca8:	b004      	add	sp, #16
 8009caa:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009cac:	2300      	movs	r3, #0
 8009cae:	4669      	mov	r1, sp
 8009cb0:	f7fe ff19 	bl	8008ae6 <xQueueGenericSendFromISR>
 8009cb4:	e7f8      	b.n	8009ca8 <xTimerGenericCommand+0x44>
 8009cb6:	bf00      	nop
 8009cb8:	2000a7f8 	.word	0x2000a7f8

08009cbc <prvSampleTimeNow>:
{
 8009cbc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009cc0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009d64 <prvSampleTimeNow+0xa8>
{
 8009cc4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009cc6:	f7ff fba9 	bl	800941c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009cca:	f8d8 3000 	ldr.w	r3, [r8]
 8009cce:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009cd0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009cd2:	d940      	bls.n	8009d56 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009cd4:	4f21      	ldr	r7, [pc, #132]	; (8009d5c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009cd6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009cda:	683b      	ldr	r3, [r7, #0]
 8009cdc:	681a      	ldr	r2, [r3, #0]
 8009cde:	b95a      	cbnz	r2, 8009cf8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009ce0:	4a1f      	ldr	r2, [pc, #124]	; (8009d60 <prvSampleTimeNow+0xa4>)
 8009ce2:	6811      	ldr	r1, [r2, #0]
 8009ce4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009ce6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009ce8:	2301      	movs	r3, #1
}
 8009cea:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8009cec:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009cee:	f8c8 5000 	str.w	r5, [r8]
}
 8009cf2:	b004      	add	sp, #16
 8009cf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cf8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cfa:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cfc:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d00:	1d21      	adds	r1, r4, #4
 8009d02:	4608      	mov	r0, r1
 8009d04:	9103      	str	r1, [sp, #12]
 8009d06:	f7fe fafa 	bl	80082fe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009d0a:	6a23      	ldr	r3, [r4, #32]
 8009d0c:	4620      	mov	r0, r4
 8009d0e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d10:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009d14:	9903      	ldr	r1, [sp, #12]
 8009d16:	f013 0f04 	tst.w	r3, #4
 8009d1a:	d0de      	beq.n	8009cda <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009d1c:	69a3      	ldr	r3, [r4, #24]
 8009d1e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009d20:	459a      	cmp	sl, r3
 8009d22:	d205      	bcs.n	8009d30 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d24:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009d26:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009d28:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d2a:	f7fe fad1 	bl	80082d0 <vListInsert>
 8009d2e:	e7d4      	b.n	8009cda <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009d30:	2300      	movs	r3, #0
 8009d32:	f8cd 9000 	str.w	r9, [sp]
 8009d36:	4652      	mov	r2, sl
 8009d38:	4619      	mov	r1, r3
 8009d3a:	4620      	mov	r0, r4
 8009d3c:	f7ff ff92 	bl	8009c64 <xTimerGenericCommand>
				configASSERT( xResult );
 8009d40:	2800      	cmp	r0, #0
 8009d42:	d1ca      	bne.n	8009cda <prvSampleTimeNow+0x1e>
 8009d44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d48:	f383 8811 	msr	BASEPRI, r3
 8009d4c:	f3bf 8f6f 	isb	sy
 8009d50:	f3bf 8f4f 	dsb	sy
 8009d54:	e7fe      	b.n	8009d54 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8009d56:	2300      	movs	r3, #0
 8009d58:	e7c7      	b.n	8009cea <prvSampleTimeNow+0x2e>
 8009d5a:	bf00      	nop
 8009d5c:	2000a6d4 	.word	0x2000a6d4
 8009d60:	2000a6d8 	.word	0x2000a6d8
 8009d64:	2000a7a4 	.word	0x2000a7a4

08009d68 <prvTimerTask>:
{
 8009d68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d6c:	4d6e      	ldr	r5, [pc, #440]	; (8009f28 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009d6e:	4e6f      	ldr	r6, [pc, #444]	; (8009f2c <prvTimerTask+0x1c4>)
{
 8009d70:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d72:	682b      	ldr	r3, [r5, #0]
 8009d74:	f8d3 8000 	ldr.w	r8, [r3]
 8009d78:	f1b8 0f00 	cmp.w	r8, #0
 8009d7c:	d035      	beq.n	8009dea <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009d7e:	68db      	ldr	r3, [r3, #12]
 8009d80:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d84:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009d86:	f7ff fb41 	bl	800940c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d8a:	a804      	add	r0, sp, #16
 8009d8c:	f7ff ff96 	bl	8009cbc <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009d90:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d92:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009d94:	2b00      	cmp	r3, #0
 8009d96:	d169      	bne.n	8009e6c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009d98:	2c00      	cmp	r4, #0
 8009d9a:	d14c      	bne.n	8009e36 <prvTimerTask+0xce>
 8009d9c:	4540      	cmp	r0, r8
 8009d9e:	d350      	bcc.n	8009e42 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009da0:	f7ff fbd8 	bl	8009554 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009da4:	682b      	ldr	r3, [r5, #0]
 8009da6:	68db      	ldr	r3, [r3, #12]
 8009da8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009daa:	1d38      	adds	r0, r7, #4
 8009dac:	f7fe faa7 	bl	80082fe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009db0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009db4:	0758      	lsls	r0, r3, #29
 8009db6:	d51a      	bpl.n	8009dee <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009db8:	69b9      	ldr	r1, [r7, #24]
 8009dba:	4643      	mov	r3, r8
 8009dbc:	464a      	mov	r2, r9
 8009dbe:	4441      	add	r1, r8
 8009dc0:	4638      	mov	r0, r7
 8009dc2:	f7ff feff 	bl	8009bc4 <prvInsertTimerInActiveList>
 8009dc6:	b1b0      	cbz	r0, 8009df6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009dc8:	9400      	str	r4, [sp, #0]
 8009dca:	4623      	mov	r3, r4
 8009dcc:	4642      	mov	r2, r8
 8009dce:	4621      	mov	r1, r4
 8009dd0:	4638      	mov	r0, r7
 8009dd2:	f7ff ff47 	bl	8009c64 <xTimerGenericCommand>
			configASSERT( xResult );
 8009dd6:	b970      	cbnz	r0, 8009df6 <prvTimerTask+0x8e>
 8009dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ddc:	f383 8811 	msr	BASEPRI, r3
 8009de0:	f3bf 8f6f 	isb	sy
 8009de4:	f3bf 8f4f 	dsb	sy
 8009de8:	e7fe      	b.n	8009de8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009dea:	2401      	movs	r4, #1
 8009dec:	e7cb      	b.n	8009d86 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009dee:	f023 0301 	bic.w	r3, r3, #1
 8009df2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009df6:	6a3b      	ldr	r3, [r7, #32]
 8009df8:	4638      	mov	r0, r7
 8009dfa:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009dfc:	6830      	ldr	r0, [r6, #0]
 8009dfe:	2200      	movs	r2, #0
 8009e00:	a904      	add	r1, sp, #16
 8009e02:	f7fe ff26 	bl	8008c52 <xQueueReceive>
 8009e06:	2800      	cmp	r0, #0
 8009e08:	d0b3      	beq.n	8009d72 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009e0a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e0c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	db2f      	blt.n	8009e72 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009e12:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009e14:	6963      	ldr	r3, [r4, #20]
 8009e16:	2b00      	cmp	r3, #0
 8009e18:	d132      	bne.n	8009e80 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e1a:	a803      	add	r0, sp, #12
 8009e1c:	f7ff ff4e 	bl	8009cbc <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009e20:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e22:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009e24:	2b09      	cmp	r3, #9
 8009e26:	d8e9      	bhi.n	8009dfc <prvTimerTask+0x94>
 8009e28:	e8df f003 	tbb	[pc, r3]
 8009e2c:	572e2e2e 	.word	0x572e2e2e
 8009e30:	2e2e765e 	.word	0x2e2e765e
 8009e34:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009e36:	4b3e      	ldr	r3, [pc, #248]	; (8009f30 <prvTimerTask+0x1c8>)
 8009e38:	681b      	ldr	r3, [r3, #0]
 8009e3a:	681c      	ldr	r4, [r3, #0]
 8009e3c:	fab4 f484 	clz	r4, r4
 8009e40:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009e42:	6830      	ldr	r0, [r6, #0]
 8009e44:	4622      	mov	r2, r4
 8009e46:	eba8 0109 	sub.w	r1, r8, r9
 8009e4a:	f7ff f8f0 	bl	800902e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009e4e:	f7ff fb81 	bl	8009554 <xTaskResumeAll>
 8009e52:	2800      	cmp	r0, #0
 8009e54:	d1d2      	bne.n	8009dfc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009e56:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e5a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e62:	f3bf 8f4f 	dsb	sy
 8009e66:	f3bf 8f6f 	isb	sy
 8009e6a:	e7c7      	b.n	8009dfc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009e6c:	f7ff fb72 	bl	8009554 <xTaskResumeAll>
}
 8009e70:	e7c4      	b.n	8009dfc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e72:	9b05      	ldr	r3, [sp, #20]
 8009e74:	9907      	ldr	r1, [sp, #28]
 8009e76:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009e78:	9b04      	ldr	r3, [sp, #16]
 8009e7a:	2b00      	cmp	r3, #0
 8009e7c:	dbbe      	blt.n	8009dfc <prvTimerTask+0x94>
 8009e7e:	e7c8      	b.n	8009e12 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e80:	1d20      	adds	r0, r4, #4
 8009e82:	f7fe fa3c 	bl	80082fe <uxListRemove>
 8009e86:	e7c8      	b.n	8009e1a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e88:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e8c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e8e:	f043 0301 	orr.w	r3, r3, #1
 8009e92:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e96:	9b05      	ldr	r3, [sp, #20]
 8009e98:	4620      	mov	r0, r4
 8009e9a:	4419      	add	r1, r3
 8009e9c:	f7ff fe92 	bl	8009bc4 <prvInsertTimerInActiveList>
 8009ea0:	2800      	cmp	r0, #0
 8009ea2:	d0ab      	beq.n	8009dfc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009ea4:	6a23      	ldr	r3, [r4, #32]
 8009ea6:	4620      	mov	r0, r4
 8009ea8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009eaa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009eae:	0759      	lsls	r1, r3, #29
 8009eb0:	d5a4      	bpl.n	8009dfc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009eb2:	69a2      	ldr	r2, [r4, #24]
 8009eb4:	9905      	ldr	r1, [sp, #20]
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	440a      	add	r2, r1
 8009eba:	9300      	str	r3, [sp, #0]
 8009ebc:	4619      	mov	r1, r3
 8009ebe:	4620      	mov	r0, r4
 8009ec0:	f7ff fed0 	bl	8009c64 <xTimerGenericCommand>
							configASSERT( xResult );
 8009ec4:	2800      	cmp	r0, #0
 8009ec6:	d199      	bne.n	8009dfc <prvTimerTask+0x94>
 8009ec8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ecc:	f383 8811 	msr	BASEPRI, r3
 8009ed0:	f3bf 8f6f 	isb	sy
 8009ed4:	f3bf 8f4f 	dsb	sy
 8009ed8:	e7fe      	b.n	8009ed8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009eda:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009ede:	f023 0301 	bic.w	r3, r3, #1
 8009ee2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009ee6:	e789      	b.n	8009dfc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009ee8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009eec:	f043 0301 	orr.w	r3, r3, #1
 8009ef0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009ef4:	9905      	ldr	r1, [sp, #20]
 8009ef6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009ef8:	b941      	cbnz	r1, 8009f0c <prvTimerTask+0x1a4>
 8009efa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009efe:	f383 8811 	msr	BASEPRI, r3
 8009f02:	f3bf 8f6f 	isb	sy
 8009f06:	f3bf 8f4f 	dsb	sy
 8009f0a:	e7fe      	b.n	8009f0a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009f0c:	4603      	mov	r3, r0
 8009f0e:	4401      	add	r1, r0
 8009f10:	4620      	mov	r0, r4
 8009f12:	f7ff fe57 	bl	8009bc4 <prvInsertTimerInActiveList>
					break;
 8009f16:	e771      	b.n	8009dfc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009f18:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009f1c:	079a      	lsls	r2, r3, #30
 8009f1e:	d4de      	bmi.n	8009ede <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009f20:	4620      	mov	r0, r4
 8009f22:	f7fe f97d 	bl	8008220 <vPortFree>
 8009f26:	e769      	b.n	8009dfc <prvTimerTask+0x94>
 8009f28:	2000a6d4 	.word	0x2000a6d4
 8009f2c:	2000a7f8 	.word	0x2000a7f8
 8009f30:	2000a6d8 	.word	0x2000a6d8

08009f34 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009f34:	8880      	ldrh	r0, [r0, #4]
 8009f36:	4770      	bx	lr

08009f38 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009f38:	2300      	movs	r3, #0
 8009f3a:	8083      	strh	r3, [r0, #4]
 8009f3c:	4770      	bx	lr
	...

08009f40 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009f40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f42:	6803      	ldr	r3, [r0, #0]
 8009f44:	4605      	mov	r5, r0
 8009f46:	460e      	mov	r6, r1
 8009f48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f4a:	2100      	movs	r1, #0
 8009f4c:	4798      	blx	r3
 8009f4e:	682b      	ldr	r3, [r5, #0]
 8009f50:	4604      	mov	r4, r0
 8009f52:	6a1b      	ldr	r3, [r3, #32]
 8009f54:	4628      	mov	r0, r5
 8009f56:	4798      	blx	r3
 8009f58:	88ab      	ldrh	r3, [r5, #4]
 8009f5a:	1b34      	subs	r4, r6, r4
 8009f5c:	b2a4      	uxth	r4, r4
 8009f5e:	fbb4 f4f0 	udiv	r4, r4, r0
 8009f62:	42a3      	cmp	r3, r4
 8009f64:	d805      	bhi.n	8009f72 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009f66:	4b0e      	ldr	r3, [pc, #56]	; (8009fa0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009f68:	4a0e      	ldr	r2, [pc, #56]	; (8009fa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009f6a:	211d      	movs	r1, #29
 8009f6c:	480e      	ldr	r0, [pc, #56]	; (8009fa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8009f6e:	f012 fea5 	bl	801ccbc <__assert_func>
 8009f72:	682b      	ldr	r3, [r5, #0]
 8009f74:	2100      	movs	r1, #0
 8009f76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f78:	4628      	mov	r0, r5
 8009f7a:	4798      	blx	r3
 8009f7c:	682b      	ldr	r3, [r5, #0]
 8009f7e:	4607      	mov	r7, r0
 8009f80:	6a1b      	ldr	r3, [r3, #32]
 8009f82:	4628      	mov	r0, r5
 8009f84:	4798      	blx	r3
 8009f86:	1bf3      	subs	r3, r6, r7
 8009f88:	b29b      	uxth	r3, r3
 8009f8a:	fbb3 f2f0 	udiv	r2, r3, r0
 8009f8e:	fb02 3010 	mls	r0, r2, r0, r3
 8009f92:	b118      	cbz	r0, 8009f9c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009f94:	4b05      	ldr	r3, [pc, #20]	; (8009fac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009f96:	4a03      	ldr	r2, [pc, #12]	; (8009fa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009f98:	211e      	movs	r1, #30
 8009f9a:	e7e7      	b.n	8009f6c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009f9c:	4620      	mov	r0, r4
 8009f9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009fa0:	0801f5eb 	.word	0x0801f5eb
 8009fa4:	0801f756 	.word	0x0801f756
 8009fa8:	0801f600 	.word	0x0801f600
 8009fac:	0801f62e 	.word	0x0801f62e

08009fb0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009fb0:	b538      	push	{r3, r4, r5, lr}
 8009fb2:	6803      	ldr	r3, [r0, #0]
 8009fb4:	6a1b      	ldr	r3, [r3, #32]
 8009fb6:	460d      	mov	r5, r1
 8009fb8:	4604      	mov	r4, r0
 8009fba:	4798      	blx	r3
 8009fbc:	4285      	cmp	r5, r0
 8009fbe:	d905      	bls.n	8009fcc <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8009fc0:	4b0c      	ldr	r3, [pc, #48]	; (8009ff4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8009fc2:	4a0d      	ldr	r2, [pc, #52]	; (8009ff8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009fc4:	212f      	movs	r1, #47	; 0x2f
 8009fc6:	480d      	ldr	r0, [pc, #52]	; (8009ffc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009fc8:	f012 fe78 	bl	801ccbc <__assert_func>
 8009fcc:	6823      	ldr	r3, [r4, #0]
 8009fce:	88a5      	ldrh	r5, [r4, #4]
 8009fd0:	69db      	ldr	r3, [r3, #28]
 8009fd2:	4620      	mov	r0, r4
 8009fd4:	4798      	blx	r3
 8009fd6:	4285      	cmp	r5, r0
 8009fd8:	d303      	bcc.n	8009fe2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009fda:	4b09      	ldr	r3, [pc, #36]	; (800a000 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009fdc:	4a06      	ldr	r2, [pc, #24]	; (8009ff8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009fde:	2130      	movs	r1, #48	; 0x30
 8009fe0:	e7f1      	b.n	8009fc6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8009fe2:	6823      	ldr	r3, [r4, #0]
 8009fe4:	88a1      	ldrh	r1, [r4, #4]
 8009fe6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fe8:	4620      	mov	r0, r4
 8009fea:	4798      	blx	r3
 8009fec:	88a3      	ldrh	r3, [r4, #4]
 8009fee:	3301      	adds	r3, #1
 8009ff0:	80a3      	strh	r3, [r4, #4]
 8009ff2:	bd38      	pop	{r3, r4, r5, pc}
 8009ff4:	0801f6a8 	.word	0x0801f6a8
 8009ff8:	0801f799 	.word	0x0801f799
 8009ffc:	0801f600 	.word	0x0801f600
 800a000:	0801f6bf 	.word	0x0801f6bf

0800a004 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a004:	b570      	push	{r4, r5, r6, lr}
 800a006:	6803      	ldr	r3, [r0, #0]
 800a008:	6a1b      	ldr	r3, [r3, #32]
 800a00a:	4616      	mov	r6, r2
 800a00c:	4604      	mov	r4, r0
 800a00e:	460d      	mov	r5, r1
 800a010:	4798      	blx	r3
 800a012:	4286      	cmp	r6, r0
 800a014:	d905      	bls.n	800a022 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a016:	4b06      	ldr	r3, [pc, #24]	; (800a030 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a018:	4a06      	ldr	r2, [pc, #24]	; (800a034 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a01a:	4807      	ldr	r0, [pc, #28]	; (800a038 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a01c:	2139      	movs	r1, #57	; 0x39
 800a01e:	f012 fe4d 	bl	801ccbc <__assert_func>
 800a022:	6823      	ldr	r3, [r4, #0]
 800a024:	4629      	mov	r1, r5
 800a026:	4620      	mov	r0, r4
 800a028:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a02a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a02e:	4718      	bx	r3
 800a030:	0801f6a8 	.word	0x0801f6a8
 800a034:	0801f70c 	.word	0x0801f70c
 800a038:	0801f600 	.word	0x0801f600

0800a03c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a03c:	4770      	bx	lr
	...

0800a040 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a040:	4a02      	ldr	r2, [pc, #8]	; (800a04c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a042:	6002      	str	r2, [r0, #0]
 800a044:	2200      	movs	r2, #0
 800a046:	8082      	strh	r2, [r0, #4]
 800a048:	4770      	bx	lr
 800a04a:	bf00      	nop
 800a04c:	0801f6e0 	.word	0x0801f6e0

0800a050 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a050:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a052:	4770      	bx	lr

0800a054 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a054:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a056:	2000      	movs	r0, #0
 800a058:	b12b      	cbz	r3, 800a066 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a05a:	b920      	cbnz	r0, 800a066 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a05c:	1a5a      	subs	r2, r3, r1
 800a05e:	4250      	negs	r0, r2
 800a060:	4150      	adcs	r0, r2
 800a062:	699b      	ldr	r3, [r3, #24]
 800a064:	e7f8      	b.n	800a058 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a066:	4770      	bx	lr

0800a068 <_ZN8touchgfx9Container9removeAllEv>:
 800a068:	2200      	movs	r2, #0
 800a06a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a06c:	b123      	cbz	r3, 800a078 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a06e:	6999      	ldr	r1, [r3, #24]
 800a070:	6281      	str	r1, [r0, #40]	; 0x28
 800a072:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a076:	e7f8      	b.n	800a06a <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a078:	4770      	bx	lr

0800a07a <_ZN8touchgfx9Container6unlinkEv>:
 800a07a:	2300      	movs	r3, #0
 800a07c:	6283      	str	r3, [r0, #40]	; 0x28
 800a07e:	4770      	bx	lr

0800a080 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a080:	2200      	movs	r2, #0
 800a082:	8002      	strh	r2, [r0, #0]
 800a084:	8042      	strh	r2, [r0, #2]
 800a086:	8082      	strh	r2, [r0, #4]
 800a088:	80c2      	strh	r2, [r0, #6]
 800a08a:	4770      	bx	lr

0800a08c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a08c:	b570      	push	{r4, r5, r6, lr}
 800a08e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a090:	460d      	mov	r5, r1
 800a092:	4616      	mov	r6, r2
 800a094:	b13c      	cbz	r4, 800a0a6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a096:	6823      	ldr	r3, [r4, #0]
 800a098:	4620      	mov	r0, r4
 800a09a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a09c:	4632      	mov	r2, r6
 800a09e:	4629      	mov	r1, r5
 800a0a0:	4798      	blx	r3
 800a0a2:	69a4      	ldr	r4, [r4, #24]
 800a0a4:	e7f6      	b.n	800a094 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a0a6:	bd70      	pop	{r4, r5, r6, pc}

0800a0a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a0a8:	b538      	push	{r3, r4, r5, lr}
 800a0aa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a0ac:	460d      	mov	r5, r1
 800a0ae:	b134      	cbz	r4, 800a0be <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a0b0:	682b      	ldr	r3, [r5, #0]
 800a0b2:	4621      	mov	r1, r4
 800a0b4:	689b      	ldr	r3, [r3, #8]
 800a0b6:	4628      	mov	r0, r5
 800a0b8:	4798      	blx	r3
 800a0ba:	69a4      	ldr	r4, [r4, #24]
 800a0bc:	e7f7      	b.n	800a0ae <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a0be:	bd38      	pop	{r3, r4, r5, pc}

0800a0c0 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a0c0:	b510      	push	{r4, lr}
 800a0c2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a0c4:	b12c      	cbz	r4, 800a0d2 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a0c6:	6823      	ldr	r3, [r4, #0]
 800a0c8:	4620      	mov	r0, r4
 800a0ca:	699b      	ldr	r3, [r3, #24]
 800a0cc:	4798      	blx	r3
 800a0ce:	69a4      	ldr	r4, [r4, #24]
 800a0d0:	e7f8      	b.n	800a0c4 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a0d2:	bd10      	pop	{r4, pc}

0800a0d4 <_ZN8touchgfx9ContainerD1Ev>:
 800a0d4:	4770      	bx	lr

0800a0d6 <_ZN8touchgfx9ContainerD0Ev>:
 800a0d6:	b510      	push	{r4, lr}
 800a0d8:	212c      	movs	r1, #44	; 0x2c
 800a0da:	4604      	mov	r4, r0
 800a0dc:	f012 fdc0 	bl	801cc60 <_ZdlPvj>
 800a0e0:	4620      	mov	r0, r4
 800a0e2:	bd10      	pop	{r4, pc}

0800a0e4 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a0e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a0e6:	b19b      	cbz	r3, 800a110 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0e8:	428b      	cmp	r3, r1
 800a0ea:	d109      	bne.n	800a100 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a0ec:	699a      	ldr	r2, [r3, #24]
 800a0ee:	2100      	movs	r1, #0
 800a0f0:	6159      	str	r1, [r3, #20]
 800a0f2:	6282      	str	r2, [r0, #40]	; 0x28
 800a0f4:	b902      	cbnz	r2, 800a0f8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a0f6:	4770      	bx	lr
 800a0f8:	6199      	str	r1, [r3, #24]
 800a0fa:	4770      	bx	lr
 800a0fc:	4613      	mov	r3, r2
 800a0fe:	b13a      	cbz	r2, 800a110 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a100:	699a      	ldr	r2, [r3, #24]
 800a102:	428a      	cmp	r2, r1
 800a104:	d1fa      	bne.n	800a0fc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a106:	698a      	ldr	r2, [r1, #24]
 800a108:	619a      	str	r2, [r3, #24]
 800a10a:	2300      	movs	r3, #0
 800a10c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a110:	4770      	bx	lr

0800a112 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a112:	b410      	push	{r4}
 800a114:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a116:	4604      	mov	r4, r0
 800a118:	b92b      	cbnz	r3, 800a126 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a11a:	6803      	ldr	r3, [r0, #0]
 800a11c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a120:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a122:	4611      	mov	r1, r2
 800a124:	4718      	bx	r3
 800a126:	b941      	cbnz	r1, 800a13a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a128:	6193      	str	r3, [r2, #24]
 800a12a:	6282      	str	r2, [r0, #40]	; 0x28
 800a12c:	6154      	str	r4, [r2, #20]
 800a12e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a132:	4770      	bx	lr
 800a134:	4603      	mov	r3, r0
 800a136:	2800      	cmp	r0, #0
 800a138:	d0f9      	beq.n	800a12e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a13a:	4299      	cmp	r1, r3
 800a13c:	6998      	ldr	r0, [r3, #24]
 800a13e:	d1f9      	bne.n	800a134 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a140:	6190      	str	r0, [r2, #24]
 800a142:	618a      	str	r2, [r1, #24]
 800a144:	e7f2      	b.n	800a12c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800a148 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a148:	4288      	cmp	r0, r1
 800a14a:	b508      	push	{r3, lr}
 800a14c:	d105      	bne.n	800a15a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a14e:	4b11      	ldr	r3, [pc, #68]	; (800a194 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a150:	4a11      	ldr	r2, [pc, #68]	; (800a198 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a152:	2120      	movs	r1, #32
 800a154:	4811      	ldr	r0, [pc, #68]	; (800a19c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a156:	f012 fdb1 	bl	801ccbc <__assert_func>
 800a15a:	694b      	ldr	r3, [r1, #20]
 800a15c:	b11b      	cbz	r3, 800a166 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a15e:	4b10      	ldr	r3, [pc, #64]	; (800a1a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a160:	4a0d      	ldr	r2, [pc, #52]	; (800a198 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a162:	2121      	movs	r1, #33	; 0x21
 800a164:	e7f6      	b.n	800a154 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a166:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a16a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a16c:	b913      	cbnz	r3, 800a174 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a16e:	6281      	str	r1, [r0, #40]	; 0x28
 800a170:	bd08      	pop	{r3, pc}
 800a172:	4613      	mov	r3, r2
 800a174:	699a      	ldr	r2, [r3, #24]
 800a176:	b12a      	cbz	r2, 800a184 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a178:	428b      	cmp	r3, r1
 800a17a:	d1fa      	bne.n	800a172 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a17c:	4b09      	ldr	r3, [pc, #36]	; (800a1a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a17e:	4a06      	ldr	r2, [pc, #24]	; (800a198 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a180:	2132      	movs	r1, #50	; 0x32
 800a182:	e7e7      	b.n	800a154 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a184:	428b      	cmp	r3, r1
 800a186:	d103      	bne.n	800a190 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a188:	4b06      	ldr	r3, [pc, #24]	; (800a1a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a18a:	4a03      	ldr	r2, [pc, #12]	; (800a198 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a18c:	2135      	movs	r1, #53	; 0x35
 800a18e:	e7e1      	b.n	800a154 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a190:	6199      	str	r1, [r3, #24]
 800a192:	e7ed      	b.n	800a170 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a194:	0801f7d7 	.word	0x0801f7d7
 800a198:	0801f930 	.word	0x0801f930
 800a19c:	0801f803 	.word	0x0801f803
 800a1a0:	0801f836 	.word	0x0801f836
 800a1a4:	0801f86c 	.word	0x0801f86c

0800a1a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a1a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1ac:	461f      	mov	r7, r3
 800a1ae:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a1b2:	460d      	mov	r5, r1
 800a1b4:	4616      	mov	r6, r2
 800a1b6:	b103      	cbz	r3, 800a1ba <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a1b8:	6038      	str	r0, [r7, #0]
 800a1ba:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a1bc:	b314      	cbz	r4, 800a204 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a1be:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a1c2:	b1eb      	cbz	r3, 800a200 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a1c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a1c8:	428d      	cmp	r5, r1
 800a1ca:	db19      	blt.n	800a200 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a1cc:	8923      	ldrh	r3, [r4, #8]
 800a1ce:	b289      	uxth	r1, r1
 800a1d0:	440b      	add	r3, r1
 800a1d2:	b21b      	sxth	r3, r3
 800a1d4:	429d      	cmp	r5, r3
 800a1d6:	da13      	bge.n	800a200 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a1d8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a1dc:	4296      	cmp	r6, r2
 800a1de:	db0f      	blt.n	800a200 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a1e0:	8963      	ldrh	r3, [r4, #10]
 800a1e2:	b292      	uxth	r2, r2
 800a1e4:	4413      	add	r3, r2
 800a1e6:	b21b      	sxth	r3, r3
 800a1e8:	429e      	cmp	r6, r3
 800a1ea:	da09      	bge.n	800a200 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a1ec:	6823      	ldr	r3, [r4, #0]
 800a1ee:	1ab2      	subs	r2, r6, r2
 800a1f0:	1a69      	subs	r1, r5, r1
 800a1f2:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a1f6:	b212      	sxth	r2, r2
 800a1f8:	463b      	mov	r3, r7
 800a1fa:	b209      	sxth	r1, r1
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	47c0      	blx	r8
 800a200:	69a4      	ldr	r4, [r4, #24]
 800a202:	e7db      	b.n	800a1bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a208 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a20c:	4c6e      	ldr	r4, [pc, #440]	; (800a3c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a20e:	b0a1      	sub	sp, #132	; 0x84
 800a210:	6824      	ldr	r4, [r4, #0]
 800a212:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a214:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a218:	9303      	str	r3, [sp, #12]
 800a21a:	2400      	movs	r4, #0
 800a21c:	802c      	strh	r4, [r5, #0]
 800a21e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a220:	802c      	strh	r4, [r5, #0]
 800a222:	601c      	str	r4, [r3, #0]
 800a224:	4606      	mov	r6, r0
 800a226:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a22a:	f7ff ffbd 	bl	800a1a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a22e:	f1b9 0f03 	cmp.w	r9, #3
 800a232:	f340 80c2 	ble.w	800a3ba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a236:	4631      	mov	r1, r6
 800a238:	a80c      	add	r0, sp, #48	; 0x30
 800a23a:	f004 ff45 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a23e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a242:	9306      	str	r3, [sp, #24]
 800a244:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a248:	9307      	str	r3, [sp, #28]
 800a24a:	9b03      	ldr	r3, [sp, #12]
 800a24c:	f8d3 a000 	ldr.w	sl, [r3]
 800a250:	f1ba 0f00 	cmp.w	sl, #0
 800a254:	f000 80b4 	beq.w	800a3c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a258:	4651      	mov	r1, sl
 800a25a:	a810      	add	r0, sp, #64	; 0x40
 800a25c:	f004 ff34 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a260:	9b01      	ldr	r3, [sp, #4]
 800a262:	9a06      	ldr	r2, [sp, #24]
 800a264:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a268:	189d      	adds	r5, r3, r2
 800a26a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a26e:	9a07      	ldr	r2, [sp, #28]
 800a270:	2002      	movs	r0, #2
 800a272:	fb91 f1f0 	sdiv	r1, r1, r0
 800a276:	4419      	add	r1, r3
 800a278:	1a6d      	subs	r5, r5, r1
 800a27a:	9b02      	ldr	r3, [sp, #8]
 800a27c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a280:	4413      	add	r3, r2
 800a282:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a286:	fb92 f2f0 	sdiv	r2, r2, r0
 800a28a:	440a      	add	r2, r1
 800a28c:	1a9b      	subs	r3, r3, r2
 800a28e:	435b      	muls	r3, r3
 800a290:	fb05 3505 	mla	r5, r5, r5, r3
 800a294:	4f4d      	ldr	r7, [pc, #308]	; (800a3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a296:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a298:	ac10      	add	r4, sp, #64	; 0x40
 800a29a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a29c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a29e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a2a0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a2a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a2a4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a2a8:	f1b9 0f0c 	cmp.w	r9, #12
 800a2ac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a2b0:	f04f 0303 	mov.w	r3, #3
 800a2b4:	bfc8      	it	gt
 800a2b6:	4698      	movgt	r8, r3
 800a2b8:	f8cd 9000 	str.w	r9, [sp]
 800a2bc:	f04f 0400 	mov.w	r4, #0
 800a2c0:	bfdc      	itt	le
 800a2c2:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a2c6:	fb92 f8f3 	sdivle	r8, r2, r3
 800a2ca:	1c63      	adds	r3, r4, #1
 800a2cc:	aa10      	add	r2, sp, #64	; 0x40
 800a2ce:	f004 0401 	and.w	r4, r4, #1
 800a2d2:	9308      	str	r3, [sp, #32]
 800a2d4:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a2d8:	9b00      	ldr	r3, [sp, #0]
 800a2da:	fb93 f3f8 	sdiv	r3, r3, r8
 800a2de:	b29b      	uxth	r3, r3
 800a2e0:	3404      	adds	r4, #4
 800a2e2:	f04f 0b00 	mov.w	fp, #0
 800a2e6:	9304      	str	r3, [sp, #16]
 800a2e8:	9a04      	ldr	r2, [sp, #16]
 800a2ea:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a2ee:	fb13 f302 	smulbb	r3, r3, r2
 800a2f2:	9a01      	ldr	r2, [sp, #4]
 800a2f4:	b29b      	uxth	r3, r3
 800a2f6:	1899      	adds	r1, r3, r2
 800a2f8:	9305      	str	r3, [sp, #20]
 800a2fa:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a2fe:	b209      	sxth	r1, r1
 800a300:	4299      	cmp	r1, r3
 800a302:	db4d      	blt.n	800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a304:	8932      	ldrh	r2, [r6, #8]
 800a306:	4413      	add	r3, r2
 800a308:	b21b      	sxth	r3, r3
 800a30a:	4299      	cmp	r1, r3
 800a30c:	da48      	bge.n	800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a30e:	9b04      	ldr	r3, [sp, #16]
 800a310:	6827      	ldr	r7, [r4, #0]
 800a312:	fb17 f703 	smulbb	r7, r7, r3
 800a316:	9b02      	ldr	r3, [sp, #8]
 800a318:	b2bf      	uxth	r7, r7
 800a31a:	18fa      	adds	r2, r7, r3
 800a31c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a320:	b212      	sxth	r2, r2
 800a322:	429a      	cmp	r2, r3
 800a324:	db3c      	blt.n	800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a326:	8970      	ldrh	r0, [r6, #10]
 800a328:	4403      	add	r3, r0
 800a32a:	b21b      	sxth	r3, r3
 800a32c:	429a      	cmp	r2, r3
 800a32e:	da37      	bge.n	800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a330:	2300      	movs	r3, #0
 800a332:	930b      	str	r3, [sp, #44]	; 0x2c
 800a334:	4630      	mov	r0, r6
 800a336:	ab0b      	add	r3, sp, #44	; 0x2c
 800a338:	f7ff ff36 	bl	800a1a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a33c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a33e:	b37a      	cbz	r2, 800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a340:	4552      	cmp	r2, sl
 800a342:	d02d      	beq.n	800a3a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a344:	4611      	mov	r1, r2
 800a346:	a80e      	add	r0, sp, #56	; 0x38
 800a348:	9209      	str	r2, [sp, #36]	; 0x24
 800a34a:	f004 febd 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a34e:	9a06      	ldr	r2, [sp, #24]
 800a350:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a354:	9b01      	ldr	r3, [sp, #4]
 800a356:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a35a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a35e:	4413      	add	r3, r2
 800a360:	f04f 0e02 	mov.w	lr, #2
 800a364:	fb91 f1fe 	sdiv	r1, r1, lr
 800a368:	4401      	add	r1, r0
 800a36a:	1a58      	subs	r0, r3, r1
 800a36c:	9a07      	ldr	r2, [sp, #28]
 800a36e:	9b02      	ldr	r3, [sp, #8]
 800a370:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a374:	fb9c fcfe 	sdiv	ip, ip, lr
 800a378:	4413      	add	r3, r2
 800a37a:	448c      	add	ip, r1
 800a37c:	eba3 030c 	sub.w	r3, r3, ip
 800a380:	435b      	muls	r3, r3
 800a382:	fb00 3300 	mla	r3, r0, r0, r3
 800a386:	42ab      	cmp	r3, r5
 800a388:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a38a:	d208      	bcs.n	800a39e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a38c:	9803      	ldr	r0, [sp, #12]
 800a38e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a390:	6001      	str	r1, [r0, #0]
 800a392:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a394:	9805      	ldr	r0, [sp, #20]
 800a396:	8008      	strh	r0, [r1, #0]
 800a398:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a39a:	461d      	mov	r5, r3
 800a39c:	800f      	strh	r7, [r1, #0]
 800a39e:	4692      	mov	sl, r2
 800a3a0:	f10b 0b01 	add.w	fp, fp, #1
 800a3a4:	f1bb 0f04 	cmp.w	fp, #4
 800a3a8:	f104 0408 	add.w	r4, r4, #8
 800a3ac:	d19c      	bne.n	800a2e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a3ae:	9b00      	ldr	r3, [sp, #0]
 800a3b0:	9c08      	ldr	r4, [sp, #32]
 800a3b2:	444b      	add	r3, r9
 800a3b4:	4544      	cmp	r4, r8
 800a3b6:	9300      	str	r3, [sp, #0]
 800a3b8:	d187      	bne.n	800a2ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a3ba:	b021      	add	sp, #132	; 0x84
 800a3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3c0:	f04f 35ff 	mov.w	r5, #4294967295
 800a3c4:	e766      	b.n	800a294 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a3c6:	bf00      	nop
 800a3c8:	2000a80c 	.word	0x2000a80c
 800a3cc:	0801de34 	.word	0x0801de34

0800a3d0 <_ZN8touchgfx4RectaNERKS0_>:
 800a3d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a3d4:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a3d8:	888c      	ldrh	r4, [r1, #4]
 800a3da:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a3de:	443c      	add	r4, r7
 800a3e0:	b2a4      	uxth	r4, r4
 800a3e2:	fa0f f884 	sxth.w	r8, r4
 800a3e6:	45c1      	cmp	r9, r8
 800a3e8:	da2f      	bge.n	800a44a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a3ea:	8882      	ldrh	r2, [r0, #4]
 800a3ec:	444a      	add	r2, r9
 800a3ee:	b292      	uxth	r2, r2
 800a3f0:	fa0f fe82 	sxth.w	lr, r2
 800a3f4:	4577      	cmp	r7, lr
 800a3f6:	da28      	bge.n	800a44a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a3f8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a3fc:	88cb      	ldrh	r3, [r1, #6]
 800a3fe:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a402:	442b      	add	r3, r5
 800a404:	b21b      	sxth	r3, r3
 800a406:	429e      	cmp	r6, r3
 800a408:	da1f      	bge.n	800a44a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a40a:	88c3      	ldrh	r3, [r0, #6]
 800a40c:	4433      	add	r3, r6
 800a40e:	b29b      	uxth	r3, r3
 800a410:	fa0f fc83 	sxth.w	ip, r3
 800a414:	4565      	cmp	r5, ip
 800a416:	da18      	bge.n	800a44a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a418:	454f      	cmp	r7, r9
 800a41a:	bfb8      	it	lt
 800a41c:	464f      	movlt	r7, r9
 800a41e:	42b5      	cmp	r5, r6
 800a420:	bfb8      	it	lt
 800a422:	4635      	movlt	r5, r6
 800a424:	45f0      	cmp	r8, lr
 800a426:	bfd8      	it	le
 800a428:	4622      	movle	r2, r4
 800a42a:	1bd2      	subs	r2, r2, r7
 800a42c:	8082      	strh	r2, [r0, #4]
 800a42e:	884a      	ldrh	r2, [r1, #2]
 800a430:	88c9      	ldrh	r1, [r1, #6]
 800a432:	8007      	strh	r7, [r0, #0]
 800a434:	440a      	add	r2, r1
 800a436:	b292      	uxth	r2, r2
 800a438:	b211      	sxth	r1, r2
 800a43a:	458c      	cmp	ip, r1
 800a43c:	bfa8      	it	ge
 800a43e:	4613      	movge	r3, r2
 800a440:	1b5b      	subs	r3, r3, r5
 800a442:	80c3      	strh	r3, [r0, #6]
 800a444:	8045      	strh	r5, [r0, #2]
 800a446:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a44a:	2300      	movs	r3, #0
 800a44c:	8003      	strh	r3, [r0, #0]
 800a44e:	8043      	strh	r3, [r0, #2]
 800a450:	8083      	strh	r3, [r0, #4]
 800a452:	80c3      	strh	r3, [r0, #6]
 800a454:	e7f7      	b.n	800a446 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a456 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a456:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a45a:	2b00      	cmp	r3, #0
 800a45c:	dd06      	ble.n	800a46c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a45e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a462:	2800      	cmp	r0, #0
 800a464:	bfcc      	ite	gt
 800a466:	2000      	movgt	r0, #0
 800a468:	2001      	movle	r0, #1
 800a46a:	4770      	bx	lr
 800a46c:	2001      	movs	r0, #1
 800a46e:	4770      	bx	lr

0800a470 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a470:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a474:	2300      	movs	r3, #0
 800a476:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a478:	8003      	strh	r3, [r0, #0]
 800a47a:	4604      	mov	r4, r0
 800a47c:	8043      	strh	r3, [r0, #2]
 800a47e:	8083      	strh	r3, [r0, #4]
 800a480:	80c3      	strh	r3, [r0, #6]
 800a482:	2d00      	cmp	r5, #0
 800a484:	d040      	beq.n	800a508 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a486:	1d28      	adds	r0, r5, #4
 800a488:	f7ff ffe5 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a48c:	b988      	cbnz	r0, 800a4b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a48e:	4620      	mov	r0, r4
 800a490:	f7ff ffe1 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a494:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a498:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a49c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a4a0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a4a4:	b138      	cbz	r0, 800a4b6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a4a6:	8022      	strh	r2, [r4, #0]
 800a4a8:	8063      	strh	r3, [r4, #2]
 800a4aa:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a4ae:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a4b2:	69ad      	ldr	r5, [r5, #24]
 800a4b4:	e7e5      	b.n	800a482 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a4b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a4ba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a4be:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a4c2:	4290      	cmp	r0, r2
 800a4c4:	4607      	mov	r7, r0
 800a4c6:	bfa8      	it	ge
 800a4c8:	4617      	movge	r7, r2
 800a4ca:	4472      	add	r2, lr
 800a4cc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a4d0:	8027      	strh	r7, [r4, #0]
 800a4d2:	4299      	cmp	r1, r3
 800a4d4:	460e      	mov	r6, r1
 800a4d6:	4440      	add	r0, r8
 800a4d8:	bfa8      	it	ge
 800a4da:	461e      	movge	r6, r3
 800a4dc:	4471      	add	r1, lr
 800a4de:	4463      	add	r3, ip
 800a4e0:	b200      	sxth	r0, r0
 800a4e2:	b212      	sxth	r2, r2
 800a4e4:	b209      	sxth	r1, r1
 800a4e6:	b21b      	sxth	r3, r3
 800a4e8:	4290      	cmp	r0, r2
 800a4ea:	bfac      	ite	ge
 800a4ec:	ebc7 0200 	rsbge	r2, r7, r0
 800a4f0:	ebc7 0202 	rsblt	r2, r7, r2
 800a4f4:	4299      	cmp	r1, r3
 800a4f6:	bfac      	ite	ge
 800a4f8:	ebc6 0301 	rsbge	r3, r6, r1
 800a4fc:	ebc6 0303 	rsblt	r3, r6, r3
 800a500:	8066      	strh	r6, [r4, #2]
 800a502:	80a2      	strh	r2, [r4, #4]
 800a504:	80e3      	strh	r3, [r4, #6]
 800a506:	e7d4      	b.n	800a4b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a508:	4620      	mov	r0, r4
 800a50a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a50e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a50e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a512:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a516:	b383      	cbz	r3, 800a57a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a518:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a51a:	b374      	cbz	r4, 800a57a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a51c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a520:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a524:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a528:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a52c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a530:	b303      	cbz	r3, 800a574 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a532:	4668      	mov	r0, sp
 800a534:	1d21      	adds	r1, r4, #4
 800a536:	f8ad 5000 	strh.w	r5, [sp]
 800a53a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a53e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a542:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a546:	f7ff ff43 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800a54a:	4668      	mov	r0, sp
 800a54c:	f7ff ff83 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a550:	b980      	cbnz	r0, 800a574 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a552:	f8bd 3000 	ldrh.w	r3, [sp]
 800a556:	88a2      	ldrh	r2, [r4, #4]
 800a558:	1a9b      	subs	r3, r3, r2
 800a55a:	f8ad 3000 	strh.w	r3, [sp]
 800a55e:	88e2      	ldrh	r2, [r4, #6]
 800a560:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a564:	1a9b      	subs	r3, r3, r2
 800a566:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a56a:	6823      	ldr	r3, [r4, #0]
 800a56c:	4669      	mov	r1, sp
 800a56e:	689b      	ldr	r3, [r3, #8]
 800a570:	4620      	mov	r0, r4
 800a572:	4798      	blx	r3
 800a574:	69a4      	ldr	r4, [r4, #24]
 800a576:	2c00      	cmp	r4, #0
 800a578:	d1d8      	bne.n	800a52c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a57a:	b002      	add	sp, #8
 800a57c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a580 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a580:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a582:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a586:	460d      	mov	r5, r1
 800a588:	4616      	mov	r6, r2
 800a58a:	b323      	cbz	r3, 800a5d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a58c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a58e:	b314      	cbz	r4, 800a5d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a590:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a594:	b1eb      	cbz	r3, 800a5d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a596:	6828      	ldr	r0, [r5, #0]
 800a598:	6869      	ldr	r1, [r5, #4]
 800a59a:	466b      	mov	r3, sp
 800a59c:	c303      	stmia	r3!, {r0, r1}
 800a59e:	4668      	mov	r0, sp
 800a5a0:	1d21      	adds	r1, r4, #4
 800a5a2:	f7ff ff15 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800a5a6:	4668      	mov	r0, sp
 800a5a8:	f7ff ff55 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a5ac:	b988      	cbnz	r0, 800a5d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a5ae:	f8bd 3000 	ldrh.w	r3, [sp]
 800a5b2:	88a2      	ldrh	r2, [r4, #4]
 800a5b4:	1a9b      	subs	r3, r3, r2
 800a5b6:	f8ad 3000 	strh.w	r3, [sp]
 800a5ba:	88e2      	ldrh	r2, [r4, #6]
 800a5bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a5c0:	1a9b      	subs	r3, r3, r2
 800a5c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a5c6:	6823      	ldr	r3, [r4, #0]
 800a5c8:	4632      	mov	r2, r6
 800a5ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a5cc:	4669      	mov	r1, sp
 800a5ce:	4620      	mov	r0, r4
 800a5d0:	4798      	blx	r3
 800a5d2:	69a4      	ldr	r4, [r4, #24]
 800a5d4:	e7db      	b.n	800a58e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a5d6:	b002      	add	sp, #8
 800a5d8:	bd70      	pop	{r4, r5, r6, pc}

0800a5da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a5da:	b513      	push	{r0, r1, r4, lr}
 800a5dc:	6803      	ldr	r3, [r0, #0]
 800a5de:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	e9cd 3300 	strd	r3, r3, [sp]
 800a5e8:	466b      	mov	r3, sp
 800a5ea:	47a0      	blx	r4
 800a5ec:	b002      	add	sp, #8
 800a5ee:	bd10      	pop	{r4, pc}

0800a5f0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a5f0:	2301      	movs	r3, #1
 800a5f2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a5f6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a5fa:	4770      	bx	lr

0800a5fc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a5fc:	2301      	movs	r3, #1
 800a5fe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a602:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a606:	4770      	bx	lr

0800a608 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a608:	6843      	ldr	r3, [r0, #4]
 800a60a:	2201      	movs	r2, #1
 800a60c:	725a      	strb	r2, [r3, #9]
 800a60e:	6840      	ldr	r0, [r0, #4]
 800a610:	6803      	ldr	r3, [r0, #0]
 800a612:	691b      	ldr	r3, [r3, #16]
 800a614:	4718      	bx	r3

0800a616 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a616:	6840      	ldr	r0, [r0, #4]
 800a618:	6803      	ldr	r3, [r0, #0]
 800a61a:	689b      	ldr	r3, [r3, #8]
 800a61c:	4718      	bx	r3

0800a61e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a61e:	b530      	push	{r4, r5, lr}
 800a620:	b08b      	sub	sp, #44	; 0x2c
 800a622:	6804      	ldr	r4, [r0, #0]
 800a624:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800a628:	9509      	str	r5, [sp, #36]	; 0x24
 800a62a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800a62e:	9508      	str	r5, [sp, #32]
 800a630:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800a634:	9507      	str	r5, [sp, #28]
 800a636:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800a63a:	9506      	str	r5, [sp, #24]
 800a63c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800a640:	9505      	str	r5, [sp, #20]
 800a642:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800a646:	9504      	str	r5, [sp, #16]
 800a648:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800a64c:	9503      	str	r5, [sp, #12]
 800a64e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a652:	9502      	str	r5, [sp, #8]
 800a654:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800a658:	e9cd 3500 	strd	r3, r5, [sp]
 800a65c:	4613      	mov	r3, r2
 800a65e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800a660:	2200      	movs	r2, #0
 800a662:	47a0      	blx	r4
 800a664:	b00b      	add	sp, #44	; 0x2c
 800a666:	bd30      	pop	{r4, r5, pc}

0800a668 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a668:	4b04      	ldr	r3, [pc, #16]	; (800a67c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a66a:	781b      	ldrb	r3, [r3, #0]
 800a66c:	b123      	cbz	r3, 800a678 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a66e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a672:	f080 0001 	eor.w	r0, r0, #1
 800a676:	4770      	bx	lr
 800a678:	2001      	movs	r0, #1
 800a67a:	4770      	bx	lr
 800a67c:	2000a80a 	.word	0x2000a80a

0800a680 <_ZN8touchgfx3HAL8endFrameEv>:
 800a680:	b510      	push	{r4, lr}
 800a682:	4604      	mov	r4, r0
 800a684:	6840      	ldr	r0, [r0, #4]
 800a686:	6803      	ldr	r3, [r0, #0]
 800a688:	689b      	ldr	r3, [r3, #8]
 800a68a:	4798      	blx	r3
 800a68c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a690:	b113      	cbz	r3, 800a698 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a692:	2301      	movs	r3, #1
 800a694:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a698:	bd10      	pop	{r4, pc}

0800a69a <_ZN8touchgfx3HAL10initializeEv>:
 800a69a:	b510      	push	{r4, lr}
 800a69c:	4604      	mov	r4, r0
 800a69e:	f7f6 fb1f 	bl	8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a6a2:	6860      	ldr	r0, [r4, #4]
 800a6a4:	6803      	ldr	r3, [r0, #0]
 800a6a6:	68db      	ldr	r3, [r3, #12]
 800a6a8:	4798      	blx	r3
 800a6aa:	68e0      	ldr	r0, [r4, #12]
 800a6ac:	6803      	ldr	r3, [r0, #0]
 800a6ae:	689b      	ldr	r3, [r3, #8]
 800a6b0:	4798      	blx	r3
 800a6b2:	6823      	ldr	r3, [r4, #0]
 800a6b4:	4620      	mov	r0, r4
 800a6b6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a6b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a6bc:	4718      	bx	r3
	...

0800a6c0 <_ZN8touchgfx3HAL4tickEv>:
 800a6c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a6c2:	6803      	ldr	r3, [r0, #0]
 800a6c4:	4d5b      	ldr	r5, [pc, #364]	; (800a834 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800a6c6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a6ca:	4604      	mov	r4, r0
 800a6cc:	4798      	blx	r3
 800a6ce:	2800      	cmp	r0, #0
 800a6d0:	f000 8095 	beq.w	800a7fe <_ZN8touchgfx3HAL4tickEv+0x13e>
 800a6d4:	2001      	movs	r0, #1
 800a6d6:	f7f6 f843 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a6da:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a6de:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a6e2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a6e6:	2600      	movs	r6, #0
 800a6e8:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a6ec:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a6f0:	b133      	cbz	r3, 800a700 <_ZN8touchgfx3HAL4tickEv+0x40>
 800a6f2:	6823      	ldr	r3, [r4, #0]
 800a6f4:	4620      	mov	r0, r4
 800a6f6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800a6fa:	4798      	blx	r3
 800a6fc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a700:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a704:	6862      	ldr	r2, [r4, #4]
 800a706:	f083 0301 	eor.w	r3, r3, #1
 800a70a:	7253      	strb	r3, [r2, #9]
 800a70c:	2601      	movs	r6, #1
 800a70e:	702e      	strb	r6, [r5, #0]
 800a710:	f003 fcb2 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 800a714:	6803      	ldr	r3, [r0, #0]
 800a716:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a718:	4798      	blx	r3
 800a71a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a71e:	b90b      	cbnz	r3, 800a724 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a720:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a724:	f003 fca8 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 800a728:	6803      	ldr	r3, [r0, #0]
 800a72a:	695b      	ldr	r3, [r3, #20]
 800a72c:	4798      	blx	r3
 800a72e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a730:	6803      	ldr	r3, [r0, #0]
 800a732:	691b      	ldr	r3, [r3, #16]
 800a734:	4798      	blx	r3
 800a736:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a73a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a73e:	3b01      	subs	r3, #1
 800a740:	b2db      	uxtb	r3, r3
 800a742:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a746:	b10a      	cbz	r2, 800a74c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800a748:	2b00      	cmp	r3, #0
 800a74a:	d1eb      	bne.n	800a724 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a74c:	4a3a      	ldr	r2, [pc, #232]	; (800a838 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a74e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a752:	7813      	ldrb	r3, [r2, #0]
 800a754:	3301      	adds	r3, #1
 800a756:	b25b      	sxtb	r3, r3
 800a758:	4299      	cmp	r1, r3
 800a75a:	7013      	strb	r3, [r2, #0]
 800a75c:	dc10      	bgt.n	800a780 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a75e:	68e0      	ldr	r0, [r4, #12]
 800a760:	2300      	movs	r3, #0
 800a762:	7013      	strb	r3, [r2, #0]
 800a764:	6803      	ldr	r3, [r0, #0]
 800a766:	aa03      	add	r2, sp, #12
 800a768:	68db      	ldr	r3, [r3, #12]
 800a76a:	a902      	add	r1, sp, #8
 800a76c:	4798      	blx	r3
 800a76e:	6823      	ldr	r3, [r4, #0]
 800a770:	2800      	cmp	r0, #0
 800a772:	d050      	beq.n	800a816 <_ZN8touchgfx3HAL4tickEv+0x156>
 800a774:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800a778:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a77c:	4620      	mov	r0, r4
 800a77e:	4798      	blx	r3
 800a780:	6960      	ldr	r0, [r4, #20]
 800a782:	2300      	movs	r3, #0
 800a784:	f88d 3007 	strb.w	r3, [sp, #7]
 800a788:	b158      	cbz	r0, 800a7a2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a78a:	6803      	ldr	r3, [r0, #0]
 800a78c:	f10d 0107 	add.w	r1, sp, #7
 800a790:	68db      	ldr	r3, [r3, #12]
 800a792:	4798      	blx	r3
 800a794:	b128      	cbz	r0, 800a7a2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a796:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a798:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a79c:	6803      	ldr	r3, [r0, #0]
 800a79e:	68db      	ldr	r3, [r3, #12]
 800a7a0:	4798      	blx	r3
 800a7a2:	f104 001c 	add.w	r0, r4, #28
 800a7a6:	f012 f987 	bl	801cab8 <_ZN8touchgfx8Gestures4tickEv>
 800a7aa:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a7ae:	b30b      	cbz	r3, 800a7f4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a7b0:	6920      	ldr	r0, [r4, #16]
 800a7b2:	6803      	ldr	r3, [r0, #0]
 800a7b4:	691b      	ldr	r3, [r3, #16]
 800a7b6:	4798      	blx	r3
 800a7b8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a7ba:	4606      	mov	r6, r0
 800a7bc:	b903      	cbnz	r3, 800a7c0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800a7be:	6720      	str	r0, [r4, #112]	; 0x70
 800a7c0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a7c2:	4a1e      	ldr	r2, [pc, #120]	; (800a83c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a7c4:	1af3      	subs	r3, r6, r3
 800a7c6:	4293      	cmp	r3, r2
 800a7c8:	d914      	bls.n	800a7f4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a7ca:	6920      	ldr	r0, [r4, #16]
 800a7cc:	6803      	ldr	r3, [r0, #0]
 800a7ce:	699b      	ldr	r3, [r3, #24]
 800a7d0:	4798      	blx	r3
 800a7d2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a7d4:	2264      	movs	r2, #100	; 0x64
 800a7d6:	1af3      	subs	r3, r6, r3
 800a7d8:	fbb3 f3f2 	udiv	r3, r3, r2
 800a7dc:	fbb0 f0f3 	udiv	r0, r0, r3
 800a7e0:	2800      	cmp	r0, #0
 800a7e2:	dc1d      	bgt.n	800a820 <_ZN8touchgfx3HAL4tickEv+0x160>
 800a7e4:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a7e8:	6920      	ldr	r0, [r4, #16]
 800a7ea:	6803      	ldr	r3, [r0, #0]
 800a7ec:	2100      	movs	r1, #0
 800a7ee:	69db      	ldr	r3, [r3, #28]
 800a7f0:	4798      	blx	r3
 800a7f2:	6726      	str	r6, [r4, #112]	; 0x70
 800a7f4:	f003 fc40 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 800a7f8:	6803      	ldr	r3, [r0, #0]
 800a7fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7fc:	4798      	blx	r3
 800a7fe:	6823      	ldr	r3, [r4, #0]
 800a800:	4620      	mov	r0, r4
 800a802:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a806:	4798      	blx	r3
 800a808:	2001      	movs	r0, #1
 800a80a:	f7f5 ffcf 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a80e:	2300      	movs	r3, #0
 800a810:	702b      	strb	r3, [r5, #0]
 800a812:	b004      	add	sp, #16
 800a814:	bd70      	pop	{r4, r5, r6, pc}
 800a816:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800a81a:	4620      	mov	r0, r4
 800a81c:	4798      	blx	r3
 800a81e:	e7af      	b.n	800a780 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a820:	2863      	cmp	r0, #99	; 0x63
 800a822:	bfcb      	itete	gt
 800a824:	2300      	movgt	r3, #0
 800a826:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a82a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a82e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a832:	e7d9      	b.n	800a7e8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800a834:	2000a810 	.word	0x2000a810
 800a838:	2000a811 	.word	0x2000a811
 800a83c:	05f5e100 	.word	0x05f5e100

0800a840 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a840:	f7f6 ba7e 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a844 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a844:	6581      	str	r1, [r0, #88]	; 0x58
 800a846:	301c      	adds	r0, #28
 800a848:	f012 b934 	b.w	801cab4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a84c <_ZN8touchgfx3HAL5touchEll>:
 800a84c:	b530      	push	{r4, r5, lr}
 800a84e:	b087      	sub	sp, #28
 800a850:	4604      	mov	r4, r0
 800a852:	a804      	add	r0, sp, #16
 800a854:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a858:	f003 f96c 	bl	800db34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a85c:	9b04      	ldr	r3, [sp, #16]
 800a85e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a862:	a906      	add	r1, sp, #24
 800a864:	9b05      	ldr	r3, [sp, #20]
 800a866:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a86a:	a803      	add	r0, sp, #12
 800a86c:	f003 f9b4 	bl	800dbd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a870:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a874:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a878:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a87c:	f104 001c 	add.w	r0, r4, #28
 800a880:	b189      	cbz	r1, 800a8a6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a882:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a886:	9300      	str	r3, [sp, #0]
 800a888:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a88c:	4613      	mov	r3, r2
 800a88e:	462a      	mov	r2, r5
 800a890:	f012 f920 	bl	801cad4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a894:	b128      	cbz	r0, 800a8a2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a896:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a89a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a89c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a8a0:	6623      	str	r3, [r4, #96]	; 0x60
 800a8a2:	b007      	add	sp, #28
 800a8a4:	bd30      	pop	{r4, r5, pc}
 800a8a6:	f012 f955 	bl	801cb54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a8aa:	2301      	movs	r3, #1
 800a8ac:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a8b0:	e7f1      	b.n	800a896 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a8b2:	b510      	push	{r4, lr}
 800a8b4:	2b00      	cmp	r3, #0
 800a8b6:	d046      	beq.n	800a946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a8b8:	ea81 0002 	eor.w	r0, r1, r2
 800a8bc:	07c4      	lsls	r4, r0, #31
 800a8be:	d508      	bpl.n	800a8d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a8c0:	440b      	add	r3, r1
 800a8c2:	3a01      	subs	r2, #1
 800a8c4:	428b      	cmp	r3, r1
 800a8c6:	d93e      	bls.n	800a946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a8c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a8cc:	f801 0b01 	strb.w	r0, [r1], #1
 800a8d0:	e7f8      	b.n	800a8c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a8d2:	07d0      	lsls	r0, r2, #31
 800a8d4:	bf42      	ittt	mi
 800a8d6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a8da:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a8de:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a8e2:	2b01      	cmp	r3, #1
 800a8e4:	d911      	bls.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8e6:	ea81 0402 	eor.w	r4, r1, r2
 800a8ea:	07a4      	lsls	r4, r4, #30
 800a8ec:	4610      	mov	r0, r2
 800a8ee:	d022      	beq.n	800a936 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a8f0:	f023 0401 	bic.w	r4, r3, #1
 800a8f4:	440c      	add	r4, r1
 800a8f6:	428c      	cmp	r4, r1
 800a8f8:	4602      	mov	r2, r0
 800a8fa:	d904      	bls.n	800a906 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a8fc:	8812      	ldrh	r2, [r2, #0]
 800a8fe:	f821 2b02 	strh.w	r2, [r1], #2
 800a902:	3002      	adds	r0, #2
 800a904:	e7f7      	b.n	800a8f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a906:	f003 0301 	and.w	r3, r3, #1
 800a90a:	f023 0003 	bic.w	r0, r3, #3
 800a90e:	4408      	add	r0, r1
 800a910:	4288      	cmp	r0, r1
 800a912:	4614      	mov	r4, r2
 800a914:	d904      	bls.n	800a920 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a916:	6824      	ldr	r4, [r4, #0]
 800a918:	f841 4b04 	str.w	r4, [r1], #4
 800a91c:	3204      	adds	r2, #4
 800a91e:	e7f7      	b.n	800a910 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a920:	f003 0303 	and.w	r3, r3, #3
 800a924:	440b      	add	r3, r1
 800a926:	3a01      	subs	r2, #1
 800a928:	428b      	cmp	r3, r1
 800a92a:	d90c      	bls.n	800a946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a92c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a930:	f801 0b01 	strb.w	r0, [r1], #1
 800a934:	e7f8      	b.n	800a928 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a936:	0790      	lsls	r0, r2, #30
 800a938:	d0e7      	beq.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a93a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a93e:	f821 0b02 	strh.w	r0, [r1], #2
 800a942:	3b02      	subs	r3, #2
 800a944:	e7e1      	b.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a946:	2001      	movs	r0, #1
 800a948:	bd10      	pop	{r4, pc}

0800a94a <_ZN8touchgfx3HAL7noTouchEv>:
 800a94a:	b510      	push	{r4, lr}
 800a94c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a950:	4604      	mov	r4, r0
 800a952:	b153      	cbz	r3, 800a96a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a954:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a958:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a95c:	2101      	movs	r1, #1
 800a95e:	301c      	adds	r0, #28
 800a960:	f012 f8f8 	bl	801cb54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a964:	2300      	movs	r3, #0
 800a966:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a96a:	bd10      	pop	{r4, pc}

0800a96c <_ZN8touchgfx3HAL3lcdEv>:
 800a96c:	4b04      	ldr	r3, [pc, #16]	; (800a980 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800a96e:	681b      	ldr	r3, [r3, #0]
 800a970:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a974:	b10a      	cbz	r2, 800a97a <_ZN8touchgfx3HAL3lcdEv+0xe>
 800a976:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a978:	b900      	cbnz	r0, 800a97c <_ZN8touchgfx3HAL3lcdEv+0x10>
 800a97a:	6898      	ldr	r0, [r3, #8]
 800a97c:	4770      	bx	lr
 800a97e:	bf00      	nop
 800a980:	2000a80c 	.word	0x2000a80c

0800a984 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a984:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a988:	4604      	mov	r4, r0
 800a98a:	6980      	ldr	r0, [r0, #24]
 800a98c:	b085      	sub	sp, #20
 800a98e:	460f      	mov	r7, r1
 800a990:	4690      	mov	r8, r2
 800a992:	4699      	mov	r9, r3
 800a994:	b930      	cbnz	r0, 800a9a4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800a996:	4b1c      	ldr	r3, [pc, #112]	; (800aa08 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800a998:	4a1c      	ldr	r2, [pc, #112]	; (800aa0c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a99a:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800a99e:	481c      	ldr	r0, [pc, #112]	; (800aa10 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800a9a0:	f012 f98c 	bl	801ccbc <__assert_func>
 800a9a4:	ad04      	add	r5, sp, #16
 800a9a6:	2600      	movs	r6, #0
 800a9a8:	f845 6d04 	str.w	r6, [r5, #-4]!
 800a9ac:	6806      	ldr	r6, [r0, #0]
 800a9ae:	9501      	str	r5, [sp, #4]
 800a9b0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a9b4:	9500      	str	r5, [sp, #0]
 800a9b6:	6835      	ldr	r5, [r6, #0]
 800a9b8:	47a8      	blx	r5
 800a9ba:	4d16      	ldr	r5, [pc, #88]	; (800aa14 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800a9bc:	4606      	mov	r6, r0
 800a9be:	f8a5 9000 	strh.w	r9, [r5]
 800a9c2:	f7ff ffd3 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800a9c6:	6803      	ldr	r3, [r0, #0]
 800a9c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9ca:	4798      	blx	r3
 800a9cc:	2801      	cmp	r0, #1
 800a9ce:	d012      	beq.n	800a9f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800a9d0:	d306      	bcc.n	800a9e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800a9d2:	280d      	cmp	r0, #13
 800a9d4:	d80b      	bhi.n	800a9ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800a9d6:	4b10      	ldr	r3, [pc, #64]	; (800aa18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800a9d8:	4a0c      	ldr	r2, [pc, #48]	; (800aa0c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a9da:	f240 115b 	movw	r1, #347	; 0x15b
 800a9de:	e7de      	b.n	800a99e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800a9e0:	882b      	ldrh	r3, [r5, #0]
 800a9e2:	fb08 7203 	mla	r2, r8, r3, r7
 800a9e6:	9b03      	ldr	r3, [sp, #12]
 800a9e8:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a9ec:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a9ee:	4630      	mov	r0, r6
 800a9f0:	b005      	add	sp, #20
 800a9f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a9f6:	882a      	ldrh	r2, [r5, #0]
 800a9f8:	9b03      	ldr	r3, [sp, #12]
 800a9fa:	fb08 7202 	mla	r2, r8, r2, r7
 800a9fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800aa02:	1a9a      	subs	r2, r3, r2
 800aa04:	63e2      	str	r2, [r4, #60]	; 0x3c
 800aa06:	e7f2      	b.n	800a9ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800aa08:	0801fad1 	.word	0x0801fad1
 800aa0c:	0801fd8f 	.word	0x0801fd8f
 800aa10:	0801fb16 	.word	0x0801fb16
 800aa14:	2000a806 	.word	0x2000a806
 800aa18:	0801fb3c 	.word	0x0801fb3c

0800aa1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800aa1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa1e:	b08b      	sub	sp, #44	; 0x2c
 800aa20:	4617      	mov	r7, r2
 800aa22:	4604      	mov	r4, r0
 800aa24:	460e      	mov	r6, r1
 800aa26:	461d      	mov	r5, r3
 800aa28:	f7ff ffa0 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800aa2c:	6803      	ldr	r3, [r0, #0]
 800aa2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa30:	4798      	blx	r3
 800aa32:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800aa36:	9007      	str	r0, [sp, #28]
 800aa38:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aa3c:	4b0d      	ldr	r3, [pc, #52]	; (800aa74 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800aa3e:	6822      	ldr	r2, [r4, #0]
 800aa40:	881b      	ldrh	r3, [r3, #0]
 800aa42:	9306      	str	r3, [sp, #24]
 800aa44:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800aa48:	9305      	str	r3, [sp, #20]
 800aa4a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800aa4e:	9304      	str	r3, [sp, #16]
 800aa50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aa54:	9303      	str	r3, [sp, #12]
 800aa56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800aa5a:	9302      	str	r3, [sp, #8]
 800aa5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800aa60:	e9cd 5300 	strd	r5, r3, [sp]
 800aa64:	4631      	mov	r1, r6
 800aa66:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800aa68:	463b      	mov	r3, r7
 800aa6a:	2200      	movs	r2, #0
 800aa6c:	4620      	mov	r0, r4
 800aa6e:	47a8      	blx	r5
 800aa70:	b00b      	add	sp, #44	; 0x2c
 800aa72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa74:	2000a806 	.word	0x2000a806

0800aa78 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800aa78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa7c:	4698      	mov	r8, r3
 800aa7e:	6803      	ldr	r3, [r0, #0]
 800aa80:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800aa82:	4b15      	ldr	r3, [pc, #84]	; (800aad8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800aa84:	b08b      	sub	sp, #44	; 0x2c
 800aa86:	4617      	mov	r7, r2
 800aa88:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa8c:	460e      	mov	r6, r1
 800aa8e:	4604      	mov	r4, r0
 800aa90:	f7ff ff6c 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800aa94:	6803      	ldr	r3, [r0, #0]
 800aa96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa98:	4798      	blx	r3
 800aa9a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800aa9e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aaa2:	2302      	movs	r3, #2
 800aaa4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800aaa8:	2301      	movs	r3, #1
 800aaaa:	9305      	str	r3, [sp, #20]
 800aaac:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800aab0:	9304      	str	r3, [sp, #16]
 800aab2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800aab6:	9303      	str	r3, [sp, #12]
 800aab8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800aabc:	9302      	str	r3, [sp, #8]
 800aabe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aac2:	2200      	movs	r2, #0
 800aac4:	e9cd 8300 	strd	r8, r3, [sp]
 800aac8:	4631      	mov	r1, r6
 800aaca:	463b      	mov	r3, r7
 800aacc:	4620      	mov	r0, r4
 800aace:	47a8      	blx	r5
 800aad0:	b00b      	add	sp, #44	; 0x2c
 800aad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aad6:	bf00      	nop
 800aad8:	2000a806 	.word	0x2000a806

0800aadc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aadc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aae0:	4698      	mov	r8, r3
 800aae2:	6803      	ldr	r3, [r0, #0]
 800aae4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800aae6:	4b11      	ldr	r3, [pc, #68]	; (800ab2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aae8:	b087      	sub	sp, #28
 800aaea:	f8b3 9000 	ldrh.w	r9, [r3]
 800aaee:	460e      	mov	r6, r1
 800aaf0:	4617      	mov	r7, r2
 800aaf2:	4604      	mov	r4, r0
 800aaf4:	f7ff ff3a 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800aaf8:	6803      	ldr	r3, [r0, #0]
 800aafa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aafc:	4798      	blx	r3
 800aafe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ab02:	f8cd 900c 	str.w	r9, [sp, #12]
 800ab06:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ab0a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ab0e:	9302      	str	r3, [sp, #8]
 800ab10:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ab14:	9301      	str	r3, [sp, #4]
 800ab16:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ab1a:	9300      	str	r3, [sp, #0]
 800ab1c:	463a      	mov	r2, r7
 800ab1e:	4643      	mov	r3, r8
 800ab20:	4631      	mov	r1, r6
 800ab22:	4620      	mov	r0, r4
 800ab24:	47a8      	blx	r5
 800ab26:	b007      	add	sp, #28
 800ab28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab2c:	2000a806 	.word	0x2000a806

0800ab30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ab30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab34:	4604      	mov	r4, r0
 800ab36:	b08f      	sub	sp, #60	; 0x3c
 800ab38:	4610      	mov	r0, r2
 800ab3a:	460d      	mov	r5, r1
 800ab3c:	4691      	mov	r9, r2
 800ab3e:	461e      	mov	r6, r3
 800ab40:	f005 feaa 	bl	8010898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab44:	2800      	cmp	r0, #0
 800ab46:	f000 809c 	beq.w	800ac82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800ab4a:	6823      	ldr	r3, [r4, #0]
 800ab4c:	f8df b194 	ldr.w	fp, [pc, #404]	; 800ace4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800ab50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab52:	f8df a194 	ldr.w	sl, [pc, #404]	; 800ace8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ab56:	4f60      	ldr	r7, [pc, #384]	; (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ab58:	4620      	mov	r0, r4
 800ab5a:	4798      	blx	r3
 800ab5c:	6823      	ldr	r3, [r4, #0]
 800ab5e:	4620      	mov	r0, r4
 800ab60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab62:	4798      	blx	r3
 800ab64:	f8bb 3000 	ldrh.w	r3, [fp]
 800ab68:	9301      	str	r3, [sp, #4]
 800ab6a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ab6e:	f8ba 3000 	ldrh.w	r3, [sl]
 800ab72:	9302      	str	r3, [sp, #8]
 800ab74:	883b      	ldrh	r3, [r7, #0]
 800ab76:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ab7a:	9303      	str	r3, [sp, #12]
 800ab7c:	4b57      	ldr	r3, [pc, #348]	; (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab7e:	9305      	str	r3, [sp, #20]
 800ab80:	881a      	ldrh	r2, [r3, #0]
 800ab82:	9204      	str	r2, [sp, #16]
 800ab84:	4640      	mov	r0, r8
 800ab86:	f005 ff37 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab8a:	8038      	strh	r0, [r7, #0]
 800ab8c:	4640      	mov	r0, r8
 800ab8e:	f005 ff77 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab92:	9b05      	ldr	r3, [sp, #20]
 800ab94:	8018      	strh	r0, [r3, #0]
 800ab96:	4b52      	ldr	r3, [pc, #328]	; (800ace0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab98:	781b      	ldrb	r3, [r3, #0]
 800ab9a:	2b00      	cmp	r3, #0
 800ab9c:	d174      	bne.n	800ac88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800ab9e:	883b      	ldrh	r3, [r7, #0]
 800aba0:	f8ab 3000 	strh.w	r3, [fp]
 800aba4:	f8aa 0000 	strh.w	r0, [sl]
 800aba8:	4648      	mov	r0, r9
 800abaa:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800abae:	f005 fe73 	bl	8010898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800abb2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800abb6:	2200      	movs	r2, #0
 800abb8:	4611      	mov	r1, r2
 800abba:	4628      	mov	r0, r5
 800abbc:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800abc0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800abc4:	f7f7 fac0 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 800abc8:	2301      	movs	r3, #1
 800abca:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800abce:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800abd2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800abd6:	2b00      	cmp	r3, #0
 800abd8:	dd5c      	ble.n	800ac94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800abda:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800abde:	2b00      	cmp	r3, #0
 800abe0:	dd58      	ble.n	800ac94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800abe2:	462a      	mov	r2, r5
 800abe4:	ab0a      	add	r3, sp, #40	; 0x28
 800abe6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800abea:	6851      	ldr	r1, [r2, #4]
 800abec:	c303      	stmia	r3!, {r0, r1}
 800abee:	4631      	mov	r1, r6
 800abf0:	a80a      	add	r0, sp, #40	; 0x28
 800abf2:	f7ff fbed 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800abf6:	4b38      	ldr	r3, [pc, #224]	; (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800abf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800abfc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ac00:	2100      	movs	r1, #0
 800ac02:	aa0a      	add	r2, sp, #40	; 0x28
 800ac04:	4b35      	ldr	r3, [pc, #212]	; (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ac06:	910c      	str	r1, [sp, #48]	; 0x30
 800ac08:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ac0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ac10:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ac14:	ab08      	add	r3, sp, #32
 800ac16:	e883 0003 	stmia.w	r3, {r0, r1}
 800ac1a:	4618      	mov	r0, r3
 800ac1c:	a90c      	add	r1, sp, #48	; 0x30
 800ac1e:	f7ff fbd7 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800ac22:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ac24:	2b00      	cmp	r3, #0
 800ac26:	d13c      	bne.n	800aca2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800ac28:	2000      	movs	r0, #0
 800ac2a:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ac2e:	2600      	movs	r6, #0
 800ac30:	682a      	ldr	r2, [r5, #0]
 800ac32:	696b      	ldr	r3, [r5, #20]
 800ac34:	616e      	str	r6, [r5, #20]
 800ac36:	9305      	str	r3, [sp, #20]
 800ac38:	6892      	ldr	r2, [r2, #8]
 800ac3a:	a908      	add	r1, sp, #32
 800ac3c:	4628      	mov	r0, r5
 800ac3e:	4790      	blx	r2
 800ac40:	9b05      	ldr	r3, [sp, #20]
 800ac42:	616b      	str	r3, [r5, #20]
 800ac44:	4652      	mov	r2, sl
 800ac46:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ac4a:	4649      	mov	r1, r9
 800ac4c:	4628      	mov	r0, r5
 800ac4e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ac52:	f7f7 fa79 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 800ac56:	4b23      	ldr	r3, [pc, #140]	; (800ace4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ac58:	9a01      	ldr	r2, [sp, #4]
 800ac5a:	801a      	strh	r2, [r3, #0]
 800ac5c:	4b22      	ldr	r3, [pc, #136]	; (800ace8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ac5e:	9a02      	ldr	r2, [sp, #8]
 800ac60:	801a      	strh	r2, [r3, #0]
 800ac62:	4b1d      	ldr	r3, [pc, #116]	; (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ac64:	9a03      	ldr	r2, [sp, #12]
 800ac66:	801a      	strh	r2, [r3, #0]
 800ac68:	4b1c      	ldr	r3, [pc, #112]	; (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ac6a:	9a04      	ldr	r2, [sp, #16]
 800ac6c:	801a      	strh	r2, [r3, #0]
 800ac6e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ac72:	6823      	ldr	r3, [r4, #0]
 800ac74:	4620      	mov	r0, r4
 800ac76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac78:	4798      	blx	r3
 800ac7a:	6823      	ldr	r3, [r4, #0]
 800ac7c:	4620      	mov	r0, r4
 800ac7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac80:	4798      	blx	r3
 800ac82:	b00f      	add	sp, #60	; 0x3c
 800ac84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac88:	883b      	ldrh	r3, [r7, #0]
 800ac8a:	f8ab 0000 	strh.w	r0, [fp]
 800ac8e:	f8aa 3000 	strh.w	r3, [sl]
 800ac92:	e789      	b.n	800aba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800ac94:	462a      	mov	r2, r5
 800ac96:	ab0a      	add	r3, sp, #40	; 0x28
 800ac98:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ac9c:	6851      	ldr	r1, [r2, #4]
 800ac9e:	c303      	stmia	r3!, {r0, r1}
 800aca0:	e7a9      	b.n	800abf6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800aca2:	a807      	add	r0, sp, #28
 800aca4:	f006 f84e 	bl	8010d44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aca8:	4606      	mov	r6, r0
 800acaa:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800acac:	6803      	ldr	r3, [r0, #0]
 800acae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800acb0:	4798      	blx	r3
 800acb2:	4286      	cmp	r6, r0
 800acb4:	d1b8      	bne.n	800ac28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800acb6:	f7ff fe59 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800acba:	6803      	ldr	r3, [r0, #0]
 800acbc:	4606      	mov	r6, r0
 800acbe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800acc0:	9305      	str	r3, [sp, #20]
 800acc2:	a807      	add	r0, sp, #28
 800acc4:	f006 f83e 	bl	8010d44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800acc8:	9b05      	ldr	r3, [sp, #20]
 800acca:	4601      	mov	r1, r0
 800accc:	4630      	mov	r0, r6
 800acce:	4798      	blx	r3
 800acd0:	f080 0001 	eor.w	r0, r0, #1
 800acd4:	b2c0      	uxtb	r0, r0
 800acd6:	e7a8      	b.n	800ac2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800acd8:	2000a800 	.word	0x2000a800
 800acdc:	2000a802 	.word	0x2000a802
 800ace0:	2000a804 	.word	0x2000a804
 800ace4:	2000a806 	.word	0x2000a806
 800ace8:	2000a808 	.word	0x2000a808

0800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800acec:	b510      	push	{r4, lr}
 800acee:	4b07      	ldr	r3, [pc, #28]	; (800ad0c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800acf0:	781b      	ldrb	r3, [r3, #0]
 800acf2:	4604      	mov	r4, r0
 800acf4:	b13b      	cbz	r3, 800ad06 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acf6:	6803      	ldr	r3, [r0, #0]
 800acf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800acfa:	4798      	blx	r3
 800acfc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800acfe:	4283      	cmp	r3, r0
 800ad00:	d101      	bne.n	800ad06 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ad02:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ad04:	bd10      	pop	{r4, pc}
 800ad06:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ad08:	e7fc      	b.n	800ad04 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ad0a:	bf00      	nop
 800ad0c:	2000a80a 	.word	0x2000a80a

0800ad10 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ad10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad14:	b08a      	sub	sp, #40	; 0x28
 800ad16:	461d      	mov	r5, r3
 800ad18:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ad1c:	2400      	movs	r4, #0
 800ad1e:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800ad22:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800ad26:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 800ad2a:	9404      	str	r4, [sp, #16]
 800ad2c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ad30:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ad34:	f8ad 8018 	strh.w	r8, [sp, #24]
 800ad38:	4692      	mov	sl, r2
 800ad3a:	4606      	mov	r6, r0
 800ad3c:	f8ad 701a 	strh.w	r7, [sp, #26]
 800ad40:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ad44:	f88d 4020 	strb.w	r4, [sp, #32]
 800ad48:	f7ff ffd0 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad4c:	fb09 a505 	mla	r5, r9, r5, sl
 800ad50:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ad54:	9505      	str	r5, [sp, #20]
 800ad56:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ad5a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ad5e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800ad62:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800ad66:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800ad6a:	f1b8 0f00 	cmp.w	r8, #0
 800ad6e:	d000      	beq.n	800ad72 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800ad70:	b937      	cbnz	r7, 800ad80 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800ad72:	4b0d      	ldr	r3, [pc, #52]	; (800ada8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800ad74:	4a0d      	ldr	r2, [pc, #52]	; (800adac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800ad76:	f240 2102 	movw	r1, #514	; 0x202
 800ad7a:	480d      	ldr	r0, [pc, #52]	; (800adb0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800ad7c:	f011 ff9e 	bl	801ccbc <__assert_func>
 800ad80:	6833      	ldr	r3, [r6, #0]
 800ad82:	9c01      	ldr	r4, [sp, #4]
 800ad84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ad86:	4630      	mov	r0, r6
 800ad88:	4798      	blx	r3
 800ad8a:	4220      	tst	r0, r4
 800ad8c:	d104      	bne.n	800ad98 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800ad8e:	4b09      	ldr	r3, [pc, #36]	; (800adb4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800ad90:	4a06      	ldr	r2, [pc, #24]	; (800adac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800ad92:	f240 2103 	movw	r1, #515	; 0x203
 800ad96:	e7f0      	b.n	800ad7a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 800ad98:	6870      	ldr	r0, [r6, #4]
 800ad9a:	6803      	ldr	r3, [r0, #0]
 800ad9c:	a901      	add	r1, sp, #4
 800ad9e:	685b      	ldr	r3, [r3, #4]
 800ada0:	4798      	blx	r3
 800ada2:	b00a      	add	sp, #40	; 0x28
 800ada4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ada8:	0801f96b 	.word	0x0801f96b
 800adac:	0801fbc4 	.word	0x0801fbc4
 800adb0:	0801fb16 	.word	0x0801fb16
 800adb4:	0801f9a3 	.word	0x0801f9a3

0800adb8 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adbc:	b08b      	sub	sp, #44	; 0x2c
 800adbe:	2400      	movs	r4, #0
 800adc0:	461d      	mov	r5, r3
 800adc2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800adc6:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 800adca:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800adce:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800add2:	9404      	str	r4, [sp, #16]
 800add4:	468a      	mov	sl, r1
 800add6:	4693      	mov	fp, r2
 800add8:	4606      	mov	r6, r0
 800adda:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800adde:	f7ff ff85 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ade2:	fb09 b505 	mla	r5, r9, r5, fp
 800ade6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800adea:	9505      	str	r5, [sp, #20]
 800adec:	f8ad 8018 	strh.w	r8, [sp, #24]
 800adf0:	f8ad 701a 	strh.w	r7, [sp, #26]
 800adf4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800adf8:	f8ad 901e 	strh.w	r9, [sp, #30]
 800adfc:	f8cd a010 	str.w	sl, [sp, #16]
 800ae00:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ae04:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ae08:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800ae0c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800ae10:	f1b8 0f00 	cmp.w	r8, #0
 800ae14:	d000      	beq.n	800ae18 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800ae16:	b937      	cbnz	r7, 800ae26 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 800ae18:	4b0d      	ldr	r3, [pc, #52]	; (800ae50 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800ae1a:	4a0e      	ldr	r2, [pc, #56]	; (800ae54 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800ae1c:	f240 2119 	movw	r1, #537	; 0x219
 800ae20:	480d      	ldr	r0, [pc, #52]	; (800ae58 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800ae22:	f011 ff4b 	bl	801ccbc <__assert_func>
 800ae26:	6833      	ldr	r3, [r6, #0]
 800ae28:	9c01      	ldr	r4, [sp, #4]
 800ae2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae2c:	4630      	mov	r0, r6
 800ae2e:	4798      	blx	r3
 800ae30:	4220      	tst	r0, r4
 800ae32:	d104      	bne.n	800ae3e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 800ae34:	4b09      	ldr	r3, [pc, #36]	; (800ae5c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 800ae36:	4a07      	ldr	r2, [pc, #28]	; (800ae54 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800ae38:	f240 211a 	movw	r1, #538	; 0x21a
 800ae3c:	e7f0      	b.n	800ae20 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 800ae3e:	6870      	ldr	r0, [r6, #4]
 800ae40:	6803      	ldr	r3, [r0, #0]
 800ae42:	a901      	add	r1, sp, #4
 800ae44:	685b      	ldr	r3, [r3, #4]
 800ae46:	4798      	blx	r3
 800ae48:	b00b      	add	sp, #44	; 0x2c
 800ae4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae4e:	bf00      	nop
 800ae50:	0801f9e8 	.word	0x0801f9e8
 800ae54:	0801fc3a 	.word	0x0801fc3a
 800ae58:	0801fb16 	.word	0x0801fb16
 800ae5c:	0801fa20 	.word	0x0801fa20

0800ae60 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800ae60:	b508      	push	{r3, lr}
 800ae62:	290d      	cmp	r1, #13
 800ae64:	d817      	bhi.n	800ae96 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800ae66:	e8df f001 	tbb	[pc, r1]
 800ae6a:	090b      	.short	0x090b
 800ae6c:	0d0d0d07 	.word	0x0d0d0d07
 800ae70:	1414140d 	.word	0x1414140d
 800ae74:	0d0d1414 	.word	0x0d0d1414
 800ae78:	2020      	movs	r0, #32
 800ae7a:	bd08      	pop	{r3, pc}
 800ae7c:	2018      	movs	r0, #24
 800ae7e:	e7fc      	b.n	800ae7a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ae80:	2010      	movs	r0, #16
 800ae82:	e7fa      	b.n	800ae7a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ae84:	4b05      	ldr	r3, [pc, #20]	; (800ae9c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ae86:	4a06      	ldr	r2, [pc, #24]	; (800aea0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ae88:	4806      	ldr	r0, [pc, #24]	; (800aea4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ae8a:	f240 2183 	movw	r1, #643	; 0x283
 800ae8e:	f011 ff15 	bl	801ccbc <__assert_func>
 800ae92:	2008      	movs	r0, #8
 800ae94:	e7f1      	b.n	800ae7a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ae96:	2000      	movs	r0, #0
 800ae98:	e7ef      	b.n	800ae7a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ae9a:	bf00      	nop
 800ae9c:	0801fb92 	.word	0x0801fb92
 800aea0:	0801ff65 	.word	0x0801ff65
 800aea4:	0801fb16 	.word	0x0801fb16

0800aea8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800aea8:	b570      	push	{r4, r5, r6, lr}
 800aeaa:	460d      	mov	r5, r1
 800aeac:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800aeb0:	4616      	mov	r6, r2
 800aeb2:	461c      	mov	r4, r3
 800aeb4:	f7ff ffd4 	bl	800ae60 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800aeb8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800aebc:	10c0      	asrs	r0, r0, #3
 800aebe:	fb06 5101 	mla	r1, r6, r1, r5
 800aec2:	fb00 4001 	mla	r0, r0, r1, r4
 800aec6:	bd70      	pop	{r4, r5, r6, pc}

0800aec8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800aec8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aecc:	b08c      	sub	sp, #48	; 0x30
 800aece:	f04f 0c00 	mov.w	ip, #0
 800aed2:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800aed6:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800aeda:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 800aede:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 800aee2:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 800aee6:	f8cd c018 	str.w	ip, [sp, #24]
 800aeea:	2d0b      	cmp	r5, #11
 800aeec:	4604      	mov	r4, r0
 800aeee:	469a      	mov	sl, r3
 800aef0:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 800aef4:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800aef8:	d130      	bne.n	800af5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 800aefa:	2080      	movs	r0, #128	; 0x80
 800aefc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 800af00:	9205      	str	r2, [sp, #20]
 800af02:	4620      	mov	r0, r4
 800af04:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 800af08:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800af0c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800af10:	f8ad 7020 	strh.w	r7, [sp, #32]
 800af14:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 800af18:	f7ff fee8 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af1c:	e9cd 9800 	strd	r9, r8, [sp]
 800af20:	4603      	mov	r3, r0
 800af22:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800af26:	4651      	mov	r1, sl
 800af28:	4620      	mov	r0, r4
 800af2a:	f7ff ffbd 	bl	800aea8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800af2e:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800af32:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800af36:	2300      	movs	r3, #0
 800af38:	9007      	str	r0, [sp, #28]
 800af3a:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800af3e:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800af42:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800af46:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800af4a:	b107      	cbz	r7, 800af4e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800af4c:	b9d6      	cbnz	r6, 800af84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800af4e:	4b17      	ldr	r3, [pc, #92]	; (800afac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800af50:	4a17      	ldr	r2, [pc, #92]	; (800afb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800af52:	f240 11c9 	movw	r1, #457	; 0x1c9
 800af56:	4817      	ldr	r0, [pc, #92]	; (800afb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800af58:	f011 feb0 	bl	801ccbc <__assert_func>
 800af5c:	2d02      	cmp	r5, #2
 800af5e:	d108      	bne.n	800af72 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800af60:	2bff      	cmp	r3, #255	; 0xff
 800af62:	d104      	bne.n	800af6e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800af64:	2800      	cmp	r0, #0
 800af66:	bf14      	ite	ne
 800af68:	2040      	movne	r0, #64	; 0x40
 800af6a:	2020      	moveq	r0, #32
 800af6c:	e7c6      	b.n	800aefc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800af6e:	2040      	movs	r0, #64	; 0x40
 800af70:	e7c4      	b.n	800aefc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800af72:	2bff      	cmp	r3, #255	; 0xff
 800af74:	d104      	bne.n	800af80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800af76:	2800      	cmp	r0, #0
 800af78:	bf14      	ite	ne
 800af7a:	2004      	movne	r0, #4
 800af7c:	2001      	moveq	r0, #1
 800af7e:	e7bd      	b.n	800aefc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800af80:	2004      	movs	r0, #4
 800af82:	e7bb      	b.n	800aefc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800af84:	6823      	ldr	r3, [r4, #0]
 800af86:	9d03      	ldr	r5, [sp, #12]
 800af88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af8a:	4620      	mov	r0, r4
 800af8c:	4798      	blx	r3
 800af8e:	4228      	tst	r0, r5
 800af90:	d104      	bne.n	800af9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800af92:	4b09      	ldr	r3, [pc, #36]	; (800afb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800af94:	4a06      	ldr	r2, [pc, #24]	; (800afb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800af96:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800af9a:	e7dc      	b.n	800af56 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800af9c:	6860      	ldr	r0, [r4, #4]
 800af9e:	6803      	ldr	r3, [r0, #0]
 800afa0:	a903      	add	r1, sp, #12
 800afa2:	685b      	ldr	r3, [r3, #4]
 800afa4:	4798      	blx	r3
 800afa6:	b00c      	add	sp, #48	; 0x30
 800afa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800afac:	0801f96b 	.word	0x0801f96b
 800afb0:	0801fdf3 	.word	0x0801fdf3
 800afb4:	0801fb16 	.word	0x0801fb16
 800afb8:	0801f9a3 	.word	0x0801f9a3

0800afbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800afbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800afc0:	b08d      	sub	sp, #52	; 0x34
 800afc2:	469b      	mov	fp, r3
 800afc4:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800afc8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800afcc:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800afd0:	2fff      	cmp	r7, #255	; 0xff
 800afd2:	bf14      	ite	ne
 800afd4:	2308      	movne	r3, #8
 800afd6:	2302      	moveq	r3, #2
 800afd8:	2500      	movs	r5, #0
 800afda:	4604      	mov	r4, r0
 800afdc:	4689      	mov	r9, r1
 800afde:	4692      	mov	sl, r2
 800afe0:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800afe4:	9506      	str	r5, [sp, #24]
 800afe6:	f7ff fe81 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800afea:	465a      	mov	r2, fp
 800afec:	4603      	mov	r3, r0
 800afee:	4651      	mov	r1, sl
 800aff0:	e9cd 8600 	strd	r8, r6, [sp]
 800aff4:	4620      	mov	r0, r4
 800aff6:	f7ff ff57 	bl	800aea8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800affa:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800affe:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b002:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800b006:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b00a:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800b00e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b012:	6823      	ldr	r3, [r4, #0]
 800b014:	9007      	str	r0, [sp, #28]
 800b016:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800b01a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b01e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800b022:	f8cd 9018 	str.w	r9, [sp, #24]
 800b026:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800b02a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800b02e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800b032:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b034:	9d03      	ldr	r5, [sp, #12]
 800b036:	4620      	mov	r0, r4
 800b038:	4798      	blx	r3
 800b03a:	4228      	tst	r0, r5
 800b03c:	d106      	bne.n	800b04c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800b03e:	4b07      	ldr	r3, [pc, #28]	; (800b05c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800b040:	4a07      	ldr	r2, [pc, #28]	; (800b060 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800b042:	4808      	ldr	r0, [pc, #32]	; (800b064 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800b044:	f44f 710c 	mov.w	r1, #560	; 0x230
 800b048:	f011 fe38 	bl	801ccbc <__assert_func>
 800b04c:	6860      	ldr	r0, [r4, #4]
 800b04e:	6803      	ldr	r3, [r0, #0]
 800b050:	a903      	add	r1, sp, #12
 800b052:	685b      	ldr	r3, [r3, #4]
 800b054:	4798      	blx	r3
 800b056:	b00d      	add	sp, #52	; 0x34
 800b058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b05c:	0801f9a3 	.word	0x0801f9a3
 800b060:	0801feca 	.word	0x0801feca
 800b064:	0801fb16 	.word	0x0801fb16

0800b068 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b068:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b06c:	461f      	mov	r7, r3
 800b06e:	4b0b      	ldr	r3, [pc, #44]	; (800b09c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b070:	460d      	mov	r5, r1
 800b072:	f8b3 8000 	ldrh.w	r8, [r3]
 800b076:	4616      	mov	r6, r2
 800b078:	4604      	mov	r4, r0
 800b07a:	f7ff fc77 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b07e:	6803      	ldr	r3, [r0, #0]
 800b080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b082:	4798      	blx	r3
 800b084:	463b      	mov	r3, r7
 800b086:	e9cd 8000 	strd	r8, r0, [sp]
 800b08a:	4632      	mov	r2, r6
 800b08c:	4629      	mov	r1, r5
 800b08e:	4620      	mov	r0, r4
 800b090:	f7ff ff0a 	bl	800aea8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b094:	b002      	add	sp, #8
 800b096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b09a:	bf00      	nop
 800b09c:	2000a806 	.word	0x2000a806

0800b0a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b0a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0a4:	b08b      	sub	sp, #44	; 0x2c
 800b0a6:	4699      	mov	r9, r3
 800b0a8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800b0ac:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800b0b0:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b0b4:	f8ad 7018 	strh.w	r7, [sp, #24]
 800b0b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b0bc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b0c0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b0c4:	2500      	movs	r5, #0
 800b0c6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b0ca:	f88d 3020 	strb.w	r3, [sp, #32]
 800b0ce:	4690      	mov	r8, r2
 800b0d0:	4604      	mov	r4, r0
 800b0d2:	9504      	str	r5, [sp, #16]
 800b0d4:	f8ad 601a 	strh.w	r6, [sp, #26]
 800b0d8:	f7ff fe08 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0dc:	464a      	mov	r2, r9
 800b0de:	4603      	mov	r3, r0
 800b0e0:	4641      	mov	r1, r8
 800b0e2:	4620      	mov	r0, r4
 800b0e4:	f7ff ffc0 	bl	800b068 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0e8:	4b19      	ldr	r3, [pc, #100]	; (800b150 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800b0ea:	9005      	str	r0, [sp, #20]
 800b0ec:	881b      	ldrh	r3, [r3, #0]
 800b0ee:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b0f2:	f7ff fc3b 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0fa:	4798      	blx	r3
 800b0fc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b100:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b104:	b107      	cbz	r7, 800b108 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800b106:	b936      	cbnz	r6, 800b116 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800b108:	4b12      	ldr	r3, [pc, #72]	; (800b154 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800b10a:	4a13      	ldr	r2, [pc, #76]	; (800b158 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800b10c:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800b110:	4812      	ldr	r0, [pc, #72]	; (800b15c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800b112:	f011 fdd3 	bl	801ccbc <__assert_func>
 800b116:	6823      	ldr	r3, [r4, #0]
 800b118:	9e01      	ldr	r6, [sp, #4]
 800b11a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b11c:	4620      	mov	r0, r4
 800b11e:	4798      	blx	r3
 800b120:	4230      	tst	r0, r6
 800b122:	d104      	bne.n	800b12e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800b124:	4b0e      	ldr	r3, [pc, #56]	; (800b160 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800b126:	4a0c      	ldr	r2, [pc, #48]	; (800b158 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800b128:	f240 11e7 	movw	r1, #487	; 0x1e7
 800b12c:	e7f0      	b.n	800b110 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800b12e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b130:	9304      	str	r3, [sp, #16]
 800b132:	6860      	ldr	r0, [r4, #4]
 800b134:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800b138:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b13c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b140:	6803      	ldr	r3, [r0, #0]
 800b142:	a901      	add	r1, sp, #4
 800b144:	685b      	ldr	r3, [r3, #4]
 800b146:	4798      	blx	r3
 800b148:	b00b      	add	sp, #44	; 0x2c
 800b14a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b14e:	bf00      	nop
 800b150:	2000a806 	.word	0x2000a806
 800b154:	0801f96b 	.word	0x0801f96b
 800b158:	0801fc9f 	.word	0x0801fc9f
 800b15c:	0801fb16 	.word	0x0801fb16
 800b160:	0801f9a3 	.word	0x0801f9a3

0800b164 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b164:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b166:	b08d      	sub	sp, #52	; 0x34
 800b168:	466b      	mov	r3, sp
 800b16a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b16e:	4b22      	ldr	r3, [pc, #136]	; (800b1f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b170:	781b      	ldrb	r3, [r3, #0]
 800b172:	4604      	mov	r4, r0
 800b174:	b933      	cbnz	r3, 800b184 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b176:	4b21      	ldr	r3, [pc, #132]	; (800b1fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b178:	4a21      	ldr	r2, [pc, #132]	; (800b200 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b17a:	4822      	ldr	r0, [pc, #136]	; (800b204 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800b17c:	f240 2141 	movw	r1, #577	; 0x241
 800b180:	f011 fd9c 	bl	801ccbc <__assert_func>
 800b184:	2300      	movs	r3, #0
 800b186:	9306      	str	r3, [sp, #24]
 800b188:	6803      	ldr	r3, [r0, #0]
 800b18a:	f8bd 6000 	ldrh.w	r6, [sp]
 800b18e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b190:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b194:	2501      	movs	r5, #1
 800b196:	9503      	str	r5, [sp, #12]
 800b198:	4798      	blx	r3
 800b19a:	463a      	mov	r2, r7
 800b19c:	4631      	mov	r1, r6
 800b19e:	4603      	mov	r3, r0
 800b1a0:	4620      	mov	r0, r4
 800b1a2:	f7ff ff61 	bl	800b068 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b1a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b1a8:	9307      	str	r3, [sp, #28]
 800b1aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b1ae:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b1b2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b1b6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b1ba:	4b13      	ldr	r3, [pc, #76]	; (800b208 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800b1bc:	9004      	str	r0, [sp, #16]
 800b1be:	881b      	ldrh	r3, [r3, #0]
 800b1c0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b1c4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b1c8:	f7ff fbd0 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b1cc:	6803      	ldr	r3, [r0, #0]
 800b1ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1d0:	4798      	blx	r3
 800b1d2:	23ff      	movs	r3, #255	; 0xff
 800b1d4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b1d8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b1dc:	6860      	ldr	r0, [r4, #4]
 800b1de:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b1e2:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b1e6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b1ea:	6803      	ldr	r3, [r0, #0]
 800b1ec:	a903      	add	r1, sp, #12
 800b1ee:	685b      	ldr	r3, [r3, #4]
 800b1f0:	4798      	blx	r3
 800b1f2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b1f4:	b00d      	add	sp, #52	; 0x34
 800b1f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1f8:	2000a80b 	.word	0x2000a80b
 800b1fc:	0801fa6a 	.word	0x0801fa6a
 800b200:	0801fd49 	.word	0x0801fd49
 800b204:	0801fb16 	.word	0x0801fb16
 800b208:	2000a806 	.word	0x2000a806

0800b20c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b20c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b210:	b08c      	sub	sp, #48	; 0x30
 800b212:	461e      	mov	r6, r3
 800b214:	466d      	mov	r5, sp
 800b216:	2300      	movs	r3, #0
 800b218:	e885 0006 	stmia.w	r5, {r1, r2}
 800b21c:	9306      	str	r3, [sp, #24]
 800b21e:	6803      	ldr	r3, [r0, #0]
 800b220:	f8bd 7000 	ldrh.w	r7, [sp]
 800b224:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b226:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b22a:	2501      	movs	r5, #1
 800b22c:	9503      	str	r5, [sp, #12]
 800b22e:	4604      	mov	r4, r0
 800b230:	4798      	blx	r3
 800b232:	4642      	mov	r2, r8
 800b234:	4639      	mov	r1, r7
 800b236:	4603      	mov	r3, r0
 800b238:	4620      	mov	r0, r4
 800b23a:	f7ff ff15 	bl	800b068 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b23e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b242:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b246:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b24a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b24e:	4b11      	ldr	r3, [pc, #68]	; (800b294 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b250:	9004      	str	r0, [sp, #16]
 800b252:	881b      	ldrh	r3, [r3, #0]
 800b254:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b258:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b25a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b25e:	9607      	str	r6, [sp, #28]
 800b260:	f7ff fb84 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b264:	6803      	ldr	r3, [r0, #0]
 800b266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b268:	4798      	blx	r3
 800b26a:	23ff      	movs	r3, #255	; 0xff
 800b26c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b270:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b274:	6860      	ldr	r0, [r4, #4]
 800b276:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b27a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b27e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b282:	6803      	ldr	r3, [r0, #0]
 800b284:	a903      	add	r1, sp, #12
 800b286:	685b      	ldr	r3, [r3, #4]
 800b288:	4798      	blx	r3
 800b28a:	4630      	mov	r0, r6
 800b28c:	b00c      	add	sp, #48	; 0x30
 800b28e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b292:	bf00      	nop
 800b294:	2000a806 	.word	0x2000a806

0800b298 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b29a:	b085      	sub	sp, #20
 800b29c:	ac02      	add	r4, sp, #8
 800b29e:	e884 0006 	stmia.w	r4, {r1, r2}
 800b2a2:	4605      	mov	r5, r0
 800b2a4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b2a8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b2ac:	f7ff fd1e 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2b0:	463a      	mov	r2, r7
 800b2b2:	4603      	mov	r3, r0
 800b2b4:	4631      	mov	r1, r6
 800b2b6:	4628      	mov	r0, r5
 800b2b8:	f7ff fed6 	bl	800b068 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b2bc:	4a05      	ldr	r2, [pc, #20]	; (800b2d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b2be:	682b      	ldr	r3, [r5, #0]
 800b2c0:	8812      	ldrh	r2, [r2, #0]
 800b2c2:	9200      	str	r2, [sp, #0]
 800b2c4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b2c6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b2ca:	4603      	mov	r3, r0
 800b2cc:	4628      	mov	r0, r5
 800b2ce:	47b0      	blx	r6
 800b2d0:	b005      	add	sp, #20
 800b2d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b2d4:	2000a806 	.word	0x2000a806

0800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b2d8:	b570      	push	{r4, r5, r6, lr}
 800b2da:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b2de:	4604      	mov	r4, r0
 800b2e0:	b19b      	cbz	r3, 800b30a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b2e2:	2002      	movs	r0, #2
 800b2e4:	f7f5 fa88 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b2e8:	2300      	movs	r3, #0
 800b2ea:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b2ee:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b2f2:	6823      	ldr	r3, [r4, #0]
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b2fa:	f7ff fcf7 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2fe:	462b      	mov	r3, r5
 800b300:	4601      	mov	r1, r0
 800b302:	4620      	mov	r0, r4
 800b304:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b308:	4718      	bx	r3
 800b30a:	bd70      	pop	{r4, r5, r6, pc}

0800b30c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b30c:	b570      	push	{r4, r5, r6, lr}
 800b30e:	4605      	mov	r5, r0
 800b310:	460c      	mov	r4, r1
 800b312:	2003      	movs	r0, #3
 800b314:	b149      	cbz	r1, 800b32a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b316:	f7f5 fa23 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b31a:	6928      	ldr	r0, [r5, #16]
 800b31c:	b168      	cbz	r0, 800b33a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b31e:	6803      	ldr	r3, [r0, #0]
 800b320:	695b      	ldr	r3, [r3, #20]
 800b322:	2101      	movs	r1, #1
 800b324:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b328:	4718      	bx	r3
 800b32a:	f7f5 fa3f 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b32e:	6928      	ldr	r0, [r5, #16]
 800b330:	b118      	cbz	r0, 800b33a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b332:	6803      	ldr	r3, [r0, #0]
 800b334:	4621      	mov	r1, r4
 800b336:	695b      	ldr	r3, [r3, #20]
 800b338:	e7f4      	b.n	800b324 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b33a:	bd70      	pop	{r4, r5, r6, pc}

0800b33c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b33c:	b538      	push	{r3, r4, r5, lr}
 800b33e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b342:	428b      	cmp	r3, r1
 800b344:	4604      	mov	r4, r0
 800b346:	460d      	mov	r5, r1
 800b348:	d006      	beq.n	800b358 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b34a:	6803      	ldr	r3, [r0, #0]
 800b34c:	b929      	cbnz	r1, 800b35a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b34e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b352:	4798      	blx	r3
 800b354:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b358:	bd38      	pop	{r3, r4, r5, pc}
 800b35a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b35e:	e7f8      	b.n	800b352 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b360 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b360:	b510      	push	{r4, lr}
 800b362:	4b0d      	ldr	r3, [pc, #52]	; (800b398 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b364:	781b      	ldrb	r3, [r3, #0]
 800b366:	4604      	mov	r4, r0
 800b368:	b95b      	cbnz	r3, 800b382 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b36a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b36e:	2b02      	cmp	r3, #2
 800b370:	d007      	beq.n	800b382 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b372:	6840      	ldr	r0, [r0, #4]
 800b374:	f000 f93c 	bl	800b5f0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b378:	b118      	cbz	r0, 800b382 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b37a:	6862      	ldr	r2, [r4, #4]
 800b37c:	7a53      	ldrb	r3, [r2, #9]
 800b37e:	2b00      	cmp	r3, #0
 800b380:	d0fc      	beq.n	800b37c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b382:	f7f5 fcd5 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b386:	4620      	mov	r0, r4
 800b388:	2100      	movs	r1, #0
 800b38a:	f7ff ffd7 	bl	800b33c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b38e:	4620      	mov	r0, r4
 800b390:	f7ff fcac 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b394:	bd10      	pop	{r4, pc}
 800b396:	bf00      	nop
 800b398:	2000a80a 	.word	0x2000a80a

0800b39c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b39c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b3a0:	1a13      	subs	r3, r2, r0
 800b3a2:	4258      	negs	r0, r3
 800b3a4:	4158      	adcs	r0, r3
 800b3a6:	4770      	bx	lr

0800b3a8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b3a8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b3ac:	1a9b      	subs	r3, r3, r2
 800b3ae:	2b00      	cmp	r3, #0
 800b3b0:	bfdc      	itt	le
 800b3b2:	6882      	ldrle	r2, [r0, #8]
 800b3b4:	189b      	addle	r3, r3, r2
 800b3b6:	2b01      	cmp	r3, #1
 800b3b8:	bfcc      	ite	gt
 800b3ba:	2000      	movgt	r0, #0
 800b3bc:	2001      	movle	r0, #1
 800b3be:	4770      	bx	lr

0800b3c0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b3c0:	6902      	ldr	r2, [r0, #16]
 800b3c2:	6843      	ldr	r3, [r0, #4]
 800b3c4:	2024      	movs	r0, #36	; 0x24
 800b3c6:	fb00 3002 	mla	r0, r0, r2, r3
 800b3ca:	4770      	bx	lr

0800b3cc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b3cc:	6803      	ldr	r3, [r0, #0]
 800b3ce:	691b      	ldr	r3, [r3, #16]
 800b3d0:	4718      	bx	r3

0800b3d2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b3d2:	4770      	bx	lr

0800b3d4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b3d4:	4770      	bx	lr

0800b3d6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b3d6:	4770      	bx	lr

0800b3d8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b3d8:	b570      	push	{r4, r5, r6, lr}
 800b3da:	2301      	movs	r3, #1
 800b3dc:	7203      	strb	r3, [r0, #8]
 800b3de:	4604      	mov	r4, r0
 800b3e0:	6840      	ldr	r0, [r0, #4]
 800b3e2:	6803      	ldr	r3, [r0, #0]
 800b3e4:	699b      	ldr	r3, [r3, #24]
 800b3e6:	4798      	blx	r3
 800b3e8:	6803      	ldr	r3, [r0, #0]
 800b3ea:	2b40      	cmp	r3, #64	; 0x40
 800b3ec:	4605      	mov	r5, r0
 800b3ee:	d039      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b3f0:	d815      	bhi.n	800b41e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b3f2:	2b04      	cmp	r3, #4
 800b3f4:	d022      	beq.n	800b43c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b3f6:	d808      	bhi.n	800b40a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b3f8:	2b01      	cmp	r3, #1
 800b3fa:	d033      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b3fc:	2b02      	cmp	r3, #2
 800b3fe:	d108      	bne.n	800b412 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800b400:	6823      	ldr	r3, [r4, #0]
 800b402:	4620      	mov	r0, r4
 800b404:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b406:	4798      	blx	r3
 800b408:	e025      	b.n	800b456 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800b40a:	2b08      	cmp	r3, #8
 800b40c:	d01e      	beq.n	800b44c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800b40e:	2b20      	cmp	r3, #32
 800b410:	d028      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b412:	4b17      	ldr	r3, [pc, #92]	; (800b470 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800b414:	4a17      	ldr	r2, [pc, #92]	; (800b474 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800b416:	4818      	ldr	r0, [pc, #96]	; (800b478 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800b418:	2188      	movs	r1, #136	; 0x88
 800b41a:	f011 fc4f 	bl	801ccbc <__assert_func>
 800b41e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b422:	d01f      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b424:	d804      	bhi.n	800b430 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800b426:	2b80      	cmp	r3, #128	; 0x80
 800b428:	d01c      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b42a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b42e:	e7ef      	b.n	800b410 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800b430:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b434:	d016      	beq.n	800b464 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b436:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b43a:	e7e0      	b.n	800b3fe <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b43c:	6823      	ldr	r3, [r4, #0]
 800b43e:	7f01      	ldrb	r1, [r0, #28]
 800b440:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b442:	4620      	mov	r0, r4
 800b444:	4798      	blx	r3
 800b446:	6823      	ldr	r3, [r4, #0]
 800b448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b44a:	e006      	b.n	800b45a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b44c:	6823      	ldr	r3, [r4, #0]
 800b44e:	7f01      	ldrb	r1, [r0, #28]
 800b450:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b452:	4620      	mov	r0, r4
 800b454:	4798      	blx	r3
 800b456:	6823      	ldr	r3, [r4, #0]
 800b458:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b45a:	4629      	mov	r1, r5
 800b45c:	4620      	mov	r0, r4
 800b45e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b462:	4718      	bx	r3
 800b464:	6823      	ldr	r3, [r4, #0]
 800b466:	4620      	mov	r0, r4
 800b468:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b46a:	4798      	blx	r3
 800b46c:	e7eb      	b.n	800b446 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b46e:	bf00      	nop
 800b470:	0801ffae 	.word	0x0801ffae
 800b474:	08020070 	.word	0x08020070
 800b478:	0801ffd3 	.word	0x0801ffd3

0800b47c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b47c:	b570      	push	{r4, r5, r6, lr}
 800b47e:	4604      	mov	r4, r0
 800b480:	460e      	mov	r6, r1
 800b482:	6860      	ldr	r0, [r4, #4]
 800b484:	6803      	ldr	r3, [r0, #0]
 800b486:	685b      	ldr	r3, [r3, #4]
 800b488:	4798      	blx	r3
 800b48a:	2800      	cmp	r0, #0
 800b48c:	d1f9      	bne.n	800b482 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b48e:	4d0d      	ldr	r5, [pc, #52]	; (800b4c4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b490:	6828      	ldr	r0, [r5, #0]
 800b492:	6803      	ldr	r3, [r0, #0]
 800b494:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b496:	4798      	blx	r3
 800b498:	f7f5 fc58 	bl	8000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b49c:	6828      	ldr	r0, [r5, #0]
 800b49e:	2101      	movs	r1, #1
 800b4a0:	f7ff ff4c 	bl	800b33c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b4a4:	6860      	ldr	r0, [r4, #4]
 800b4a6:	6803      	ldr	r3, [r0, #0]
 800b4a8:	4631      	mov	r1, r6
 800b4aa:	689b      	ldr	r3, [r3, #8]
 800b4ac:	4798      	blx	r3
 800b4ae:	6823      	ldr	r3, [r4, #0]
 800b4b0:	4620      	mov	r0, r4
 800b4b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4b4:	4798      	blx	r3
 800b4b6:	6828      	ldr	r0, [r5, #0]
 800b4b8:	6803      	ldr	r3, [r0, #0]
 800b4ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4be:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b4c0:	4718      	bx	r3
 800b4c2:	bf00      	nop
 800b4c4:	2000a80c 	.word	0x2000a80c

0800b4c8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b4c8:	b508      	push	{r3, lr}
 800b4ca:	f7f5 fc31 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b4ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b4d2:	f7f5 bc35 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b4d6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b4d6:	b510      	push	{r4, lr}
 800b4d8:	2114      	movs	r1, #20
 800b4da:	4604      	mov	r4, r0
 800b4dc:	f011 fbc0 	bl	801cc60 <_ZdlPvj>
 800b4e0:	4620      	mov	r0, r4
 800b4e2:	bd10      	pop	{r4, pc}

0800b4e4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b4e4:	b510      	push	{r4, lr}
 800b4e6:	4604      	mov	r4, r0
 800b4e8:	6840      	ldr	r0, [r0, #4]
 800b4ea:	6803      	ldr	r3, [r0, #0]
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	4798      	blx	r3
 800b4f0:	b948      	cbnz	r0, 800b506 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4f2:	7a63      	ldrb	r3, [r4, #9]
 800b4f4:	b13b      	cbz	r3, 800b506 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4f6:	7a23      	ldrb	r3, [r4, #8]
 800b4f8:	b92b      	cbnz	r3, 800b506 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b4fa:	6823      	ldr	r3, [r4, #0]
 800b4fc:	4620      	mov	r0, r4
 800b4fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b504:	4718      	bx	r3
 800b506:	bd10      	pop	{r4, pc}

0800b508 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b508:	b510      	push	{r4, lr}
 800b50a:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b50e:	1ad2      	subs	r2, r2, r3
 800b510:	2a00      	cmp	r2, #0
 800b512:	bfdc      	itt	le
 800b514:	6884      	ldrle	r4, [r0, #8]
 800b516:	1912      	addle	r2, r2, r4
 800b518:	2a01      	cmp	r2, #1
 800b51a:	dd17      	ble.n	800b54c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800b51c:	6842      	ldr	r2, [r0, #4]
 800b51e:	2424      	movs	r4, #36	; 0x24
 800b520:	fb04 2303 	mla	r3, r4, r3, r2
 800b524:	f101 0220 	add.w	r2, r1, #32
 800b528:	f851 4b04 	ldr.w	r4, [r1], #4
 800b52c:	f843 4b04 	str.w	r4, [r3], #4
 800b530:	4291      	cmp	r1, r2
 800b532:	d1f9      	bne.n	800b528 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b534:	780a      	ldrb	r2, [r1, #0]
 800b536:	701a      	strb	r2, [r3, #0]
 800b538:	68c3      	ldr	r3, [r0, #12]
 800b53a:	6882      	ldr	r2, [r0, #8]
 800b53c:	f3bf 8f5b 	dmb	ish
 800b540:	3301      	adds	r3, #1
 800b542:	429a      	cmp	r2, r3
 800b544:	bfd8      	it	le
 800b546:	1a9b      	suble	r3, r3, r2
 800b548:	60c3      	str	r3, [r0, #12]
 800b54a:	bd10      	pop	{r4, pc}
 800b54c:	4b02      	ldr	r3, [pc, #8]	; (800b558 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800b54e:	4a03      	ldr	r2, [pc, #12]	; (800b55c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b550:	4803      	ldr	r0, [pc, #12]	; (800b560 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b552:	2136      	movs	r1, #54	; 0x36
 800b554:	f011 fbb2 	bl	801ccbc <__assert_func>
 800b558:	0801fff9 	.word	0x0801fff9
 800b55c:	080200a0 	.word	0x080200a0
 800b560:	0801ffd3 	.word	0x0801ffd3

0800b564 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b564:	b510      	push	{r4, lr}
 800b566:	6803      	ldr	r3, [r0, #0]
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	4604      	mov	r4, r0
 800b56c:	4798      	blx	r3
 800b56e:	b128      	cbz	r0, 800b57c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b570:	4b07      	ldr	r3, [pc, #28]	; (800b590 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b572:	4a08      	ldr	r2, [pc, #32]	; (800b594 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b574:	4808      	ldr	r0, [pc, #32]	; (800b598 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b576:	213c      	movs	r1, #60	; 0x3c
 800b578:	f011 fba0 	bl	801ccbc <__assert_func>
 800b57c:	6923      	ldr	r3, [r4, #16]
 800b57e:	68a2      	ldr	r2, [r4, #8]
 800b580:	f3bf 8f5b 	dmb	ish
 800b584:	3301      	adds	r3, #1
 800b586:	429a      	cmp	r2, r3
 800b588:	bfd8      	it	le
 800b58a:	1a9b      	suble	r3, r3, r2
 800b58c:	6123      	str	r3, [r4, #16]
 800b58e:	bd10      	pop	{r4, pc}
 800b590:	0802001c 	.word	0x0802001c
 800b594:	080200ee 	.word	0x080200ee
 800b598:	0801ffd3 	.word	0x0801ffd3

0800b59c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b59c:	b570      	push	{r4, r5, r6, lr}
 800b59e:	4604      	mov	r4, r0
 800b5a0:	6840      	ldr	r0, [r0, #4]
 800b5a2:	6803      	ldr	r3, [r0, #0]
 800b5a4:	681b      	ldr	r3, [r3, #0]
 800b5a6:	4798      	blx	r3
 800b5a8:	4605      	mov	r5, r0
 800b5aa:	b930      	cbnz	r0, 800b5ba <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b5ac:	7a23      	ldrb	r3, [r4, #8]
 800b5ae:	b123      	cbz	r3, 800b5ba <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b5b0:	6860      	ldr	r0, [r4, #4]
 800b5b2:	6803      	ldr	r3, [r0, #0]
 800b5b4:	695b      	ldr	r3, [r3, #20]
 800b5b6:	4798      	blx	r3
 800b5b8:	7225      	strb	r5, [r4, #8]
 800b5ba:	6860      	ldr	r0, [r4, #4]
 800b5bc:	6803      	ldr	r3, [r0, #0]
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	4798      	blx	r3
 800b5c2:	b928      	cbnz	r0, 800b5d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b5c4:	6823      	ldr	r3, [r4, #0]
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b5ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5ce:	4718      	bx	r3
 800b5d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5d4:	f7f5 bbc2 	b.w	8000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b5d8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b5d8:	b510      	push	{r4, lr}
 800b5da:	4c04      	ldr	r4, [pc, #16]	; (800b5ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b5dc:	6082      	str	r2, [r0, #8]
 800b5de:	2200      	movs	r2, #0
 800b5e0:	e9c0 4100 	strd	r4, r1, [r0]
 800b5e4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b5e8:	bd10      	pop	{r4, pc}
 800b5ea:	bf00      	nop
 800b5ec:	08020054 	.word	0x08020054

0800b5f0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b5f0:	6840      	ldr	r0, [r0, #4]
 800b5f2:	6803      	ldr	r3, [r0, #0]
 800b5f4:	681b      	ldr	r3, [r3, #0]
 800b5f6:	4718      	bx	r3

0800b5f8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800b5f8:	b508      	push	{r3, lr}
 800b5fa:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800b5fe:	b10b      	cbz	r3, 800b604 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800b600:	f7f6 fd90 	bl	8002124 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800b604:	bd08      	pop	{r3, pc}

0800b606 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800b606:	6803      	ldr	r3, [r0, #0]
 800b608:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800b60c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b60e:	4718      	bx	r3

0800b610 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800b610:	4770      	bx	lr

0800b612 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800b612:	b510      	push	{r4, lr}
 800b614:	212c      	movs	r1, #44	; 0x2c
 800b616:	4604      	mov	r4, r0
 800b618:	f011 fb22 	bl	801cc60 <_ZdlPvj>
 800b61c:	4620      	mov	r0, r4
 800b61e:	bd10      	pop	{r4, pc}

0800b620 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800b620:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b624:	2bff      	cmp	r3, #255	; 0xff
 800b626:	b510      	push	{r4, lr}
 800b628:	d104      	bne.n	800b634 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800b62a:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800b62c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b630:	429a      	cmp	r2, r3
 800b632:	d105      	bne.n	800b640 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800b634:	2300      	movs	r3, #0
 800b636:	8003      	strh	r3, [r0, #0]
 800b638:	8043      	strh	r3, [r0, #2]
 800b63a:	8083      	strh	r3, [r0, #4]
 800b63c:	80c3      	strh	r3, [r0, #6]
 800b63e:	bd10      	pop	{r4, pc}
 800b640:	2300      	movs	r3, #0
 800b642:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800b646:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800b64a:	8003      	strh	r3, [r0, #0]
 800b64c:	8043      	strh	r3, [r0, #2]
 800b64e:	8084      	strh	r4, [r0, #4]
 800b650:	80c2      	strh	r2, [r0, #6]
 800b652:	e7f4      	b.n	800b63e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800b654 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800b654:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b658:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800b65c:	b087      	sub	sp, #28
 800b65e:	4604      	mov	r4, r0
 800b660:	4689      	mov	r9, r1
 800b662:	b363      	cbz	r3, 800b6be <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800b664:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800b666:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b66a:	429a      	cmp	r2, r3
 800b66c:	d027      	beq.n	800b6be <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800b66e:	ad06      	add	r5, sp, #24
 800b670:	2700      	movs	r7, #0
 800b672:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800b676:	4628      	mov	r0, r5
 800b678:	f005 f9be 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b67c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b680:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b684:	6823      	ldr	r3, [r4, #0]
 800b686:	f8ad 0014 	strh.w	r0, [sp, #20]
 800b68a:	a904      	add	r1, sp, #16
 800b68c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b68e:	9704      	str	r7, [sp, #16]
 800b690:	4620      	mov	r0, r4
 800b692:	4798      	blx	r3
 800b694:	f7ff f96a 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b698:	6803      	ldr	r3, [r0, #0]
 800b69a:	4606      	mov	r6, r0
 800b69c:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800b6a0:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b6a2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b6a6:	4628      	mov	r0, r5
 800b6a8:	f005 fac2 	bl	8010c30 <_ZNK8touchgfx6Bitmap7getDataEv>
 800b6ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b6b0:	9300      	str	r3, [sp, #0]
 800b6b2:	4601      	mov	r1, r0
 800b6b4:	9701      	str	r7, [sp, #4]
 800b6b6:	464b      	mov	r3, r9
 800b6b8:	aa04      	add	r2, sp, #16
 800b6ba:	4630      	mov	r0, r6
 800b6bc:	47c0      	blx	r8
 800b6be:	b007      	add	sp, #28
 800b6c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b6c4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800b6c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b6c6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b6ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b6ce:	6803      	ldr	r3, [r0, #0]
 800b6d0:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b6d4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b6d8:	460d      	mov	r5, r1
 800b6da:	2100      	movs	r1, #0
 800b6dc:	4604      	mov	r4, r0
 800b6de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6e0:	9100      	str	r1, [sp, #0]
 800b6e2:	4669      	mov	r1, sp
 800b6e4:	4798      	blx	r3
 800b6e6:	4621      	mov	r1, r4
 800b6e8:	a802      	add	r0, sp, #8
 800b6ea:	f003 fced 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b6ee:	f7ff f93d 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 800b6f2:	6803      	ldr	r3, [r0, #0]
 800b6f4:	aa02      	add	r2, sp, #8
 800b6f6:	695e      	ldr	r6, [r3, #20]
 800b6f8:	4669      	mov	r1, sp
 800b6fa:	462b      	mov	r3, r5
 800b6fc:	47b0      	blx	r6
 800b6fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b702:	2800      	cmp	r0, #0
 800b704:	bf08      	it	eq
 800b706:	461d      	moveq	r5, r3
 800b708:	84e5      	strh	r5, [r4, #38]	; 0x26
 800b70a:	b004      	add	sp, #16
 800b70c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b710 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800b710:	2200      	movs	r2, #0
 800b712:	8082      	strh	r2, [r0, #4]
 800b714:	80c2      	strh	r2, [r0, #6]
 800b716:	8102      	strh	r2, [r0, #8]
 800b718:	8142      	strh	r2, [r0, #10]
 800b71a:	8182      	strh	r2, [r0, #12]
 800b71c:	81c2      	strh	r2, [r0, #14]
 800b71e:	8202      	strh	r2, [r0, #16]
 800b720:	8242      	strh	r2, [r0, #18]
 800b722:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b726:	61c2      	str	r2, [r0, #28]
 800b728:	8402      	strh	r2, [r0, #32]
 800b72a:	8442      	strh	r2, [r0, #34]	; 0x22
 800b72c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b730:	2201      	movs	r2, #1
 800b732:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800b736:	4a04      	ldr	r2, [pc, #16]	; (800b748 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800b738:	6002      	str	r2, [r0, #0]
 800b73a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b73e:	84c2      	strh	r2, [r0, #38]	; 0x26
 800b740:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800b744:	4770      	bx	lr
 800b746:	bf00      	nop
 800b748:	08020128 	.word	0x08020128

0800b74c <_ZN8touchgfx8TextArea8setWidthEs>:
 800b74c:	b530      	push	{r4, r5, lr}
 800b74e:	b085      	sub	sp, #20
 800b750:	6803      	ldr	r3, [r0, #0]
 800b752:	8101      	strh	r1, [r0, #8]
 800b754:	466d      	mov	r5, sp
 800b756:	4601      	mov	r1, r0
 800b758:	4604      	mov	r4, r0
 800b75a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b75e:	4628      	mov	r0, r5
 800b760:	4798      	blx	r3
 800b762:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800b766:	343c      	adds	r4, #60	; 0x3c
 800b768:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800b76c:	b005      	add	sp, #20
 800b76e:	bd30      	pop	{r4, r5, pc}

0800b770 <_ZN8touchgfx8TextArea9setHeightEs>:
 800b770:	b530      	push	{r4, r5, lr}
 800b772:	b085      	sub	sp, #20
 800b774:	6803      	ldr	r3, [r0, #0]
 800b776:	8141      	strh	r1, [r0, #10]
 800b778:	466d      	mov	r5, sp
 800b77a:	4601      	mov	r1, r0
 800b77c:	4604      	mov	r4, r0
 800b77e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b782:	4628      	mov	r0, r5
 800b784:	4798      	blx	r3
 800b786:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800b78a:	343c      	adds	r4, #60	; 0x3c
 800b78c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800b790:	b005      	add	sp, #20
 800b792:	bd30      	pop	{r4, r5, pc}

0800b794 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800b794:	2200      	movs	r2, #0
 800b796:	8002      	strh	r2, [r0, #0]
 800b798:	8042      	strh	r2, [r0, #2]
 800b79a:	8082      	strh	r2, [r0, #4]
 800b79c:	80c2      	strh	r2, [r0, #6]
 800b79e:	4770      	bx	lr

0800b7a0 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800b7a0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800b7a4:	4770      	bx	lr

0800b7a6 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800b7a6:	b570      	push	{r4, r5, r6, lr}
 800b7a8:	6803      	ldr	r3, [r0, #0]
 800b7aa:	4604      	mov	r4, r0
 800b7ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b7ae:	4615      	mov	r5, r2
 800b7b0:	4798      	blx	r3
 800b7b2:	6823      	ldr	r3, [r4, #0]
 800b7b4:	4629      	mov	r1, r5
 800b7b6:	4620      	mov	r0, r4
 800b7b8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b7ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7be:	4718      	bx	r3

0800b7c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800b7c0:	2000      	movs	r0, #0
 800b7c2:	4770      	bx	lr

0800b7c4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800b7c4:	2000      	movs	r0, #0
 800b7c6:	4770      	bx	lr

0800b7c8 <_ZN8touchgfx8TextAreaD1Ev>:
 800b7c8:	4770      	bx	lr
	...

0800b7cc <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800b7cc:	b570      	push	{r4, r5, r6, lr}
 800b7ce:	6803      	ldr	r3, [r0, #0]
 800b7d0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b7d2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800b7d4:	4b11      	ldr	r3, [pc, #68]	; (800b81c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800b7d6:	681b      	ldr	r3, [r3, #0]
 800b7d8:	4604      	mov	r4, r0
 800b7da:	b28d      	uxth	r5, r1
 800b7dc:	b92b      	cbnz	r3, 800b7ea <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800b7de:	4b10      	ldr	r3, [pc, #64]	; (800b820 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800b7e0:	4a10      	ldr	r2, [pc, #64]	; (800b824 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b7e2:	21ae      	movs	r1, #174	; 0xae
 800b7e4:	4810      	ldr	r0, [pc, #64]	; (800b828 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800b7e6:	f011 fa69 	bl	801ccbc <__assert_func>
 800b7ea:	4910      	ldr	r1, [pc, #64]	; (800b82c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800b7ec:	8809      	ldrh	r1, [r1, #0]
 800b7ee:	4291      	cmp	r1, r2
 800b7f0:	d803      	bhi.n	800b7fa <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800b7f2:	4b0f      	ldr	r3, [pc, #60]	; (800b830 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800b7f4:	4a0b      	ldr	r2, [pc, #44]	; (800b824 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b7f6:	21af      	movs	r1, #175	; 0xaf
 800b7f8:	e7f4      	b.n	800b7e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800b7fa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b7fe:	4b0d      	ldr	r3, [pc, #52]	; (800b834 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800b800:	681b      	ldr	r3, [r3, #0]
 800b802:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b806:	6803      	ldr	r3, [r0, #0]
 800b808:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b80a:	4798      	blx	r3
 800b80c:	1a29      	subs	r1, r5, r0
 800b80e:	4633      	mov	r3, r6
 800b810:	4620      	mov	r0, r4
 800b812:	b209      	sxth	r1, r1
 800b814:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b818:	4718      	bx	r3
 800b81a:	bf00      	nop
 800b81c:	2000a85c 	.word	0x2000a85c
 800b820:	0801ef8c 	.word	0x0801ef8c
 800b824:	08020260 	.word	0x08020260
 800b828:	0801f01a 	.word	0x0801f01a
 800b82c:	2000a860 	.word	0x2000a860
 800b830:	08020190 	.word	0x08020190
 800b834:	2000a864 	.word	0x2000a864

0800b838 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800b838:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b83c:	4b1a      	ldr	r3, [pc, #104]	; (800b8a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800b83e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b840:	881b      	ldrh	r3, [r3, #0]
 800b842:	428b      	cmp	r3, r1
 800b844:	4604      	mov	r4, r0
 800b846:	d92d      	bls.n	800b8a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800b848:	4b18      	ldr	r3, [pc, #96]	; (800b8ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800b84a:	681b      	ldr	r3, [r3, #0]
 800b84c:	b92b      	cbnz	r3, 800b85a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800b84e:	4b18      	ldr	r3, [pc, #96]	; (800b8b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800b850:	4a18      	ldr	r2, [pc, #96]	; (800b8b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800b852:	4819      	ldr	r0, [pc, #100]	; (800b8b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800b854:	21ae      	movs	r1, #174	; 0xae
 800b856:	f011 fa31 	bl	801ccbc <__assert_func>
 800b85a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b85e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b862:	4b16      	ldr	r3, [pc, #88]	; (800b8bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800b864:	7855      	ldrb	r5, [r2, #1]
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800b86c:	6833      	ldr	r3, [r6, #0]
 800b86e:	69df      	ldr	r7, [r3, #28]
 800b870:	4b13      	ldr	r3, [pc, #76]	; (800b8c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800b872:	6818      	ldr	r0, [r3, #0]
 800b874:	f7f8 f940 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800b878:	6823      	ldr	r3, [r4, #0]
 800b87a:	4680      	mov	r8, r0
 800b87c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b87e:	4620      	mov	r0, r4
 800b880:	4798      	blx	r3
 800b882:	6823      	ldr	r3, [r4, #0]
 800b884:	4681      	mov	r9, r0
 800b886:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b88a:	4620      	mov	r0, r4
 800b88c:	4798      	blx	r3
 800b88e:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800b892:	9000      	str	r0, [sp, #0]
 800b894:	464b      	mov	r3, r9
 800b896:	4642      	mov	r2, r8
 800b898:	4629      	mov	r1, r5
 800b89a:	4630      	mov	r0, r6
 800b89c:	47b8      	blx	r7
 800b89e:	b003      	add	sp, #12
 800b8a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8a4:	2000      	movs	r0, #0
 800b8a6:	e7fa      	b.n	800b89e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800b8a8:	2000a860 	.word	0x2000a860
 800b8ac:	2000a85c 	.word	0x2000a85c
 800b8b0:	0801ef8c 	.word	0x0801ef8c
 800b8b4:	08020260 	.word	0x08020260
 800b8b8:	0801f01a 	.word	0x0801f01a
 800b8bc:	2000a864 	.word	0x2000a864
 800b8c0:	2000a868 	.word	0x2000a868

0800b8c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800b8c4:	b40e      	push	{r1, r2, r3}
 800b8c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8ca:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800b9bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800b8ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b8d0:	f8b9 3000 	ldrh.w	r3, [r9]
 800b8d4:	4293      	cmp	r3, r2
 800b8d6:	b09c      	sub	sp, #112	; 0x70
 800b8d8:	4604      	mov	r4, r0
 800b8da:	d965      	bls.n	800b9a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800b8dc:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800b9c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800b8e0:	ab26      	add	r3, sp, #152	; 0x98
 800b8e2:	9302      	str	r3, [sp, #8]
 800b8e4:	f8da 3000 	ldr.w	r3, [sl]
 800b8e8:	b92b      	cbnz	r3, 800b8f6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800b8ea:	4b30      	ldr	r3, [pc, #192]	; (800b9ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800b8ec:	4a30      	ldr	r2, [pc, #192]	; (800b9b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800b8ee:	21ae      	movs	r1, #174	; 0xae
 800b8f0:	4830      	ldr	r0, [pc, #192]	; (800b9b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800b8f2:	f011 f9e3 	bl	801ccbc <__assert_func>
 800b8f6:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800b9c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800b8fa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b8fe:	f8d8 3000 	ldr.w	r3, [r8]
 800b902:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800b906:	682b      	ldr	r3, [r5, #0]
 800b908:	4628      	mov	r0, r5
 800b90a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b90c:	4798      	blx	r3
 800b90e:	4606      	mov	r6, r0
 800b910:	b207      	sxth	r7, r0
 800b912:	a803      	add	r0, sp, #12
 800b914:	f003 ffc3 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800b918:	682b      	ldr	r3, [r5, #0]
 800b91a:	4628      	mov	r0, r5
 800b91c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b91e:	4798      	blx	r3
 800b920:	682b      	ldr	r3, [r5, #0]
 800b922:	4683      	mov	fp, r0
 800b924:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b926:	4628      	mov	r0, r5
 800b928:	4798      	blx	r3
 800b92a:	465b      	mov	r3, fp
 800b92c:	9000      	str	r0, [sp, #0]
 800b92e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800b930:	9a02      	ldr	r2, [sp, #8]
 800b932:	a803      	add	r0, sp, #12
 800b934:	f004 f81e 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b938:	f8da 3000 	ldr.w	r3, [sl]
 800b93c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800b940:	2b00      	cmp	r3, #0
 800b942:	d0d2      	beq.n	800b8ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800b944:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800b946:	f8b9 0000 	ldrh.w	r0, [r9]
 800b94a:	4290      	cmp	r0, r2
 800b94c:	d926      	bls.n	800b99c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800b94e:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800b952:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800b956:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800b95a:	786a      	ldrb	r2, [r5, #1]
 800b95c:	8925      	ldrh	r5, [r4, #8]
 800b95e:	f8d8 3000 	ldr.w	r3, [r8]
 800b962:	eba5 050c 	sub.w	r5, r5, ip
 800b966:	b22d      	sxth	r5, r5
 800b968:	9500      	str	r5, [sp, #0]
 800b96a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800b96e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b972:	a803      	add	r0, sp, #12
 800b974:	f001 fe7d 	bl	800d672 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800b978:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800b97c:	18b9      	adds	r1, r7, r2
 800b97e:	2900      	cmp	r1, #0
 800b980:	b203      	sxth	r3, r0
 800b982:	dd0f      	ble.n	800b9a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800b984:	3b01      	subs	r3, #1
 800b986:	fb13 f302 	smulbb	r3, r3, r2
 800b98a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800b98e:	b21f      	sxth	r7, r3
 800b990:	4638      	mov	r0, r7
 800b992:	b01c      	add	sp, #112	; 0x70
 800b994:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b998:	b003      	add	sp, #12
 800b99a:	4770      	bx	lr
 800b99c:	4b06      	ldr	r3, [pc, #24]	; (800b9b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800b99e:	4a04      	ldr	r2, [pc, #16]	; (800b9b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800b9a0:	21af      	movs	r1, #175	; 0xaf
 800b9a2:	e7a5      	b.n	800b8f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800b9a4:	2b00      	cmp	r3, #0
 800b9a6:	dcf3      	bgt.n	800b990 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800b9a8:	2700      	movs	r7, #0
 800b9aa:	e7f1      	b.n	800b990 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800b9ac:	0801ef8c 	.word	0x0801ef8c
 800b9b0:	08020260 	.word	0x08020260
 800b9b4:	0801f01a 	.word	0x0801f01a
 800b9b8:	08020190 	.word	0x08020190
 800b9bc:	2000a860 	.word	0x2000a860
 800b9c0:	2000a85c 	.word	0x2000a85c
 800b9c4:	2000a864 	.word	0x2000a864

0800b9c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800b9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9cc:	4b6d      	ldr	r3, [pc, #436]	; (800bb84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800b9ce:	460c      	mov	r4, r1
 800b9d0:	881a      	ldrh	r2, [r3, #0]
 800b9d2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800b9d4:	b0b9      	sub	sp, #228	; 0xe4
 800b9d6:	428a      	cmp	r2, r1
 800b9d8:	4681      	mov	r9, r0
 800b9da:	9302      	str	r3, [sp, #8]
 800b9dc:	d809      	bhi.n	800b9f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800b9de:	2300      	movs	r3, #0
 800b9e0:	f04f 32ff 	mov.w	r2, #4294967295
 800b9e4:	e9c0 3200 	strd	r3, r2, [r0]
 800b9e8:	6083      	str	r3, [r0, #8]
 800b9ea:	4648      	mov	r0, r9
 800b9ec:	b039      	add	sp, #228	; 0xe4
 800b9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9f2:	4a65      	ldr	r2, [pc, #404]	; (800bb88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800b9f4:	6813      	ldr	r3, [r2, #0]
 800b9f6:	4692      	mov	sl, r2
 800b9f8:	b92b      	cbnz	r3, 800ba06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800b9fa:	4b64      	ldr	r3, [pc, #400]	; (800bb8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800b9fc:	4a64      	ldr	r2, [pc, #400]	; (800bb90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800b9fe:	21ae      	movs	r1, #174	; 0xae
 800ba00:	4864      	ldr	r0, [pc, #400]	; (800bb94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800ba02:	f011 f95b 	bl	801ccbc <__assert_func>
 800ba06:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800ba0a:	4b63      	ldr	r3, [pc, #396]	; (800bb98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800ba0c:	f8df b190 	ldr.w	fp, [pc, #400]	; 800bba0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800ba10:	681b      	ldr	r3, [r3, #0]
 800ba12:	f8db 0000 	ldr.w	r0, [fp]
 800ba16:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ba1a:	f7f8 f86d 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800ba1e:	682b      	ldr	r3, [r5, #0]
 800ba20:	4680      	mov	r8, r0
 800ba22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba24:	4628      	mov	r0, r5
 800ba26:	4798      	blx	r3
 800ba28:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800ba2a:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800ba2e:	f8cd b00c 	str.w	fp, [sp, #12]
 800ba32:	4406      	add	r6, r0
 800ba34:	b2b6      	uxth	r6, r6
 800ba36:	2f00      	cmp	r7, #0
 800ba38:	f040 80b4 	bne.w	800bba4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 800ba3c:	a806      	add	r0, sp, #24
 800ba3e:	f003 ff2e 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800ba42:	682b      	ldr	r3, [r5, #0]
 800ba44:	4628      	mov	r0, r5
 800ba46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ba48:	4798      	blx	r3
 800ba4a:	682b      	ldr	r3, [r5, #0]
 800ba4c:	4683      	mov	fp, r0
 800ba4e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ba50:	4628      	mov	r0, r5
 800ba52:	4798      	blx	r3
 800ba54:	6822      	ldr	r2, [r4, #0]
 800ba56:	9005      	str	r0, [sp, #20]
 800ba58:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800ba5a:	4620      	mov	r0, r4
 800ba5c:	4790      	blx	r2
 800ba5e:	6821      	ldr	r1, [r4, #0]
 800ba60:	9004      	str	r0, [sp, #16]
 800ba62:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800ba66:	4620      	mov	r0, r4
 800ba68:	4788      	blx	r1
 800ba6a:	9a04      	ldr	r2, [sp, #16]
 800ba6c:	9001      	str	r0, [sp, #4]
 800ba6e:	9200      	str	r2, [sp, #0]
 800ba70:	4641      	mov	r1, r8
 800ba72:	9b05      	ldr	r3, [sp, #20]
 800ba74:	465a      	mov	r2, fp
 800ba76:	a806      	add	r0, sp, #24
 800ba78:	f003 ff91 	bl	800f99e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ba7c:	46b8      	mov	r8, r7
 800ba7e:	f8da 3000 	ldr.w	r3, [sl]
 800ba82:	2b00      	cmp	r3, #0
 800ba84:	d0b9      	beq.n	800b9fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800ba86:	9902      	ldr	r1, [sp, #8]
 800ba88:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ba8a:	8809      	ldrh	r1, [r1, #0]
 800ba8c:	4291      	cmp	r1, r2
 800ba8e:	d803      	bhi.n	800ba98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800ba90:	4b42      	ldr	r3, [pc, #264]	; (800bb9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 800ba92:	4a3f      	ldr	r2, [pc, #252]	; (800bb90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800ba94:	21af      	movs	r1, #175	; 0xaf
 800ba96:	e7b3      	b.n	800ba00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800ba98:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ba9c:	4629      	mov	r1, r5
 800ba9e:	785b      	ldrb	r3, [r3, #1]
 800baa0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800baa4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800baa8:	a806      	add	r0, sp, #24
 800baaa:	f001 fb37 	bl	800d11c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800baae:	4580      	cmp	r8, r0
 800bab0:	bfb8      	it	lt
 800bab2:	fa0f f880 	sxthlt.w	r8, r0
 800bab6:	3701      	adds	r7, #1
 800bab8:	a806      	add	r0, sp, #24
 800baba:	b2bf      	uxth	r7, r7
 800babc:	f003 ff16 	bl	800f8ec <_ZN8touchgfx12TextProvider11endOfStringEv>
 800bac0:	2800      	cmp	r0, #0
 800bac2:	d0dc      	beq.n	800ba7e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800bac4:	fb16 f607 	smulbb	r6, r6, r7
 800bac8:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800baca:	1bf6      	subs	r6, r6, r7
 800bacc:	b2b6      	uxth	r6, r6
 800bace:	fa0f fb86 	sxth.w	fp, r6
 800bad2:	f1bb 0f00 	cmp.w	fp, #0
 800bad6:	dd06      	ble.n	800bae6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800bad8:	682b      	ldr	r3, [r5, #0]
 800bada:	4628      	mov	r0, r5
 800badc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bade:	4798      	blx	r3
 800bae0:	4430      	add	r0, r6
 800bae2:	fa0f fb80 	sxth.w	fp, r0
 800bae6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800baea:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800baee:	6823      	ldr	r3, [r4, #0]
 800baf0:	bf08      	it	eq
 800baf2:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800baf6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800baf8:	bf18      	it	ne
 800bafa:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800bafe:	4620      	mov	r0, r4
 800bb00:	4798      	blx	r3
 800bb02:	2801      	cmp	r0, #1
 800bb04:	fa1f f288 	uxth.w	r2, r8
 800bb08:	f000 80f7 	beq.w	800bcfa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800bb0c:	2802      	cmp	r0, #2
 800bb0e:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800bb12:	f000 80f9 	beq.w	800bd08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 800bb16:	7a29      	ldrb	r1, [r5, #8]
 800bb18:	7a68      	ldrb	r0, [r5, #9]
 800bb1a:	b21b      	sxth	r3, r3
 800bb1c:	1a5b      	subs	r3, r3, r1
 800bb1e:	4401      	add	r1, r0
 800bb20:	440a      	add	r2, r1
 800bb22:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800bb26:	b29b      	uxth	r3, r3
 800bb28:	b292      	uxth	r2, r2
 800bb2a:	2902      	cmp	r1, #2
 800bb2c:	b21e      	sxth	r6, r3
 800bb2e:	b217      	sxth	r7, r2
 800bb30:	f000 80ed 	beq.w	800bd0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 800bb34:	2903      	cmp	r1, #3
 800bb36:	f000 80f3 	beq.w	800bd20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 800bb3a:	2901      	cmp	r1, #1
 800bb3c:	f040 80f9 	bne.w	800bd32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 800bb40:	8923      	ldrh	r3, [r4, #8]
 800bb42:	463a      	mov	r2, r7
 800bb44:	eba3 030b 	sub.w	r3, r3, fp
 800bb48:	465f      	mov	r7, fp
 800bb4a:	4635      	mov	r5, r6
 800bb4c:	4693      	mov	fp, r2
 800bb4e:	b21e      	sxth	r6, r3
 800bb50:	f8da 3000 	ldr.w	r3, [sl]
 800bb54:	2b00      	cmp	r3, #0
 800bb56:	f43f af50 	beq.w	800b9fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800bb5a:	9b02      	ldr	r3, [sp, #8]
 800bb5c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bb5e:	881b      	ldrh	r3, [r3, #0]
 800bb60:	428b      	cmp	r3, r1
 800bb62:	d995      	bls.n	800ba90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800bb64:	9b03      	ldr	r3, [sp, #12]
 800bb66:	6818      	ldr	r0, [r3, #0]
 800bb68:	f7f7 ffc6 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800bb6c:	f8a9 6000 	strh.w	r6, [r9]
 800bb70:	f8a9 5002 	strh.w	r5, [r9, #2]
 800bb74:	f8a9 7004 	strh.w	r7, [r9, #4]
 800bb78:	f8a9 b006 	strh.w	fp, [r9, #6]
 800bb7c:	f8c9 0008 	str.w	r0, [r9, #8]
 800bb80:	e733      	b.n	800b9ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800bb82:	bf00      	nop
 800bb84:	2000a860 	.word	0x2000a860
 800bb88:	2000a85c 	.word	0x2000a85c
 800bb8c:	0801ef8c 	.word	0x0801ef8c
 800bb90:	08020260 	.word	0x08020260
 800bb94:	0801f01a 	.word	0x0801f01a
 800bb98:	2000a864 	.word	0x2000a864
 800bb9c:	08020190 	.word	0x08020190
 800bba0:	2000a868 	.word	0x2000a868
 800bba4:	af1f      	add	r7, sp, #124	; 0x7c
 800bba6:	4638      	mov	r0, r7
 800bba8:	f003 fe79 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800bbac:	682b      	ldr	r3, [r5, #0]
 800bbae:	4628      	mov	r0, r5
 800bbb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bbb2:	4798      	blx	r3
 800bbb4:	682b      	ldr	r3, [r5, #0]
 800bbb6:	4683      	mov	fp, r0
 800bbb8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bbba:	4628      	mov	r0, r5
 800bbbc:	4798      	blx	r3
 800bbbe:	6822      	ldr	r2, [r4, #0]
 800bbc0:	9005      	str	r0, [sp, #20]
 800bbc2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800bbc4:	4620      	mov	r0, r4
 800bbc6:	4790      	blx	r2
 800bbc8:	6821      	ldr	r1, [r4, #0]
 800bbca:	9004      	str	r0, [sp, #16]
 800bbcc:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800bbd0:	4620      	mov	r0, r4
 800bbd2:	4788      	blx	r1
 800bbd4:	9a04      	ldr	r2, [sp, #16]
 800bbd6:	9001      	str	r0, [sp, #4]
 800bbd8:	9200      	str	r2, [sp, #0]
 800bbda:	9b05      	ldr	r3, [sp, #20]
 800bbdc:	465a      	mov	r2, fp
 800bbde:	4641      	mov	r1, r8
 800bbe0:	4638      	mov	r0, r7
 800bbe2:	f003 fedc 	bl	800f99e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bbe6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bbea:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800bbee:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800bbf2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bbf6:	bf0a      	itet	eq
 800bbf8:	465b      	moveq	r3, fp
 800bbfa:	4613      	movne	r3, r2
 800bbfc:	4693      	moveq	fp, r2
 800bbfe:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800bc02:	1a9b      	subs	r3, r3, r2
 800bc04:	b29a      	uxth	r2, r3
 800bc06:	f8da 3000 	ldr.w	r3, [sl]
 800bc0a:	2b00      	cmp	r3, #0
 800bc0c:	f43f aef5 	beq.w	800b9fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800bc10:	9802      	ldr	r0, [sp, #8]
 800bc12:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bc14:	8800      	ldrh	r0, [r0, #0]
 800bc16:	4288      	cmp	r0, r1
 800bc18:	f67f af3a 	bls.w	800ba90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800bc1c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800bc20:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800bc24:	7859      	ldrb	r1, [r3, #1]
 800bc26:	9707      	str	r7, [sp, #28]
 800bc28:	2300      	movs	r3, #0
 800bc2a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800bc2e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bc32:	f88d 1020 	strb.w	r1, [sp, #32]
 800bc36:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800bc3a:	9509      	str	r5, [sp, #36]	; 0x24
 800bc3c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800bc40:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800bc44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800bc48:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800bc4c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800bc50:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800bc54:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800bc58:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800bc5c:	b350      	cbz	r0, 800bcb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800bc5e:	682b      	ldr	r3, [r5, #0]
 800bc60:	4628      	mov	r0, r5
 800bc62:	695b      	ldr	r3, [r3, #20]
 800bc64:	4798      	blx	r3
 800bc66:	4680      	mov	r8, r0
 800bc68:	b320      	cbz	r0, 800bcb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800bc6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bc6c:	6803      	ldr	r3, [r0, #0]
 800bc6e:	4641      	mov	r1, r8
 800bc70:	68db      	ldr	r3, [r3, #12]
 800bc72:	4798      	blx	r3
 800bc74:	4607      	mov	r7, r0
 800bc76:	b1e8      	cbz	r0, 800bcb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800bc78:	7b43      	ldrb	r3, [r0, #13]
 800bc7a:	7a82      	ldrb	r2, [r0, #10]
 800bc7c:	005b      	lsls	r3, r3, #1
 800bc7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bc82:	4313      	orrs	r3, r2
 800bc84:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800bc88:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800bc8c:	2b04      	cmp	r3, #4
 800bc8e:	d111      	bne.n	800bcb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800bc90:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bc92:	6803      	ldr	r3, [r0, #0]
 800bc94:	463a      	mov	r2, r7
 800bc96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc98:	4641      	mov	r1, r8
 800bc9a:	4798      	blx	r3
 800bc9c:	7b7b      	ldrb	r3, [r7, #13]
 800bc9e:	005b      	lsls	r3, r3, #1
 800bca0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bca4:	7abb      	ldrb	r3, [r7, #10]
 800bca6:	4313      	orrs	r3, r2
 800bca8:	4418      	add	r0, r3
 800bcaa:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800bcae:	4418      	add	r0, r3
 800bcb0:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800bcb4:	b233      	sxth	r3, r6
 800bcb6:	2700      	movs	r7, #0
 800bcb8:	005a      	lsls	r2, r3, #1
 800bcba:	46b8      	mov	r8, r7
 800bcbc:	455a      	cmp	r2, fp
 800bcbe:	bfd4      	ite	le
 800bcc0:	2100      	movle	r1, #0
 800bcc2:	2101      	movgt	r1, #1
 800bcc4:	a806      	add	r0, sp, #24
 800bcc6:	9305      	str	r3, [sp, #20]
 800bcc8:	9204      	str	r2, [sp, #16]
 800bcca:	f001 fc03 	bl	800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bcce:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800bcd2:	4588      	cmp	r8, r1
 800bcd4:	bfb8      	it	lt
 800bcd6:	fa0f f881 	sxthlt.w	r8, r1
 800bcda:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800bcde:	3701      	adds	r7, #1
 800bce0:	ebab 0b06 	sub.w	fp, fp, r6
 800bce4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800bce8:	b2bf      	uxth	r7, r7
 800bcea:	fa0f fb8b 	sxth.w	fp, fp
 800bcee:	2900      	cmp	r1, #0
 800bcf0:	f43f aee8 	beq.w	800bac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bcf4:	455b      	cmp	r3, fp
 800bcf6:	dbe1      	blt.n	800bcbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 800bcf8:	e6e4      	b.n	800bac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bcfa:	eba6 0308 	sub.w	r3, r6, r8
 800bcfe:	f04f 0802 	mov.w	r8, #2
 800bd02:	fb93 f3f8 	sdiv	r3, r3, r8
 800bd06:	e706      	b.n	800bb16 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800bd08:	4413      	add	r3, r2
 800bd0a:	1af3      	subs	r3, r6, r3
 800bd0c:	e703      	b.n	800bb16 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800bd0e:	8926      	ldrh	r6, [r4, #8]
 800bd10:	8965      	ldrh	r5, [r4, #10]
 800bd12:	1ab2      	subs	r2, r6, r2
 800bd14:	1ad3      	subs	r3, r2, r3
 800bd16:	eba5 050b 	sub.w	r5, r5, fp
 800bd1a:	b21e      	sxth	r6, r3
 800bd1c:	b22d      	sxth	r5, r5
 800bd1e:	e717      	b.n	800bb50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bd20:	8965      	ldrh	r5, [r4, #10]
 800bd22:	1aaa      	subs	r2, r5, r2
 800bd24:	1ad3      	subs	r3, r2, r3
 800bd26:	b21d      	sxth	r5, r3
 800bd28:	463b      	mov	r3, r7
 800bd2a:	2600      	movs	r6, #0
 800bd2c:	465f      	mov	r7, fp
 800bd2e:	469b      	mov	fp, r3
 800bd30:	e70e      	b.n	800bb50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bd32:	2500      	movs	r5, #0
 800bd34:	e70c      	b.n	800bb50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800bd36:	bf00      	nop

0800bd38 <_ZN8touchgfx8TextAreaD0Ev>:
 800bd38:	b510      	push	{r4, lr}
 800bd3a:	2148      	movs	r1, #72	; 0x48
 800bd3c:	4604      	mov	r4, r0
 800bd3e:	f010 ff8f 	bl	801cc60 <_ZdlPvj>
 800bd42:	4620      	mov	r0, r4
 800bd44:	bd10      	pop	{r4, pc}
	...

0800bd48 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800bd48:	b508      	push	{r3, lr}
 800bd4a:	4b0b      	ldr	r3, [pc, #44]	; (800bd78 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800bd4c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bd4e:	881b      	ldrh	r3, [r3, #0]
 800bd50:	4293      	cmp	r3, r2
 800bd52:	d90e      	bls.n	800bd72 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800bd54:	4b09      	ldr	r3, [pc, #36]	; (800bd7c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800bd56:	681b      	ldr	r3, [r3, #0]
 800bd58:	b92b      	cbnz	r3, 800bd66 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800bd5a:	4b09      	ldr	r3, [pc, #36]	; (800bd80 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800bd5c:	4a09      	ldr	r2, [pc, #36]	; (800bd84 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800bd5e:	480a      	ldr	r0, [pc, #40]	; (800bd88 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800bd60:	21ae      	movs	r1, #174	; 0xae
 800bd62:	f010 ffab 	bl	801ccbc <__assert_func>
 800bd66:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bd6a:	7858      	ldrb	r0, [r3, #1]
 800bd6c:	f000 0003 	and.w	r0, r0, #3
 800bd70:	bd08      	pop	{r3, pc}
 800bd72:	2000      	movs	r0, #0
 800bd74:	e7fc      	b.n	800bd70 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800bd76:	bf00      	nop
 800bd78:	2000a860 	.word	0x2000a860
 800bd7c:	2000a85c 	.word	0x2000a85c
 800bd80:	0801ef8c 	.word	0x0801ef8c
 800bd84:	08020260 	.word	0x08020260
 800bd88:	0801f01a 	.word	0x0801f01a

0800bd8c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800bd8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd90:	4b15      	ldr	r3, [pc, #84]	; (800bde8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800bd92:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bd94:	881b      	ldrh	r3, [r3, #0]
 800bd96:	428b      	cmp	r3, r1
 800bd98:	4604      	mov	r4, r0
 800bd9a:	d921      	bls.n	800bde0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800bd9c:	6803      	ldr	r3, [r0, #0]
 800bd9e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800bda0:	4b12      	ldr	r3, [pc, #72]	; (800bdec <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800bda2:	681b      	ldr	r3, [r3, #0]
 800bda4:	b92b      	cbnz	r3, 800bdb2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800bda6:	4b12      	ldr	r3, [pc, #72]	; (800bdf0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800bda8:	4a12      	ldr	r2, [pc, #72]	; (800bdf4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800bdaa:	4813      	ldr	r0, [pc, #76]	; (800bdf8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800bdac:	21ae      	movs	r1, #174	; 0xae
 800bdae:	f010 ff85 	bl	801ccbc <__assert_func>
 800bdb2:	4b12      	ldr	r3, [pc, #72]	; (800bdfc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800bdb4:	6818      	ldr	r0, [r3, #0]
 800bdb6:	f7f7 fe9f 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800bdba:	6823      	ldr	r3, [r4, #0]
 800bdbc:	4606      	mov	r6, r0
 800bdbe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bdc0:	4620      	mov	r0, r4
 800bdc2:	4798      	blx	r3
 800bdc4:	6823      	ldr	r3, [r4, #0]
 800bdc6:	4607      	mov	r7, r0
 800bdc8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bdcc:	4620      	mov	r0, r4
 800bdce:	4798      	blx	r3
 800bdd0:	463a      	mov	r2, r7
 800bdd2:	4603      	mov	r3, r0
 800bdd4:	4631      	mov	r1, r6
 800bdd6:	4620      	mov	r0, r4
 800bdd8:	46ac      	mov	ip, r5
 800bdda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bdde:	4760      	bx	ip
 800bde0:	2000      	movs	r0, #0
 800bde2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bde6:	bf00      	nop
 800bde8:	2000a860 	.word	0x2000a860
 800bdec:	2000a85c 	.word	0x2000a85c
 800bdf0:	0801ef8c 	.word	0x0801ef8c
 800bdf4:	08020260 	.word	0x08020260
 800bdf8:	0801f01a 	.word	0x0801f01a
 800bdfc:	2000a868 	.word	0x2000a868

0800be00 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800be00:	b513      	push	{r0, r1, r4, lr}
 800be02:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800be06:	4604      	mov	r4, r0
 800be08:	b343      	cbz	r3, 800be5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800be0a:	4b1b      	ldr	r3, [pc, #108]	; (800be78 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 800be0c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800be0e:	881b      	ldrh	r3, [r3, #0]
 800be10:	428b      	cmp	r3, r1
 800be12:	d923      	bls.n	800be5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800be14:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800be18:	2b00      	cmp	r3, #0
 800be1a:	dd1f      	ble.n	800be5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800be1c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800be20:	2b00      	cmp	r3, #0
 800be22:	dd1b      	ble.n	800be5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800be24:	4b15      	ldr	r3, [pc, #84]	; (800be7c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 800be26:	681b      	ldr	r3, [r3, #0]
 800be28:	b92b      	cbnz	r3, 800be36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 800be2a:	4b15      	ldr	r3, [pc, #84]	; (800be80 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 800be2c:	4a15      	ldr	r2, [pc, #84]	; (800be84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 800be2e:	4816      	ldr	r0, [pc, #88]	; (800be88 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 800be30:	21ae      	movs	r1, #174	; 0xae
 800be32:	f010 ff43 	bl	801ccbc <__assert_func>
 800be36:	4b15      	ldr	r3, [pc, #84]	; (800be8c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 800be38:	6818      	ldr	r0, [r3, #0]
 800be3a:	f7f7 fe5d 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800be3e:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800be42:	6822      	ldr	r2, [r4, #0]
 800be44:	2b00      	cmp	r3, #0
 800be46:	db06      	blt.n	800be56 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800be48:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800be4c:	2b00      	cmp	r3, #0
 800be4e:	db02      	blt.n	800be56 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800be50:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be52:	4298      	cmp	r0, r3
 800be54:	d004      	beq.n	800be60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 800be56:	6953      	ldr	r3, [r2, #20]
 800be58:	4620      	mov	r0, r4
 800be5a:	4798      	blx	r3
 800be5c:	b002      	add	sp, #8
 800be5e:	bd10      	pop	{r4, pc}
 800be60:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800be64:	c903      	ldmia	r1, {r0, r1}
 800be66:	466b      	mov	r3, sp
 800be68:	e883 0003 	stmia.w	r3, {r0, r1}
 800be6c:	6912      	ldr	r2, [r2, #16]
 800be6e:	4619      	mov	r1, r3
 800be70:	4620      	mov	r0, r4
 800be72:	4790      	blx	r2
 800be74:	e7f2      	b.n	800be5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800be76:	bf00      	nop
 800be78:	2000a860 	.word	0x2000a860
 800be7c:	2000a85c 	.word	0x2000a85c
 800be80:	0801ef8c 	.word	0x0801ef8c
 800be84:	08020260 	.word	0x08020260
 800be88:	0801f01a 	.word	0x0801f01a
 800be8c:	2000a868 	.word	0x2000a868

0800be90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800be90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800be94:	4d56      	ldr	r5, [pc, #344]	; (800bff0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 800be96:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800be98:	882b      	ldrh	r3, [r5, #0]
 800be9a:	4293      	cmp	r3, r2
 800be9c:	b08e      	sub	sp, #56	; 0x38
 800be9e:	4604      	mov	r4, r0
 800bea0:	f240 80a3 	bls.w	800bfea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800bea4:	6808      	ldr	r0, [r1, #0]
 800bea6:	4e53      	ldr	r6, [pc, #332]	; (800bff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 800bea8:	6849      	ldr	r1, [r1, #4]
 800beaa:	ab05      	add	r3, sp, #20
 800beac:	c303      	stmia	r3!, {r0, r1}
 800beae:	6833      	ldr	r3, [r6, #0]
 800beb0:	b92b      	cbnz	r3, 800bebe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800beb2:	4b51      	ldr	r3, [pc, #324]	; (800bff8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 800beb4:	4a51      	ldr	r2, [pc, #324]	; (800bffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800beb6:	21ae      	movs	r1, #174	; 0xae
 800beb8:	4851      	ldr	r0, [pc, #324]	; (800c000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 800beba:	f010 feff 	bl	801ccbc <__assert_func>
 800bebe:	4f51      	ldr	r7, [pc, #324]	; (800c004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 800bec0:	4611      	mov	r1, r2
 800bec2:	6838      	ldr	r0, [r7, #0]
 800bec4:	f7f7 fe18 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800bec8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800becc:	2b00      	cmp	r3, #0
 800bece:	db11      	blt.n	800bef4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800bed0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800bed4:	2b00      	cmp	r3, #0
 800bed6:	db0d      	blt.n	800bef4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800bed8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800beda:	4298      	cmp	r0, r3
 800bedc:	d10a      	bne.n	800bef4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800bede:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800bee2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bee6:	ab09      	add	r3, sp, #36	; 0x24
 800bee8:	e883 0003 	stmia.w	r3, {r0, r1}
 800beec:	4619      	mov	r1, r3
 800beee:	a805      	add	r0, sp, #20
 800bef0:	f7fe fa6e 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800bef4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bef8:	2b00      	cmp	r3, #0
 800befa:	dd76      	ble.n	800bfea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800befc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800bf00:	2b00      	cmp	r3, #0
 800bf02:	dd72      	ble.n	800bfea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800bf04:	6833      	ldr	r3, [r6, #0]
 800bf06:	2b00      	cmp	r3, #0
 800bf08:	d0d3      	beq.n	800beb2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800bf0a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800bf0c:	8829      	ldrh	r1, [r5, #0]
 800bf0e:	4291      	cmp	r1, r2
 800bf10:	d803      	bhi.n	800bf1a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 800bf12:	4b3d      	ldr	r3, [pc, #244]	; (800c008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 800bf14:	4a39      	ldr	r2, [pc, #228]	; (800bffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800bf16:	21af      	movs	r1, #175	; 0xaf
 800bf18:	e7ce      	b.n	800beb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 800bf1a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bf1e:	4b3b      	ldr	r3, [pc, #236]	; (800c00c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 800bf20:	681b      	ldr	r3, [r3, #0]
 800bf22:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800bf26:	f1b8 0f00 	cmp.w	r8, #0
 800bf2a:	d05e      	beq.n	800bfea <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800bf2c:	6823      	ldr	r3, [r4, #0]
 800bf2e:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 800bf32:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bf34:	4620      	mov	r0, r4
 800bf36:	4798      	blx	r3
 800bf38:	6833      	ldr	r3, [r6, #0]
 800bf3a:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800bf3e:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 800bf42:	2b00      	cmp	r3, #0
 800bf44:	d0b5      	beq.n	800beb2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800bf46:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800bf48:	f8b5 e000 	ldrh.w	lr, [r5]
 800bf4c:	4596      	cmp	lr, r2
 800bf4e:	d9e0      	bls.n	800bf12 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800bf50:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bf54:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 800bf58:	785b      	ldrb	r3, [r3, #1]
 800bf5a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bf5c:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 800bf60:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800bf64:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bf68:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800bf6c:	4b28      	ldr	r3, [pc, #160]	; (800c010 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 800bf6e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800bf72:	681b      	ldr	r3, [r3, #0]
 800bf74:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800bf78:	920b      	str	r2, [sp, #44]	; 0x2c
 800bf7a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800bf7e:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 800bf82:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800bf86:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 800bf8a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bf8e:	b122      	cbz	r2, 800bf9a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 800bf90:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800bf94:	f1b8 0f00 	cmp.w	r8, #0
 800bf98:	d101      	bne.n	800bf9e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 800bf9a:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800bf9e:	f10d 091c 	add.w	r9, sp, #28
 800bfa2:	4621      	mov	r1, r4
 800bfa4:	4648      	mov	r0, r9
 800bfa6:	f003 f88f 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bfaa:	6833      	ldr	r3, [r6, #0]
 800bfac:	2b00      	cmp	r3, #0
 800bfae:	d080      	beq.n	800beb2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800bfb0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bfb2:	882b      	ldrh	r3, [r5, #0]
 800bfb4:	428b      	cmp	r3, r1
 800bfb6:	d9ac      	bls.n	800bf12 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800bfb8:	6838      	ldr	r0, [r7, #0]
 800bfba:	f7f7 fd9d 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800bfbe:	6823      	ldr	r3, [r4, #0]
 800bfc0:	4605      	mov	r5, r0
 800bfc2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	4798      	blx	r3
 800bfc8:	6823      	ldr	r3, [r4, #0]
 800bfca:	4606      	mov	r6, r0
 800bfcc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bfd0:	4620      	mov	r0, r4
 800bfd2:	4798      	blx	r3
 800bfd4:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800bfd8:	ab09      	add	r3, sp, #36	; 0x24
 800bfda:	9300      	str	r3, [sp, #0]
 800bfdc:	9501      	str	r5, [sp, #4]
 800bfde:	ab05      	add	r3, sp, #20
 800bfe0:	e899 0006 	ldmia.w	r9, {r1, r2}
 800bfe4:	4640      	mov	r0, r8
 800bfe6:	f7f7 fd39 	bl	8003a5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bfea:	b00e      	add	sp, #56	; 0x38
 800bfec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bff0:	2000a860 	.word	0x2000a860
 800bff4:	2000a85c 	.word	0x2000a85c
 800bff8:	0801ef8c 	.word	0x0801ef8c
 800bffc:	08020260 	.word	0x08020260
 800c000:	0801f01a 	.word	0x0801f01a
 800c004:	2000a868 	.word	0x2000a868
 800c008:	08020190 	.word	0x08020190
 800c00c:	2000a864 	.word	0x2000a864
 800c010:	2000a80c 	.word	0x2000a80c

0800c014 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c014:	b570      	push	{r4, r5, r6, lr}
 800c016:	6803      	ldr	r3, [r0, #0]
 800c018:	4604      	mov	r4, r0
 800c01a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c01c:	4615      	mov	r5, r2
 800c01e:	4798      	blx	r3
 800c020:	6823      	ldr	r3, [r4, #0]
 800c022:	4629      	mov	r1, r5
 800c024:	4620      	mov	r0, r4
 800c026:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c028:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c02c:	4718      	bx	r3
	...

0800c030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c030:	b538      	push	{r3, r4, r5, lr}
 800c032:	4b0e      	ldr	r3, [pc, #56]	; (800c06c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c034:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c036:	881b      	ldrh	r3, [r3, #0]
 800c038:	429a      	cmp	r2, r3
 800c03a:	4604      	mov	r4, r0
 800c03c:	d214      	bcs.n	800c068 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c03e:	6803      	ldr	r3, [r0, #0]
 800c040:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c042:	4798      	blx	r3
 800c044:	6823      	ldr	r3, [r4, #0]
 800c046:	4605      	mov	r5, r0
 800c048:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c04a:	4620      	mov	r0, r4
 800c04c:	4798      	blx	r3
 800c04e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c052:	b22d      	sxth	r5, r5
 800c054:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c058:	4601      	mov	r1, r0
 800c05a:	bf06      	itte	eq
 800c05c:	4602      	moveq	r2, r0
 800c05e:	4629      	moveq	r1, r5
 800c060:	462a      	movne	r2, r5
 800c062:	4620      	mov	r0, r4
 800c064:	f7ff ffd6 	bl	800c014 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c068:	bd38      	pop	{r3, r4, r5, pc}
 800c06a:	bf00      	nop
 800c06c:	2000a860 	.word	0x2000a860

0800c070 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c070:	b530      	push	{r4, r5, lr}
 800c072:	888b      	ldrh	r3, [r1, #4]
 800c074:	8583      	strh	r3, [r0, #44]	; 0x2c
 800c076:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c07a:	b085      	sub	sp, #20
 800c07c:	4604      	mov	r4, r0
 800c07e:	b923      	cbnz	r3, 800c08a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c080:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c084:	b90b      	cbnz	r3, 800c08a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c086:	f7ff ffd3 	bl	800c030 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c08a:	6823      	ldr	r3, [r4, #0]
 800c08c:	466d      	mov	r5, sp
 800c08e:	4621      	mov	r1, r4
 800c090:	4628      	mov	r0, r5
 800c092:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c096:	4798      	blx	r3
 800c098:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c09c:	343c      	adds	r4, #60	; 0x3c
 800c09e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c0a2:	b005      	add	sp, #20
 800c0a4:	bd30      	pop	{r4, r5, pc}

0800c0a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c0a6:	2300      	movs	r3, #0
 800c0a8:	8083      	strh	r3, [r0, #4]
 800c0aa:	80c3      	strh	r3, [r0, #6]
 800c0ac:	8003      	strh	r3, [r0, #0]
 800c0ae:	8043      	strh	r3, [r0, #2]
 800c0b0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c0b4:	2bff      	cmp	r3, #255	; 0xff
 800c0b6:	bf01      	itttt	eq
 800c0b8:	890b      	ldrheq	r3, [r1, #8]
 800c0ba:	8083      	strheq	r3, [r0, #4]
 800c0bc:	894b      	ldrheq	r3, [r1, #10]
 800c0be:	80c3      	strheq	r3, [r0, #6]
 800c0c0:	4770      	bx	lr
	...

0800c0c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c0c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c0c6:	4604      	mov	r4, r0
 800c0c8:	6808      	ldr	r0, [r1, #0]
 800c0ca:	6849      	ldr	r1, [r1, #4]
 800c0cc:	466b      	mov	r3, sp
 800c0ce:	c303      	stmia	r3!, {r0, r1}
 800c0d0:	6823      	ldr	r3, [r4, #0]
 800c0d2:	4669      	mov	r1, sp
 800c0d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c0d6:	4620      	mov	r0, r4
 800c0d8:	4798      	blx	r3
 800c0da:	4b08      	ldr	r3, [pc, #32]	; (800c0fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c0dc:	681b      	ldr	r3, [r3, #0]
 800c0de:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c0e2:	b10a      	cbz	r2, 800c0e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c0e4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c0e6:	b900      	cbnz	r0, 800c0ea <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c0e8:	6898      	ldr	r0, [r3, #8]
 800c0ea:	6803      	ldr	r3, [r0, #0]
 800c0ec:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c0ee:	6a1d      	ldr	r5, [r3, #32]
 800c0f0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c0f4:	4669      	mov	r1, sp
 800c0f6:	47a8      	blx	r5
 800c0f8:	b003      	add	sp, #12
 800c0fa:	bd30      	pop	{r4, r5, pc}
 800c0fc:	2000a80c 	.word	0x2000a80c

0800c100 <_ZN8touchgfx3BoxD1Ev>:
 800c100:	4770      	bx	lr

0800c102 <_ZN8touchgfx3BoxD0Ev>:
 800c102:	b510      	push	{r4, lr}
 800c104:	212c      	movs	r1, #44	; 0x2c
 800c106:	4604      	mov	r4, r0
 800c108:	f010 fdaa 	bl	801cc60 <_ZdlPvj>
 800c10c:	4620      	mov	r0, r4
 800c10e:	bd10      	pop	{r4, pc}

0800c110 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c110:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800c114:	b12a      	cbz	r2, 800c122 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c116:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c11a:	b112      	cbz	r2, 800c122 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c11c:	6803      	ldr	r3, [r0, #0]
 800c11e:	695b      	ldr	r3, [r3, #20]
 800c120:	4718      	bx	r3
 800c122:	4770      	bx	lr

0800c124 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c124:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c128:	4770      	bx	lr

0800c12a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c12a:	b570      	push	{r4, r5, r6, lr}
 800c12c:	880b      	ldrh	r3, [r1, #0]
 800c12e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c130:	4605      	mov	r5, r0
 800c132:	8813      	ldrh	r3, [r2, #0]
 800c134:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c138:	4604      	mov	r4, r0
 800c13a:	4628      	mov	r0, r5
 800c13c:	f004 fc5c 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c140:	4606      	mov	r6, r0
 800c142:	4628      	mov	r0, r5
 800c144:	f004 fc9c 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c148:	6823      	ldr	r3, [r4, #0]
 800c14a:	4605      	mov	r5, r0
 800c14c:	b231      	sxth	r1, r6
 800c14e:	4620      	mov	r0, r4
 800c150:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c152:	4798      	blx	r3
 800c154:	6823      	ldr	r3, [r4, #0]
 800c156:	b229      	sxth	r1, r5
 800c158:	4620      	mov	r0, r4
 800c15a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c15c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c160:	4718      	bx	r3

0800c162 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c162:	b510      	push	{r4, lr}
 800c164:	4604      	mov	r4, r0
 800c166:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c168:	b150      	cbz	r0, 800c180 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c16a:	6803      	ldr	r3, [r0, #0]
 800c16c:	68db      	ldr	r3, [r3, #12]
 800c16e:	4798      	blx	r3
 800c170:	b130      	cbz	r0, 800c180 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c172:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	4621      	mov	r1, r4
 800c178:	689b      	ldr	r3, [r3, #8]
 800c17a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c17e:	4718      	bx	r3
 800c180:	bd10      	pop	{r4, pc}

0800c182 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c182:	b510      	push	{r4, lr}
 800c184:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800c188:	2bff      	cmp	r3, #255	; 0xff
 800c18a:	4604      	mov	r4, r0
 800c18c:	d006      	beq.n	800c19c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c18e:	2300      	movs	r3, #0
 800c190:	8003      	strh	r3, [r0, #0]
 800c192:	8043      	strh	r3, [r0, #2]
 800c194:	8083      	strh	r3, [r0, #4]
 800c196:	80c3      	strh	r3, [r0, #6]
 800c198:	4620      	mov	r0, r4
 800c19a:	bd10      	pop	{r4, pc}
 800c19c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c1a0:	b11b      	cbz	r3, 800c1aa <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c1a2:	3130      	adds	r1, #48	; 0x30
 800c1a4:	f004 fcb0 	bl	8010b08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c1a8:	e7f6      	b.n	800c198 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c1aa:	312e      	adds	r1, #46	; 0x2e
 800c1ac:	e7fa      	b.n	800c1a4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800c1b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c1b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1b4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c1b8:	b08a      	sub	sp, #40	; 0x28
 800c1ba:	4604      	mov	r4, r0
 800c1bc:	4688      	mov	r8, r1
 800c1be:	2b00      	cmp	r3, #0
 800c1c0:	d044      	beq.n	800c24c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800c1c2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c1c4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c1c8:	a805      	add	r0, sp, #20
 800c1ca:	f004 fc15 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c1ce:	4605      	mov	r5, r0
 800c1d0:	b206      	sxth	r6, r0
 800c1d2:	a805      	add	r0, sp, #20
 800c1d4:	f004 fc54 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c1d8:	f9b8 2000 	ldrsh.w	r2, [r8]
 800c1dc:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800c1e0:	4417      	add	r7, r2
 800c1e2:	b2bf      	uxth	r7, r7
 800c1e4:	2300      	movs	r3, #0
 800c1e6:	fa0f fe87 	sxth.w	lr, r7
 800c1ea:	459e      	cmp	lr, r3
 800c1ec:	fa0f fc80 	sxth.w	ip, r0
 800c1f0:	9306      	str	r3, [sp, #24]
 800c1f2:	dd2d      	ble.n	800c250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c1f4:	4296      	cmp	r6, r2
 800c1f6:	dd2b      	ble.n	800c250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c1f8:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800c1fc:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800c200:	4419      	add	r1, r3
 800c202:	b289      	uxth	r1, r1
 800c204:	fa0f f881 	sxth.w	r8, r1
 800c208:	f1b8 0f00 	cmp.w	r8, #0
 800c20c:	dd20      	ble.n	800c250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c20e:	459c      	cmp	ip, r3
 800c210:	dd1e      	ble.n	800c250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c212:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c216:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c21a:	4576      	cmp	r6, lr
 800c21c:	bfa8      	it	ge
 800c21e:	463d      	movge	r5, r7
 800c220:	45c4      	cmp	ip, r8
 800c222:	bfa8      	it	ge
 800c224:	4608      	movge	r0, r1
 800c226:	1aad      	subs	r5, r5, r2
 800c228:	1ac0      	subs	r0, r0, r3
 800c22a:	f8ad 501c 	strh.w	r5, [sp, #28]
 800c22e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c232:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c236:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c23a:	4b1f      	ldr	r3, [pc, #124]	; (800c2b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800c23c:	681b      	ldr	r3, [r3, #0]
 800c23e:	b953      	cbnz	r3, 800c256 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800c240:	4b1e      	ldr	r3, [pc, #120]	; (800c2bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800c242:	4a1f      	ldr	r2, [pc, #124]	; (800c2c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800c244:	481f      	ldr	r0, [pc, #124]	; (800c2c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800c246:	2187      	movs	r1, #135	; 0x87
 800c248:	f010 fd38 	bl	801ccbc <__assert_func>
 800c24c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c24e:	e7b9      	b.n	800c1c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c250:	2300      	movs	r3, #0
 800c252:	9307      	str	r3, [sp, #28]
 800c254:	e7f1      	b.n	800c23a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800c256:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c25a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c25e:	429a      	cmp	r2, r3
 800c260:	d026      	beq.n	800c2b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c262:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c266:	2b00      	cmp	r3, #0
 800c268:	dd22      	ble.n	800c2b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c26a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c26e:	2b00      	cmp	r3, #0
 800c270:	dd1e      	ble.n	800c2b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c272:	2300      	movs	r3, #0
 800c274:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c278:	6823      	ldr	r3, [r4, #0]
 800c27a:	a908      	add	r1, sp, #32
 800c27c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c27e:	4620      	mov	r0, r4
 800c280:	4798      	blx	r3
 800c282:	4b11      	ldr	r3, [pc, #68]	; (800c2c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800c284:	681b      	ldr	r3, [r3, #0]
 800c286:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c28a:	b10a      	cbz	r2, 800c290 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c28c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c28e:	b900      	cbnz	r0, 800c292 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800c290:	6898      	ldr	r0, [r3, #8]
 800c292:	6801      	ldr	r1, [r0, #0]
 800c294:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c298:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c29c:	2501      	movs	r5, #1
 800c29e:	9502      	str	r5, [sp, #8]
 800c2a0:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c2a4:	9401      	str	r4, [sp, #4]
 800c2a6:	ac06      	add	r4, sp, #24
 800c2a8:	9400      	str	r4, [sp, #0]
 800c2aa:	688c      	ldr	r4, [r1, #8]
 800c2ac:	a905      	add	r1, sp, #20
 800c2ae:	47a0      	blx	r4
 800c2b0:	b00a      	add	sp, #40	; 0x28
 800c2b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c2b6:	bf00      	nop
 800c2b8:	2000a894 	.word	0x2000a894
 800c2bc:	080202f8 	.word	0x080202f8
 800c2c0:	0802035a 	.word	0x0802035a
 800c2c4:	08020334 	.word	0x08020334
 800c2c8:	2000a80c 	.word	0x2000a80c

0800c2cc <_ZNK8touchgfx6Button17invalidateContentEv>:
 800c2cc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800c2d0:	b12a      	cbz	r2, 800c2de <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c2d2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c2d6:	b112      	cbz	r2, 800c2de <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800c2d8:	6803      	ldr	r3, [r0, #0]
 800c2da:	695b      	ldr	r3, [r3, #20]
 800c2dc:	4718      	bx	r3
 800c2de:	4770      	bx	lr

0800c2e0 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800c2e0:	4770      	bx	lr

0800c2e2 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800c2e2:	b510      	push	{r4, lr}
 800c2e4:	213c      	movs	r1, #60	; 0x3c
 800c2e6:	4604      	mov	r4, r0
 800c2e8:	f010 fcba 	bl	801cc60 <_ZdlPvj>
 800c2ec:	4620      	mov	r0, r4
 800c2ee:	bd10      	pop	{r4, pc}

0800c2f0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800c2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c2f4:	461c      	mov	r4, r3
 800c2f6:	4606      	mov	r6, r0
 800c2f8:	9f06      	ldr	r7, [sp, #24]
 800c2fa:	f7ff ff16 	bl	800c12a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800c2fe:	8823      	ldrh	r3, [r4, #0]
 800c300:	86b3      	strh	r3, [r6, #52]	; 0x34
 800c302:	883b      	ldrh	r3, [r7, #0]
 800c304:	86f3      	strh	r3, [r6, #54]	; 0x36
 800c306:	4638      	mov	r0, r7
 800c308:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800c30c:	f004 fb74 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c310:	f04f 0802 	mov.w	r8, #2
 800c314:	fb95 f5f8 	sdiv	r5, r5, r8
 800c318:	b2ad      	uxth	r5, r5
 800c31a:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 800c31e:	8730      	strh	r0, [r6, #56]	; 0x38
 800c320:	4638      	mov	r0, r7
 800c322:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800c326:	fb94 f4f8 	sdiv	r4, r4, r8
 800c32a:	f004 fba9 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c32e:	b2a4      	uxth	r4, r4
 800c330:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 800c334:	8770      	strh	r0, [r6, #58]	; 0x3a
 800c336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800c33c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800c33c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c340:	4604      	mov	r4, r0
 800c342:	b08c      	sub	sp, #48	; 0x30
 800c344:	460d      	mov	r5, r1
 800c346:	f7ff ff33 	bl	800c1b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c34a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c34e:	b33b      	cbz	r3, 800c3a0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 800c350:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c352:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c356:	a805      	add	r0, sp, #20
 800c358:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800c35c:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800c360:	f004 fb4a 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c364:	4606      	mov	r6, r0
 800c366:	a805      	add	r0, sp, #20
 800c368:	f004 fb8a 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c36c:	6869      	ldr	r1, [r5, #4]
 800c36e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c372:	6828      	ldr	r0, [r5, #0]
 800c374:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c378:	ab08      	add	r3, sp, #32
 800c37a:	ad08      	add	r5, sp, #32
 800c37c:	c303      	stmia	r3!, {r0, r1}
 800c37e:	a906      	add	r1, sp, #24
 800c380:	4628      	mov	r0, r5
 800c382:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c386:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c38a:	f7fe f821 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800c38e:	4b25      	ldr	r3, [pc, #148]	; (800c424 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 800c390:	681b      	ldr	r3, [r3, #0]
 800c392:	b93b      	cbnz	r3, 800c3a4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 800c394:	4b24      	ldr	r3, [pc, #144]	; (800c428 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 800c396:	4a25      	ldr	r2, [pc, #148]	; (800c42c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 800c398:	4825      	ldr	r0, [pc, #148]	; (800c430 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 800c39a:	2187      	movs	r1, #135	; 0x87
 800c39c:	f010 fc8e 	bl	801ccbc <__assert_func>
 800c3a0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c3a2:	e7d6      	b.n	800c352 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 800c3a4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c3a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3ac:	429a      	cmp	r2, r3
 800c3ae:	d035      	beq.n	800c41c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c3b0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800c3b4:	2b00      	cmp	r3, #0
 800c3b6:	dd31      	ble.n	800c41c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c3b8:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800c3bc:	2b00      	cmp	r3, #0
 800c3be:	dd2d      	ble.n	800c41c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c3c0:	2300      	movs	r3, #0
 800c3c2:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800c3c6:	6823      	ldr	r3, [r4, #0]
 800c3c8:	a90a      	add	r1, sp, #40	; 0x28
 800c3ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3cc:	4620      	mov	r0, r4
 800c3ce:	4798      	blx	r3
 800c3d0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c3d4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c3d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800c3da:	1a9b      	subs	r3, r3, r2
 800c3dc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c3e0:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800c3e2:	1ac9      	subs	r1, r1, r3
 800c3e4:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800c3e8:	4912      	ldr	r1, [pc, #72]	; (800c434 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 800c3ea:	6809      	ldr	r1, [r1, #0]
 800c3ec:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800c3f0:	b108      	cbz	r0, 800c3f6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 800c3f2:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800c3f4:	b900      	cbnz	r0, 800c3f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 800c3f6:	6888      	ldr	r0, [r1, #8]
 800c3f8:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800c3fc:	440b      	add	r3, r1
 800c3fe:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800c402:	2601      	movs	r6, #1
 800c404:	440a      	add	r2, r1
 800c406:	6801      	ldr	r1, [r0, #0]
 800c408:	9602      	str	r6, [sp, #8]
 800c40a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c40e:	e9cd 5400 	strd	r5, r4, [sp]
 800c412:	b21b      	sxth	r3, r3
 800c414:	688c      	ldr	r4, [r1, #8]
 800c416:	b212      	sxth	r2, r2
 800c418:	a905      	add	r1, sp, #20
 800c41a:	47a0      	blx	r4
 800c41c:	b00c      	add	sp, #48	; 0x30
 800c41e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c422:	bf00      	nop
 800c424:	2000a894 	.word	0x2000a894
 800c428:	080202f8 	.word	0x080202f8
 800c42c:	08020408 	.word	0x08020408
 800c430:	08020334 	.word	0x08020334
 800c434:	2000a80c 	.word	0x2000a80c

0800c438 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800c438:	b510      	push	{r4, lr}
 800c43a:	2101      	movs	r1, #1
 800c43c:	2200      	movs	r2, #0
 800c43e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c442:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800c446:	4c0e      	ldr	r4, [pc, #56]	; (800c480 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800c448:	8082      	strh	r2, [r0, #4]
 800c44a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c44e:	80c2      	strh	r2, [r0, #6]
 800c450:	8102      	strh	r2, [r0, #8]
 800c452:	8142      	strh	r2, [r0, #10]
 800c454:	8182      	strh	r2, [r0, #12]
 800c456:	81c2      	strh	r2, [r0, #14]
 800c458:	8202      	strh	r2, [r0, #16]
 800c45a:	8242      	strh	r2, [r0, #18]
 800c45c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c460:	61c2      	str	r2, [r0, #28]
 800c462:	8402      	strh	r2, [r0, #32]
 800c464:	8442      	strh	r2, [r0, #34]	; 0x22
 800c466:	6282      	str	r2, [r0, #40]	; 0x28
 800c468:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800c46c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c46e:	8601      	strh	r1, [r0, #48]	; 0x30
 800c470:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800c474:	6004      	str	r4, [r0, #0]
 800c476:	8681      	strh	r1, [r0, #52]	; 0x34
 800c478:	86c1      	strh	r1, [r0, #54]	; 0x36
 800c47a:	8702      	strh	r2, [r0, #56]	; 0x38
 800c47c:	8742      	strh	r2, [r0, #58]	; 0x3a
 800c47e:	bd10      	pop	{r4, pc}
 800c480:	08020398 	.word	0x08020398

0800c484 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800c484:	4770      	bx	lr

0800c486 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800c486:	b510      	push	{r4, lr}
 800c488:	2148      	movs	r1, #72	; 0x48
 800c48a:	4604      	mov	r4, r0
 800c48c:	f010 fbe8 	bl	801cc60 <_ZdlPvj>
 800c490:	4620      	mov	r0, r4
 800c492:	bd10      	pop	{r4, pc}

0800c494 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800c494:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c498:	4604      	mov	r4, r0
 800c49a:	4d57      	ldr	r5, [pc, #348]	; (800c5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800c49c:	b08c      	sub	sp, #48	; 0x30
 800c49e:	4688      	mov	r8, r1
 800c4a0:	f7ff fe86 	bl	800c1b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c4a4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c4a6:	882b      	ldrh	r3, [r5, #0]
 800c4a8:	4293      	cmp	r3, r2
 800c4aa:	f240 80a1 	bls.w	800c5f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800c4ae:	4e53      	ldr	r6, [pc, #332]	; (800c5fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800c4b0:	6833      	ldr	r3, [r6, #0]
 800c4b2:	b92b      	cbnz	r3, 800c4c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800c4b4:	4b52      	ldr	r3, [pc, #328]	; (800c600 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800c4b6:	4a53      	ldr	r2, [pc, #332]	; (800c604 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c4b8:	21ae      	movs	r1, #174	; 0xae
 800c4ba:	4853      	ldr	r0, [pc, #332]	; (800c608 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c4bc:	f010 fbfe 	bl	801ccbc <__assert_func>
 800c4c0:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c4c4:	4b51      	ldr	r3, [pc, #324]	; (800c60c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800c4c6:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800c4ca:	681b      	ldr	r3, [r3, #0]
 800c4cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c4d0:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800c4d4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c4d8:	2300      	movs	r3, #0
 800c4da:	f1be 0f01 	cmp.w	lr, #1
 800c4de:	9303      	str	r3, [sp, #12]
 800c4e0:	b208      	sxth	r0, r1
 800c4e2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c4e6:	f04f 0c02 	mov.w	ip, #2
 800c4ea:	d044      	beq.n	800c576 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800c4ec:	f1be 0f03 	cmp.w	lr, #3
 800c4f0:	d041      	beq.n	800c576 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800c4f2:	1a52      	subs	r2, r2, r1
 800c4f4:	f8ad 3010 	strh.w	r3, [sp, #16]
 800c4f8:	fb92 f2fc 	sdiv	r2, r2, ip
 800c4fc:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c500:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c504:	f10d 090c 	add.w	r9, sp, #12
 800c508:	e899 0003 	ldmia.w	r9, {r0, r1}
 800c50c:	f10d 0a14 	add.w	sl, sp, #20
 800c510:	e88a 0003 	stmia.w	sl, {r0, r1}
 800c514:	4641      	mov	r1, r8
 800c516:	4650      	mov	r0, sl
 800c518:	f7fd ff5a 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800c51c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c520:	2b00      	cmp	r3, #0
 800c522:	dd65      	ble.n	800c5f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800c524:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c528:	2b00      	cmp	r3, #0
 800c52a:	dd61      	ble.n	800c5f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800c52c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c530:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c534:	1a9b      	subs	r3, r3, r2
 800c536:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c53a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c53e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c542:	1a9b      	subs	r3, r3, r2
 800c544:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c548:	6823      	ldr	r3, [r4, #0]
 800c54a:	4649      	mov	r1, r9
 800c54c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c54e:	4620      	mov	r0, r4
 800c550:	4798      	blx	r3
 800c552:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c556:	b1c3      	cbz	r3, 800c58a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 800c558:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800c55c:	6833      	ldr	r3, [r6, #0]
 800c55e:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800c562:	2b00      	cmp	r3, #0
 800c564:	d0a6      	beq.n	800c4b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800c566:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800c568:	882d      	ldrh	r5, [r5, #0]
 800c56a:	428d      	cmp	r5, r1
 800c56c:	d810      	bhi.n	800c590 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 800c56e:	4b28      	ldr	r3, [pc, #160]	; (800c610 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800c570:	4a24      	ldr	r2, [pc, #144]	; (800c604 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c572:	21af      	movs	r1, #175	; 0xaf
 800c574:	e7a1      	b.n	800c4ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800c576:	1a5b      	subs	r3, r3, r1
 800c578:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c57c:	fb93 f3fc 	sdiv	r3, r3, ip
 800c580:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c584:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c588:	e7bc      	b.n	800c504 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 800c58a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800c58e:	e7e5      	b.n	800c55c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 800c590:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c594:	6812      	ldr	r2, [r2, #0]
 800c596:	785b      	ldrb	r3, [r3, #1]
 800c598:	9209      	str	r2, [sp, #36]	; 0x24
 800c59a:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800c59e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c5a2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800c5a6:	2300      	movs	r3, #0
 800c5a8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800c5ac:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800c5b0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800c5b4:	4b17      	ldr	r3, [pc, #92]	; (800c614 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800c5b6:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800c5ba:	681b      	ldr	r3, [r3, #0]
 800c5bc:	9707      	str	r7, [sp, #28]
 800c5be:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c5c2:	f88d 5020 	strb.w	r5, [sp, #32]
 800c5c6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c5ca:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800c5ce:	b10a      	cbz	r2, 800c5d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800c5d0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800c5d2:	b904      	cbnz	r4, 800c5d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 800c5d4:	689c      	ldr	r4, [r3, #8]
 800c5d6:	4b10      	ldr	r3, [pc, #64]	; (800c618 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800c5d8:	6818      	ldr	r0, [r3, #0]
 800c5da:	f7f7 fa8d 	bl	8003af8 <_ZNK8touchgfx5Texts7getTextEt>
 800c5de:	ab07      	add	r3, sp, #28
 800c5e0:	9001      	str	r0, [sp, #4]
 800c5e2:	9300      	str	r3, [sp, #0]
 800c5e4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800c5e8:	4653      	mov	r3, sl
 800c5ea:	4620      	mov	r0, r4
 800c5ec:	f7f7 fa36 	bl	8003a5c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c5f0:	b00c      	add	sp, #48	; 0x30
 800c5f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c5f6:	bf00      	nop
 800c5f8:	2000a860 	.word	0x2000a860
 800c5fc:	2000a85c 	.word	0x2000a85c
 800c600:	0801ef8c 	.word	0x0801ef8c
 800c604:	080204b0 	.word	0x080204b0
 800c608:	0801f01a 	.word	0x0801f01a
 800c60c:	2000a864 	.word	0x2000a864
 800c610:	08020190 	.word	0x08020190
 800c614:	2000a80c 	.word	0x2000a80c
 800c618:	2000a868 	.word	0x2000a868

0800c61c <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800c61c:	b510      	push	{r4, lr}
 800c61e:	2101      	movs	r1, #1
 800c620:	4c13      	ldr	r4, [pc, #76]	; (800c670 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800c622:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c626:	2200      	movs	r2, #0
 800c628:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800c62c:	6004      	str	r4, [r0, #0]
 800c62e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c632:	4c10      	ldr	r4, [pc, #64]	; (800c674 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800c634:	8082      	strh	r2, [r0, #4]
 800c636:	80c2      	strh	r2, [r0, #6]
 800c638:	8102      	strh	r2, [r0, #8]
 800c63a:	8142      	strh	r2, [r0, #10]
 800c63c:	8182      	strh	r2, [r0, #12]
 800c63e:	81c2      	strh	r2, [r0, #14]
 800c640:	8202      	strh	r2, [r0, #16]
 800c642:	8242      	strh	r2, [r0, #18]
 800c644:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c648:	61c2      	str	r2, [r0, #28]
 800c64a:	8402      	strh	r2, [r0, #32]
 800c64c:	8442      	strh	r2, [r0, #34]	; 0x22
 800c64e:	6282      	str	r2, [r0, #40]	; 0x28
 800c650:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800c654:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c656:	8601      	strh	r1, [r0, #48]	; 0x30
 800c658:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800c65c:	6344      	str	r4, [r0, #52]	; 0x34
 800c65e:	8701      	strh	r1, [r0, #56]	; 0x38
 800c660:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800c664:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800c668:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800c66c:	bd10      	pop	{r4, pc}
 800c66e:	bf00      	nop
 800c670:	08020444 	.word	0x08020444
 800c674:	0801e6b0 	.word	0x0801e6b0

0800c678 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c678:	b510      	push	{r4, lr}
 800c67a:	6803      	ldr	r3, [r0, #0]
 800c67c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c67e:	460c      	mov	r4, r1
 800c680:	4798      	blx	r3
 800c682:	1b03      	subs	r3, r0, r4
 800c684:	4258      	negs	r0, r3
 800c686:	4158      	adcs	r0, r3
 800c688:	bd10      	pop	{r4, pc}
	...

0800c68c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c68c:	4b01      	ldr	r3, [pc, #4]	; (800c694 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c68e:	6019      	str	r1, [r3, #0]
 800c690:	4770      	bx	lr
 800c692:	bf00      	nop
 800c694:	2000a814 	.word	0x2000a814

0800c698 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c69c:	4696      	mov	lr, r2
 800c69e:	4605      	mov	r5, r0
 800c6a0:	4614      	mov	r4, r2
 800c6a2:	460e      	mov	r6, r1
 800c6a4:	461f      	mov	r7, r3
 800c6a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6aa:	b097      	sub	sp, #92	; 0x5c
 800c6ac:	f10d 0c1c 	add.w	ip, sp, #28
 800c6b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6b4:	f8de 3000 	ldr.w	r3, [lr]
 800c6b8:	f8cc 3000 	str.w	r3, [ip]
 800c6bc:	f104 0e14 	add.w	lr, r4, #20
 800c6c0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6c4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c6c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6cc:	f8de 3000 	ldr.w	r3, [lr]
 800c6d0:	f8cc 3000 	str.w	r3, [ip]
 800c6d4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c6d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6dc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c6e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6e4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800c6e8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800c6ec:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800c6f0:	f8de 3000 	ldr.w	r3, [lr]
 800c6f4:	f8cc 3000 	str.w	r3, [ip]
 800c6f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c6fa:	682b      	ldr	r3, [r5, #0]
 800c6fc:	9201      	str	r2, [sp, #4]
 800c6fe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c702:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c704:	9200      	str	r2, [sp, #0]
 800c706:	f8cd 8008 	str.w	r8, [sp, #8]
 800c70a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800c70e:	aa07      	add	r2, sp, #28
 800c710:	463b      	mov	r3, r7
 800c712:	4631      	mov	r1, r6
 800c714:	4628      	mov	r0, r5
 800c716:	47d8      	blx	fp
 800c718:	46a6      	mov	lr, r4
 800c71a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c71e:	f10d 0c1c 	add.w	ip, sp, #28
 800c722:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c726:	f8de 3000 	ldr.w	r3, [lr]
 800c72a:	f8cc 3000 	str.w	r3, [ip]
 800c72e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c732:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c736:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c73a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c73e:	343c      	adds	r4, #60	; 0x3c
 800c740:	f8de 3000 	ldr.w	r3, [lr]
 800c744:	f8cc 3000 	str.w	r3, [ip]
 800c748:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c74a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c74e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c752:	6823      	ldr	r3, [r4, #0]
 800c754:	f8cc 3000 	str.w	r3, [ip]
 800c758:	682b      	ldr	r3, [r5, #0]
 800c75a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c75e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c760:	9201      	str	r2, [sp, #4]
 800c762:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c764:	9200      	str	r2, [sp, #0]
 800c766:	f8cd 8008 	str.w	r8, [sp, #8]
 800c76a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800c76c:	aa07      	add	r2, sp, #28
 800c76e:	463b      	mov	r3, r7
 800c770:	4631      	mov	r1, r6
 800c772:	4628      	mov	r0, r5
 800c774:	47a0      	blx	r4
 800c776:	b017      	add	sp, #92	; 0x5c
 800c778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c77c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c780:	b08d      	sub	sp, #52	; 0x34
 800c782:	4688      	mov	r8, r1
 800c784:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c786:	f8d3 c000 	ldr.w	ip, [r3]
 800c78a:	680f      	ldr	r7, [r1, #0]
 800c78c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800c790:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800c794:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800c798:	edd3 6a07 	vldr	s13, [r3, #28]
 800c79c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c79e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800c7a2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c7a6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c7aa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800c7ae:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800c7b2:	eba7 070c 	sub.w	r7, r7, ip
 800c7b6:	42bc      	cmp	r4, r7
 800c7b8:	bfa8      	it	ge
 800c7ba:	463c      	movge	r4, r7
 800c7bc:	ee07 4a90 	vmov	s15, r4
 800c7c0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c7c4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800c7c8:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c7cc:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c7d0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c7d4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c7d8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c7dc:	eb09 0e0c 	add.w	lr, r9, ip
 800c7e0:	4571      	cmp	r1, lr
 800c7e2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c7e6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c7ea:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c7ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c7f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c7f6:	f340 808d 	ble.w	800c914 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800c7fa:	eba1 060e 	sub.w	r6, r1, lr
 800c7fe:	fb96 f5f4 	sdiv	r5, r6, r4
 800c802:	ee07 5a10 	vmov	s14, r5
 800c806:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c80a:	2d00      	cmp	r5, #0
 800c80c:	fb04 6615 	mls	r6, r4, r5, r6
 800c810:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c814:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c818:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c81c:	dd13      	ble.n	800c846 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800c81e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c822:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c826:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c82a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c82e:	bf18      	it	ne
 800c830:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c834:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c838:	bf08      	it	eq
 800c83a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c83e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c842:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c846:	fb05 f204 	mul.w	r2, r5, r4
 800c84a:	1abf      	subs	r7, r7, r2
 800c84c:	4494      	add	ip, r2
 800c84e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c852:	4411      	add	r1, r2
 800c854:	eb09 020c 	add.w	r2, r9, ip
 800c858:	443a      	add	r2, r7
 800c85a:	b209      	sxth	r1, r1
 800c85c:	428a      	cmp	r2, r1
 800c85e:	bfc4      	itt	gt
 800c860:	eba1 0209 	subgt.w	r2, r1, r9
 800c864:	eba2 070c 	subgt.w	r7, r2, ip
 800c868:	2f00      	cmp	r7, #0
 800c86a:	dd50      	ble.n	800c90e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800c86c:	fb97 f1f4 	sdiv	r1, r7, r4
 800c870:	fb04 7211 	mls	r2, r4, r1, r7
 800c874:	b90a      	cbnz	r2, 800c87a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800c876:	3901      	subs	r1, #1
 800c878:	4622      	mov	r2, r4
 800c87a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c87e:	6840      	ldr	r0, [r0, #4]
 800c880:	900b      	str	r0, [sp, #44]	; 0x2c
 800c882:	f8d0 a000 	ldr.w	sl, [r0]
 800c886:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c888:	9008      	str	r0, [sp, #32]
 800c88a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800c88e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800c890:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800c894:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c898:	695b      	ldr	r3, [r3, #20]
 800c89a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c89c:	445b      	add	r3, fp
 800c89e:	eef0 6a42 	vmov.f32	s13, s4
 800c8a2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c8a6:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c8aa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c8ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c8b2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c8b6:	9307      	str	r3, [sp, #28]
 800c8b8:	ee17 7a90 	vmov	r7, s15
 800c8bc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c8c0:	eeb0 7a61 	vmov.f32	s14, s3
 800c8c4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c8c8:	ee16 3a90 	vmov	r3, s13
 800c8cc:	fb97 f7f4 	sdiv	r7, r7, r4
 800c8d0:	ee17 ca90 	vmov	ip, s15
 800c8d4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c8d8:	fb9c fcf4 	sdiv	ip, ip, r4
 800c8dc:	fb0c 3306 	mla	r3, ip, r6, r3
 800c8e0:	9302      	str	r3, [sp, #8]
 800c8e2:	ee17 3a10 	vmov	r3, s14
 800c8e6:	44b6      	add	lr, r6
 800c8e8:	fb04 e505 	mla	r5, r4, r5, lr
 800c8ec:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c8f0:	fb07 3706 	mla	r7, r7, r6, r3
 800c8f4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c8f8:	e9cd 4700 	strd	r4, r7, [sp]
 800c8fc:	2900      	cmp	r1, #0
 800c8fe:	bfcc      	ite	gt
 800c900:	46a1      	movgt	r9, r4
 800c902:	4691      	movle	r9, r2
 800c904:	eba9 0306 	sub.w	r3, r9, r6
 800c908:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c90c:	47a0      	blx	r4
 800c90e:	b00d      	add	sp, #52	; 0x34
 800c910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c914:	2500      	movs	r5, #0
 800c916:	462e      	mov	r6, r5
 800c918:	e799      	b.n	800c84e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800c91c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c920:	b0db      	sub	sp, #364	; 0x16c
 800c922:	461d      	mov	r5, r3
 800c924:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800c928:	930a      	str	r3, [sp, #40]	; 0x28
 800c92a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800c92e:	930b      	str	r3, [sp, #44]	; 0x2c
 800c930:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800c934:	9310      	str	r3, [sp, #64]	; 0x40
 800c936:	6803      	ldr	r3, [r0, #0]
 800c938:	910f      	str	r1, [sp, #60]	; 0x3c
 800c93a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800c93c:	9009      	str	r0, [sp, #36]	; 0x24
 800c93e:	4614      	mov	r4, r2
 800c940:	4629      	mov	r1, r5
 800c942:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c946:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800c94a:	47b8      	blx	r7
 800c94c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c94e:	6058      	str	r0, [r3, #4]
 800c950:	2800      	cmp	r0, #0
 800c952:	f000 83a1 	beq.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c956:	682b      	ldr	r3, [r5, #0]
 800c958:	9314      	str	r3, [sp, #80]	; 0x50
 800c95a:	686b      	ldr	r3, [r5, #4]
 800c95c:	9315      	str	r3, [sp, #84]	; 0x54
 800c95e:	4bc4      	ldr	r3, [pc, #784]	; (800cc70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c960:	ed94 7a02 	vldr	s14, [r4, #8]
 800c964:	7819      	ldrb	r1, [r3, #0]
 800c966:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c96a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c96e:	2900      	cmp	r1, #0
 800c970:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c974:	bf16      	itet	ne
 800c976:	4619      	movne	r1, r3
 800c978:	4611      	moveq	r1, r2
 800c97a:	4613      	movne	r3, r2
 800c97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c980:	9116      	str	r1, [sp, #88]	; 0x58
 800c982:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800c986:	f240 8387 	bls.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c98a:	ed94 7a07 	vldr	s14, [r4, #28]
 800c98e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c996:	f240 837f 	bls.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c99a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c99e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9a6:	f240 8377 	bls.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9aa:	6822      	ldr	r2, [r4, #0]
 800c9ac:	4bb1      	ldr	r3, [pc, #708]	; (800cc74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c9ae:	429a      	cmp	r2, r3
 800c9b0:	f2c0 8372 	blt.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9b4:	49b0      	ldr	r1, [pc, #704]	; (800cc78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c9b6:	6963      	ldr	r3, [r4, #20]
 800c9b8:	428a      	cmp	r2, r1
 800c9ba:	f300 836d 	bgt.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9be:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c9c2:	48ae      	ldr	r0, [pc, #696]	; (800cc7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c9c4:	33ff      	adds	r3, #255	; 0xff
 800c9c6:	4283      	cmp	r3, r0
 800c9c8:	f200 8366 	bhi.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c9ce:	4dac      	ldr	r5, [pc, #688]	; (800cc80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c9d0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c9d4:	33ff      	adds	r3, #255	; 0xff
 800c9d6:	42ab      	cmp	r3, r5
 800c9d8:	f200 835e 	bhi.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9dc:	6862      	ldr	r2, [r4, #4]
 800c9de:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800c9e2:	33ff      	adds	r3, #255	; 0xff
 800c9e4:	4283      	cmp	r3, r0
 800c9e6:	f200 8357 	bhi.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9ea:	69a1      	ldr	r1, [r4, #24]
 800c9ec:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800c9f0:	33ff      	adds	r3, #255	; 0xff
 800c9f2:	4283      	cmp	r3, r0
 800c9f4:	f200 8350 	bhi.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c9fa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800c9fe:	30ff      	adds	r0, #255	; 0xff
 800ca00:	42a8      	cmp	r0, r5
 800ca02:	f200 8349 	bhi.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca06:	428a      	cmp	r2, r1
 800ca08:	f280 8110 	bge.w	800cc2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ca0c:	429a      	cmp	r2, r3
 800ca0e:	f300 8119 	bgt.w	800cc44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ca12:	4299      	cmp	r1, r3
 800ca14:	f280 811d 	bge.w	800cc52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ca18:	2502      	movs	r5, #2
 800ca1a:	2701      	movs	r7, #1
 800ca1c:	46a9      	mov	r9, r5
 800ca1e:	46b8      	mov	r8, r7
 800ca20:	f04f 0a00 	mov.w	sl, #0
 800ca24:	4621      	mov	r1, r4
 800ca26:	a849      	add	r0, sp, #292	; 0x124
 800ca28:	f003 fcf8 	bl	801041c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ca2c:	4622      	mov	r2, r4
 800ca2e:	4653      	mov	r3, sl
 800ca30:	a949      	add	r1, sp, #292	; 0x124
 800ca32:	f8cd 9000 	str.w	r9, [sp]
 800ca36:	a819      	add	r0, sp, #100	; 0x64
 800ca38:	f003 fe20 	bl	801067c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca3c:	4622      	mov	r2, r4
 800ca3e:	4653      	mov	r3, sl
 800ca40:	a949      	add	r1, sp, #292	; 0x124
 800ca42:	f8cd 8000 	str.w	r8, [sp]
 800ca46:	a829      	add	r0, sp, #164	; 0xa4
 800ca48:	f003 fe18 	bl	801067c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca4c:	4643      	mov	r3, r8
 800ca4e:	4622      	mov	r2, r4
 800ca50:	a949      	add	r1, sp, #292	; 0x124
 800ca52:	f8cd 9000 	str.w	r9, [sp]
 800ca56:	a839      	add	r0, sp, #228	; 0xe4
 800ca58:	f003 fe10 	bl	801067c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca5c:	42af      	cmp	r7, r5
 800ca5e:	bfb5      	itete	lt
 800ca60:	2300      	movlt	r3, #0
 800ca62:	2301      	movge	r3, #1
 800ca64:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ca66:	930e      	strge	r3, [sp, #56]	; 0x38
 800ca68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ca6a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ca6e:	af12      	add	r7, sp, #72	; 0x48
 800ca70:	bfb9      	ittee	lt
 800ca72:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ca74:	ac19      	addlt	r4, sp, #100	; 0x64
 800ca76:	ad19      	addge	r5, sp, #100	; 0x64
 800ca78:	ac29      	addge	r4, sp, #164	; 0xa4
 800ca7a:	e887 0003 	stmia.w	r7, {r0, r1}
 800ca7e:	b928      	cbnz	r0, 800ca8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ca80:	4b80      	ldr	r3, [pc, #512]	; (800cc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ca82:	6818      	ldr	r0, [r3, #0]
 800ca84:	6803      	ldr	r3, [r0, #0]
 800ca86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca88:	4798      	blx	r3
 800ca8a:	6038      	str	r0, [r7, #0]
 800ca8c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ca8e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ca92:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ca96:	930c      	str	r3, [sp, #48]	; 0x30
 800ca98:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ca9a:	6963      	ldr	r3, [r4, #20]
 800ca9c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ca9e:	440b      	add	r3, r1
 800caa0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800caa4:	4408      	add	r0, r1
 800caa6:	b200      	sxth	r0, r0
 800caa8:	4283      	cmp	r3, r0
 800caaa:	900d      	str	r0, [sp, #52]	; 0x34
 800caac:	f280 80dd 	bge.w	800cc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800cab0:	428b      	cmp	r3, r1
 800cab2:	da08      	bge.n	800cac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cab4:	2a00      	cmp	r2, #0
 800cab6:	dd06      	ble.n	800cac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cab8:	1acb      	subs	r3, r1, r3
 800caba:	429a      	cmp	r2, r3
 800cabc:	f2c0 80e4 	blt.w	800cc88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800cac0:	2b00      	cmp	r3, #0
 800cac2:	f300 80e2 	bgt.w	800cc8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800cac6:	6967      	ldr	r7, [r4, #20]
 800cac8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800caca:	443b      	add	r3, r7
 800cacc:	461f      	mov	r7, r3
 800cace:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cad0:	1bdf      	subs	r7, r3, r7
 800cad2:	4297      	cmp	r7, r2
 800cad4:	bfa8      	it	ge
 800cad6:	4617      	movge	r7, r2
 800cad8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cadc:	2f00      	cmp	r7, #0
 800cade:	f340 8166 	ble.w	800cdae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800cae2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cae4:	6829      	ldr	r1, [r5, #0]
 800cae6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800caea:	f9bb 3000 	ldrsh.w	r3, [fp]
 800caee:	6820      	ldr	r0, [r4, #0]
 800caf0:	4411      	add	r1, r2
 800caf2:	4299      	cmp	r1, r3
 800caf4:	dd1a      	ble.n	800cb2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800caf6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cafa:	440b      	add	r3, r1
 800cafc:	4402      	add	r2, r0
 800cafe:	b21b      	sxth	r3, r3
 800cb00:	429a      	cmp	r2, r3
 800cb02:	dc13      	bgt.n	800cb2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cb04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cb08:	681b      	ldr	r3, [r3, #0]
 800cb0a:	9206      	str	r2, [sp, #24]
 800cb0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cb0e:	9205      	str	r2, [sp, #20]
 800cb10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb12:	9500      	str	r5, [sp, #0]
 800cb14:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cb18:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800cb1a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cb1c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cb20:	a912      	add	r1, sp, #72	; 0x48
 800cb22:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800cb26:	aa49      	add	r2, sp, #292	; 0x124
 800cb28:	4623      	mov	r3, r4
 800cb2a:	47c8      	blx	r9
 800cb2c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cb30:	441a      	add	r2, r3
 800cb32:	6963      	ldr	r3, [r4, #20]
 800cb34:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800cb38:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800cb3c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800cb40:	68a1      	ldr	r1, [r4, #8]
 800cb42:	ed94 6a08 	vldr	s12, [r4, #32]
 800cb46:	6022      	str	r2, [r4, #0]
 800cb48:	3301      	adds	r3, #1
 800cb4a:	6163      	str	r3, [r4, #20]
 800cb4c:	69a3      	ldr	r3, [r4, #24]
 800cb4e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb52:	3b01      	subs	r3, #1
 800cb54:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800cb58:	61a3      	str	r3, [r4, #24]
 800cb5a:	6923      	ldr	r3, [r4, #16]
 800cb5c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cb60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb64:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb68:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cb6c:	440b      	add	r3, r1
 800cb6e:	68e1      	ldr	r1, [r4, #12]
 800cb70:	6123      	str	r3, [r4, #16]
 800cb72:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb76:	428b      	cmp	r3, r1
 800cb78:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb7c:	db15      	blt.n	800cbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800cb7e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cb82:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb86:	3201      	adds	r2, #1
 800cb88:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb8c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cb90:	6022      	str	r2, [r4, #0]
 800cb92:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cb96:	1a5b      	subs	r3, r3, r1
 800cb98:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cb9c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cba0:	6123      	str	r3, [r4, #16]
 800cba2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cba6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cbaa:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cbae:	441a      	add	r2, r3
 800cbb0:	696b      	ldr	r3, [r5, #20]
 800cbb2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cbb6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cbba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cbbe:	68a9      	ldr	r1, [r5, #8]
 800cbc0:	ed95 6a08 	vldr	s12, [r5, #32]
 800cbc4:	602a      	str	r2, [r5, #0]
 800cbc6:	3301      	adds	r3, #1
 800cbc8:	616b      	str	r3, [r5, #20]
 800cbca:	69ab      	ldr	r3, [r5, #24]
 800cbcc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cbd0:	3b01      	subs	r3, #1
 800cbd2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cbd6:	61ab      	str	r3, [r5, #24]
 800cbd8:	692b      	ldr	r3, [r5, #16]
 800cbda:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cbde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbe2:	edd5 6a07 	vldr	s13, [r5, #28]
 800cbe6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cbea:	440b      	add	r3, r1
 800cbec:	68e9      	ldr	r1, [r5, #12]
 800cbee:	612b      	str	r3, [r5, #16]
 800cbf0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cbf4:	428b      	cmp	r3, r1
 800cbf6:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbfa:	db15      	blt.n	800cc28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cbfc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cc00:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cc04:	3201      	adds	r2, #1
 800cc06:	edc5 6a07 	vstr	s13, [r5, #28]
 800cc0a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cc0e:	602a      	str	r2, [r5, #0]
 800cc10:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cc14:	1a5b      	subs	r3, r3, r1
 800cc16:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cc1a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cc1e:	612b      	str	r3, [r5, #16]
 800cc20:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cc24:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cc28:	3f01      	subs	r7, #1
 800cc2a:	e757      	b.n	800cadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cc2c:	4299      	cmp	r1, r3
 800cc2e:	dc13      	bgt.n	800cc58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cc30:	429a      	cmp	r2, r3
 800cc32:	da14      	bge.n	800cc5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cc34:	2502      	movs	r5, #2
 800cc36:	2703      	movs	r7, #3
 800cc38:	46a9      	mov	r9, r5
 800cc3a:	f04f 0800 	mov.w	r8, #0
 800cc3e:	f04f 0a01 	mov.w	sl, #1
 800cc42:	e6ef      	b.n	800ca24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc44:	2501      	movs	r5, #1
 800cc46:	2700      	movs	r7, #0
 800cc48:	46a9      	mov	r9, r5
 800cc4a:	46b8      	mov	r8, r7
 800cc4c:	f04f 0a02 	mov.w	sl, #2
 800cc50:	e6e8      	b.n	800ca24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc52:	2501      	movs	r5, #1
 800cc54:	2702      	movs	r7, #2
 800cc56:	e6e1      	b.n	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cc58:	2500      	movs	r5, #0
 800cc5a:	2701      	movs	r7, #1
 800cc5c:	e7f4      	b.n	800cc48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cc5e:	2702      	movs	r7, #2
 800cc60:	2503      	movs	r5, #3
 800cc62:	f04f 0900 	mov.w	r9, #0
 800cc66:	46b8      	mov	r8, r7
 800cc68:	e7e9      	b.n	800cc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cc6a:	4613      	mov	r3, r2
 800cc6c:	e728      	b.n	800cac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cc6e:	bf00      	nop
 800cc70:	2000a804 	.word	0x2000a804
 800cc74:	fffd8f01 	.word	0xfffd8f01
 800cc78:	00027100 	.word	0x00027100
 800cc7c:	0004e1ff 	.word	0x0004e1ff
 800cc80:	0004e1fe 	.word	0x0004e1fe
 800cc84:	2000a80c 	.word	0x2000a80c
 800cc88:	4613      	mov	r3, r2
 800cc8a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800cc8c:	9111      	str	r1, [sp, #68]	; 0x44
 800cc8e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800cc92:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800cc96:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800cc98:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800cc9c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800cca0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800cca4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cca8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ccac:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ccb0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ccb4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ccb8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ccbc:	469e      	mov	lr, r3
 800ccbe:	469c      	mov	ip, r3
 800ccc0:	f04f 0900 	mov.w	r9, #0
 800ccc4:	f1bc 0f00 	cmp.w	ip, #0
 800ccc8:	d147      	bne.n	800cd5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ccca:	eb03 0c07 	add.w	ip, r3, r7
 800ccce:	1ad7      	subs	r7, r2, r3
 800ccd0:	f1b9 0f00 	cmp.w	r9, #0
 800ccd4:	d009      	beq.n	800ccea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ccd6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800ccda:	9029      	str	r0, [sp, #164]	; 0xa4
 800ccdc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cce0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cce4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cce8:	912d      	str	r1, [sp, #180]	; 0xb4
 800ccea:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ccec:	9111      	str	r1, [sp, #68]	; 0x44
 800ccee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ccf2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ccf6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ccfa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ccfe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cd02:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cd06:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cd0a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cd0e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cd12:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cd16:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cd1a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cd1e:	f04f 0800 	mov.w	r8, #0
 800cd22:	f1be 0f00 	cmp.w	lr, #0
 800cd26:	d031      	beq.n	800cd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cd28:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd2a:	4431      	add	r1, r6
 800cd2c:	4549      	cmp	r1, r9
 800cd2e:	4450      	add	r0, sl
 800cd30:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cd34:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cd38:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cd3c:	db08      	blt.n	800cd50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800cd3e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cd42:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cd46:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd4a:	3001      	adds	r0, #1
 800cd4c:	eba1 0109 	sub.w	r1, r1, r9
 800cd50:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd54:	f04f 0801 	mov.w	r8, #1
 800cd58:	e7e3      	b.n	800cd22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cd5a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd5c:	4431      	add	r1, r6
 800cd5e:	4541      	cmp	r1, r8
 800cd60:	4450      	add	r0, sl
 800cd62:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd66:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cd6a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cd6e:	db08      	blt.n	800cd82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cd70:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cd74:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cd78:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cd7c:	3001      	adds	r0, #1
 800cd7e:	eba1 0108 	sub.w	r1, r1, r8
 800cd82:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cd86:	f04f 0901 	mov.w	r9, #1
 800cd8a:	e79b      	b.n	800ccc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cd8c:	449c      	add	ip, r3
 800cd8e:	1aff      	subs	r7, r7, r3
 800cd90:	f1b8 0f00 	cmp.w	r8, #0
 800cd94:	d009      	beq.n	800cdaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cd96:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800cd9a:	9019      	str	r0, [sp, #100]	; 0x64
 800cd9c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cda0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cda4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cda8:	911d      	str	r1, [sp, #116]	; 0x74
 800cdaa:	1ad2      	subs	r2, r2, r3
 800cdac:	e68b      	b.n	800cac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cdae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cdb0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800cdb2:	2b00      	cmp	r3, #0
 800cdb4:	f000 80d1 	beq.w	800cf5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cdb8:	ad19      	add	r5, sp, #100	; 0x64
 800cdba:	ac39      	add	r4, sp, #228	; 0xe4
 800cdbc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cdbe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cdc2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cdc6:	930c      	str	r3, [sp, #48]	; 0x30
 800cdc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cdca:	6963      	ldr	r3, [r4, #20]
 800cdcc:	440b      	add	r3, r1
 800cdce:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cdd2:	4408      	add	r0, r1
 800cdd4:	b200      	sxth	r0, r0
 800cdd6:	4283      	cmp	r3, r0
 800cdd8:	900d      	str	r0, [sp, #52]	; 0x34
 800cdda:	f280 80c1 	bge.w	800cf60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cdde:	428b      	cmp	r3, r1
 800cde0:	da08      	bge.n	800cdf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cde2:	2a00      	cmp	r2, #0
 800cde4:	dd06      	ble.n	800cdf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cde6:	1acb      	subs	r3, r1, r3
 800cde8:	429a      	cmp	r2, r3
 800cdea:	f2c0 80bb 	blt.w	800cf64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cdee:	2b00      	cmp	r3, #0
 800cdf0:	f300 80b9 	bgt.w	800cf66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cdf4:	6967      	ldr	r7, [r4, #20]
 800cdf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cdf8:	443b      	add	r3, r7
 800cdfa:	461f      	mov	r7, r3
 800cdfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cdfe:	1bdf      	subs	r7, r3, r7
 800ce00:	4297      	cmp	r7, r2
 800ce02:	bfa8      	it	ge
 800ce04:	4617      	movge	r7, r2
 800ce06:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ce0a:	2f00      	cmp	r7, #0
 800ce0c:	f340 813c 	ble.w	800d088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ce10:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ce12:	6829      	ldr	r1, [r5, #0]
 800ce14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce18:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ce1c:	6820      	ldr	r0, [r4, #0]
 800ce1e:	4411      	add	r1, r2
 800ce20:	4299      	cmp	r1, r3
 800ce22:	dd1a      	ble.n	800ce5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce24:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ce28:	440b      	add	r3, r1
 800ce2a:	4402      	add	r2, r0
 800ce2c:	b21b      	sxth	r3, r3
 800ce2e:	429a      	cmp	r2, r3
 800ce30:	dc13      	bgt.n	800ce5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ce36:	681b      	ldr	r3, [r3, #0]
 800ce38:	9206      	str	r2, [sp, #24]
 800ce3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ce3c:	9205      	str	r2, [sp, #20]
 800ce3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ce40:	9500      	str	r5, [sp, #0]
 800ce42:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ce46:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ce48:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ce4a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce4e:	a912      	add	r1, sp, #72	; 0x48
 800ce50:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ce54:	aa49      	add	r2, sp, #292	; 0x124
 800ce56:	4623      	mov	r3, r4
 800ce58:	47c8      	blx	r9
 800ce5a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ce5e:	441a      	add	r2, r3
 800ce60:	6963      	ldr	r3, [r4, #20]
 800ce62:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ce66:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ce6a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ce6e:	68a1      	ldr	r1, [r4, #8]
 800ce70:	ed94 6a08 	vldr	s12, [r4, #32]
 800ce74:	6022      	str	r2, [r4, #0]
 800ce76:	3301      	adds	r3, #1
 800ce78:	6163      	str	r3, [r4, #20]
 800ce7a:	69a3      	ldr	r3, [r4, #24]
 800ce7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce80:	3b01      	subs	r3, #1
 800ce82:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ce86:	61a3      	str	r3, [r4, #24]
 800ce88:	6923      	ldr	r3, [r4, #16]
 800ce8a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ce8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce92:	edd4 6a07 	vldr	s13, [r4, #28]
 800ce96:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce9a:	440b      	add	r3, r1
 800ce9c:	68e1      	ldr	r1, [r4, #12]
 800ce9e:	6123      	str	r3, [r4, #16]
 800cea0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cea4:	428b      	cmp	r3, r1
 800cea6:	edc4 6a07 	vstr	s13, [r4, #28]
 800ceaa:	db15      	blt.n	800ced8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ceac:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ceb0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ceb4:	3201      	adds	r2, #1
 800ceb6:	edc4 6a07 	vstr	s13, [r4, #28]
 800ceba:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cebe:	6022      	str	r2, [r4, #0]
 800cec0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cec4:	1a5b      	subs	r3, r3, r1
 800cec6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ceca:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cece:	6123      	str	r3, [r4, #16]
 800ced0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ced4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ced8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cedc:	441a      	add	r2, r3
 800cede:	696b      	ldr	r3, [r5, #20]
 800cee0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cee4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cee8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ceec:	68a9      	ldr	r1, [r5, #8]
 800ceee:	ed95 6a08 	vldr	s12, [r5, #32]
 800cef2:	602a      	str	r2, [r5, #0]
 800cef4:	3301      	adds	r3, #1
 800cef6:	616b      	str	r3, [r5, #20]
 800cef8:	69ab      	ldr	r3, [r5, #24]
 800cefa:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cefe:	3b01      	subs	r3, #1
 800cf00:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cf04:	61ab      	str	r3, [r5, #24]
 800cf06:	692b      	ldr	r3, [r5, #16]
 800cf08:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf10:	edd5 6a07 	vldr	s13, [r5, #28]
 800cf14:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf18:	440b      	add	r3, r1
 800cf1a:	68e9      	ldr	r1, [r5, #12]
 800cf1c:	612b      	str	r3, [r5, #16]
 800cf1e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cf22:	428b      	cmp	r3, r1
 800cf24:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf28:	db15      	blt.n	800cf56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cf2a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cf2e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cf32:	3201      	adds	r2, #1
 800cf34:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf38:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cf3c:	602a      	str	r2, [r5, #0]
 800cf3e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf42:	1a5b      	subs	r3, r3, r1
 800cf44:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf48:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cf4c:	612b      	str	r3, [r5, #16]
 800cf4e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf52:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf56:	3f01      	subs	r7, #1
 800cf58:	e757      	b.n	800ce0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cf5a:	ad39      	add	r5, sp, #228	; 0xe4
 800cf5c:	ac19      	add	r4, sp, #100	; 0x64
 800cf5e:	e72d      	b.n	800cdbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cf60:	4613      	mov	r3, r2
 800cf62:	e744      	b.n	800cdee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cf64:	4613      	mov	r3, r2
 800cf66:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800cf6a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800cf6c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800cf70:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800cf74:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800cf78:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800cf7c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800cf80:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800cf84:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800cf88:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800cf8a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800cf8e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800cf92:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800cf96:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800cf9a:	960e      	str	r6, [sp, #56]	; 0x38
 800cf9c:	469e      	mov	lr, r3
 800cf9e:	461f      	mov	r7, r3
 800cfa0:	f04f 0900 	mov.w	r9, #0
 800cfa4:	2f00      	cmp	r7, #0
 800cfa6:	d146      	bne.n	800d036 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cfa8:	449c      	add	ip, r3
 800cfaa:	1ad7      	subs	r7, r2, r3
 800cfac:	f1b9 0f00 	cmp.w	r9, #0
 800cfb0:	d009      	beq.n	800cfc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cfb2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800cfb6:	9039      	str	r0, [sp, #228]	; 0xe4
 800cfb8:	913d      	str	r1, [sp, #244]	; 0xf4
 800cfba:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800cfbe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800cfc2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800cfc6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cfc8:	910e      	str	r1, [sp, #56]	; 0x38
 800cfca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cfce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cfd2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cfd6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cfda:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cfde:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cfe2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cfe6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cfea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cfee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cff2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cff6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cffa:	f04f 0800 	mov.w	r8, #0
 800cffe:	f1be 0f00 	cmp.w	lr, #0
 800d002:	d030      	beq.n	800d066 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800d004:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d006:	4431      	add	r1, r6
 800d008:	4549      	cmp	r1, r9
 800d00a:	4450      	add	r0, sl
 800d00c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800d010:	ee37 7a04 	vadd.f32	s14, s14, s8
 800d014:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800d018:	db08      	blt.n	800d02c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800d01a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800d01e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800d022:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d026:	3001      	adds	r0, #1
 800d028:	eba1 0109 	sub.w	r1, r1, r9
 800d02c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d030:	f04f 0801 	mov.w	r8, #1
 800d034:	e7e3      	b.n	800cffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800d036:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d038:	4431      	add	r1, r6
 800d03a:	4541      	cmp	r1, r8
 800d03c:	4450      	add	r0, sl
 800d03e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800d042:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d046:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d04a:	db08      	blt.n	800d05e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d04c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d050:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d054:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d058:	3001      	adds	r0, #1
 800d05a:	eba1 0108 	sub.w	r1, r1, r8
 800d05e:	3f01      	subs	r7, #1
 800d060:	f04f 0901 	mov.w	r9, #1
 800d064:	e79e      	b.n	800cfa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d066:	449c      	add	ip, r3
 800d068:	1aff      	subs	r7, r7, r3
 800d06a:	f1b8 0f00 	cmp.w	r8, #0
 800d06e:	d009      	beq.n	800d084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d070:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800d074:	9019      	str	r0, [sp, #100]	; 0x64
 800d076:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800d07a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800d07e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800d082:	911d      	str	r1, [sp, #116]	; 0x74
 800d084:	1ad2      	subs	r2, r2, r3
 800d086:	e6b5      	b.n	800cdf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d088:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d08a:	681b      	ldr	r3, [r3, #0]
 800d08c:	b923      	cbnz	r3, 800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d08e:	4b04      	ldr	r3, [pc, #16]	; (800d0a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d090:	6818      	ldr	r0, [r3, #0]
 800d092:	6803      	ldr	r3, [r0, #0]
 800d094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d096:	4798      	blx	r3
 800d098:	b05b      	add	sp, #364	; 0x16c
 800d09a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d09e:	bf00      	nop
 800d0a0:	2000a80c 	.word	0x2000a80c

0800d0a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d0a4:	b570      	push	{r4, r5, r6, lr}
 800d0a6:	4604      	mov	r4, r0
 800d0a8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800d0ac:	9804      	ldr	r0, [sp, #16]
 800d0ae:	6061      	str	r1, [r4, #4]
 800d0b0:	2500      	movs	r5, #0
 800d0b2:	8025      	strh	r5, [r4, #0]
 800d0b4:	7223      	strb	r3, [r4, #8]
 800d0b6:	7266      	strb	r6, [r4, #9]
 800d0b8:	60e0      	str	r0, [r4, #12]
 800d0ba:	8222      	strh	r2, [r4, #16]
 800d0bc:	8265      	strh	r5, [r4, #18]
 800d0be:	82a5      	strh	r5, [r4, #20]
 800d0c0:	82e5      	strh	r5, [r4, #22]
 800d0c2:	8325      	strh	r5, [r4, #24]
 800d0c4:	8365      	strh	r5, [r4, #26]
 800d0c6:	83a5      	strh	r5, [r4, #28]
 800d0c8:	77a5      	strb	r5, [r4, #30]
 800d0ca:	b32e      	cbz	r6, 800d118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d0cc:	6803      	ldr	r3, [r0, #0]
 800d0ce:	695b      	ldr	r3, [r3, #20]
 800d0d0:	4798      	blx	r3
 800d0d2:	4606      	mov	r6, r0
 800d0d4:	b300      	cbz	r0, 800d118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d0d6:	68e0      	ldr	r0, [r4, #12]
 800d0d8:	6803      	ldr	r3, [r0, #0]
 800d0da:	4631      	mov	r1, r6
 800d0dc:	68db      	ldr	r3, [r3, #12]
 800d0de:	4798      	blx	r3
 800d0e0:	4605      	mov	r5, r0
 800d0e2:	b1c8      	cbz	r0, 800d118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d0e4:	7b43      	ldrb	r3, [r0, #13]
 800d0e6:	7a82      	ldrb	r2, [r0, #10]
 800d0e8:	005b      	lsls	r3, r3, #1
 800d0ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d0ee:	4313      	orrs	r3, r2
 800d0f0:	83a3      	strh	r3, [r4, #28]
 800d0f2:	7a63      	ldrb	r3, [r4, #9]
 800d0f4:	2b04      	cmp	r3, #4
 800d0f6:	d10f      	bne.n	800d118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d0f8:	68e0      	ldr	r0, [r4, #12]
 800d0fa:	6803      	ldr	r3, [r0, #0]
 800d0fc:	462a      	mov	r2, r5
 800d0fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d100:	4631      	mov	r1, r6
 800d102:	4798      	blx	r3
 800d104:	7b6b      	ldrb	r3, [r5, #13]
 800d106:	005b      	lsls	r3, r3, #1
 800d108:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d10c:	7aab      	ldrb	r3, [r5, #10]
 800d10e:	4313      	orrs	r3, r2
 800d110:	4418      	add	r0, r3
 800d112:	8ba3      	ldrh	r3, [r4, #28]
 800d114:	4418      	add	r0, r3
 800d116:	83a0      	strh	r0, [r4, #28]
 800d118:	4620      	mov	r0, r4
 800d11a:	bd70      	pop	{r4, r5, r6, pc}

0800d11c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d120:	2400      	movs	r4, #0
 800d122:	b085      	sub	sp, #20
 800d124:	4681      	mov	r9, r0
 800d126:	4688      	mov	r8, r1
 800d128:	4692      	mov	sl, r2
 800d12a:	469b      	mov	fp, r3
 800d12c:	4627      	mov	r7, r4
 800d12e:	4625      	mov	r5, r4
 800d130:	4626      	mov	r6, r4
 800d132:	4554      	cmp	r4, sl
 800d134:	da2a      	bge.n	800d18c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d136:	2300      	movs	r3, #0
 800d138:	9303      	str	r3, [sp, #12]
 800d13a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d13e:	429d      	cmp	r5, r3
 800d140:	d004      	beq.n	800d14c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d142:	f242 030b 	movw	r3, #8203	; 0x200b
 800d146:	429d      	cmp	r5, r3
 800d148:	bf18      	it	ne
 800d14a:	462f      	movne	r7, r5
 800d14c:	ab03      	add	r3, sp, #12
 800d14e:	4642      	mov	r2, r8
 800d150:	4659      	mov	r1, fp
 800d152:	4648      	mov	r0, r9
 800d154:	f002 ff1e 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d158:	4605      	mov	r5, r0
 800d15a:	b1b8      	cbz	r0, 800d18c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d15c:	280a      	cmp	r0, #10
 800d15e:	d015      	beq.n	800d18c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d160:	9a03      	ldr	r2, [sp, #12]
 800d162:	b18a      	cbz	r2, 800d188 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d164:	7b50      	ldrb	r0, [r2, #13]
 800d166:	7a93      	ldrb	r3, [r2, #10]
 800d168:	8895      	ldrh	r5, [r2, #4]
 800d16a:	0040      	lsls	r0, r0, #1
 800d16c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d170:	4303      	orrs	r3, r0
 800d172:	9301      	str	r3, [sp, #4]
 800d174:	f8d8 3000 	ldr.w	r3, [r8]
 800d178:	4639      	mov	r1, r7
 800d17a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d17c:	4640      	mov	r0, r8
 800d17e:	4798      	blx	r3
 800d180:	9b01      	ldr	r3, [sp, #4]
 800d182:	4418      	add	r0, r3
 800d184:	4406      	add	r6, r0
 800d186:	b2b6      	uxth	r6, r6
 800d188:	3401      	adds	r4, #1
 800d18a:	e7d2      	b.n	800d132 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d18c:	4630      	mov	r0, r6
 800d18e:	b005      	add	sp, #20
 800d190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d194 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d194:	2a02      	cmp	r2, #2
 800d196:	b530      	push	{r4, r5, lr}
 800d198:	d011      	beq.n	800d1be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d19a:	2a03      	cmp	r2, #3
 800d19c:	d01c      	beq.n	800d1d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d19e:	2a01      	cmp	r2, #1
 800d1a0:	d10c      	bne.n	800d1bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1a2:	888b      	ldrh	r3, [r1, #4]
 800d1a4:	8801      	ldrh	r1, [r0, #0]
 800d1a6:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d1aa:	8844      	ldrh	r4, [r0, #2]
 800d1ac:	8004      	strh	r4, [r0, #0]
 800d1ae:	1a5b      	subs	r3, r3, r1
 800d1b0:	1a9b      	subs	r3, r3, r2
 800d1b2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d1b6:	8043      	strh	r3, [r0, #2]
 800d1b8:	8081      	strh	r1, [r0, #4]
 800d1ba:	80c2      	strh	r2, [r0, #6]
 800d1bc:	bd30      	pop	{r4, r5, pc}
 800d1be:	88cb      	ldrh	r3, [r1, #6]
 800d1c0:	8842      	ldrh	r2, [r0, #2]
 800d1c2:	1a9b      	subs	r3, r3, r2
 800d1c4:	88c2      	ldrh	r2, [r0, #6]
 800d1c6:	1a9b      	subs	r3, r3, r2
 800d1c8:	888a      	ldrh	r2, [r1, #4]
 800d1ca:	8801      	ldrh	r1, [r0, #0]
 800d1cc:	8043      	strh	r3, [r0, #2]
 800d1ce:	1a52      	subs	r2, r2, r1
 800d1d0:	8881      	ldrh	r1, [r0, #4]
 800d1d2:	1a52      	subs	r2, r2, r1
 800d1d4:	8002      	strh	r2, [r0, #0]
 800d1d6:	e7f1      	b.n	800d1bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1d8:	88cb      	ldrh	r3, [r1, #6]
 800d1da:	8841      	ldrh	r1, [r0, #2]
 800d1dc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d1e0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d1e4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d1e8:	8045      	strh	r5, [r0, #2]
 800d1ea:	1a5b      	subs	r3, r3, r1
 800d1ec:	1a9b      	subs	r3, r3, r2
 800d1ee:	8003      	strh	r3, [r0, #0]
 800d1f0:	8082      	strh	r2, [r0, #4]
 800d1f2:	80c4      	strh	r4, [r0, #6]
 800d1f4:	e7e2      	b.n	800d1bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d1f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d1f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1fa:	b09f      	sub	sp, #124	; 0x7c
 800d1fc:	9116      	str	r1, [sp, #88]	; 0x58
 800d1fe:	9317      	str	r3, [sp, #92]	; 0x5c
 800d200:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d202:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d204:	8809      	ldrh	r1, [r1, #0]
 800d206:	889b      	ldrh	r3, [r3, #4]
 800d208:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d20c:	9212      	str	r2, [sp, #72]	; 0x48
 800d20e:	440b      	add	r3, r1
 800d210:	b21b      	sxth	r3, r3
 800d212:	9310      	str	r3, [sp, #64]	; 0x40
 800d214:	f8d8 3000 	ldr.w	r3, [r8]
 800d218:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d21c:	7a59      	ldrb	r1, [r3, #9]
 800d21e:	7a1b      	ldrb	r3, [r3, #8]
 800d220:	9011      	str	r0, [sp, #68]	; 0x44
 800d222:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d226:	9114      	str	r1, [sp, #80]	; 0x50
 800d228:	9315      	str	r3, [sp, #84]	; 0x54
 800d22a:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800d22e:	2a00      	cmp	r2, #0
 800d230:	d067      	beq.n	800d302 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800d232:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d236:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d238:	2b04      	cmp	r3, #4
 800d23a:	bf14      	ite	ne
 800d23c:	2301      	movne	r3, #1
 800d23e:	2302      	moveq	r3, #2
 800d240:	4413      	add	r3, r2
 800d242:	f04f 0900 	mov.w	r9, #0
 800d246:	930f      	str	r3, [sp, #60]	; 0x3c
 800d248:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d24c:	464c      	mov	r4, r9
 800d24e:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d252:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d256:	4293      	cmp	r3, r2
 800d258:	f280 808c 	bge.w	800d374 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800d25c:	2300      	movs	r3, #0
 800d25e:	931c      	str	r3, [sp, #112]	; 0x70
 800d260:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d264:	429c      	cmp	r4, r3
 800d266:	d006      	beq.n	800d276 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800d268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d26a:	f242 020b 	movw	r2, #8203	; 0x200b
 800d26e:	4294      	cmp	r4, r2
 800d270:	bf18      	it	ne
 800d272:	4623      	movne	r3, r4
 800d274:	930d      	str	r3, [sp, #52]	; 0x34
 800d276:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d278:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d27a:	f8d8 2000 	ldr.w	r2, [r8]
 800d27e:	428b      	cmp	r3, r1
 800d280:	db41      	blt.n	800d306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800d282:	6813      	ldr	r3, [r2, #0]
 800d284:	4610      	mov	r0, r2
 800d286:	695b      	ldr	r3, [r3, #20]
 800d288:	4798      	blx	r3
 800d28a:	4604      	mov	r4, r0
 800d28c:	f8d8 0000 	ldr.w	r0, [r8]
 800d290:	6803      	ldr	r3, [r0, #0]
 800d292:	aa1d      	add	r2, sp, #116	; 0x74
 800d294:	689e      	ldr	r6, [r3, #8]
 800d296:	4621      	mov	r1, r4
 800d298:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d29c:	47b0      	blx	r6
 800d29e:	901c      	str	r0, [sp, #112]	; 0x70
 800d2a0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d2a4:	429c      	cmp	r4, r3
 800d2a6:	f000 80e9 	beq.w	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d2aa:	f242 030b 	movw	r3, #8203	; 0x200b
 800d2ae:	429c      	cmp	r4, r3
 800d2b0:	f000 80e4 	beq.w	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d2b4:	2c00      	cmp	r4, #0
 800d2b6:	f000 80f6 	beq.w	800d4a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d2ba:	2c0a      	cmp	r4, #10
 800d2bc:	d060      	beq.n	800d380 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800d2be:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d2c0:	b36a      	cbz	r2, 800d31e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800d2c2:	8894      	ldrh	r4, [r2, #4]
 800d2c4:	f1bb 0f00 	cmp.w	fp, #0
 800d2c8:	d03b      	beq.n	800d342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800d2ca:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d2ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d2d2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d2d6:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d2da:	f1bb 0f01 	cmp.w	fp, #1
 800d2de:	ea49 0903 	orr.w	r9, r9, r3
 800d2e2:	d134      	bne.n	800d34e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800d2e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d2e6:	eba5 0509 	sub.w	r5, r5, r9
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	d14f      	bne.n	800d38e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800d2ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d2f0:	eb09 0305 	add.w	r3, r9, r5
 800d2f4:	4413      	add	r3, r2
 800d2f6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d2f8:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d2fc:	4293      	cmp	r3, r2
 800d2fe:	da51      	bge.n	800d3a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d300:	e038      	b.n	800d374 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800d302:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d304:	e79d      	b.n	800d242 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800d306:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d30a:	9301      	str	r3, [sp, #4]
 800d30c:	ab1d      	add	r3, sp, #116	; 0x74
 800d30e:	9300      	str	r3, [sp, #0]
 800d310:	4659      	mov	r1, fp
 800d312:	ab1c      	add	r3, sp, #112	; 0x70
 800d314:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d316:	f002 fe95 	bl	8010044 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d31a:	4604      	mov	r4, r0
 800d31c:	e7c0      	b.n	800d2a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800d31e:	f8d8 0000 	ldr.w	r0, [r8]
 800d322:	6803      	ldr	r3, [r0, #0]
 800d324:	691b      	ldr	r3, [r3, #16]
 800d326:	4798      	blx	r3
 800d328:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d32c:	4298      	cmp	r0, r3
 800d32e:	f000 80a5 	beq.w	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d332:	f242 030b 	movw	r3, #8203	; 0x200b
 800d336:	4298      	cmp	r0, r3
 800d338:	f000 80a0 	beq.w	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d33c:	f1bb 0f00 	cmp.w	fp, #0
 800d340:	d100      	bne.n	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800d342:	444d      	add	r5, r9
 800d344:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d346:	2a00      	cmp	r2, #0
 800d348:	d1bf      	bne.n	800d2ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800d34a:	4691      	mov	r9, r2
 800d34c:	e096      	b.n	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d34e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d350:	2b00      	cmp	r3, #0
 800d352:	f000 80aa 	beq.w	800d4aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800d356:	f1bb 0f00 	cmp.w	fp, #0
 800d35a:	d118      	bne.n	800d38e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800d35c:	f8d8 0000 	ldr.w	r0, [r8]
 800d360:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d362:	6803      	ldr	r3, [r0, #0]
 800d364:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d366:	4798      	blx	r3
 800d368:	4405      	add	r5, r0
 800d36a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d36c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d36e:	1aeb      	subs	r3, r5, r3
 800d370:	4293      	cmp	r3, r2
 800d372:	dd17      	ble.n	800d3a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d374:	2c00      	cmp	r4, #0
 800d376:	f000 8096 	beq.w	800d4a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d37a:	2c0a      	cmp	r4, #10
 800d37c:	f040 8084 	bne.w	800d488 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800d380:	240a      	movs	r4, #10
 800d382:	fab4 f084 	clz	r0, r4
 800d386:	0940      	lsrs	r0, r0, #5
 800d388:	b01f      	add	sp, #124	; 0x7c
 800d38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d38e:	f8d8 0000 	ldr.w	r0, [r8]
 800d392:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d394:	6803      	ldr	r3, [r0, #0]
 800d396:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d398:	4798      	blx	r3
 800d39a:	f1bb 0f01 	cmp.w	fp, #1
 800d39e:	eba5 0500 	sub.w	r5, r5, r0
 800d3a2:	d0a4      	beq.n	800d2ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800d3a4:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d3a6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d3a8:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d3ac:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d3b0:	7b43      	ldrb	r3, [r0, #13]
 800d3b2:	015b      	lsls	r3, r3, #5
 800d3b4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3b8:	7983      	ldrb	r3, [r0, #6]
 800d3ba:	4429      	add	r1, r5
 800d3bc:	4313      	orrs	r3, r2
 800d3be:	440b      	add	r3, r1
 800d3c0:	42b3      	cmp	r3, r6
 800d3c2:	db5b      	blt.n	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d3c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3c6:	4299      	cmp	r1, r3
 800d3c8:	da58      	bge.n	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d3ca:	f8d8 0000 	ldr.w	r0, [r8]
 800d3ce:	6803      	ldr	r3, [r0, #0]
 800d3d0:	42ae      	cmp	r6, r5
 800d3d2:	bfc8      	it	gt
 800d3d4:	1b76      	subgt	r6, r6, r5
 800d3d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3d8:	bfcc      	ite	gt
 800d3da:	b2b6      	uxthgt	r6, r6
 800d3dc:	2600      	movle	r6, #0
 800d3de:	4798      	blx	r3
 800d3e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d3e2:	7b5a      	ldrb	r2, [r3, #13]
 800d3e4:	00d1      	lsls	r1, r2, #3
 800d3e6:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d3ea:	7a19      	ldrb	r1, [r3, #8]
 800d3ec:	4339      	orrs	r1, r7
 800d3ee:	0657      	lsls	r7, r2, #25
 800d3f0:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d3f2:	bf44      	itt	mi
 800d3f4:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d3f8:	b209      	sxthmi	r1, r1
 800d3fa:	19c7      	adds	r7, r0, r7
 800d3fc:	1a7f      	subs	r7, r7, r1
 800d3fe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d400:	b2bf      	uxth	r7, r7
 800d402:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d406:	fa0f fa87 	sxth.w	sl, r7
 800d40a:	4551      	cmp	r1, sl
 800d40c:	dd3a      	ble.n	800d484 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d40e:	0112      	lsls	r2, r2, #4
 800d410:	79d8      	ldrb	r0, [r3, #7]
 800d412:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d416:	4302      	orrs	r2, r0
 800d418:	4492      	add	sl, r2
 800d41a:	4551      	cmp	r1, sl
 800d41c:	dc2e      	bgt.n	800d47c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800d41e:	1bcf      	subs	r7, r1, r7
 800d420:	b2bf      	uxth	r7, r7
 800d422:	468a      	mov	sl, r1
 800d424:	9319      	str	r3, [sp, #100]	; 0x64
 800d426:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d428:	f8d8 0000 	ldr.w	r0, [r8]
 800d42c:	681a      	ldr	r2, [r3, #0]
 800d42e:	6801      	ldr	r1, [r0, #0]
 800d430:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800d432:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d434:	9313      	str	r3, [sp, #76]	; 0x4c
 800d436:	9218      	str	r2, [sp, #96]	; 0x60
 800d438:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d43a:	4788      	blx	r1
 800d43c:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d440:	910b      	str	r1, [sp, #44]	; 0x2c
 800d442:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d446:	910a      	str	r1, [sp, #40]	; 0x28
 800d448:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d44c:	9109      	str	r1, [sp, #36]	; 0x24
 800d44e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d450:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d454:	9305      	str	r3, [sp, #20]
 800d456:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d458:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d45a:	9206      	str	r2, [sp, #24]
 800d45c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d460:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d464:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d468:	442e      	add	r6, r5
 800d46a:	b236      	sxth	r6, r6
 800d46c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d46e:	9600      	str	r6, [sp, #0]
 800d470:	681a      	ldr	r2, [r3, #0]
 800d472:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d474:	685b      	ldr	r3, [r3, #4]
 800d476:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d478:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d47a:	47b0      	blx	r6
 800d47c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d47e:	3301      	adds	r3, #1
 800d480:	930e      	str	r3, [sp, #56]	; 0x38
 800d482:	e6e6      	b.n	800d252 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800d484:	2700      	movs	r7, #0
 800d486:	e7cd      	b.n	800d424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800d488:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d48a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d48c:	3501      	adds	r5, #1
 800d48e:	429d      	cmp	r5, r3
 800d490:	f6bf af77 	bge.w	800d382 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d494:	4659      	mov	r1, fp
 800d496:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d498:	f7f6 fa9c 	bl	80039d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d49c:	4604      	mov	r4, r0
 800d49e:	b110      	cbz	r0, 800d4a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800d4a0:	280a      	cmp	r0, #10
 800d4a2:	d1f2      	bne.n	800d48a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800d4a4:	e76c      	b.n	800d380 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800d4a6:	2400      	movs	r4, #0
 800d4a8:	e76b      	b.n	800d382 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d4aa:	f1bb 0f00 	cmp.w	fp, #0
 800d4ae:	f43f af5c 	beq.w	800d36a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800d4b2:	e777      	b.n	800d3a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800d4b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d4b4:	b530      	push	{r4, r5, lr}
 800d4b6:	8a44      	ldrh	r4, [r0, #18]
 800d4b8:	8ac5      	ldrh	r5, [r0, #22]
 800d4ba:	82c3      	strh	r3, [r0, #22]
 800d4bc:	442c      	add	r4, r5
 800d4be:	1ae4      	subs	r4, r4, r3
 800d4c0:	8244      	strh	r4, [r0, #18]
 800d4c2:	8b03      	ldrh	r3, [r0, #24]
 800d4c4:	8a84      	ldrh	r4, [r0, #20]
 800d4c6:	4422      	add	r2, r4
 800d4c8:	440c      	add	r4, r1
 800d4ca:	1a59      	subs	r1, r3, r1
 800d4cc:	8342      	strh	r2, [r0, #26]
 800d4ce:	8284      	strh	r4, [r0, #20]
 800d4d0:	8301      	strh	r1, [r0, #24]
 800d4d2:	bd30      	pop	{r4, r5, pc}

0800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4d8:	7a43      	ldrb	r3, [r0, #9]
 800d4da:	1eda      	subs	r2, r3, #3
 800d4dc:	b087      	sub	sp, #28
 800d4de:	4604      	mov	r4, r0
 800d4e0:	b2d2      	uxtb	r2, r2
 800d4e2:	460f      	mov	r7, r1
 800d4e4:	2900      	cmp	r1, #0
 800d4e6:	d036      	beq.n	800d556 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d4e8:	2a01      	cmp	r2, #1
 800d4ea:	d932      	bls.n	800d552 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d4ec:	1e58      	subs	r0, r3, #1
 800d4ee:	f1d0 0b00 	rsbs	fp, r0, #0
 800d4f2:	eb4b 0b00 	adc.w	fp, fp, r0
 800d4f6:	1e99      	subs	r1, r3, #2
 800d4f8:	424b      	negs	r3, r1
 800d4fa:	414b      	adcs	r3, r1
 800d4fc:	9303      	str	r3, [sp, #12]
 800d4fe:	2300      	movs	r3, #0
 800d500:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d504:	2500      	movs	r5, #0
 800d506:	8265      	strh	r5, [r4, #18]
 800d508:	82a5      	strh	r5, [r4, #20]
 800d50a:	46a9      	mov	r9, r5
 800d50c:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d510:	2300      	movs	r3, #0
 800d512:	9305      	str	r3, [sp, #20]
 800d514:	8823      	ldrh	r3, [r4, #0]
 800d516:	2b20      	cmp	r3, #32
 800d518:	d02b      	beq.n	800d572 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d51a:	eba3 020a 	sub.w	r2, r3, sl
 800d51e:	4256      	negs	r6, r2
 800d520:	4156      	adcs	r6, r2
 800d522:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d526:	4293      	cmp	r3, r2
 800d528:	d004      	beq.n	800d534 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d52a:	4553      	cmp	r3, sl
 800d52c:	bf16      	itet	ne
 800d52e:	4699      	movne	r9, r3
 800d530:	2601      	moveq	r6, #1
 800d532:	2600      	movne	r6, #0
 800d534:	ab05      	add	r3, sp, #20
 800d536:	68e2      	ldr	r2, [r4, #12]
 800d538:	7a21      	ldrb	r1, [r4, #8]
 800d53a:	6860      	ldr	r0, [r4, #4]
 800d53c:	f002 fd2a 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d540:	8020      	strh	r0, [r4, #0]
 800d542:	b9c8      	cbnz	r0, 800d578 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d544:	8b22      	ldrh	r2, [r4, #24]
 800d546:	2300      	movs	r3, #0
 800d548:	4611      	mov	r1, r2
 800d54a:	4620      	mov	r0, r4
 800d54c:	f7ff ffb2 	bl	800d4b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d550:	e066      	b.n	800d620 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d552:	468b      	mov	fp, r1
 800d554:	e7cf      	b.n	800d4f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d556:	3b01      	subs	r3, #1
 800d558:	2a01      	cmp	r2, #1
 800d55a:	bf8c      	ite	hi
 800d55c:	2200      	movhi	r2, #0
 800d55e:	2201      	movls	r2, #1
 800d560:	2b01      	cmp	r3, #1
 800d562:	bf8c      	ite	hi
 800d564:	2300      	movhi	r3, #0
 800d566:	2301      	movls	r3, #1
 800d568:	9202      	str	r2, [sp, #8]
 800d56a:	9301      	str	r3, [sp, #4]
 800d56c:	9103      	str	r1, [sp, #12]
 800d56e:	468b      	mov	fp, r1
 800d570:	e7c8      	b.n	800d504 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d572:	4699      	mov	r9, r3
 800d574:	2601      	movs	r6, #1
 800d576:	e7dd      	b.n	800d534 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d578:	8ae3      	ldrh	r3, [r4, #22]
 800d57a:	280a      	cmp	r0, #10
 800d57c:	f103 0301 	add.w	r3, r3, #1
 800d580:	82e3      	strh	r3, [r4, #22]
 800d582:	d0df      	beq.n	800d544 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d584:	9a05      	ldr	r2, [sp, #20]
 800d586:	bb42      	cbnz	r2, 800d5da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d588:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d58c:	4298      	cmp	r0, r3
 800d58e:	d001      	beq.n	800d594 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d590:	4550      	cmp	r0, sl
 800d592:	d1bd      	bne.n	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d594:	8823      	ldrh	r3, [r4, #0]
 800d596:	8b21      	ldrh	r1, [r4, #24]
 800d598:	2b20      	cmp	r3, #32
 800d59a:	d001      	beq.n	800d5a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d59c:	4553      	cmp	r3, sl
 800d59e:	d131      	bne.n	800d604 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d5a0:	2e00      	cmp	r6, #0
 800d5a2:	bf0a      	itet	eq
 800d5a4:	460d      	moveq	r5, r1
 800d5a6:	4630      	movne	r0, r6
 800d5a8:	2001      	moveq	r0, #1
 800d5aa:	440a      	add	r2, r1
 800d5ac:	8aa3      	ldrh	r3, [r4, #20]
 800d5ae:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d5b2:	b292      	uxth	r2, r2
 800d5b4:	8322      	strh	r2, [r4, #24]
 800d5b6:	4413      	add	r3, r2
 800d5b8:	2f00      	cmp	r7, #0
 800d5ba:	d03a      	beq.n	800d632 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d5bc:	f1bb 0f00 	cmp.w	fp, #0
 800d5c0:	d102      	bne.n	800d5c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d5c2:	9903      	ldr	r1, [sp, #12]
 800d5c4:	b301      	cbz	r1, 800d608 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d5c6:	b1f8      	cbz	r0, 800d608 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d5c8:	8ba1      	ldrh	r1, [r4, #28]
 800d5ca:	4419      	add	r1, r3
 800d5cc:	458c      	cmp	ip, r1
 800d5ce:	da2a      	bge.n	800d626 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d5d0:	8a61      	ldrh	r1, [r4, #18]
 800d5d2:	b341      	cbz	r1, 800d626 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d5d4:	4563      	cmp	r3, ip
 800d5d6:	dd9b      	ble.n	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5d8:	e01c      	b.n	800d614 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d5da:	8893      	ldrh	r3, [r2, #4]
 800d5dc:	8023      	strh	r3, [r4, #0]
 800d5de:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d5e2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d5e6:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d5ea:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d5ee:	ea48 0800 	orr.w	r8, r8, r0
 800d5f2:	68e0      	ldr	r0, [r4, #12]
 800d5f4:	6803      	ldr	r3, [r0, #0]
 800d5f6:	4649      	mov	r1, r9
 800d5f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d5fa:	4798      	blx	r3
 800d5fc:	eb08 0200 	add.w	r2, r8, r0
 800d600:	b292      	uxth	r2, r2
 800d602:	e7c7      	b.n	800d594 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d604:	2000      	movs	r0, #0
 800d606:	e7d0      	b.n	800d5aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d608:	4563      	cmp	r3, ip
 800d60a:	dd81      	ble.n	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d60c:	8a63      	ldrh	r3, [r4, #18]
 800d60e:	2b00      	cmp	r3, #0
 800d610:	f43f af7e 	beq.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d614:	2301      	movs	r3, #1
 800d616:	77a3      	strb	r3, [r4, #30]
 800d618:	8ba2      	ldrh	r2, [r4, #28]
 800d61a:	8b63      	ldrh	r3, [r4, #26]
 800d61c:	4413      	add	r3, r2
 800d61e:	8363      	strh	r3, [r4, #26]
 800d620:	b007      	add	sp, #28
 800d622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d626:	2300      	movs	r3, #0
 800d628:	4611      	mov	r1, r2
 800d62a:	4620      	mov	r0, r4
 800d62c:	f7ff ff42 	bl	800d4b4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d630:	e76e      	b.n	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d632:	4563      	cmp	r3, ip
 800d634:	dd14      	ble.n	800d660 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d636:	9b02      	ldr	r3, [sp, #8]
 800d638:	b113      	cbz	r3, 800d640 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d63a:	2301      	movs	r3, #1
 800d63c:	460a      	mov	r2, r1
 800d63e:	e783      	b.n	800d548 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d640:	9b01      	ldr	r3, [sp, #4]
 800d642:	2b00      	cmp	r3, #0
 800d644:	f43f af64 	beq.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d648:	2800      	cmp	r0, #0
 800d64a:	f47f af61 	bne.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d64e:	b116      	cbz	r6, 800d656 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d650:	2301      	movs	r3, #1
 800d652:	462a      	mov	r2, r5
 800d654:	e779      	b.n	800d54a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d656:	8a63      	ldrh	r3, [r4, #18]
 800d658:	2b00      	cmp	r3, #0
 800d65a:	f43f af59 	beq.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d65e:	e7df      	b.n	800d620 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d660:	2800      	cmp	r0, #0
 800d662:	f47f af55 	bne.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d666:	2e00      	cmp	r6, #0
 800d668:	f43f af52 	beq.w	800d510 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d66c:	2301      	movs	r3, #1
 800d66e:	462a      	mov	r2, r5
 800d670:	e7db      	b.n	800d62a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d672 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d672:	b530      	push	{r4, r5, lr}
 800d674:	4605      	mov	r5, r0
 800d676:	b08b      	sub	sp, #44	; 0x2c
 800d678:	b191      	cbz	r1, 800d6a0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d67a:	e9cd 3100 	strd	r3, r1, [sp]
 800d67e:	4613      	mov	r3, r2
 800d680:	4601      	mov	r1, r0
 800d682:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d686:	a802      	add	r0, sp, #8
 800d688:	f7ff fd0c 	bl	800d0a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d68c:	2401      	movs	r4, #1
 800d68e:	2100      	movs	r1, #0
 800d690:	a802      	add	r0, sp, #8
 800d692:	f7ff ff1f 	bl	800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d696:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d69a:	b163      	cbz	r3, 800d6b6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d69c:	3401      	adds	r4, #1
 800d69e:	e7f6      	b.n	800d68e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d6a0:	f002 fd72 	bl	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6a4:	2401      	movs	r4, #1
 800d6a6:	280a      	cmp	r0, #10
 800d6a8:	4628      	mov	r0, r5
 800d6aa:	bf08      	it	eq
 800d6ac:	3401      	addeq	r4, #1
 800d6ae:	f002 fd6b 	bl	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6b2:	2800      	cmp	r0, #0
 800d6b4:	d1f7      	bne.n	800d6a6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d6b6:	b2a0      	uxth	r0, r4
 800d6b8:	b00b      	add	sp, #44	; 0x2c
 800d6ba:	bd30      	pop	{r4, r5, pc}

0800d6bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6c0:	b0e5      	sub	sp, #404	; 0x194
 800d6c2:	4689      	mov	r9, r1
 800d6c4:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800d6c8:	900a      	str	r0, [sp, #40]	; 0x28
 800d6ca:	461c      	mov	r4, r3
 800d6cc:	f1ba 0f00 	cmp.w	sl, #0
 800d6d0:	f000 80b4 	beq.w	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d6d4:	681b      	ldr	r3, [r3, #0]
 800d6d6:	2b00      	cmp	r3, #0
 800d6d8:	f000 80b0 	beq.w	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d6dc:	7ba3      	ldrb	r3, [r4, #14]
 800d6de:	2b00      	cmp	r3, #0
 800d6e0:	f000 80ac 	beq.w	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d6e4:	6810      	ldr	r0, [r2, #0]
 800d6e6:	6851      	ldr	r1, [r2, #4]
 800d6e8:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d6ec:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800d6f0:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800d6f4:	4643      	mov	r3, r8
 800d6f6:	c303      	stmia	r3!, {r0, r1}
 800d6f8:	2500      	movs	r5, #0
 800d6fa:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d6fe:	79a2      	ldrb	r2, [r4, #6]
 800d700:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d704:	a90f      	add	r1, sp, #60	; 0x3c
 800d706:	4640      	mov	r0, r8
 800d708:	950f      	str	r5, [sp, #60]	; 0x3c
 800d70a:	f7ff fd43 	bl	800d194 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d70e:	a90f      	add	r1, sp, #60	; 0x3c
 800d710:	4608      	mov	r0, r1
 800d712:	79a2      	ldrb	r2, [r4, #6]
 800d714:	af19      	add	r7, sp, #100	; 0x64
 800d716:	f7ff fd3d 	bl	800d194 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d71a:	4638      	mov	r0, r7
 800d71c:	f002 f8bf 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800d720:	6820      	ldr	r0, [r4, #0]
 800d722:	6803      	ldr	r3, [r0, #0]
 800d724:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d726:	4798      	blx	r3
 800d728:	4606      	mov	r6, r0
 800d72a:	6820      	ldr	r0, [r4, #0]
 800d72c:	6803      	ldr	r3, [r0, #0]
 800d72e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d730:	4798      	blx	r3
 800d732:	4633      	mov	r3, r6
 800d734:	9000      	str	r0, [sp, #0]
 800d736:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d738:	4651      	mov	r1, sl
 800d73a:	4638      	mov	r0, r7
 800d73c:	f002 f91a 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d740:	6820      	ldr	r0, [r4, #0]
 800d742:	7923      	ldrb	r3, [r4, #4]
 800d744:	9308      	str	r3, [sp, #32]
 800d746:	6803      	ldr	r3, [r0, #0]
 800d748:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d74a:	4798      	blx	r3
 800d74c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d750:	181e      	adds	r6, r3, r0
 800d752:	42ae      	cmp	r6, r5
 800d754:	dd06      	ble.n	800d764 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800d756:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800d75a:	4282      	cmp	r2, r0
 800d75c:	bfa4      	itt	ge
 800d75e:	189d      	addge	r5, r3, r2
 800d760:	fb95 f5f6 	sdivge	r5, r5, r6
 800d764:	a832      	add	r0, sp, #200	; 0xc8
 800d766:	f002 f89a 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800d76a:	7c23      	ldrb	r3, [r4, #16]
 800d76c:	b17b      	cbz	r3, 800d78e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800d76e:	6820      	ldr	r0, [r4, #0]
 800d770:	6803      	ldr	r3, [r0, #0]
 800d772:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d774:	4798      	blx	r3
 800d776:	4683      	mov	fp, r0
 800d778:	6820      	ldr	r0, [r4, #0]
 800d77a:	6803      	ldr	r3, [r0, #0]
 800d77c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d77e:	4798      	blx	r3
 800d780:	465b      	mov	r3, fp
 800d782:	9000      	str	r0, [sp, #0]
 800d784:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d786:	4651      	mov	r1, sl
 800d788:	a832      	add	r0, sp, #200	; 0xc8
 800d78a:	f002 f8f3 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d78e:	7be1      	ldrb	r1, [r4, #15]
 800d790:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d794:	7963      	ldrb	r3, [r4, #5]
 800d796:	1a52      	subs	r2, r2, r1
 800d798:	7c21      	ldrb	r1, [r4, #16]
 800d79a:	9101      	str	r1, [sp, #4]
 800d79c:	6821      	ldr	r1, [r4, #0]
 800d79e:	9100      	str	r1, [sp, #0]
 800d7a0:	b292      	uxth	r2, r2
 800d7a2:	a932      	add	r1, sp, #200	; 0xc8
 800d7a4:	a811      	add	r0, sp, #68	; 0x44
 800d7a6:	f7ff fc7d 	bl	800d0a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d7aa:	7c23      	ldrb	r3, [r4, #16]
 800d7ac:	b9bb      	cbnz	r3, 800d7de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800d7ae:	fa1f fa86 	uxth.w	sl, r6
 800d7b2:	2d00      	cmp	r5, #0
 800d7b4:	dd45      	ble.n	800d842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d7b6:	4638      	mov	r0, r7
 800d7b8:	f002 fce6 	bl	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d7bc:	2800      	cmp	r0, #0
 800d7be:	d03d      	beq.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d7c0:	280a      	cmp	r0, #10
 800d7c2:	d1f6      	bne.n	800d7b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d7c4:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d7c8:	4453      	add	r3, sl
 800d7ca:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d7ce:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d7d2:	eba3 030a 	sub.w	r3, r3, sl
 800d7d6:	3d01      	subs	r5, #1
 800d7d8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d7dc:	e7e9      	b.n	800d7b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d7de:	0073      	lsls	r3, r6, #1
 800d7e0:	9309      	str	r3, [sp, #36]	; 0x24
 800d7e2:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800d7e6:	fa1f fa86 	uxth.w	sl, r6
 800d7ea:	2d00      	cmp	r5, #0
 800d7ec:	dd29      	ble.n	800d842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d7ee:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d7f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7f4:	428b      	cmp	r3, r1
 800d7f6:	bfd4      	ite	le
 800d7f8:	2100      	movle	r1, #0
 800d7fa:	2101      	movgt	r1, #1
 800d7fc:	a811      	add	r0, sp, #68	; 0x44
 800d7fe:	f7ff fe69 	bl	800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d802:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800d806:	3b01      	subs	r3, #1
 800d808:	b29b      	uxth	r3, r3
 800d80a:	455b      	cmp	r3, fp
 800d80c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d80e:	d005      	beq.n	800d81c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800d810:	7961      	ldrb	r1, [r4, #5]
 800d812:	4638      	mov	r0, r7
 800d814:	f7f6 f8de 	bl	80039d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d818:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d81a:	e7f4      	b.n	800d806 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800d81c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d820:	4453      	add	r3, sl
 800d822:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d826:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d82a:	eba3 030a 	sub.w	r3, r3, sl
 800d82e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d832:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d836:	3d01      	subs	r5, #1
 800d838:	2b00      	cmp	r3, #0
 800d83a:	d1d6      	bne.n	800d7ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800d83c:	b065      	add	sp, #404	; 0x194
 800d83e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d842:	0075      	lsls	r5, r6, #1
 800d844:	f04f 0a00 	mov.w	sl, #0
 800d848:	7c23      	ldrb	r3, [r4, #16]
 800d84a:	2b00      	cmp	r3, #0
 800d84c:	d066      	beq.n	800d91c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800d84e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d852:	428d      	cmp	r5, r1
 800d854:	bfd4      	ite	le
 800d856:	2100      	movle	r1, #0
 800d858:	2101      	movgt	r1, #1
 800d85a:	a811      	add	r0, sp, #68	; 0x44
 800d85c:	f7ff fe3a 	bl	800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d860:	9b08      	ldr	r3, [sp, #32]
 800d862:	2b00      	cmp	r3, #0
 800d864:	d055      	beq.n	800d912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d866:	f894 b010 	ldrb.w	fp, [r4, #16]
 800d86a:	2264      	movs	r2, #100	; 0x64
 800d86c:	4639      	mov	r1, r7
 800d86e:	a84b      	add	r0, sp, #300	; 0x12c
 800d870:	f00f faa2 	bl	801cdb8 <memcpy>
 800d874:	f1bb 0f00 	cmp.w	fp, #0
 800d878:	d058      	beq.n	800d92c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800d87a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800d87e:	7922      	ldrb	r2, [r4, #4]
 800d880:	2a01      	cmp	r2, #1
 800d882:	d13c      	bne.n	800d8fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800d884:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800d888:	1ac0      	subs	r0, r0, r3
 800d88a:	2302      	movs	r3, #2
 800d88c:	fb90 f0f3 	sdiv	r0, r0, r3
 800d890:	b200      	sxth	r0, r0
 800d892:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d896:	4418      	add	r0, r3
 800d898:	7c23      	ldrb	r3, [r4, #16]
 800d89a:	b200      	sxth	r0, r0
 800d89c:	2b00      	cmp	r3, #0
 800d89e:	d03a      	beq.n	800d916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800d8a0:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800d8a4:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800d8a8:	9000      	str	r0, [sp, #0]
 800d8aa:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d8ae:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800d8b2:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d8b4:	e9cd a703 	strd	sl, r7, [sp, #12]
 800d8b8:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800d8bc:	464a      	mov	r2, r9
 800d8be:	2100      	movs	r1, #0
 800d8c0:	f7ff fc99 	bl	800d1f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d8c4:	2800      	cmp	r0, #0
 800d8c6:	d1b9      	bne.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d8c8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d8cc:	b2b2      	uxth	r2, r6
 800d8ce:	4611      	mov	r1, r2
 800d8d0:	4413      	add	r3, r2
 800d8d2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800d8d6:	1a52      	subs	r2, r2, r1
 800d8d8:	7c21      	ldrb	r1, [r4, #16]
 800d8da:	b21b      	sxth	r3, r3
 800d8dc:	b212      	sxth	r2, r2
 800d8de:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d8e2:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800d8e6:	b109      	cbz	r1, 800d8ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800d8e8:	42b2      	cmp	r2, r6
 800d8ea:	dba7      	blt.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d8ec:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800d8f0:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800d8f4:	440a      	add	r2, r1
 800d8f6:	b212      	sxth	r2, r2
 800d8f8:	4293      	cmp	r3, r2
 800d8fa:	dda5      	ble.n	800d848 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800d8fc:	e79e      	b.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d8fe:	2a02      	cmp	r2, #2
 800d900:	d105      	bne.n	800d90e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d902:	7be2      	ldrb	r2, [r4, #15]
 800d904:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800d908:	1a80      	subs	r0, r0, r2
 800d90a:	1ac0      	subs	r0, r0, r3
 800d90c:	e7c0      	b.n	800d890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800d90e:	2000      	movs	r0, #0
 800d910:	e7bf      	b.n	800d892 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d912:	7be0      	ldrb	r0, [r4, #15]
 800d914:	e7bd      	b.n	800d892 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d916:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d91a:	e7c3      	b.n	800d8a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800d91c:	9b08      	ldr	r3, [sp, #32]
 800d91e:	2b00      	cmp	r3, #0
 800d920:	d0f7      	beq.n	800d912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d922:	2264      	movs	r2, #100	; 0x64
 800d924:	4639      	mov	r1, r7
 800d926:	a84b      	add	r0, sp, #300	; 0x12c
 800d928:	f00f fa46 	bl	801cdb8 <memcpy>
 800d92c:	2300      	movs	r3, #0
 800d92e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d932:	6821      	ldr	r1, [r4, #0]
 800d934:	a84b      	add	r0, sp, #300	; 0x12c
 800d936:	f7ff fbf1 	bl	800d11c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d93a:	b203      	sxth	r3, r0
 800d93c:	e79f      	b.n	800d87e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800d93e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d93e:	b510      	push	{r4, lr}
 800d940:	2b02      	cmp	r3, #2
 800d942:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d946:	d00b      	beq.n	800d960 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d948:	2b03      	cmp	r3, #3
 800d94a:	d00e      	beq.n	800d96a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d94c:	2b01      	cmp	r3, #1
 800d94e:	d001      	beq.n	800d954 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d950:	1860      	adds	r0, r4, r1
 800d952:	bd10      	pop	{r4, pc}
 800d954:	8880      	ldrh	r0, [r0, #4]
 800d956:	4420      	add	r0, r4
 800d958:	b200      	sxth	r0, r0
 800d95a:	1a80      	subs	r0, r0, r2
 800d95c:	3801      	subs	r0, #1
 800d95e:	e7f8      	b.n	800d952 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d960:	8880      	ldrh	r0, [r0, #4]
 800d962:	4420      	add	r0, r4
 800d964:	b200      	sxth	r0, r0
 800d966:	1a40      	subs	r0, r0, r1
 800d968:	e7f8      	b.n	800d95c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d96a:	18a0      	adds	r0, r4, r2
 800d96c:	e7f1      	b.n	800d952 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d96e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d96e:	b510      	push	{r4, lr}
 800d970:	2b02      	cmp	r3, #2
 800d972:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d976:	d006      	beq.n	800d986 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d978:	2b03      	cmp	r3, #3
 800d97a:	d00a      	beq.n	800d992 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d97c:	2b01      	cmp	r3, #1
 800d97e:	bf14      	ite	ne
 800d980:	18a0      	addne	r0, r4, r2
 800d982:	1860      	addeq	r0, r4, r1
 800d984:	bd10      	pop	{r4, pc}
 800d986:	88c0      	ldrh	r0, [r0, #6]
 800d988:	4420      	add	r0, r4
 800d98a:	b200      	sxth	r0, r0
 800d98c:	1a80      	subs	r0, r0, r2
 800d98e:	3801      	subs	r0, #1
 800d990:	e7f8      	b.n	800d984 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d992:	88c0      	ldrh	r0, [r0, #6]
 800d994:	4420      	add	r0, r4
 800d996:	b200      	sxth	r0, r0
 800d998:	1a40      	subs	r0, r0, r1
 800d99a:	e7f8      	b.n	800d98e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800d99c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d99c:	4b01      	ldr	r3, [pc, #4]	; (800d9a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d99e:	2200      	movs	r2, #0
 800d9a0:	601a      	str	r2, [r3, #0]
 800d9a2:	4770      	bx	lr
 800d9a4:	2000a814 	.word	0x2000a814

0800d9a8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d9a8:	4603      	mov	r3, r0
 800d9aa:	b1c8      	cbz	r0, 800d9e0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800d9ac:	0c02      	lsrs	r2, r0, #16
 800d9ae:	0412      	lsls	r2, r2, #16
 800d9b0:	b9a2      	cbnz	r2, 800d9dc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800d9b2:	0403      	lsls	r3, r0, #16
 800d9b4:	2010      	movs	r0, #16
 800d9b6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800d9ba:	bf04      	itt	eq
 800d9bc:	021b      	lsleq	r3, r3, #8
 800d9be:	3008      	addeq	r0, #8
 800d9c0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800d9c4:	bf04      	itt	eq
 800d9c6:	011b      	lsleq	r3, r3, #4
 800d9c8:	3004      	addeq	r0, #4
 800d9ca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800d9ce:	bf04      	itt	eq
 800d9d0:	009b      	lsleq	r3, r3, #2
 800d9d2:	3002      	addeq	r0, #2
 800d9d4:	2b00      	cmp	r3, #0
 800d9d6:	db04      	blt.n	800d9e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800d9d8:	3001      	adds	r0, #1
 800d9da:	4770      	bx	lr
 800d9dc:	2000      	movs	r0, #0
 800d9de:	e7ea      	b.n	800d9b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800d9e0:	2020      	movs	r0, #32
 800d9e2:	4770      	bx	lr

0800d9e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800d9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9e8:	b087      	sub	sp, #28
 800d9ea:	4681      	mov	r9, r0
 800d9ec:	4698      	mov	r8, r3
 800d9ee:	4610      	mov	r0, r2
 800d9f0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800d9f4:	460d      	mov	r5, r1
 800d9f6:	b981      	cbnz	r1, 800da1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800d9f8:	b14b      	cbz	r3, 800da0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800d9fa:	460b      	mov	r3, r1
 800d9fc:	e9cd 4700 	strd	r4, r7, [sp]
 800da00:	464a      	mov	r2, r9
 800da02:	4641      	mov	r1, r8
 800da04:	f7ff ffee 	bl	800d9e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da08:	b007      	add	sp, #28
 800da0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da0e:	f04f 33ff 	mov.w	r3, #4294967295
 800da12:	603b      	str	r3, [r7, #0]
 800da14:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800da18:	e7f6      	b.n	800da08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800da1a:	fa32 fa01 	lsrs.w	sl, r2, r1
 800da1e:	d107      	bne.n	800da30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800da20:	fb09 f602 	mul.w	r6, r9, r2
 800da24:	fbb6 f0f4 	udiv	r0, r6, r4
 800da28:	fb04 6610 	mls	r6, r4, r0, r6
 800da2c:	603e      	str	r6, [r7, #0]
 800da2e:	e7eb      	b.n	800da08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800da30:	2601      	movs	r6, #1
 800da32:	408e      	lsls	r6, r1
 800da34:	3e01      	subs	r6, #1
 800da36:	4016      	ands	r6, r2
 800da38:	fa09 fb01 	lsl.w	fp, r9, r1
 800da3c:	4630      	mov	r0, r6
 800da3e:	fbbb f3f4 	udiv	r3, fp, r4
 800da42:	9302      	str	r3, [sp, #8]
 800da44:	fb0a f303 	mul.w	r3, sl, r3
 800da48:	9303      	str	r3, [sp, #12]
 800da4a:	f7ff ffad 	bl	800d9a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800da4e:	464a      	mov	r2, r9
 800da50:	460b      	mov	r3, r1
 800da52:	e9cd 4700 	strd	r4, r7, [sp]
 800da56:	4601      	mov	r1, r0
 800da58:	4630      	mov	r0, r6
 800da5a:	f7ff ffc3 	bl	800d9e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da5e:	9b02      	ldr	r3, [sp, #8]
 800da60:	fb04 bb13 	mls	fp, r4, r3, fp
 800da64:	4606      	mov	r6, r0
 800da66:	4658      	mov	r0, fp
 800da68:	eb05 0108 	add.w	r1, r5, r8
 800da6c:	f7ff ff9c 	bl	800d9a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800da70:	ab05      	add	r3, sp, #20
 800da72:	e9cd 4300 	strd	r4, r3, [sp]
 800da76:	465a      	mov	r2, fp
 800da78:	4603      	mov	r3, r0
 800da7a:	4650      	mov	r0, sl
 800da7c:	f7ff ffb2 	bl	800d9e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da80:	6839      	ldr	r1, [r7, #0]
 800da82:	9a05      	ldr	r2, [sp, #20]
 800da84:	9b03      	ldr	r3, [sp, #12]
 800da86:	4411      	add	r1, r2
 800da88:	fbb1 f2f4 	udiv	r2, r1, r4
 800da8c:	18d3      	adds	r3, r2, r3
 800da8e:	441e      	add	r6, r3
 800da90:	fb04 1412 	mls	r4, r4, r2, r1
 800da94:	4430      	add	r0, r6
 800da96:	603c      	str	r4, [r7, #0]
 800da98:	e7b6      	b.n	800da08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800da9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800da9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da9e:	b085      	sub	sp, #20
 800daa0:	f1b0 0900 	subs.w	r9, r0, #0
 800daa4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800daa6:	461d      	mov	r5, r3
 800daa8:	bfbf      	itttt	lt
 800daaa:	6823      	ldrlt	r3, [r4, #0]
 800daac:	425b      	neglt	r3, r3
 800daae:	f1c9 0900 	rsblt	r9, r9, #0
 800dab2:	6023      	strlt	r3, [r4, #0]
 800dab4:	bfb4      	ite	lt
 800dab6:	f04f 36ff 	movlt.w	r6, #4294967295
 800daba:	2601      	movge	r6, #1
 800dabc:	2a00      	cmp	r2, #0
 800dabe:	4617      	mov	r7, r2
 800dac0:	da04      	bge.n	800dacc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800dac2:	6823      	ldr	r3, [r4, #0]
 800dac4:	425b      	negs	r3, r3
 800dac6:	4257      	negs	r7, r2
 800dac8:	4276      	negs	r6, r6
 800daca:	6023      	str	r3, [r4, #0]
 800dacc:	2d00      	cmp	r5, #0
 800dace:	4638      	mov	r0, r7
 800dad0:	bfba      	itte	lt
 800dad2:	426d      	neglt	r5, r5
 800dad4:	f04f 38ff 	movlt.w	r8, #4294967295
 800dad8:	f04f 0801 	movge.w	r8, #1
 800dadc:	f7ff ff64 	bl	800d9a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800dae0:	ab03      	add	r3, sp, #12
 800dae2:	e9cd 5300 	strd	r5, r3, [sp]
 800dae6:	463a      	mov	r2, r7
 800dae8:	4603      	mov	r3, r0
 800daea:	4648      	mov	r0, r9
 800daec:	f7ff ff7a 	bl	800d9e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800daf0:	6823      	ldr	r3, [r4, #0]
 800daf2:	9a03      	ldr	r2, [sp, #12]
 800daf4:	4546      	cmp	r6, r8
 800daf6:	441a      	add	r2, r3
 800daf8:	fb92 f3f5 	sdiv	r3, r2, r5
 800dafc:	4418      	add	r0, r3
 800dafe:	bf18      	it	ne
 800db00:	4240      	negne	r0, r0
 800db02:	fb05 2313 	mls	r3, r5, r3, r2
 800db06:	1c72      	adds	r2, r6, #1
 800db08:	6023      	str	r3, [r4, #0]
 800db0a:	d105      	bne.n	800db18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800db0c:	2b00      	cmp	r3, #0
 800db0e:	f1c3 0200 	rsb	r2, r3, #0
 800db12:	db0b      	blt.n	800db2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800db14:	6022      	str	r2, [r4, #0]
 800db16:	e006      	b.n	800db26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db18:	2e01      	cmp	r6, #1
 800db1a:	d104      	bne.n	800db26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db1c:	2b00      	cmp	r3, #0
 800db1e:	da02      	bge.n	800db26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db20:	442b      	add	r3, r5
 800db22:	3801      	subs	r0, #1
 800db24:	6023      	str	r3, [r4, #0]
 800db26:	b005      	add	sp, #20
 800db28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db2c:	3801      	subs	r0, #1
 800db2e:	1b52      	subs	r2, r2, r5
 800db30:	e7f0      	b.n	800db14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800db34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800db34:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800db38:	4c1c      	ldr	r4, [pc, #112]	; (800dbac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800db3a:	6807      	ldr	r7, [r0, #0]
 800db3c:	69a3      	ldr	r3, [r4, #24]
 800db3e:	4605      	mov	r5, r0
 800db40:	b92b      	cbnz	r3, 800db4e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800db42:	6840      	ldr	r0, [r0, #4]
 800db44:	e9c5 7000 	strd	r7, r0, [r5]
 800db48:	b004      	add	sp, #16
 800db4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db4e:	68a2      	ldr	r2, [r4, #8]
 800db50:	6820      	ldr	r0, [r4, #0]
 800db52:	ae04      	add	r6, sp, #16
 800db54:	f04f 0802 	mov.w	r8, #2
 800db58:	fb93 f1f8 	sdiv	r1, r3, r8
 800db5c:	440a      	add	r2, r1
 800db5e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800db62:	69e1      	ldr	r1, [r4, #28]
 800db64:	9600      	str	r6, [sp, #0]
 800db66:	463a      	mov	r2, r7
 800db68:	f7ff ff97 	bl	800da9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db6c:	69a3      	ldr	r3, [r4, #24]
 800db6e:	686a      	ldr	r2, [r5, #4]
 800db70:	6a21      	ldr	r1, [r4, #32]
 800db72:	9600      	str	r6, [sp, #0]
 800db74:	4607      	mov	r7, r0
 800db76:	6860      	ldr	r0, [r4, #4]
 800db78:	f7ff ff8f 	bl	800da9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db7c:	6962      	ldr	r2, [r4, #20]
 800db7e:	69a3      	ldr	r3, [r4, #24]
 800db80:	fb93 f8f8 	sdiv	r8, r3, r8
 800db84:	4442      	add	r2, r8
 800db86:	9203      	str	r2, [sp, #12]
 800db88:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800db8a:	682a      	ldr	r2, [r5, #0]
 800db8c:	9600      	str	r6, [sp, #0]
 800db8e:	4407      	add	r7, r0
 800db90:	68e0      	ldr	r0, [r4, #12]
 800db92:	f7ff ff82 	bl	800da9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db96:	9600      	str	r6, [sp, #0]
 800db98:	4680      	mov	r8, r0
 800db9a:	69a3      	ldr	r3, [r4, #24]
 800db9c:	686a      	ldr	r2, [r5, #4]
 800db9e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800dba0:	6920      	ldr	r0, [r4, #16]
 800dba2:	f7ff ff7a 	bl	800da9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dba6:	4440      	add	r0, r8
 800dba8:	e7cc      	b.n	800db44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800dbaa:	bf00      	nop
 800dbac:	2000a818 	.word	0x2000a818

0800dbb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800dbb0:	4b07      	ldr	r3, [pc, #28]	; (800dbd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800dbb2:	781b      	ldrb	r3, [r3, #0]
 800dbb4:	2b01      	cmp	r3, #1
 800dbb6:	d109      	bne.n	800dbcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800dbb8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dbbc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dbc0:	8003      	strh	r3, [r0, #0]
 800dbc2:	4b04      	ldr	r3, [pc, #16]	; (800dbd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800dbc4:	881b      	ldrh	r3, [r3, #0]
 800dbc6:	3b01      	subs	r3, #1
 800dbc8:	1a9b      	subs	r3, r3, r2
 800dbca:	800b      	strh	r3, [r1, #0]
 800dbcc:	4770      	bx	lr
 800dbce:	bf00      	nop
 800dbd0:	2000a804 	.word	0x2000a804
 800dbd4:	2000a800 	.word	0x2000a800

0800dbd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dbd8:	b510      	push	{r4, lr}
 800dbda:	4b07      	ldr	r3, [pc, #28]	; (800dbf8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dbdc:	781b      	ldrb	r3, [r3, #0]
 800dbde:	2b01      	cmp	r3, #1
 800dbe0:	d108      	bne.n	800dbf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dbe2:	4b06      	ldr	r3, [pc, #24]	; (800dbfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dbe4:	880c      	ldrh	r4, [r1, #0]
 800dbe6:	881b      	ldrh	r3, [r3, #0]
 800dbe8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dbec:	3b01      	subs	r3, #1
 800dbee:	1b1b      	subs	r3, r3, r4
 800dbf0:	8003      	strh	r3, [r0, #0]
 800dbf2:	800a      	strh	r2, [r1, #0]
 800dbf4:	bd10      	pop	{r4, pc}
 800dbf6:	bf00      	nop
 800dbf8:	2000a804 	.word	0x2000a804
 800dbfc:	2000a800 	.word	0x2000a800

0800dc00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dc00:	b510      	push	{r4, lr}
 800dc02:	4b0a      	ldr	r3, [pc, #40]	; (800dc2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dc04:	781b      	ldrb	r3, [r3, #0]
 800dc06:	2b01      	cmp	r3, #1
 800dc08:	d10e      	bne.n	800dc28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dc0a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dc0e:	8843      	ldrh	r3, [r0, #2]
 800dc10:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dc14:	8044      	strh	r4, [r0, #2]
 800dc16:	18ca      	adds	r2, r1, r3
 800dc18:	4b05      	ldr	r3, [pc, #20]	; (800dc30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800dc1a:	881b      	ldrh	r3, [r3, #0]
 800dc1c:	1a9b      	subs	r3, r3, r2
 800dc1e:	8003      	strh	r3, [r0, #0]
 800dc20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dc24:	80c3      	strh	r3, [r0, #6]
 800dc26:	8081      	strh	r1, [r0, #4]
 800dc28:	bd10      	pop	{r4, pc}
 800dc2a:	bf00      	nop
 800dc2c:	2000a804 	.word	0x2000a804
 800dc30:	2000a800 	.word	0x2000a800

0800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dc34:	4b08      	ldr	r3, [pc, #32]	; (800dc58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800dc36:	781b      	ldrb	r3, [r3, #0]
 800dc38:	2b01      	cmp	r3, #1
 800dc3a:	d10c      	bne.n	800dc56 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800dc3c:	8803      	ldrh	r3, [r0, #0]
 800dc3e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dc42:	8842      	ldrh	r2, [r0, #2]
 800dc44:	8002      	strh	r2, [r0, #0]
 800dc46:	185a      	adds	r2, r3, r1
 800dc48:	4b04      	ldr	r3, [pc, #16]	; (800dc5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dc4a:	881b      	ldrh	r3, [r3, #0]
 800dc4c:	1a9b      	subs	r3, r3, r2
 800dc4e:	8043      	strh	r3, [r0, #2]
 800dc50:	88c3      	ldrh	r3, [r0, #6]
 800dc52:	8083      	strh	r3, [r0, #4]
 800dc54:	80c1      	strh	r1, [r0, #6]
 800dc56:	4770      	bx	lr
 800dc58:	2000a804 	.word	0x2000a804
 800dc5c:	2000a800 	.word	0x2000a800

0800dc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dc60:	b510      	push	{r4, lr}
 800dc62:	4b07      	ldr	r3, [pc, #28]	; (800dc80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dc64:	781b      	ldrb	r3, [r3, #0]
 800dc66:	2b01      	cmp	r3, #1
 800dc68:	d108      	bne.n	800dc7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dc6a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dc6e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dc72:	8003      	strh	r3, [r0, #0]
 800dc74:	8893      	ldrh	r3, [r2, #4]
 800dc76:	3b01      	subs	r3, #1
 800dc78:	1b1b      	subs	r3, r3, r4
 800dc7a:	800b      	strh	r3, [r1, #0]
 800dc7c:	bd10      	pop	{r4, pc}
 800dc7e:	bf00      	nop
 800dc80:	2000a804 	.word	0x2000a804

0800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dc84:	b510      	push	{r4, lr}
 800dc86:	4b0a      	ldr	r3, [pc, #40]	; (800dcb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dc88:	781b      	ldrb	r3, [r3, #0]
 800dc8a:	2b01      	cmp	r3, #1
 800dc8c:	460a      	mov	r2, r1
 800dc8e:	d10d      	bne.n	800dcac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dc90:	8881      	ldrh	r1, [r0, #4]
 800dc92:	8803      	ldrh	r3, [r0, #0]
 800dc94:	440b      	add	r3, r1
 800dc96:	4601      	mov	r1, r0
 800dc98:	3b01      	subs	r3, #1
 800dc9a:	f821 3b02 	strh.w	r3, [r1], #2
 800dc9e:	f7ff ffdf 	bl	800dc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dca2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dca6:	88c2      	ldrh	r2, [r0, #6]
 800dca8:	8082      	strh	r2, [r0, #4]
 800dcaa:	80c3      	strh	r3, [r0, #6]
 800dcac:	bd10      	pop	{r4, pc}
 800dcae:	bf00      	nop
 800dcb0:	2000a804 	.word	0x2000a804

0800dcb4 <_ZN8touchgfx11Application13requestRedrawEv>:
 800dcb4:	4b06      	ldr	r3, [pc, #24]	; (800dcd0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dcb6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dcba:	4b06      	ldr	r3, [pc, #24]	; (800dcd4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800dcbc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800dcc0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dcc4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800dcc8:	2100      	movs	r1, #0
 800dcca:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800dcce:	4770      	bx	lr
 800dcd0:	2000a800 	.word	0x2000a800
 800dcd4:	2000a802 	.word	0x2000a802

0800dcd8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dcd8:	4b03      	ldr	r3, [pc, #12]	; (800dce8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dcda:	6818      	ldr	r0, [r3, #0]
 800dcdc:	b110      	cbz	r0, 800dce4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800dcde:	6803      	ldr	r3, [r0, #0]
 800dce0:	699b      	ldr	r3, [r3, #24]
 800dce2:	4718      	bx	r3
 800dce4:	4770      	bx	lr
 800dce6:	bf00      	nop
 800dce8:	2000a848 	.word	0x2000a848

0800dcec <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800dcec:	4770      	bx	lr
	...

0800dcf0 <_ZN8touchgfx11Application4drawEv>:
 800dcf0:	b507      	push	{r0, r1, r2, lr}
 800dcf2:	4b09      	ldr	r3, [pc, #36]	; (800dd18 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dcf4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dcf8:	4b08      	ldr	r3, [pc, #32]	; (800dd1c <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dcfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dcfe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd02:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dd06:	6803      	ldr	r3, [r0, #0]
 800dd08:	2100      	movs	r1, #0
 800dd0a:	9100      	str	r1, [sp, #0]
 800dd0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dd0e:	4669      	mov	r1, sp
 800dd10:	4798      	blx	r3
 800dd12:	b003      	add	sp, #12
 800dd14:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd18:	2000a800 	.word	0x2000a800
 800dd1c:	2000a802 	.word	0x2000a802

0800dd20 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800dd20:	4b03      	ldr	r3, [pc, #12]	; (800dd30 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800dd22:	6818      	ldr	r0, [r3, #0]
 800dd24:	b110      	cbz	r0, 800dd2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800dd26:	6803      	ldr	r3, [r0, #0]
 800dd28:	69db      	ldr	r3, [r3, #28]
 800dd2a:	4718      	bx	r3
 800dd2c:	4770      	bx	lr
 800dd2e:	bf00      	nop
 800dd30:	2000a848 	.word	0x2000a848

0800dd34 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800dd34:	4b03      	ldr	r3, [pc, #12]	; (800dd44 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800dd36:	6818      	ldr	r0, [r3, #0]
 800dd38:	b110      	cbz	r0, 800dd40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800dd3a:	6803      	ldr	r3, [r0, #0]
 800dd3c:	6a1b      	ldr	r3, [r3, #32]
 800dd3e:	4718      	bx	r3
 800dd40:	4770      	bx	lr
 800dd42:	bf00      	nop
 800dd44:	2000a848 	.word	0x2000a848

0800dd48 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800dd48:	2300      	movs	r3, #0
 800dd4a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800dd4e:	4770      	bx	lr

0800dd50 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800dd50:	4b03      	ldr	r3, [pc, #12]	; (800dd60 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800dd52:	6818      	ldr	r0, [r3, #0]
 800dd54:	b110      	cbz	r0, 800dd5c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800dd56:	6803      	ldr	r3, [r0, #0]
 800dd58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd5a:	4718      	bx	r3
 800dd5c:	4770      	bx	lr
 800dd5e:	bf00      	nop
 800dd60:	2000a848 	.word	0x2000a848

0800dd64 <_ZN8touchgfx11ApplicationD1Ev>:
 800dd64:	4770      	bx	lr

0800dd66 <_ZN8touchgfx11ApplicationD0Ev>:
 800dd66:	b510      	push	{r4, lr}
 800dd68:	f44f 719c 	mov.w	r1, #312	; 0x138
 800dd6c:	4604      	mov	r4, r0
 800dd6e:	f00e ff77 	bl	801cc60 <_ZdlPvj>
 800dd72:	4620      	mov	r0, r4
 800dd74:	bd10      	pop	{r4, pc}
	...

0800dd78 <_ZN8touchgfx11Application15handleTickEventEv>:
 800dd78:	b570      	push	{r4, r5, r6, lr}
 800dd7a:	4d38      	ldr	r5, [pc, #224]	; (800de5c <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800dd7c:	4604      	mov	r4, r0
 800dd7e:	6828      	ldr	r0, [r5, #0]
 800dd80:	b140      	cbz	r0, 800dd94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dd82:	7a03      	ldrb	r3, [r0, #8]
 800dd84:	b933      	cbnz	r3, 800dd94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dd86:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800dd8a:	6803      	ldr	r3, [r0, #0]
 800dd8c:	689b      	ldr	r3, [r3, #8]
 800dd8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd92:	4718      	bx	r3
 800dd94:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800dd98:	b97b      	cbnz	r3, 800ddba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dd9a:	b170      	cbz	r0, 800ddba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dd9c:	7a03      	ldrb	r3, [r0, #8]
 800dd9e:	b163      	cbz	r3, 800ddba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dda0:	4b2f      	ldr	r3, [pc, #188]	; (800de60 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800dda2:	6818      	ldr	r0, [r3, #0]
 800dda4:	b110      	cbz	r0, 800ddac <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800dda6:	6803      	ldr	r3, [r0, #0]
 800dda8:	691b      	ldr	r3, [r3, #16]
 800ddaa:	4798      	blx	r3
 800ddac:	6828      	ldr	r0, [r5, #0]
 800ddae:	6803      	ldr	r3, [r0, #0]
 800ddb0:	68db      	ldr	r3, [r3, #12]
 800ddb2:	4798      	blx	r3
 800ddb4:	2301      	movs	r3, #1
 800ddb6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ddba:	2500      	movs	r5, #0
 800ddbc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ddc0:	42a8      	cmp	r0, r5
 800ddc2:	dd0c      	ble.n	800ddde <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ddc4:	1963      	adds	r3, r4, r5
 800ddc6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ddca:	b132      	cbz	r2, 800ddda <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ddcc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ddd0:	4413      	add	r3, r2
 800ddd2:	6858      	ldr	r0, [r3, #4]
 800ddd4:	6803      	ldr	r3, [r0, #0]
 800ddd6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ddd8:	4798      	blx	r3
 800ddda:	3501      	adds	r5, #1
 800dddc:	e7ee      	b.n	800ddbc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ddde:	2300      	movs	r3, #0
 800dde0:	461a      	mov	r2, r3
 800dde2:	4298      	cmp	r0, r3
 800dde4:	d10f      	bne.n	800de06 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800dde6:	1d25      	adds	r5, r4, #4
 800dde8:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ddec:	4291      	cmp	r1, r2
 800ddee:	dd2d      	ble.n	800de4c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800ddf0:	1e48      	subs	r0, r1, #1
 800ddf2:	b280      	uxth	r0, r0
 800ddf4:	4288      	cmp	r0, r1
 800ddf6:	d31a      	bcc.n	800de2e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800ddf8:	4b1a      	ldr	r3, [pc, #104]	; (800de64 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800ddfa:	4a1b      	ldr	r2, [pc, #108]	; (800de68 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800ddfc:	481b      	ldr	r0, [pc, #108]	; (800de6c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800ddfe:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800de02:	f00e ff5b 	bl	801ccbc <__assert_func>
 800de06:	18e1      	adds	r1, r4, r3
 800de08:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800de0c:	b16d      	cbz	r5, 800de2a <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800de0e:	429a      	cmp	r2, r3
 800de10:	d00a      	beq.n	800de28 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800de12:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800de16:	4431      	add	r1, r6
 800de18:	684e      	ldr	r6, [r1, #4]
 800de1a:	b291      	uxth	r1, r2
 800de1c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800de20:	604e      	str	r6, [r1, #4]
 800de22:	18a1      	adds	r1, r4, r2
 800de24:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800de28:	3201      	adds	r2, #1
 800de2a:	3301      	adds	r3, #1
 800de2c:	e7d9      	b.n	800dde2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800de2e:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800de32:	3304      	adds	r3, #4
 800de34:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800de38:	428b      	cmp	r3, r1
 800de3a:	d004      	beq.n	800de46 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800de3c:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800de40:	f843 6c04 	str.w	r6, [r3, #-4]
 800de44:	e7f8      	b.n	800de38 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800de46:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800de4a:	e7cd      	b.n	800dde8 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800de4c:	4b04      	ldr	r3, [pc, #16]	; (800de60 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800de4e:	6818      	ldr	r0, [r3, #0]
 800de50:	b110      	cbz	r0, 800de58 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800de52:	6803      	ldr	r3, [r0, #0]
 800de54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de56:	e79a      	b.n	800dd8e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800de58:	bd70      	pop	{r4, r5, r6, pc}
 800de5a:	bf00      	nop
 800de5c:	2000a84c 	.word	0x2000a84c
 800de60:	2000a848 	.word	0x2000a848
 800de64:	08020512 	.word	0x08020512
 800de68:	08020704 	.word	0x08020704
 800de6c:	08020520 	.word	0x08020520

0800de70 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800de70:	b570      	push	{r4, r5, r6, lr}
 800de72:	4606      	mov	r6, r0
 800de74:	460c      	mov	r4, r1
 800de76:	b929      	cbnz	r1, 800de84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800de78:	4b0c      	ldr	r3, [pc, #48]	; (800deac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800de7a:	4a0d      	ldr	r2, [pc, #52]	; (800deb0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800de7c:	480d      	ldr	r0, [pc, #52]	; (800deb4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800de7e:	215e      	movs	r1, #94	; 0x5e
 800de80:	f00e ff1c 	bl	801ccbc <__assert_func>
 800de84:	4d0c      	ldr	r5, [pc, #48]	; (800deb8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800de86:	2300      	movs	r3, #0
 800de88:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800de8c:	6828      	ldr	r0, [r5, #0]
 800de8e:	b110      	cbz	r0, 800de96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800de90:	6803      	ldr	r3, [r0, #0]
 800de92:	695b      	ldr	r3, [r3, #20]
 800de94:	4798      	blx	r3
 800de96:	602c      	str	r4, [r5, #0]
 800de98:	6823      	ldr	r3, [r4, #0]
 800de9a:	4620      	mov	r0, r4
 800de9c:	68db      	ldr	r3, [r3, #12]
 800de9e:	4798      	blx	r3
 800dea0:	6833      	ldr	r3, [r6, #0]
 800dea2:	4630      	mov	r0, r6
 800dea4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dea6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800deaa:	4718      	bx	r3
 800deac:	080204de 	.word	0x080204de
 800deb0:	080205c4 	.word	0x080205c4
 800deb4:	080204e8 	.word	0x080204e8
 800deb8:	2000a848 	.word	0x2000a848

0800debc <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800debc:	b510      	push	{r4, lr}
 800debe:	f9b1 4000 	ldrsh.w	r4, [r1]
 800dec2:	888a      	ldrh	r2, [r1, #4]
 800dec4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dec8:	4422      	add	r2, r4
 800deca:	b212      	sxth	r2, r2
 800decc:	4293      	cmp	r3, r2
 800dece:	da15      	bge.n	800defc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ded0:	8882      	ldrh	r2, [r0, #4]
 800ded2:	4413      	add	r3, r2
 800ded4:	b21b      	sxth	r3, r3
 800ded6:	429c      	cmp	r4, r3
 800ded8:	da10      	bge.n	800defc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800deda:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dede:	88c9      	ldrh	r1, [r1, #6]
 800dee0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dee4:	4419      	add	r1, r3
 800dee6:	b209      	sxth	r1, r1
 800dee8:	428a      	cmp	r2, r1
 800deea:	da07      	bge.n	800defc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800deec:	88c0      	ldrh	r0, [r0, #6]
 800deee:	4410      	add	r0, r2
 800def0:	b200      	sxth	r0, r0
 800def2:	4283      	cmp	r3, r0
 800def4:	bfac      	ite	ge
 800def6:	2000      	movge	r0, #0
 800def8:	2001      	movlt	r0, #1
 800defa:	bd10      	pop	{r4, pc}
 800defc:	2000      	movs	r0, #0
 800defe:	e7fc      	b.n	800defa <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800df00 <_ZN8touchgfx4Rect10restrictToEss>:
 800df00:	f9b0 3000 	ldrsh.w	r3, [r0]
 800df04:	2b00      	cmp	r3, #0
 800df06:	b510      	push	{r4, lr}
 800df08:	da04      	bge.n	800df14 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800df0a:	8884      	ldrh	r4, [r0, #4]
 800df0c:	4423      	add	r3, r4
 800df0e:	8083      	strh	r3, [r0, #4]
 800df10:	2300      	movs	r3, #0
 800df12:	8003      	strh	r3, [r0, #0]
 800df14:	f9b0 4000 	ldrsh.w	r4, [r0]
 800df18:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800df1c:	1b09      	subs	r1, r1, r4
 800df1e:	428b      	cmp	r3, r1
 800df20:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800df24:	bfc8      	it	gt
 800df26:	8081      	strhgt	r1, [r0, #4]
 800df28:	2b00      	cmp	r3, #0
 800df2a:	da04      	bge.n	800df36 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800df2c:	88c1      	ldrh	r1, [r0, #6]
 800df2e:	440b      	add	r3, r1
 800df30:	80c3      	strh	r3, [r0, #6]
 800df32:	2300      	movs	r3, #0
 800df34:	8043      	strh	r3, [r0, #2]
 800df36:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800df3a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800df3e:	1a52      	subs	r2, r2, r1
 800df40:	4293      	cmp	r3, r2
 800df42:	bfc8      	it	gt
 800df44:	80c2      	strhgt	r2, [r0, #6]
 800df46:	bd10      	pop	{r4, pc}

0800df48 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800df48:	b510      	push	{r4, lr}
 800df4a:	4b10      	ldr	r3, [pc, #64]	; (800df8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800df4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df50:	4b0f      	ldr	r3, [pc, #60]	; (800df90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800df52:	460c      	mov	r4, r1
 800df54:	4620      	mov	r0, r4
 800df56:	f9b3 1000 	ldrsh.w	r1, [r3]
 800df5a:	f7ff ffd1 	bl	800df00 <_ZN8touchgfx4Rect10restrictToEss>
 800df5e:	4b0d      	ldr	r3, [pc, #52]	; (800df94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800df60:	6818      	ldr	r0, [r3, #0]
 800df62:	b190      	cbz	r0, 800df8a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800df64:	6803      	ldr	r3, [r0, #0]
 800df66:	4621      	mov	r1, r4
 800df68:	689b      	ldr	r3, [r3, #8]
 800df6a:	4798      	blx	r3
 800df6c:	4b0a      	ldr	r3, [pc, #40]	; (800df98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800df6e:	6818      	ldr	r0, [r3, #0]
 800df70:	b118      	cbz	r0, 800df7a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800df72:	6803      	ldr	r3, [r0, #0]
 800df74:	4621      	mov	r1, r4
 800df76:	689b      	ldr	r3, [r3, #8]
 800df78:	4798      	blx	r3
 800df7a:	4b08      	ldr	r3, [pc, #32]	; (800df9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800df7c:	6818      	ldr	r0, [r3, #0]
 800df7e:	6803      	ldr	r3, [r0, #0]
 800df80:	4621      	mov	r1, r4
 800df82:	69db      	ldr	r3, [r3, #28]
 800df84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df88:	4718      	bx	r3
 800df8a:	bd10      	pop	{r4, pc}
 800df8c:	2000a802 	.word	0x2000a802
 800df90:	2000a800 	.word	0x2000a800
 800df94:	2000a848 	.word	0x2000a848
 800df98:	2000a844 	.word	0x2000a844
 800df9c:	2000a80c 	.word	0x2000a80c

0800dfa0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800dfa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfa2:	4606      	mov	r6, r0
 800dfa4:	4608      	mov	r0, r1
 800dfa6:	460f      	mov	r7, r1
 800dfa8:	f7fc fa55 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfac:	b9e8      	cbnz	r0, 800dfea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfae:	f9b7 5000 	ldrsh.w	r5, [r7]
 800dfb2:	f9b6 4000 	ldrsh.w	r4, [r6]
 800dfb6:	42a5      	cmp	r5, r4
 800dfb8:	db17      	blt.n	800dfea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfba:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800dfbe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800dfc2:	429a      	cmp	r2, r3
 800dfc4:	db11      	blt.n	800dfea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfc6:	88b9      	ldrh	r1, [r7, #4]
 800dfc8:	440d      	add	r5, r1
 800dfca:	88b1      	ldrh	r1, [r6, #4]
 800dfcc:	440c      	add	r4, r1
 800dfce:	b22d      	sxth	r5, r5
 800dfd0:	b224      	sxth	r4, r4
 800dfd2:	42a5      	cmp	r5, r4
 800dfd4:	dc09      	bgt.n	800dfea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfd6:	88f8      	ldrh	r0, [r7, #6]
 800dfd8:	4410      	add	r0, r2
 800dfda:	88f2      	ldrh	r2, [r6, #6]
 800dfdc:	4413      	add	r3, r2
 800dfde:	b200      	sxth	r0, r0
 800dfe0:	b21b      	sxth	r3, r3
 800dfe2:	4298      	cmp	r0, r3
 800dfe4:	bfcc      	ite	gt
 800dfe6:	2000      	movgt	r0, #0
 800dfe8:	2001      	movle	r0, #1
 800dfea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dfec <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800dfec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfee:	4604      	mov	r4, r0
 800dff0:	4608      	mov	r0, r1
 800dff2:	460d      	mov	r5, r1
 800dff4:	f7fc fa2f 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dff8:	b978      	cbnz	r0, 800e01a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800dffa:	4620      	mov	r0, r4
 800dffc:	f7fc fa2b 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e000:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e004:	b150      	cbz	r0, 800e01c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e006:	8026      	strh	r6, [r4, #0]
 800e008:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e00c:	8063      	strh	r3, [r4, #2]
 800e00e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e012:	80a3      	strh	r3, [r4, #4]
 800e014:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e018:	80e3      	strh	r3, [r4, #6]
 800e01a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e01c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e020:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e024:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e028:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e02c:	88ed      	ldrh	r5, [r5, #6]
 800e02e:	42b1      	cmp	r1, r6
 800e030:	460f      	mov	r7, r1
 800e032:	bfa8      	it	ge
 800e034:	4637      	movge	r7, r6
 800e036:	4293      	cmp	r3, r2
 800e038:	4618      	mov	r0, r3
 800e03a:	4466      	add	r6, ip
 800e03c:	bfa8      	it	ge
 800e03e:	4610      	movge	r0, r2
 800e040:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e044:	8027      	strh	r7, [r4, #0]
 800e046:	442a      	add	r2, r5
 800e048:	88e5      	ldrh	r5, [r4, #6]
 800e04a:	8060      	strh	r0, [r4, #2]
 800e04c:	4461      	add	r1, ip
 800e04e:	442b      	add	r3, r5
 800e050:	b236      	sxth	r6, r6
 800e052:	b209      	sxth	r1, r1
 800e054:	b212      	sxth	r2, r2
 800e056:	b21b      	sxth	r3, r3
 800e058:	428e      	cmp	r6, r1
 800e05a:	bfac      	ite	ge
 800e05c:	ebc7 0106 	rsbge	r1, r7, r6
 800e060:	ebc7 0101 	rsblt	r1, r7, r1
 800e064:	429a      	cmp	r2, r3
 800e066:	bfac      	ite	ge
 800e068:	ebc0 0202 	rsbge	r2, r0, r2
 800e06c:	ebc0 0203 	rsblt	r2, r0, r3
 800e070:	80a1      	strh	r1, [r4, #4]
 800e072:	80e2      	strh	r2, [r4, #6]
 800e074:	e7d1      	b.n	800e01a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e078 <_ZN8touchgfx11Application11getInstanceEv>:
 800e078:	4b01      	ldr	r3, [pc, #4]	; (800e080 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e07a:	6818      	ldr	r0, [r3, #0]
 800e07c:	4770      	bx	lr
 800e07e:	bf00      	nop
 800e080:	2000a858 	.word	0x2000a858

0800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e084:	2300      	movs	r3, #0
 800e086:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e08a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e08e:	30a8      	adds	r0, #168	; 0xa8
 800e090:	f802 3b01 	strb.w	r3, [r2], #1
 800e094:	4282      	cmp	r2, r0
 800e096:	d1fb      	bne.n	800e090 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e098:	4770      	bx	lr

0800e09a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e09a:	4603      	mov	r3, r0
 800e09c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e0a0:	2200      	movs	r2, #0
 800e0a2:	801a      	strh	r2, [r3, #0]
 800e0a4:	805a      	strh	r2, [r3, #2]
 800e0a6:	809a      	strh	r2, [r3, #4]
 800e0a8:	80da      	strh	r2, [r3, #6]
 800e0aa:	3308      	adds	r3, #8
 800e0ac:	428b      	cmp	r3, r1
 800e0ae:	d1f8      	bne.n	800e0a2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e0b0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e0b4:	4770      	bx	lr
	...

0800e0b8 <_ZN8touchgfx11ApplicationC1Ev>:
 800e0b8:	b570      	push	{r4, r5, r6, lr}
 800e0ba:	4b19      	ldr	r3, [pc, #100]	; (800e120 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800e0bc:	6003      	str	r3, [r0, #0]
 800e0be:	2500      	movs	r5, #0
 800e0c0:	4604      	mov	r4, r0
 800e0c2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800e0c6:	30a8      	adds	r0, #168	; 0xa8
 800e0c8:	f7ff ffe7 	bl	800e09a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e0cc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e0d0:	f7ff ffe3 	bl	800e09a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e0d4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800e0d8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800e0dc:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800e0e0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800e0e4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800e0e8:	490e      	ldr	r1, [pc, #56]	; (800e124 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e0ea:	480f      	ldr	r0, [pc, #60]	; (800e128 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e0ec:	4e0f      	ldr	r6, [pc, #60]	; (800e12c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e0ee:	f00e fc8f 	bl	801ca10 <CRC_Lock>
 800e0f2:	4b0f      	ldr	r3, [pc, #60]	; (800e130 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e0f4:	b158      	cbz	r0, 800e10e <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800e0f6:	801d      	strh	r5, [r3, #0]
 800e0f8:	4a0e      	ldr	r2, [pc, #56]	; (800e134 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e0fa:	2300      	movs	r3, #0
 800e0fc:	6013      	str	r3, [r2, #0]
 800e0fe:	4a0e      	ldr	r2, [pc, #56]	; (800e138 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e100:	6033      	str	r3, [r6, #0]
 800e102:	4620      	mov	r0, r4
 800e104:	6013      	str	r3, [r2, #0]
 800e106:	f7ff ffbd 	bl	800e084 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e10a:	4620      	mov	r0, r4
 800e10c:	bd70      	pop	{r4, r5, r6, pc}
 800e10e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e112:	2002      	movs	r0, #2
 800e114:	801a      	strh	r2, [r3, #0]
 800e116:	6030      	str	r0, [r6, #0]
 800e118:	f001 fa14 	bl	800f544 <_ZN8touchgfx6Screen4drawEv>
 800e11c:	e7ec      	b.n	800e0f8 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800e11e:	bf00      	nop
 800e120:	08020580 	.word	0x08020580
 800e124:	b5e8b5cd 	.word	0xb5e8b5cd
 800e128:	f407a5c2 	.word	0xf407a5c2
 800e12c:	2000a848 	.word	0x2000a848
 800e130:	20000060 	.word	0x20000060
 800e134:	2000a858 	.word	0x2000a858
 800e138:	2000a84c 	.word	0x2000a84c

0800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e13c:	b510      	push	{r4, lr}
 800e13e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e142:	428b      	cmp	r3, r1
 800e144:	d806      	bhi.n	800e154 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800e146:	4b0b      	ldr	r3, [pc, #44]	; (800e174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800e148:	4a0b      	ldr	r2, [pc, #44]	; (800e178 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800e14a:	480c      	ldr	r0, [pc, #48]	; (800e17c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800e14c:	f240 11dd 	movw	r1, #477	; 0x1dd
 800e150:	f00e fdb4 	bl	801ccbc <__assert_func>
 800e154:	3b01      	subs	r3, #1
 800e156:	b29b      	uxth	r3, r3
 800e158:	428b      	cmp	r3, r1
 800e15a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800e15e:	d908      	bls.n	800e172 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800e160:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e164:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e168:	681a      	ldr	r2, [r3, #0]
 800e16a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e16e:	685a      	ldr	r2, [r3, #4]
 800e170:	6062      	str	r2, [r4, #4]
 800e172:	bd10      	pop	{r4, pc}
 800e174:	08020512 	.word	0x08020512
 800e178:	08020608 	.word	0x08020608
 800e17c:	08020520 	.word	0x08020520

0800e180 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e180:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e182:	466b      	mov	r3, sp
 800e184:	e883 0006 	stmia.w	r3, {r1, r2}
 800e188:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e18c:	2a07      	cmp	r2, #7
 800e18e:	4604      	mov	r4, r0
 800e190:	d906      	bls.n	800e1a0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e192:	4b09      	ldr	r3, [pc, #36]	; (800e1b8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e194:	4a09      	ldr	r2, [pc, #36]	; (800e1bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e196:	480a      	ldr	r0, [pc, #40]	; (800e1c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e198:	f240 11a3 	movw	r1, #419	; 0x1a3
 800e19c:	f00e fd8e 	bl	801ccbc <__assert_func>
 800e1a0:	1c51      	adds	r1, r2, #1
 800e1a2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e1a6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e1aa:	cb03      	ldmia	r3!, {r0, r1}
 800e1ac:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e1b0:	6069      	str	r1, [r5, #4]
 800e1b2:	b003      	add	sp, #12
 800e1b4:	bd30      	pop	{r4, r5, pc}
 800e1b6:	bf00      	nop
 800e1b8:	08020549 	.word	0x08020549
 800e1bc:	0802069e 	.word	0x0802069e
 800e1c0:	08020520 	.word	0x08020520

0800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1c8:	4b94      	ldr	r3, [pc, #592]	; (800e41c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800e1ca:	b08d      	sub	sp, #52	; 0x34
 800e1cc:	ac08      	add	r4, sp, #32
 800e1ce:	e884 0006 	stmia.w	r4, {r1, r2}
 800e1d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1d6:	4b92      	ldr	r3, [pc, #584]	; (800e420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800e1d8:	4683      	mov	fp, r0
 800e1da:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e1de:	4620      	mov	r0, r4
 800e1e0:	f7ff fe8e 	bl	800df00 <_ZN8touchgfx4Rect10restrictToEss>
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	f7fc f936 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e1ea:	2800      	cmp	r0, #0
 800e1ec:	d16a      	bne.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e1ee:	9402      	str	r4, [sp, #8]
 800e1f0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e1f4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e1f8:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800e1fc:	2400      	movs	r4, #0
 800e1fe:	9301      	str	r3, [sp, #4]
 800e200:	36a0      	adds	r6, #160	; 0xa0
 800e202:	42a5      	cmp	r5, r4
 800e204:	d00d      	beq.n	800e222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800e206:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800e20a:	9802      	ldr	r0, [sp, #8]
 800e20c:	f7ff fec8 	bl	800dfa0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e210:	b128      	cbz	r0, 800e21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800e212:	1e69      	subs	r1, r5, #1
 800e214:	1b09      	subs	r1, r1, r4
 800e216:	b289      	uxth	r1, r1
 800e218:	9801      	ldr	r0, [sp, #4]
 800e21a:	f7ff ff8f 	bl	800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e21e:	3401      	adds	r4, #1
 800e220:	e7ef      	b.n	800e202 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800e222:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e226:	9703      	str	r7, [sp, #12]
 800e228:	1e7b      	subs	r3, r7, #1
 800e22a:	9300      	str	r3, [sp, #0]
 800e22c:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800e230:	2400      	movs	r4, #0
 800e232:	4655      	mov	r5, sl
 800e234:	9704      	str	r7, [sp, #16]
 800e236:	4626      	mov	r6, r4
 800e238:	9b04      	ldr	r3, [sp, #16]
 800e23a:	2b00      	cmp	r3, #0
 800e23c:	d078      	beq.n	800e330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800e23e:	9902      	ldr	r1, [sp, #8]
 800e240:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e244:	f7ff fe3a 	bl	800debc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e248:	b360      	cbz	r0, 800e2a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e24a:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800e24e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800e252:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800e256:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800e25a:	45e6      	cmp	lr, ip
 800e25c:	db35      	blt.n	800e2ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e25e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e262:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e266:	4472      	add	r2, lr
 800e268:	4463      	add	r3, ip
 800e26a:	b212      	sxth	r2, r2
 800e26c:	b21b      	sxth	r3, r3
 800e26e:	429a      	cmp	r2, r3
 800e270:	dc2b      	bgt.n	800e2ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e272:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e276:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e27a:	fa1f f288 	uxth.w	r2, r8
 800e27e:	4413      	add	r3, r2
 800e280:	b29b      	uxth	r3, r3
 800e282:	45c1      	cmp	r9, r8
 800e284:	fa0f fe83 	sxth.w	lr, r3
 800e288:	fa1f fc89 	uxth.w	ip, r9
 800e28c:	db0f      	blt.n	800e2ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e28e:	eba3 030c 	sub.w	r3, r3, ip
 800e292:	1ac9      	subs	r1, r1, r3
 800e294:	b209      	sxth	r1, r1
 800e296:	2900      	cmp	r1, #0
 800e298:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e29c:	dd12      	ble.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e29e:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800e2a2:	4604      	mov	r4, r0
 800e2a4:	9b04      	ldr	r3, [sp, #16]
 800e2a6:	3b01      	subs	r3, #1
 800e2a8:	9304      	str	r3, [sp, #16]
 800e2aa:	3d08      	subs	r5, #8
 800e2ac:	e7c4      	b.n	800e238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800e2ae:	4461      	add	r1, ip
 800e2b0:	b209      	sxth	r1, r1
 800e2b2:	4571      	cmp	r1, lr
 800e2b4:	dc3a      	bgt.n	800e32c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2b6:	eba2 020c 	sub.w	r2, r2, ip
 800e2ba:	b212      	sxth	r2, r2
 800e2bc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e2c0:	2a00      	cmp	r2, #0
 800e2c2:	dcee      	bgt.n	800e2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e2c4:	b00d      	add	sp, #52	; 0x34
 800e2c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2ca:	45c1      	cmp	r9, r8
 800e2cc:	db2e      	blt.n	800e32c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2ce:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e2d2:	4499      	add	r9, r3
 800e2d4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e2d8:	4498      	add	r8, r3
 800e2da:	fa0f f989 	sxth.w	r9, r9
 800e2de:	fa0f f888 	sxth.w	r8, r8
 800e2e2:	45c1      	cmp	r9, r8
 800e2e4:	dc22      	bgt.n	800e32c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2e6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e2ea:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800e2ee:	fa1f f28c 	uxth.w	r2, ip
 800e2f2:	4413      	add	r3, r2
 800e2f4:	b29b      	uxth	r3, r3
 800e2f6:	45e6      	cmp	lr, ip
 800e2f8:	fa1f f88e 	uxth.w	r8, lr
 800e2fc:	fa0f f983 	sxth.w	r9, r3
 800e300:	db0a      	blt.n	800e318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800e302:	eba3 0308 	sub.w	r3, r3, r8
 800e306:	1ac9      	subs	r1, r1, r3
 800e308:	b209      	sxth	r1, r1
 800e30a:	2900      	cmp	r1, #0
 800e30c:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e310:	ddd8      	ble.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e312:	f8ad 9020 	strh.w	r9, [sp, #32]
 800e316:	e7c4      	b.n	800e2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e318:	4441      	add	r1, r8
 800e31a:	b209      	sxth	r1, r1
 800e31c:	4549      	cmp	r1, r9
 800e31e:	dc05      	bgt.n	800e32c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e320:	eba2 0208 	sub.w	r2, r2, r8
 800e324:	b212      	sxth	r2, r2
 800e326:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800e32a:	e7c9      	b.n	800e2c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e32c:	4606      	mov	r6, r0
 800e32e:	e7b9      	b.n	800e2a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e330:	2c00      	cmp	r4, #0
 800e332:	f47f af7d 	bne.w	800e230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800e336:	2e00      	cmp	r6, #0
 800e338:	f000 81e1 	beq.w	800e6fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e33c:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800e340:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800e344:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e348:	b2b9      	uxth	r1, r7
 800e34a:	9104      	str	r1, [sp, #16]
 800e34c:	9804      	ldr	r0, [sp, #16]
 800e34e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e352:	4401      	add	r1, r0
 800e354:	b2b3      	uxth	r3, r6
 800e356:	b289      	uxth	r1, r1
 800e358:	441a      	add	r2, r3
 800e35a:	9105      	str	r1, [sp, #20]
 800e35c:	b292      	uxth	r2, r2
 800e35e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800e362:	fa0f f882 	sxth.w	r8, r2
 800e366:	4655      	mov	r5, sl
 800e368:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800e36c:	9b03      	ldr	r3, [sp, #12]
 800e36e:	2b00      	cmp	r3, #0
 800e370:	d058      	beq.n	800e424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800e372:	9902      	ldr	r1, [sp, #8]
 800e374:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e378:	f7ff fda0 	bl	800debc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e37c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e380:	b1d8      	cbz	r0, 800e3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e382:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800e386:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800e38a:	4576      	cmp	r6, lr
 800e38c:	dc26      	bgt.n	800e3dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e38e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800e392:	44f4      	add	ip, lr
 800e394:	fa0f fc8c 	sxth.w	ip, ip
 800e398:	45e0      	cmp	r8, ip
 800e39a:	db1f      	blt.n	800e3dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e39c:	428f      	cmp	r7, r1
 800e39e:	fa1f fc81 	uxth.w	ip, r1
 800e3a2:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800e3a6:	dc0f      	bgt.n	800e3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800e3a8:	9805      	ldr	r0, [sp, #20]
 800e3aa:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800e3ae:	eba0 0c0c 	sub.w	ip, r0, ip
 800e3b2:	eba1 010c 	sub.w	r1, r1, ip
 800e3b6:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800e3ba:	4620      	mov	r0, r4
 800e3bc:	9903      	ldr	r1, [sp, #12]
 800e3be:	3901      	subs	r1, #1
 800e3c0:	9103      	str	r1, [sp, #12]
 800e3c2:	3d08      	subs	r5, #8
 800e3c4:	4604      	mov	r4, r0
 800e3c6:	e7cf      	b.n	800e368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800e3c8:	4461      	add	r1, ip
 800e3ca:	b209      	sxth	r1, r1
 800e3cc:	4549      	cmp	r1, r9
 800e3ce:	dcf5      	bgt.n	800e3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e3d0:	9904      	ldr	r1, [sp, #16]
 800e3d2:	eba1 0c0c 	sub.w	ip, r1, ip
 800e3d6:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800e3da:	e7ee      	b.n	800e3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e3dc:	428f      	cmp	r7, r1
 800e3de:	dced      	bgt.n	800e3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e3e0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800e3e4:	4461      	add	r1, ip
 800e3e6:	b209      	sxth	r1, r1
 800e3e8:	4589      	cmp	r9, r1
 800e3ea:	dbe7      	blt.n	800e3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e3ec:	4576      	cmp	r6, lr
 800e3ee:	fa1f fc8e 	uxth.w	ip, lr
 800e3f2:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800e3f6:	dc08      	bgt.n	800e40a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800e3f8:	eba2 0c0c 	sub.w	ip, r2, ip
 800e3fc:	eba1 010c 	sub.w	r1, r1, ip
 800e400:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800e404:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800e408:	e7d7      	b.n	800e3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e40a:	4461      	add	r1, ip
 800e40c:	b209      	sxth	r1, r1
 800e40e:	4588      	cmp	r8, r1
 800e410:	dbd4      	blt.n	800e3bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e412:	eba3 0c0c 	sub.w	ip, r3, ip
 800e416:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800e41a:	e7ce      	b.n	800e3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e41c:	2000a802 	.word	0x2000a802
 800e420:	2000a800 	.word	0x2000a800
 800e424:	2c00      	cmp	r4, #0
 800e426:	f000 816a 	beq.w	800e6fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e42a:	9b00      	ldr	r3, [sp, #0]
 800e42c:	3301      	adds	r3, #1
 800e42e:	f000 8166 	beq.w	800e6fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e432:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800e436:	4621      	mov	r1, r4
 800e438:	9802      	ldr	r0, [sp, #8]
 800e43a:	f7ff fdb1 	bl	800dfa0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e43e:	b120      	cbz	r0, 800e44a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800e440:	f8bd 1000 	ldrh.w	r1, [sp]
 800e444:	9801      	ldr	r0, [sp, #4]
 800e446:	f7ff fe79 	bl	800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e44a:	9902      	ldr	r1, [sp, #8]
 800e44c:	4620      	mov	r0, r4
 800e44e:	f7ff fd35 	bl	800debc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e452:	2800      	cmp	r0, #0
 800e454:	f000 809b 	beq.w	800e58e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800e458:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800e45c:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800e460:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800e464:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800e468:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800e46c:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800e470:	fa1f f288 	uxth.w	r2, r8
 800e474:	19d5      	adds	r5, r2, r7
 800e476:	fa1f f985 	uxth.w	r9, r5
 800e47a:	fa0f f589 	sxth.w	r5, r9
 800e47e:	b2a1      	uxth	r1, r4
 800e480:	440b      	add	r3, r1
 800e482:	9503      	str	r5, [sp, #12]
 800e484:	45a0      	cmp	r8, r4
 800e486:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e48a:	9507      	str	r5, [sp, #28]
 800e48c:	b29b      	uxth	r3, r3
 800e48e:	f340 809d 	ble.w	800e5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800e492:	1a52      	subs	r2, r2, r1
 800e494:	b292      	uxth	r2, r2
 800e496:	4584      	cmp	ip, r0
 800e498:	fa0f fe83 	sxth.w	lr, r3
 800e49c:	b215      	sxth	r5, r2
 800e49e:	dd2f      	ble.n	800e500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800e4a0:	9e00      	ldr	r6, [sp, #0]
 800e4a2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e4a6:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800e4aa:	9e03      	ldr	r6, [sp, #12]
 800e4ac:	eba6 060e 	sub.w	r6, r6, lr
 800e4b0:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800e4b4:	fa1f fc8c 	uxth.w	ip, ip
 800e4b8:	b280      	uxth	r0, r0
 800e4ba:	ebac 0300 	sub.w	r3, ip, r0
 800e4be:	448c      	add	ip, r1
 800e4c0:	4470      	add	r0, lr
 800e4c2:	b29b      	uxth	r3, r3
 800e4c4:	fa0f fc8c 	sxth.w	ip, ip
 800e4c8:	b200      	sxth	r0, r0
 800e4ca:	b21c      	sxth	r4, r3
 800e4cc:	ebac 0000 	sub.w	r0, ip, r0
 800e4d0:	4366      	muls	r6, r4
 800e4d2:	4368      	muls	r0, r5
 800e4d4:	4286      	cmp	r6, r0
 800e4d6:	db09      	blt.n	800e4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800e4d8:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800e4dc:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800e4e0:	4417      	add	r7, r2
 800e4e2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e4e6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e4ea:	e681      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e4ec:	440b      	add	r3, r1
 800e4ee:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e4f2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800e4f6:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800e4fa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e4fe:	e677      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e500:	9e03      	ldr	r6, [sp, #12]
 800e502:	45b6      	cmp	lr, r6
 800e504:	da28      	bge.n	800e558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800e506:	9b00      	ldr	r3, [sp, #0]
 800e508:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800e50c:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800e510:	eb04 030c 	add.w	r3, r4, ip
 800e514:	fa1f f883 	uxth.w	r8, r3
 800e518:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800e51c:	4403      	add	r3, r0
 800e51e:	eba3 0308 	sub.w	r3, r3, r8
 800e522:	b29b      	uxth	r3, r3
 800e524:	fa0f f988 	sxth.w	r9, r8
 800e528:	eba0 000c 	sub.w	r0, r0, ip
 800e52c:	fa0f f883 	sxth.w	r8, r3
 800e530:	eba6 060e 	sub.w	r6, r6, lr
 800e534:	4368      	muls	r0, r5
 800e536:	fb08 f606 	mul.w	r6, r8, r6
 800e53a:	42b0      	cmp	r0, r6
 800e53c:	dc06      	bgt.n	800e54c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e53e:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800e542:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800e546:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800e54a:	e7c9      	b.n	800e4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800e54c:	4423      	add	r3, r4
 800e54e:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800e552:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e556:	e64b      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e558:	9807      	ldr	r0, [sp, #28]
 800e55a:	eba3 0309 	sub.w	r3, r3, r9
 800e55e:	b29b      	uxth	r3, r3
 800e560:	2806      	cmp	r0, #6
 800e562:	fa0f fc83 	sxth.w	ip, r3
 800e566:	d818      	bhi.n	800e59a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800e568:	4652      	mov	r2, sl
 800e56a:	ab0a      	add	r3, sp, #40	; 0x28
 800e56c:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800e570:	6851      	ldr	r1, [r2, #4]
 800e572:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800e576:	c303      	stmia	r3!, {r0, r1}
 800e578:	9b03      	ldr	r3, [sp, #12]
 800e57a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800e57e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800e582:	ab0a      	add	r3, sp, #40	; 0x28
 800e584:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e588:	9801      	ldr	r0, [sp, #4]
 800e58a:	f7ff fdf9 	bl	800e180 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e58e:	9b00      	ldr	r3, [sp, #0]
 800e590:	3b01      	subs	r3, #1
 800e592:	9300      	str	r3, [sp, #0]
 800e594:	f1aa 0a08 	sub.w	sl, sl, #8
 800e598:	e747      	b.n	800e42a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800e59a:	9800      	ldr	r0, [sp, #0]
 800e59c:	45ac      	cmp	ip, r5
 800e59e:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e5a2:	db0c      	blt.n	800e5be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800e5a4:	4417      	add	r7, r2
 800e5a6:	b2bf      	uxth	r7, r7
 800e5a8:	4458      	add	r0, fp
 800e5aa:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e5ae:	440f      	add	r7, r1
 800e5b0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e5b4:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800e5b8:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800e5bc:	e618      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5be:	4458      	add	r0, fp
 800e5c0:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800e5c4:	443b      	add	r3, r7
 800e5c6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e5ca:	e611      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5cc:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800e5d0:	fa1f f18c 	uxth.w	r1, ip
 800e5d4:	eb01 0e05 	add.w	lr, r1, r5
 800e5d8:	b282      	uxth	r2, r0
 800e5da:	fa1f fe8e 	uxth.w	lr, lr
 800e5de:	9204      	str	r2, [sp, #16]
 800e5e0:	fa0f f28e 	sxth.w	r2, lr
 800e5e4:	9205      	str	r2, [sp, #20]
 800e5e6:	9e04      	ldr	r6, [sp, #16]
 800e5e8:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800e5ec:	4432      	add	r2, r6
 800e5ee:	b292      	uxth	r2, r2
 800e5f0:	4584      	cmp	ip, r0
 800e5f2:	9206      	str	r2, [sp, #24]
 800e5f4:	da26      	bge.n	800e644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800e5f6:	eba3 0309 	sub.w	r3, r3, r9
 800e5fa:	eba2 020e 	sub.w	r2, r2, lr
 800e5fe:	b29b      	uxth	r3, r3
 800e600:	b292      	uxth	r2, r2
 800e602:	fa0f fa83 	sxth.w	sl, r3
 800e606:	b211      	sxth	r1, r2
 800e608:	eba0 000c 	sub.w	r0, r0, ip
 800e60c:	eba4 0408 	sub.w	r4, r4, r8
 800e610:	fb0a f000 	mul.w	r0, sl, r0
 800e614:	434c      	muls	r4, r1
 800e616:	42a0      	cmp	r0, r4
 800e618:	9800      	ldr	r0, [sp, #0]
 800e61a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e61e:	dc06      	bgt.n	800e62e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800e620:	4458      	add	r0, fp
 800e622:	9a05      	ldr	r2, [sp, #20]
 800e624:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800e628:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800e62c:	e7ca      	b.n	800e5c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800e62e:	eb0b 0300 	add.w	r3, fp, r0
 800e632:	9903      	ldr	r1, [sp, #12]
 800e634:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800e638:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800e63c:	442a      	add	r2, r5
 800e63e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e642:	e5d5      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e644:	9e04      	ldr	r6, [sp, #16]
 800e646:	9a03      	ldr	r2, [sp, #12]
 800e648:	1b89      	subs	r1, r1, r6
 800e64a:	b21e      	sxth	r6, r3
 800e64c:	b289      	uxth	r1, r1
 800e64e:	4296      	cmp	r6, r2
 800e650:	fa0f fc81 	sxth.w	ip, r1
 800e654:	dd26      	ble.n	800e6a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800e656:	eba3 0309 	sub.w	r3, r3, r9
 800e65a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800e65e:	9e05      	ldr	r6, [sp, #20]
 800e660:	b29b      	uxth	r3, r3
 800e662:	eba6 0902 	sub.w	r9, r6, r2
 800e666:	b218      	sxth	r0, r3
 800e668:	eba4 0408 	sub.w	r4, r4, r8
 800e66c:	fb0c f404 	mul.w	r4, ip, r4
 800e670:	fb00 f909 	mul.w	r9, r0, r9
 800e674:	9a00      	ldr	r2, [sp, #0]
 800e676:	454c      	cmp	r4, r9
 800e678:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e67c:	db03      	blt.n	800e686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800e67e:	445a      	add	r2, fp
 800e680:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800e684:	e79e      	b.n	800e5c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800e686:	eb0b 0302 	add.w	r3, fp, r2
 800e68a:	9a03      	ldr	r2, [sp, #12]
 800e68c:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800e690:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800e694:	4429      	add	r1, r5
 800e696:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800e69a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e69e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e6a2:	e5a5      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e6a4:	9b06      	ldr	r3, [sp, #24]
 800e6a6:	9c07      	ldr	r4, [sp, #28]
 800e6a8:	eba3 020e 	sub.w	r2, r3, lr
 800e6ac:	b292      	uxth	r2, r2
 800e6ae:	2c06      	cmp	r4, #6
 800e6b0:	b213      	sxth	r3, r2
 800e6b2:	d80d      	bhi.n	800e6d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800e6b4:	4651      	mov	r1, sl
 800e6b6:	aa0a      	add	r2, sp, #40	; 0x28
 800e6b8:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800e6bc:	6849      	ldr	r1, [r1, #4]
 800e6be:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800e6c2:	9b05      	ldr	r3, [sp, #20]
 800e6c4:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800e6c8:	c203      	stmia	r2!, {r0, r1}
 800e6ca:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800e6ce:	e758      	b.n	800e582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e6d0:	9c00      	ldr	r4, [sp, #0]
 800e6d2:	4563      	cmp	r3, ip
 800e6d4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e6d8:	db0d      	blt.n	800e6f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800e6da:	4429      	add	r1, r5
 800e6dc:	9a04      	ldr	r2, [sp, #16]
 800e6de:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800e6e2:	b289      	uxth	r1, r1
 800e6e4:	445c      	add	r4, fp
 800e6e6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e6ea:	4411      	add	r1, r2
 800e6ec:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800e6f0:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800e6f4:	e57c      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e6f6:	445c      	add	r4, fp
 800e6f8:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800e6fc:	e79e      	b.n	800e63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800e6fe:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e702:	2f07      	cmp	r7, #7
 800e704:	d806      	bhi.n	800e714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800e706:	ab08      	add	r3, sp, #32
 800e708:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e70c:	9801      	ldr	r0, [sp, #4]
 800e70e:	f7ff fd37 	bl	800e180 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e712:	e5d7      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e714:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e718:	f107 39ff 	add.w	r9, r7, #4294967295
 800e71c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800e720:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800e724:	f04f 35ff 	mov.w	r5, #4294967295
 800e728:	2400      	movs	r4, #0
 800e72a:	9304      	str	r3, [sp, #16]
 800e72c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800e730:	9300      	str	r3, [sp, #0]
 800e732:	f109 32ff 	add.w	r2, r9, #4294967295
 800e736:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800e73a:	9303      	str	r3, [sp, #12]
 800e73c:	4690      	mov	r8, r2
 800e73e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e742:	f1b8 3fff 	cmp.w	r8, #4294967295
 800e746:	bf14      	ite	ne
 800e748:	9904      	ldrne	r1, [sp, #16]
 800e74a:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800e74e:	6818      	ldr	r0, [r3, #0]
 800e750:	9206      	str	r2, [sp, #24]
 800e752:	bf18      	it	ne
 800e754:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800e758:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800e75c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e760:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800e764:	9305      	str	r3, [sp, #20]
 800e766:	fb16 f601 	smulbb	r6, r6, r1
 800e76a:	6859      	ldr	r1, [r3, #4]
 800e76c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e770:	4671      	mov	r1, lr
 800e772:	a80a      	add	r0, sp, #40	; 0x28
 800e774:	f7ff fc3a 	bl	800dfec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e778:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800e77c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e780:	9b03      	ldr	r3, [sp, #12]
 800e782:	9a00      	ldr	r2, [sp, #0]
 800e784:	fb11 f100 	smulbb	r1, r1, r0
 800e788:	fb02 6603 	mla	r6, r2, r3, r6
 800e78c:	1b8e      	subs	r6, r1, r6
 800e78e:	2008      	movs	r0, #8
 800e790:	fb91 f1f0 	sdiv	r1, r1, r0
 800e794:	42b1      	cmp	r1, r6
 800e796:	dc21      	bgt.n	800e7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800e798:	4556      	cmp	r6, sl
 800e79a:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800e79e:	da03      	bge.n	800e7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800e7a0:	b1e6      	cbz	r6, 800e7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800e7a2:	46b2      	mov	sl, r6
 800e7a4:	4645      	mov	r5, r8
 800e7a6:	464c      	mov	r4, r9
 800e7a8:	f108 38ff 	add.w	r8, r8, #4294967295
 800e7ac:	f118 0f02 	cmn.w	r8, #2
 800e7b0:	d1c7      	bne.n	800e742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800e7b2:	f1b2 3fff 	cmp.w	r2, #4294967295
 800e7b6:	f1a7 0708 	sub.w	r7, r7, #8
 800e7ba:	4691      	mov	r9, r2
 800e7bc:	d1b6      	bne.n	800e72c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800e7be:	9b01      	ldr	r3, [sp, #4]
 800e7c0:	b2a6      	uxth	r6, r4
 800e7c2:	00e4      	lsls	r4, r4, #3
 800e7c4:	1918      	adds	r0, r3, r4
 800e7c6:	1c6b      	adds	r3, r5, #1
 800e7c8:	d10b      	bne.n	800e7e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800e7ca:	4601      	mov	r1, r0
 800e7cc:	9802      	ldr	r0, [sp, #8]
 800e7ce:	f7ff fc0d 	bl	800dfec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e7d2:	4631      	mov	r1, r6
 800e7d4:	9801      	ldr	r0, [sp, #4]
 800e7d6:	f7ff fcb1 	bl	800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e7da:	e509      	b.n	800e1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e7dc:	4645      	mov	r5, r8
 800e7de:	464c      	mov	r4, r9
 800e7e0:	e7ed      	b.n	800e7be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800e7e2:	9b01      	ldr	r3, [sp, #4]
 800e7e4:	00ed      	lsls	r5, r5, #3
 800e7e6:	1959      	adds	r1, r3, r5
 800e7e8:	f7ff fc00 	bl	800dfec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e7ec:	9b02      	ldr	r3, [sp, #8]
 800e7ee:	cb03      	ldmia	r3!, {r0, r1}
 800e7f0:	445d      	add	r5, fp
 800e7f2:	445c      	add	r4, fp
 800e7f4:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800e7f8:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800e7fc:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800e800:	9b02      	ldr	r3, [sp, #8]
 800e802:	6861      	ldr	r1, [r4, #4]
 800e804:	c303      	stmia	r3!, {r0, r1}
 800e806:	e7e4      	b.n	800e7d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800e808 <_ZN8touchgfx11Application10invalidateEv>:
 800e808:	4b09      	ldr	r3, [pc, #36]	; (800e830 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800e80a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e80e:	4b09      	ldr	r3, [pc, #36]	; (800e834 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800e810:	b082      	sub	sp, #8
 800e812:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e816:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e81a:	2100      	movs	r1, #0
 800e81c:	9100      	str	r1, [sp, #0]
 800e81e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e822:	ab02      	add	r3, sp, #8
 800e824:	e913 0006 	ldmdb	r3, {r1, r2}
 800e828:	b002      	add	sp, #8
 800e82a:	f7ff bccb 	b.w	800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e82e:	bf00      	nop
 800e830:	2000a800 	.word	0x2000a800
 800e834:	2000a802 	.word	0x2000a802

0800e838 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e83c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e840:	b09b      	sub	sp, #108	; 0x6c
 800e842:	4604      	mov	r4, r0
 800e844:	4630      	mov	r0, r6
 800e846:	f7fb fe06 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e84a:	4605      	mov	r5, r0
 800e84c:	b940      	cbnz	r0, 800e860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800e84e:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e852:	4620      	mov	r0, r4
 800e854:	f7ff fcb6 	bl	800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e858:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e85c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e860:	4bc6      	ldr	r3, [pc, #792]	; (800eb7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800e862:	681b      	ldr	r3, [r3, #0]
 800e864:	b33b      	cbz	r3, 800e8b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800e866:	4dc6      	ldr	r5, [pc, #792]	; (800eb80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800e868:	4628      	mov	r0, r5
 800e86a:	f7fb fdf4 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e86e:	4606      	mov	r6, r0
 800e870:	bb08      	cbnz	r0, 800e8b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800e872:	4628      	mov	r0, r5
 800e874:	f7ff f9c4 	bl	800dc00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e878:	6829      	ldr	r1, [r5, #0]
 800e87a:	686a      	ldr	r2, [r5, #4]
 800e87c:	4620      	mov	r0, r4
 800e87e:	f7ff fca1 	bl	800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e882:	802e      	strh	r6, [r5, #0]
 800e884:	806e      	strh	r6, [r5, #2]
 800e886:	80ae      	strh	r6, [r5, #4]
 800e888:	80ee      	strh	r6, [r5, #6]
 800e88a:	4dbe      	ldr	r5, [pc, #760]	; (800eb84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800e88c:	a809      	add	r0, sp, #36	; 0x24
 800e88e:	f7ff fc04 	bl	800e09a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e892:	882f      	ldrh	r7, [r5, #0]
 800e894:	463e      	mov	r6, r7
 800e896:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e89a:	42b3      	cmp	r3, r6
 800e89c:	d912      	bls.n	800e8c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800e89e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e8a2:	a809      	add	r0, sp, #36	; 0x24
 800e8a4:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e8a8:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e8ac:	3601      	adds	r6, #1
 800e8ae:	f7ff fc67 	bl	800e180 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e8b2:	b2b6      	uxth	r6, r6
 800e8b4:	e7ef      	b.n	800e896 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800e8b6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e8ba:	2b00      	cmp	r3, #0
 800e8bc:	d1e5      	bne.n	800e88a <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800e8be:	b01b      	add	sp, #108	; 0x6c
 800e8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8c4:	463e      	mov	r6, r7
 800e8c6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e8ca:	42b3      	cmp	r3, r6
 800e8cc:	d90b      	bls.n	800e8e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800e8ce:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e8d2:	4620      	mov	r0, r4
 800e8d4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e8d8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e8dc:	3601      	adds	r6, #1
 800e8de:	f7ff fc71 	bl	800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e8e2:	b2b6      	uxth	r6, r6
 800e8e4:	e7ef      	b.n	800e8c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800e8e6:	4ea8      	ldr	r6, [pc, #672]	; (800eb88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800e8e8:	6833      	ldr	r3, [r6, #0]
 800e8ea:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e8ee:	2b01      	cmp	r3, #1
 800e8f0:	f040 80d2 	bne.w	800ea98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800e8f4:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800e8f8:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800e8fc:	4639      	mov	r1, r7
 800e8fe:	33aa      	adds	r3, #170	; 0xaa
 800e900:	2700      	movs	r7, #0
 800e902:	458c      	cmp	ip, r1
 800e904:	f103 0308 	add.w	r3, r3, #8
 800e908:	dd0a      	ble.n	800e920 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800e90a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e90e:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800e912:	4402      	add	r2, r0
 800e914:	b212      	sxth	r2, r2
 800e916:	4297      	cmp	r7, r2
 800e918:	bfb8      	it	lt
 800e91a:	4617      	movlt	r7, r2
 800e91c:	3101      	adds	r1, #1
 800e91e:	e7f0      	b.n	800e902 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800e920:	4b9a      	ldr	r3, [pc, #616]	; (800eb8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800e922:	f8b3 9000 	ldrh.w	r9, [r3]
 800e926:	2300      	movs	r3, #0
 800e928:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e92c:	f1b9 0f0f 	cmp.w	r9, #15
 800e930:	bf8c      	ite	hi
 800e932:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800e936:	f04f 0901 	movls.w	r9, #1
 800e93a:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800e93e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800e942:	4440      	add	r0, r8
 800e944:	fa0f f880 	sxth.w	r8, r0
 800e948:	6830      	ldr	r0, [r6, #0]
 800e94a:	4547      	cmp	r7, r8
 800e94c:	6803      	ldr	r3, [r0, #0]
 800e94e:	f340 8086 	ble.w	800ea5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800e952:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800e956:	4798      	blx	r3
 800e958:	eb08 0309 	add.w	r3, r8, r9
 800e95c:	4298      	cmp	r0, r3
 800e95e:	da08      	bge.n	800e972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800e960:	4287      	cmp	r7, r0
 800e962:	dd06      	ble.n	800e972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800e964:	4580      	cmp	r8, r0
 800e966:	dd70      	ble.n	800ea4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800e968:	f1b8 0f00 	cmp.w	r8, #0
 800e96c:	dd6d      	ble.n	800ea4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800e96e:	4638      	mov	r0, r7
 800e970:	e004      	b.n	800e97c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800e972:	4580      	cmp	r8, r0
 800e974:	dcfb      	bgt.n	800e96e <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800e976:	42b8      	cmp	r0, r7
 800e978:	bfa8      	it	ge
 800e97a:	4638      	movge	r0, r7
 800e97c:	4b84      	ldr	r3, [pc, #528]	; (800eb90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800e97e:	f8ad 8016 	strh.w	r8, [sp, #22]
 800e982:	eba0 0008 	sub.w	r0, r0, r8
 800e986:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e98a:	f8b5 8000 	ldrh.w	r8, [r5]
 800e98e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e992:	2200      	movs	r2, #0
 800e994:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e998:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e99c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e9a0:	4543      	cmp	r3, r8
 800e9a2:	d9ca      	bls.n	800e93a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800e9a4:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800e9a8:	ab07      	add	r3, sp, #28
 800e9aa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e9ae:	6851      	ldr	r1, [r2, #4]
 800e9b0:	c303      	stmia	r3!, {r0, r1}
 800e9b2:	a905      	add	r1, sp, #20
 800e9b4:	a807      	add	r0, sp, #28
 800e9b6:	f7ff fa81 	bl	800debc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e9ba:	2800      	cmp	r0, #0
 800e9bc:	d04c      	beq.n	800ea58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800e9be:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800e9c2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800e9c6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800e9ca:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800e9ce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e9d2:	4686      	mov	lr, r0
 800e9d4:	4290      	cmp	r0, r2
 800e9d6:	4450      	add	r0, sl
 800e9d8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800e9dc:	bfb8      	it	lt
 800e9de:	4696      	movlt	lr, r2
 800e9e0:	4452      	add	r2, sl
 800e9e2:	b280      	uxth	r0, r0
 800e9e4:	b292      	uxth	r2, r2
 800e9e6:	4299      	cmp	r1, r3
 800e9e8:	fa0f fb80 	sxth.w	fp, r0
 800e9ec:	fa0f fa82 	sxth.w	sl, r2
 800e9f0:	468c      	mov	ip, r1
 800e9f2:	bfb8      	it	lt
 800e9f4:	469c      	movlt	ip, r3
 800e9f6:	45d3      	cmp	fp, sl
 800e9f8:	bfb8      	it	lt
 800e9fa:	4602      	movlt	r2, r0
 800e9fc:	eba2 020e 	sub.w	r2, r2, lr
 800ea00:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ea04:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800ea08:	f8ad e01c 	strh.w	lr, [sp, #28]
 800ea0c:	4411      	add	r1, r2
 800ea0e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ea12:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ea16:	4413      	add	r3, r2
 800ea18:	b289      	uxth	r1, r1
 800ea1a:	b29b      	uxth	r3, r3
 800ea1c:	b208      	sxth	r0, r1
 800ea1e:	b21a      	sxth	r2, r3
 800ea20:	4290      	cmp	r0, r2
 800ea22:	bfb8      	it	lt
 800ea24:	460b      	movlt	r3, r1
 800ea26:	eba3 030c 	sub.w	r3, r3, ip
 800ea2a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ea2e:	a807      	add	r0, sp, #28
 800ea30:	f7fb fd11 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ea34:	b920      	cbnz	r0, 800ea40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800ea36:	6823      	ldr	r3, [r4, #0]
 800ea38:	a907      	add	r1, sp, #28
 800ea3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea3c:	4620      	mov	r0, r4
 800ea3e:	4798      	blx	r3
 800ea40:	f108 0801 	add.w	r8, r8, #1
 800ea44:	fa1f f888 	uxth.w	r8, r8
 800ea48:	e7a8      	b.n	800e99c <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800ea4a:	6830      	ldr	r0, [r6, #0]
 800ea4c:	6803      	ldr	r3, [r0, #0]
 800ea4e:	2101      	movs	r1, #1
 800ea50:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ea54:	4798      	blx	r3
 800ea56:	e770      	b.n	800e93a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800ea58:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ea5c:	e7e7      	b.n	800ea2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800ea5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ea60:	4798      	blx	r3
 800ea62:	4b4c      	ldr	r3, [pc, #304]	; (800eb94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800ea64:	781b      	ldrb	r3, [r3, #0]
 800ea66:	2b00      	cmp	r3, #0
 800ea68:	f43f af29 	beq.w	800e8be <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800ea6c:	2300      	movs	r3, #0
 800ea6e:	882d      	ldrh	r5, [r5, #0]
 800ea70:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800ea74:	34ea      	adds	r4, #234	; 0xea
 800ea76:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800ea7a:	42ab      	cmp	r3, r5
 800ea7c:	f67f af1f 	bls.w	800e8be <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800ea80:	ab1a      	add	r3, sp, #104	; 0x68
 800ea82:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ea86:	3b44      	subs	r3, #68	; 0x44
 800ea88:	e893 0006 	ldmia.w	r3, {r1, r2}
 800ea8c:	4620      	mov	r0, r4
 800ea8e:	3501      	adds	r5, #1
 800ea90:	f7ff fb76 	bl	800e180 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800ea94:	b2ad      	uxth	r5, r5
 800ea96:	e7ee      	b.n	800ea76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800ea98:	2b02      	cmp	r3, #2
 800ea9a:	f040 8136 	bne.w	800ed0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800ea9e:	4b3e      	ldr	r3, [pc, #248]	; (800eb98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800eaa0:	781b      	ldrb	r3, [r3, #0]
 800eaa2:	2b01      	cmp	r3, #1
 800eaa4:	d02c      	beq.n	800eb00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800eaa6:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800eaaa:	882a      	ldrh	r2, [r5, #0]
 800eaac:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800eab0:	3201      	adds	r2, #1
 800eab2:	b292      	uxth	r2, r2
 800eab4:	2900      	cmp	r1, #0
 800eab6:	d0d4      	beq.n	800ea62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800eab8:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800eabc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800eac0:	441f      	add	r7, r3
 800eac2:	b23f      	sxth	r7, r7
 800eac4:	4610      	mov	r0, r2
 800eac6:	f04f 0900 	mov.w	r9, #0
 800eaca:	b283      	uxth	r3, r0
 800eacc:	4299      	cmp	r1, r3
 800eace:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800ead2:	f240 80c5 	bls.w	800ec60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800ead6:	44a0      	add	r8, r4
 800ead8:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800eadc:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800eae0:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800eae4:	4573      	cmp	r3, lr
 800eae6:	4684      	mov	ip, r0
 800eae8:	f340 80a7 	ble.w	800ec3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800eaec:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800eaf0:	4477      	add	r7, lr
 800eaf2:	b23f      	sxth	r7, r7
 800eaf4:	429f      	cmp	r7, r3
 800eaf6:	bfa8      	it	ge
 800eaf8:	461f      	movge	r7, r3
 800eafa:	3001      	adds	r0, #1
 800eafc:	46e1      	mov	r9, ip
 800eafe:	e7e4      	b.n	800eaca <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800eb00:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800eb04:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800eb08:	f1bb 0f00 	cmp.w	fp, #0
 800eb0c:	d0a9      	beq.n	800ea62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800eb0e:	882b      	ldrh	r3, [r5, #0]
 800eb10:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800eb14:	3301      	adds	r3, #1
 800eb16:	b29b      	uxth	r3, r3
 800eb18:	f04f 0800 	mov.w	r8, #0
 800eb1c:	b299      	uxth	r1, r3
 800eb1e:	458b      	cmp	fp, r1
 800eb20:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800eb24:	d93a      	bls.n	800eb9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800eb26:	4427      	add	r7, r4
 800eb28:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800eb2c:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800eb30:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800eb34:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800eb38:	4408      	add	r0, r1
 800eb3a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800eb3e:	4471      	add	r1, lr
 800eb40:	b200      	sxth	r0, r0
 800eb42:	b209      	sxth	r1, r1
 800eb44:	4288      	cmp	r0, r1
 800eb46:	469c      	mov	ip, r3
 800eb48:	da06      	bge.n	800eb58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800eb4a:	4586      	cmp	lr, r0
 800eb4c:	4672      	mov	r2, lr
 800eb4e:	bfb8      	it	lt
 800eb50:	4602      	movlt	r2, r0
 800eb52:	3301      	adds	r3, #1
 800eb54:	46e0      	mov	r8, ip
 800eb56:	e7e1      	b.n	800eb1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800eb58:	d10b      	bne.n	800eb72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800eb5a:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800eb5e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800eb62:	458c      	cmp	ip, r1
 800eb64:	bfb4      	ite	lt
 800eb66:	469c      	movlt	ip, r3
 800eb68:	46c4      	movge	ip, r8
 800eb6a:	4572      	cmp	r2, lr
 800eb6c:	bfb8      	it	lt
 800eb6e:	4672      	movlt	r2, lr
 800eb70:	e7ef      	b.n	800eb52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800eb72:	428a      	cmp	r2, r1
 800eb74:	bfb8      	it	lt
 800eb76:	460a      	movlt	r2, r1
 800eb78:	46c4      	mov	ip, r8
 800eb7a:	e7ea      	b.n	800eb52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800eb7c:	2000a844 	.word	0x2000a844
 800eb80:	2000a850 	.word	0x2000a850
 800eb84:	20000060 	.word	0x20000060
 800eb88:	2000a80c 	.word	0x2000a80c
 800eb8c:	2000a802 	.word	0x2000a802
 800eb90:	2000a800 	.word	0x2000a800
 800eb94:	2000a80a 	.word	0x2000a80a
 800eb98:	2000a804 	.word	0x2000a804
 800eb9c:	19e1      	adds	r1, r4, r7
 800eb9e:	ab07      	add	r3, sp, #28
 800eba0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800eba4:	6849      	ldr	r1, [r1, #4]
 800eba6:	c303      	stmia	r3!, {r0, r1}
 800eba8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ebac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ebb0:	2b13      	cmp	r3, #19
 800ebb2:	bfd8      	it	le
 800ebb4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800ebb8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ebbc:	440b      	add	r3, r1
 800ebbe:	1a9b      	subs	r3, r3, r2
 800ebc0:	a807      	add	r0, sp, #28
 800ebc2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ebc6:	f7ff f835 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ebca:	a807      	add	r0, sp, #28
 800ebcc:	f7fb fc43 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ebd0:	2800      	cmp	r0, #0
 800ebd2:	d197      	bne.n	800eb04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ebd4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ebd8:	6830      	ldr	r0, [r6, #0]
 800ebda:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ebde:	f8d0 e000 	ldr.w	lr, [r0]
 800ebe2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ebe6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ebea:	f1bc 0f14 	cmp.w	ip, #20
 800ebee:	bfa8      	it	ge
 800ebf0:	f04f 0c14 	movge.w	ip, #20
 800ebf4:	fa1f fc8c 	uxth.w	ip, ip
 800ebf8:	f8cd c000 	str.w	ip, [sp]
 800ebfc:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800ec00:	47d0      	blx	sl
 800ec02:	4682      	mov	sl, r0
 800ec04:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ec08:	a807      	add	r0, sp, #28
 800ec0a:	f7fe fff9 	bl	800dc00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ec0e:	6823      	ldr	r3, [r4, #0]
 800ec10:	4427      	add	r7, r4
 800ec12:	4620      	mov	r0, r4
 800ec14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ec16:	a907      	add	r1, sp, #28
 800ec18:	4798      	blx	r3
 800ec1a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800ec1e:	eba0 000a 	sub.w	r0, r0, sl
 800ec22:	b200      	sxth	r0, r0
 800ec24:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800ec28:	2800      	cmp	r0, #0
 800ec2a:	f47f af6b 	bne.w	800eb04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ec2e:	fa1f f188 	uxth.w	r1, r8
 800ec32:	4648      	mov	r0, r9
 800ec34:	f7ff fa82 	bl	800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ec38:	e764      	b.n	800eb04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ec3a:	d10c      	bne.n	800ec56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800ec3c:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800ec40:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800ec44:	45e6      	cmp	lr, ip
 800ec46:	bfb4      	ite	lt
 800ec48:	4684      	movlt	ip, r0
 800ec4a:	46cc      	movge	ip, r9
 800ec4c:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800ec50:	4473      	add	r3, lr
 800ec52:	b21b      	sxth	r3, r3
 800ec54:	e74e      	b.n	800eaf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800ec56:	4577      	cmp	r7, lr
 800ec58:	bfa8      	it	ge
 800ec5a:	4677      	movge	r7, lr
 800ec5c:	46cc      	mov	ip, r9
 800ec5e:	e74c      	b.n	800eafa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800ec60:	eb0a 0008 	add.w	r0, sl, r8
 800ec64:	44a0      	add	r8, r4
 800ec66:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800ec6a:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800ec6e:	f1bb 0f13 	cmp.w	fp, #19
 800ec72:	bfde      	ittt	le
 800ec74:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800ec78:	445f      	addle	r7, fp
 800ec7a:	b23f      	sxthle	r7, r7
 800ec7c:	f7fb fbeb 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec80:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ec84:	2800      	cmp	r0, #0
 800ec86:	f47f af15 	bne.w	800eab4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800ec8a:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800ec8e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ec92:	1abf      	subs	r7, r7, r2
 800ec94:	2f14      	cmp	r7, #20
 800ec96:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800ec9a:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800ec9e:	6830      	ldr	r0, [r6, #0]
 800eca0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eca4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eca8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ecac:	bfa8      	it	ge
 800ecae:	2714      	movge	r7, #20
 800ecb0:	f8d0 c000 	ldr.w	ip, [r0]
 800ecb4:	b2bf      	uxth	r7, r7
 800ecb6:	fa1f fb8b 	uxth.w	fp, fp
 800ecba:	455f      	cmp	r7, fp
 800ecbc:	bf94      	ite	ls
 800ecbe:	9700      	strls	r7, [sp, #0]
 800ecc0:	f8cd b000 	strhi.w	fp, [sp]
 800ecc4:	b292      	uxth	r2, r2
 800ecc6:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800ecca:	b29b      	uxth	r3, r3
 800eccc:	b289      	uxth	r1, r1
 800ecce:	47b8      	blx	r7
 800ecd0:	6823      	ldr	r3, [r4, #0]
 800ecd2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ecd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ecd8:	a907      	add	r1, sp, #28
 800ecda:	4620      	mov	r0, r4
 800ecdc:	4798      	blx	r3
 800ecde:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800ece2:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800ece6:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800ecea:	1a5b      	subs	r3, r3, r1
 800ecec:	440a      	add	r2, r1
 800ecee:	b21b      	sxth	r3, r3
 800ecf0:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800ecf4:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	f47f aed6 	bne.w	800eaaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800ecfe:	fa1f f189 	uxth.w	r1, r9
 800ed02:	4650      	mov	r0, sl
 800ed04:	f7ff fa1a 	bl	800e13c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ed08:	e6cf      	b.n	800eaaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800ed0a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ed0e:	42bb      	cmp	r3, r7
 800ed10:	f67f aea7 	bls.w	800ea62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ed14:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800ed18:	ab07      	add	r3, sp, #28
 800ed1a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ed1e:	6851      	ldr	r1, [r2, #4]
 800ed20:	c303      	stmia	r3!, {r0, r1}
 800ed22:	a807      	add	r0, sp, #28
 800ed24:	f7fb fb97 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed28:	b920      	cbnz	r0, 800ed34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800ed2a:	6823      	ldr	r3, [r4, #0]
 800ed2c:	a907      	add	r1, sp, #28
 800ed2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ed30:	4620      	mov	r0, r4
 800ed32:	4798      	blx	r3
 800ed34:	3701      	adds	r7, #1
 800ed36:	b2bf      	uxth	r7, r7
 800ed38:	e7e7      	b.n	800ed0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800ed3a:	bf00      	nop

0800ed3c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ed3c:	4b03      	ldr	r3, [pc, #12]	; (800ed4c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ed3e:	2200      	movs	r2, #0
 800ed40:	801a      	strh	r2, [r3, #0]
 800ed42:	805a      	strh	r2, [r3, #2]
 800ed44:	809a      	strh	r2, [r3, #4]
 800ed46:	80da      	strh	r2, [r3, #6]
 800ed48:	4770      	bx	lr
 800ed4a:	bf00      	nop
 800ed4c:	2000a850 	.word	0x2000a850

0800ed50 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ed50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed54:	4606      	mov	r6, r0
 800ed56:	b09d      	sub	sp, #116	; 0x74
 800ed58:	a803      	add	r0, sp, #12
 800ed5a:	4614      	mov	r4, r2
 800ed5c:	468a      	mov	sl, r1
 800ed5e:	461d      	mov	r5, r3
 800ed60:	f000 fd9d 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800ed64:	6833      	ldr	r3, [r6, #0]
 800ed66:	4630      	mov	r0, r6
 800ed68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed6a:	4798      	blx	r3
 800ed6c:	6833      	ldr	r3, [r6, #0]
 800ed6e:	4607      	mov	r7, r0
 800ed70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ed72:	4630      	mov	r0, r6
 800ed74:	4798      	blx	r3
 800ed76:	462a      	mov	r2, r5
 800ed78:	9000      	str	r0, [sp, #0]
 800ed7a:	4621      	mov	r1, r4
 800ed7c:	463b      	mov	r3, r7
 800ed7e:	a803      	add	r0, sp, #12
 800ed80:	f000 fdf8 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed84:	2500      	movs	r5, #0
 800ed86:	462c      	mov	r4, r5
 800ed88:	46a9      	mov	r9, r5
 800ed8a:	46a8      	mov	r8, r5
 800ed8c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ed90:	2300      	movs	r3, #0
 800ed92:	9302      	str	r3, [sp, #8]
 800ed94:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ed98:	429c      	cmp	r4, r3
 800ed9a:	d002      	beq.n	800eda2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ed9c:	455c      	cmp	r4, fp
 800ed9e:	bf18      	it	ne
 800eda0:	4625      	movne	r5, r4
 800eda2:	ab02      	add	r3, sp, #8
 800eda4:	4632      	mov	r2, r6
 800eda6:	4651      	mov	r1, sl
 800eda8:	a803      	add	r0, sp, #12
 800edaa:	f001 f8f3 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edae:	4604      	mov	r4, r0
 800edb0:	b108      	cbz	r0, 800edb6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800edb2:	280a      	cmp	r0, #10
 800edb4:	d10a      	bne.n	800edcc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800edb6:	45c1      	cmp	r9, r8
 800edb8:	bf38      	it	cc
 800edba:	46c1      	movcc	r9, r8
 800edbc:	f04f 0800 	mov.w	r8, #0
 800edc0:	2c00      	cmp	r4, #0
 800edc2:	d1e5      	bne.n	800ed90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800edc4:	4648      	mov	r0, r9
 800edc6:	b01d      	add	sp, #116	; 0x74
 800edc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edcc:	9a02      	ldr	r2, [sp, #8]
 800edce:	2a00      	cmp	r2, #0
 800edd0:	d0de      	beq.n	800ed90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800edd2:	7b57      	ldrb	r7, [r2, #13]
 800edd4:	6833      	ldr	r3, [r6, #0]
 800edd6:	8894      	ldrh	r4, [r2, #4]
 800edd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800edda:	007f      	lsls	r7, r7, #1
 800eddc:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ede0:	7a97      	ldrb	r7, [r2, #10]
 800ede2:	4629      	mov	r1, r5
 800ede4:	4307      	orrs	r7, r0
 800ede6:	4630      	mov	r0, r6
 800ede8:	4798      	blx	r3
 800edea:	4438      	add	r0, r7
 800edec:	4480      	add	r8, r0
 800edee:	fa1f f888 	uxth.w	r8, r8
 800edf2:	e7e5      	b.n	800edc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800edf4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800edf4:	b508      	push	{r3, lr}
 800edf6:	6803      	ldr	r3, [r0, #0]
 800edf8:	68db      	ldr	r3, [r3, #12]
 800edfa:	4798      	blx	r3
 800edfc:	b128      	cbz	r0, 800ee0a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800edfe:	7b43      	ldrb	r3, [r0, #13]
 800ee00:	7a80      	ldrb	r0, [r0, #10]
 800ee02:	005b      	lsls	r3, r3, #1
 800ee04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ee08:	4318      	orrs	r0, r3
 800ee0a:	bd08      	pop	{r3, pc}

0800ee0c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ee0c:	b40e      	push	{r1, r2, r3}
 800ee0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee10:	b09e      	sub	sp, #120	; 0x78
 800ee12:	ab23      	add	r3, sp, #140	; 0x8c
 800ee14:	4605      	mov	r5, r0
 800ee16:	f853 4b04 	ldr.w	r4, [r3], #4
 800ee1a:	9303      	str	r3, [sp, #12]
 800ee1c:	a805      	add	r0, sp, #20
 800ee1e:	f000 fd3e 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800ee22:	682b      	ldr	r3, [r5, #0]
 800ee24:	4628      	mov	r0, r5
 800ee26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ee28:	4798      	blx	r3
 800ee2a:	682b      	ldr	r3, [r5, #0]
 800ee2c:	4606      	mov	r6, r0
 800ee2e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ee30:	4628      	mov	r0, r5
 800ee32:	4798      	blx	r3
 800ee34:	4633      	mov	r3, r6
 800ee36:	ae1e      	add	r6, sp, #120	; 0x78
 800ee38:	4621      	mov	r1, r4
 800ee3a:	9000      	str	r0, [sp, #0]
 800ee3c:	9a03      	ldr	r2, [sp, #12]
 800ee3e:	2400      	movs	r4, #0
 800ee40:	a805      	add	r0, sp, #20
 800ee42:	f000 fd97 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ee46:	f846 4d68 	str.w	r4, [r6, #-104]!
 800ee4a:	462a      	mov	r2, r5
 800ee4c:	4633      	mov	r3, r6
 800ee4e:	4621      	mov	r1, r4
 800ee50:	a805      	add	r0, sp, #20
 800ee52:	f001 f89f 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ee56:	b1f0      	cbz	r0, 800ee96 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800ee58:	280a      	cmp	r0, #10
 800ee5a:	d018      	beq.n	800ee8e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ee5c:	9f04      	ldr	r7, [sp, #16]
 800ee5e:	b1b7      	cbz	r7, 800ee8e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ee60:	7b78      	ldrb	r0, [r7, #13]
 800ee62:	7a3b      	ldrb	r3, [r7, #8]
 800ee64:	88aa      	ldrh	r2, [r5, #4]
 800ee66:	00c1      	lsls	r1, r0, #3
 800ee68:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ee6c:	4319      	orrs	r1, r3
 800ee6e:	0643      	lsls	r3, r0, #25
 800ee70:	bf44      	itt	mi
 800ee72:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800ee76:	b219      	sxthmi	r1, r3
 800ee78:	0100      	lsls	r0, r0, #4
 800ee7a:	79fb      	ldrb	r3, [r7, #7]
 800ee7c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ee80:	4303      	orrs	r3, r0
 800ee82:	4413      	add	r3, r2
 800ee84:	1a5b      	subs	r3, r3, r1
 800ee86:	b29b      	uxth	r3, r3
 800ee88:	42a3      	cmp	r3, r4
 800ee8a:	bfc8      	it	gt
 800ee8c:	b21c      	sxthgt	r4, r3
 800ee8e:	4633      	mov	r3, r6
 800ee90:	462a      	mov	r2, r5
 800ee92:	2100      	movs	r1, #0
 800ee94:	e7dc      	b.n	800ee50 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800ee96:	b2a0      	uxth	r0, r4
 800ee98:	b01e      	add	sp, #120	; 0x78
 800ee9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ee9e:	b003      	add	sp, #12
 800eea0:	4770      	bx	lr

0800eea2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800eea2:	b40e      	push	{r1, r2, r3}
 800eea4:	b570      	push	{r4, r5, r6, lr}
 800eea6:	b09d      	sub	sp, #116	; 0x74
 800eea8:	ab21      	add	r3, sp, #132	; 0x84
 800eeaa:	4604      	mov	r4, r0
 800eeac:	f853 5b04 	ldr.w	r5, [r3], #4
 800eeb0:	9302      	str	r3, [sp, #8]
 800eeb2:	a803      	add	r0, sp, #12
 800eeb4:	f000 fcf3 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800eeb8:	6823      	ldr	r3, [r4, #0]
 800eeba:	4620      	mov	r0, r4
 800eebc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eebe:	4798      	blx	r3
 800eec0:	6823      	ldr	r3, [r4, #0]
 800eec2:	4606      	mov	r6, r0
 800eec4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eec6:	4620      	mov	r0, r4
 800eec8:	4798      	blx	r3
 800eeca:	4633      	mov	r3, r6
 800eecc:	9000      	str	r0, [sp, #0]
 800eece:	9a02      	ldr	r2, [sp, #8]
 800eed0:	4629      	mov	r1, r5
 800eed2:	a803      	add	r0, sp, #12
 800eed4:	f000 fd4e 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800eed8:	a803      	add	r0, sp, #12
 800eeda:	f001 f955 	bl	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eede:	2401      	movs	r4, #1
 800eee0:	b2a3      	uxth	r3, r4
 800eee2:	b140      	cbz	r0, 800eef6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800eee4:	280a      	cmp	r0, #10
 800eee6:	bf08      	it	eq
 800eee8:	3301      	addeq	r3, #1
 800eeea:	a803      	add	r0, sp, #12
 800eeec:	bf08      	it	eq
 800eeee:	b21c      	sxtheq	r4, r3
 800eef0:	f001 f94a 	bl	8010188 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eef4:	e7f4      	b.n	800eee0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800eef6:	4618      	mov	r0, r3
 800eef8:	b01d      	add	sp, #116	; 0x74
 800eefa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eefe:	b003      	add	sp, #12
 800ef00:	4770      	bx	lr

0800ef02 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ef02:	b40e      	push	{r1, r2, r3}
 800ef04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef06:	b09e      	sub	sp, #120	; 0x78
 800ef08:	ab23      	add	r3, sp, #140	; 0x8c
 800ef0a:	4604      	mov	r4, r0
 800ef0c:	f853 5b04 	ldr.w	r5, [r3], #4
 800ef10:	9303      	str	r3, [sp, #12]
 800ef12:	a805      	add	r0, sp, #20
 800ef14:	f000 fcc3 	bl	800f89e <_ZN8touchgfx12TextProviderC1Ev>
 800ef18:	6823      	ldr	r3, [r4, #0]
 800ef1a:	4620      	mov	r0, r4
 800ef1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ef1e:	4798      	blx	r3
 800ef20:	6823      	ldr	r3, [r4, #0]
 800ef22:	4606      	mov	r6, r0
 800ef24:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ef26:	4620      	mov	r0, r4
 800ef28:	4798      	blx	r3
 800ef2a:	4633      	mov	r3, r6
 800ef2c:	4629      	mov	r1, r5
 800ef2e:	9000      	str	r0, [sp, #0]
 800ef30:	9a03      	ldr	r2, [sp, #12]
 800ef32:	a805      	add	r0, sp, #20
 800ef34:	ad1e      	add	r5, sp, #120	; 0x78
 800ef36:	f000 fd1d 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef3a:	2100      	movs	r1, #0
 800ef3c:	f845 1d68 	str.w	r1, [r5, #-104]!
 800ef40:	4622      	mov	r2, r4
 800ef42:	462b      	mov	r3, r5
 800ef44:	a805      	add	r0, sp, #20
 800ef46:	f001 f825 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef4a:	26ff      	movs	r6, #255	; 0xff
 800ef4c:	b1d8      	cbz	r0, 800ef86 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800ef4e:	280a      	cmp	r0, #10
 800ef50:	d012      	beq.n	800ef78 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800ef52:	9804      	ldr	r0, [sp, #16]
 800ef54:	b180      	cbz	r0, 800ef78 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800ef56:	7b47      	ldrb	r7, [r0, #13]
 800ef58:	7922      	ldrb	r2, [r4, #4]
 800ef5a:	00fb      	lsls	r3, r7, #3
 800ef5c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ef60:	7a03      	ldrb	r3, [r0, #8]
 800ef62:	430b      	orrs	r3, r1
 800ef64:	0679      	lsls	r1, r7, #25
 800ef66:	bf44      	itt	mi
 800ef68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ef6c:	b21b      	sxthmi	r3, r3
 800ef6e:	1ad3      	subs	r3, r2, r3
 800ef70:	b2db      	uxtb	r3, r3
 800ef72:	429e      	cmp	r6, r3
 800ef74:	bf28      	it	cs
 800ef76:	461e      	movcs	r6, r3
 800ef78:	462b      	mov	r3, r5
 800ef7a:	4622      	mov	r2, r4
 800ef7c:	2100      	movs	r1, #0
 800ef7e:	a805      	add	r0, sp, #20
 800ef80:	f001 f808 	bl	800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef84:	e7e2      	b.n	800ef4c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800ef86:	4630      	mov	r0, r6
 800ef88:	b01e      	add	sp, #120	; 0x78
 800ef8a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ef8e:	b003      	add	sp, #12
 800ef90:	4770      	bx	lr

0800ef92 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ef92:	b513      	push	{r0, r1, r4, lr}
 800ef94:	6803      	ldr	r3, [r0, #0]
 800ef96:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ef9a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ef9e:	f8ad 1004 	strh.w	r1, [sp, #4]
 800efa2:	2400      	movs	r4, #0
 800efa4:	9400      	str	r4, [sp, #0]
 800efa6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800efaa:	691b      	ldr	r3, [r3, #16]
 800efac:	4669      	mov	r1, sp
 800efae:	4798      	blx	r3
 800efb0:	b002      	add	sp, #8
 800efb2:	bd10      	pop	{r4, pc}

0800efb4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800efb4:	b538      	push	{r3, r4, r5, lr}
 800efb6:	680b      	ldr	r3, [r1, #0]
 800efb8:	460c      	mov	r4, r1
 800efba:	68db      	ldr	r3, [r3, #12]
 800efbc:	4605      	mov	r5, r0
 800efbe:	4798      	blx	r3
 800efc0:	6823      	ldr	r3, [r4, #0]
 800efc2:	4620      	mov	r0, r4
 800efc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efc6:	4629      	mov	r1, r5
 800efc8:	4798      	blx	r3
 800efca:	4628      	mov	r0, r5
 800efcc:	bd38      	pop	{r3, r4, r5, pc}

0800efce <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800efce:	b410      	push	{r4}
 800efd0:	880a      	ldrh	r2, [r1, #0]
 800efd2:	8884      	ldrh	r4, [r0, #4]
 800efd4:	4422      	add	r2, r4
 800efd6:	800a      	strh	r2, [r1, #0]
 800efd8:	88c4      	ldrh	r4, [r0, #6]
 800efda:	884a      	ldrh	r2, [r1, #2]
 800efdc:	4422      	add	r2, r4
 800efde:	804a      	strh	r2, [r1, #2]
 800efe0:	6940      	ldr	r0, [r0, #20]
 800efe2:	b120      	cbz	r0, 800efee <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800efe4:	6803      	ldr	r3, [r0, #0]
 800efe6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efec:	4718      	bx	r3
 800efee:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eff2:	4770      	bx	lr

0800eff4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800eff4:	b570      	push	{r4, r5, r6, lr}
 800eff6:	8882      	ldrh	r2, [r0, #4]
 800eff8:	880b      	ldrh	r3, [r1, #0]
 800effa:	4413      	add	r3, r2
 800effc:	800b      	strh	r3, [r1, #0]
 800effe:	88c2      	ldrh	r2, [r0, #6]
 800f000:	884b      	ldrh	r3, [r1, #2]
 800f002:	460c      	mov	r4, r1
 800f004:	4413      	add	r3, r2
 800f006:	804b      	strh	r3, [r1, #2]
 800f008:	4605      	mov	r5, r0
 800f00a:	1d01      	adds	r1, r0, #4
 800f00c:	4620      	mov	r0, r4
 800f00e:	f7fb f9df 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f012:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f016:	2b00      	cmp	r3, #0
 800f018:	dd0b      	ble.n	800f032 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f01a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f01e:	2b00      	cmp	r3, #0
 800f020:	dd07      	ble.n	800f032 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f022:	6968      	ldr	r0, [r5, #20]
 800f024:	b128      	cbz	r0, 800f032 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f026:	6803      	ldr	r3, [r0, #0]
 800f028:	4621      	mov	r1, r4
 800f02a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f02c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f030:	4718      	bx	r3
 800f032:	bd70      	pop	{r4, r5, r6, pc}

0800f034 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f034:	b570      	push	{r4, r5, r6, lr}
 800f036:	8882      	ldrh	r2, [r0, #4]
 800f038:	880b      	ldrh	r3, [r1, #0]
 800f03a:	4413      	add	r3, r2
 800f03c:	800b      	strh	r3, [r1, #0]
 800f03e:	88c2      	ldrh	r2, [r0, #6]
 800f040:	884b      	ldrh	r3, [r1, #2]
 800f042:	460c      	mov	r4, r1
 800f044:	4413      	add	r3, r2
 800f046:	804b      	strh	r3, [r1, #2]
 800f048:	4605      	mov	r5, r0
 800f04a:	1d01      	adds	r1, r0, #4
 800f04c:	4620      	mov	r0, r4
 800f04e:	f7fb f9bf 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f052:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f056:	2b00      	cmp	r3, #0
 800f058:	dd18      	ble.n	800f08c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f05a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f05e:	2b00      	cmp	r3, #0
 800f060:	dd14      	ble.n	800f08c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f062:	6968      	ldr	r0, [r5, #20]
 800f064:	b128      	cbz	r0, 800f072 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f066:	6803      	ldr	r3, [r0, #0]
 800f068:	4621      	mov	r1, r4
 800f06a:	691b      	ldr	r3, [r3, #16]
 800f06c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f070:	4718      	bx	r3
 800f072:	4b07      	ldr	r3, [pc, #28]	; (800f090 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f074:	681b      	ldr	r3, [r3, #0]
 800f076:	3304      	adds	r3, #4
 800f078:	429d      	cmp	r5, r3
 800f07a:	d107      	bne.n	800f08c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f07c:	f7fe fffc 	bl	800e078 <_ZN8touchgfx11Application11getInstanceEv>
 800f080:	6821      	ldr	r1, [r4, #0]
 800f082:	6862      	ldr	r2, [r4, #4]
 800f084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f088:	f7ff b89c 	b.w	800e1c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f08c:	bd70      	pop	{r4, r5, r6, pc}
 800f08e:	bf00      	nop
 800f090:	2000a848 	.word	0x2000a848

0800f094 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f094:	b570      	push	{r4, r5, r6, lr}
 800f096:	4604      	mov	r4, r0
 800f098:	4616      	mov	r6, r2
 800f09a:	460d      	mov	r5, r1
 800f09c:	b901      	cbnz	r1, 800f0a0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f09e:	b192      	cbz	r2, 800f0c6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f0a0:	6823      	ldr	r3, [r4, #0]
 800f0a2:	4620      	mov	r0, r4
 800f0a4:	699b      	ldr	r3, [r3, #24]
 800f0a6:	4798      	blx	r3
 800f0a8:	88e2      	ldrh	r2, [r4, #6]
 800f0aa:	88a1      	ldrh	r1, [r4, #4]
 800f0ac:	4432      	add	r2, r6
 800f0ae:	4429      	add	r1, r5
 800f0b0:	4620      	mov	r0, r4
 800f0b2:	b212      	sxth	r2, r2
 800f0b4:	b209      	sxth	r1, r1
 800f0b6:	f7f3 f847 	bl	8002148 <_ZN8touchgfx8Drawable5setXYEss>
 800f0ba:	6823      	ldr	r3, [r4, #0]
 800f0bc:	4620      	mov	r0, r4
 800f0be:	699b      	ldr	r3, [r3, #24]
 800f0c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0c4:	4718      	bx	r3
 800f0c6:	bd70      	pop	{r4, r5, r6, pc}

0800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f0c8:	b510      	push	{r4, lr}
 800f0ca:	4604      	mov	r4, r0
 800f0cc:	4608      	mov	r0, r1
 800f0ce:	2300      	movs	r3, #0
 800f0d0:	8023      	strh	r3, [r4, #0]
 800f0d2:	8063      	strh	r3, [r4, #2]
 800f0d4:	6803      	ldr	r3, [r0, #0]
 800f0d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f0da:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f0de:	80a1      	strh	r1, [r4, #4]
 800f0e0:	80e2      	strh	r2, [r4, #6]
 800f0e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f0e4:	4621      	mov	r1, r4
 800f0e6:	4798      	blx	r3
 800f0e8:	4620      	mov	r0, r4
 800f0ea:	bd10      	pop	{r4, pc}

0800f0ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800f0ec:	b530      	push	{r4, r5, lr}
 800f0ee:	8083      	strh	r3, [r0, #4]
 800f0f0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800f0f4:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800f0f8:	7183      	strb	r3, [r0, #6]
 800f0fa:	79c3      	ldrb	r3, [r0, #7]
 800f0fc:	6101      	str	r1, [r0, #16]
 800f0fe:	f365 0306 	bfi	r3, r5, #0, #7
 800f102:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800f106:	8282      	strh	r2, [r0, #20]
 800f108:	f365 13c7 	bfi	r3, r5, #7, #1
 800f10c:	71c3      	strb	r3, [r0, #7]
 800f10e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800f112:	7203      	strb	r3, [r0, #8]
 800f114:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800f118:	7243      	strb	r3, [r0, #9]
 800f11a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f11e:	8143      	strh	r3, [r0, #10]
 800f120:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800f124:	8183      	strh	r3, [r0, #12]
 800f126:	4b01      	ldr	r3, [pc, #4]	; (800f12c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800f128:	6003      	str	r3, [r0, #0]
 800f12a:	bd30      	pop	{r4, r5, pc}
 800f12c:	08020808 	.word	0x08020808

0800f130 <_ZNK8touchgfx9ConstFont4findEt>:
 800f130:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f132:	6904      	ldr	r4, [r0, #16]
 800f134:	b3bc      	cbz	r4, 800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f136:	88a3      	ldrh	r3, [r4, #4]
 800f138:	8a82      	ldrh	r2, [r0, #20]
 800f13a:	1acb      	subs	r3, r1, r3
 800f13c:	f102 32ff 	add.w	r2, r2, #4294967295
 800f140:	d431      	bmi.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f142:	4293      	cmp	r3, r2
 800f144:	dd0c      	ble.n	800f160 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f146:	230e      	movs	r3, #14
 800f148:	fb03 4302 	mla	r3, r3, r2, r4
 800f14c:	889b      	ldrh	r3, [r3, #4]
 800f14e:	1a5b      	subs	r3, r3, r1
 800f150:	1ad3      	subs	r3, r2, r3
 800f152:	429a      	cmp	r2, r3
 800f154:	db27      	blt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f156:	2b00      	cmp	r3, #0
 800f158:	bfbc      	itt	lt
 800f15a:	2302      	movlt	r3, #2
 800f15c:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f160:	2500      	movs	r5, #0
 800f162:	260e      	movs	r6, #14
 800f164:	4295      	cmp	r5, r2
 800f166:	dc1e      	bgt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f168:	fb06 4003 	mla	r0, r6, r3, r4
 800f16c:	8887      	ldrh	r7, [r0, #4]
 800f16e:	42b9      	cmp	r1, r7
 800f170:	d01a      	beq.n	800f1a8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f172:	d20d      	bcs.n	800f190 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f174:	1e5a      	subs	r2, r3, #1
 800f176:	4295      	cmp	r5, r2
 800f178:	dc15      	bgt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f17a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f17e:	1a5b      	subs	r3, r3, r1
 800f180:	1ad3      	subs	r3, r2, r3
 800f182:	429a      	cmp	r2, r3
 800f184:	db0f      	blt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f186:	429d      	cmp	r5, r3
 800f188:	ddec      	ble.n	800f164 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f18a:	1953      	adds	r3, r2, r5
 800f18c:	105b      	asrs	r3, r3, #1
 800f18e:	e7e9      	b.n	800f164 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f190:	1c5d      	adds	r5, r3, #1
 800f192:	42aa      	cmp	r2, r5
 800f194:	db07      	blt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f196:	8a43      	ldrh	r3, [r0, #18]
 800f198:	1acb      	subs	r3, r1, r3
 800f19a:	442b      	add	r3, r5
 800f19c:	429d      	cmp	r5, r3
 800f19e:	dc02      	bgt.n	800f1a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f1a0:	429a      	cmp	r2, r3
 800f1a2:	dadf      	bge.n	800f164 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f1a4:	e7f1      	b.n	800f18a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f1a6:	2000      	movs	r0, #0
 800f1a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f1aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1ac:	4604      	mov	r4, r0
 800f1ae:	4617      	mov	r7, r2
 800f1b0:	461e      	mov	r6, r3
 800f1b2:	b911      	cbnz	r1, 800f1ba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f1b4:	2500      	movs	r5, #0
 800f1b6:	4628      	mov	r0, r5
 800f1b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1ba:	290a      	cmp	r1, #10
 800f1bc:	d0fa      	beq.n	800f1b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1be:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f1c2:	4291      	cmp	r1, r2
 800f1c4:	d0f6      	beq.n	800f1b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1c6:	f242 020b 	movw	r2, #8203	; 0x200b
 800f1ca:	4291      	cmp	r1, r2
 800f1cc:	d0f2      	beq.n	800f1b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1ce:	f7ff ffaf 	bl	800f130 <_ZNK8touchgfx9ConstFont4findEt>
 800f1d2:	4605      	mov	r5, r0
 800f1d4:	b950      	cbnz	r0, 800f1ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f1d6:	6823      	ldr	r3, [r4, #0]
 800f1d8:	4620      	mov	r0, r4
 800f1da:	691b      	ldr	r3, [r3, #16]
 800f1dc:	4798      	blx	r3
 800f1de:	4601      	mov	r1, r0
 800f1e0:	4620      	mov	r0, r4
 800f1e2:	f7ff ffa5 	bl	800f130 <_ZNK8touchgfx9ConstFont4findEt>
 800f1e6:	4605      	mov	r5, r0
 800f1e8:	2800      	cmp	r0, #0
 800f1ea:	d0e3      	beq.n	800f1b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1ec:	6823      	ldr	r3, [r4, #0]
 800f1ee:	4629      	mov	r1, r5
 800f1f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f1f2:	4620      	mov	r0, r4
 800f1f4:	4798      	blx	r3
 800f1f6:	6038      	str	r0, [r7, #0]
 800f1f8:	6823      	ldr	r3, [r4, #0]
 800f1fa:	4620      	mov	r0, r4
 800f1fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f1fe:	4798      	blx	r3
 800f200:	7030      	strb	r0, [r6, #0]
 800f202:	e7d8      	b.n	800f1b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f204 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f204:	2000      	movs	r0, #0
 800f206:	4770      	bx	lr

0800f208 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f208:	2001      	movs	r0, #1
 800f20a:	4770      	bx	lr

0800f20c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f20c:	2002      	movs	r0, #2
 800f20e:	4770      	bx	lr

0800f210 <_ZN8touchgfx6ScreenD1Ev>:
 800f210:	4770      	bx	lr

0800f212 <_ZN8touchgfx12GestureEventD1Ev>:
 800f212:	4770      	bx	lr

0800f214 <_ZN8touchgfx9DragEventD1Ev>:
 800f214:	4770      	bx	lr

0800f216 <_ZN8touchgfx10ClickEventD1Ev>:
 800f216:	4770      	bx	lr

0800f218 <_ZN8touchgfx10ClickEventD0Ev>:
 800f218:	b510      	push	{r4, lr}
 800f21a:	210c      	movs	r1, #12
 800f21c:	4604      	mov	r4, r0
 800f21e:	f00d fd1f 	bl	801cc60 <_ZdlPvj>
 800f222:	4620      	mov	r0, r4
 800f224:	bd10      	pop	{r4, pc}

0800f226 <_ZN8touchgfx9DragEventD0Ev>:
 800f226:	b510      	push	{r4, lr}
 800f228:	2110      	movs	r1, #16
 800f22a:	4604      	mov	r4, r0
 800f22c:	f00d fd18 	bl	801cc60 <_ZdlPvj>
 800f230:	4620      	mov	r0, r4
 800f232:	bd10      	pop	{r4, pc}

0800f234 <_ZN8touchgfx12GestureEventD0Ev>:
 800f234:	b510      	push	{r4, lr}
 800f236:	210c      	movs	r1, #12
 800f238:	4604      	mov	r4, r0
 800f23a:	f00d fd11 	bl	801cc60 <_ZdlPvj>
 800f23e:	4620      	mov	r0, r4
 800f240:	bd10      	pop	{r4, pc}

0800f242 <_ZN8touchgfx6ScreenD0Ev>:
 800f242:	b510      	push	{r4, lr}
 800f244:	213c      	movs	r1, #60	; 0x3c
 800f246:	4604      	mov	r4, r0
 800f248:	f00d fd0a 	bl	801cc60 <_ZdlPvj>
 800f24c:	4620      	mov	r0, r4
 800f24e:	bd10      	pop	{r4, pc}

0800f250 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f250:	b530      	push	{r4, r5, lr}
 800f252:	460d      	mov	r5, r1
 800f254:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f256:	b087      	sub	sp, #28
 800f258:	4604      	mov	r4, r0
 800f25a:	b301      	cbz	r1, 800f29e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f25c:	a801      	add	r0, sp, #4
 800f25e:	f7ff ff33 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f262:	892a      	ldrh	r2, [r5, #8]
 800f264:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f268:	7928      	ldrb	r0, [r5, #4]
 800f26a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f26e:	f88d 0010 	strb.w	r0, [sp, #16]
 800f272:	1ad2      	subs	r2, r2, r3
 800f274:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f276:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f278:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f27c:	441a      	add	r2, r3
 800f27e:	896b      	ldrh	r3, [r5, #10]
 800f280:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f284:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f288:	1b5b      	subs	r3, r3, r5
 800f28a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f28c:	442b      	add	r3, r5
 800f28e:	4d05      	ldr	r5, [pc, #20]	; (800f2a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f290:	9503      	str	r5, [sp, #12]
 800f292:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f296:	6803      	ldr	r3, [r0, #0]
 800f298:	a903      	add	r1, sp, #12
 800f29a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f29c:	4798      	blx	r3
 800f29e:	b007      	add	sp, #28
 800f2a0:	bd30      	pop	{r4, r5, pc}
 800f2a2:	bf00      	nop
 800f2a4:	08020888 	.word	0x08020888

0800f2a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f2a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2ac:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f2ae:	b08a      	sub	sp, #40	; 0x28
 800f2b0:	4604      	mov	r4, r0
 800f2b2:	460d      	mov	r5, r1
 800f2b4:	b113      	cbz	r3, 800f2bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f2b6:	790b      	ldrb	r3, [r1, #4]
 800f2b8:	2b00      	cmp	r3, #0
 800f2ba:	d044      	beq.n	800f346 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f2bc:	f104 0804 	add.w	r8, r4, #4
 800f2c0:	4641      	mov	r1, r8
 800f2c2:	a803      	add	r0, sp, #12
 800f2c4:	f7ff ff00 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2c8:	792b      	ldrb	r3, [r5, #4]
 800f2ca:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f2ce:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f2d2:	b983      	cbnz	r3, 800f2f6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f2d4:	892a      	ldrh	r2, [r5, #8]
 800f2d6:	88e9      	ldrh	r1, [r5, #6]
 800f2d8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800f2dc:	1b92      	subs	r2, r2, r6
 800f2de:	1bc9      	subs	r1, r1, r7
 800f2e0:	9301      	str	r3, [sp, #4]
 800f2e2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800f2e6:	9300      	str	r3, [sp, #0]
 800f2e8:	b212      	sxth	r2, r2
 800f2ea:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f2ee:	b209      	sxth	r1, r1
 800f2f0:	4640      	mov	r0, r8
 800f2f2:	f7fa ff89 	bl	800a208 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f2f6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f2f8:	b329      	cbz	r1, 800f346 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f2fa:	a805      	add	r0, sp, #20
 800f2fc:	f7ff fee4 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f300:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f304:	792b      	ldrb	r3, [r5, #4]
 800f306:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f308:	f88d 3020 	strb.w	r3, [sp, #32]
 800f30c:	1abf      	subs	r7, r7, r2
 800f30e:	88ea      	ldrh	r2, [r5, #6]
 800f310:	4417      	add	r7, r2
 800f312:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800f314:	4417      	add	r7, r2
 800f316:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f31a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800f31e:	1ab6      	subs	r6, r6, r2
 800f320:	892a      	ldrh	r2, [r5, #8]
 800f322:	4416      	add	r6, r2
 800f324:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f326:	4416      	add	r6, r2
 800f328:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800f32c:	4a07      	ldr	r2, [pc, #28]	; (800f34c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f32e:	9207      	str	r2, [sp, #28]
 800f330:	2600      	movs	r6, #0
 800f332:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800f336:	6803      	ldr	r3, [r0, #0]
 800f338:	a907      	add	r1, sp, #28
 800f33a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f33c:	4798      	blx	r3
 800f33e:	792b      	ldrb	r3, [r5, #4]
 800f340:	b10b      	cbz	r3, 800f346 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f342:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f346:	b00a      	add	sp, #40	; 0x28
 800f348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f34c:	08020860 	.word	0x08020860

0800f350 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f354:	460c      	mov	r4, r1
 800f356:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f358:	b088      	sub	sp, #32
 800f35a:	4605      	mov	r5, r0
 800f35c:	2900      	cmp	r1, #0
 800f35e:	d06d      	beq.n	800f43c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f360:	4668      	mov	r0, sp
 800f362:	f7ff feb1 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f366:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800f368:	88e3      	ldrh	r3, [r4, #6]
 800f36a:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f36e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f372:	440b      	add	r3, r1
 800f374:	b21b      	sxth	r3, r3
 800f376:	4543      	cmp	r3, r8
 800f378:	db31      	blt.n	800f3de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f37a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f37e:	44c4      	add	ip, r8
 800f380:	fa0f fc8c 	sxth.w	ip, ip
 800f384:	4563      	cmp	r3, ip
 800f386:	da2a      	bge.n	800f3de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f388:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800f38a:	8926      	ldrh	r6, [r4, #8]
 800f38c:	4416      	add	r6, r2
 800f38e:	b236      	sxth	r6, r6
 800f390:	42be      	cmp	r6, r7
 800f392:	db24      	blt.n	800f3de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f394:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f398:	4438      	add	r0, r7
 800f39a:	b200      	sxth	r0, r0
 800f39c:	4286      	cmp	r6, r0
 800f39e:	da1e      	bge.n	800f3de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3a0:	8963      	ldrh	r3, [r4, #10]
 800f3a2:	4419      	add	r1, r3
 800f3a4:	b209      	sxth	r1, r1
 800f3a6:	4541      	cmp	r1, r8
 800f3a8:	db08      	blt.n	800f3bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3aa:	4561      	cmp	r1, ip
 800f3ac:	da06      	bge.n	800f3bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3ae:	89a3      	ldrh	r3, [r4, #12]
 800f3b0:	441a      	add	r2, r3
 800f3b2:	b212      	sxth	r2, r2
 800f3b4:	42ba      	cmp	r2, r7
 800f3b6:	db01      	blt.n	800f3bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3b8:	4282      	cmp	r2, r0
 800f3ba:	db10      	blt.n	800f3de <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3bc:	4b21      	ldr	r3, [pc, #132]	; (800f444 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f3be:	9304      	str	r3, [sp, #16]
 800f3c0:	2302      	movs	r3, #2
 800f3c2:	f88d 3014 	strb.w	r3, [sp, #20]
 800f3c6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f3c8:	2300      	movs	r3, #0
 800f3ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f3ce:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f3d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f3d6:	6803      	ldr	r3, [r0, #0]
 800f3d8:	a904      	add	r1, sp, #16
 800f3da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f3dc:	4798      	blx	r3
 800f3de:	1d29      	adds	r1, r5, #4
 800f3e0:	a802      	add	r0, sp, #8
 800f3e2:	f7ff fe71 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f3e6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f3ea:	88e0      	ldrh	r0, [r4, #6]
 800f3ec:	7921      	ldrb	r1, [r4, #4]
 800f3ee:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f3f2:	8922      	ldrh	r2, [r4, #8]
 800f3f4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f3f6:	f88d 1014 	strb.w	r1, [sp, #20]
 800f3fa:	eba3 0808 	sub.w	r8, r3, r8
 800f3fe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f402:	1bdf      	subs	r7, r3, r7
 800f404:	b2bb      	uxth	r3, r7
 800f406:	fa1f f888 	uxth.w	r8, r8
 800f40a:	8967      	ldrh	r7, [r4, #10]
 800f40c:	89a4      	ldrh	r4, [r4, #12]
 800f40e:	4440      	add	r0, r8
 800f410:	4460      	add	r0, ip
 800f412:	441a      	add	r2, r3
 800f414:	44b8      	add	r8, r7
 800f416:	4423      	add	r3, r4
 800f418:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f41c:	4433      	add	r3, r6
 800f41e:	4432      	add	r2, r6
 800f420:	44e0      	add	r8, ip
 800f422:	4c09      	ldr	r4, [pc, #36]	; (800f448 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f424:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f426:	9404      	str	r4, [sp, #16]
 800f428:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f42c:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f430:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f434:	6803      	ldr	r3, [r0, #0]
 800f436:	a904      	add	r1, sp, #16
 800f438:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f43a:	4798      	blx	r3
 800f43c:	b008      	add	sp, #32
 800f43e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f442:	bf00      	nop
 800f444:	08020860 	.word	0x08020860
 800f448:	08020874 	.word	0x08020874

0800f44c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f44c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f44e:	4604      	mov	r4, r0
 800f450:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f454:	3201      	adds	r2, #1
 800f456:	d112      	bne.n	800f47e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f458:	6803      	ldr	r3, [r0, #0]
 800f45a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f45e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f462:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f466:	2500      	movs	r5, #0
 800f468:	9500      	str	r5, [sp, #0]
 800f46a:	466d      	mov	r5, sp
 800f46c:	4629      	mov	r1, r5
 800f46e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f472:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f474:	4798      	blx	r3
 800f476:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f47a:	e884 0003 	stmia.w	r4, {r0, r1}
 800f47e:	4620      	mov	r0, r4
 800f480:	b003      	add	sp, #12
 800f482:	bd30      	pop	{r4, r5, pc}

0800f484 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f484:	b513      	push	{r0, r1, r4, lr}
 800f486:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f48a:	3301      	adds	r3, #1
 800f48c:	4604      	mov	r4, r0
 800f48e:	d109      	bne.n	800f4a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f490:	4601      	mov	r1, r0
 800f492:	4668      	mov	r0, sp
 800f494:	f7ff fe18 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f498:	f8bd 3000 	ldrh.w	r3, [sp]
 800f49c:	8423      	strh	r3, [r4, #32]
 800f49e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4a2:	8463      	strh	r3, [r4, #34]	; 0x22
 800f4a4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f4a8:	b002      	add	sp, #8
 800f4aa:	bd10      	pop	{r4, pc}

0800f4ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f4ac:	b513      	push	{r0, r1, r4, lr}
 800f4ae:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f4b2:	3301      	adds	r3, #1
 800f4b4:	4604      	mov	r4, r0
 800f4b6:	d109      	bne.n	800f4cc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f4b8:	4601      	mov	r1, r0
 800f4ba:	4668      	mov	r0, sp
 800f4bc:	f7ff fe04 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4c0:	f8bd 3000 	ldrh.w	r3, [sp]
 800f4c4:	8423      	strh	r3, [r4, #32]
 800f4c6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4ca:	8463      	strh	r3, [r4, #34]	; 0x22
 800f4cc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f4d0:	b002      	add	sp, #8
 800f4d2:	bd10      	pop	{r4, pc}

0800f4d4 <_ZN8touchgfx6ScreenC1Ev>:
 800f4d4:	b570      	push	{r4, r5, r6, lr}
 800f4d6:	4605      	mov	r5, r0
 800f4d8:	4b16      	ldr	r3, [pc, #88]	; (800f534 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f4da:	f845 3b04 	str.w	r3, [r5], #4
 800f4de:	2300      	movs	r3, #0
 800f4e0:	8103      	strh	r3, [r0, #8]
 800f4e2:	8143      	strh	r3, [r0, #10]
 800f4e4:	8183      	strh	r3, [r0, #12]
 800f4e6:	81c3      	strh	r3, [r0, #14]
 800f4e8:	8203      	strh	r3, [r0, #16]
 800f4ea:	8243      	strh	r3, [r0, #18]
 800f4ec:	8283      	strh	r3, [r0, #20]
 800f4ee:	82c3      	strh	r3, [r0, #22]
 800f4f0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f4f4:	6203      	str	r3, [r0, #32]
 800f4f6:	8483      	strh	r3, [r0, #36]	; 0x24
 800f4f8:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f4fa:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f4fe:	4a0e      	ldr	r2, [pc, #56]	; (800f538 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f500:	6343      	str	r3, [r0, #52]	; 0x34
 800f502:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f506:	4b0d      	ldr	r3, [pc, #52]	; (800f53c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f508:	6042      	str	r2, [r0, #4]
 800f50a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f50e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800f510:	4a0b      	ldr	r2, [pc, #44]	; (800f540 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f512:	4604      	mov	r4, r0
 800f514:	2101      	movs	r1, #1
 800f516:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f51a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f51e:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f522:	4628      	mov	r0, r5
 800f524:	4798      	blx	r3
 800f526:	6863      	ldr	r3, [r4, #4]
 800f528:	4628      	mov	r0, r5
 800f52a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f52c:	4631      	mov	r1, r6
 800f52e:	4798      	blx	r3
 800f530:	4620      	mov	r0, r4
 800f532:	bd70      	pop	{r4, r5, r6, pc}
 800f534:	0802089c 	.word	0x0802089c
 800f538:	0801f8a8 	.word	0x0801f8a8
 800f53c:	2000a802 	.word	0x2000a802
 800f540:	2000a800 	.word	0x2000a800

0800f544 <_ZN8touchgfx6Screen4drawEv>:
 800f544:	b507      	push	{r0, r1, r2, lr}
 800f546:	4b09      	ldr	r3, [pc, #36]	; (800f56c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f548:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f54c:	4b08      	ldr	r3, [pc, #32]	; (800f570 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f54e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f552:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f556:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f55a:	6803      	ldr	r3, [r0, #0]
 800f55c:	2100      	movs	r1, #0
 800f55e:	9100      	str	r1, [sp, #0]
 800f560:	689b      	ldr	r3, [r3, #8]
 800f562:	4669      	mov	r1, sp
 800f564:	4798      	blx	r3
 800f566:	b003      	add	sp, #12
 800f568:	f85d fb04 	ldr.w	pc, [sp], #4
 800f56c:	2000a800 	.word	0x2000a800
 800f570:	2000a802 	.word	0x2000a802

0800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f578:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	b089      	sub	sp, #36	; 0x24
 800f580:	4680      	mov	r8, r0
 800f582:	460c      	mov	r4, r1
 800f584:	4615      	mov	r5, r2
 800f586:	dd0e      	ble.n	800f5a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f588:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f58c:	2b00      	cmp	r3, #0
 800f58e:	dd0a      	ble.n	800f5a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f590:	4628      	mov	r0, r5
 800f592:	f7ff ff5b 	bl	800f44c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f596:	4621      	mov	r1, r4
 800f598:	f7fe fc90 	bl	800debc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f59c:	69eb      	ldr	r3, [r5, #28]
 800f59e:	b928      	cbnz	r0, 800f5ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f5a0:	461d      	mov	r5, r3
 800f5a2:	2b00      	cmp	r3, #0
 800f5a4:	d1f4      	bne.n	800f590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f5a6:	b009      	add	sp, #36	; 0x24
 800f5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5ac:	ae04      	add	r6, sp, #16
 800f5ae:	2b00      	cmp	r3, #0
 800f5b0:	f000 80b5 	beq.w	800f71e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f5b4:	682b      	ldr	r3, [r5, #0]
 800f5b6:	4629      	mov	r1, r5
 800f5b8:	68db      	ldr	r3, [r3, #12]
 800f5ba:	a802      	add	r0, sp, #8
 800f5bc:	4798      	blx	r3
 800f5be:	4628      	mov	r0, r5
 800f5c0:	f7ff ff60 	bl	800f484 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f5c4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f5c8:	4407      	add	r7, r0
 800f5ca:	4628      	mov	r0, r5
 800f5cc:	f7ff ff6e 	bl	800f4ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f5d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f5d4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f5d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f5dc:	4418      	add	r0, r3
 800f5de:	4621      	mov	r1, r4
 800f5e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f5e4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f5e8:	b23f      	sxth	r7, r7
 800f5ea:	4630      	mov	r0, r6
 800f5ec:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f5f0:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f5f4:	f7fa feec 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f5f8:	4628      	mov	r0, r5
 800f5fa:	f7ff ff27 	bl	800f44c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f5fe:	4602      	mov	r2, r0
 800f600:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f604:	ab06      	add	r3, sp, #24
 800f606:	e883 0003 	stmia.w	r3, {r0, r1}
 800f60a:	4611      	mov	r1, r2
 800f60c:	4618      	mov	r0, r3
 800f60e:	f7fa fedf 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f612:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f616:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f61a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f61e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f622:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f626:	4299      	cmp	r1, r3
 800f628:	d10b      	bne.n	800f642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f62a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f62e:	4552      	cmp	r2, sl
 800f630:	d107      	bne.n	800f642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f632:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f636:	455a      	cmp	r2, fp
 800f638:	d103      	bne.n	800f642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f63a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f63e:	454a      	cmp	r2, r9
 800f640:	d06d      	beq.n	800f71e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f642:	f1bb 0f00 	cmp.w	fp, #0
 800f646:	dd65      	ble.n	800f714 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f648:	f1b9 0f00 	cmp.w	r9, #0
 800f64c:	dd62      	ble.n	800f714 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f64e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f652:	fa1f f08a 	uxth.w	r0, sl
 800f656:	4552      	cmp	r2, sl
 800f658:	9000      	str	r0, [sp, #0]
 800f65a:	da12      	bge.n	800f682 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f65c:	9301      	str	r3, [sp, #4]
 800f65e:	9b00      	ldr	r3, [sp, #0]
 800f660:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f664:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f668:	1a9a      	subs	r2, r3, r2
 800f66a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f66e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f672:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f676:	69ea      	ldr	r2, [r5, #28]
 800f678:	4631      	mov	r1, r6
 800f67a:	4640      	mov	r0, r8
 800f67c:	f7ff ff7a 	bl	800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f680:	9b01      	ldr	r3, [sp, #4]
 800f682:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f686:	429a      	cmp	r2, r3
 800f688:	b29f      	uxth	r7, r3
 800f68a:	da0d      	bge.n	800f6a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f68c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f690:	1aba      	subs	r2, r7, r2
 800f692:	f8ad a012 	strh.w	sl, [sp, #18]
 800f696:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f69a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f69e:	69ea      	ldr	r2, [r5, #28]
 800f6a0:	4631      	mov	r1, r6
 800f6a2:	4640      	mov	r0, r8
 800f6a4:	f7ff ff66 	bl	800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6a8:	8822      	ldrh	r2, [r4, #0]
 800f6aa:	88a3      	ldrh	r3, [r4, #4]
 800f6ac:	445f      	add	r7, fp
 800f6ae:	4413      	add	r3, r2
 800f6b0:	b29b      	uxth	r3, r3
 800f6b2:	b2bf      	uxth	r7, r7
 800f6b4:	b23a      	sxth	r2, r7
 800f6b6:	b219      	sxth	r1, r3
 800f6b8:	4291      	cmp	r1, r2
 800f6ba:	dd0d      	ble.n	800f6d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f6bc:	1bdb      	subs	r3, r3, r7
 800f6be:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f6c2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f6c6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f6ca:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f6ce:	69ea      	ldr	r2, [r5, #28]
 800f6d0:	4631      	mov	r1, r6
 800f6d2:	4640      	mov	r0, r8
 800f6d4:	f7ff ff4e 	bl	800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6d8:	88e2      	ldrh	r2, [r4, #6]
 800f6da:	8863      	ldrh	r3, [r4, #2]
 800f6dc:	4413      	add	r3, r2
 800f6de:	9a00      	ldr	r2, [sp, #0]
 800f6e0:	444a      	add	r2, r9
 800f6e2:	b29b      	uxth	r3, r3
 800f6e4:	fa1f f982 	uxth.w	r9, r2
 800f6e8:	fa0f f289 	sxth.w	r2, r9
 800f6ec:	b219      	sxth	r1, r3
 800f6ee:	428a      	cmp	r2, r1
 800f6f0:	da15      	bge.n	800f71e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f6f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f6f6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f6fa:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f6fe:	eba3 0309 	sub.w	r3, r3, r9
 800f702:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f706:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f70a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f70e:	69ea      	ldr	r2, [r5, #28]
 800f710:	4631      	mov	r1, r6
 800f712:	e001      	b.n	800f718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f714:	69ea      	ldr	r2, [r5, #28]
 800f716:	4621      	mov	r1, r4
 800f718:	4640      	mov	r0, r8
 800f71a:	f7ff ff2b 	bl	800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f71e:	4628      	mov	r0, r5
 800f720:	f7ff fe94 	bl	800f44c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f724:	6861      	ldr	r1, [r4, #4]
 800f726:	4602      	mov	r2, r0
 800f728:	6820      	ldr	r0, [r4, #0]
 800f72a:	4633      	mov	r3, r6
 800f72c:	c303      	stmia	r3!, {r0, r1}
 800f72e:	4611      	mov	r1, r2
 800f730:	4630      	mov	r0, r6
 800f732:	f7fa fe4d 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f736:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f73a:	2b00      	cmp	r3, #0
 800f73c:	f77f af33 	ble.w	800f5a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f740:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f744:	2b00      	cmp	r3, #0
 800f746:	f77f af2e 	ble.w	800f5a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f74a:	4628      	mov	r0, r5
 800f74c:	f7ff fe9a 	bl	800f484 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f750:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f754:	1a18      	subs	r0, r3, r0
 800f756:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f75a:	4628      	mov	r0, r5
 800f75c:	f7ff fea6 	bl	800f4ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f760:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f764:	1a18      	subs	r0, r3, r0
 800f766:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f76a:	682b      	ldr	r3, [r5, #0]
 800f76c:	4631      	mov	r1, r6
 800f76e:	689b      	ldr	r3, [r3, #8]
 800f770:	4628      	mov	r0, r5
 800f772:	4798      	blx	r3
 800f774:	e717      	b.n	800f5a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f776 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f776:	b570      	push	{r4, r5, r6, lr}
 800f778:	460c      	mov	r4, r1
 800f77a:	b086      	sub	sp, #24
 800f77c:	1d06      	adds	r6, r0, #4
 800f77e:	2300      	movs	r3, #0
 800f780:	4631      	mov	r1, r6
 800f782:	4605      	mov	r5, r0
 800f784:	a802      	add	r0, sp, #8
 800f786:	9301      	str	r3, [sp, #4]
 800f788:	f7ff fc9e 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f78c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f790:	8822      	ldrh	r2, [r4, #0]
 800f792:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f796:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f79a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f79e:	1ad2      	subs	r2, r2, r3
 800f7a0:	8863      	ldrh	r3, [r4, #2]
 800f7a2:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f7a6:	1a5b      	subs	r3, r3, r1
 800f7a8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f7ac:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f7b0:	aa01      	add	r2, sp, #4
 800f7b2:	a904      	add	r1, sp, #16
 800f7b4:	4630      	mov	r0, r6
 800f7b6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f7ba:	f7fa fee1 	bl	800a580 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f7be:	9a01      	ldr	r2, [sp, #4]
 800f7c0:	b11a      	cbz	r2, 800f7ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f7c2:	4621      	mov	r1, r4
 800f7c4:	4628      	mov	r0, r5
 800f7c6:	f7ff fed5 	bl	800f574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f7ca:	b006      	add	sp, #24
 800f7cc:	bd70      	pop	{r4, r5, r6, pc}

0800f7ce <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f7ce:	b530      	push	{r4, r5, lr}
 800f7d0:	4602      	mov	r2, r0
 800f7d2:	4604      	mov	r4, r0
 800f7d4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f7d8:	b085      	sub	sp, #20
 800f7da:	460d      	mov	r5, r1
 800f7dc:	6851      	ldr	r1, [r2, #4]
 800f7de:	466b      	mov	r3, sp
 800f7e0:	c303      	stmia	r3!, {r0, r1}
 800f7e2:	4629      	mov	r1, r5
 800f7e4:	4668      	mov	r0, sp
 800f7e6:	f7fa fdf3 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 800f7ea:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f7ee:	b12b      	cbz	r3, 800f7fc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f7f0:	4669      	mov	r1, sp
 800f7f2:	4620      	mov	r0, r4
 800f7f4:	f7ff ffbf 	bl	800f776 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f7f8:	b005      	add	sp, #20
 800f7fa:	bd30      	pop	{r4, r5, pc}
 800f7fc:	3404      	adds	r4, #4
 800f7fe:	4621      	mov	r1, r4
 800f800:	a802      	add	r0, sp, #8
 800f802:	f7ff fc61 	bl	800f0c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f806:	f8bd 3000 	ldrh.w	r3, [sp]
 800f80a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f80e:	1a9b      	subs	r3, r3, r2
 800f810:	f8ad 3000 	strh.w	r3, [sp]
 800f814:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f818:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f81c:	4669      	mov	r1, sp
 800f81e:	1a9b      	subs	r3, r3, r2
 800f820:	4620      	mov	r0, r4
 800f822:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f826:	f7fa fe72 	bl	800a50e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f82a:	e7e5      	b.n	800f7f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f82c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f82c:	680a      	ldr	r2, [r1, #0]
 800f82e:	460b      	mov	r3, r1
 800f830:	6992      	ldr	r2, [r2, #24]
 800f832:	1d01      	adds	r1, r0, #4
 800f834:	4618      	mov	r0, r3
 800f836:	4710      	bx	r2

0800f838 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800f838:	4298      	cmp	r0, r3
 800f83a:	d200      	bcs.n	800f83e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800f83c:	b913      	cbnz	r3, 800f844 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800f83e:	440a      	add	r2, r1
 800f840:	b210      	sxth	r0, r2
 800f842:	4770      	bx	lr
 800f844:	ee07 0a90 	vmov	s15, r0
 800f848:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800f84c:	ee07 3a90 	vmov	s15, r3
 800f850:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f854:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800f858:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f85c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f860:	ee07 2a90 	vmov	s15, r2
 800f864:	ee67 5a07 	vmul.f32	s11, s14, s14
 800f868:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800f86c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f870:	ee07 1a90 	vmov	s15, r1
 800f874:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f878:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800f87c:	eee6 7a26 	vfma.f32	s15, s12, s13
 800f880:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f888:	bfcc      	ite	gt
 800f88a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800f88e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800f892:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f896:	ee17 3a90 	vmov	r3, s15
 800f89a:	b218      	sxth	r0, r3
 800f89c:	4770      	bx	lr

0800f89e <_ZN8touchgfx12TextProviderC1Ev>:
 800f89e:	b538      	push	{r3, r4, r5, lr}
 800f8a0:	2500      	movs	r5, #0
 800f8a2:	2302      	movs	r3, #2
 800f8a4:	4604      	mov	r4, r0
 800f8a6:	e9c0 5500 	strd	r5, r5, [r0]
 800f8aa:	7403      	strb	r3, [r0, #16]
 800f8ac:	6145      	str	r5, [r0, #20]
 800f8ae:	7605      	strb	r5, [r0, #24]
 800f8b0:	83c5      	strh	r5, [r0, #30]
 800f8b2:	8405      	strh	r5, [r0, #32]
 800f8b4:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f8b6:	8705      	strh	r5, [r0, #56]	; 0x38
 800f8b8:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800f8ba:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800f8be:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800f8c2:	220e      	movs	r2, #14
 800f8c4:	4629      	mov	r1, r5
 800f8c6:	304c      	adds	r0, #76	; 0x4c
 800f8c8:	f00d fa84 	bl	801cdd4 <memset>
 800f8cc:	2301      	movs	r3, #1
 800f8ce:	4620      	mov	r0, r4
 800f8d0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800f8d4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800f8d8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800f8dc:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800f8e0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800f8e4:	f7f4 f8b8 	bl	8003a58 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f8e8:	4620      	mov	r0, r4
 800f8ea:	bd38      	pop	{r3, r4, r5, pc}

0800f8ec <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800f8ec:	b508      	push	{r3, lr}
 800f8ee:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800f8f0:	b92b      	cbnz	r3, 800f8fe <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 800f8f2:	4b07      	ldr	r3, [pc, #28]	; (800f910 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 800f8f4:	4a07      	ldr	r2, [pc, #28]	; (800f914 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 800f8f6:	4808      	ldr	r0, [pc, #32]	; (800f918 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 800f8f8:	21c0      	movs	r1, #192	; 0xc0
 800f8fa:	f00d f9df 	bl	801ccbc <__assert_func>
 800f8fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f900:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f904:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800f906:	fab0 f080 	clz	r0, r0
 800f90a:	0940      	lsrs	r0, r0, #5
 800f90c:	bd08      	pop	{r3, pc}
 800f90e:	bf00      	nop
 800f910:	0801f0e0 	.word	0x0801f0e0
 800f914:	08020af7 	.word	0x08020af7
 800f918:	0801f1b2 	.word	0x0801f1b2

0800f91c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f91c:	b530      	push	{r4, r5, lr}
 800f91e:	2500      	movs	r5, #0
 800f920:	2401      	movs	r4, #1
 800f922:	6843      	ldr	r3, [r0, #4]
 800f924:	b913      	cbnz	r3, 800f92c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f926:	6803      	ldr	r3, [r0, #0]
 800f928:	b313      	cbz	r3, 800f970 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f92a:	6043      	str	r3, [r0, #4]
 800f92c:	7e03      	ldrb	r3, [r0, #24]
 800f92e:	b143      	cbz	r3, 800f942 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f930:	6943      	ldr	r3, [r0, #20]
 800f932:	b12b      	cbz	r3, 800f940 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f934:	881a      	ldrh	r2, [r3, #0]
 800f936:	b11a      	cbz	r2, 800f940 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f938:	1c9a      	adds	r2, r3, #2
 800f93a:	6142      	str	r2, [r0, #20]
 800f93c:	8818      	ldrh	r0, [r3, #0]
 800f93e:	bd30      	pop	{r4, r5, pc}
 800f940:	7605      	strb	r5, [r0, #24]
 800f942:	6843      	ldr	r3, [r0, #4]
 800f944:	8819      	ldrh	r1, [r3, #0]
 800f946:	b199      	cbz	r1, 800f970 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f948:	1c9a      	adds	r2, r3, #2
 800f94a:	2902      	cmp	r1, #2
 800f94c:	6042      	str	r2, [r0, #4]
 800f94e:	d1f5      	bne.n	800f93c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f950:	7c03      	ldrb	r3, [r0, #16]
 800f952:	2b01      	cmp	r3, #1
 800f954:	d8e5      	bhi.n	800f922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f956:	1c5a      	adds	r2, r3, #1
 800f958:	3302      	adds	r3, #2
 800f95a:	7402      	strb	r2, [r0, #16]
 800f95c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f960:	6143      	str	r3, [r0, #20]
 800f962:	2b00      	cmp	r3, #0
 800f964:	d0dd      	beq.n	800f922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f966:	881b      	ldrh	r3, [r3, #0]
 800f968:	2b00      	cmp	r3, #0
 800f96a:	d0da      	beq.n	800f922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f96c:	7604      	strb	r4, [r0, #24]
 800f96e:	e7d8      	b.n	800f922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f970:	2000      	movs	r0, #0
 800f972:	e7e4      	b.n	800f93e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f974:	b430      	push	{r4, r5}
 800f976:	6001      	str	r1, [r0, #0]
 800f978:	2100      	movs	r1, #0
 800f97a:	6041      	str	r1, [r0, #4]
 800f97c:	6815      	ldr	r5, [r2, #0]
 800f97e:	6085      	str	r5, [r0, #8]
 800f980:	6852      	ldr	r2, [r2, #4]
 800f982:	6443      	str	r3, [r0, #68]	; 0x44
 800f984:	9b02      	ldr	r3, [sp, #8]
 800f986:	60c2      	str	r2, [r0, #12]
 800f988:	7401      	strb	r1, [r0, #16]
 800f98a:	6141      	str	r1, [r0, #20]
 800f98c:	7601      	strb	r1, [r0, #24]
 800f98e:	8701      	strh	r1, [r0, #56]	; 0x38
 800f990:	8401      	strh	r1, [r0, #32]
 800f992:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800f996:	6483      	str	r3, [r0, #72]	; 0x48
 800f998:	bc30      	pop	{r4, r5}
 800f99a:	f7f4 b85d 	b.w	8003a58 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f99e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800f99e:	b408      	push	{r3}
 800f9a0:	b510      	push	{r4, lr}
 800f9a2:	b085      	sub	sp, #20
 800f9a4:	ac07      	add	r4, sp, #28
 800f9a6:	f854 3b04 	ldr.w	r3, [r4], #4
 800f9aa:	9300      	str	r3, [sp, #0]
 800f9ac:	4613      	mov	r3, r2
 800f9ae:	4622      	mov	r2, r4
 800f9b0:	9403      	str	r4, [sp, #12]
 800f9b2:	f7ff ffdf 	bl	800f974 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f9b6:	b005      	add	sp, #20
 800f9b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f9bc:	b001      	add	sp, #4
 800f9be:	4770      	bx	lr

0800f9c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f9c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9c2:	4605      	mov	r5, r0
 800f9c4:	4608      	mov	r0, r1
 800f9c6:	b1e9      	cbz	r1, 800fa04 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f9c8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800f9cc:	460b      	mov	r3, r1
 800f9ce:	f101 0708 	add.w	r7, r1, #8
 800f9d2:	4622      	mov	r2, r4
 800f9d4:	6818      	ldr	r0, [r3, #0]
 800f9d6:	6859      	ldr	r1, [r3, #4]
 800f9d8:	4626      	mov	r6, r4
 800f9da:	c603      	stmia	r6!, {r0, r1}
 800f9dc:	3308      	adds	r3, #8
 800f9de:	42bb      	cmp	r3, r7
 800f9e0:	4634      	mov	r4, r6
 800f9e2:	d1f7      	bne.n	800f9d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f9e4:	6818      	ldr	r0, [r3, #0]
 800f9e6:	6030      	str	r0, [r6, #0]
 800f9e8:	889b      	ldrh	r3, [r3, #4]
 800f9ea:	80b3      	strh	r3, [r6, #4]
 800f9ec:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800f9f0:	015b      	lsls	r3, r3, #5
 800f9f2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f9f6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800f9fa:	430b      	orrs	r3, r1
 800f9fc:	425b      	negs	r3, r3
 800f9fe:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fa02:	4610      	mov	r0, r2
 800fa04:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fa06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800fa06:	b538      	push	{r3, r4, r5, lr}
 800fa08:	460c      	mov	r4, r1
 800fa0a:	6811      	ldr	r1, [r2, #0]
 800fa0c:	4610      	mov	r0, r2
 800fa0e:	68cd      	ldr	r5, [r1, #12]
 800fa10:	4619      	mov	r1, r3
 800fa12:	47a8      	blx	r5
 800fa14:	2800      	cmp	r0, #0
 800fa16:	bf08      	it	eq
 800fa18:	4620      	moveq	r0, r4
 800fa1a:	bd38      	pop	{r3, r4, r5, pc}

0800fa1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800fa1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa1e:	4604      	mov	r4, r0
 800fa20:	4615      	mov	r5, r2
 800fa22:	4608      	mov	r0, r1
 800fa24:	b93a      	cbnz	r2, 800fa36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800fa26:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800fa2a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800fa2e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fa32:	4628      	mov	r0, r5
 800fa34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa36:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800fa3a:	8893      	ldrh	r3, [r2, #4]
 800fa3c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800fa40:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fa44:	79ee      	ldrb	r6, [r5, #7]
 800fa46:	4316      	orrs	r6, r2
 800fa48:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800fa4c:	189a      	adds	r2, r3, r2
 800fa4e:	b291      	uxth	r1, r2
 800fa50:	291d      	cmp	r1, #29
 800fa52:	b2b7      	uxth	r7, r6
 800fa54:	f200 8083 	bhi.w	800fb5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800fa58:	2201      	movs	r2, #1
 800fa5a:	408a      	lsls	r2, r1
 800fa5c:	4978      	ldr	r1, [pc, #480]	; (800fc40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800fa5e:	420a      	tst	r2, r1
 800fa60:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800fa64:	d12d      	bne.n	800fac2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800fa66:	f412 7f60 	tst.w	r2, #896	; 0x380
 800fa6a:	d078      	beq.n	800fb5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800fa6c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800fa70:	462b      	mov	r3, r5
 800fa72:	f105 0e08 	add.w	lr, r5, #8
 800fa76:	4615      	mov	r5, r2
 800fa78:	6818      	ldr	r0, [r3, #0]
 800fa7a:	6859      	ldr	r1, [r3, #4]
 800fa7c:	4694      	mov	ip, r2
 800fa7e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fa82:	3308      	adds	r3, #8
 800fa84:	4573      	cmp	r3, lr
 800fa86:	4662      	mov	r2, ip
 800fa88:	d1f6      	bne.n	800fa78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800fa8a:	6818      	ldr	r0, [r3, #0]
 800fa8c:	f8cc 0000 	str.w	r0, [ip]
 800fa90:	889b      	ldrh	r3, [r3, #4]
 800fa92:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fa96:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800fa9a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800fa9e:	b2b3      	uxth	r3, r6
 800faa0:	1aca      	subs	r2, r1, r3
 800faa2:	b292      	uxth	r2, r2
 800faa4:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800faa8:	10d2      	asrs	r2, r2, #3
 800faaa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800faae:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800fab2:	4302      	orrs	r2, r0
 800fab4:	1bcf      	subs	r7, r1, r7
 800fab6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800faba:	1afb      	subs	r3, r7, r3
 800fabc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800fac0:	e7b7      	b.n	800fa32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fac2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800fac4:	b92b      	cbnz	r3, 800fad2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800fac6:	4b5f      	ldr	r3, [pc, #380]	; (800fc44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800fac8:	4a5f      	ldr	r2, [pc, #380]	; (800fc48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800faca:	4860      	ldr	r0, [pc, #384]	; (800fc4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800facc:	21c0      	movs	r1, #192	; 0xc0
 800face:	f00d f8f5 	bl	801ccbc <__assert_func>
 800fad2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fad4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fad8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800fada:	f640 6333 	movw	r3, #3635	; 0xe33
 800fade:	4299      	cmp	r1, r3
 800fae0:	d110      	bne.n	800fb04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800fae2:	6803      	ldr	r3, [r0, #0]
 800fae4:	68db      	ldr	r3, [r3, #12]
 800fae6:	4798      	blx	r3
 800fae8:	7b41      	ldrb	r1, [r0, #13]
 800faea:	00cb      	lsls	r3, r1, #3
 800faec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800faf0:	7a03      	ldrb	r3, [r0, #8]
 800faf2:	0648      	lsls	r0, r1, #25
 800faf4:	ea43 0302 	orr.w	r3, r3, r2
 800faf8:	bf44      	itt	mi
 800fafa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fafe:	b21b      	sxthmi	r3, r3
 800fb00:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fb04:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800fb08:	443b      	add	r3, r7
 800fb0a:	4433      	add	r3, r6
 800fb0c:	b29b      	uxth	r3, r3
 800fb0e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800fb12:	462a      	mov	r2, r5
 800fb14:	f105 0c08 	add.w	ip, r5, #8
 800fb18:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fb1c:	4635      	mov	r5, r6
 800fb1e:	6810      	ldr	r0, [r2, #0]
 800fb20:	6851      	ldr	r1, [r2, #4]
 800fb22:	4637      	mov	r7, r6
 800fb24:	c703      	stmia	r7!, {r0, r1}
 800fb26:	3208      	adds	r2, #8
 800fb28:	4562      	cmp	r2, ip
 800fb2a:	463e      	mov	r6, r7
 800fb2c:	d1f7      	bne.n	800fb1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800fb2e:	6810      	ldr	r0, [r2, #0]
 800fb30:	6038      	str	r0, [r7, #0]
 800fb32:	8892      	ldrh	r2, [r2, #4]
 800fb34:	80ba      	strh	r2, [r7, #4]
 800fb36:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fb3a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fb3e:	10db      	asrs	r3, r3, #3
 800fb40:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fb44:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fb48:	4313      	orrs	r3, r2
 800fb4a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fb4e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800fb52:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800fb56:	1a9b      	subs	r3, r3, r2
 800fb58:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800fb5c:	e769      	b.n	800fa32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fb5e:	f023 0204 	bic.w	r2, r3, #4
 800fb62:	f640 611b 	movw	r1, #3611	; 0xe1b
 800fb66:	428a      	cmp	r2, r1
 800fb68:	d003      	beq.n	800fb72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800fb6a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800fb6e:	4293      	cmp	r3, r2
 800fb70:	d120      	bne.n	800fbb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800fb72:	3b01      	subs	r3, #1
 800fb74:	4602      	mov	r2, r0
 800fb76:	b29b      	uxth	r3, r3
 800fb78:	4629      	mov	r1, r5
 800fb7a:	4620      	mov	r0, r4
 800fb7c:	f7ff ff43 	bl	800fa06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fb80:	7b41      	ldrb	r1, [r0, #13]
 800fb82:	00cb      	lsls	r3, r1, #3
 800fb84:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fb88:	7a03      	ldrb	r3, [r0, #8]
 800fb8a:	0649      	lsls	r1, r1, #25
 800fb8c:	ea43 0302 	orr.w	r3, r3, r2
 800fb90:	bf44      	itt	mi
 800fb92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fb96:	b21b      	sxthmi	r3, r3
 800fb98:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fb9c:	7b6b      	ldrb	r3, [r5, #13]
 800fb9e:	7aaa      	ldrb	r2, [r5, #10]
 800fba0:	005b      	lsls	r3, r3, #1
 800fba2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fba6:	4313      	orrs	r3, r2
 800fba8:	115a      	asrs	r2, r3, #5
 800fbaa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fbae:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800fbb2:	e036      	b.n	800fc22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800fbb4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fbb8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800fbbc:	7a2a      	ldrb	r2, [r5, #8]
 800fbbe:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800fbc2:	ea42 0201 	orr.w	r2, r2, r1
 800fbc6:	bf1c      	itt	ne
 800fbc8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800fbcc:	b212      	sxthne	r2, r2
 800fbce:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800fbd2:	f640 6109 	movw	r1, #3593	; 0xe09
 800fbd6:	f023 0210 	bic.w	r2, r3, #16
 800fbda:	428a      	cmp	r2, r1
 800fbdc:	d003      	beq.n	800fbe6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800fbde:	f640 6213 	movw	r2, #3603	; 0xe13
 800fbe2:	4293      	cmp	r3, r2
 800fbe4:	d12a      	bne.n	800fc3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800fbe6:	7b6e      	ldrb	r6, [r5, #13]
 800fbe8:	0076      	lsls	r6, r6, #1
 800fbea:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fbee:	7aae      	ldrb	r6, [r5, #10]
 800fbf0:	4316      	orrs	r6, r2
 800fbf2:	f640 6213 	movw	r2, #3603	; 0xe13
 800fbf6:	4293      	cmp	r3, r2
 800fbf8:	bf18      	it	ne
 800fbfa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800fbfe:	4602      	mov	r2, r0
 800fc00:	bf14      	ite	ne
 800fc02:	b29b      	uxthne	r3, r3
 800fc04:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800fc08:	4629      	mov	r1, r5
 800fc0a:	4620      	mov	r0, r4
 800fc0c:	f7ff fefb 	bl	800fa06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fc10:	7b43      	ldrb	r3, [r0, #13]
 800fc12:	7a82      	ldrb	r2, [r0, #10]
 800fc14:	005b      	lsls	r3, r3, #1
 800fc16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fc1a:	4313      	orrs	r3, r2
 800fc1c:	1af6      	subs	r6, r6, r3
 800fc1e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800fc22:	7b69      	ldrb	r1, [r5, #13]
 800fc24:	00cb      	lsls	r3, r1, #3
 800fc26:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fc2a:	7a2b      	ldrb	r3, [r5, #8]
 800fc2c:	4313      	orrs	r3, r2
 800fc2e:	064a      	lsls	r2, r1, #25
 800fc30:	bf44      	itt	mi
 800fc32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc36:	b21b      	sxthmi	r3, r3
 800fc38:	1bdb      	subs	r3, r3, r7
 800fc3a:	e73f      	b.n	800fabc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800fc3c:	2300      	movs	r3, #0
 800fc3e:	e7b6      	b.n	800fbae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800fc40:	3fc00079 	.word	0x3fc00079
 800fc44:	0801f0e0 	.word	0x0801f0e0
 800fc48:	08020af7 	.word	0x08020af7
 800fc4c:	0801f1b2 	.word	0x0801f1b2

0800fc50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fc50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc54:	4604      	mov	r4, r0
 800fc56:	b942      	cbnz	r2, 800fc6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fc58:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800fc5c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800fc60:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800fc64:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800fc68:	e046      	b.n	800fcf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fc6a:	7b51      	ldrb	r1, [r2, #13]
 800fc6c:	8893      	ldrh	r3, [r2, #4]
 800fc6e:	010f      	lsls	r7, r1, #4
 800fc70:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fc74:	79d7      	ldrb	r7, [r2, #7]
 800fc76:	4307      	orrs	r7, r0
 800fc78:	2f04      	cmp	r7, #4
 800fc7a:	b2bd      	uxth	r5, r7
 800fc7c:	bfcc      	ite	gt
 800fc7e:	08bf      	lsrgt	r7, r7, #2
 800fc80:	2701      	movle	r7, #1
 800fc82:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800fc86:	f200 80ab 	bhi.w	800fde0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800fc8a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800fc8e:	4283      	cmp	r3, r0
 800fc90:	d216      	bcs.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc92:	f240 605b 	movw	r0, #1627	; 0x65b
 800fc96:	4283      	cmp	r3, r0
 800fc98:	d859      	bhi.n	800fd4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800fc9a:	f240 6057 	movw	r0, #1623	; 0x657
 800fc9e:	4283      	cmp	r3, r0
 800fca0:	d20e      	bcs.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fca2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fca6:	d24a      	bcs.n	800fd3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800fca8:	f240 604e 	movw	r0, #1614	; 0x64e
 800fcac:	4283      	cmp	r3, r0
 800fcae:	d207      	bcs.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fcb0:	f240 601a 	movw	r0, #1562	; 0x61a
 800fcb4:	4283      	cmp	r3, r0
 800fcb6:	d02a      	beq.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fcb8:	d821      	bhi.n	800fcfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800fcba:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800fcbe:	d35b      	bcc.n	800fd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fcc0:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800fcc4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fcc8:	f040 80d0 	bne.w	800fe6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fccc:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800fcd0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fcd4:	f040 80ca 	bne.w	800fe6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fcd8:	00cb      	lsls	r3, r1, #3
 800fcda:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fcde:	7a13      	ldrb	r3, [r2, #8]
 800fce0:	0649      	lsls	r1, r1, #25
 800fce2:	ea43 0300 	orr.w	r3, r3, r0
 800fce6:	bf44      	itt	mi
 800fce8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fcec:	b21b      	sxthmi	r3, r3
 800fcee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fcf2:	1b5d      	subs	r5, r3, r5
 800fcf4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fcf8:	4610      	mov	r0, r2
 800fcfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fcfe:	f240 604b 	movw	r0, #1611	; 0x64b
 800fd02:	4283      	cmp	r3, r0
 800fd04:	d338      	bcc.n	800fd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fd06:	f240 604c 	movw	r0, #1612	; 0x64c
 800fd0a:	4283      	cmp	r3, r0
 800fd0c:	d9d8      	bls.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd0e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800fd12:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800fd16:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fd1a:	f040 80f1 	bne.w	800ff00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fd1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fd22:	f040 80ed 	bne.w	800ff00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fd26:	00cb      	lsls	r3, r1, #3
 800fd28:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fd2c:	7a13      	ldrb	r3, [r2, #8]
 800fd2e:	064e      	lsls	r6, r1, #25
 800fd30:	ea43 0300 	orr.w	r3, r3, r0
 800fd34:	bf44      	itt	mi
 800fd36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fd3a:	b21b      	sxthmi	r3, r3
 800fd3c:	e7d9      	b.n	800fcf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800fd3e:	f240 6054 	movw	r0, #1620	; 0x654
 800fd42:	4283      	cmp	r3, r0
 800fd44:	d8e3      	bhi.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd46:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fd4a:	d9e0      	bls.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd4c:	e7b8      	b.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd4e:	f240 6074 	movw	r0, #1652	; 0x674
 800fd52:	4283      	cmp	r3, r0
 800fd54:	d0b4      	beq.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd56:	d82d      	bhi.n	800fdb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800fd58:	f240 605e 	movw	r0, #1630	; 0x65e
 800fd5c:	4283      	cmp	r3, r0
 800fd5e:	d804      	bhi.n	800fd6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800fd60:	f240 605d 	movw	r0, #1629	; 0x65d
 800fd64:	4283      	cmp	r3, r0
 800fd66:	d3d2      	bcc.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd68:	e7aa      	b.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd6a:	f240 605f 	movw	r0, #1631	; 0x65f
 800fd6e:	4283      	cmp	r3, r0
 800fd70:	d0cd      	beq.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd72:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fd76:	d0a3      	beq.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd78:	00cb      	lsls	r3, r1, #3
 800fd7a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fd7e:	7a13      	ldrb	r3, [r2, #8]
 800fd80:	0649      	lsls	r1, r1, #25
 800fd82:	ea43 0300 	orr.w	r3, r3, r0
 800fd86:	bf44      	itt	mi
 800fd88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fd8c:	b21b      	sxthmi	r3, r3
 800fd8e:	1b5d      	subs	r5, r3, r5
 800fd90:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fd94:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fd98:	7b53      	ldrb	r3, [r2, #13]
 800fd9a:	015b      	lsls	r3, r3, #5
 800fd9c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fda0:	7993      	ldrb	r3, [r2, #6]
 800fda2:	430b      	orrs	r3, r1
 800fda4:	005b      	lsls	r3, r3, #1
 800fda6:	2105      	movs	r1, #5
 800fda8:	fb93 f3f1 	sdiv	r3, r3, r1
 800fdac:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fdb0:	440b      	add	r3, r1
 800fdb2:	e757      	b.n	800fc64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fdb4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800fdb8:	4283      	cmp	r3, r0
 800fdba:	d809      	bhi.n	800fdd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800fdbc:	f240 60df 	movw	r0, #1759	; 0x6df
 800fdc0:	4283      	cmp	r3, r0
 800fdc2:	f4bf af7d 	bcs.w	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fdc6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800fdca:	2b05      	cmp	r3, #5
 800fdcc:	d8d4      	bhi.n	800fd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fdce:	e777      	b.n	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fdd0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800fdd4:	4283      	cmp	r3, r0
 800fdd6:	d09a      	beq.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fdd8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800fddc:	4283      	cmp	r3, r0
 800fdde:	e7ca      	b.n	800fd76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800fde0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800fde4:	d22b      	bcs.n	800fe3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800fde6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800fdea:	4283      	cmp	r3, r0
 800fdec:	d28f      	bcs.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fdee:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800fdf2:	4283      	cmp	r3, r0
 800fdf4:	d816      	bhi.n	800fe24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800fdf6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800fdfa:	4283      	cmp	r3, r0
 800fdfc:	f4bf af60 	bcs.w	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe00:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800fe04:	4283      	cmp	r3, r0
 800fe06:	d80a      	bhi.n	800fe1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800fe08:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800fe0c:	4283      	cmp	r3, r0
 800fe0e:	f4bf af57 	bcs.w	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe12:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800fe16:	4283      	cmp	r3, r0
 800fe18:	f43f af79 	beq.w	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fe1c:	e7ac      	b.n	800fd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fe1e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800fe22:	e7f8      	b.n	800fe16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800fe24:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800fe28:	4283      	cmp	r3, r0
 800fe2a:	d802      	bhi.n	800fe32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800fe2c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800fe30:	e798      	b.n	800fd64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800fe32:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800fe36:	4283      	cmp	r3, r0
 800fe38:	f47f af42 	bne.w	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe3c:	e767      	b.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fe3e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800fe42:	4283      	cmp	r3, r0
 800fe44:	f43f af63 	beq.w	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fe48:	d802      	bhi.n	800fe50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800fe4a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800fe4e:	e7f2      	b.n	800fe36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800fe50:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800fe54:	4283      	cmp	r3, r0
 800fe56:	d805      	bhi.n	800fe64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800fe58:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800fe5c:	4283      	cmp	r3, r0
 800fe5e:	f4ff af2f 	bcc.w	800fcc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe62:	e754      	b.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fe64:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800fe68:	4283      	cmp	r3, r0
 800fe6a:	e7af      	b.n	800fdcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800fe6c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800fe70:	4617      	mov	r7, r2
 800fe72:	f102 0808 	add.w	r8, r2, #8
 800fe76:	4666      	mov	r6, ip
 800fe78:	6838      	ldr	r0, [r7, #0]
 800fe7a:	6879      	ldr	r1, [r7, #4]
 800fe7c:	46e6      	mov	lr, ip
 800fe7e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fe82:	3708      	adds	r7, #8
 800fe84:	4547      	cmp	r7, r8
 800fe86:	46f4      	mov	ip, lr
 800fe88:	d1f6      	bne.n	800fe78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800fe8a:	6838      	ldr	r0, [r7, #0]
 800fe8c:	f8ce 0000 	str.w	r0, [lr]
 800fe90:	88b9      	ldrh	r1, [r7, #4]
 800fe92:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fe96:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800fe9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fe9e:	d009      	beq.n	800feb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800fea0:	7b51      	ldrb	r1, [r2, #13]
 800fea2:	7992      	ldrb	r2, [r2, #6]
 800fea4:	0149      	lsls	r1, r1, #5
 800fea6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800feaa:	4311      	orrs	r1, r2
 800feac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800feb0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800feb4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800feb8:	d00d      	beq.n	800fed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800feba:	442b      	add	r3, r5
 800febc:	b29b      	uxth	r3, r3
 800febe:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fec2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fec6:	10db      	asrs	r3, r3, #3
 800fec8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fecc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fed0:	4313      	orrs	r3, r2
 800fed2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fed6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800feda:	00cb      	lsls	r3, r1, #3
 800fedc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fee0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800fee4:	064f      	lsls	r7, r1, #25
 800fee6:	ea43 0302 	orr.w	r3, r3, r2
 800feea:	bf44      	itt	mi
 800feec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fef0:	b21b      	sxthmi	r3, r3
 800fef2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fef6:	1b5d      	subs	r5, r3, r5
 800fef8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fefc:	4632      	mov	r2, r6
 800fefe:	e6fb      	b.n	800fcf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800ff00:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800ff04:	4694      	mov	ip, r2
 800ff06:	f102 0908 	add.w	r9, r2, #8
 800ff0a:	4676      	mov	r6, lr
 800ff0c:	f8dc 0000 	ldr.w	r0, [ip]
 800ff10:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ff14:	46f0      	mov	r8, lr
 800ff16:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ff1a:	f10c 0c08 	add.w	ip, ip, #8
 800ff1e:	45cc      	cmp	ip, r9
 800ff20:	46c6      	mov	lr, r8
 800ff22:	d1f3      	bne.n	800ff0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800ff24:	f8dc 0000 	ldr.w	r0, [ip]
 800ff28:	f8c8 0000 	str.w	r0, [r8]
 800ff2c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800ff30:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ff34:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ff38:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ff3c:	d009      	beq.n	800ff52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800ff3e:	7b51      	ldrb	r1, [r2, #13]
 800ff40:	7992      	ldrb	r2, [r2, #6]
 800ff42:	0149      	lsls	r1, r1, #5
 800ff44:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ff48:	4311      	orrs	r1, r2
 800ff4a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ff4e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ff52:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ff56:	d00d      	beq.n	800ff74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800ff58:	1bdb      	subs	r3, r3, r7
 800ff5a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ff5e:	b29b      	uxth	r3, r3
 800ff60:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ff64:	10db      	asrs	r3, r3, #3
 800ff66:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ff6a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ff6e:	4313      	orrs	r3, r2
 800ff70:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ff74:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ff78:	00cb      	lsls	r3, r1, #3
 800ff7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ff7e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ff82:	0648      	lsls	r0, r1, #25
 800ff84:	ea43 0302 	orr.w	r3, r3, r2
 800ff88:	bf44      	itt	mi
 800ff8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ff8e:	b21b      	sxthmi	r3, r3
 800ff90:	e7b1      	b.n	800fef6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800ff94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ff94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff98:	461e      	mov	r6, r3
 800ff9a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800ff9c:	4604      	mov	r4, r0
 800ff9e:	4617      	mov	r7, r2
 800ffa0:	b92b      	cbnz	r3, 800ffae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800ffa2:	4b25      	ldr	r3, [pc, #148]	; (8010038 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800ffa4:	4a25      	ldr	r2, [pc, #148]	; (801003c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800ffa6:	4826      	ldr	r0, [pc, #152]	; (8010040 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800ffa8:	21c0      	movs	r1, #192	; 0xc0
 800ffaa:	f00c fe87 	bl	801ccbc <__assert_func>
 800ffae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ffb0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ffb4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ffb8:	f7f3 fd0c 	bl	80039d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ffbc:	4605      	mov	r5, r0
 800ffbe:	b918      	cbnz	r0, 800ffc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800ffc0:	6030      	str	r0, [r6, #0]
 800ffc2:	4628      	mov	r0, r5
 800ffc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ffc8:	683b      	ldr	r3, [r7, #0]
 800ffca:	4601      	mov	r1, r0
 800ffcc:	68db      	ldr	r3, [r3, #12]
 800ffce:	4638      	mov	r0, r7
 800ffd0:	4798      	blx	r3
 800ffd2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ffd6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ffda:	4602      	mov	r2, r0
 800ffdc:	6030      	str	r0, [r6, #0]
 800ffde:	d213      	bcs.n	8010008 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800ffe0:	4643      	mov	r3, r8
 800ffe2:	4639      	mov	r1, r7
 800ffe4:	4620      	mov	r0, r4
 800ffe6:	f7ff fe33 	bl	800fc50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ffea:	6030      	str	r0, [r6, #0]
 800ffec:	6833      	ldr	r3, [r6, #0]
 800ffee:	b143      	cbz	r3, 8010002 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800fff0:	7b5a      	ldrb	r2, [r3, #13]
 800fff2:	7a9b      	ldrb	r3, [r3, #10]
 800fff4:	0052      	lsls	r2, r2, #1
 800fff6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fffa:	4313      	orrs	r3, r2
 800fffc:	bf0c      	ite	eq
 800fffe:	2301      	moveq	r3, #1
 8010000:	2300      	movne	r3, #0
 8010002:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010006:	e7dc      	b.n	800ffc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8010008:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801000c:	b29b      	uxth	r3, r3
 801000e:	2b7f      	cmp	r3, #127	; 0x7f
 8010010:	d804      	bhi.n	801001c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8010012:	4639      	mov	r1, r7
 8010014:	4620      	mov	r0, r4
 8010016:	f7ff fd01 	bl	800fa1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801001a:	e7e6      	b.n	800ffea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801001c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010020:	2b00      	cmp	r3, #0
 8010022:	d0e3      	beq.n	800ffec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8010024:	f640 1302 	movw	r3, #2306	; 0x902
 8010028:	429d      	cmp	r5, r3
 801002a:	d1df      	bne.n	800ffec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801002c:	4601      	mov	r1, r0
 801002e:	4620      	mov	r0, r4
 8010030:	f7ff fcc6 	bl	800f9c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010034:	e7d9      	b.n	800ffea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8010036:	bf00      	nop
 8010038:	0801f0e0 	.word	0x0801f0e0
 801003c:	08020af7 	.word	0x08020af7
 8010040:	0801f1b2 	.word	0x0801f1b2

08010044 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8010044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010048:	461e      	mov	r6, r3
 801004a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801004c:	4604      	mov	r4, r0
 801004e:	4617      	mov	r7, r2
 8010050:	b92b      	cbnz	r3, 801005e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8010052:	4b26      	ldr	r3, [pc, #152]	; (80100ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8010054:	4a26      	ldr	r2, [pc, #152]	; (80100f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8010056:	4827      	ldr	r0, [pc, #156]	; (80100f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8010058:	21c0      	movs	r1, #192	; 0xc0
 801005a:	f00c fe2f 	bl	801ccbc <__assert_func>
 801005e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010060:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010064:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8010068:	f7f3 fcb4 	bl	80039d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801006c:	4605      	mov	r5, r0
 801006e:	b918      	cbnz	r0, 8010078 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8010070:	6030      	str	r0, [r6, #0]
 8010072:	4628      	mov	r0, r5
 8010074:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010078:	683b      	ldr	r3, [r7, #0]
 801007a:	4601      	mov	r1, r0
 801007c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010080:	4638      	mov	r0, r7
 8010082:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010086:	47c8      	blx	r9
 8010088:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801008c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010090:	4602      	mov	r2, r0
 8010092:	6030      	str	r0, [r6, #0]
 8010094:	d213      	bcs.n	80100be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8010096:	4643      	mov	r3, r8
 8010098:	4639      	mov	r1, r7
 801009a:	4620      	mov	r0, r4
 801009c:	f7ff fdd8 	bl	800fc50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80100a0:	6030      	str	r0, [r6, #0]
 80100a2:	6833      	ldr	r3, [r6, #0]
 80100a4:	b143      	cbz	r3, 80100b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 80100a6:	7b5a      	ldrb	r2, [r3, #13]
 80100a8:	7a9b      	ldrb	r3, [r3, #10]
 80100aa:	0052      	lsls	r2, r2, #1
 80100ac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80100b0:	4313      	orrs	r3, r2
 80100b2:	bf0c      	ite	eq
 80100b4:	2301      	moveq	r3, #1
 80100b6:	2300      	movne	r3, #0
 80100b8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80100bc:	e7d9      	b.n	8010072 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 80100be:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80100c2:	b29b      	uxth	r3, r3
 80100c4:	2b7f      	cmp	r3, #127	; 0x7f
 80100c6:	d804      	bhi.n	80100d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 80100c8:	4639      	mov	r1, r7
 80100ca:	4620      	mov	r0, r4
 80100cc:	f7ff fca6 	bl	800fa1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80100d0:	e7e6      	b.n	80100a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 80100d2:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80100d6:	2b00      	cmp	r3, #0
 80100d8:	d0e3      	beq.n	80100a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 80100da:	f640 1302 	movw	r3, #2306	; 0x902
 80100de:	429d      	cmp	r5, r3
 80100e0:	d1df      	bne.n	80100a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 80100e2:	4601      	mov	r1, r0
 80100e4:	4620      	mov	r0, r4
 80100e6:	f7ff fc6b 	bl	800f9c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80100ea:	e7d9      	b.n	80100a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 80100ec:	0801f0e0 	.word	0x0801f0e0
 80100f0:	08020af7 	.word	0x08020af7
 80100f4:	0801f1b2 	.word	0x0801f1b2

080100f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80100f8:	b510      	push	{r4, lr}
 80100fa:	4604      	mov	r4, r0
 80100fc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8010100:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010102:	b9d9      	cbnz	r1, 801013c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8010104:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010106:	2b0a      	cmp	r3, #10
 8010108:	d037      	beq.n	801017a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801010a:	4620      	mov	r0, r4
 801010c:	f7ff fc06 	bl	800f91c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010110:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010112:	2b09      	cmp	r3, #9
 8010114:	d906      	bls.n	8010124 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 8010116:	4b19      	ldr	r3, [pc, #100]	; (801017c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8010118:	4a19      	ldr	r2, [pc, #100]	; (8010180 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801011a:	481a      	ldr	r0, [pc, #104]	; (8010184 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 801011c:	f44f 7182 	mov.w	r1, #260	; 0x104
 8010120:	f00c fdcc 	bl	801ccbc <__assert_func>
 8010124:	1c5a      	adds	r2, r3, #1
 8010126:	8722      	strh	r2, [r4, #56]	; 0x38
 8010128:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801012a:	4413      	add	r3, r2
 801012c:	b29b      	uxth	r3, r3
 801012e:	2b09      	cmp	r3, #9
 8010130:	bf88      	it	hi
 8010132:	3b0a      	subhi	r3, #10
 8010134:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010138:	8458      	strh	r0, [r3, #34]	; 0x22
 801013a:	e7e3      	b.n	8010104 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 801013c:	2b0a      	cmp	r3, #10
 801013e:	d01c      	beq.n	801017a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8010140:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8010142:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8010146:	3901      	subs	r1, #1
 8010148:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801014a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801014e:	1c51      	adds	r1, r2, #1
 8010150:	b289      	uxth	r1, r1
 8010152:	2901      	cmp	r1, #1
 8010154:	bf8a      	itet	hi
 8010156:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801015a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801015c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801015e:	2b09      	cmp	r3, #9
 8010160:	d8d9      	bhi.n	8010116 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8010162:	1c5a      	adds	r2, r3, #1
 8010164:	8722      	strh	r2, [r4, #56]	; 0x38
 8010166:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010168:	4413      	add	r3, r2
 801016a:	b29b      	uxth	r3, r3
 801016c:	2b09      	cmp	r3, #9
 801016e:	bf88      	it	hi
 8010170:	3b0a      	subhi	r3, #10
 8010172:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010176:	8458      	strh	r0, [r3, #34]	; 0x22
 8010178:	e7c0      	b.n	80100fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801017a:	bd10      	pop	{r4, pc}
 801017c:	080208c8 	.word	0x080208c8
 8010180:	08020c4d 	.word	0x08020c4d
 8010184:	0801f1b2 	.word	0x0801f1b2

08010188 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8010188:	b538      	push	{r3, r4, r5, lr}
 801018a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801018c:	4604      	mov	r4, r0
 801018e:	b92a      	cbnz	r2, 801019c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8010190:	4b13      	ldr	r3, [pc, #76]	; (80101e0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8010192:	4a14      	ldr	r2, [pc, #80]	; (80101e4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8010194:	4814      	ldr	r0, [pc, #80]	; (80101e8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8010196:	21d5      	movs	r1, #213	; 0xd5
 8010198:	f00c fd90 	bl	801ccbc <__assert_func>
 801019c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801019e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 80101a2:	3a01      	subs	r2, #1
 80101a4:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 80101a6:	8702      	strh	r2, [r0, #56]	; 0x38
 80101a8:	1c5a      	adds	r2, r3, #1
 80101aa:	b292      	uxth	r2, r2
 80101ac:	2a09      	cmp	r2, #9
 80101ae:	bf86      	itte	hi
 80101b0:	3b09      	subhi	r3, #9
 80101b2:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80101b4:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80101b6:	f7ff ff9f 	bl	80100f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80101ba:	8c23      	ldrh	r3, [r4, #32]
 80101bc:	2b01      	cmp	r3, #1
 80101be:	bf9c      	itt	ls
 80101c0:	3301      	addls	r3, #1
 80101c2:	8423      	strhls	r3, [r4, #32]
 80101c4:	8be3      	ldrh	r3, [r4, #30]
 80101c6:	b90b      	cbnz	r3, 80101cc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 80101c8:	2302      	movs	r3, #2
 80101ca:	83e3      	strh	r3, [r4, #30]
 80101cc:	8be3      	ldrh	r3, [r4, #30]
 80101ce:	3b01      	subs	r3, #1
 80101d0:	b29b      	uxth	r3, r3
 80101d2:	83e3      	strh	r3, [r4, #30]
 80101d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80101d8:	4628      	mov	r0, r5
 80101da:	8365      	strh	r5, [r4, #26]
 80101dc:	bd38      	pop	{r3, r4, r5, pc}
 80101de:	bf00      	nop
 80101e0:	0801f0e0 	.word	0x0801f0e0
 80101e4:	08020ba2 	.word	0x08020ba2
 80101e8:	0801f1b2 	.word	0x0801f1b2

080101ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80101ec:	b538      	push	{r3, r4, r5, lr}
 80101ee:	428a      	cmp	r2, r1
 80101f0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80101f2:	d90c      	bls.n	801020e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 80101f4:	b92c      	cbnz	r4, 8010202 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 80101f6:	4b1c      	ldr	r3, [pc, #112]	; (8010268 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 80101f8:	4a1c      	ldr	r2, [pc, #112]	; (801026c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 80101fa:	21e1      	movs	r1, #225	; 0xe1
 80101fc:	481c      	ldr	r0, [pc, #112]	; (8010270 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 80101fe:	f00c fd5d 	bl	801ccbc <__assert_func>
 8010202:	3c01      	subs	r4, #1
 8010204:	8704      	strh	r4, [r0, #56]	; 0x38
 8010206:	4b1b      	ldr	r3, [pc, #108]	; (8010274 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8010208:	4a1b      	ldr	r2, [pc, #108]	; (8010278 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801020a:	21c5      	movs	r1, #197	; 0xc5
 801020c:	e7f6      	b.n	80101fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801020e:	428c      	cmp	r4, r1
 8010210:	d203      	bcs.n	801021a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8010212:	4b1a      	ldr	r3, [pc, #104]	; (801027c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8010214:	4a1a      	ldr	r2, [pc, #104]	; (8010280 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8010216:	21cb      	movs	r1, #203	; 0xcb
 8010218:	e7f0      	b.n	80101fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801021a:	1a64      	subs	r4, r4, r1
 801021c:	8704      	strh	r4, [r0, #56]	; 0x38
 801021e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8010220:	4421      	add	r1, r4
 8010222:	b289      	uxth	r1, r1
 8010224:	2909      	cmp	r1, #9
 8010226:	bf88      	it	hi
 8010228:	390a      	subhi	r1, #10
 801022a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801022c:	250a      	movs	r5, #10
 801022e:	b1ba      	cbz	r2, 8010260 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8010230:	3a01      	subs	r2, #1
 8010232:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8010234:	b292      	uxth	r2, r2
 8010236:	2909      	cmp	r1, #9
 8010238:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801023c:	d903      	bls.n	8010246 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801023e:	4b11      	ldr	r3, [pc, #68]	; (8010284 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8010240:	4a11      	ldr	r2, [pc, #68]	; (8010288 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8010242:	21e6      	movs	r1, #230	; 0xe6
 8010244:	e7da      	b.n	80101fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010246:	3101      	adds	r1, #1
 8010248:	8701      	strh	r1, [r0, #56]	; 0x38
 801024a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801024c:	b901      	cbnz	r1, 8010250 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801024e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8010250:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8010252:	3901      	subs	r1, #1
 8010254:	b289      	uxth	r1, r1
 8010256:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010258:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801025c:	844c      	strh	r4, [r1, #34]	; 0x22
 801025e:	e7e6      	b.n	801022e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8010260:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010264:	f7ff bf48 	b.w	80100f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010268:	0801f0e0 	.word	0x0801f0e0
 801026c:	0802097b 	.word	0x0802097b
 8010270:	0801f1b2 	.word	0x0801f1b2
 8010274:	0801f1de 	.word	0x0801f1de
 8010278:	08020a25 	.word	0x08020a25
 801027c:	080208d4 	.word	0x080208d4
 8010280:	08020cfc 	.word	0x08020cfc
 8010284:	080208e0 	.word	0x080208e0
 8010288:	080208f3 	.word	0x080208f3

0801028c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801028c:	3a01      	subs	r2, #1
 801028e:	b570      	push	{r4, r5, r6, lr}
 8010290:	b292      	uxth	r2, r2
 8010292:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010296:	42b2      	cmp	r2, r6
 8010298:	d019      	beq.n	80102ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801029a:	8c04      	ldrh	r4, [r0, #32]
 801029c:	f831 5b02 	ldrh.w	r5, [r1], #2
 80102a0:	4294      	cmp	r4, r2
 80102a2:	d805      	bhi.n	80102b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 80102a4:	4b19      	ldr	r3, [pc, #100]	; (801030c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80102a6:	4a1a      	ldr	r2, [pc, #104]	; (8010310 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 80102a8:	481a      	ldr	r0, [pc, #104]	; (8010314 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 80102aa:	21c5      	movs	r1, #197	; 0xc5
 80102ac:	f00c fd06 	bl	801ccbc <__assert_func>
 80102b0:	8bc4      	ldrh	r4, [r0, #30]
 80102b2:	4414      	add	r4, r2
 80102b4:	b2a4      	uxth	r4, r4
 80102b6:	2c01      	cmp	r4, #1
 80102b8:	bf88      	it	hi
 80102ba:	3c02      	subhi	r4, #2
 80102bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80102c0:	3a01      	subs	r2, #1
 80102c2:	8b64      	ldrh	r4, [r4, #26]
 80102c4:	42ac      	cmp	r4, r5
 80102c6:	b292      	uxth	r2, r2
 80102c8:	d0e5      	beq.n	8010296 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 80102ca:	2000      	movs	r0, #0
 80102cc:	bd70      	pop	{r4, r5, r6, pc}
 80102ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80102d2:	2400      	movs	r4, #0
 80102d4:	4413      	add	r3, r2
 80102d6:	b2a2      	uxth	r2, r4
 80102d8:	429a      	cmp	r2, r3
 80102da:	da14      	bge.n	8010306 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 80102dc:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 80102de:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80102e2:	4296      	cmp	r6, r2
 80102e4:	d802      	bhi.n	80102ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 80102e6:	4b09      	ldr	r3, [pc, #36]	; (801030c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80102e8:	4a0b      	ldr	r2, [pc, #44]	; (8010318 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 80102ea:	e7dd      	b.n	80102a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 80102ec:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80102ee:	4432      	add	r2, r6
 80102f0:	b292      	uxth	r2, r2
 80102f2:	2a09      	cmp	r2, #9
 80102f4:	bf88      	it	hi
 80102f6:	3a0a      	subhi	r2, #10
 80102f8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80102fc:	3401      	adds	r4, #1
 80102fe:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8010300:	42aa      	cmp	r2, r5
 8010302:	d0e8      	beq.n	80102d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8010304:	e7e1      	b.n	80102ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8010306:	2001      	movs	r0, #1
 8010308:	e7e0      	b.n	80102cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801030a:	bf00      	nop
 801030c:	0801f1de 	.word	0x0801f1de
 8010310:	08020d80 	.word	0x08020d80
 8010314:	0801f1b2 	.word	0x0801f1b2
 8010318:	08020a25 	.word	0x08020a25

0801031c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801031c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010320:	4605      	mov	r5, r0
 8010322:	4616      	mov	r6, r2
 8010324:	1c8c      	adds	r4, r1, #2
 8010326:	8809      	ldrh	r1, [r1, #0]
 8010328:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801032c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8010330:	42b3      	cmp	r3, r6
 8010332:	d124      	bne.n	801037e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010334:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010338:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801033c:	f001 070f 	and.w	r7, r1, #15
 8010340:	f8cd 8000 	str.w	r8, [sp]
 8010344:	464b      	mov	r3, r9
 8010346:	4652      	mov	r2, sl
 8010348:	4621      	mov	r1, r4
 801034a:	4628      	mov	r0, r5
 801034c:	f7ff ff9e 	bl	801028c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8010350:	4683      	mov	fp, r0
 8010352:	b168      	cbz	r0, 8010370 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8010354:	eb0a 0109 	add.w	r1, sl, r9
 8010358:	4441      	add	r1, r8
 801035a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801035e:	463a      	mov	r2, r7
 8010360:	4649      	mov	r1, r9
 8010362:	4628      	mov	r0, r5
 8010364:	f7ff ff42 	bl	80101ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8010368:	4658      	mov	r0, fp
 801036a:	b003      	add	sp, #12
 801036c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010370:	eb07 010a 	add.w	r1, r7, sl
 8010374:	4449      	add	r1, r9
 8010376:	4441      	add	r1, r8
 8010378:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801037c:	e7d2      	b.n	8010324 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801037e:	f04f 0b00 	mov.w	fp, #0
 8010382:	e7f1      	b.n	8010368 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08010384 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8010384:	b570      	push	{r4, r5, r6, lr}
 8010386:	8810      	ldrh	r0, [r2, #0]
 8010388:	4298      	cmp	r0, r3
 801038a:	d817      	bhi.n	80103bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801038c:	1e48      	subs	r0, r1, #1
 801038e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8010392:	4298      	cmp	r0, r3
 8010394:	d312      	bcc.n	80103bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010396:	2400      	movs	r4, #0
 8010398:	428c      	cmp	r4, r1
 801039a:	d20f      	bcs.n	80103bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801039c:	1860      	adds	r0, r4, r1
 801039e:	1040      	asrs	r0, r0, #1
 80103a0:	0085      	lsls	r5, r0, #2
 80103a2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80103a6:	42b3      	cmp	r3, r6
 80103a8:	d902      	bls.n	80103b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80103aa:	3001      	adds	r0, #1
 80103ac:	b284      	uxth	r4, r0
 80103ae:	e7f3      	b.n	8010398 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80103b0:	d201      	bcs.n	80103b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80103b2:	b281      	uxth	r1, r0
 80103b4:	e7f0      	b.n	8010398 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80103b6:	442a      	add	r2, r5
 80103b8:	8850      	ldrh	r0, [r2, #2]
 80103ba:	bd70      	pop	{r4, r5, r6, pc}
 80103bc:	2000      	movs	r0, #0
 80103be:	e7fc      	b.n	80103ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080103c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80103c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103c4:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80103c6:	886f      	ldrh	r7, [r5, #2]
 80103c8:	4604      	mov	r4, r0
 80103ca:	087f      	lsrs	r7, r7, #1
 80103cc:	260b      	movs	r6, #11
 80103ce:	3e01      	subs	r6, #1
 80103d0:	d01b      	beq.n	801040a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80103d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80103d4:	b92b      	cbnz	r3, 80103e2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80103d6:	4b0e      	ldr	r3, [pc, #56]	; (8010410 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80103d8:	4a0e      	ldr	r2, [pc, #56]	; (8010414 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80103da:	480f      	ldr	r0, [pc, #60]	; (8010418 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 80103dc:	21c0      	movs	r1, #192	; 0xc0
 80103de:	f00c fc6d 	bl	801ccbc <__assert_func>
 80103e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80103e4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80103e8:	462a      	mov	r2, r5
 80103ea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80103ee:	4639      	mov	r1, r7
 80103f0:	4643      	mov	r3, r8
 80103f2:	4620      	mov	r0, r4
 80103f4:	f7ff ffc6 	bl	8010384 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80103f8:	b138      	cbz	r0, 801040a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80103fa:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80103fe:	4642      	mov	r2, r8
 8010400:	4620      	mov	r0, r4
 8010402:	f7ff ff8b 	bl	801031c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8010406:	2800      	cmp	r0, #0
 8010408:	d1e1      	bne.n	80103ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801040a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801040e:	bf00      	nop
 8010410:	0801f0e0 	.word	0x0801f0e0
 8010414:	08020af7 	.word	0x08020af7
 8010418:	0801f1b2 	.word	0x0801f1b2

0801041c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801041c:	b570      	push	{r4, r5, r6, lr}
 801041e:	694a      	ldr	r2, [r1, #20]
 8010420:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010422:	684b      	ldr	r3, [r1, #4]
 8010424:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010426:	1b54      	subs	r4, r2, r5
 8010428:	f000 8106 	beq.w	8010638 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801042c:	1b9b      	subs	r3, r3, r6
 801042e:	d003      	beq.n	8010438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010430:	4363      	muls	r3, r4
 8010432:	2210      	movs	r2, #16
 8010434:	fb93 f3f2 	sdiv	r3, r3, r2
 8010438:	680c      	ldr	r4, [r1, #0]
 801043a:	698a      	ldr	r2, [r1, #24]
 801043c:	1b65      	subs	r5, r4, r5
 801043e:	f000 80fd 	beq.w	801063c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8010442:	1b92      	subs	r2, r2, r6
 8010444:	d003      	beq.n	801044e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010446:	436a      	muls	r2, r5
 8010448:	2410      	movs	r4, #16
 801044a:	fb92 f2f4 	sdiv	r2, r2, r4
 801044e:	1a9b      	subs	r3, r3, r2
 8010450:	ee07 3a90 	vmov	s15, r3
 8010454:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8010678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801045c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010460:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010464:	460a      	mov	r2, r1
 8010466:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801046a:	4603      	mov	r3, r0
 801046c:	f100 040c 	add.w	r4, r0, #12
 8010470:	eeb1 6a43 	vneg.f32	s12, s6
 8010474:	edd2 7a02 	vldr	s15, [r2, #8]
 8010478:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801047c:	3214      	adds	r2, #20
 801047e:	ece3 6a01 	vstmia	r3!, {s13}
 8010482:	ed52 7a02 	vldr	s15, [r2, #-8]
 8010486:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801048a:	429c      	cmp	r4, r3
 801048c:	edc3 7a02 	vstr	s15, [r3, #8]
 8010490:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010494:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010498:	edc3 7a05 	vstr	s15, [r3, #20]
 801049c:	d1ea      	bne.n	8010474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801049e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80104a0:	698b      	ldr	r3, [r1, #24]
 80104a2:	edd0 4a02 	vldr	s9, [r0, #8]
 80104a6:	edd0 3a00 	vldr	s7, [r0]
 80104aa:	edd0 6a01 	vldr	s13, [r0, #4]
 80104ae:	ed90 5a05 	vldr	s10, [r0, #20]
 80104b2:	ed90 2a03 	vldr	s4, [r0, #12]
 80104b6:	edd0 5a04 	vldr	s11, [r0, #16]
 80104ba:	ed90 1a07 	vldr	s2, [r0, #28]
 80104be:	edd0 2a06 	vldr	s5, [r0, #24]
 80104c2:	1a9b      	subs	r3, r3, r2
 80104c4:	ee07 3a90 	vmov	s15, r3
 80104c8:	684b      	ldr	r3, [r1, #4]
 80104ca:	1a9b      	subs	r3, r3, r2
 80104cc:	ee07 3a10 	vmov	s14, r3
 80104d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80104d4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80104d8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80104dc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80104e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80104e4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80104e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80104ec:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80104f0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80104f4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80104f8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80104fc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8010500:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010502:	694a      	ldr	r2, [r1, #20]
 8010504:	1b13      	subs	r3, r2, r4
 8010506:	ee07 3a10 	vmov	s14, r3
 801050a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801050e:	680b      	ldr	r3, [r1, #0]
 8010510:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010514:	1b1b      	subs	r3, r3, r4
 8010516:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801051a:	ee07 3a10 	vmov	s14, r3
 801051e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010522:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010526:	eee6 4a87 	vfma.f32	s9, s13, s14
 801052a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801052e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8010532:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010534:	698b      	ldr	r3, [r1, #24]
 8010536:	1a9b      	subs	r3, r3, r2
 8010538:	ee06 3a90 	vmov	s13, r3
 801053c:	684b      	ldr	r3, [r1, #4]
 801053e:	1a9b      	subs	r3, r3, r2
 8010540:	ee07 3a10 	vmov	s14, r3
 8010544:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010548:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801054c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8010550:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010554:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010558:	eee5 6a87 	vfma.f32	s13, s11, s14
 801055c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8010560:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8010564:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010566:	694a      	ldr	r2, [r1, #20]
 8010568:	1b13      	subs	r3, r2, r4
 801056a:	ee07 3a10 	vmov	s14, r3
 801056e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010572:	680b      	ldr	r3, [r1, #0]
 8010574:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010578:	1b1b      	subs	r3, r3, r4
 801057a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801057e:	ee07 3a10 	vmov	s14, r3
 8010582:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010586:	ee27 7a04 	vmul.f32	s14, s14, s8
 801058a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801058e:	edd0 5a08 	vldr	s11, [r0, #32]
 8010592:	ee25 5a06 	vmul.f32	s10, s10, s12
 8010596:	ee31 1a65 	vsub.f32	s2, s2, s11
 801059a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801059e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80105a0:	698b      	ldr	r3, [r1, #24]
 80105a2:	1a9b      	subs	r3, r3, r2
 80105a4:	ee07 3a10 	vmov	s14, r3
 80105a8:	684b      	ldr	r3, [r1, #4]
 80105aa:	1a9b      	subs	r3, r3, r2
 80105ac:	ee01 3a90 	vmov	s3, r3
 80105b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105b4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80105b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105bc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80105c0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80105c4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80105c8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80105cc:	ee27 7a03 	vmul.f32	s14, s14, s6
 80105d0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80105d4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80105d6:	694a      	ldr	r2, [r1, #20]
 80105d8:	1b13      	subs	r3, r2, r4
 80105da:	ee03 3a10 	vmov	s6, r3
 80105de:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80105e2:	680b      	ldr	r3, [r1, #0]
 80105e4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80105e8:	1b1b      	subs	r3, r3, r4
 80105ea:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80105ee:	ee03 3a10 	vmov	s6, r3
 80105f2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80105f6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80105fa:	eee1 5a04 	vfma.f32	s11, s2, s8
 80105fe:	ee25 6a86 	vmul.f32	s12, s11, s12
 8010602:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010606:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801060a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801060e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8010612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010616:	dd13      	ble.n	8010640 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010618:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801061c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8010620:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010622:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010626:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801062a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801062e:	dd15      	ble.n	801065c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8010630:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010634:	6403      	str	r3, [r0, #64]	; 0x40
 8010636:	bd70      	pop	{r4, r5, r6, pc}
 8010638:	4623      	mov	r3, r4
 801063a:	e6fd      	b.n	8010438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801063c:	462a      	mov	r2, r5
 801063e:	e706      	b.n	801044e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010640:	d502      	bpl.n	8010648 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8010642:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010646:	e7e9      	b.n	801061c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010648:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801064c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8010650:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010658:	dade      	bge.n	8010618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801065a:	e7f2      	b.n	8010642 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801065c:	d502      	bpl.n	8010664 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801065e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010662:	e7e7      	b.n	8010634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010664:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8010668:	eee3 4a86 	vfma.f32	s9, s7, s12
 801066c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8010670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010674:	dadc      	bge.n	8010630 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8010676:	e7f2      	b.n	801065e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8010678:	3d800000 	.word	0x3d800000

0801067c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801067c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010680:	2714      	movs	r7, #20
 8010682:	435f      	muls	r7, r3
 8010684:	eb02 0c07 	add.w	ip, r2, r7
 8010688:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801068c:	f115 0e0f 	adds.w	lr, r5, #15
 8010690:	d432      	bmi.n	80106f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 8010692:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8010696:	9c08      	ldr	r4, [sp, #32]
 8010698:	f8c0 e014 	str.w	lr, [r0, #20]
 801069c:	2614      	movs	r6, #20
 801069e:	4366      	muls	r6, r4
 80106a0:	eb02 0806 	add.w	r8, r2, r6
 80106a4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80106a8:	f115 040f 	adds.w	r4, r5, #15
 80106ac:	d430      	bmi.n	8010710 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80106ae:	1124      	asrs	r4, r4, #4
 80106b0:	eba4 040e 	sub.w	r4, r4, lr
 80106b4:	6184      	str	r4, [r0, #24]
 80106b6:	2c00      	cmp	r4, #0
 80106b8:	f000 80a9 	beq.w	801080e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 80106bc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80106c0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80106c4:	5995      	ldr	r5, [r2, r6]
 80106c6:	eba4 0809 	sub.w	r8, r4, r9
 80106ca:	59d4      	ldr	r4, [r2, r7]
 80106cc:	eba5 0a04 	sub.w	sl, r5, r4
 80106d0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80106d4:	fb0e fe05 	mul.w	lr, lr, r5
 80106d8:	fb0a ee19 	mls	lr, sl, r9, lr
 80106dc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80106e0:	fb08 e404 	mla	r4, r8, r4, lr
 80106e4:	3c01      	subs	r4, #1
 80106e6:	2e00      	cmp	r6, #0
 80106e8:	4434      	add	r4, r6
 80106ea:	dc1d      	bgt.n	8010728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 80106ec:	4b5a      	ldr	r3, [pc, #360]	; (8010858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 80106ee:	4a5b      	ldr	r2, [pc, #364]	; (801085c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 80106f0:	485b      	ldr	r0, [pc, #364]	; (8010860 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 80106f2:	21f7      	movs	r1, #247	; 0xf7
 80106f4:	f00c fae2 	bl	801ccbc <__assert_func>
 80106f8:	f1c5 0501 	rsb	r5, r5, #1
 80106fc:	f015 050f 	ands.w	r5, r5, #15
 8010700:	bf18      	it	ne
 8010702:	2501      	movne	r5, #1
 8010704:	2410      	movs	r4, #16
 8010706:	fb9e fef4 	sdiv	lr, lr, r4
 801070a:	ebae 0e05 	sub.w	lr, lr, r5
 801070e:	e7c2      	b.n	8010696 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 8010710:	f1c5 0501 	rsb	r5, r5, #1
 8010714:	f015 050f 	ands.w	r5, r5, #15
 8010718:	bf18      	it	ne
 801071a:	2501      	movne	r5, #1
 801071c:	f04f 0910 	mov.w	r9, #16
 8010720:	fb94 f4f9 	sdiv	r4, r4, r9
 8010724:	1b64      	subs	r4, r4, r5
 8010726:	e7c3      	b.n	80106b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 8010728:	2c00      	cmp	r4, #0
 801072a:	db72      	blt.n	8010812 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 801072c:	fb94 fef6 	sdiv	lr, r4, r6
 8010730:	f8c0 e000 	str.w	lr, [r0]
 8010734:	fb06 441e 	mls	r4, r6, lr, r4
 8010738:	6104      	str	r4, [r0, #16]
 801073a:	2d00      	cmp	r5, #0
 801073c:	db7b      	blt.n	8010836 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 801073e:	fb95 f4f6 	sdiv	r4, r5, r6
 8010742:	6044      	str	r4, [r0, #4]
 8010744:	fb06 5514 	mls	r5, r6, r4, r5
 8010748:	6085      	str	r5, [r0, #8]
 801074a:	60c6      	str	r6, [r0, #12]
 801074c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8010750:	6945      	ldr	r5, [r0, #20]
 8010752:	59d2      	ldr	r2, [r2, r7]
 8010754:	eddf 6a43 	vldr	s13, [pc, #268]	; 8010864 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 8010758:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801075c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8010760:	ee07 4a10 	vmov	s14, r4
 8010764:	6804      	ldr	r4, [r0, #0]
 8010766:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801076a:	ee07 2a90 	vmov	s15, r2
 801076e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010776:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801077a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801077e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010782:	edd3 6a00 	vldr	s13, [r3]
 8010786:	eee6 6a07 	vfma.f32	s13, s12, s14
 801078a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801078e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8010792:	edc0 6a07 	vstr	s13, [r0, #28]
 8010796:	edd0 6a01 	vldr	s13, [r0, #4]
 801079a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801079e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80107a2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80107a6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80107aa:	ed80 6a08 	vstr	s12, [r0, #32]
 80107ae:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80107b0:	6242      	str	r2, [r0, #36]	; 0x24
 80107b2:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80107b6:	ed93 6a03 	vldr	s12, [r3, #12]
 80107ba:	eea5 6a87 	vfma.f32	s12, s11, s14
 80107be:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80107c2:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80107c6:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80107ca:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80107ce:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80107d2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80107d6:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80107da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80107dc:	6302      	str	r2, [r0, #48]	; 0x30
 80107de:	ed93 6a06 	vldr	s12, [r3, #24]
 80107e2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80107e6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80107ea:	eeb0 7a46 	vmov.f32	s14, s12
 80107ee:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80107f2:	eea6 7a27 	vfma.f32	s14, s12, s15
 80107f6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80107fa:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80107fe:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8010802:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010806:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801080a:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801080c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801080e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010812:	4264      	negs	r4, r4
 8010814:	fb94 fef6 	sdiv	lr, r4, r6
 8010818:	f1ce 0800 	rsb	r8, lr, #0
 801081c:	fb06 441e 	mls	r4, r6, lr, r4
 8010820:	f8c0 8000 	str.w	r8, [r0]
 8010824:	6104      	str	r4, [r0, #16]
 8010826:	2c00      	cmp	r4, #0
 8010828:	d087      	beq.n	801073a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 801082a:	ea6f 0e0e 	mvn.w	lr, lr
 801082e:	f8c0 e000 	str.w	lr, [r0]
 8010832:	1b34      	subs	r4, r6, r4
 8010834:	e780      	b.n	8010738 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 8010836:	426d      	negs	r5, r5
 8010838:	fb95 f4f6 	sdiv	r4, r5, r6
 801083c:	f1c4 0e00 	rsb	lr, r4, #0
 8010840:	fb06 5514 	mls	r5, r6, r4, r5
 8010844:	f8c0 e004 	str.w	lr, [r0, #4]
 8010848:	6085      	str	r5, [r0, #8]
 801084a:	2d00      	cmp	r5, #0
 801084c:	f43f af7d 	beq.w	801074a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 8010850:	43e4      	mvns	r4, r4
 8010852:	6044      	str	r4, [r0, #4]
 8010854:	1b75      	subs	r5, r6, r5
 8010856:	e777      	b.n	8010748 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 8010858:	08020e51 	.word	0x08020e51
 801085c:	08020e90 	.word	0x08020e90
 8010860:	08020e61 	.word	0x08020e61
 8010864:	3d800000 	.word	0x3d800000

08010868 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010868:	4b01      	ldr	r3, [pc, #4]	; (8010870 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801086a:	6018      	str	r0, [r3, #0]
 801086c:	4770      	bx	lr
 801086e:	bf00      	nop
 8010870:	2000a86c 	.word	0x2000a86c

08010874 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010874:	4b06      	ldr	r3, [pc, #24]	; (8010890 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010876:	881a      	ldrh	r2, [r3, #0]
 8010878:	4282      	cmp	r2, r0
 801087a:	d807      	bhi.n	801088c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801087c:	4b05      	ldr	r3, [pc, #20]	; (8010894 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801087e:	881b      	ldrh	r3, [r3, #0]
 8010880:	4413      	add	r3, r2
 8010882:	4298      	cmp	r0, r3
 8010884:	bfac      	ite	ge
 8010886:	2000      	movge	r0, #0
 8010888:	2001      	movlt	r0, #1
 801088a:	4770      	bx	lr
 801088c:	2000      	movs	r0, #0
 801088e:	4770      	bx	lr
 8010890:	2000a88c 	.word	0x2000a88c
 8010894:	2000a890 	.word	0x2000a890

08010898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010898:	b508      	push	{r3, lr}
 801089a:	4601      	mov	r1, r0
 801089c:	f7ff ffea 	bl	8010874 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80108a0:	b118      	cbz	r0, 80108aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80108a2:	4b02      	ldr	r3, [pc, #8]	; (80108ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80108a4:	681b      	ldr	r3, [r3, #0]
 80108a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80108aa:	bd08      	pop	{r3, pc}
 80108ac:	2000a870 	.word	0x2000a870

080108b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80108b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108b2:	4c24      	ldr	r4, [pc, #144]	; (8010944 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80108b4:	6823      	ldr	r3, [r4, #0]
 80108b6:	2b00      	cmp	r3, #0
 80108b8:	d042      	beq.n	8010940 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80108ba:	4a23      	ldr	r2, [pc, #140]	; (8010948 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80108bc:	4d23      	ldr	r5, [pc, #140]	; (801094c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80108be:	8811      	ldrh	r1, [r2, #0]
 80108c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80108c4:	4822      	ldr	r0, [pc, #136]	; (8010950 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80108c6:	4461      	add	r1, ip
 80108c8:	1c4a      	adds	r2, r1, #1
 80108ca:	f022 0201 	bic.w	r2, r2, #1
 80108ce:	008f      	lsls	r7, r1, #2
 80108d0:	0412      	lsls	r2, r2, #16
 80108d2:	19de      	adds	r6, r3, r7
 80108d4:	0c12      	lsrs	r2, r2, #16
 80108d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80108da:	6006      	str	r6, [r0, #0]
 80108dc:	4e1d      	ldr	r6, [pc, #116]	; (8010954 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80108de:	19da      	adds	r2, r3, r7
 80108e0:	6032      	str	r2, [r6, #0]
 80108e2:	220e      	movs	r2, #14
 80108e4:	fb02 f20c 	mul.w	r2, r2, ip
 80108e8:	3203      	adds	r2, #3
 80108ea:	f022 0203 	bic.w	r2, r2, #3
 80108ee:	443a      	add	r2, r7
 80108f0:	4f19      	ldr	r7, [pc, #100]	; (8010958 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80108f2:	4413      	add	r3, r2
 80108f4:	603b      	str	r3, [r7, #0]
 80108f6:	4f19      	ldr	r7, [pc, #100]	; (801095c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80108f8:	2300      	movs	r3, #0
 80108fa:	803b      	strh	r3, [r7, #0]
 80108fc:	4f18      	ldr	r7, [pc, #96]	; (8010960 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80108fe:	683f      	ldr	r7, [r7, #0]
 8010900:	1aba      	subs	r2, r7, r2
 8010902:	4f18      	ldr	r7, [pc, #96]	; (8010964 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010904:	603a      	str	r2, [r7, #0]
 8010906:	4a18      	ldr	r2, [pc, #96]	; (8010968 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010908:	469c      	mov	ip, r3
 801090a:	8013      	strh	r3, [r2, #0]
 801090c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010910:	428b      	cmp	r3, r1
 8010912:	d10d      	bne.n	8010930 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010914:	882d      	ldrh	r5, [r5, #0]
 8010916:	6830      	ldr	r0, [r6, #0]
 8010918:	2300      	movs	r3, #0
 801091a:	240e      	movs	r4, #14
 801091c:	429d      	cmp	r5, r3
 801091e:	d90f      	bls.n	8010940 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010920:	fb04 0203 	mla	r2, r4, r3, r0
 8010924:	3301      	adds	r3, #1
 8010926:	7b11      	ldrb	r1, [r2, #12]
 8010928:	f36f 1145 	bfc	r1, #5, #1
 801092c:	7311      	strb	r1, [r2, #12]
 801092e:	e7f5      	b.n	801091c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010930:	6822      	ldr	r2, [r4, #0]
 8010932:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010936:	6802      	ldr	r2, [r0, #0]
 8010938:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801093c:	3301      	adds	r3, #1
 801093e:	e7e7      	b.n	8010910 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8010940:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010942:	bf00      	nop
 8010944:	2000a870 	.word	0x2000a870
 8010948:	2000a88c 	.word	0x2000a88c
 801094c:	2000a890 	.word	0x2000a890
 8010950:	2000a884 	.word	0x2000a884
 8010954:	2000a874 	.word	0x2000a874
 8010958:	2000a87c 	.word	0x2000a87c
 801095c:	2000a88e 	.word	0x2000a88e
 8010960:	2000a878 	.word	0x2000a878
 8010964:	2000a888 	.word	0x2000a888
 8010968:	2000a880 	.word	0x2000a880

0801096c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801096c:	b510      	push	{r4, lr}
 801096e:	4b10      	ldr	r3, [pc, #64]	; (80109b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8010970:	681b      	ldr	r3, [r3, #0]
 8010972:	b9db      	cbnz	r3, 80109ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010974:	b1d1      	cbz	r1, 80109ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010976:	4b0f      	ldr	r3, [pc, #60]	; (80109b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8010978:	801a      	strh	r2, [r3, #0]
 801097a:	4b0f      	ldr	r3, [pc, #60]	; (80109b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801097c:	881b      	ldrh	r3, [r3, #0]
 801097e:	b292      	uxth	r2, r2
 8010980:	240e      	movs	r4, #14
 8010982:	4413      	add	r3, r2
 8010984:	4362      	muls	r2, r4
 8010986:	2406      	movs	r4, #6
 8010988:	fb04 2203 	mla	r2, r4, r3, r2
 801098c:	428a      	cmp	r2, r1
 801098e:	d305      	bcc.n	801099c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8010990:	4b0a      	ldr	r3, [pc, #40]	; (80109bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8010992:	4a0b      	ldr	r2, [pc, #44]	; (80109c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8010994:	480b      	ldr	r0, [pc, #44]	; (80109c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8010996:	2134      	movs	r1, #52	; 0x34
 8010998:	f00c f990 	bl	801ccbc <__assert_func>
 801099c:	4b0a      	ldr	r3, [pc, #40]	; (80109c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801099e:	6019      	str	r1, [r3, #0]
 80109a0:	4b0a      	ldr	r3, [pc, #40]	; (80109cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 80109a2:	6018      	str	r0, [r3, #0]
 80109a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109a8:	f7ff bf82 	b.w	80108b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80109ac:	bd10      	pop	{r4, pc}
 80109ae:	bf00      	nop
 80109b0:	2000a87c 	.word	0x2000a87c
 80109b4:	2000a890 	.word	0x2000a890
 80109b8:	2000a88c 	.word	0x2000a88c
 80109bc:	08020f2e 	.word	0x08020f2e
 80109c0:	08020f87 	.word	0x08020f87
 80109c4:	08020f09 	.word	0x08020f09
 80109c8:	2000a878 	.word	0x2000a878
 80109cc:	2000a870 	.word	0x2000a870

080109d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80109d0:	b470      	push	{r4, r5, r6}
 80109d2:	4c07      	ldr	r4, [pc, #28]	; (80109f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80109d4:	6826      	ldr	r6, [r4, #0]
 80109d6:	4605      	mov	r5, r0
 80109d8:	4610      	mov	r0, r2
 80109da:	9a03      	ldr	r2, [sp, #12]
 80109dc:	b936      	cbnz	r6, 80109ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80109de:	6025      	str	r5, [r4, #0]
 80109e0:	4c04      	ldr	r4, [pc, #16]	; (80109f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80109e2:	8021      	strh	r1, [r4, #0]
 80109e4:	bc70      	pop	{r4, r5, r6}
 80109e6:	4619      	mov	r1, r3
 80109e8:	f7ff bfc0 	b.w	801096c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80109ec:	bc70      	pop	{r4, r5, r6}
 80109ee:	4770      	bx	lr
 80109f0:	2000a894 	.word	0x2000a894
 80109f4:	2000a88c 	.word	0x2000a88c

080109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80109f8:	b508      	push	{r3, lr}
 80109fa:	4b17      	ldr	r3, [pc, #92]	; (8010a58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80109fc:	6819      	ldr	r1, [r3, #0]
 80109fe:	b931      	cbnz	r1, 8010a0e <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8010a00:	4b16      	ldr	r3, [pc, #88]	; (8010a5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010a02:	4a17      	ldr	r2, [pc, #92]	; (8010a60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010a04:	4817      	ldr	r0, [pc, #92]	; (8010a64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8010a06:	f240 4184 	movw	r1, #1156	; 0x484
 8010a0a:	f00c f957 	bl	801ccbc <__assert_func>
 8010a0e:	4a16      	ldr	r2, [pc, #88]	; (8010a68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8010a10:	8803      	ldrh	r3, [r0, #0]
 8010a12:	8812      	ldrh	r2, [r2, #0]
 8010a14:	4293      	cmp	r3, r2
 8010a16:	d204      	bcs.n	8010a22 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8010a18:	2214      	movs	r2, #20
 8010a1a:	fb02 1303 	mla	r3, r2, r3, r1
 8010a1e:	8918      	ldrh	r0, [r3, #8]
 8010a20:	bd08      	pop	{r3, pc}
 8010a22:	4912      	ldr	r1, [pc, #72]	; (8010a6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 8010a24:	8809      	ldrh	r1, [r1, #0]
 8010a26:	4411      	add	r1, r2
 8010a28:	428b      	cmp	r3, r1
 8010a2a:	da06      	bge.n	8010a3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8010a2c:	1a9b      	subs	r3, r3, r2
 8010a2e:	4a10      	ldr	r2, [pc, #64]	; (8010a70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 8010a30:	6812      	ldr	r2, [r2, #0]
 8010a32:	210e      	movs	r1, #14
 8010a34:	fb01 2303 	mla	r3, r1, r3, r2
 8010a38:	e7f1      	b.n	8010a1e <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8010a3a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010a3e:	4293      	cmp	r3, r2
 8010a40:	d107      	bne.n	8010a52 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8010a42:	4b0c      	ldr	r3, [pc, #48]	; (8010a74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8010a44:	781b      	ldrb	r3, [r3, #0]
 8010a46:	b913      	cbnz	r3, 8010a4e <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8010a48:	4b0b      	ldr	r3, [pc, #44]	; (8010a78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 8010a4a:	8818      	ldrh	r0, [r3, #0]
 8010a4c:	e7e8      	b.n	8010a20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010a4e:	4b0b      	ldr	r3, [pc, #44]	; (8010a7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8010a50:	e7fb      	b.n	8010a4a <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8010a52:	2000      	movs	r0, #0
 8010a54:	e7e4      	b.n	8010a20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010a56:	bf00      	nop
 8010a58:	2000a894 	.word	0x2000a894
 8010a5c:	080202f8 	.word	0x080202f8
 8010a60:	08021034 	.word	0x08021034
 8010a64:	08020f09 	.word	0x08020f09
 8010a68:	2000a88c 	.word	0x2000a88c
 8010a6c:	2000a890 	.word	0x2000a890
 8010a70:	2000a874 	.word	0x2000a874
 8010a74:	2000a804 	.word	0x2000a804
 8010a78:	2000a806 	.word	0x2000a806
 8010a7c:	2000a808 	.word	0x2000a808

08010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010a80:	b508      	push	{r3, lr}
 8010a82:	4b17      	ldr	r3, [pc, #92]	; (8010ae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010a84:	6819      	ldr	r1, [r3, #0]
 8010a86:	b931      	cbnz	r1, 8010a96 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010a88:	4b16      	ldr	r3, [pc, #88]	; (8010ae4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010a8a:	4a17      	ldr	r2, [pc, #92]	; (8010ae8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8010a8c:	4817      	ldr	r0, [pc, #92]	; (8010aec <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8010a8e:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8010a92:	f00c f913 	bl	801ccbc <__assert_func>
 8010a96:	4a16      	ldr	r2, [pc, #88]	; (8010af0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8010a98:	8803      	ldrh	r3, [r0, #0]
 8010a9a:	8812      	ldrh	r2, [r2, #0]
 8010a9c:	4293      	cmp	r3, r2
 8010a9e:	d204      	bcs.n	8010aaa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8010aa0:	2214      	movs	r2, #20
 8010aa2:	fb02 1303 	mla	r3, r2, r3, r1
 8010aa6:	8958      	ldrh	r0, [r3, #10]
 8010aa8:	bd08      	pop	{r3, pc}
 8010aaa:	4912      	ldr	r1, [pc, #72]	; (8010af4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 8010aac:	8809      	ldrh	r1, [r1, #0]
 8010aae:	4411      	add	r1, r2
 8010ab0:	428b      	cmp	r3, r1
 8010ab2:	da06      	bge.n	8010ac2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8010ab4:	1a9b      	subs	r3, r3, r2
 8010ab6:	4a10      	ldr	r2, [pc, #64]	; (8010af8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 8010ab8:	6812      	ldr	r2, [r2, #0]
 8010aba:	210e      	movs	r1, #14
 8010abc:	fb01 2303 	mla	r3, r1, r3, r2
 8010ac0:	e7f1      	b.n	8010aa6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8010ac2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010ac6:	4293      	cmp	r3, r2
 8010ac8:	d107      	bne.n	8010ada <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 8010aca:	4b0c      	ldr	r3, [pc, #48]	; (8010afc <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 8010acc:	781b      	ldrb	r3, [r3, #0]
 8010ace:	b913      	cbnz	r3, 8010ad6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 8010ad0:	4b0b      	ldr	r3, [pc, #44]	; (8010b00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 8010ad2:	8818      	ldrh	r0, [r3, #0]
 8010ad4:	e7e8      	b.n	8010aa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8010ad6:	4b0b      	ldr	r3, [pc, #44]	; (8010b04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 8010ad8:	e7fb      	b.n	8010ad2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 8010ada:	2000      	movs	r0, #0
 8010adc:	e7e4      	b.n	8010aa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8010ade:	bf00      	nop
 8010ae0:	2000a894 	.word	0x2000a894
 8010ae4:	080202f8 	.word	0x080202f8
 8010ae8:	08021060 	.word	0x08021060
 8010aec:	08020f09 	.word	0x08020f09
 8010af0:	2000a88c 	.word	0x2000a88c
 8010af4:	2000a890 	.word	0x2000a890
 8010af8:	2000a874 	.word	0x2000a874
 8010afc:	2000a804 	.word	0x2000a804
 8010b00:	2000a808 	.word	0x2000a808
 8010b04:	2000a806 	.word	0x2000a806

08010b08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010b08:	b510      	push	{r4, lr}
 8010b0a:	4b23      	ldr	r3, [pc, #140]	; (8010b98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010b0c:	681c      	ldr	r4, [r3, #0]
 8010b0e:	b934      	cbnz	r4, 8010b1e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8010b10:	4b22      	ldr	r3, [pc, #136]	; (8010b9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010b12:	4a23      	ldr	r2, [pc, #140]	; (8010ba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8010b14:	4823      	ldr	r0, [pc, #140]	; (8010ba4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010b16:	f240 41ac 	movw	r1, #1196	; 0x4ac
 8010b1a:	f00c f8cf 	bl	801ccbc <__assert_func>
 8010b1e:	4a22      	ldr	r2, [pc, #136]	; (8010ba8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010b20:	880b      	ldrh	r3, [r1, #0]
 8010b22:	8812      	ldrh	r2, [r2, #0]
 8010b24:	4293      	cmp	r3, r2
 8010b26:	d211      	bcs.n	8010b4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8010b28:	2214      	movs	r2, #20
 8010b2a:	fb02 4303 	mla	r3, r2, r3, r4
 8010b2e:	8a1a      	ldrh	r2, [r3, #16]
 8010b30:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010b34:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010b38:	8a5b      	ldrh	r3, [r3, #18]
 8010b3a:	8004      	strh	r4, [r0, #0]
 8010b3c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010b40:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010b44:	8041      	strh	r1, [r0, #2]
 8010b46:	8082      	strh	r2, [r0, #4]
 8010b48:	80c3      	strh	r3, [r0, #6]
 8010b4a:	e00e      	b.n	8010b6a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010b4c:	4917      	ldr	r1, [pc, #92]	; (8010bac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8010b4e:	8809      	ldrh	r1, [r1, #0]
 8010b50:	4411      	add	r1, r2
 8010b52:	428b      	cmp	r3, r1
 8010b54:	da0a      	bge.n	8010b6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8010b56:	1a9b      	subs	r3, r3, r2
 8010b58:	4a15      	ldr	r2, [pc, #84]	; (8010bb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8010b5a:	6812      	ldr	r2, [r2, #0]
 8010b5c:	210e      	movs	r1, #14
 8010b5e:	fb01 2303 	mla	r3, r1, r3, r2
 8010b62:	681a      	ldr	r2, [r3, #0]
 8010b64:	6002      	str	r2, [r0, #0]
 8010b66:	685a      	ldr	r2, [r3, #4]
 8010b68:	6042      	str	r2, [r0, #4]
 8010b6a:	bd10      	pop	{r4, pc}
 8010b6c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010b70:	4293      	cmp	r3, r2
 8010b72:	d10b      	bne.n	8010b8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010b74:	4b0f      	ldr	r3, [pc, #60]	; (8010bb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8010b76:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010b7a:	4b0f      	ldr	r3, [pc, #60]	; (8010bb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8010b7c:	8081      	strh	r1, [r0, #4]
 8010b7e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010b82:	80c2      	strh	r2, [r0, #6]
 8010b84:	2300      	movs	r3, #0
 8010b86:	8003      	strh	r3, [r0, #0]
 8010b88:	8043      	strh	r3, [r0, #2]
 8010b8a:	e7ee      	b.n	8010b6a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010b8c:	2300      	movs	r3, #0
 8010b8e:	8003      	strh	r3, [r0, #0]
 8010b90:	8043      	strh	r3, [r0, #2]
 8010b92:	8083      	strh	r3, [r0, #4]
 8010b94:	e7d8      	b.n	8010b48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8010b96:	bf00      	nop
 8010b98:	2000a894 	.word	0x2000a894
 8010b9c:	080202f8 	.word	0x080202f8
 8010ba0:	08020fcd 	.word	0x08020fcd
 8010ba4:	08020f09 	.word	0x08020f09
 8010ba8:	2000a88c 	.word	0x2000a88c
 8010bac:	2000a890 	.word	0x2000a890
 8010bb0:	2000a874 	.word	0x2000a874
 8010bb4:	2000a800 	.word	0x2000a800
 8010bb8:	2000a802 	.word	0x2000a802

08010bbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010bbc:	4b18      	ldr	r3, [pc, #96]	; (8010c20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8010bbe:	681b      	ldr	r3, [r3, #0]
 8010bc0:	b34b      	cbz	r3, 8010c16 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010bc2:	4a18      	ldr	r2, [pc, #96]	; (8010c24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010bc4:	8800      	ldrh	r0, [r0, #0]
 8010bc6:	8812      	ldrh	r2, [r2, #0]
 8010bc8:	4290      	cmp	r0, r2
 8010bca:	d211      	bcs.n	8010bf0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8010bcc:	2214      	movs	r2, #20
 8010bce:	fb02 3300 	mla	r3, r2, r0, r3
 8010bd2:	8a1a      	ldrh	r2, [r3, #16]
 8010bd4:	8919      	ldrh	r1, [r3, #8]
 8010bd6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010bda:	428a      	cmp	r2, r1
 8010bdc:	db1d      	blt.n	8010c1a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010bde:	8a58      	ldrh	r0, [r3, #18]
 8010be0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010be4:	895b      	ldrh	r3, [r3, #10]
 8010be6:	4298      	cmp	r0, r3
 8010be8:	bfac      	ite	ge
 8010bea:	2000      	movge	r0, #0
 8010bec:	2001      	movlt	r0, #1
 8010bee:	4770      	bx	lr
 8010bf0:	4b0d      	ldr	r3, [pc, #52]	; (8010c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8010bf2:	881b      	ldrh	r3, [r3, #0]
 8010bf4:	4413      	add	r3, r2
 8010bf6:	4298      	cmp	r0, r3
 8010bf8:	da0d      	bge.n	8010c16 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010bfa:	4b0c      	ldr	r3, [pc, #48]	; (8010c2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8010bfc:	681b      	ldr	r3, [r3, #0]
 8010bfe:	1a80      	subs	r0, r0, r2
 8010c00:	220e      	movs	r2, #14
 8010c02:	fb02 3300 	mla	r3, r2, r0, r3
 8010c06:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010c0a:	891a      	ldrh	r2, [r3, #8]
 8010c0c:	4291      	cmp	r1, r2
 8010c0e:	db04      	blt.n	8010c1a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010c10:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010c14:	e7e6      	b.n	8010be4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8010c16:	2000      	movs	r0, #0
 8010c18:	4770      	bx	lr
 8010c1a:	2001      	movs	r0, #1
 8010c1c:	4770      	bx	lr
 8010c1e:	bf00      	nop
 8010c20:	2000a894 	.word	0x2000a894
 8010c24:	2000a88c 	.word	0x2000a88c
 8010c28:	2000a890 	.word	0x2000a890
 8010c2c:	2000a874 	.word	0x2000a874

08010c30 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010c30:	b508      	push	{r3, lr}
 8010c32:	4b12      	ldr	r3, [pc, #72]	; (8010c7c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010c34:	6819      	ldr	r1, [r3, #0]
 8010c36:	b931      	cbnz	r1, 8010c46 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010c38:	4b11      	ldr	r3, [pc, #68]	; (8010c80 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010c3a:	4a12      	ldr	r2, [pc, #72]	; (8010c84 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010c3c:	4812      	ldr	r0, [pc, #72]	; (8010c88 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010c3e:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8010c42:	f00c f83b 	bl	801ccbc <__assert_func>
 8010c46:	8803      	ldrh	r3, [r0, #0]
 8010c48:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010c4c:	4293      	cmp	r3, r2
 8010c4e:	d012      	beq.n	8010c76 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010c50:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010c54:	4293      	cmp	r3, r2
 8010c56:	d103      	bne.n	8010c60 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8010c58:	4b0c      	ldr	r3, [pc, #48]	; (8010c8c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010c5a:	681b      	ldr	r3, [r3, #0]
 8010c5c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010c5e:	bd08      	pop	{r3, pc}
 8010c60:	4a0b      	ldr	r2, [pc, #44]	; (8010c90 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8010c62:	6812      	ldr	r2, [r2, #0]
 8010c64:	b11a      	cbz	r2, 8010c6e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8010c66:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010c6a:	2800      	cmp	r0, #0
 8010c6c:	d1f7      	bne.n	8010c5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010c6e:	2214      	movs	r2, #20
 8010c70:	4353      	muls	r3, r2
 8010c72:	58c8      	ldr	r0, [r1, r3]
 8010c74:	e7f3      	b.n	8010c5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010c76:	2000      	movs	r0, #0
 8010c78:	e7f1      	b.n	8010c5e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010c7a:	bf00      	nop
 8010c7c:	2000a894 	.word	0x2000a894
 8010c80:	080202f8 	.word	0x080202f8
 8010c84:	08021003 	.word	0x08021003
 8010c88:	08020f09 	.word	0x08020f09
 8010c8c:	2000a80c 	.word	0x2000a80c
 8010c90:	2000a870 	.word	0x2000a870

08010c94 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010c94:	8802      	ldrh	r2, [r0, #0]
 8010c96:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8010c9a:	429a      	cmp	r2, r3
 8010c9c:	d845      	bhi.n	8010d2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010c9e:	4b24      	ldr	r3, [pc, #144]	; (8010d30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010ca0:	8818      	ldrh	r0, [r3, #0]
 8010ca2:	4282      	cmp	r2, r0
 8010ca4:	d221      	bcs.n	8010cea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8010ca6:	4b23      	ldr	r3, [pc, #140]	; (8010d34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010ca8:	6819      	ldr	r1, [r3, #0]
 8010caa:	2314      	movs	r3, #20
 8010cac:	fb03 1302 	mla	r3, r3, r2, r1
 8010cb0:	6858      	ldr	r0, [r3, #4]
 8010cb2:	2800      	cmp	r0, #0
 8010cb4:	d03a      	beq.n	8010d2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010cb6:	4920      	ldr	r1, [pc, #128]	; (8010d38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010cb8:	6809      	ldr	r1, [r1, #0]
 8010cba:	2900      	cmp	r1, #0
 8010cbc:	d036      	beq.n	8010d2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010cbe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010cc2:	2900      	cmp	r1, #0
 8010cc4:	d032      	beq.n	8010d2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010cc6:	891a      	ldrh	r2, [r3, #8]
 8010cc8:	8958      	ldrh	r0, [r3, #10]
 8010cca:	4350      	muls	r0, r2
 8010ccc:	7c5a      	ldrb	r2, [r3, #17]
 8010cce:	7cdb      	ldrb	r3, [r3, #19]
 8010cd0:	0952      	lsrs	r2, r2, #5
 8010cd2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010cd6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010cda:	2b0b      	cmp	r3, #11
 8010cdc:	bf18      	it	ne
 8010cde:	0040      	lslne	r0, r0, #1
 8010ce0:	3003      	adds	r0, #3
 8010ce2:	f020 0003 	bic.w	r0, r0, #3
 8010ce6:	4408      	add	r0, r1
 8010ce8:	4770      	bx	lr
 8010cea:	4b14      	ldr	r3, [pc, #80]	; (8010d3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8010cec:	881b      	ldrh	r3, [r3, #0]
 8010cee:	4403      	add	r3, r0
 8010cf0:	429a      	cmp	r2, r3
 8010cf2:	da1a      	bge.n	8010d2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010cf4:	4b12      	ldr	r3, [pc, #72]	; (8010d40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8010cf6:	681b      	ldr	r3, [r3, #0]
 8010cf8:	1a10      	subs	r0, r2, r0
 8010cfa:	210e      	movs	r1, #14
 8010cfc:	fb01 3000 	mla	r0, r1, r0, r3
 8010d00:	7b03      	ldrb	r3, [r0, #12]
 8010d02:	f003 031f 	and.w	r3, r3, #31
 8010d06:	2b0b      	cmp	r3, #11
 8010d08:	d10b      	bne.n	8010d22 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010d0a:	8903      	ldrh	r3, [r0, #8]
 8010d0c:	8940      	ldrh	r0, [r0, #10]
 8010d0e:	4358      	muls	r0, r3
 8010d10:	4b09      	ldr	r3, [pc, #36]	; (8010d38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010d12:	6819      	ldr	r1, [r3, #0]
 8010d14:	3003      	adds	r0, #3
 8010d16:	f020 0303 	bic.w	r3, r0, #3
 8010d1a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010d1e:	4418      	add	r0, r3
 8010d20:	4770      	bx	lr
 8010d22:	2b0d      	cmp	r3, #13
 8010d24:	d101      	bne.n	8010d2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010d26:	300d      	adds	r0, #13
 8010d28:	4770      	bx	lr
 8010d2a:	2000      	movs	r0, #0
 8010d2c:	4770      	bx	lr
 8010d2e:	bf00      	nop
 8010d30:	2000a88c 	.word	0x2000a88c
 8010d34:	2000a894 	.word	0x2000a894
 8010d38:	2000a870 	.word	0x2000a870
 8010d3c:	2000a890 	.word	0x2000a890
 8010d40:	2000a874 	.word	0x2000a874

08010d44 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010d44:	b510      	push	{r4, lr}
 8010d46:	4b17      	ldr	r3, [pc, #92]	; (8010da4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010d48:	6819      	ldr	r1, [r3, #0]
 8010d4a:	8803      	ldrh	r3, [r0, #0]
 8010d4c:	b1e9      	cbz	r1, 8010d8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8010d4e:	4a16      	ldr	r2, [pc, #88]	; (8010da8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010d50:	8812      	ldrh	r2, [r2, #0]
 8010d52:	429a      	cmp	r2, r3
 8010d54:	d90a      	bls.n	8010d6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8010d56:	2214      	movs	r2, #20
 8010d58:	fb02 1303 	mla	r3, r2, r3, r1
 8010d5c:	7c58      	ldrb	r0, [r3, #17]
 8010d5e:	0942      	lsrs	r2, r0, #5
 8010d60:	7cd8      	ldrb	r0, [r3, #19]
 8010d62:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010d66:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010d6a:	bd10      	pop	{r4, pc}
 8010d6c:	490f      	ldr	r1, [pc, #60]	; (8010dac <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010d6e:	8809      	ldrh	r1, [r1, #0]
 8010d70:	4411      	add	r1, r2
 8010d72:	428b      	cmp	r3, r1
 8010d74:	da09      	bge.n	8010d8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8010d76:	1a9b      	subs	r3, r3, r2
 8010d78:	4a0d      	ldr	r2, [pc, #52]	; (8010db0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010d7a:	6812      	ldr	r2, [r2, #0]
 8010d7c:	210e      	movs	r1, #14
 8010d7e:	fb01 2303 	mla	r3, r1, r3, r2
 8010d82:	7b18      	ldrb	r0, [r3, #12]
 8010d84:	f000 001f 	and.w	r0, r0, #31
 8010d88:	e7ef      	b.n	8010d6a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010d8a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010d8e:	4293      	cmp	r3, r2
 8010d90:	d106      	bne.n	8010da0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8010d92:	f7f9 fdeb 	bl	800a96c <_ZN8touchgfx3HAL3lcdEv>
 8010d96:	6803      	ldr	r3, [r0, #0]
 8010d98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d9e:	4718      	bx	r3
 8010da0:	2000      	movs	r0, #0
 8010da2:	e7e2      	b.n	8010d6a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010da4:	2000a894 	.word	0x2000a894
 8010da8:	2000a88c 	.word	0x2000a88c
 8010dac:	2000a890 	.word	0x2000a890
 8010db0:	2000a874 	.word	0x2000a874

08010db4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010db4:	2010      	movs	r0, #16
 8010db6:	4770      	bx	lr

08010db8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8010db8:	2000      	movs	r0, #0
 8010dba:	4770      	bx	lr

08010dbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010dbc:	2bff      	cmp	r3, #255	; 0xff
 8010dbe:	d050      	beq.n	8010e62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010dc0:	2a0b      	cmp	r2, #11
 8010dc2:	d04a      	beq.n	8010e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010dc4:	d80e      	bhi.n	8010de4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8010dc6:	2a03      	cmp	r2, #3
 8010dc8:	d03f      	beq.n	8010e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8010dca:	d804      	bhi.n	8010dd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010dcc:	2a01      	cmp	r2, #1
 8010dce:	d03e      	beq.n	8010e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010dd0:	d93f      	bls.n	8010e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010dd2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010dd4:	4770      	bx	lr
 8010dd6:	2a09      	cmp	r2, #9
 8010dd8:	d03f      	beq.n	8010e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010dda:	d83c      	bhi.n	8010e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010ddc:	2a08      	cmp	r2, #8
 8010dde:	d03a      	beq.n	8010e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010de0:	2000      	movs	r0, #0
 8010de2:	4770      	bx	lr
 8010de4:	2a2f      	cmp	r2, #47	; 0x2f
 8010de6:	d024      	beq.n	8010e32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010de8:	d80d      	bhi.n	8010e06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010dea:	2a2d      	cmp	r2, #45	; 0x2d
 8010dec:	d014      	beq.n	8010e18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010dee:	d826      	bhi.n	8010e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010df0:	2a2c      	cmp	r2, #44	; 0x2c
 8010df2:	d1f5      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010df4:	684b      	ldr	r3, [r1, #4]
 8010df6:	781b      	ldrb	r3, [r3, #0]
 8010df8:	2b01      	cmp	r3, #1
 8010dfa:	d018      	beq.n	8010e2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010dfc:	d323      	bcc.n	8010e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010dfe:	2b02      	cmp	r3, #2
 8010e00:	d1ee      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e02:	6880      	ldr	r0, [r0, #8]
 8010e04:	4770      	bx	lr
 8010e06:	2a31      	cmp	r2, #49	; 0x31
 8010e08:	d004      	beq.n	8010e14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010e0a:	d328      	bcc.n	8010e5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010e0c:	2a32      	cmp	r2, #50	; 0x32
 8010e0e:	d026      	beq.n	8010e5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010e10:	2a33      	cmp	r2, #51	; 0x33
 8010e12:	d1e5      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e14:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010e16:	4770      	bx	lr
 8010e18:	684b      	ldr	r3, [r1, #4]
 8010e1a:	781b      	ldrb	r3, [r3, #0]
 8010e1c:	2b01      	cmp	r3, #1
 8010e1e:	d004      	beq.n	8010e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010e20:	d30b      	bcc.n	8010e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010e22:	2b02      	cmp	r3, #2
 8010e24:	d1dc      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e26:	6900      	ldr	r0, [r0, #16]
 8010e28:	4770      	bx	lr
 8010e2a:	6a00      	ldr	r0, [r0, #32]
 8010e2c:	4770      	bx	lr
 8010e2e:	6980      	ldr	r0, [r0, #24]
 8010e30:	4770      	bx	lr
 8010e32:	684b      	ldr	r3, [r1, #4]
 8010e34:	781b      	ldrb	r3, [r3, #0]
 8010e36:	2b00      	cmp	r3, #0
 8010e38:	d1d2      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e3a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010e3c:	4770      	bx	lr
 8010e3e:	684b      	ldr	r3, [r1, #4]
 8010e40:	781b      	ldrb	r3, [r3, #0]
 8010e42:	2b00      	cmp	r3, #0
 8010e44:	d1cc      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e46:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010e48:	4770      	bx	lr
 8010e4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010e4c:	4770      	bx	lr
 8010e4e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010e50:	4770      	bx	lr
 8010e52:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010e54:	4770      	bx	lr
 8010e56:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010e58:	4770      	bx	lr
 8010e5a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010e5c:	4770      	bx	lr
 8010e5e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010e60:	4770      	bx	lr
 8010e62:	2a0b      	cmp	r2, #11
 8010e64:	d049      	beq.n	8010efa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010e66:	d80e      	bhi.n	8010e86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010e68:	2a03      	cmp	r2, #3
 8010e6a:	d040      	beq.n	8010eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010e6c:	d804      	bhi.n	8010e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8010e6e:	2a01      	cmp	r2, #1
 8010e70:	d03f      	beq.n	8010ef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010e72:	d940      	bls.n	8010ef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010e74:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8010e76:	4770      	bx	lr
 8010e78:	2a09      	cmp	r2, #9
 8010e7a:	d03e      	beq.n	8010efa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010e7c:	d801      	bhi.n	8010e82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010e7e:	2a08      	cmp	r2, #8
 8010e80:	d1ae      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e82:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8010e84:	4770      	bx	lr
 8010e86:	2a2f      	cmp	r2, #47	; 0x2f
 8010e88:	d024      	beq.n	8010ed4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8010e8a:	d80d      	bhi.n	8010ea8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010e8c:	2a2d      	cmp	r2, #45	; 0x2d
 8010e8e:	d014      	beq.n	8010eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010e90:	d826      	bhi.n	8010ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010e92:	2a2c      	cmp	r2, #44	; 0x2c
 8010e94:	d1a4      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e96:	684b      	ldr	r3, [r1, #4]
 8010e98:	781b      	ldrb	r3, [r3, #0]
 8010e9a:	2b01      	cmp	r3, #1
 8010e9c:	d018      	beq.n	8010ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010e9e:	d324      	bcc.n	8010eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010ea0:	2b02      	cmp	r3, #2
 8010ea2:	d19d      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010ea4:	68c0      	ldr	r0, [r0, #12]
 8010ea6:	4770      	bx	lr
 8010ea8:	2a31      	cmp	r2, #49	; 0x31
 8010eaa:	d004      	beq.n	8010eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010eac:	d327      	bcc.n	8010efe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010eae:	2a32      	cmp	r2, #50	; 0x32
 8010eb0:	d025      	beq.n	8010efe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010eb2:	2a33      	cmp	r2, #51	; 0x33
 8010eb4:	d194      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010eb6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010eb8:	4770      	bx	lr
 8010eba:	684b      	ldr	r3, [r1, #4]
 8010ebc:	781b      	ldrb	r3, [r3, #0]
 8010ebe:	2b01      	cmp	r3, #1
 8010ec0:	d004      	beq.n	8010ecc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8010ec2:	d30b      	bcc.n	8010edc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010ec4:	2b02      	cmp	r3, #2
 8010ec6:	d18b      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010ec8:	6940      	ldr	r0, [r0, #20]
 8010eca:	4770      	bx	lr
 8010ecc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010ece:	4770      	bx	lr
 8010ed0:	69c0      	ldr	r0, [r0, #28]
 8010ed2:	4770      	bx	lr
 8010ed4:	684b      	ldr	r3, [r1, #4]
 8010ed6:	781b      	ldrb	r3, [r3, #0]
 8010ed8:	2b00      	cmp	r3, #0
 8010eda:	d181      	bne.n	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010edc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8010ede:	4770      	bx	lr
 8010ee0:	684b      	ldr	r3, [r1, #4]
 8010ee2:	781b      	ldrb	r3, [r3, #0]
 8010ee4:	2b00      	cmp	r3, #0
 8010ee6:	f47f af7b 	bne.w	8010de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010eea:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010eec:	4770      	bx	lr
 8010eee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010ef0:	4770      	bx	lr
 8010ef2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010ef4:	4770      	bx	lr
 8010ef6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010ef8:	4770      	bx	lr
 8010efa:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010efc:	4770      	bx	lr
 8010efe:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8010f00:	4770      	bx	lr

08010f02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010f02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f06:	b087      	sub	sp, #28
 8010f08:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010f0a:	9205      	str	r2, [sp, #20]
 8010f0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010f10:	9202      	str	r2, [sp, #8]
 8010f12:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010f16:	9101      	str	r1, [sp, #4]
 8010f18:	6841      	ldr	r1, [r0, #4]
 8010f1a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010f1e:	fb01 2404 	mla	r4, r1, r4, r2
 8010f22:	6802      	ldr	r2, [r0, #0]
 8010f24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010f28:	f8de 2000 	ldr.w	r2, [lr]
 8010f2c:	9203      	str	r2, [sp, #12]
 8010f2e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010f32:	3204      	adds	r2, #4
 8010f34:	9204      	str	r2, [sp, #16]
 8010f36:	9a02      	ldr	r2, [sp, #8]
 8010f38:	43d6      	mvns	r6, r2
 8010f3a:	b2f6      	uxtb	r6, r6
 8010f3c:	9a01      	ldr	r2, [sp, #4]
 8010f3e:	2a00      	cmp	r2, #0
 8010f40:	dc03      	bgt.n	8010f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8010f42:	9a05      	ldr	r2, [sp, #20]
 8010f44:	2a00      	cmp	r2, #0
 8010f46:	f340 8129 	ble.w	801119c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010f4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010f4c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8010f50:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010f54:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010f58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010f5a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010f5e:	2b00      	cmp	r3, #0
 8010f60:	dd0e      	ble.n	8010f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010f62:	1408      	asrs	r0, r1, #16
 8010f64:	d405      	bmi.n	8010f72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010f66:	4560      	cmp	r0, ip
 8010f68:	da03      	bge.n	8010f72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010f6a:	1410      	asrs	r0, r2, #16
 8010f6c:	d401      	bmi.n	8010f72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010f6e:	42b8      	cmp	r0, r7
 8010f70:	db07      	blt.n	8010f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010f72:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010f74:	4401      	add	r1, r0
 8010f76:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010f78:	3b01      	subs	r3, #1
 8010f7a:	4402      	add	r2, r0
 8010f7c:	3402      	adds	r4, #2
 8010f7e:	e7ee      	b.n	8010f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8010f80:	d071      	beq.n	8011066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010f82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010f84:	1e58      	subs	r0, r3, #1
 8010f86:	fb05 1500 	mla	r5, r5, r0, r1
 8010f8a:	142d      	asrs	r5, r5, #16
 8010f8c:	d45f      	bmi.n	801104e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010f8e:	4565      	cmp	r5, ip
 8010f90:	da5d      	bge.n	801104e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010f92:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010f94:	fb05 2000 	mla	r0, r5, r0, r2
 8010f98:	1400      	asrs	r0, r0, #16
 8010f9a:	d458      	bmi.n	801104e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010f9c:	42b8      	cmp	r0, r7
 8010f9e:	da56      	bge.n	801104e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010fa0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8010fa4:	4699      	mov	r9, r3
 8010fa6:	46a2      	mov	sl, r4
 8010fa8:	f1b9 0f00 	cmp.w	r9, #0
 8010fac:	dd57      	ble.n	801105e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8010fae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010fb2:	9803      	ldr	r0, [sp, #12]
 8010fb4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8010fb8:	140d      	asrs	r5, r1, #16
 8010fba:	fb07 000c 	mla	r0, r7, ip, r0
 8010fbe:	f109 39ff 	add.w	r9, r9, #4294967295
 8010fc2:	5d40      	ldrb	r0, [r0, r5]
 8010fc4:	9d04      	ldr	r5, [sp, #16]
 8010fc6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010fca:	f8ba 5000 	ldrh.w	r5, [sl]
 8010fce:	122f      	asrs	r7, r5, #8
 8010fd0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010fd4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010fd8:	fb17 f706 	smulbb	r7, r7, r6
 8010fdc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010fe0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010fe4:	00ed      	lsls	r5, r5, #3
 8010fe6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8010fea:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010fee:	10c7      	asrs	r7, r0, #3
 8010ff0:	b2ed      	uxtb	r5, r5
 8010ff2:	00c0      	lsls	r0, r0, #3
 8010ff4:	fb18 f806 	smulbb	r8, r8, r6
 8010ff8:	fb15 f506 	smulbb	r5, r5, r6
 8010ffc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011000:	b2c0      	uxtb	r0, r0
 8011002:	fa1f fc8c 	uxth.w	ip, ip
 8011006:	fb07 870b 	mla	r7, r7, fp, r8
 801100a:	fb00 500b 	mla	r0, r0, fp, r5
 801100e:	b280      	uxth	r0, r0
 8011010:	b2bf      	uxth	r7, r7
 8011012:	f10c 0501 	add.w	r5, ip, #1
 8011016:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801101a:	f107 0801 	add.w	r8, r7, #1
 801101e:	1c45      	adds	r5, r0, #1
 8011020:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011024:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011028:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801102a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801102e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011032:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011036:	ea45 0c0c 	orr.w	ip, r5, ip
 801103a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801103e:	4401      	add	r1, r0
 8011040:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011042:	ea4c 0c08 	orr.w	ip, ip, r8
 8011046:	f82a cb02 	strh.w	ip, [sl], #2
 801104a:	4402      	add	r2, r0
 801104c:	e7ac      	b.n	8010fa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801104e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8011052:	f04f 0800 	mov.w	r8, #0
 8011056:	eb03 0008 	add.w	r0, r3, r8
 801105a:	2800      	cmp	r0, #0
 801105c:	dc41      	bgt.n	80110e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801105e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011062:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011066:	9b01      	ldr	r3, [sp, #4]
 8011068:	2b00      	cmp	r3, #0
 801106a:	f340 8097 	ble.w	801119c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801106e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011072:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011076:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801107a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801107c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011080:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011084:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011088:	eef0 6a62 	vmov.f32	s13, s5
 801108c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011090:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011094:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011098:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801109c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110a0:	eef0 6a43 	vmov.f32	s13, s6
 80110a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110a8:	ee12 2a90 	vmov	r2, s5
 80110ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80110b4:	ee13 2a10 	vmov	r2, s6
 80110b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80110ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80110c0:	9314      	str	r3, [sp, #80]	; 0x50
 80110c2:	9b01      	ldr	r3, [sp, #4]
 80110c4:	9a05      	ldr	r2, [sp, #20]
 80110c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80110ca:	3b01      	subs	r3, #1
 80110cc:	9301      	str	r3, [sp, #4]
 80110ce:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80110d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110d4:	eeb0 3a67 	vmov.f32	s6, s15
 80110d8:	bf08      	it	eq
 80110da:	4613      	moveq	r3, r2
 80110dc:	eef0 2a47 	vmov.f32	s5, s14
 80110e0:	e72c      	b.n	8010f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80110e2:	140f      	asrs	r7, r1, #16
 80110e4:	d453      	bmi.n	801118e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80110e6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80110ea:	42bd      	cmp	r5, r7
 80110ec:	dd4f      	ble.n	801118e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80110ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80110f2:	d44c      	bmi.n	801118e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80110f4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80110f8:	4560      	cmp	r0, ip
 80110fa:	dd48      	ble.n	801118e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80110fc:	9803      	ldr	r0, [sp, #12]
 80110fe:	b22d      	sxth	r5, r5
 8011100:	fb0c 0505 	mla	r5, ip, r5, r0
 8011104:	5de8      	ldrb	r0, [r5, r7]
 8011106:	9d04      	ldr	r5, [sp, #16]
 8011108:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801110c:	f06f 0501 	mvn.w	r5, #1
 8011110:	fb05 fb08 	mul.w	fp, r5, r8
 8011114:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011118:	f834 500b 	ldrh.w	r5, [r4, fp]
 801111c:	122f      	asrs	r7, r5, #8
 801111e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011122:	fb17 f706 	smulbb	r7, r7, r6
 8011126:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801112a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801112e:	00ed      	lsls	r5, r5, #3
 8011130:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011134:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011138:	10c7      	asrs	r7, r0, #3
 801113a:	b2ed      	uxtb	r5, r5
 801113c:	00c0      	lsls	r0, r0, #3
 801113e:	fb19 f906 	smulbb	r9, r9, r6
 8011142:	fb15 f506 	smulbb	r5, r5, r6
 8011146:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801114a:	b2c0      	uxtb	r0, r0
 801114c:	fa1f fc8c 	uxth.w	ip, ip
 8011150:	fb07 970a 	mla	r7, r7, sl, r9
 8011154:	fb00 500a 	mla	r0, r0, sl, r5
 8011158:	b2bf      	uxth	r7, r7
 801115a:	b280      	uxth	r0, r0
 801115c:	f10c 0501 	add.w	r5, ip, #1
 8011160:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011164:	f107 0901 	add.w	r9, r7, #1
 8011168:	1c45      	adds	r5, r0, #1
 801116a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801116e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011172:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011176:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801117a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801117e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011182:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011186:	ea4c 0c09 	orr.w	ip, ip, r9
 801118a:	f824 c00b 	strh.w	ip, [r4, fp]
 801118e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011190:	4401      	add	r1, r0
 8011192:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011194:	f108 38ff 	add.w	r8, r8, #4294967295
 8011198:	4402      	add	r2, r0
 801119a:	e75c      	b.n	8011056 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801119c:	b007      	add	sp, #28
 801119e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080111a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80111a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111a6:	b085      	sub	sp, #20
 80111a8:	4693      	mov	fp, r2
 80111aa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80111ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80111ae:	6870      	ldr	r0, [r6, #4]
 80111b0:	9100      	str	r1, [sp, #0]
 80111b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80111b6:	fb00 2404 	mla	r4, r0, r4, r2
 80111ba:	6832      	ldr	r2, [r6, #0]
 80111bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80111c0:	682a      	ldr	r2, [r5, #0]
 80111c2:	9201      	str	r2, [sp, #4]
 80111c4:	686a      	ldr	r2, [r5, #4]
 80111c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80111ca:	3204      	adds	r2, #4
 80111cc:	9202      	str	r2, [sp, #8]
 80111ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80111d2:	9a00      	ldr	r2, [sp, #0]
 80111d4:	2a00      	cmp	r2, #0
 80111d6:	dc03      	bgt.n	80111e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80111d8:	f1bb 0f00 	cmp.w	fp, #0
 80111dc:	f340 80a0 	ble.w	8011320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80111e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80111e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80111e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80111ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80111ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80111f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80111f4:	2b00      	cmp	r3, #0
 80111f6:	dd0c      	ble.n	8011212 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80111f8:	1406      	asrs	r6, r0, #16
 80111fa:	d405      	bmi.n	8011208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80111fc:	454e      	cmp	r6, r9
 80111fe:	da03      	bge.n	8011208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011200:	1416      	asrs	r6, r2, #16
 8011202:	d401      	bmi.n	8011208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011204:	4546      	cmp	r6, r8
 8011206:	db05      	blt.n	8011214 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011208:	4470      	add	r0, lr
 801120a:	4462      	add	r2, ip
 801120c:	3b01      	subs	r3, #1
 801120e:	3402      	adds	r4, #2
 8011210:	e7f0      	b.n	80111f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011212:	d00f      	beq.n	8011234 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011214:	1e5e      	subs	r6, r3, #1
 8011216:	fb0e 0706 	mla	r7, lr, r6, r0
 801121a:	143f      	asrs	r7, r7, #16
 801121c:	d541      	bpl.n	80112a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801121e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011222:	4698      	mov	r8, r3
 8011224:	9603      	str	r6, [sp, #12]
 8011226:	f1b8 0f00 	cmp.w	r8, #0
 801122a:	dc59      	bgt.n	80112e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801122c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011230:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011234:	9b00      	ldr	r3, [sp, #0]
 8011236:	2b00      	cmp	r3, #0
 8011238:	dd72      	ble.n	8011320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801123a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801123e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011242:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011248:	ee31 1a05 	vadd.f32	s2, s2, s10
 801124c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011250:	eeb0 6a62 	vmov.f32	s12, s5
 8011254:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011258:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801125c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011260:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011264:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011268:	eeb0 6a43 	vmov.f32	s12, s6
 801126c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011270:	ee12 2a90 	vmov	r2, s5
 8011274:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011278:	fb92 fef3 	sdiv	lr, r2, r3
 801127c:	ee13 2a10 	vmov	r2, s6
 8011280:	fb92 fcf3 	sdiv	ip, r2, r3
 8011284:	9b00      	ldr	r3, [sp, #0]
 8011286:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801128a:	3b01      	subs	r3, #1
 801128c:	9300      	str	r3, [sp, #0]
 801128e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011292:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011294:	eeb0 3a67 	vmov.f32	s6, s15
 8011298:	bf08      	it	eq
 801129a:	465b      	moveq	r3, fp
 801129c:	eef0 2a47 	vmov.f32	s5, s14
 80112a0:	e797      	b.n	80111d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80112a2:	454f      	cmp	r7, r9
 80112a4:	dabb      	bge.n	801121e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80112a6:	fb0c 2606 	mla	r6, ip, r6, r2
 80112aa:	1436      	asrs	r6, r6, #16
 80112ac:	d4b7      	bmi.n	801121e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80112ae:	4546      	cmp	r6, r8
 80112b0:	dab5      	bge.n	801121e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80112b2:	461e      	mov	r6, r3
 80112b4:	46a0      	mov	r8, r4
 80112b6:	2e00      	cmp	r6, #0
 80112b8:	ddb8      	ble.n	801122c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80112ba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80112be:	9901      	ldr	r1, [sp, #4]
 80112c0:	1417      	asrs	r7, r2, #16
 80112c2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80112c6:	fb0a 1707 	mla	r7, sl, r7, r1
 80112ca:	9902      	ldr	r1, [sp, #8]
 80112cc:	f817 7009 	ldrb.w	r7, [r7, r9]
 80112d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80112d4:	f828 7b02 	strh.w	r7, [r8], #2
 80112d8:	4470      	add	r0, lr
 80112da:	4462      	add	r2, ip
 80112dc:	3e01      	subs	r6, #1
 80112de:	e7ea      	b.n	80112b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80112e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80112e4:	d417      	bmi.n	8011316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80112e6:	68ae      	ldr	r6, [r5, #8]
 80112e8:	454e      	cmp	r6, r9
 80112ea:	dd14      	ble.n	8011316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80112ec:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80112f0:	d411      	bmi.n	8011316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80112f2:	68ef      	ldr	r7, [r5, #12]
 80112f4:	4557      	cmp	r7, sl
 80112f6:	dd0e      	ble.n	8011316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80112f8:	9f01      	ldr	r7, [sp, #4]
 80112fa:	b236      	sxth	r6, r6
 80112fc:	fb0a 7606 	mla	r6, sl, r6, r7
 8011300:	9f02      	ldr	r7, [sp, #8]
 8011302:	f816 6009 	ldrb.w	r6, [r6, r9]
 8011306:	f06f 0101 	mvn.w	r1, #1
 801130a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801130e:	fb01 f608 	mul.w	r6, r1, r8
 8011312:	9903      	ldr	r1, [sp, #12]
 8011314:	538f      	strh	r7, [r1, r6]
 8011316:	4470      	add	r0, lr
 8011318:	4462      	add	r2, ip
 801131a:	f108 38ff 	add.w	r8, r8, #4294967295
 801131e:	e782      	b.n	8011226 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011320:	b005      	add	sp, #20
 8011322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011326:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801132a:	b087      	sub	sp, #28
 801132c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801132e:	9205      	str	r2, [sp, #20]
 8011330:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011334:	9203      	str	r2, [sp, #12]
 8011336:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801133a:	9102      	str	r1, [sp, #8]
 801133c:	6861      	ldr	r1, [r4, #4]
 801133e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011342:	fb01 2000 	mla	r0, r1, r0, r2
 8011346:	6822      	ldr	r2, [r4, #0]
 8011348:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801134c:	9200      	str	r2, [sp, #0]
 801134e:	f8dc 2000 	ldr.w	r2, [ip]
 8011352:	9204      	str	r2, [sp, #16]
 8011354:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011358:	3204      	adds	r2, #4
 801135a:	9201      	str	r2, [sp, #4]
 801135c:	9a03      	ldr	r2, [sp, #12]
 801135e:	43d5      	mvns	r5, r2
 8011360:	b2ed      	uxtb	r5, r5
 8011362:	9a02      	ldr	r2, [sp, #8]
 8011364:	2a00      	cmp	r2, #0
 8011366:	dc03      	bgt.n	8011370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011368:	9a05      	ldr	r2, [sp, #20]
 801136a:	2a00      	cmp	r2, #0
 801136c:	f340 812c 	ble.w	80115c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011370:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011372:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8011376:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801137a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801137e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011380:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011384:	2b00      	cmp	r3, #0
 8011386:	dd10      	ble.n	80113aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011388:	140c      	asrs	r4, r1, #16
 801138a:	d405      	bmi.n	8011398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801138c:	4574      	cmp	r4, lr
 801138e:	da03      	bge.n	8011398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011390:	1414      	asrs	r4, r2, #16
 8011392:	d401      	bmi.n	8011398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011394:	42bc      	cmp	r4, r7
 8011396:	db09      	blt.n	80113ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011398:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801139a:	9800      	ldr	r0, [sp, #0]
 801139c:	4421      	add	r1, r4
 801139e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80113a0:	3002      	adds	r0, #2
 80113a2:	4422      	add	r2, r4
 80113a4:	3b01      	subs	r3, #1
 80113a6:	9000      	str	r0, [sp, #0]
 80113a8:	e7ec      	b.n	8011384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80113aa:	d071      	beq.n	8011490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80113ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80113ae:	1e5c      	subs	r4, r3, #1
 80113b0:	fb06 1604 	mla	r6, r6, r4, r1
 80113b4:	1436      	asrs	r6, r6, #16
 80113b6:	d45d      	bmi.n	8011474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113b8:	4576      	cmp	r6, lr
 80113ba:	da5b      	bge.n	8011474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80113be:	fb06 2404 	mla	r4, r6, r4, r2
 80113c2:	1424      	asrs	r4, r4, #16
 80113c4:	d456      	bmi.n	8011474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113c6:	42bc      	cmp	r4, r7
 80113c8:	da54      	bge.n	8011474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113ca:	f8dd 9000 	ldr.w	r9, [sp]
 80113ce:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80113d2:	4698      	mov	r8, r3
 80113d4:	f1b8 0f00 	cmp.w	r8, #0
 80113d8:	dd54      	ble.n	8011484 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80113da:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80113de:	9804      	ldr	r0, [sp, #16]
 80113e0:	1414      	asrs	r4, r2, #16
 80113e2:	fb07 0404 	mla	r4, r7, r4, r0
 80113e6:	140e      	asrs	r6, r1, #16
 80113e8:	9801      	ldr	r0, [sp, #4]
 80113ea:	f814 e006 	ldrb.w	lr, [r4, r6]
 80113ee:	f8b9 4000 	ldrh.w	r4, [r9]
 80113f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80113f6:	eb00 0b0e 	add.w	fp, r0, lr
 80113fa:	1227      	asrs	r7, r4, #8
 80113fc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011400:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011404:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8011408:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801140a:	fb16 f60a 	smulbb	r6, r6, sl
 801140e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011412:	fb07 6705 	mla	r7, r7, r5, r6
 8011416:	10e6      	asrs	r6, r4, #3
 8011418:	00e4      	lsls	r4, r4, #3
 801141a:	b2e4      	uxtb	r4, r4
 801141c:	fb1b fb0a 	smulbb	fp, fp, sl
 8011420:	fb14 f405 	smulbb	r4, r4, r5
 8011424:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011428:	b2bf      	uxth	r7, r7
 801142a:	fb06 b605 	mla	r6, r6, r5, fp
 801142e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8011432:	b2b6      	uxth	r6, r6
 8011434:	fa1f fe8e 	uxth.w	lr, lr
 8011438:	1c7c      	adds	r4, r7, #1
 801143a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801143e:	f106 0b01 	add.w	fp, r6, #1
 8011442:	f10e 0401 	add.w	r4, lr, #1
 8011446:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801144a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801144e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011452:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011456:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801145a:	4327      	orrs	r7, r4
 801145c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011460:	4401      	add	r1, r0
 8011462:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011464:	ea47 070b 	orr.w	r7, r7, fp
 8011468:	f829 7b02 	strh.w	r7, [r9], #2
 801146c:	4402      	add	r2, r0
 801146e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011472:	e7af      	b.n	80113d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011474:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011478:	f04f 0e00 	mov.w	lr, #0
 801147c:	eb03 040e 	add.w	r4, r3, lr
 8011480:	2c00      	cmp	r4, #0
 8011482:	dc43      	bgt.n	801150c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011484:	9a00      	ldr	r2, [sp, #0]
 8011486:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801148a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801148e:	9300      	str	r3, [sp, #0]
 8011490:	9b02      	ldr	r3, [sp, #8]
 8011492:	2b00      	cmp	r3, #0
 8011494:	f340 8098 	ble.w	80115c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011498:	ee30 0a04 	vadd.f32	s0, s0, s8
 801149c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80114a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80114a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80114a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80114aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80114ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80114b2:	eef0 6a62 	vmov.f32	s13, s5
 80114b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80114ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80114c2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80114c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114ca:	eef0 6a43 	vmov.f32	s13, s6
 80114ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114d2:	ee12 2a90 	vmov	r2, s5
 80114d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114da:	fb92 f3f3 	sdiv	r3, r2, r3
 80114de:	ee13 2a10 	vmov	r2, s6
 80114e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80114e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80114e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80114ea:	9314      	str	r3, [sp, #80]	; 0x50
 80114ec:	9b02      	ldr	r3, [sp, #8]
 80114ee:	9a05      	ldr	r2, [sp, #20]
 80114f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114f4:	3b01      	subs	r3, #1
 80114f6:	9302      	str	r3, [sp, #8]
 80114f8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80114fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80114fe:	eeb0 3a67 	vmov.f32	s6, s15
 8011502:	bf08      	it	eq
 8011504:	4613      	moveq	r3, r2
 8011506:	eef0 2a47 	vmov.f32	s5, s14
 801150a:	e72a      	b.n	8011362 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801150c:	140f      	asrs	r7, r1, #16
 801150e:	d454      	bmi.n	80115ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011510:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011514:	42be      	cmp	r6, r7
 8011516:	dd50      	ble.n	80115ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011518:	ea5f 4822 	movs.w	r8, r2, asr #16
 801151c:	d44d      	bmi.n	80115ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801151e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011522:	4544      	cmp	r4, r8
 8011524:	dd49      	ble.n	80115ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011526:	9c04      	ldr	r4, [sp, #16]
 8011528:	b236      	sxth	r6, r6
 801152a:	fb08 4606 	mla	r6, r8, r6, r4
 801152e:	f06f 0001 	mvn.w	r0, #1
 8011532:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011536:	9c01      	ldr	r4, [sp, #4]
 8011538:	fb00 fa0e 	mul.w	sl, r0, lr
 801153c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011540:	9800      	ldr	r0, [sp, #0]
 8011542:	eb04 0b08 	add.w	fp, r4, r8
 8011546:	f830 400a 	ldrh.w	r4, [r0, sl]
 801154a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801154e:	9801      	ldr	r0, [sp, #4]
 8011550:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011554:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011558:	9800      	ldr	r0, [sp, #0]
 801155a:	1227      	asrs	r7, r4, #8
 801155c:	fb16 f609 	smulbb	r6, r6, r9
 8011560:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011564:	fb07 6705 	mla	r7, r7, r5, r6
 8011568:	10e6      	asrs	r6, r4, #3
 801156a:	00e4      	lsls	r4, r4, #3
 801156c:	b2e4      	uxtb	r4, r4
 801156e:	fb1b fb09 	smulbb	fp, fp, r9
 8011572:	fb14 f405 	smulbb	r4, r4, r5
 8011576:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801157a:	b2bf      	uxth	r7, r7
 801157c:	fb06 b605 	mla	r6, r6, r5, fp
 8011580:	fb08 4809 	mla	r8, r8, r9, r4
 8011584:	b2b6      	uxth	r6, r6
 8011586:	fa1f f888 	uxth.w	r8, r8
 801158a:	1c7c      	adds	r4, r7, #1
 801158c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011590:	f106 0b01 	add.w	fp, r6, #1
 8011594:	f108 0401 	add.w	r4, r8, #1
 8011598:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801159c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80115a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80115a4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80115a8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80115ac:	4327      	orrs	r7, r4
 80115ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80115b2:	ea47 070b 	orr.w	r7, r7, fp
 80115b6:	f820 700a 	strh.w	r7, [r0, sl]
 80115ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80115bc:	4401      	add	r1, r0
 80115be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80115c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80115c4:	4402      	add	r2, r0
 80115c6:	e759      	b.n	801147c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80115c8:	b007      	add	sp, #28
 80115ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080115d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115d4:	b085      	sub	sp, #20
 80115d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80115dc:	9203      	str	r2, [sp, #12]
 80115de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80115e2:	6870      	ldr	r0, [r6, #4]
 80115e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80115e6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80115ea:	686f      	ldr	r7, [r5, #4]
 80115ec:	9101      	str	r1, [sp, #4]
 80115ee:	fb00 2404 	mla	r4, r0, r4, r2
 80115f2:	6832      	ldr	r2, [r6, #0]
 80115f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80115f8:	682a      	ldr	r2, [r5, #0]
 80115fa:	9202      	str	r2, [sp, #8]
 80115fc:	3704      	adds	r7, #4
 80115fe:	9a01      	ldr	r2, [sp, #4]
 8011600:	2a00      	cmp	r2, #0
 8011602:	dc03      	bgt.n	801160c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011604:	9a03      	ldr	r2, [sp, #12]
 8011606:	2a00      	cmp	r2, #0
 8011608:	f340 80cc 	ble.w	80117a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801160c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801160e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011612:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011616:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801161a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801161c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011620:	2b00      	cmp	r3, #0
 8011622:	dd0d      	ble.n	8011640 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011624:	1406      	asrs	r6, r0, #16
 8011626:	d405      	bmi.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011628:	454e      	cmp	r6, r9
 801162a:	da03      	bge.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801162c:	1416      	asrs	r6, r2, #16
 801162e:	d401      	bmi.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011630:	4546      	cmp	r6, r8
 8011632:	db06      	blt.n	8011642 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011634:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011636:	4460      	add	r0, ip
 8011638:	4432      	add	r2, r6
 801163a:	3b01      	subs	r3, #1
 801163c:	3402      	adds	r4, #2
 801163e:	e7ef      	b.n	8011620 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011640:	d00f      	beq.n	8011662 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011642:	1e5e      	subs	r6, r3, #1
 8011644:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011648:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801164c:	d543      	bpl.n	80116d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801164e:	4698      	mov	r8, r3
 8011650:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011654:	f1b8 0f00 	cmp.w	r8, #0
 8011658:	dc71      	bgt.n	801173e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801165a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801165e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011662:	9b01      	ldr	r3, [sp, #4]
 8011664:	2b00      	cmp	r3, #0
 8011666:	f340 809d 	ble.w	80117a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801166a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801166e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011672:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011676:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011678:	ee31 1a05 	vadd.f32	s2, s2, s10
 801167c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011680:	eeb0 6a62 	vmov.f32	s12, s5
 8011684:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011688:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801168c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011690:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011694:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011698:	eeb0 6a43 	vmov.f32	s12, s6
 801169c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80116a0:	ee12 2a90 	vmov	r2, s5
 80116a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80116a8:	fb92 fcf3 	sdiv	ip, r2, r3
 80116ac:	ee13 2a10 	vmov	r2, s6
 80116b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80116b4:	9312      	str	r3, [sp, #72]	; 0x48
 80116b6:	9b01      	ldr	r3, [sp, #4]
 80116b8:	9a03      	ldr	r2, [sp, #12]
 80116ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116be:	3b01      	subs	r3, #1
 80116c0:	9301      	str	r3, [sp, #4]
 80116c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80116c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116c8:	eeb0 3a67 	vmov.f32	s6, s15
 80116cc:	bf08      	it	eq
 80116ce:	4613      	moveq	r3, r2
 80116d0:	eef0 2a47 	vmov.f32	s5, s14
 80116d4:	e793      	b.n	80115fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80116d6:	45ce      	cmp	lr, r9
 80116d8:	dab9      	bge.n	801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80116da:	9912      	ldr	r1, [sp, #72]	; 0x48
 80116dc:	fb01 2606 	mla	r6, r1, r6, r2
 80116e0:	1436      	asrs	r6, r6, #16
 80116e2:	d4b4      	bmi.n	801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80116e4:	4546      	cmp	r6, r8
 80116e6:	dab2      	bge.n	801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80116e8:	4698      	mov	r8, r3
 80116ea:	46a2      	mov	sl, r4
 80116ec:	f1b8 0f00 	cmp.w	r8, #0
 80116f0:	ddb3      	ble.n	801165a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80116f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80116f6:	9902      	ldr	r1, [sp, #8]
 80116f8:	1416      	asrs	r6, r2, #16
 80116fa:	fb09 1606 	mla	r6, r9, r6, r1
 80116fe:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011702:	492a      	ldr	r1, [pc, #168]	; (80117ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011704:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011708:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801170c:	eb07 0b0e 	add.w	fp, r7, lr
 8011710:	4460      	add	r0, ip
 8011712:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011716:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801171a:	00f6      	lsls	r6, r6, #3
 801171c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011720:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011724:	ea49 0606 	orr.w	r6, r9, r6
 8011728:	f817 900e 	ldrb.w	r9, [r7, lr]
 801172c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801172e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011732:	f82a 6b02 	strh.w	r6, [sl], #2
 8011736:	440a      	add	r2, r1
 8011738:	f108 38ff 	add.w	r8, r8, #4294967295
 801173c:	e7d6      	b.n	80116ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801173e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011742:	d429      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011744:	68ae      	ldr	r6, [r5, #8]
 8011746:	454e      	cmp	r6, r9
 8011748:	dd26      	ble.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801174a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801174e:	d423      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011750:	68e9      	ldr	r1, [r5, #12]
 8011752:	4559      	cmp	r1, fp
 8011754:	dd20      	ble.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011756:	9902      	ldr	r1, [sp, #8]
 8011758:	fa0f fe86 	sxth.w	lr, r6
 801175c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011760:	f06f 0101 	mvn.w	r1, #1
 8011764:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011768:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801176c:	eb07 060e 	add.w	r6, r7, lr
 8011770:	fb01 f908 	mul.w	r9, r1, r8
 8011774:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011778:	7876      	ldrb	r6, [r6, #1]
 801177a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801177e:	00f6      	lsls	r6, r6, #3
 8011780:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011784:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011788:	ea4b 0606 	orr.w	r6, fp, r6
 801178c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011790:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011794:	f82a 6009 	strh.w	r6, [sl, r9]
 8011798:	9912      	ldr	r1, [sp, #72]	; 0x48
 801179a:	4460      	add	r0, ip
 801179c:	440a      	add	r2, r1
 801179e:	f108 38ff 	add.w	r8, r8, #4294967295
 80117a2:	e757      	b.n	8011654 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80117a4:	b005      	add	sp, #20
 80117a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117aa:	bf00      	nop
 80117ac:	fffff800 	.word	0xfffff800

080117b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80117b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117b4:	b087      	sub	sp, #28
 80117b6:	468b      	mov	fp, r1
 80117b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80117ba:	9204      	str	r2, [sp, #16]
 80117bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80117c0:	9205      	str	r2, [sp, #20]
 80117c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80117c6:	6841      	ldr	r1, [r0, #4]
 80117c8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80117cc:	fb01 2404 	mla	r4, r1, r4, r2
 80117d0:	6802      	ldr	r2, [r0, #0]
 80117d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80117d6:	f8dc 2000 	ldr.w	r2, [ip]
 80117da:	9201      	str	r2, [sp, #4]
 80117dc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80117e0:	3204      	adds	r2, #4
 80117e2:	9202      	str	r2, [sp, #8]
 80117e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80117e8:	f1bb 0f00 	cmp.w	fp, #0
 80117ec:	dc03      	bgt.n	80117f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80117ee:	9a04      	ldr	r2, [sp, #16]
 80117f0:	2a00      	cmp	r2, #0
 80117f2:	f340 8138 	ble.w	8011a66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80117f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80117f8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80117fc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011800:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011804:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011806:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801180a:	2b00      	cmp	r3, #0
 801180c:	dd0e      	ble.n	801182c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801180e:	1402      	asrs	r2, r0, #16
 8011810:	d405      	bmi.n	801181e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011812:	42ba      	cmp	r2, r7
 8011814:	da03      	bge.n	801181e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011816:	140a      	asrs	r2, r1, #16
 8011818:	d401      	bmi.n	801181e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801181a:	42b2      	cmp	r2, r6
 801181c:	db07      	blt.n	801182e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801181e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011820:	4410      	add	r0, r2
 8011822:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011824:	3b01      	subs	r3, #1
 8011826:	4411      	add	r1, r2
 8011828:	3402      	adds	r4, #2
 801182a:	e7ee      	b.n	801180a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801182c:	d019      	beq.n	8011862 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801182e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011830:	1e5a      	subs	r2, r3, #1
 8011832:	fb05 0502 	mla	r5, r5, r2, r0
 8011836:	142d      	asrs	r5, r5, #16
 8011838:	d409      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801183a:	42bd      	cmp	r5, r7
 801183c:	da07      	bge.n	801184e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801183e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011840:	fb05 1202 	mla	r2, r5, r2, r1
 8011844:	1412      	asrs	r2, r2, #16
 8011846:	d402      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011848:	42b2      	cmp	r2, r6
 801184a:	f2c0 80ac 	blt.w	80119a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801184e:	f04f 0e00 	mov.w	lr, #0
 8011852:	eb03 020e 	add.w	r2, r3, lr
 8011856:	2a00      	cmp	r2, #0
 8011858:	dc3e      	bgt.n	80118d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801185a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801185e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011862:	f1bb 0f00 	cmp.w	fp, #0
 8011866:	f340 80fe 	ble.w	8011a66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801186a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801186e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011872:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011876:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011878:	f1bb 0b01 	subs.w	fp, fp, #1
 801187c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011880:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011884:	eeb0 6a62 	vmov.f32	s12, s5
 8011888:	ee61 7a27 	vmul.f32	s15, s2, s15
 801188c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011890:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011894:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011898:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801189c:	eeb0 6a43 	vmov.f32	s12, s6
 80118a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80118a4:	ee12 2a90 	vmov	r2, s5
 80118a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80118ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80118b0:	ee13 2a10 	vmov	r2, s6
 80118b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80118b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80118ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80118bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80118c0:	9a04      	ldr	r2, [sp, #16]
 80118c2:	9314      	str	r3, [sp, #80]	; 0x50
 80118c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80118c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80118ca:	eeb0 3a67 	vmov.f32	s6, s15
 80118ce:	bf08      	it	eq
 80118d0:	4613      	moveq	r3, r2
 80118d2:	eef0 2a47 	vmov.f32	s5, s14
 80118d6:	e787      	b.n	80117e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80118d8:	1406      	asrs	r6, r0, #16
 80118da:	d45d      	bmi.n	8011998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80118dc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80118e0:	42b5      	cmp	r5, r6
 80118e2:	dd59      	ble.n	8011998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80118e4:	140f      	asrs	r7, r1, #16
 80118e6:	d457      	bmi.n	8011998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80118e8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80118ec:	42ba      	cmp	r2, r7
 80118ee:	dd53      	ble.n	8011998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80118f0:	9a01      	ldr	r2, [sp, #4]
 80118f2:	b22d      	sxth	r5, r5
 80118f4:	fb07 2505 	mla	r5, r7, r5, r2
 80118f8:	5daa      	ldrb	r2, [r5, r6]
 80118fa:	9d02      	ldr	r5, [sp, #8]
 80118fc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011900:	0e2e      	lsrs	r6, r5, #24
 8011902:	d049      	beq.n	8011998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011904:	f06f 0201 	mvn.w	r2, #1
 8011908:	fb02 f20e 	mul.w	r2, r2, lr
 801190c:	9203      	str	r2, [sp, #12]
 801190e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011912:	9a05      	ldr	r2, [sp, #20]
 8011914:	4356      	muls	r6, r2
 8011916:	1c72      	adds	r2, r6, #1
 8011918:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801191c:	1212      	asrs	r2, r2, #8
 801191e:	fa1f f982 	uxth.w	r9, r2
 8011922:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011926:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801192a:	43d2      	mvns	r2, r2
 801192c:	b2d2      	uxtb	r2, r2
 801192e:	fb16 f609 	smulbb	r6, r6, r9
 8011932:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011936:	fb07 6702 	mla	r7, r7, r2, r6
 801193a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801193e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011942:	b2ed      	uxtb	r5, r5
 8011944:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011948:	fa5f f888 	uxtb.w	r8, r8
 801194c:	fb15 f509 	smulbb	r5, r5, r9
 8011950:	fb08 5502 	mla	r5, r8, r2, r5
 8011954:	b2bf      	uxth	r7, r7
 8011956:	fb1a fa09 	smulbb	sl, sl, r9
 801195a:	b2ad      	uxth	r5, r5
 801195c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011960:	fb06 a602 	mla	r6, r6, r2, sl
 8011964:	1c7a      	adds	r2, r7, #1
 8011966:	f105 0a01 	add.w	sl, r5, #1
 801196a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801196e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011972:	b2b6      	uxth	r6, r6
 8011974:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011978:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801197c:	ea4a 0707 	orr.w	r7, sl, r7
 8011980:	f106 0a01 	add.w	sl, r6, #1
 8011984:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011988:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801198c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011990:	9a03      	ldr	r2, [sp, #12]
 8011992:	ea47 070a 	orr.w	r7, r7, sl
 8011996:	52a7      	strh	r7, [r4, r2]
 8011998:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801199a:	4410      	add	r0, r2
 801199c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801199e:	f10e 3eff 	add.w	lr, lr, #4294967295
 80119a2:	4411      	add	r1, r2
 80119a4:	e755      	b.n	8011852 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80119a6:	f04f 0800 	mov.w	r8, #0
 80119aa:	eba3 0208 	sub.w	r2, r3, r8
 80119ae:	2a00      	cmp	r2, #0
 80119b0:	f77f af53 	ble.w	801185a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80119b4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80119b8:	9f01      	ldr	r7, [sp, #4]
 80119ba:	140a      	asrs	r2, r1, #16
 80119bc:	1405      	asrs	r5, r0, #16
 80119be:	fb06 7202 	mla	r2, r6, r2, r7
 80119c2:	5d52      	ldrb	r2, [r2, r5]
 80119c4:	9d02      	ldr	r5, [sp, #8]
 80119c6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80119ca:	0e2e      	lsrs	r6, r5, #24
 80119cc:	d044      	beq.n	8011a58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80119ce:	9a05      	ldr	r2, [sp, #20]
 80119d0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80119d4:	4356      	muls	r6, r2
 80119d6:	1c72      	adds	r2, r6, #1
 80119d8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80119dc:	1212      	asrs	r2, r2, #8
 80119de:	fa1f f982 	uxth.w	r9, r2
 80119e2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80119e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80119ea:	43d2      	mvns	r2, r2
 80119ec:	b2d2      	uxtb	r2, r2
 80119ee:	fb16 f609 	smulbb	r6, r6, r9
 80119f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80119f6:	fb07 6702 	mla	r7, r7, r2, r6
 80119fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80119fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011a02:	b2ed      	uxtb	r5, r5
 8011a04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011a08:	fa5f fe8e 	uxtb.w	lr, lr
 8011a0c:	fb15 f509 	smulbb	r5, r5, r9
 8011a10:	fb0e 5502 	mla	r5, lr, r2, r5
 8011a14:	b2bf      	uxth	r7, r7
 8011a16:	fb1a fa09 	smulbb	sl, sl, r9
 8011a1a:	b2ad      	uxth	r5, r5
 8011a1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011a20:	fb06 a602 	mla	r6, r6, r2, sl
 8011a24:	1c7a      	adds	r2, r7, #1
 8011a26:	f105 0a01 	add.w	sl, r5, #1
 8011a2a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011a2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011a32:	b2b6      	uxth	r6, r6
 8011a34:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011a38:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011a3c:	ea4a 0707 	orr.w	r7, sl, r7
 8011a40:	f106 0a01 	add.w	sl, r6, #1
 8011a44:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011a48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011a4c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011a50:	ea47 070a 	orr.w	r7, r7, sl
 8011a54:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011a58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011a5a:	4410      	add	r0, r2
 8011a5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011a5e:	f108 0801 	add.w	r8, r8, #1
 8011a62:	4411      	add	r1, r2
 8011a64:	e7a1      	b.n	80119aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011a66:	b007      	add	sp, #28
 8011a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a70:	b085      	sub	sp, #20
 8011a72:	468b      	mov	fp, r1
 8011a74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011a76:	9203      	str	r2, [sp, #12]
 8011a78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011a7c:	6841      	ldr	r1, [r0, #4]
 8011a7e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011a82:	fb01 2404 	mla	r4, r1, r4, r2
 8011a86:	6802      	ldr	r2, [r0, #0]
 8011a88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a8c:	f8de 2000 	ldr.w	r2, [lr]
 8011a90:	9200      	str	r2, [sp, #0]
 8011a92:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011a96:	3204      	adds	r2, #4
 8011a98:	9201      	str	r2, [sp, #4]
 8011a9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a9e:	f1bb 0f00 	cmp.w	fp, #0
 8011aa2:	dc03      	bgt.n	8011aac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011aa4:	9a03      	ldr	r2, [sp, #12]
 8011aa6:	2a00      	cmp	r2, #0
 8011aa8:	f340 8153 	ble.w	8011d52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011aac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011aae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011ab2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011ab6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011aba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011abc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011ac0:	2b00      	cmp	r3, #0
 8011ac2:	dd0e      	ble.n	8011ae2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011ac4:	1408      	asrs	r0, r1, #16
 8011ac6:	d405      	bmi.n	8011ad4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011ac8:	42b8      	cmp	r0, r7
 8011aca:	da03      	bge.n	8011ad4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011acc:	1410      	asrs	r0, r2, #16
 8011ace:	d401      	bmi.n	8011ad4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011ad0:	42b0      	cmp	r0, r6
 8011ad2:	db07      	blt.n	8011ae4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011ad4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ad6:	4401      	add	r1, r0
 8011ad8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011ada:	3b01      	subs	r3, #1
 8011adc:	4402      	add	r2, r0
 8011ade:	3402      	adds	r4, #2
 8011ae0:	e7ee      	b.n	8011ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011ae2:	d017      	beq.n	8011b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011ae4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011ae6:	1e58      	subs	r0, r3, #1
 8011ae8:	fb05 1500 	mla	r5, r5, r0, r1
 8011aec:	142d      	asrs	r5, r5, #16
 8011aee:	d409      	bmi.n	8011b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011af0:	42bd      	cmp	r5, r7
 8011af2:	da07      	bge.n	8011b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011af4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011af6:	fb05 2000 	mla	r0, r5, r0, r2
 8011afa:	1400      	asrs	r0, r0, #16
 8011afc:	d402      	bmi.n	8011b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011afe:	42b0      	cmp	r0, r6
 8011b00:	f2c0 80bc 	blt.w	8011c7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011b04:	2600      	movs	r6, #0
 8011b06:	1998      	adds	r0, r3, r6
 8011b08:	2800      	cmp	r0, #0
 8011b0a:	dc3e      	bgt.n	8011b8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8011b0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011b14:	f1bb 0f00 	cmp.w	fp, #0
 8011b18:	f340 811b 	ble.w	8011d52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011b1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8011b2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b36:	eeb0 6a62 	vmov.f32	s12, s5
 8011b3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b46:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011b4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b4e:	eeb0 6a43 	vmov.f32	s12, s6
 8011b52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b56:	ee12 2a90 	vmov	r2, s5
 8011b5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b62:	ee13 2a10 	vmov	r2, s6
 8011b66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b6a:	9311      	str	r3, [sp, #68]	; 0x44
 8011b6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b72:	9a03      	ldr	r2, [sp, #12]
 8011b74:	9312      	str	r3, [sp, #72]	; 0x48
 8011b76:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011b7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b7c:	eeb0 3a67 	vmov.f32	s6, s15
 8011b80:	bf08      	it	eq
 8011b82:	4613      	moveq	r3, r2
 8011b84:	eef0 2a47 	vmov.f32	s5, s14
 8011b88:	e789      	b.n	8011a9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011b8a:	140f      	asrs	r7, r1, #16
 8011b8c:	d426      	bmi.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b8e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011b92:	42bd      	cmp	r5, r7
 8011b94:	dd22      	ble.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011b9a:	d41f      	bmi.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b9c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011ba0:	4560      	cmp	r0, ip
 8011ba2:	dd1b      	ble.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011ba4:	9800      	ldr	r0, [sp, #0]
 8011ba6:	b22d      	sxth	r5, r5
 8011ba8:	fb0c 0505 	mla	r5, ip, r5, r0
 8011bac:	5de8      	ldrb	r0, [r5, r7]
 8011bae:	9d01      	ldr	r5, [sp, #4]
 8011bb0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011bb4:	0e07      	lsrs	r7, r0, #24
 8011bb6:	2fff      	cmp	r7, #255	; 0xff
 8011bb8:	d116      	bne.n	8011be8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011bba:	f06f 0501 	mvn.w	r5, #1
 8011bbe:	fb05 f706 	mul.w	r7, r5, r6
 8011bc2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011bc6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011bca:	0945      	lsrs	r5, r0, #5
 8011bcc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011bd0:	ea4c 0505 	orr.w	r5, ip, r5
 8011bd4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011bd8:	4305      	orrs	r5, r0
 8011bda:	53e5      	strh	r5, [r4, r7]
 8011bdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011bde:	4401      	add	r1, r0
 8011be0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011be2:	3e01      	subs	r6, #1
 8011be4:	4402      	add	r2, r0
 8011be6:	e78e      	b.n	8011b06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8011be8:	b2fd      	uxtb	r5, r7
 8011bea:	2f00      	cmp	r7, #0
 8011bec:	d0f6      	beq.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011bee:	f06f 0701 	mvn.w	r7, #1
 8011bf2:	4377      	muls	r7, r6
 8011bf4:	fa1f f985 	uxth.w	r9, r5
 8011bf8:	f834 8007 	ldrh.w	r8, [r4, r7]
 8011bfc:	9702      	str	r7, [sp, #8]
 8011bfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011c02:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011c06:	43ed      	mvns	r5, r5
 8011c08:	b2ed      	uxtb	r5, r5
 8011c0a:	fb17 f709 	smulbb	r7, r7, r9
 8011c0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011c12:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011c16:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011c1a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011c1e:	b2c0      	uxtb	r0, r0
 8011c20:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011c24:	fa5f f888 	uxtb.w	r8, r8
 8011c28:	fb10 f009 	smulbb	r0, r0, r9
 8011c2c:	fb08 0005 	mla	r0, r8, r5, r0
 8011c30:	b280      	uxth	r0, r0
 8011c32:	fa1f fc8c 	uxth.w	ip, ip
 8011c36:	fb1a fa09 	smulbb	sl, sl, r9
 8011c3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011c3e:	fb07 a705 	mla	r7, r7, r5, sl
 8011c42:	f100 0a01 	add.w	sl, r0, #1
 8011c46:	f10c 0501 	add.w	r5, ip, #1
 8011c4a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011c4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011c52:	b2bf      	uxth	r7, r7
 8011c54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011c5c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011c60:	f107 0a01 	add.w	sl, r7, #1
 8011c64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011c68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c70:	9802      	ldr	r0, [sp, #8]
 8011c72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011c76:	f824 c000 	strh.w	ip, [r4, r0]
 8011c7a:	e7af      	b.n	8011bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011c7c:	f04f 0800 	mov.w	r8, #0
 8011c80:	eba3 0008 	sub.w	r0, r3, r8
 8011c84:	2800      	cmp	r0, #0
 8011c86:	f77f af41 	ble.w	8011b0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011c8a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011c8e:	9f00      	ldr	r7, [sp, #0]
 8011c90:	1410      	asrs	r0, r2, #16
 8011c92:	140d      	asrs	r5, r1, #16
 8011c94:	fb06 7000 	mla	r0, r6, r0, r7
 8011c98:	5d40      	ldrb	r0, [r0, r5]
 8011c9a:	9d01      	ldr	r5, [sp, #4]
 8011c9c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011ca0:	0e2e      	lsrs	r6, r5, #24
 8011ca2:	2eff      	cmp	r6, #255	; 0xff
 8011ca4:	d112      	bne.n	8011ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8011ca6:	482c      	ldr	r0, [pc, #176]	; (8011d58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011ca8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011cac:	0968      	lsrs	r0, r5, #5
 8011cae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011cb2:	4330      	orrs	r0, r6
 8011cb4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011cb8:	4328      	orrs	r0, r5
 8011cba:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8011cbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011cc0:	4401      	add	r1, r0
 8011cc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011cc4:	f108 0801 	add.w	r8, r8, #1
 8011cc8:	4402      	add	r2, r0
 8011cca:	e7d9      	b.n	8011c80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011ccc:	b2f0      	uxtb	r0, r6
 8011cce:	2e00      	cmp	r6, #0
 8011cd0:	d0f5      	beq.n	8011cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011cd2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8011cd6:	fa1f f980 	uxth.w	r9, r0
 8011cda:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011cde:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011ce2:	43c0      	mvns	r0, r0
 8011ce4:	b2c0      	uxtb	r0, r0
 8011ce6:	fb16 f609 	smulbb	r6, r6, r9
 8011cea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011cee:	fb07 6700 	mla	r7, r7, r0, r6
 8011cf2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011cf6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011cfa:	b2ed      	uxtb	r5, r5
 8011cfc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011d00:	fa5f fc8c 	uxtb.w	ip, ip
 8011d04:	fb15 f509 	smulbb	r5, r5, r9
 8011d08:	fb0c 5500 	mla	r5, ip, r0, r5
 8011d0c:	b2bf      	uxth	r7, r7
 8011d0e:	fb1a fa09 	smulbb	sl, sl, r9
 8011d12:	b2ad      	uxth	r5, r5
 8011d14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011d18:	fb06 a600 	mla	r6, r6, r0, sl
 8011d1c:	1c78      	adds	r0, r7, #1
 8011d1e:	f105 0a01 	add.w	sl, r5, #1
 8011d22:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011d26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011d2a:	b2b6      	uxth	r6, r6
 8011d2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011d30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011d34:	ea4a 0707 	orr.w	r7, sl, r7
 8011d38:	f106 0a01 	add.w	sl, r6, #1
 8011d3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011d40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011d44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011d48:	ea47 070a 	orr.w	r7, r7, sl
 8011d4c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011d50:	e7b5      	b.n	8011cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011d52:	b005      	add	sp, #20
 8011d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d58:	fffff800 	.word	0xfffff800

08011d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d60:	b087      	sub	sp, #28
 8011d62:	468b      	mov	fp, r1
 8011d64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011d66:	9204      	str	r2, [sp, #16]
 8011d68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011d6c:	9205      	str	r2, [sp, #20]
 8011d6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011d72:	6861      	ldr	r1, [r4, #4]
 8011d74:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011d78:	fb01 2000 	mla	r0, r1, r0, r2
 8011d7c:	6822      	ldr	r2, [r4, #0]
 8011d7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011d82:	f8de 2000 	ldr.w	r2, [lr]
 8011d86:	9201      	str	r2, [sp, #4]
 8011d88:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011d8c:	9202      	str	r2, [sp, #8]
 8011d8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d92:	f1bb 0f00 	cmp.w	fp, #0
 8011d96:	dc03      	bgt.n	8011da0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011d98:	9a04      	ldr	r2, [sp, #16]
 8011d9a:	2a00      	cmp	r2, #0
 8011d9c:	f340 8142 	ble.w	8012024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011da0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011da2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011da6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011daa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011dae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011db0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011db4:	2b00      	cmp	r3, #0
 8011db6:	dd0e      	ble.n	8011dd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011db8:	140c      	asrs	r4, r1, #16
 8011dba:	d405      	bmi.n	8011dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011dbc:	42bc      	cmp	r4, r7
 8011dbe:	da03      	bge.n	8011dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011dc0:	1414      	asrs	r4, r2, #16
 8011dc2:	d401      	bmi.n	8011dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011dc4:	42b4      	cmp	r4, r6
 8011dc6:	db07      	blt.n	8011dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011dc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011dca:	4421      	add	r1, r4
 8011dcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011dce:	3b01      	subs	r3, #1
 8011dd0:	4422      	add	r2, r4
 8011dd2:	3002      	adds	r0, #2
 8011dd4:	e7ee      	b.n	8011db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011dd6:	d019      	beq.n	8011e0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011dd8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011dda:	1e5c      	subs	r4, r3, #1
 8011ddc:	fb05 1504 	mla	r5, r5, r4, r1
 8011de0:	142d      	asrs	r5, r5, #16
 8011de2:	d409      	bmi.n	8011df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011de4:	42bd      	cmp	r5, r7
 8011de6:	da07      	bge.n	8011df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011de8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011dea:	fb05 2404 	mla	r4, r5, r4, r2
 8011dee:	1424      	asrs	r4, r4, #16
 8011df0:	d402      	bmi.n	8011df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011df2:	42b4      	cmp	r4, r6
 8011df4:	f2c0 80b1 	blt.w	8011f5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011df8:	f04f 0800 	mov.w	r8, #0
 8011dfc:	eb03 0408 	add.w	r4, r3, r8
 8011e00:	2c00      	cmp	r4, #0
 8011e02:	dc3e      	bgt.n	8011e82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011e04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011e0c:	f1bb 0f00 	cmp.w	fp, #0
 8011e10:	f340 8108 	ble.w	8012024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011e14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011e20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e22:	f1bb 0b01 	subs.w	fp, fp, #1
 8011e26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011e2e:	eeb0 6a62 	vmov.f32	s12, s5
 8011e32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e46:	eeb0 6a43 	vmov.f32	s12, s6
 8011e4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e4e:	ee12 2a90 	vmov	r2, s5
 8011e52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e56:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e5a:	ee13 2a10 	vmov	r2, s6
 8011e5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e62:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e66:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e6a:	9a04      	ldr	r2, [sp, #16]
 8011e6c:	9314      	str	r3, [sp, #80]	; 0x50
 8011e6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e74:	eeb0 3a67 	vmov.f32	s6, s15
 8011e78:	bf08      	it	eq
 8011e7a:	4613      	moveq	r3, r2
 8011e7c:	eef0 2a47 	vmov.f32	s5, s14
 8011e80:	e787      	b.n	8011d92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011e82:	140e      	asrs	r6, r1, #16
 8011e84:	d462      	bmi.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011e86:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011e8a:	42b5      	cmp	r5, r6
 8011e8c:	dd5e      	ble.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011e8e:	1417      	asrs	r7, r2, #16
 8011e90:	d45c      	bmi.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011e92:	f8de 400c 	ldr.w	r4, [lr, #12]
 8011e96:	42bc      	cmp	r4, r7
 8011e98:	dd58      	ble.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011e9a:	b22d      	sxth	r5, r5
 8011e9c:	fb07 6505 	mla	r5, r7, r5, r6
 8011ea0:	9c02      	ldr	r4, [sp, #8]
 8011ea2:	5d66      	ldrb	r6, [r4, r5]
 8011ea4:	2e00      	cmp	r6, #0
 8011ea6:	d051      	beq.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011ea8:	9c01      	ldr	r4, [sp, #4]
 8011eaa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8011eae:	f06f 0401 	mvn.w	r4, #1
 8011eb2:	fb04 f408 	mul.w	r4, r4, r8
 8011eb6:	9403      	str	r4, [sp, #12]
 8011eb8:	5b05      	ldrh	r5, [r0, r4]
 8011eba:	9c05      	ldr	r4, [sp, #20]
 8011ebc:	4366      	muls	r6, r4
 8011ebe:	1c74      	adds	r4, r6, #1
 8011ec0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011ec4:	1224      	asrs	r4, r4, #8
 8011ec6:	b2a7      	uxth	r7, r4
 8011ec8:	122e      	asrs	r6, r5, #8
 8011eca:	43e4      	mvns	r4, r4
 8011ecc:	b2e4      	uxtb	r4, r4
 8011ece:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8011ed2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011ed6:	fb16 f604 	smulbb	r6, r6, r4
 8011eda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011ede:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ee2:	00ed      	lsls	r5, r5, #3
 8011ee4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011ee8:	b2ed      	uxtb	r5, r5
 8011eea:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8011eee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011ef2:	fb15 f504 	smulbb	r5, r5, r4
 8011ef6:	fa5f f989 	uxtb.w	r9, r9
 8011efa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011efe:	fb09 5507 	mla	r5, r9, r7, r5
 8011f02:	fb1a fa04 	smulbb	sl, sl, r4
 8011f06:	fa1f fc8c 	uxth.w	ip, ip
 8011f0a:	b2ad      	uxth	r5, r5
 8011f0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011f10:	fb06 a607 	mla	r6, r6, r7, sl
 8011f14:	f10c 0401 	add.w	r4, ip, #1
 8011f18:	f105 0a01 	add.w	sl, r5, #1
 8011f1c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011f20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011f24:	b2b6      	uxth	r6, r6
 8011f26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011f2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f2e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011f32:	f106 0a01 	add.w	sl, r6, #1
 8011f36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011f3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011f3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011f42:	9c03      	ldr	r4, [sp, #12]
 8011f44:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011f48:	f820 c004 	strh.w	ip, [r0, r4]
 8011f4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011f4e:	4421      	add	r1, r4
 8011f50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011f52:	f108 38ff 	add.w	r8, r8, #4294967295
 8011f56:	4422      	add	r2, r4
 8011f58:	e750      	b.n	8011dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011f5a:	f04f 0900 	mov.w	r9, #0
 8011f5e:	eba3 0409 	sub.w	r4, r3, r9
 8011f62:	2c00      	cmp	r4, #0
 8011f64:	f77f af4e 	ble.w	8011e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011f68:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011f6c:	140d      	asrs	r5, r1, #16
 8011f6e:	1414      	asrs	r4, r2, #16
 8011f70:	fb06 5404 	mla	r4, r6, r4, r5
 8011f74:	9d02      	ldr	r5, [sp, #8]
 8011f76:	5d2e      	ldrb	r6, [r5, r4]
 8011f78:	2e00      	cmp	r6, #0
 8011f7a:	d04c      	beq.n	8012016 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8011f7c:	9d01      	ldr	r5, [sp, #4]
 8011f7e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8011f82:	9c05      	ldr	r4, [sp, #20]
 8011f84:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011f88:	4366      	muls	r6, r4
 8011f8a:	1c74      	adds	r4, r6, #1
 8011f8c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011f90:	1224      	asrs	r4, r4, #8
 8011f92:	b2a7      	uxth	r7, r4
 8011f94:	122e      	asrs	r6, r5, #8
 8011f96:	43e4      	mvns	r4, r4
 8011f98:	b2e4      	uxtb	r4, r4
 8011f9a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011f9e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011fa2:	fb16 f604 	smulbb	r6, r6, r4
 8011fa6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011faa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011fae:	00ed      	lsls	r5, r5, #3
 8011fb0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011fb4:	b2ed      	uxtb	r5, r5
 8011fb6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011fba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011fbe:	fb15 f504 	smulbb	r5, r5, r4
 8011fc2:	fa5f f888 	uxtb.w	r8, r8
 8011fc6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011fca:	fb08 5507 	mla	r5, r8, r7, r5
 8011fce:	fb1a fa04 	smulbb	sl, sl, r4
 8011fd2:	fa1f fc8c 	uxth.w	ip, ip
 8011fd6:	b2ad      	uxth	r5, r5
 8011fd8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011fdc:	fb06 a607 	mla	r6, r6, r7, sl
 8011fe0:	f10c 0401 	add.w	r4, ip, #1
 8011fe4:	f105 0a01 	add.w	sl, r5, #1
 8011fe8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011fec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ff0:	b2b6      	uxth	r6, r6
 8011ff2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ff6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011ffa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011ffe:	f106 0a01 	add.w	sl, r6, #1
 8012002:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012006:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801200a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801200e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012012:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8012016:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012018:	4421      	add	r1, r4
 801201a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801201c:	f109 0901 	add.w	r9, r9, #1
 8012020:	4422      	add	r2, r4
 8012022:	e79c      	b.n	8011f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012024:	b007      	add	sp, #28
 8012026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801202a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801202a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801202e:	b085      	sub	sp, #20
 8012030:	468b      	mov	fp, r1
 8012032:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012034:	9203      	str	r2, [sp, #12]
 8012036:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801203a:	6861      	ldr	r1, [r4, #4]
 801203c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012040:	fb01 2000 	mla	r0, r1, r0, r2
 8012044:	6822      	ldr	r2, [r4, #0]
 8012046:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801204a:	f8d8 2000 	ldr.w	r2, [r8]
 801204e:	9200      	str	r2, [sp, #0]
 8012050:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012054:	9201      	str	r2, [sp, #4]
 8012056:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801205a:	f1bb 0f00 	cmp.w	fp, #0
 801205e:	dc03      	bgt.n	8012068 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012060:	9a03      	ldr	r2, [sp, #12]
 8012062:	2a00      	cmp	r2, #0
 8012064:	f340 8146 	ble.w	80122f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012068:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801206a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801206e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012072:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012076:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012078:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801207c:	2b00      	cmp	r3, #0
 801207e:	dd0e      	ble.n	801209e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012080:	140c      	asrs	r4, r1, #16
 8012082:	d405      	bmi.n	8012090 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012084:	42bc      	cmp	r4, r7
 8012086:	da03      	bge.n	8012090 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012088:	1414      	asrs	r4, r2, #16
 801208a:	d401      	bmi.n	8012090 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801208c:	42b4      	cmp	r4, r6
 801208e:	db07      	blt.n	80120a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012090:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012092:	4421      	add	r1, r4
 8012094:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012096:	3b01      	subs	r3, #1
 8012098:	4422      	add	r2, r4
 801209a:	3002      	adds	r0, #2
 801209c:	e7ee      	b.n	801207c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801209e:	d017      	beq.n	80120d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80120a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80120a2:	1e5c      	subs	r4, r3, #1
 80120a4:	fb05 1504 	mla	r5, r5, r4, r1
 80120a8:	142d      	asrs	r5, r5, #16
 80120aa:	d409      	bmi.n	80120c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80120ac:	42bd      	cmp	r5, r7
 80120ae:	da07      	bge.n	80120c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80120b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80120b2:	fb05 2404 	mla	r4, r5, r4, r2
 80120b6:	1424      	asrs	r4, r4, #16
 80120b8:	d402      	bmi.n	80120c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80120ba:	42b4      	cmp	r4, r6
 80120bc:	f2c0 80b3 	blt.w	8012226 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80120c0:	2600      	movs	r6, #0
 80120c2:	199c      	adds	r4, r3, r6
 80120c4:	2c00      	cmp	r4, #0
 80120c6:	dc3e      	bgt.n	8012146 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80120c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80120cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80120d0:	f1bb 0f00 	cmp.w	fp, #0
 80120d4:	f340 810e 	ble.w	80122f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80120d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80120dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80120e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80120e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80120e6:	f1bb 0b01 	subs.w	fp, fp, #1
 80120ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80120ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80120f2:	eeb0 6a62 	vmov.f32	s12, s5
 80120f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80120fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012102:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012106:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801210a:	eeb0 6a43 	vmov.f32	s12, s6
 801210e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012112:	ee12 2a90 	vmov	r2, s5
 8012116:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801211a:	fb92 f3f3 	sdiv	r3, r2, r3
 801211e:	ee13 2a10 	vmov	r2, s6
 8012122:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012126:	9311      	str	r3, [sp, #68]	; 0x44
 8012128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801212a:	fb92 f3f3 	sdiv	r3, r2, r3
 801212e:	9a03      	ldr	r2, [sp, #12]
 8012130:	9312      	str	r3, [sp, #72]	; 0x48
 8012132:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012136:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012138:	eeb0 3a67 	vmov.f32	s6, s15
 801213c:	bf08      	it	eq
 801213e:	4613      	moveq	r3, r2
 8012140:	eef0 2a47 	vmov.f32	s5, s14
 8012144:	e789      	b.n	801205a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012146:	140f      	asrs	r7, r1, #16
 8012148:	d418      	bmi.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801214a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801214e:	42bd      	cmp	r5, r7
 8012150:	dd14      	ble.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012152:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012156:	d411      	bmi.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012158:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801215c:	4564      	cmp	r4, ip
 801215e:	dd0d      	ble.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012160:	b22d      	sxth	r5, r5
 8012162:	fb0c 7505 	mla	r5, ip, r5, r7
 8012166:	9c01      	ldr	r4, [sp, #4]
 8012168:	5d64      	ldrb	r4, [r4, r5]
 801216a:	2cff      	cmp	r4, #255	; 0xff
 801216c:	d10c      	bne.n	8012188 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801216e:	9c00      	ldr	r4, [sp, #0]
 8012170:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012174:	f06f 0401 	mvn.w	r4, #1
 8012178:	4374      	muls	r4, r6
 801217a:	5305      	strh	r5, [r0, r4]
 801217c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801217e:	4421      	add	r1, r4
 8012180:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012182:	3e01      	subs	r6, #1
 8012184:	4422      	add	r2, r4
 8012186:	e79c      	b.n	80120c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012188:	2c00      	cmp	r4, #0
 801218a:	d0f7      	beq.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801218c:	9f00      	ldr	r7, [sp, #0]
 801218e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012192:	f06f 0501 	mvn.w	r5, #1
 8012196:	4375      	muls	r5, r6
 8012198:	9502      	str	r5, [sp, #8]
 801219a:	5b45      	ldrh	r5, [r0, r5]
 801219c:	fa1f fc84 	uxth.w	ip, r4
 80121a0:	122f      	asrs	r7, r5, #8
 80121a2:	43e4      	mvns	r4, r4
 80121a4:	b2e4      	uxtb	r4, r4
 80121a6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80121aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121ae:	fb17 f704 	smulbb	r7, r7, r4
 80121b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80121b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80121ba:	00ed      	lsls	r5, r5, #3
 80121bc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80121c0:	b2ed      	uxtb	r5, r5
 80121c2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80121c6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80121ca:	fb15 f504 	smulbb	r5, r5, r4
 80121ce:	fa5f f989 	uxtb.w	r9, r9
 80121d2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80121d6:	fb09 550c 	mla	r5, r9, ip, r5
 80121da:	fb1a fa04 	smulbb	sl, sl, r4
 80121de:	fa1f fe8e 	uxth.w	lr, lr
 80121e2:	b2ad      	uxth	r5, r5
 80121e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80121e8:	fb07 a70c 	mla	r7, r7, ip, sl
 80121ec:	f10e 0401 	add.w	r4, lr, #1
 80121f0:	f105 0a01 	add.w	sl, r5, #1
 80121f4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80121f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80121fc:	b2bf      	uxth	r7, r7
 80121fe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012202:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012206:	ea4a 0e0e 	orr.w	lr, sl, lr
 801220a:	f107 0a01 	add.w	sl, r7, #1
 801220e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012212:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012216:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801221a:	9c02      	ldr	r4, [sp, #8]
 801221c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012220:	f820 e004 	strh.w	lr, [r0, r4]
 8012224:	e7aa      	b.n	801217c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012226:	f04f 0900 	mov.w	r9, #0
 801222a:	eba3 0409 	sub.w	r4, r3, r9
 801222e:	2c00      	cmp	r4, #0
 8012230:	f77f af4a 	ble.w	80120c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012234:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012238:	1414      	asrs	r4, r2, #16
 801223a:	140d      	asrs	r5, r1, #16
 801223c:	fb06 5504 	mla	r5, r6, r4, r5
 8012240:	9c01      	ldr	r4, [sp, #4]
 8012242:	5d64      	ldrb	r4, [r4, r5]
 8012244:	2cff      	cmp	r4, #255	; 0xff
 8012246:	d10b      	bne.n	8012260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8012248:	9c00      	ldr	r4, [sp, #0]
 801224a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801224e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8012252:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012254:	4421      	add	r1, r4
 8012256:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012258:	f109 0901 	add.w	r9, r9, #1
 801225c:	4422      	add	r2, r4
 801225e:	e7e4      	b.n	801222a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012260:	2c00      	cmp	r4, #0
 8012262:	d0f6      	beq.n	8012252 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012264:	9e00      	ldr	r6, [sp, #0]
 8012266:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801226a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801226e:	b2a7      	uxth	r7, r4
 8012270:	122e      	asrs	r6, r5, #8
 8012272:	43e4      	mvns	r4, r4
 8012274:	b2e4      	uxtb	r4, r4
 8012276:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801227a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801227e:	fb16 f604 	smulbb	r6, r6, r4
 8012282:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012286:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801228a:	00ed      	lsls	r5, r5, #3
 801228c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012290:	b2ed      	uxtb	r5, r5
 8012292:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012296:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801229a:	fb15 f504 	smulbb	r5, r5, r4
 801229e:	fa5f fe8e 	uxtb.w	lr, lr
 80122a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80122a6:	fb0e 5507 	mla	r5, lr, r7, r5
 80122aa:	fb1a fa04 	smulbb	sl, sl, r4
 80122ae:	fa1f fc8c 	uxth.w	ip, ip
 80122b2:	b2ad      	uxth	r5, r5
 80122b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80122b8:	fb06 a607 	mla	r6, r6, r7, sl
 80122bc:	f10c 0401 	add.w	r4, ip, #1
 80122c0:	f105 0a01 	add.w	sl, r5, #1
 80122c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80122c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80122cc:	b2b6      	uxth	r6, r6
 80122ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80122d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80122da:	f106 0a01 	add.w	sl, r6, #1
 80122de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80122e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80122ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80122ee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80122f2:	e7ae      	b.n	8012252 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80122f4:	b005      	add	sp, #20
 80122f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080122fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80122fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122fe:	b085      	sub	sp, #20
 8012300:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012302:	9203      	str	r2, [sp, #12]
 8012304:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8012308:	9201      	str	r2, [sp, #4]
 801230a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801230e:	9100      	str	r1, [sp, #0]
 8012310:	6841      	ldr	r1, [r0, #4]
 8012312:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012316:	fb01 2404 	mla	r4, r1, r4, r2
 801231a:	6802      	ldr	r2, [r0, #0]
 801231c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012320:	f8de 2000 	ldr.w	r2, [lr]
 8012324:	9202      	str	r2, [sp, #8]
 8012326:	9a01      	ldr	r2, [sp, #4]
 8012328:	43d6      	mvns	r6, r2
 801232a:	b2f6      	uxtb	r6, r6
 801232c:	9a00      	ldr	r2, [sp, #0]
 801232e:	2a00      	cmp	r2, #0
 8012330:	dc03      	bgt.n	801233a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012332:	9a03      	ldr	r2, [sp, #12]
 8012334:	2a00      	cmp	r2, #0
 8012336:	f340 8124 	ble.w	8012582 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801233a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801233c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012340:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012344:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012348:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801234a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801234e:	2b00      	cmp	r3, #0
 8012350:	dd0e      	ble.n	8012370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012352:	1408      	asrs	r0, r1, #16
 8012354:	d405      	bmi.n	8012362 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012356:	4560      	cmp	r0, ip
 8012358:	da03      	bge.n	8012362 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801235a:	1410      	asrs	r0, r2, #16
 801235c:	d401      	bmi.n	8012362 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801235e:	42b8      	cmp	r0, r7
 8012360:	db07      	blt.n	8012372 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012362:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012364:	4401      	add	r1, r0
 8012366:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012368:	3b01      	subs	r3, #1
 801236a:	4402      	add	r2, r0
 801236c:	3402      	adds	r4, #2
 801236e:	e7ee      	b.n	801234e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012370:	d06e      	beq.n	8012450 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012372:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012374:	1e58      	subs	r0, r3, #1
 8012376:	fb05 1500 	mla	r5, r5, r0, r1
 801237a:	142d      	asrs	r5, r5, #16
 801237c:	d45c      	bmi.n	8012438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801237e:	4565      	cmp	r5, ip
 8012380:	da5a      	bge.n	8012438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012382:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012384:	fb05 2000 	mla	r0, r5, r0, r2
 8012388:	1400      	asrs	r0, r0, #16
 801238a:	d455      	bmi.n	8012438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801238c:	42b8      	cmp	r0, r7
 801238e:	da53      	bge.n	8012438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012390:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012394:	4699      	mov	r9, r3
 8012396:	46a2      	mov	sl, r4
 8012398:	f1b9 0f00 	cmp.w	r9, #0
 801239c:	dd54      	ble.n	8012448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801239e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80123a2:	140d      	asrs	r5, r1, #16
 80123a4:	1410      	asrs	r0, r2, #16
 80123a6:	fb07 5000 	mla	r0, r7, r0, r5
 80123aa:	9d02      	ldr	r5, [sp, #8]
 80123ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80123b0:	f8ba 5000 	ldrh.w	r5, [sl]
 80123b4:	122f      	asrs	r7, r5, #8
 80123b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80123ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80123be:	fb17 f706 	smulbb	r7, r7, r6
 80123c2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80123c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123ca:	00ed      	lsls	r5, r5, #3
 80123cc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80123d0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80123d4:	10c7      	asrs	r7, r0, #3
 80123d6:	b2ed      	uxtb	r5, r5
 80123d8:	00c0      	lsls	r0, r0, #3
 80123da:	fb18 f806 	smulbb	r8, r8, r6
 80123de:	fb15 f506 	smulbb	r5, r5, r6
 80123e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80123e6:	b2c0      	uxtb	r0, r0
 80123e8:	fa1f fc8c 	uxth.w	ip, ip
 80123ec:	fb07 870b 	mla	r7, r7, fp, r8
 80123f0:	fb00 500b 	mla	r0, r0, fp, r5
 80123f4:	b280      	uxth	r0, r0
 80123f6:	b2bf      	uxth	r7, r7
 80123f8:	f10c 0501 	add.w	r5, ip, #1
 80123fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012400:	f107 0801 	add.w	r8, r7, #1
 8012404:	1c45      	adds	r5, r0, #1
 8012406:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801240a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801240e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012410:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012414:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012418:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801241c:	ea45 0c0c 	orr.w	ip, r5, ip
 8012420:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8012424:	4401      	add	r1, r0
 8012426:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012428:	ea4c 0c08 	orr.w	ip, ip, r8
 801242c:	f82a cb02 	strh.w	ip, [sl], #2
 8012430:	4402      	add	r2, r0
 8012432:	f109 39ff 	add.w	r9, r9, #4294967295
 8012436:	e7af      	b.n	8012398 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012438:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801243c:	f04f 0800 	mov.w	r8, #0
 8012440:	eb03 0008 	add.w	r0, r3, r8
 8012444:	2800      	cmp	r0, #0
 8012446:	dc41      	bgt.n	80124cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012448:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801244c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012450:	9b00      	ldr	r3, [sp, #0]
 8012452:	2b00      	cmp	r3, #0
 8012454:	f340 8095 	ble.w	8012582 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012458:	ee30 0a04 	vadd.f32	s0, s0, s8
 801245c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012460:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012464:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012466:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801246a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801246e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012472:	eef0 6a62 	vmov.f32	s13, s5
 8012476:	ee61 7a27 	vmul.f32	s15, s2, s15
 801247a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801247e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012482:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8012486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801248a:	eef0 6a43 	vmov.f32	s13, s6
 801248e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012492:	ee12 2a90 	vmov	r2, s5
 8012496:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801249a:	fb92 f3f3 	sdiv	r3, r2, r3
 801249e:	ee13 2a10 	vmov	r2, s6
 80124a2:	9311      	str	r3, [sp, #68]	; 0x44
 80124a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80124a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80124aa:	9312      	str	r3, [sp, #72]	; 0x48
 80124ac:	9b00      	ldr	r3, [sp, #0]
 80124ae:	9a03      	ldr	r2, [sp, #12]
 80124b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80124b4:	3b01      	subs	r3, #1
 80124b6:	9300      	str	r3, [sp, #0]
 80124b8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80124bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80124be:	eeb0 3a67 	vmov.f32	s6, s15
 80124c2:	bf08      	it	eq
 80124c4:	4613      	moveq	r3, r2
 80124c6:	eef0 2a47 	vmov.f32	s5, s14
 80124ca:	e72f      	b.n	801232c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80124cc:	140f      	asrs	r7, r1, #16
 80124ce:	d451      	bmi.n	8012574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80124d0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80124d4:	42bd      	cmp	r5, r7
 80124d6:	dd4d      	ble.n	8012574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80124d8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80124dc:	d44a      	bmi.n	8012574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80124de:	f8de 000c 	ldr.w	r0, [lr, #12]
 80124e2:	4560      	cmp	r0, ip
 80124e4:	dd46      	ble.n	8012574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80124e6:	b22d      	sxth	r5, r5
 80124e8:	fb0c 7505 	mla	r5, ip, r5, r7
 80124ec:	9802      	ldr	r0, [sp, #8]
 80124ee:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80124f2:	f06f 0501 	mvn.w	r5, #1
 80124f6:	fb05 fb08 	mul.w	fp, r5, r8
 80124fa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80124fe:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012502:	122f      	asrs	r7, r5, #8
 8012504:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012508:	fb17 f706 	smulbb	r7, r7, r6
 801250c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012510:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012514:	00ed      	lsls	r5, r5, #3
 8012516:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801251a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801251e:	10c7      	asrs	r7, r0, #3
 8012520:	b2ed      	uxtb	r5, r5
 8012522:	00c0      	lsls	r0, r0, #3
 8012524:	fb19 f906 	smulbb	r9, r9, r6
 8012528:	fb15 f506 	smulbb	r5, r5, r6
 801252c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012530:	b2c0      	uxtb	r0, r0
 8012532:	fa1f fc8c 	uxth.w	ip, ip
 8012536:	fb07 970a 	mla	r7, r7, sl, r9
 801253a:	fb00 500a 	mla	r0, r0, sl, r5
 801253e:	b2bf      	uxth	r7, r7
 8012540:	b280      	uxth	r0, r0
 8012542:	f10c 0501 	add.w	r5, ip, #1
 8012546:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801254a:	f107 0901 	add.w	r9, r7, #1
 801254e:	1c45      	adds	r5, r0, #1
 8012550:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012554:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012558:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801255c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012560:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012564:	ea45 0c0c 	orr.w	ip, r5, ip
 8012568:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801256c:	ea4c 0c09 	orr.w	ip, ip, r9
 8012570:	f824 c00b 	strh.w	ip, [r4, fp]
 8012574:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012576:	4401      	add	r1, r0
 8012578:	9812      	ldr	r0, [sp, #72]	; 0x48
 801257a:	f108 38ff 	add.w	r8, r8, #4294967295
 801257e:	4402      	add	r2, r0
 8012580:	e75e      	b.n	8012440 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012582:	b005      	add	sp, #20
 8012584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012588 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801258c:	b085      	sub	sp, #20
 801258e:	4693      	mov	fp, r2
 8012590:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012592:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012594:	6870      	ldr	r0, [r6, #4]
 8012596:	9101      	str	r1, [sp, #4]
 8012598:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801259c:	fb00 2404 	mla	r4, r0, r4, r2
 80125a0:	6832      	ldr	r2, [r6, #0]
 80125a2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80125a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80125aa:	682a      	ldr	r2, [r5, #0]
 80125ac:	9202      	str	r2, [sp, #8]
 80125ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80125b2:	9a01      	ldr	r2, [sp, #4]
 80125b4:	2a00      	cmp	r2, #0
 80125b6:	dc03      	bgt.n	80125c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80125b8:	f1bb 0f00 	cmp.w	fp, #0
 80125bc:	f340 809a 	ble.w	80126f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80125c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80125c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80125c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80125ca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80125ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80125d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80125d4:	2b00      	cmp	r3, #0
 80125d6:	dd0c      	ble.n	80125f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80125d8:	1406      	asrs	r6, r0, #16
 80125da:	d405      	bmi.n	80125e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80125dc:	454e      	cmp	r6, r9
 80125de:	da03      	bge.n	80125e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80125e0:	1416      	asrs	r6, r2, #16
 80125e2:	d401      	bmi.n	80125e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80125e4:	4546      	cmp	r6, r8
 80125e6:	db05      	blt.n	80125f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80125e8:	4470      	add	r0, lr
 80125ea:	4462      	add	r2, ip
 80125ec:	3b01      	subs	r3, #1
 80125ee:	3402      	adds	r4, #2
 80125f0:	e7f0      	b.n	80125d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80125f2:	d00f      	beq.n	8012614 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80125f4:	1e5e      	subs	r6, r3, #1
 80125f6:	fb0e 0706 	mla	r7, lr, r6, r0
 80125fa:	143f      	asrs	r7, r7, #16
 80125fc:	d541      	bpl.n	8012682 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80125fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012602:	4698      	mov	r8, r3
 8012604:	9603      	str	r6, [sp, #12]
 8012606:	f1b8 0f00 	cmp.w	r8, #0
 801260a:	dc56      	bgt.n	80126ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801260c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012610:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012614:	9b01      	ldr	r3, [sp, #4]
 8012616:	2b00      	cmp	r3, #0
 8012618:	dd6c      	ble.n	80126f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801261a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801261e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012622:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012626:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012628:	ee31 1a05 	vadd.f32	s2, s2, s10
 801262c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012630:	eeb0 6a62 	vmov.f32	s12, s5
 8012634:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012638:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801263c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012640:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012644:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012648:	eeb0 6a43 	vmov.f32	s12, s6
 801264c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012650:	ee12 2a90 	vmov	r2, s5
 8012654:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012658:	fb92 fef3 	sdiv	lr, r2, r3
 801265c:	ee13 2a10 	vmov	r2, s6
 8012660:	fb92 fcf3 	sdiv	ip, r2, r3
 8012664:	9b01      	ldr	r3, [sp, #4]
 8012666:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801266a:	3b01      	subs	r3, #1
 801266c:	9301      	str	r3, [sp, #4]
 801266e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012672:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012674:	eeb0 3a67 	vmov.f32	s6, s15
 8012678:	bf08      	it	eq
 801267a:	465b      	moveq	r3, fp
 801267c:	eef0 2a47 	vmov.f32	s5, s14
 8012680:	e797      	b.n	80125b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012682:	454f      	cmp	r7, r9
 8012684:	dabb      	bge.n	80125fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012686:	fb0c 2606 	mla	r6, ip, r6, r2
 801268a:	1436      	asrs	r6, r6, #16
 801268c:	d4b7      	bmi.n	80125fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801268e:	4546      	cmp	r6, r8
 8012690:	dab5      	bge.n	80125fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012692:	461e      	mov	r6, r3
 8012694:	46a0      	mov	r8, r4
 8012696:	2e00      	cmp	r6, #0
 8012698:	ddb8      	ble.n	801260c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801269a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801269e:	9902      	ldr	r1, [sp, #8]
 80126a0:	1417      	asrs	r7, r2, #16
 80126a2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80126a6:	fb0a 9707 	mla	r7, sl, r7, r9
 80126aa:	4470      	add	r0, lr
 80126ac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80126b0:	f828 7b02 	strh.w	r7, [r8], #2
 80126b4:	4462      	add	r2, ip
 80126b6:	3e01      	subs	r6, #1
 80126b8:	e7ed      	b.n	8012696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80126ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 80126be:	d414      	bmi.n	80126ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80126c0:	68ae      	ldr	r6, [r5, #8]
 80126c2:	454e      	cmp	r6, r9
 80126c4:	dd11      	ble.n	80126ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80126c6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80126ca:	d40e      	bmi.n	80126ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80126cc:	68ef      	ldr	r7, [r5, #12]
 80126ce:	4557      	cmp	r7, sl
 80126d0:	dd0b      	ble.n	80126ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80126d2:	b236      	sxth	r6, r6
 80126d4:	fb0a 9606 	mla	r6, sl, r6, r9
 80126d8:	9f02      	ldr	r7, [sp, #8]
 80126da:	f06f 0101 	mvn.w	r1, #1
 80126de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80126e2:	fb01 f608 	mul.w	r6, r1, r8
 80126e6:	9903      	ldr	r1, [sp, #12]
 80126e8:	538f      	strh	r7, [r1, r6]
 80126ea:	4470      	add	r0, lr
 80126ec:	4462      	add	r2, ip
 80126ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80126f2:	e788      	b.n	8012606 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80126f4:	b005      	add	sp, #20
 80126f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080126fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80126fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126fe:	b087      	sub	sp, #28
 8012700:	468b      	mov	fp, r1
 8012702:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012704:	9203      	str	r2, [sp, #12]
 8012706:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801270a:	9204      	str	r2, [sp, #16]
 801270c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012710:	6841      	ldr	r1, [r0, #4]
 8012712:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012716:	fb01 2505 	mla	r5, r1, r5, r2
 801271a:	6802      	ldr	r2, [r0, #0]
 801271c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012720:	f8d9 2000 	ldr.w	r2, [r9]
 8012724:	9201      	str	r2, [sp, #4]
 8012726:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801272a:	f1bb 0f00 	cmp.w	fp, #0
 801272e:	dc03      	bgt.n	8012738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012730:	9a03      	ldr	r2, [sp, #12]
 8012732:	2a00      	cmp	r2, #0
 8012734:	f340 8159 	ble.w	80129ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8012738:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801273a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801273e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012742:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012746:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012748:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801274c:	2b00      	cmp	r3, #0
 801274e:	dd0e      	ble.n	801276e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012750:	1402      	asrs	r2, r0, #16
 8012752:	d405      	bmi.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012754:	42ba      	cmp	r2, r7
 8012756:	da03      	bge.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012758:	140a      	asrs	r2, r1, #16
 801275a:	d401      	bmi.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801275c:	42b2      	cmp	r2, r6
 801275e:	db07      	blt.n	8012770 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012760:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012762:	4410      	add	r0, r2
 8012764:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012766:	3b01      	subs	r3, #1
 8012768:	4411      	add	r1, r2
 801276a:	3502      	adds	r5, #2
 801276c:	e7ee      	b.n	801274c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801276e:	d017      	beq.n	80127a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012770:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012772:	1e5a      	subs	r2, r3, #1
 8012774:	fb04 0402 	mla	r4, r4, r2, r0
 8012778:	1424      	asrs	r4, r4, #16
 801277a:	d409      	bmi.n	8012790 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801277c:	42bc      	cmp	r4, r7
 801277e:	da07      	bge.n	8012790 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012780:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012782:	fb04 1202 	mla	r2, r4, r2, r1
 8012786:	1412      	asrs	r2, r2, #16
 8012788:	d402      	bmi.n	8012790 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801278a:	42b2      	cmp	r2, r6
 801278c:	f2c0 80bf 	blt.w	801290e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012790:	2700      	movs	r7, #0
 8012792:	19da      	adds	r2, r3, r7
 8012794:	2a00      	cmp	r2, #0
 8012796:	dc3e      	bgt.n	8012816 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012798:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801279c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80127a0:	f1bb 0f00 	cmp.w	fp, #0
 80127a4:	f340 8121 	ble.w	80129ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80127a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80127ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80127b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80127b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80127b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80127ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80127be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80127c2:	eeb0 6a62 	vmov.f32	s12, s5
 80127c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80127ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80127d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80127d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80127da:	eeb0 6a43 	vmov.f32	s12, s6
 80127de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80127e2:	ee12 2a90 	vmov	r2, s5
 80127e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80127ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80127ee:	ee13 2a10 	vmov	r2, s6
 80127f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80127f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80127fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80127fe:	9a03      	ldr	r2, [sp, #12]
 8012800:	9314      	str	r3, [sp, #80]	; 0x50
 8012802:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012806:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012808:	eeb0 3a67 	vmov.f32	s6, s15
 801280c:	bf08      	it	eq
 801280e:	4613      	moveq	r3, r2
 8012810:	eef0 2a47 	vmov.f32	s5, s14
 8012814:	e789      	b.n	801272a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012816:	1406      	asrs	r6, r0, #16
 8012818:	d42d      	bmi.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801281a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801281e:	42b4      	cmp	r4, r6
 8012820:	dd29      	ble.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012822:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012826:	d426      	bmi.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012828:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801282c:	4562      	cmp	r2, ip
 801282e:	dd22      	ble.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012830:	b224      	sxth	r4, r4
 8012832:	9a01      	ldr	r2, [sp, #4]
 8012834:	fb0c 6404 	mla	r4, ip, r4, r6
 8012838:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801283c:	0e22      	lsrs	r2, r4, #24
 801283e:	d01a      	beq.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012840:	9e04      	ldr	r6, [sp, #16]
 8012842:	4372      	muls	r2, r6
 8012844:	1c56      	adds	r6, r2, #1
 8012846:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801284a:	1212      	asrs	r2, r2, #8
 801284c:	0a26      	lsrs	r6, r4, #8
 801284e:	2aff      	cmp	r2, #255	; 0xff
 8012850:	9605      	str	r6, [sp, #20]
 8012852:	d116      	bne.n	8012882 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012854:	f06f 0201 	mvn.w	r2, #1
 8012858:	fb02 fc07 	mul.w	ip, r2, r7
 801285c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012860:	0962      	lsrs	r2, r4, #5
 8012862:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012866:	f026 0607 	bic.w	r6, r6, #7
 801286a:	4316      	orrs	r6, r2
 801286c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012870:	4326      	orrs	r6, r4
 8012872:	f825 600c 	strh.w	r6, [r5, ip]
 8012876:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012878:	4410      	add	r0, r2
 801287a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801287c:	3f01      	subs	r7, #1
 801287e:	4411      	add	r1, r2
 8012880:	e787      	b.n	8012792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012882:	f06f 0601 	mvn.w	r6, #1
 8012886:	437e      	muls	r6, r7
 8012888:	fa1f fa82 	uxth.w	sl, r2
 801288c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012890:	9602      	str	r6, [sp, #8]
 8012892:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012896:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801289a:	43d2      	mvns	r2, r2
 801289c:	b2d2      	uxtb	r2, r2
 801289e:	fb1c fc0a 	smulbb	ip, ip, sl
 80128a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80128a6:	fb0e ce02 	mla	lr, lr, r2, ip
 80128aa:	b2e4      	uxtb	r4, r4
 80128ac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80128b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80128b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80128b8:	fa5f f888 	uxtb.w	r8, r8
 80128bc:	fb14 f40a 	smulbb	r4, r4, sl
 80128c0:	fb08 4402 	mla	r4, r8, r2, r4
 80128c4:	fa1f fe8e 	uxth.w	lr, lr
 80128c8:	fb16 f60a 	smulbb	r6, r6, sl
 80128cc:	b2a4      	uxth	r4, r4
 80128ce:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80128d2:	fb0c 6c02 	mla	ip, ip, r2, r6
 80128d6:	f10e 0201 	add.w	r2, lr, #1
 80128da:	1c66      	adds	r6, r4, #1
 80128dc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80128e0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80128e4:	fa1f fc8c 	uxth.w	ip, ip
 80128e8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80128ec:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80128f0:	ea46 0e0e 	orr.w	lr, r6, lr
 80128f4:	f10c 0601 	add.w	r6, ip, #1
 80128f8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80128fc:	0976      	lsrs	r6, r6, #5
 80128fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012902:	9a02      	ldr	r2, [sp, #8]
 8012904:	ea4e 0e06 	orr.w	lr, lr, r6
 8012908:	f825 e002 	strh.w	lr, [r5, r2]
 801290c:	e7b3      	b.n	8012876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801290e:	f04f 0800 	mov.w	r8, #0
 8012912:	eba3 0208 	sub.w	r2, r3, r8
 8012916:	2a00      	cmp	r2, #0
 8012918:	f77f af3e 	ble.w	8012798 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801291c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012920:	1404      	asrs	r4, r0, #16
 8012922:	140a      	asrs	r2, r1, #16
 8012924:	fb06 4202 	mla	r2, r6, r2, r4
 8012928:	9c01      	ldr	r4, [sp, #4]
 801292a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801292e:	0e22      	lsrs	r2, r4, #24
 8012930:	d016      	beq.n	8012960 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8012932:	9e04      	ldr	r6, [sp, #16]
 8012934:	4372      	muls	r2, r6
 8012936:	1c56      	adds	r6, r2, #1
 8012938:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801293c:	1212      	asrs	r2, r2, #8
 801293e:	2aff      	cmp	r2, #255	; 0xff
 8012940:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012944:	d113      	bne.n	801296e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8012946:	0962      	lsrs	r2, r4, #5
 8012948:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801294c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012950:	f026 0607 	bic.w	r6, r6, #7
 8012954:	4316      	orrs	r6, r2
 8012956:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801295a:	4326      	orrs	r6, r4
 801295c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012960:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012962:	4410      	add	r0, r2
 8012964:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012966:	f108 0801 	add.w	r8, r8, #1
 801296a:	4411      	add	r1, r2
 801296c:	e7d1      	b.n	8012912 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801296e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012972:	fa1f fa82 	uxth.w	sl, r2
 8012976:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801297a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801297e:	43d2      	mvns	r2, r2
 8012980:	b2d2      	uxtb	r2, r2
 8012982:	fb17 f70a 	smulbb	r7, r7, sl
 8012986:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801298a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801298e:	b2e4      	uxtb	r4, r4
 8012990:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012994:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012998:	fa5f fe8e 	uxtb.w	lr, lr
 801299c:	fb14 f40a 	smulbb	r4, r4, sl
 80129a0:	fb0e 4402 	mla	r4, lr, r2, r4
 80129a4:	b2f6      	uxtb	r6, r6
 80129a6:	fa1f fc8c 	uxth.w	ip, ip
 80129aa:	fb16 f60a 	smulbb	r6, r6, sl
 80129ae:	b2a4      	uxth	r4, r4
 80129b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80129b4:	fb07 6702 	mla	r7, r7, r2, r6
 80129b8:	f10c 0201 	add.w	r2, ip, #1
 80129bc:	1c66      	adds	r6, r4, #1
 80129be:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80129c2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80129c6:	b2bf      	uxth	r7, r7
 80129c8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80129cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80129d0:	ea46 0c0c 	orr.w	ip, r6, ip
 80129d4:	1c7e      	adds	r6, r7, #1
 80129d6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80129da:	0976      	lsrs	r6, r6, #5
 80129dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80129e0:	ea4c 0c06 	orr.w	ip, ip, r6
 80129e4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80129e8:	e7ba      	b.n	8012960 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80129ea:	b007      	add	sp, #28
 80129ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080129f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80129f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129f4:	b085      	sub	sp, #20
 80129f6:	468b      	mov	fp, r1
 80129f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80129fa:	9203      	str	r2, [sp, #12]
 80129fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012a00:	6841      	ldr	r1, [r0, #4]
 8012a02:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012a06:	fb01 2404 	mla	r4, r1, r4, r2
 8012a0a:	6802      	ldr	r2, [r0, #0]
 8012a0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012a10:	f8d8 2000 	ldr.w	r2, [r8]
 8012a14:	9201      	str	r2, [sp, #4]
 8012a16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012a1a:	f1bb 0f00 	cmp.w	fp, #0
 8012a1e:	dc03      	bgt.n	8012a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012a20:	9a03      	ldr	r2, [sp, #12]
 8012a22:	2a00      	cmp	r2, #0
 8012a24:	f340 814f 	ble.w	8012cc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012a28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012a2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012a2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012a32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012a36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012a38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012a3c:	2b00      	cmp	r3, #0
 8012a3e:	dd0e      	ble.n	8012a5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012a40:	1408      	asrs	r0, r1, #16
 8012a42:	d405      	bmi.n	8012a50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012a44:	42b8      	cmp	r0, r7
 8012a46:	da03      	bge.n	8012a50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012a48:	1410      	asrs	r0, r2, #16
 8012a4a:	d401      	bmi.n	8012a50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012a4c:	42b0      	cmp	r0, r6
 8012a4e:	db07      	blt.n	8012a60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012a50:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012a52:	4401      	add	r1, r0
 8012a54:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012a56:	3b01      	subs	r3, #1
 8012a58:	4402      	add	r2, r0
 8012a5a:	3402      	adds	r4, #2
 8012a5c:	e7ee      	b.n	8012a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012a5e:	d017      	beq.n	8012a90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012a60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012a62:	1e58      	subs	r0, r3, #1
 8012a64:	fb05 1500 	mla	r5, r5, r0, r1
 8012a68:	142d      	asrs	r5, r5, #16
 8012a6a:	d409      	bmi.n	8012a80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012a6c:	42bd      	cmp	r5, r7
 8012a6e:	da07      	bge.n	8012a80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012a70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012a72:	fb05 2000 	mla	r0, r5, r0, r2
 8012a76:	1400      	asrs	r0, r0, #16
 8012a78:	d402      	bmi.n	8012a80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012a7a:	42b0      	cmp	r0, r6
 8012a7c:	f2c0 80ba 	blt.w	8012bf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012a80:	2600      	movs	r6, #0
 8012a82:	1998      	adds	r0, r3, r6
 8012a84:	2800      	cmp	r0, #0
 8012a86:	dc3e      	bgt.n	8012b06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012a88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012a8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012a90:	f1bb 0f00 	cmp.w	fp, #0
 8012a94:	f340 8117 	ble.w	8012cc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012a98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012a9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012aa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012aa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012aa6:	f1bb 0b01 	subs.w	fp, fp, #1
 8012aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ab2:	eeb0 6a62 	vmov.f32	s12, s5
 8012ab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012aba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012abe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ac2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012ac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012aca:	eeb0 6a43 	vmov.f32	s12, s6
 8012ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ad2:	ee12 2a90 	vmov	r2, s5
 8012ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ade:	ee13 2a10 	vmov	r2, s6
 8012ae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ae6:	9311      	str	r3, [sp, #68]	; 0x44
 8012ae8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012aea:	fb92 f3f3 	sdiv	r3, r2, r3
 8012aee:	9a03      	ldr	r2, [sp, #12]
 8012af0:	9312      	str	r3, [sp, #72]	; 0x48
 8012af2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012af6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012af8:	eeb0 3a67 	vmov.f32	s6, s15
 8012afc:	bf08      	it	eq
 8012afe:	4613      	moveq	r3, r2
 8012b00:	eef0 2a47 	vmov.f32	s5, s14
 8012b04:	e789      	b.n	8012a1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012b06:	140f      	asrs	r7, r1, #16
 8012b08:	d424      	bmi.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012b0a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012b0e:	42bd      	cmp	r5, r7
 8012b10:	dd20      	ble.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012b12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012b16:	d41d      	bmi.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012b18:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8012b1c:	4560      	cmp	r0, ip
 8012b1e:	dd19      	ble.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012b20:	b22d      	sxth	r5, r5
 8012b22:	fb0c 7505 	mla	r5, ip, r5, r7
 8012b26:	9801      	ldr	r0, [sp, #4]
 8012b28:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8012b2c:	0e07      	lsrs	r7, r0, #24
 8012b2e:	2fff      	cmp	r7, #255	; 0xff
 8012b30:	d116      	bne.n	8012b60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012b32:	f06f 0501 	mvn.w	r5, #1
 8012b36:	fb05 f706 	mul.w	r7, r5, r6
 8012b3a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8012b3e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012b42:	0945      	lsrs	r5, r0, #5
 8012b44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012b48:	ea4c 0505 	orr.w	r5, ip, r5
 8012b4c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012b50:	4305      	orrs	r5, r0
 8012b52:	53e5      	strh	r5, [r4, r7]
 8012b54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012b56:	4401      	add	r1, r0
 8012b58:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012b5a:	3e01      	subs	r6, #1
 8012b5c:	4402      	add	r2, r0
 8012b5e:	e790      	b.n	8012a82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012b60:	b2fd      	uxtb	r5, r7
 8012b62:	2f00      	cmp	r7, #0
 8012b64:	d0f6      	beq.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012b66:	f06f 0701 	mvn.w	r7, #1
 8012b6a:	4377      	muls	r7, r6
 8012b6c:	fa1f f985 	uxth.w	r9, r5
 8012b70:	f834 e007 	ldrh.w	lr, [r4, r7]
 8012b74:	9702      	str	r7, [sp, #8]
 8012b76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012b7a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8012b7e:	43ed      	mvns	r5, r5
 8012b80:	b2ed      	uxtb	r5, r5
 8012b82:	fb17 f709 	smulbb	r7, r7, r9
 8012b86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012b8a:	fb0c 7c05 	mla	ip, ip, r5, r7
 8012b8e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012b92:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012b96:	b2c0      	uxtb	r0, r0
 8012b98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012b9c:	fa5f fe8e 	uxtb.w	lr, lr
 8012ba0:	fb10 f009 	smulbb	r0, r0, r9
 8012ba4:	fb0e 0005 	mla	r0, lr, r5, r0
 8012ba8:	b280      	uxth	r0, r0
 8012baa:	fa1f fc8c 	uxth.w	ip, ip
 8012bae:	fb1a fa09 	smulbb	sl, sl, r9
 8012bb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012bb6:	fb07 a705 	mla	r7, r7, r5, sl
 8012bba:	f100 0a01 	add.w	sl, r0, #1
 8012bbe:	f10c 0501 	add.w	r5, ip, #1
 8012bc2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012bc6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012bca:	b2bf      	uxth	r7, r7
 8012bcc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012bd0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012bd4:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012bd8:	f107 0a01 	add.w	sl, r7, #1
 8012bdc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012be0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012be4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012be8:	9802      	ldr	r0, [sp, #8]
 8012bea:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012bee:	f824 c000 	strh.w	ip, [r4, r0]
 8012bf2:	e7af      	b.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012bf4:	f04f 0e00 	mov.w	lr, #0
 8012bf8:	eba3 000e 	sub.w	r0, r3, lr
 8012bfc:	2800      	cmp	r0, #0
 8012bfe:	f77f af43 	ble.w	8012a88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012c02:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012c06:	140d      	asrs	r5, r1, #16
 8012c08:	1410      	asrs	r0, r2, #16
 8012c0a:	fb06 5000 	mla	r0, r6, r0, r5
 8012c0e:	9d01      	ldr	r5, [sp, #4]
 8012c10:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012c14:	0e2e      	lsrs	r6, r5, #24
 8012c16:	2eff      	cmp	r6, #255	; 0xff
 8012c18:	d112      	bne.n	8012c40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8012c1a:	482c      	ldr	r0, [pc, #176]	; (8012ccc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012c1c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012c20:	0968      	lsrs	r0, r5, #5
 8012c22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012c26:	4330      	orrs	r0, r6
 8012c28:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012c2c:	4328      	orrs	r0, r5
 8012c2e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8012c32:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012c34:	4401      	add	r1, r0
 8012c36:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012c38:	f10e 0e01 	add.w	lr, lr, #1
 8012c3c:	4402      	add	r2, r0
 8012c3e:	e7db      	b.n	8012bf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8012c40:	b2f0      	uxtb	r0, r6
 8012c42:	2e00      	cmp	r6, #0
 8012c44:	d0f5      	beq.n	8012c32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012c46:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012c4a:	fa1f f980 	uxth.w	r9, r0
 8012c4e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012c52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012c56:	43c0      	mvns	r0, r0
 8012c58:	b2c0      	uxtb	r0, r0
 8012c5a:	fb16 f609 	smulbb	r6, r6, r9
 8012c5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012c62:	fb07 6700 	mla	r7, r7, r0, r6
 8012c66:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012c6a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012c6e:	b2ed      	uxtb	r5, r5
 8012c70:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012c74:	fa5f fc8c 	uxtb.w	ip, ip
 8012c78:	fb15 f509 	smulbb	r5, r5, r9
 8012c7c:	fb0c 5500 	mla	r5, ip, r0, r5
 8012c80:	b2bf      	uxth	r7, r7
 8012c82:	fb1a fa09 	smulbb	sl, sl, r9
 8012c86:	b2ad      	uxth	r5, r5
 8012c88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c8c:	fb06 a600 	mla	r6, r6, r0, sl
 8012c90:	1c78      	adds	r0, r7, #1
 8012c92:	f105 0a01 	add.w	sl, r5, #1
 8012c96:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012c9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012c9e:	b2b6      	uxth	r6, r6
 8012ca0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012ca4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012ca8:	ea4a 0707 	orr.w	r7, sl, r7
 8012cac:	f106 0a01 	add.w	sl, r6, #1
 8012cb0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012cb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012cb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012cbc:	ea47 070a 	orr.w	r7, r7, sl
 8012cc0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012cc4:	e7b5      	b.n	8012c32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012cc6:	b005      	add	sp, #20
 8012cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ccc:	fffff800 	.word	0xfffff800

08012cd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cd4:	b087      	sub	sp, #28
 8012cd6:	468b      	mov	fp, r1
 8012cd8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012cda:	9203      	str	r2, [sp, #12]
 8012cdc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012ce0:	9204      	str	r2, [sp, #16]
 8012ce2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012ce6:	6841      	ldr	r1, [r0, #4]
 8012ce8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012cec:	fb01 2404 	mla	r4, r1, r4, r2
 8012cf0:	6802      	ldr	r2, [r0, #0]
 8012cf2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012cf6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012cfa:	3201      	adds	r2, #1
 8012cfc:	f022 0201 	bic.w	r2, r2, #1
 8012d00:	9200      	str	r2, [sp, #0]
 8012d02:	f8d9 2000 	ldr.w	r2, [r9]
 8012d06:	9201      	str	r2, [sp, #4]
 8012d08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012d0c:	f1bb 0f00 	cmp.w	fp, #0
 8012d10:	dc03      	bgt.n	8012d1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012d12:	9a03      	ldr	r2, [sp, #12]
 8012d14:	2a00      	cmp	r2, #0
 8012d16:	f340 8169 	ble.w	8012fec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8012d1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012d1c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012d20:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012d24:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012d28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012d2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012d2e:	2b00      	cmp	r3, #0
 8012d30:	dd0e      	ble.n	8012d50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012d32:	1402      	asrs	r2, r0, #16
 8012d34:	d405      	bmi.n	8012d42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012d36:	42ba      	cmp	r2, r7
 8012d38:	da03      	bge.n	8012d42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012d3a:	140a      	asrs	r2, r1, #16
 8012d3c:	d401      	bmi.n	8012d42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012d3e:	42b2      	cmp	r2, r6
 8012d40:	db07      	blt.n	8012d52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8012d42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012d44:	4410      	add	r0, r2
 8012d46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012d48:	3b01      	subs	r3, #1
 8012d4a:	4411      	add	r1, r2
 8012d4c:	3402      	adds	r4, #2
 8012d4e:	e7ee      	b.n	8012d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012d50:	d017      	beq.n	8012d82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012d52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012d54:	1e5a      	subs	r2, r3, #1
 8012d56:	fb05 0502 	mla	r5, r5, r2, r0
 8012d5a:	142d      	asrs	r5, r5, #16
 8012d5c:	d409      	bmi.n	8012d72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012d5e:	42bd      	cmp	r5, r7
 8012d60:	da07      	bge.n	8012d72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012d62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012d64:	fb05 1202 	mla	r2, r5, r2, r1
 8012d68:	1412      	asrs	r2, r2, #16
 8012d6a:	d402      	bmi.n	8012d72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012d6c:	42b2      	cmp	r2, r6
 8012d6e:	f2c0 80c7 	blt.w	8012f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8012d72:	2700      	movs	r7, #0
 8012d74:	19da      	adds	r2, r3, r7
 8012d76:	2a00      	cmp	r2, #0
 8012d78:	dc3e      	bgt.n	8012df8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012d7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012d7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012d82:	f1bb 0f00 	cmp.w	fp, #0
 8012d86:	f340 8131 	ble.w	8012fec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8012d8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012d8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012d92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012d96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d98:	f1bb 0b01 	subs.w	fp, fp, #1
 8012d9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012da0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012da4:	eeb0 6a62 	vmov.f32	s12, s5
 8012da8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012dac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012db0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012db4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012db8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012dbc:	eeb0 6a43 	vmov.f32	s12, s6
 8012dc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012dc4:	ee12 2a90 	vmov	r2, s5
 8012dc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012dcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8012dd0:	ee13 2a10 	vmov	r2, s6
 8012dd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012dd8:	9313      	str	r3, [sp, #76]	; 0x4c
 8012dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ddc:	fb92 f3f3 	sdiv	r3, r2, r3
 8012de0:	9a03      	ldr	r2, [sp, #12]
 8012de2:	9314      	str	r3, [sp, #80]	; 0x50
 8012de4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012de8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012dea:	eeb0 3a67 	vmov.f32	s6, s15
 8012dee:	bf08      	it	eq
 8012df0:	4613      	moveq	r3, r2
 8012df2:	eef0 2a47 	vmov.f32	s5, s14
 8012df6:	e789      	b.n	8012d0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012df8:	1405      	asrs	r5, r0, #16
 8012dfa:	d435      	bmi.n	8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012dfc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012e00:	42aa      	cmp	r2, r5
 8012e02:	dd31      	ble.n	8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012e04:	140e      	asrs	r6, r1, #16
 8012e06:	d42f      	bmi.n	8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012e08:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012e0c:	42b2      	cmp	r2, r6
 8012e0e:	dd2b      	ble.n	8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012e10:	9a00      	ldr	r2, [sp, #0]
 8012e12:	fb06 5502 	mla	r5, r6, r2, r5
 8012e16:	086a      	lsrs	r2, r5, #1
 8012e18:	9e01      	ldr	r6, [sp, #4]
 8012e1a:	5cb2      	ldrb	r2, [r6, r2]
 8012e1c:	07ee      	lsls	r6, r5, #31
 8012e1e:	bf54      	ite	pl
 8012e20:	f002 020f 	andpl.w	r2, r2, #15
 8012e24:	1112      	asrmi	r2, r2, #4
 8012e26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012e2a:	b2d2      	uxtb	r2, r2
 8012e2c:	b1e2      	cbz	r2, 8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012e2e:	9d04      	ldr	r5, [sp, #16]
 8012e30:	436a      	muls	r2, r5
 8012e32:	1c55      	adds	r5, r2, #1
 8012e34:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012e38:	4d6e      	ldr	r5, [pc, #440]	; (8012ff4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012e3a:	682d      	ldr	r5, [r5, #0]
 8012e3c:	1212      	asrs	r2, r2, #8
 8012e3e:	0a2e      	lsrs	r6, r5, #8
 8012e40:	2aff      	cmp	r2, #255	; 0xff
 8012e42:	9605      	str	r6, [sp, #20]
 8012e44:	d116      	bne.n	8012e74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8012e46:	f06f 0201 	mvn.w	r2, #1
 8012e4a:	fb02 fc07 	mul.w	ip, r2, r7
 8012e4e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012e52:	096a      	lsrs	r2, r5, #5
 8012e54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012e58:	f026 0607 	bic.w	r6, r6, #7
 8012e5c:	4316      	orrs	r6, r2
 8012e5e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012e62:	432e      	orrs	r6, r5
 8012e64:	f824 600c 	strh.w	r6, [r4, ip]
 8012e68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012e6a:	4410      	add	r0, r2
 8012e6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012e6e:	3f01      	subs	r7, #1
 8012e70:	4411      	add	r1, r2
 8012e72:	e77f      	b.n	8012d74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8012e74:	f06f 0601 	mvn.w	r6, #1
 8012e78:	437e      	muls	r6, r7
 8012e7a:	fa1f fa82 	uxth.w	sl, r2
 8012e7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8012e82:	9602      	str	r6, [sp, #8]
 8012e84:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012e88:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8012e8c:	43d2      	mvns	r2, r2
 8012e8e:	b2d2      	uxtb	r2, r2
 8012e90:	fb1c fc0a 	smulbb	ip, ip, sl
 8012e94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012e98:	fb0e ce02 	mla	lr, lr, r2, ip
 8012e9c:	b2ed      	uxtb	r5, r5
 8012e9e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012ea2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012ea6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012eaa:	fa5f f888 	uxtb.w	r8, r8
 8012eae:	fb15 f50a 	smulbb	r5, r5, sl
 8012eb2:	fb08 5502 	mla	r5, r8, r2, r5
 8012eb6:	fa1f fe8e 	uxth.w	lr, lr
 8012eba:	fb16 f60a 	smulbb	r6, r6, sl
 8012ebe:	b2ad      	uxth	r5, r5
 8012ec0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012ec4:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012ec8:	f10e 0201 	add.w	r2, lr, #1
 8012ecc:	1c6e      	adds	r6, r5, #1
 8012ece:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012ed2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8012ed6:	fa1f fc8c 	uxth.w	ip, ip
 8012eda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012ede:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012ee2:	ea46 0e0e 	orr.w	lr, r6, lr
 8012ee6:	f10c 0601 	add.w	r6, ip, #1
 8012eea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012eee:	0976      	lsrs	r6, r6, #5
 8012ef0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012ef4:	9a02      	ldr	r2, [sp, #8]
 8012ef6:	ea4e 0e06 	orr.w	lr, lr, r6
 8012efa:	f824 e002 	strh.w	lr, [r4, r2]
 8012efe:	e7b3      	b.n	8012e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012f00:	f04f 0800 	mov.w	r8, #0
 8012f04:	eba3 0208 	sub.w	r2, r3, r8
 8012f08:	2a00      	cmp	r2, #0
 8012f0a:	f77f af36 	ble.w	8012d7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012f0e:	9e00      	ldr	r6, [sp, #0]
 8012f10:	1402      	asrs	r2, r0, #16
 8012f12:	140d      	asrs	r5, r1, #16
 8012f14:	fb06 2505 	mla	r5, r6, r5, r2
 8012f18:	086a      	lsrs	r2, r5, #1
 8012f1a:	9e01      	ldr	r6, [sp, #4]
 8012f1c:	5cb2      	ldrb	r2, [r6, r2]
 8012f1e:	07ed      	lsls	r5, r5, #31
 8012f20:	bf54      	ite	pl
 8012f22:	f002 020f 	andpl.w	r2, r2, #15
 8012f26:	1112      	asrmi	r2, r2, #4
 8012f28:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012f2c:	b2d2      	uxtb	r2, r2
 8012f2e:	b1c2      	cbz	r2, 8012f62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012f30:	9d04      	ldr	r5, [sp, #16]
 8012f32:	436a      	muls	r2, r5
 8012f34:	1c55      	adds	r5, r2, #1
 8012f36:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012f3a:	4d2e      	ldr	r5, [pc, #184]	; (8012ff4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012f3c:	1212      	asrs	r2, r2, #8
 8012f3e:	682e      	ldr	r6, [r5, #0]
 8012f40:	2aff      	cmp	r2, #255	; 0xff
 8012f42:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8012f46:	d113      	bne.n	8012f70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012f48:	0972      	lsrs	r2, r6, #5
 8012f4a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8012f4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012f52:	f025 0507 	bic.w	r5, r5, #7
 8012f56:	4315      	orrs	r5, r2
 8012f58:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012f5c:	4335      	orrs	r5, r6
 8012f5e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8012f62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012f64:	4410      	add	r0, r2
 8012f66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012f68:	f108 0801 	add.w	r8, r8, #1
 8012f6c:	4411      	add	r1, r2
 8012f6e:	e7c9      	b.n	8012f04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8012f70:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012f74:	fa1f fa82 	uxth.w	sl, r2
 8012f78:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012f7c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8012f80:	43d2      	mvns	r2, r2
 8012f82:	b2d2      	uxtb	r2, r2
 8012f84:	fb17 f70a 	smulbb	r7, r7, sl
 8012f88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012f8c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012f90:	b2f6      	uxtb	r6, r6
 8012f92:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012f96:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012f9a:	fa5f fe8e 	uxtb.w	lr, lr
 8012f9e:	fb16 f60a 	smulbb	r6, r6, sl
 8012fa2:	fb0e 6602 	mla	r6, lr, r2, r6
 8012fa6:	b2ed      	uxtb	r5, r5
 8012fa8:	fa1f fc8c 	uxth.w	ip, ip
 8012fac:	fb15 f50a 	smulbb	r5, r5, sl
 8012fb0:	b2b6      	uxth	r6, r6
 8012fb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012fb6:	fb07 5702 	mla	r7, r7, r2, r5
 8012fba:	f10c 0201 	add.w	r2, ip, #1
 8012fbe:	1c75      	adds	r5, r6, #1
 8012fc0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012fc4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8012fc8:	b2bf      	uxth	r7, r7
 8012fca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012fce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012fd2:	ea45 0c0c 	orr.w	ip, r5, ip
 8012fd6:	1c7d      	adds	r5, r7, #1
 8012fd8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012fdc:	096d      	lsrs	r5, r5, #5
 8012fde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012fe2:	ea4c 0c05 	orr.w	ip, ip, r5
 8012fe6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8012fea:	e7ba      	b.n	8012f62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012fec:	b007      	add	sp, #28
 8012fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ff2:	bf00      	nop
 8012ff4:	2000a814 	.word	0x2000a814

08012ff8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ffc:	b087      	sub	sp, #28
 8012ffe:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801330c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013002:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013004:	9205      	str	r2, [sp, #20]
 8013006:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801300a:	9101      	str	r1, [sp, #4]
 801300c:	6841      	ldr	r1, [r0, #4]
 801300e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8013012:	fb01 2404 	mla	r4, r1, r4, r2
 8013016:	6802      	ldr	r2, [r0, #0]
 8013018:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801301c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013020:	3201      	adds	r2, #1
 8013022:	f022 0201 	bic.w	r2, r2, #1
 8013026:	9202      	str	r2, [sp, #8]
 8013028:	f8db 2000 	ldr.w	r2, [fp]
 801302c:	9203      	str	r2, [sp, #12]
 801302e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013032:	9a01      	ldr	r2, [sp, #4]
 8013034:	2a00      	cmp	r2, #0
 8013036:	dc03      	bgt.n	8013040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013038:	9a05      	ldr	r2, [sp, #20]
 801303a:	2a00      	cmp	r2, #0
 801303c:	f340 8162 	ble.w	8013304 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013040:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013042:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8013046:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801304a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801304e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013050:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013054:	2b00      	cmp	r3, #0
 8013056:	dd0e      	ble.n	8013076 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013058:	1402      	asrs	r2, r0, #16
 801305a:	d405      	bmi.n	8013068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801305c:	42ba      	cmp	r2, r7
 801305e:	da03      	bge.n	8013068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013060:	140a      	asrs	r2, r1, #16
 8013062:	d401      	bmi.n	8013068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013064:	42b2      	cmp	r2, r6
 8013066:	db07      	blt.n	8013078 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013068:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801306a:	4410      	add	r0, r2
 801306c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801306e:	3b01      	subs	r3, #1
 8013070:	4411      	add	r1, r2
 8013072:	3402      	adds	r4, #2
 8013074:	e7ee      	b.n	8013054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013076:	d017      	beq.n	80130a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013078:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801307a:	1e5a      	subs	r2, r3, #1
 801307c:	fb05 0502 	mla	r5, r5, r2, r0
 8013080:	142d      	asrs	r5, r5, #16
 8013082:	d409      	bmi.n	8013098 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013084:	42bd      	cmp	r5, r7
 8013086:	da07      	bge.n	8013098 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013088:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801308a:	fb05 1202 	mla	r2, r5, r2, r1
 801308e:	1412      	asrs	r2, r2, #16
 8013090:	d402      	bmi.n	8013098 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013092:	42b2      	cmp	r2, r6
 8013094:	f2c0 80c3 	blt.w	801321e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013098:	2500      	movs	r5, #0
 801309a:	195a      	adds	r2, r3, r5
 801309c:	2a00      	cmp	r2, #0
 801309e:	dc3f      	bgt.n	8013120 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80130a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80130a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130a8:	9b01      	ldr	r3, [sp, #4]
 80130aa:	2b00      	cmp	r3, #0
 80130ac:	f340 812a 	ble.w	8013304 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80130b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80130b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80130b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80130bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80130be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80130c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80130c6:	eeb0 6a62 	vmov.f32	s12, s5
 80130ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80130ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80130d6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80130da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80130de:	eeb0 6a43 	vmov.f32	s12, s6
 80130e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80130e6:	ee12 2a90 	vmov	r2, s5
 80130ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80130ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80130f2:	ee13 2a10 	vmov	r2, s6
 80130f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80130f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80130fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80130fe:	9314      	str	r3, [sp, #80]	; 0x50
 8013100:	9b01      	ldr	r3, [sp, #4]
 8013102:	9a05      	ldr	r2, [sp, #20]
 8013104:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013108:	3b01      	subs	r3, #1
 801310a:	9301      	str	r3, [sp, #4]
 801310c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013112:	eeb0 3a67 	vmov.f32	s6, s15
 8013116:	bf08      	it	eq
 8013118:	4613      	moveq	r3, r2
 801311a:	eef0 2a47 	vmov.f32	s5, s14
 801311e:	e788      	b.n	8013032 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013120:	1406      	asrs	r6, r0, #16
 8013122:	d42c      	bmi.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013124:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013128:	42b2      	cmp	r2, r6
 801312a:	dd28      	ble.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801312c:	140f      	asrs	r7, r1, #16
 801312e:	d426      	bmi.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013130:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013134:	42ba      	cmp	r2, r7
 8013136:	dd22      	ble.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013138:	9a02      	ldr	r2, [sp, #8]
 801313a:	fb07 6602 	mla	r6, r7, r2, r6
 801313e:	0872      	lsrs	r2, r6, #1
 8013140:	9f03      	ldr	r7, [sp, #12]
 8013142:	5cba      	ldrb	r2, [r7, r2]
 8013144:	07f6      	lsls	r6, r6, #31
 8013146:	bf54      	ite	pl
 8013148:	f002 020f 	andpl.w	r2, r2, #15
 801314c:	1112      	asrmi	r2, r2, #4
 801314e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013152:	b2d2      	uxtb	r2, r2
 8013154:	2aff      	cmp	r2, #255	; 0xff
 8013156:	d118      	bne.n	801318a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013158:	f8d8 2000 	ldr.w	r2, [r8]
 801315c:	f06f 0601 	mvn.w	r6, #1
 8013160:	fb06 f705 	mul.w	r7, r6, r5
 8013164:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8013168:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801316c:	0956      	lsrs	r6, r2, #5
 801316e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013172:	ea4c 0606 	orr.w	r6, ip, r6
 8013176:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801317a:	4316      	orrs	r6, r2
 801317c:	53e6      	strh	r6, [r4, r7]
 801317e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013180:	4410      	add	r0, r2
 8013182:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013184:	3d01      	subs	r5, #1
 8013186:	4411      	add	r1, r2
 8013188:	e787      	b.n	801309a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801318a:	2a00      	cmp	r2, #0
 801318c:	d0f7      	beq.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801318e:	f06f 0601 	mvn.w	r6, #1
 8013192:	436e      	muls	r6, r5
 8013194:	f8d8 c000 	ldr.w	ip, [r8]
 8013198:	f834 e006 	ldrh.w	lr, [r4, r6]
 801319c:	9604      	str	r6, [sp, #16]
 801319e:	fa1f f982 	uxth.w	r9, r2
 80131a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80131a6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80131aa:	43d2      	mvns	r2, r2
 80131ac:	b2d2      	uxtb	r2, r2
 80131ae:	fb16 f609 	smulbb	r6, r6, r9
 80131b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80131b6:	fb07 6702 	mla	r7, r7, r2, r6
 80131ba:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80131be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80131c2:	fa5f fc8c 	uxtb.w	ip, ip
 80131c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80131ca:	fa5f fe8e 	uxtb.w	lr, lr
 80131ce:	fb1c fc09 	smulbb	ip, ip, r9
 80131d2:	fb0e cc02 	mla	ip, lr, r2, ip
 80131d6:	b2bf      	uxth	r7, r7
 80131d8:	fb1a fa09 	smulbb	sl, sl, r9
 80131dc:	fa1f fc8c 	uxth.w	ip, ip
 80131e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80131e4:	fb06 a602 	mla	r6, r6, r2, sl
 80131e8:	1c7a      	adds	r2, r7, #1
 80131ea:	f10c 0a01 	add.w	sl, ip, #1
 80131ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80131f2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80131f6:	b2b6      	uxth	r6, r6
 80131f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80131fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013200:	ea4a 0707 	orr.w	r7, sl, r7
 8013204:	f106 0a01 	add.w	sl, r6, #1
 8013208:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801320c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013210:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013214:	9a04      	ldr	r2, [sp, #16]
 8013216:	ea47 070a 	orr.w	r7, r7, sl
 801321a:	52a7      	strh	r7, [r4, r2]
 801321c:	e7af      	b.n	801317e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801321e:	f04f 0e00 	mov.w	lr, #0
 8013222:	eba3 020e 	sub.w	r2, r3, lr
 8013226:	2a00      	cmp	r2, #0
 8013228:	f77f af3a 	ble.w	80130a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801322c:	9e02      	ldr	r6, [sp, #8]
 801322e:	1402      	asrs	r2, r0, #16
 8013230:	140d      	asrs	r5, r1, #16
 8013232:	fb06 2505 	mla	r5, r6, r5, r2
 8013236:	086a      	lsrs	r2, r5, #1
 8013238:	9e03      	ldr	r6, [sp, #12]
 801323a:	5cb2      	ldrb	r2, [r6, r2]
 801323c:	07ed      	lsls	r5, r5, #31
 801323e:	bf54      	ite	pl
 8013240:	f002 020f 	andpl.w	r2, r2, #15
 8013244:	1112      	asrmi	r2, r2, #4
 8013246:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801324a:	b2d2      	uxtb	r2, r2
 801324c:	2aff      	cmp	r2, #255	; 0xff
 801324e:	d115      	bne.n	801327c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8013250:	f8d8 5000 	ldr.w	r5, [r8]
 8013254:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8013258:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801325c:	096a      	lsrs	r2, r5, #5
 801325e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013262:	4332      	orrs	r2, r6
 8013264:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013268:	432a      	orrs	r2, r5
 801326a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801326e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013270:	4410      	add	r0, r2
 8013272:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013274:	f10e 0e01 	add.w	lr, lr, #1
 8013278:	4411      	add	r1, r2
 801327a:	e7d2      	b.n	8013222 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801327c:	2a00      	cmp	r2, #0
 801327e:	d0f6      	beq.n	801326e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013280:	f8d8 7000 	ldr.w	r7, [r8]
 8013284:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013288:	fa1f f982 	uxth.w	r9, r2
 801328c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013290:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8013294:	43d2      	mvns	r2, r2
 8013296:	b2d2      	uxtb	r2, r2
 8013298:	fb15 f509 	smulbb	r5, r5, r9
 801329c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80132a0:	fb06 5602 	mla	r6, r6, r2, r5
 80132a4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80132a8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80132ac:	b2ff      	uxtb	r7, r7
 80132ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80132b2:	fa5f fc8c 	uxtb.w	ip, ip
 80132b6:	fb17 f709 	smulbb	r7, r7, r9
 80132ba:	fb0c 7702 	mla	r7, ip, r2, r7
 80132be:	b2b6      	uxth	r6, r6
 80132c0:	fb1a fa09 	smulbb	sl, sl, r9
 80132c4:	b2bf      	uxth	r7, r7
 80132c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80132ca:	fb05 a502 	mla	r5, r5, r2, sl
 80132ce:	1c72      	adds	r2, r6, #1
 80132d0:	f107 0a01 	add.w	sl, r7, #1
 80132d4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80132d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80132dc:	b2ad      	uxth	r5, r5
 80132de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80132e2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80132e6:	ea4a 0606 	orr.w	r6, sl, r6
 80132ea:	f105 0a01 	add.w	sl, r5, #1
 80132ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80132f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80132f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80132fa:	ea46 060a 	orr.w	r6, r6, sl
 80132fe:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8013302:	e7b4      	b.n	801326e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013304:	b007      	add	sp, #28
 8013306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801330a:	bf00      	nop
 801330c:	2000a814 	.word	0x2000a814

08013310 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013310:	4770      	bx	lr

08013312 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8013312:	4770      	bx	lr

08013314 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8013314:	4770      	bx	lr

08013316 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8013316:	4770      	bx	lr

08013318 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8013318:	4770      	bx	lr

0801331a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801331a:	4770      	bx	lr

0801331c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801331c:	4770      	bx	lr

0801331e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801331e:	4770      	bx	lr

08013320 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013320:	4770      	bx	lr

08013322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013322:	4770      	bx	lr

08013324 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013324:	4770      	bx	lr

08013326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013326:	4770      	bx	lr

08013328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013328:	4770      	bx	lr

0801332a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801332a:	4770      	bx	lr

0801332c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801332c:	4770      	bx	lr

0801332e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801332e:	4770      	bx	lr

08013330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013330:	4770      	bx	lr

08013332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013332:	4770      	bx	lr

08013334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013334:	4770      	bx	lr

08013336 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013336:	4770      	bx	lr

08013338 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013338:	4770      	bx	lr

0801333a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801333a:	4770      	bx	lr

0801333c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801333c:	4770      	bx	lr

0801333e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801333e:	4770      	bx	lr

08013340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013340:	4770      	bx	lr

08013342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013342:	4770      	bx	lr

08013344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013344:	4770      	bx	lr

08013346 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013346:	4770      	bx	lr

08013348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013348:	4770      	bx	lr
	...

0801334c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801334c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013350:	4692      	mov	sl, r2
 8013352:	4a22      	ldr	r2, [pc, #136]	; (80133dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 8013354:	6812      	ldr	r2, [r2, #0]
 8013356:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801335a:	2a02      	cmp	r2, #2
 801335c:	b088      	sub	sp, #32
 801335e:	4605      	mov	r5, r0
 8013360:	4689      	mov	r9, r1
 8013362:	d106      	bne.n	8013372 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8013364:	4b1e      	ldr	r3, [pc, #120]	; (80133e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 8013366:	4a1f      	ldr	r2, [pc, #124]	; (80133e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8013368:	f44f 7158 	mov.w	r1, #864	; 0x360
 801336c:	481e      	ldr	r0, [pc, #120]	; (80133e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801336e:	f009 fca5 	bl	801ccbc <__assert_func>
 8013372:	ac08      	add	r4, sp, #32
 8013374:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013378:	4620      	mov	r0, r4
 801337a:	f7fd fce3 	bl	8010d44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801337e:	682b      	ldr	r3, [r5, #0]
 8013380:	4606      	mov	r6, r0
 8013382:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013384:	4628      	mov	r0, r5
 8013386:	4798      	blx	r3
 8013388:	4286      	cmp	r6, r0
 801338a:	d004      	beq.n	8013396 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801338c:	4b17      	ldr	r3, [pc, #92]	; (80133ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801338e:	4a15      	ldr	r2, [pc, #84]	; (80133e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8013390:	f240 3162 	movw	r1, #866	; 0x362
 8013394:	e7ea      	b.n	801336c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013396:	4620      	mov	r0, r4
 8013398:	f7fd fc4a 	bl	8010c30 <_ZNK8touchgfx6Bitmap7getDataEv>
 801339c:	4606      	mov	r6, r0
 801339e:	b920      	cbnz	r0, 80133aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80133a0:	4b13      	ldr	r3, [pc, #76]	; (80133f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 80133a2:	4a10      	ldr	r2, [pc, #64]	; (80133e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 80133a4:	f44f 7159 	mov.w	r1, #868	; 0x364
 80133a8:	e7e0      	b.n	801336c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80133aa:	682b      	ldr	r3, [r5, #0]
 80133ac:	4620      	mov	r0, r4
 80133ae:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80133b2:	f7fd fb21 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80133b6:	4607      	mov	r7, r0
 80133b8:	4620      	mov	r0, r4
 80133ba:	f7fd fb61 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133be:	b23f      	sxth	r7, r7
 80133c0:	b200      	sxth	r0, r0
 80133c2:	9002      	str	r0, [sp, #8]
 80133c4:	e9cd 6700 	strd	r6, r7, [sp]
 80133c8:	a806      	add	r0, sp, #24
 80133ca:	4653      	mov	r3, sl
 80133cc:	464a      	mov	r2, r9
 80133ce:	4629      	mov	r1, r5
 80133d0:	47c0      	blx	r8
 80133d2:	4630      	mov	r0, r6
 80133d4:	b008      	add	sp, #32
 80133d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80133da:	bf00      	nop
 80133dc:	2000a80c 	.word	0x2000a80c
 80133e0:	0802122a 	.word	0x0802122a
 80133e4:	08021b27 	.word	0x08021b27
 80133e8:	080212dc 	.word	0x080212dc
 80133ec:	0802130e 	.word	0x0802130e
 80133f0:	08021363 	.word	0x08021363

080133f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80133f4:	b508      	push	{r3, lr}
 80133f6:	4b06      	ldr	r3, [pc, #24]	; (8013410 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80133f8:	8818      	ldrh	r0, [r3, #0]
 80133fa:	b928      	cbnz	r0, 8013408 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80133fc:	4b05      	ldr	r3, [pc, #20]	; (8013414 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80133fe:	4a06      	ldr	r2, [pc, #24]	; (8013418 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8013400:	4806      	ldr	r0, [pc, #24]	; (801341c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8013402:	2153      	movs	r1, #83	; 0x53
 8013404:	f009 fc5a 	bl	801ccbc <__assert_func>
 8013408:	0040      	lsls	r0, r0, #1
 801340a:	b280      	uxth	r0, r0
 801340c:	bd08      	pop	{r3, pc}
 801340e:	bf00      	nop
 8013410:	2000a806 	.word	0x2000a806
 8013414:	080213d2 	.word	0x080213d2
 8013418:	080219e4 	.word	0x080219e4
 801341c:	08021414 	.word	0x08021414

08013420 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8013420:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8013424:	2300      	movs	r3, #0
 8013426:	9300      	str	r3, [sp, #0]
 8013428:	4b3d      	ldr	r3, [pc, #244]	; (8013520 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801342a:	781b      	ldrb	r3, [r3, #0]
 801342c:	2b00      	cmp	r3, #0
 801342e:	d137      	bne.n	80134a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8013430:	4a3c      	ldr	r2, [pc, #240]	; (8013524 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013432:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013436:	f8ad 2004 	strh.w	r2, [sp, #4]
 801343a:	2b00      	cmp	r3, #0
 801343c:	d132      	bne.n	80134a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801343e:	4b3a      	ldr	r3, [pc, #232]	; (8013528 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013440:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013444:	6808      	ldr	r0, [r1, #0]
 8013446:	6849      	ldr	r1, [r1, #4]
 8013448:	f8ad 3006 	strh.w	r3, [sp, #6]
 801344c:	ac02      	add	r4, sp, #8
 801344e:	ab02      	add	r3, sp, #8
 8013450:	c303      	stmia	r3!, {r0, r1}
 8013452:	4669      	mov	r1, sp
 8013454:	4620      	mov	r0, r4
 8013456:	f7fa fc15 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801345a:	4668      	mov	r0, sp
 801345c:	f7fa fbea 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013460:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013464:	f8bd 2000 	ldrh.w	r2, [sp]
 8013468:	4d30      	ldr	r5, [pc, #192]	; (801352c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801346a:	4413      	add	r3, r2
 801346c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013470:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013474:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013478:	6828      	ldr	r0, [r5, #0]
 801347a:	4413      	add	r3, r2
 801347c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013480:	6803      	ldr	r3, [r0, #0]
 8013482:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013484:	4798      	blx	r3
 8013486:	f010 0f01 	tst.w	r0, #1
 801348a:	462f      	mov	r7, r5
 801348c:	d00c      	beq.n	80134a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801348e:	6828      	ldr	r0, [r5, #0]
 8013490:	6803      	ldr	r3, [r0, #0]
 8013492:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013496:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013498:	4798      	blx	r3
 801349a:	b004      	add	sp, #16
 801349c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80134a0:	4a21      	ldr	r2, [pc, #132]	; (8013528 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80134a2:	e7c6      	b.n	8013432 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80134a4:	4b1f      	ldr	r3, [pc, #124]	; (8013524 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80134a6:	e7cb      	b.n	8013440 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80134a8:	6838      	ldr	r0, [r7, #0]
 80134aa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80134ae:	6803      	ldr	r3, [r0, #0]
 80134b0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80134b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80134b6:	4798      	blx	r3
 80134b8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80134bc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80134c0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80134c4:	fb16 3602 	smlabb	r6, r6, r2, r3
 80134c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80134cc:	6838      	ldr	r0, [r7, #0]
 80134ce:	6803      	ldr	r3, [r0, #0]
 80134d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134d2:	4798      	blx	r3
 80134d4:	4a13      	ldr	r2, [pc, #76]	; (8013524 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80134d6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80134da:	8813      	ldrh	r3, [r2, #0]
 80134dc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80134e0:	fb03 1404 	mla	r4, r3, r4, r1
 80134e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80134e8:	435d      	muls	r5, r3
 80134ea:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80134ee:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80134f2:	4691      	mov	r9, r2
 80134f4:	6838      	ldr	r0, [r7, #0]
 80134f6:	42ac      	cmp	r4, r5
 80134f8:	6803      	ldr	r3, [r0, #0]
 80134fa:	d20e      	bcs.n	801351a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80134fc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8013500:	4632      	mov	r2, r6
 8013502:	4643      	mov	r3, r8
 8013504:	4621      	mov	r1, r4
 8013506:	47d0      	blx	sl
 8013508:	f8b9 3000 	ldrh.w	r3, [r9]
 801350c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013510:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013514:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013518:	e7ec      	b.n	80134f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801351a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801351c:	4798      	blx	r3
 801351e:	e7bc      	b.n	801349a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8013520:	2000a804 	.word	0x2000a804
 8013524:	2000a806 	.word	0x2000a806
 8013528:	2000a808 	.word	0x2000a808
 801352c:	2000a80c 	.word	0x2000a80c

08013530 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8013530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013534:	b08b      	sub	sp, #44	; 0x2c
 8013536:	460f      	mov	r7, r1
 8013538:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801353c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8013540:	4616      	mov	r6, r2
 8013542:	f1bb 0f00 	cmp.w	fp, #0
 8013546:	d049      	beq.n	80135dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013548:	6810      	ldr	r0, [r2, #0]
 801354a:	6851      	ldr	r1, [r2, #4]
 801354c:	ad06      	add	r5, sp, #24
 801354e:	c503      	stmia	r5!, {r0, r1}
 8013550:	6818      	ldr	r0, [r3, #0]
 8013552:	6859      	ldr	r1, [r3, #4]
 8013554:	ad08      	add	r5, sp, #32
 8013556:	c503      	stmia	r5!, {r0, r1}
 8013558:	a806      	add	r0, sp, #24
 801355a:	f7fa fb6b 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801355e:	4631      	mov	r1, r6
 8013560:	a808      	add	r0, sp, #32
 8013562:	f7fa fb8f 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013566:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801356a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801356e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013572:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8013576:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801357a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801357e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013582:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013586:	4f5f      	ldr	r7, [pc, #380]	; (8013704 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013588:	440a      	add	r2, r1
 801358a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801358e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013592:	6838      	ldr	r0, [r7, #0]
 8013594:	4413      	add	r3, r2
 8013596:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801359a:	6803      	ldr	r3, [r0, #0]
 801359c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801359e:	4798      	blx	r3
 80135a0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80135a4:	46b9      	mov	r9, r7
 80135a6:	d01c      	beq.n	80135e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80135a8:	f010 0f04 	tst.w	r0, #4
 80135ac:	d01d      	beq.n	80135ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80135ae:	f8d9 0000 	ldr.w	r0, [r9]
 80135b2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80135b6:	6801      	ldr	r1, [r0, #0]
 80135b8:	f8cd b00c 	str.w	fp, [sp, #12]
 80135bc:	2700      	movs	r7, #0
 80135be:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80135c2:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80135c6:	9402      	str	r4, [sp, #8]
 80135c8:	b2ad      	uxth	r5, r5
 80135ca:	fa1f f488 	uxth.w	r4, r8
 80135ce:	9501      	str	r5, [sp, #4]
 80135d0:	9400      	str	r4, [sp, #0]
 80135d2:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80135d4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80135d8:	4631      	mov	r1, r6
 80135da:	47a0      	blx	r4
 80135dc:	b00b      	add	sp, #44	; 0x2c
 80135de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135e2:	b914      	cbnz	r4, 80135ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80135e4:	f010 0f01 	tst.w	r0, #1
 80135e8:	e7e0      	b.n	80135ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80135ea:	f8d9 0000 	ldr.w	r0, [r9]
 80135ee:	6803      	ldr	r3, [r0, #0]
 80135f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135f2:	4798      	blx	r3
 80135f4:	4b44      	ldr	r3, [pc, #272]	; (8013708 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80135f6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80135fa:	881a      	ldrh	r2, [r3, #0]
 80135fc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013600:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013604:	fb02 1404 	mla	r4, r2, r4, r1
 8013608:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801360c:	469a      	mov	sl, r3
 801360e:	fb05 f502 	mul.w	r5, r5, r2
 8013612:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8013616:	d059      	beq.n	80136cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013618:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801361c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013620:	fa1f f28b 	uxth.w	r2, fp
 8013624:	fa1f f989 	uxth.w	r9, r9
 8013628:	469e      	mov	lr, r3
 801362a:	42ac      	cmp	r4, r5
 801362c:	d264      	bcs.n	80136f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801362e:	eb04 0a07 	add.w	sl, r4, r7
 8013632:	4554      	cmp	r4, sl
 8013634:	d23d      	bcs.n	80136b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8013636:	8821      	ldrh	r1, [r4, #0]
 8013638:	f836 3b02 	ldrh.w	r3, [r6], #2
 801363c:	1208      	asrs	r0, r1, #8
 801363e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013642:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013646:	fb10 f009 	smulbb	r0, r0, r9
 801364a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801364e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013652:	00c9      	lsls	r1, r1, #3
 8013654:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013658:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801365c:	10d8      	asrs	r0, r3, #3
 801365e:	b2c9      	uxtb	r1, r1
 8013660:	00db      	lsls	r3, r3, #3
 8013662:	fa1f fc8c 	uxth.w	ip, ip
 8013666:	fb1b fb09 	smulbb	fp, fp, r9
 801366a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801366e:	b2db      	uxtb	r3, r3
 8013670:	fb11 f109 	smulbb	r1, r1, r9
 8013674:	fb00 b002 	mla	r0, r0, r2, fp
 8013678:	fb03 1302 	mla	r3, r3, r2, r1
 801367c:	f10c 0b01 	add.w	fp, ip, #1
 8013680:	b29b      	uxth	r3, r3
 8013682:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8013686:	b280      	uxth	r0, r0
 8013688:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801368c:	f103 0c01 	add.w	ip, r3, #1
 8013690:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013694:	1c43      	adds	r3, r0, #1
 8013696:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801369a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801369e:	0940      	lsrs	r0, r0, #5
 80136a0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80136a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80136a8:	ea4c 0c00 	orr.w	ip, ip, r0
 80136ac:	f824 cb02 	strh.w	ip, [r4], #2
 80136b0:	e7bf      	b.n	8013632 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80136b2:	f8be 3000 	ldrh.w	r3, [lr]
 80136b6:	eba3 0308 	sub.w	r3, r3, r8
 80136ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80136be:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80136c2:	eba3 0308 	sub.w	r3, r3, r8
 80136c6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80136ca:	e7ae      	b.n	801362a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80136cc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80136d0:	f8d9 0000 	ldr.w	r0, [r9]
 80136d4:	42ac      	cmp	r4, r5
 80136d6:	6803      	ldr	r3, [r0, #0]
 80136d8:	d20e      	bcs.n	80136f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80136da:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80136de:	4632      	mov	r2, r6
 80136e0:	463b      	mov	r3, r7
 80136e2:	4621      	mov	r1, r4
 80136e4:	47c0      	blx	r8
 80136e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80136ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80136ee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80136f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80136f6:	e7eb      	b.n	80136d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80136f8:	4b02      	ldr	r3, [pc, #8]	; (8013704 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80136fa:	6818      	ldr	r0, [r3, #0]
 80136fc:	6803      	ldr	r3, [r0, #0]
 80136fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013700:	4798      	blx	r3
 8013702:	e76b      	b.n	80135dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013704:	2000a80c 	.word	0x2000a80c
 8013708:	2000a806 	.word	0x2000a806

0801370c <_ZN8touchgfx8LCD16bppD0Ev>:
 801370c:	b510      	push	{r4, lr}
 801370e:	2178      	movs	r1, #120	; 0x78
 8013710:	4604      	mov	r4, r0
 8013712:	f009 faa5 	bl	801cc60 <_ZdlPvj>
 8013716:	4620      	mov	r0, r4
 8013718:	bd10      	pop	{r4, pc}

0801371a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801371a:	b510      	push	{r4, lr}
 801371c:	2104      	movs	r1, #4
 801371e:	4604      	mov	r4, r0
 8013720:	f009 fa9e 	bl	801cc60 <_ZdlPvj>
 8013724:	4620      	mov	r0, r4
 8013726:	bd10      	pop	{r4, pc}

08013728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013728:	b510      	push	{r4, lr}
 801372a:	2104      	movs	r1, #4
 801372c:	4604      	mov	r4, r0
 801372e:	f009 fa97 	bl	801cc60 <_ZdlPvj>
 8013732:	4620      	mov	r0, r4
 8013734:	bd10      	pop	{r4, pc}

08013736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013736:	b510      	push	{r4, lr}
 8013738:	2104      	movs	r1, #4
 801373a:	4604      	mov	r4, r0
 801373c:	f009 fa90 	bl	801cc60 <_ZdlPvj>
 8013740:	4620      	mov	r0, r4
 8013742:	bd10      	pop	{r4, pc}

08013744 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013744:	b510      	push	{r4, lr}
 8013746:	2104      	movs	r1, #4
 8013748:	4604      	mov	r4, r0
 801374a:	f009 fa89 	bl	801cc60 <_ZdlPvj>
 801374e:	4620      	mov	r0, r4
 8013750:	bd10      	pop	{r4, pc}

08013752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013752:	b510      	push	{r4, lr}
 8013754:	2104      	movs	r1, #4
 8013756:	4604      	mov	r4, r0
 8013758:	f009 fa82 	bl	801cc60 <_ZdlPvj>
 801375c:	4620      	mov	r0, r4
 801375e:	bd10      	pop	{r4, pc}

08013760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013760:	b510      	push	{r4, lr}
 8013762:	2104      	movs	r1, #4
 8013764:	4604      	mov	r4, r0
 8013766:	f009 fa7b 	bl	801cc60 <_ZdlPvj>
 801376a:	4620      	mov	r0, r4
 801376c:	bd10      	pop	{r4, pc}

0801376e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801376e:	b510      	push	{r4, lr}
 8013770:	2104      	movs	r1, #4
 8013772:	4604      	mov	r4, r0
 8013774:	f009 fa74 	bl	801cc60 <_ZdlPvj>
 8013778:	4620      	mov	r0, r4
 801377a:	bd10      	pop	{r4, pc}

0801377c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801377c:	b510      	push	{r4, lr}
 801377e:	2104      	movs	r1, #4
 8013780:	4604      	mov	r4, r0
 8013782:	f009 fa6d 	bl	801cc60 <_ZdlPvj>
 8013786:	4620      	mov	r0, r4
 8013788:	bd10      	pop	{r4, pc}

0801378a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801378a:	b510      	push	{r4, lr}
 801378c:	2104      	movs	r1, #4
 801378e:	4604      	mov	r4, r0
 8013790:	f009 fa66 	bl	801cc60 <_ZdlPvj>
 8013794:	4620      	mov	r0, r4
 8013796:	bd10      	pop	{r4, pc}

08013798 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013798:	b510      	push	{r4, lr}
 801379a:	2104      	movs	r1, #4
 801379c:	4604      	mov	r4, r0
 801379e:	f009 fa5f 	bl	801cc60 <_ZdlPvj>
 80137a2:	4620      	mov	r0, r4
 80137a4:	bd10      	pop	{r4, pc}

080137a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80137a6:	b510      	push	{r4, lr}
 80137a8:	2104      	movs	r1, #4
 80137aa:	4604      	mov	r4, r0
 80137ac:	f009 fa58 	bl	801cc60 <_ZdlPvj>
 80137b0:	4620      	mov	r0, r4
 80137b2:	bd10      	pop	{r4, pc}

080137b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80137b4:	b510      	push	{r4, lr}
 80137b6:	2104      	movs	r1, #4
 80137b8:	4604      	mov	r4, r0
 80137ba:	f009 fa51 	bl	801cc60 <_ZdlPvj>
 80137be:	4620      	mov	r0, r4
 80137c0:	bd10      	pop	{r4, pc}

080137c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80137c2:	b510      	push	{r4, lr}
 80137c4:	2104      	movs	r1, #4
 80137c6:	4604      	mov	r4, r0
 80137c8:	f009 fa4a 	bl	801cc60 <_ZdlPvj>
 80137cc:	4620      	mov	r0, r4
 80137ce:	bd10      	pop	{r4, pc}

080137d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80137d0:	b510      	push	{r4, lr}
 80137d2:	2104      	movs	r1, #4
 80137d4:	4604      	mov	r4, r0
 80137d6:	f009 fa43 	bl	801cc60 <_ZdlPvj>
 80137da:	4620      	mov	r0, r4
 80137dc:	bd10      	pop	{r4, pc}

080137de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80137de:	b510      	push	{r4, lr}
 80137e0:	2104      	movs	r1, #4
 80137e2:	4604      	mov	r4, r0
 80137e4:	f009 fa3c 	bl	801cc60 <_ZdlPvj>
 80137e8:	4620      	mov	r0, r4
 80137ea:	bd10      	pop	{r4, pc}

080137ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80137ec:	b510      	push	{r4, lr}
 80137ee:	2104      	movs	r1, #4
 80137f0:	4604      	mov	r4, r0
 80137f2:	f009 fa35 	bl	801cc60 <_ZdlPvj>
 80137f6:	4620      	mov	r0, r4
 80137f8:	bd10      	pop	{r4, pc}

080137fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80137fa:	b510      	push	{r4, lr}
 80137fc:	2104      	movs	r1, #4
 80137fe:	4604      	mov	r4, r0
 8013800:	f009 fa2e 	bl	801cc60 <_ZdlPvj>
 8013804:	4620      	mov	r0, r4
 8013806:	bd10      	pop	{r4, pc}

08013808 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013808:	b510      	push	{r4, lr}
 801380a:	2104      	movs	r1, #4
 801380c:	4604      	mov	r4, r0
 801380e:	f009 fa27 	bl	801cc60 <_ZdlPvj>
 8013812:	4620      	mov	r0, r4
 8013814:	bd10      	pop	{r4, pc}

08013816 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013816:	b510      	push	{r4, lr}
 8013818:	2104      	movs	r1, #4
 801381a:	4604      	mov	r4, r0
 801381c:	f009 fa20 	bl	801cc60 <_ZdlPvj>
 8013820:	4620      	mov	r0, r4
 8013822:	bd10      	pop	{r4, pc}

08013824 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013824:	b510      	push	{r4, lr}
 8013826:	2104      	movs	r1, #4
 8013828:	4604      	mov	r4, r0
 801382a:	f009 fa19 	bl	801cc60 <_ZdlPvj>
 801382e:	4620      	mov	r0, r4
 8013830:	bd10      	pop	{r4, pc}

08013832 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013832:	b510      	push	{r4, lr}
 8013834:	2104      	movs	r1, #4
 8013836:	4604      	mov	r4, r0
 8013838:	f009 fa12 	bl	801cc60 <_ZdlPvj>
 801383c:	4620      	mov	r0, r4
 801383e:	bd10      	pop	{r4, pc}

08013840 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013840:	b510      	push	{r4, lr}
 8013842:	2104      	movs	r1, #4
 8013844:	4604      	mov	r4, r0
 8013846:	f009 fa0b 	bl	801cc60 <_ZdlPvj>
 801384a:	4620      	mov	r0, r4
 801384c:	bd10      	pop	{r4, pc}

0801384e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801384e:	b510      	push	{r4, lr}
 8013850:	2104      	movs	r1, #4
 8013852:	4604      	mov	r4, r0
 8013854:	f009 fa04 	bl	801cc60 <_ZdlPvj>
 8013858:	4620      	mov	r0, r4
 801385a:	bd10      	pop	{r4, pc}

0801385c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801385c:	b510      	push	{r4, lr}
 801385e:	2104      	movs	r1, #4
 8013860:	4604      	mov	r4, r0
 8013862:	f009 f9fd 	bl	801cc60 <_ZdlPvj>
 8013866:	4620      	mov	r0, r4
 8013868:	bd10      	pop	{r4, pc}

0801386a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801386a:	b510      	push	{r4, lr}
 801386c:	2104      	movs	r1, #4
 801386e:	4604      	mov	r4, r0
 8013870:	f009 f9f6 	bl	801cc60 <_ZdlPvj>
 8013874:	4620      	mov	r0, r4
 8013876:	bd10      	pop	{r4, pc}

08013878 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013878:	b510      	push	{r4, lr}
 801387a:	2104      	movs	r1, #4
 801387c:	4604      	mov	r4, r0
 801387e:	f009 f9ef 	bl	801cc60 <_ZdlPvj>
 8013882:	4620      	mov	r0, r4
 8013884:	bd10      	pop	{r4, pc}

08013886 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013886:	b510      	push	{r4, lr}
 8013888:	2104      	movs	r1, #4
 801388a:	4604      	mov	r4, r0
 801388c:	f009 f9e8 	bl	801cc60 <_ZdlPvj>
 8013890:	4620      	mov	r0, r4
 8013892:	bd10      	pop	{r4, pc}

08013894 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013894:	b510      	push	{r4, lr}
 8013896:	2104      	movs	r1, #4
 8013898:	4604      	mov	r4, r0
 801389a:	f009 f9e1 	bl	801cc60 <_ZdlPvj>
 801389e:	4620      	mov	r0, r4
 80138a0:	bd10      	pop	{r4, pc}
	...

080138a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80138a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138a6:	4606      	mov	r6, r0
 80138a8:	b087      	sub	sp, #28
 80138aa:	460c      	mov	r4, r1
 80138ac:	4617      	mov	r7, r2
 80138ae:	461d      	mov	r5, r3
 80138b0:	b333      	cbz	r3, 8013900 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80138b2:	4608      	mov	r0, r1
 80138b4:	f7f6 fdcf 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 80138b8:	bb10      	cbnz	r0, 8013900 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80138ba:	6820      	ldr	r0, [r4, #0]
 80138bc:	6861      	ldr	r1, [r4, #4]
 80138be:	4c1c      	ldr	r4, [pc, #112]	; (8013930 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80138c0:	ab04      	add	r3, sp, #16
 80138c2:	c303      	stmia	r3!, {r0, r1}
 80138c4:	a804      	add	r0, sp, #16
 80138c6:	f7fa f9b5 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138ca:	6820      	ldr	r0, [r4, #0]
 80138cc:	6803      	ldr	r3, [r0, #0]
 80138ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80138d0:	4798      	blx	r3
 80138d2:	2dff      	cmp	r5, #255	; 0xff
 80138d4:	d016      	beq.n	8013904 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80138d6:	f010 0f08 	tst.w	r0, #8
 80138da:	6820      	ldr	r0, [r4, #0]
 80138dc:	d015      	beq.n	801390a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80138de:	2400      	movs	r4, #0
 80138e0:	6801      	ldr	r1, [r0, #0]
 80138e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80138e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80138ea:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80138ee:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80138f2:	9401      	str	r4, [sp, #4]
 80138f4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80138f8:	9400      	str	r4, [sp, #0]
 80138fa:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80138fc:	4639      	mov	r1, r7
 80138fe:	47a0      	blx	r4
 8013900:	b007      	add	sp, #28
 8013902:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013904:	f010 0f02 	tst.w	r0, #2
 8013908:	e7e7      	b.n	80138da <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801390a:	6803      	ldr	r3, [r0, #0]
 801390c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801390e:	4798      	blx	r3
 8013910:	4b08      	ldr	r3, [pc, #32]	; (8013934 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8013912:	881a      	ldrh	r2, [r3, #0]
 8013914:	6833      	ldr	r3, [r6, #0]
 8013916:	e9cd 7500 	strd	r7, r5, [sp]
 801391a:	4601      	mov	r1, r0
 801391c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801391e:	4630      	mov	r0, r6
 8013920:	ab04      	add	r3, sp, #16
 8013922:	47a8      	blx	r5
 8013924:	6820      	ldr	r0, [r4, #0]
 8013926:	6803      	ldr	r3, [r0, #0]
 8013928:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801392a:	4798      	blx	r3
 801392c:	e7e8      	b.n	8013900 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801392e:	bf00      	nop
 8013930:	2000a80c 	.word	0x2000a80c
 8013934:	2000a806 	.word	0x2000a806

08013938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801393c:	4690      	mov	r8, r2
 801393e:	4a8d      	ldr	r2, [pc, #564]	; (8013b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 8013940:	6812      	ldr	r2, [r2, #0]
 8013942:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8013946:	b091      	sub	sp, #68	; 0x44
 8013948:	2a02      	cmp	r2, #2
 801394a:	4606      	mov	r6, r0
 801394c:	460d      	mov	r5, r1
 801394e:	461c      	mov	r4, r3
 8013950:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 8013954:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8013958:	d106      	bne.n	8013968 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 801395a:	4b87      	ldr	r3, [pc, #540]	; (8013b78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 801395c:	4a87      	ldr	r2, [pc, #540]	; (8013b7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801395e:	f240 316b 	movw	r1, #875	; 0x36b
 8013962:	4887      	ldr	r0, [pc, #540]	; (8013b80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8013964:	f009 f9aa 	bl	801ccbc <__assert_func>
 8013968:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801396a:	b923      	cbnz	r3, 8013976 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 801396c:	4b85      	ldr	r3, [pc, #532]	; (8013b84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801396e:	4a83      	ldr	r2, [pc, #524]	; (8013b7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8013970:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8013974:	e7f5      	b.n	8013962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 8013976:	f9b4 1000 	ldrsh.w	r1, [r4]
 801397a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801397e:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8013982:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8013986:	4621      	mov	r1, r4
 8013988:	4648      	mov	r0, r9
 801398a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801398e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8013992:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8013996:	f7f6 fd1b 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 801399a:	4641      	mov	r1, r8
 801399c:	4648      	mov	r0, r9
 801399e:	f7f6 fd17 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 80139a2:	4a79      	ldr	r2, [pc, #484]	; (8013b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 80139a4:	f8b2 c000 	ldrh.w	ip, [r2]
 80139a8:	4a78      	ldr	r2, [pc, #480]	; (8013b8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 80139aa:	8810      	ldrh	r0, [r2, #0]
 80139ac:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80139b0:	2a00      	cmp	r2, #0
 80139b2:	fa0f f18c 	sxth.w	r1, ip
 80139b6:	fa0f fe80 	sxth.w	lr, r0
 80139ba:	da07      	bge.n	80139cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 80139bc:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 80139c0:	4442      	add	r2, r8
 80139c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80139c6:	2200      	movs	r2, #0
 80139c8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80139cc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80139d0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80139d4:	1a89      	subs	r1, r1, r2
 80139d6:	4588      	cmp	r8, r1
 80139d8:	bfc4      	itt	gt
 80139da:	ebac 0102 	subgt.w	r1, ip, r2
 80139de:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 80139e2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80139e6:	2900      	cmp	r1, #0
 80139e8:	da07      	bge.n	80139fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 80139ea:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 80139ee:	4441      	add	r1, r8
 80139f0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80139f4:	2100      	movs	r1, #0
 80139f6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80139fa:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80139fe:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 8013a02:	ebae 0e0a 	sub.w	lr, lr, sl
 8013a06:	4571      	cmp	r1, lr
 8013a08:	bfc4      	itt	gt
 8013a0a:	eba0 010a 	subgt.w	r1, r0, sl
 8013a0e:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 8013a12:	495f      	ldr	r1, [pc, #380]	; (8013b90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8013a14:	7809      	ldrb	r1, [r1, #0]
 8013a16:	b9a9      	cbnz	r1, 8013a44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 8013a18:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013a1c:	45e0      	cmp	r8, ip
 8013a1e:	bf14      	ite	ne
 8013a20:	2300      	movne	r3, #0
 8013a22:	2301      	moveq	r3, #1
 8013a24:	4648      	mov	r0, r9
 8013a26:	9202      	str	r2, [sp, #8]
 8013a28:	9305      	str	r3, [sp, #20]
 8013a2a:	f7f6 fd14 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a2e:	9a02      	ldr	r2, [sp, #8]
 8013a30:	b160      	cbz	r0, 8013a4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8013a32:	2300      	movs	r3, #0
 8013a34:	8033      	strh	r3, [r6, #0]
 8013a36:	8073      	strh	r3, [r6, #2]
 8013a38:	80b3      	strh	r3, [r6, #4]
 8013a3a:	4630      	mov	r0, r6
 8013a3c:	80f3      	strh	r3, [r6, #6]
 8013a3e:	b011      	add	sp, #68	; 0x44
 8013a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a44:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8013a48:	4580      	cmp	r8, r0
 8013a4a:	e7e8      	b.n	8013a1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 8013a4c:	8821      	ldrh	r1, [r4, #0]
 8013a4e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8013a52:	9304      	str	r3, [sp, #16]
 8013a54:	1a52      	subs	r2, r2, r1
 8013a56:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8013a5a:	9306      	str	r3, [sp, #24]
 8013a5c:	b213      	sxth	r3, r2
 8013a5e:	9302      	str	r3, [sp, #8]
 8013a60:	8863      	ldrh	r3, [r4, #2]
 8013a62:	900e      	str	r0, [sp, #56]	; 0x38
 8013a64:	ebaa 0a03 	sub.w	sl, sl, r3
 8013a68:	fa0f f38a 	sxth.w	r3, sl
 8013a6c:	9303      	str	r3, [sp, #12]
 8013a6e:	9b02      	ldr	r3, [sp, #8]
 8013a70:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013a74:	9b03      	ldr	r3, [sp, #12]
 8013a76:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013a7a:	9b04      	ldr	r3, [sp, #16]
 8013a7c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013a80:	a90e      	add	r1, sp, #56	; 0x38
 8013a82:	9b06      	ldr	r3, [sp, #24]
 8013a84:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013a88:	a80c      	add	r0, sp, #48	; 0x30
 8013a8a:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8013a8e:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8013a92:	f7fa f8f7 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013a96:	4648      	mov	r0, r9
 8013a98:	f7fa f8cc 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a9c:	a80e      	add	r0, sp, #56	; 0x38
 8013a9e:	f7fa f8c9 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013aa2:	4b3c      	ldr	r3, [pc, #240]	; (8013b94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8013aa4:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8013aa8:	881b      	ldrh	r3, [r3, #0]
 8013aaa:	9307      	str	r3, [sp, #28]
 8013aac:	682b      	ldr	r3, [r5, #0]
 8013aae:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8013b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8013ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ab4:	4628      	mov	r0, r5
 8013ab6:	4798      	blx	r3
 8013ab8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8013abc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013ac0:	4682      	mov	sl, r0
 8013ac2:	fb17 2303 	smlabb	r3, r7, r3, r2
 8013ac6:	f8d8 0000 	ldr.w	r0, [r8]
 8013aca:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8013acc:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 8013ad0:	6803      	ldr	r3, [r0, #0]
 8013ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ad4:	4798      	blx	r3
 8013ad6:	9009      	str	r0, [sp, #36]	; 0x24
 8013ad8:	f8d8 0000 	ldr.w	r0, [r8]
 8013adc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8013ae0:	6802      	ldr	r2, [r0, #0]
 8013ae2:	9308      	str	r3, [sp, #32]
 8013ae4:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8013ae6:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8013aea:	4790      	blx	r2
 8013aec:	f010 0f01 	tst.w	r0, #1
 8013af0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013af2:	d011      	beq.n	8013b18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 8013af4:	f8d8 0000 	ldr.w	r0, [r8]
 8013af8:	6803      	ldr	r3, [r0, #0]
 8013afa:	f8cd b000 	str.w	fp, [sp]
 8013afe:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8013b00:	e899 0006 	ldmia.w	r9, {r1, r2}
 8013b04:	4623      	mov	r3, r4
 8013b06:	47a8      	blx	r5
 8013b08:	9b02      	ldr	r3, [sp, #8]
 8013b0a:	8033      	strh	r3, [r6, #0]
 8013b0c:	9b03      	ldr	r3, [sp, #12]
 8013b0e:	8073      	strh	r3, [r6, #2]
 8013b10:	9b04      	ldr	r3, [sp, #16]
 8013b12:	80b3      	strh	r3, [r6, #4]
 8013b14:	9b06      	ldr	r3, [sp, #24]
 8013b16:	e790      	b.n	8013a3a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8013b18:	9a08      	ldr	r2, [sp, #32]
 8013b1a:	fb0a f505 	mul.w	r5, sl, r5
 8013b1e:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8013b22:	9a05      	ldr	r2, [sp, #20]
 8013b24:	441d      	add	r5, r3
 8013b26:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8013b2a:	b162      	cbz	r2, 8013b46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8013b2c:	9a07      	ldr	r2, [sp, #28]
 8013b2e:	4297      	cmp	r7, r2
 8013b30:	d109      	bne.n	8013b46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8013b32:	f8d8 0000 	ldr.w	r0, [r8]
 8013b36:	6802      	ldr	r2, [r0, #0]
 8013b38:	fb03 f30a 	mul.w	r3, r3, sl
 8013b3c:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8013b3e:	4621      	mov	r1, r4
 8013b40:	462a      	mov	r2, r5
 8013b42:	47b8      	blx	r7
 8013b44:	e7e0      	b.n	8013b08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8013b46:	437b      	muls	r3, r7
 8013b48:	f8df b028 	ldr.w	fp, [pc, #40]	; 8013b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8013b4c:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8013b50:	007f      	lsls	r7, r7, #1
 8013b52:	4544      	cmp	r4, r8
 8013b54:	d2d8      	bcs.n	8013b08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8013b56:	f8db 0000 	ldr.w	r0, [fp]
 8013b5a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013b5e:	6802      	ldr	r2, [r0, #0]
 8013b60:	4621      	mov	r1, r4
 8013b62:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8013b66:	005b      	lsls	r3, r3, #1
 8013b68:	462a      	mov	r2, r5
 8013b6a:	47c8      	blx	r9
 8013b6c:	4455      	add	r5, sl
 8013b6e:	443c      	add	r4, r7
 8013b70:	e7ef      	b.n	8013b52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8013b72:	bf00      	nop
 8013b74:	2000a80c 	.word	0x2000a80c
 8013b78:	0802122a 	.word	0x0802122a
 8013b7c:	08021a94 	.word	0x08021a94
 8013b80:	080212dc 	.word	0x080212dc
 8013b84:	080211dc 	.word	0x080211dc
 8013b88:	2000a800 	.word	0x2000a800
 8013b8c:	2000a802 	.word	0x2000a802
 8013b90:	2000a804 	.word	0x2000a804
 8013b94:	2000a806 	.word	0x2000a806

08013b98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8013b98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013b9c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8013ba0:	9e08      	ldr	r6, [sp, #32]
 8013ba2:	4688      	mov	r8, r1
 8013ba4:	4614      	mov	r4, r2
 8013ba6:	461d      	mov	r5, r3
 8013ba8:	2f00      	cmp	r7, #0
 8013baa:	f000 80b3 	beq.w	8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013bae:	4618      	mov	r0, r3
 8013bb0:	f7f6 fc51 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013bb4:	2800      	cmp	r0, #0
 8013bb6:	f040 80ad 	bne.w	8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013bba:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013bbe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013bc2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8013bc6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8013bca:	fb04 1303 	mla	r3, r4, r3, r1
 8013bce:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8013bd2:	4365      	muls	r5, r4
 8013bd4:	2fff      	cmp	r7, #255	; 0xff
 8013bd6:	eba4 0200 	sub.w	r2, r4, r0
 8013bda:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8013bde:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8013be2:	d04b      	beq.n	8013c7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8013be4:	b2bc      	uxth	r4, r7
 8013be6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8013bea:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8013bee:	fa5f f788 	uxtb.w	r7, r8
 8013bf2:	b2f3      	uxtb	r3, r6
 8013bf4:	0040      	lsls	r0, r0, #1
 8013bf6:	fb0e fe04 	mul.w	lr, lr, r4
 8013bfa:	4367      	muls	r7, r4
 8013bfc:	4363      	muls	r3, r4
 8013bfe:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8013c02:	fa1f fc8c 	uxth.w	ip, ip
 8013c06:	42a9      	cmp	r1, r5
 8013c08:	f080 8084 	bcs.w	8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013c0c:	eb01 0900 	add.w	r9, r1, r0
 8013c10:	4549      	cmp	r1, r9
 8013c12:	d231      	bcs.n	8013c78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8013c14:	880a      	ldrh	r2, [r1, #0]
 8013c16:	1214      	asrs	r4, r2, #8
 8013c18:	10d6      	asrs	r6, r2, #3
 8013c1a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013c1e:	00d2      	lsls	r2, r2, #3
 8013c20:	b2d2      	uxtb	r2, r2
 8013c22:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013c26:	fb14 f40c 	smulbb	r4, r4, ip
 8013c2a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013c2e:	4474      	add	r4, lr
 8013c30:	fb12 f20c 	smulbb	r2, r2, ip
 8013c34:	b2a4      	uxth	r4, r4
 8013c36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013c3a:	441a      	add	r2, r3
 8013c3c:	b292      	uxth	r2, r2
 8013c3e:	f104 0a01 	add.w	sl, r4, #1
 8013c42:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013c46:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8013c4a:	fb16 f60c 	smulbb	r6, r6, ip
 8013c4e:	f102 0a01 	add.w	sl, r2, #1
 8013c52:	443e      	add	r6, r7
 8013c54:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8013c58:	b2b6      	uxth	r6, r6
 8013c5a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8013c5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013c62:	4322      	orrs	r2, r4
 8013c64:	1c74      	adds	r4, r6, #1
 8013c66:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8013c6a:	0976      	lsrs	r6, r6, #5
 8013c6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013c70:	4332      	orrs	r2, r6
 8013c72:	f821 2b02 	strh.w	r2, [r1], #2
 8013c76:	e7cb      	b.n	8013c10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8013c78:	4441      	add	r1, r8
 8013c7a:	e7c4      	b.n	8013c06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8013c7c:	4f26      	ldr	r7, [pc, #152]	; (8013d18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8013c7e:	0973      	lsrs	r3, r6, #5
 8013c80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c84:	ea08 0707 	and.w	r7, r8, r7
 8013c88:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013c8c:	433b      	orrs	r3, r7
 8013c8e:	4333      	orrs	r3, r6
 8013c90:	07e6      	lsls	r6, r4, #31
 8013c92:	b29b      	uxth	r3, r3
 8013c94:	d50b      	bpl.n	8013cae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8013c96:	0040      	lsls	r0, r0, #1
 8013c98:	0052      	lsls	r2, r2, #1
 8013c9a:	42a9      	cmp	r1, r5
 8013c9c:	d23a      	bcs.n	8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013c9e:	180c      	adds	r4, r1, r0
 8013ca0:	42a1      	cmp	r1, r4
 8013ca2:	d202      	bcs.n	8013caa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8013ca4:	f821 3b02 	strh.w	r3, [r1], #2
 8013ca8:	e7fa      	b.n	8013ca0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8013caa:	4411      	add	r1, r2
 8013cac:	e7f5      	b.n	8013c9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8013cae:	078f      	lsls	r7, r1, #30
 8013cb0:	d008      	beq.n	8013cc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8013cb2:	0066      	lsls	r6, r4, #1
 8013cb4:	460a      	mov	r2, r1
 8013cb6:	42aa      	cmp	r2, r5
 8013cb8:	d202      	bcs.n	8013cc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8013cba:	8013      	strh	r3, [r2, #0]
 8013cbc:	4432      	add	r2, r6
 8013cbe:	e7fa      	b.n	8013cb6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8013cc0:	3102      	adds	r1, #2
 8013cc2:	3801      	subs	r0, #1
 8013cc4:	07c6      	lsls	r6, r0, #31
 8013cc6:	d50b      	bpl.n	8013ce0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8013cc8:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8013ccc:	3a01      	subs	r2, #1
 8013cce:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8013cd2:	0066      	lsls	r6, r4, #1
 8013cd4:	42aa      	cmp	r2, r5
 8013cd6:	d202      	bcs.n	8013cde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8013cd8:	8013      	strh	r3, [r2, #0]
 8013cda:	4432      	add	r2, r6
 8013cdc:	e7fa      	b.n	8013cd4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8013cde:	3801      	subs	r0, #1
 8013ce0:	b1c0      	cbz	r0, 8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013ce2:	1040      	asrs	r0, r0, #1
 8013ce4:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8013ce8:	0080      	lsls	r0, r0, #2
 8013cea:	0064      	lsls	r4, r4, #1
 8013cec:	42a9      	cmp	r1, r5
 8013cee:	d211      	bcs.n	8013d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8013cf0:	078a      	lsls	r2, r1, #30
 8013cf2:	d006      	beq.n	8013d02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8013cf4:	4b09      	ldr	r3, [pc, #36]	; (8013d1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8013cf6:	4a0a      	ldr	r2, [pc, #40]	; (8013d20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8013cf8:	480a      	ldr	r0, [pc, #40]	; (8013d24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8013cfa:	f240 4137 	movw	r1, #1079	; 0x437
 8013cfe:	f008 ffdd 	bl	801ccbc <__assert_func>
 8013d02:	180e      	adds	r6, r1, r0
 8013d04:	460a      	mov	r2, r1
 8013d06:	42b2      	cmp	r2, r6
 8013d08:	d202      	bcs.n	8013d10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8013d0a:	f842 3b04 	str.w	r3, [r2], #4
 8013d0e:	e7fa      	b.n	8013d06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8013d10:	4421      	add	r1, r4
 8013d12:	e7eb      	b.n	8013cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8013d14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013d18:	00fff800 	.word	0x00fff800
 8013d1c:	0802108d 	.word	0x0802108d
 8013d20:	080216e0 	.word	0x080216e0
 8013d24:	080212dc 	.word	0x080212dc

08013d28 <_ZN8touchgfx8LCD16bppC1Ev>:
 8013d28:	2200      	movs	r2, #0
 8013d2a:	4910      	ldr	r1, [pc, #64]	; (8013d6c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013d2c:	6042      	str	r2, [r0, #4]
 8013d2e:	6001      	str	r1, [r0, #0]
 8013d30:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013d34:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8013d38:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013d3c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013d40:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013d44:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8013d48:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013d4c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013d50:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8013d54:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8013d58:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013d5c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8013d60:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8013d64:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8013d68:	4770      	bx	lr
 8013d6a:	bf00      	nop
 8013d6c:	08021690 	.word	0x08021690

08013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8013d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d74:	460d      	mov	r5, r1
 8013d76:	b08d      	sub	sp, #52	; 0x34
 8013d78:	4604      	mov	r4, r0
 8013d7a:	6808      	ldr	r0, [r1, #0]
 8013d7c:	6849      	ldr	r1, [r1, #4]
 8013d7e:	4699      	mov	r9, r3
 8013d80:	ab08      	add	r3, sp, #32
 8013d82:	c303      	stmia	r3!, {r0, r1}
 8013d84:	6810      	ldr	r0, [r2, #0]
 8013d86:	6851      	ldr	r1, [r2, #4]
 8013d88:	ab0a      	add	r3, sp, #40	; 0x28
 8013d8a:	c303      	stmia	r3!, {r0, r1}
 8013d8c:	a808      	add	r0, sp, #32
 8013d8e:	f7f9 ff51 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013d92:	4629      	mov	r1, r5
 8013d94:	a80a      	add	r0, sp, #40	; 0x28
 8013d96:	f7f9 ff75 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013d9a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8013d9e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8013da2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8013da6:	4d63      	ldr	r5, [pc, #396]	; (8013f34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013da8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013dac:	6828      	ldr	r0, [r5, #0]
 8013dae:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8013db2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013db6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013dba:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013dbe:	440a      	add	r2, r1
 8013dc0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013dc4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013dc8:	4413      	add	r3, r2
 8013dca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013dce:	6803      	ldr	r3, [r0, #0]
 8013dd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013dd2:	4798      	blx	r3
 8013dd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013dd8:	d119      	bne.n	8013e0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013dda:	f010 0f20 	tst.w	r0, #32
 8013dde:	6828      	ldr	r0, [r5, #0]
 8013de0:	d018      	beq.n	8013e14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8013de2:	2500      	movs	r5, #0
 8013de4:	6801      	ldr	r1, [r0, #0]
 8013de6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8013dea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013dee:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8013df2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8013df6:	9502      	str	r5, [sp, #8]
 8013df8:	b2b6      	uxth	r6, r6
 8013dfa:	fa1f f588 	uxth.w	r5, r8
 8013dfe:	9601      	str	r6, [sp, #4]
 8013e00:	9500      	str	r5, [sp, #0]
 8013e02:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8013e04:	4621      	mov	r1, r4
 8013e06:	47a8      	blx	r5
 8013e08:	b00d      	add	sp, #52	; 0x34
 8013e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e0e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8013e12:	e7e4      	b.n	8013dde <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8013e14:	6803      	ldr	r3, [r0, #0]
 8013e16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013e18:	4798      	blx	r3
 8013e1a:	4947      	ldr	r1, [pc, #284]	; (8013f38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8013e1c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013e20:	880b      	ldrh	r3, [r1, #0]
 8013e22:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8013e26:	fb03 5202 	mla	r2, r3, r2, r5
 8013e2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013e2e:	4373      	muls	r3, r6
 8013e30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013e34:	9307      	str	r3, [sp, #28]
 8013e36:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013e3a:	9306      	str	r3, [sp, #24]
 8013e3c:	468a      	mov	sl, r1
 8013e3e:	9b07      	ldr	r3, [sp, #28]
 8013e40:	4298      	cmp	r0, r3
 8013e42:	d270      	bcs.n	8013f26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8013e44:	9b06      	ldr	r3, [sp, #24]
 8013e46:	4621      	mov	r1, r4
 8013e48:	eb00 0b03 	add.w	fp, r0, r3
 8013e4c:	4558      	cmp	r0, fp
 8013e4e:	d25d      	bcs.n	8013f0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8013e50:	f851 4b04 	ldr.w	r4, [r1], #4
 8013e54:	0e23      	lsrs	r3, r4, #24
 8013e56:	d014      	beq.n	8013e82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013e58:	2bff      	cmp	r3, #255	; 0xff
 8013e5a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8013e5e:	d112      	bne.n	8013e86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013e60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013e64:	d10f      	bne.n	8013e86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013e66:	0963      	lsrs	r3, r4, #5
 8013e68:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8013e6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013e70:	f02c 0c07 	bic.w	ip, ip, #7
 8013e74:	ea43 0c0c 	orr.w	ip, r3, ip
 8013e78:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013e7c:	ea4c 0404 	orr.w	r4, ip, r4
 8013e80:	8004      	strh	r4, [r0, #0]
 8013e82:	3002      	adds	r0, #2
 8013e84:	e7e2      	b.n	8013e4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8013e86:	fb09 f303 	mul.w	r3, r9, r3
 8013e8a:	8807      	ldrh	r7, [r0, #0]
 8013e8c:	1c5a      	adds	r2, r3, #1
 8013e8e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8013e92:	1212      	asrs	r2, r2, #8
 8013e94:	123e      	asrs	r6, r7, #8
 8013e96:	b293      	uxth	r3, r2
 8013e98:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8013e9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013ea0:	43d2      	mvns	r2, r2
 8013ea2:	b2d2      	uxtb	r2, r2
 8013ea4:	10fd      	asrs	r5, r7, #3
 8013ea6:	fb1e fe03 	smulbb	lr, lr, r3
 8013eaa:	00ff      	lsls	r7, r7, #3
 8013eac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013eb0:	fb06 e602 	mla	r6, r6, r2, lr
 8013eb4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013eb8:	b2ff      	uxtb	r7, r7
 8013eba:	fa5f fc8c 	uxtb.w	ip, ip
 8013ebe:	b2e4      	uxtb	r4, r4
 8013ec0:	b2b6      	uxth	r6, r6
 8013ec2:	fb1c fc03 	smulbb	ip, ip, r3
 8013ec6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013eca:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013ece:	fb14 f403 	smulbb	r4, r4, r3
 8013ed2:	fb05 c502 	mla	r5, r5, r2, ip
 8013ed6:	f106 0e01 	add.w	lr, r6, #1
 8013eda:	fb07 4702 	mla	r7, r7, r2, r4
 8013ede:	b2ad      	uxth	r5, r5
 8013ee0:	b2bf      	uxth	r7, r7
 8013ee2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8013ee6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8013eea:	f105 0c01 	add.w	ip, r5, #1
 8013eee:	1c7e      	adds	r6, r7, #1
 8013ef0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013ef4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013ef8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013efc:	096d      	lsrs	r5, r5, #5
 8013efe:	ea46 060e 	orr.w	r6, r6, lr
 8013f02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013f06:	432e      	orrs	r6, r5
 8013f08:	8006      	strh	r6, [r0, #0]
 8013f0a:	e7ba      	b.n	8013e82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013f0c:	f8ba 3000 	ldrh.w	r3, [sl]
 8013f10:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8013f14:	eba3 0308 	sub.w	r3, r3, r8
 8013f18:	eba4 0408 	sub.w	r4, r4, r8
 8013f1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013f20:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8013f24:	e78b      	b.n	8013e3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8013f26:	4b03      	ldr	r3, [pc, #12]	; (8013f34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013f28:	6818      	ldr	r0, [r3, #0]
 8013f2a:	6803      	ldr	r3, [r0, #0]
 8013f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f2e:	4798      	blx	r3
 8013f30:	e76a      	b.n	8013e08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8013f32:	bf00      	nop
 8013f34:	2000a80c 	.word	0x2000a80c
 8013f38:	2000a806 	.word	0x2000a806

08013f3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8013f3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013f40:	460c      	mov	r4, r1
 8013f42:	b085      	sub	sp, #20
 8013f44:	6810      	ldr	r0, [r2, #0]
 8013f46:	6851      	ldr	r1, [r2, #4]
 8013f48:	466d      	mov	r5, sp
 8013f4a:	c503      	stmia	r5!, {r0, r1}
 8013f4c:	6818      	ldr	r0, [r3, #0]
 8013f4e:	6859      	ldr	r1, [r3, #4]
 8013f50:	4616      	mov	r6, r2
 8013f52:	c503      	stmia	r5!, {r0, r1}
 8013f54:	4668      	mov	r0, sp
 8013f56:	f7f9 fe6d 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013f5a:	4631      	mov	r1, r6
 8013f5c:	a802      	add	r0, sp, #8
 8013f5e:	f7f9 fe91 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013f62:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8013f66:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8013f6a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013f6e:	4d28      	ldr	r5, [pc, #160]	; (8014010 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8013f70:	4e28      	ldr	r6, [pc, #160]	; (8014014 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8013f72:	6828      	ldr	r0, [r5, #0]
 8013f74:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013f78:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8013f7c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013f80:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013f84:	f8bd 1000 	ldrh.w	r1, [sp]
 8013f88:	440a      	add	r2, r1
 8013f8a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8013f8e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013f92:	4413      	add	r3, r2
 8013f94:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013f98:	6803      	ldr	r3, [r0, #0]
 8013f9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013f9c:	4798      	blx	r3
 8013f9e:	8833      	ldrh	r3, [r6, #0]
 8013fa0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8013fa4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8013fa8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8014018 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8013fac:	fb03 1202 	mla	r2, r3, r2, r1
 8013fb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013fb4:	fb08 f303 	mul.w	r3, r8, r3
 8013fb8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013fbc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8013fc0:	4298      	cmp	r0, r3
 8013fc2:	d21d      	bcs.n	8014000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8013fc4:	eb00 080c 	add.w	r8, r0, ip
 8013fc8:	4540      	cmp	r0, r8
 8013fca:	d20f      	bcs.n	8013fec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013fcc:	f854 1b04 	ldr.w	r1, [r4], #4
 8013fd0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8013fd4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8013fd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013fdc:	ea42 0209 	orr.w	r2, r2, r9
 8013fe0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013fe4:	430a      	orrs	r2, r1
 8013fe6:	f820 2b02 	strh.w	r2, [r0], #2
 8013fea:	e7ed      	b.n	8013fc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013fec:	8832      	ldrh	r2, [r6, #0]
 8013fee:	1bd2      	subs	r2, r2, r7
 8013ff0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013ff4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013ff8:	1bd2      	subs	r2, r2, r7
 8013ffa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013ffe:	e7df      	b.n	8013fc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014000:	6828      	ldr	r0, [r5, #0]
 8014002:	6803      	ldr	r3, [r0, #0]
 8014004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014006:	4798      	blx	r3
 8014008:	b005      	add	sp, #20
 801400a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801400e:	bf00      	nop
 8014010:	2000a80c 	.word	0x2000a80c
 8014014:	2000a806 	.word	0x2000a806
 8014018:	fffff800 	.word	0xfffff800

0801401c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801401c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014020:	460e      	mov	r6, r1
 8014022:	b08e      	sub	sp, #56	; 0x38
 8014024:	4604      	mov	r4, r0
 8014026:	6808      	ldr	r0, [r1, #0]
 8014028:	6849      	ldr	r1, [r1, #4]
 801402a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014204 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801402e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014208 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8014032:	461d      	mov	r5, r3
 8014034:	ab0a      	add	r3, sp, #40	; 0x28
 8014036:	c303      	stmia	r3!, {r0, r1}
 8014038:	6810      	ldr	r0, [r2, #0]
 801403a:	6851      	ldr	r1, [r2, #4]
 801403c:	ab0c      	add	r3, sp, #48	; 0x30
 801403e:	c303      	stmia	r3!, {r0, r1}
 8014040:	a80a      	add	r0, sp, #40	; 0x28
 8014042:	f7f9 fdf7 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014046:	4631      	mov	r1, r6
 8014048:	a80c      	add	r0, sp, #48	; 0x30
 801404a:	f7f9 fe1b 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801404e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8014052:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014056:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801405a:	f8d8 0000 	ldr.w	r0, [r8]
 801405e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8014062:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8014066:	fb11 2103 	smlabb	r1, r1, r3, r2
 801406a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801406e:	440c      	add	r4, r1
 8014070:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8014074:	440a      	add	r2, r1
 8014076:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801407a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801407e:	4413      	add	r3, r2
 8014080:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014084:	6803      	ldr	r3, [r0, #0]
 8014086:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014088:	4798      	blx	r3
 801408a:	2dff      	cmp	r5, #255	; 0xff
 801408c:	d124      	bne.n	80140d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801408e:	f010 0f01 	tst.w	r0, #1
 8014092:	f8d8 0000 	ldr.w	r0, [r8]
 8014096:	d022      	beq.n	80140de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8014098:	2100      	movs	r1, #0
 801409a:	f8d0 c000 	ldr.w	ip, [r0]
 801409e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80140a2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80140a6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80140aa:	f04f 0e01 	mov.w	lr, #1
 80140ae:	f8cd e018 	str.w	lr, [sp, #24]
 80140b2:	f8b9 e000 	ldrh.w	lr, [r9]
 80140b6:	9503      	str	r5, [sp, #12]
 80140b8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80140bc:	b2b6      	uxth	r6, r6
 80140be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80140c2:	9102      	str	r1, [sp, #8]
 80140c4:	b2bf      	uxth	r7, r7
 80140c6:	9601      	str	r6, [sp, #4]
 80140c8:	9700      	str	r7, [sp, #0]
 80140ca:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80140ce:	4621      	mov	r1, r4
 80140d0:	47a8      	blx	r5
 80140d2:	b00e      	add	sp, #56	; 0x38
 80140d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80140d8:	f010 0f04 	tst.w	r0, #4
 80140dc:	e7d9      	b.n	8014092 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80140de:	6803      	ldr	r3, [r0, #0]
 80140e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80140e2:	4798      	blx	r3
 80140e4:	f8b9 3000 	ldrh.w	r3, [r9]
 80140e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80140ec:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80140f0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80140f4:	fb03 1202 	mla	r2, r3, r2, r1
 80140f8:	ebac 0c07 	sub.w	ip, ip, r7
 80140fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014100:	435e      	muls	r6, r3
 8014102:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8014106:	2dff      	cmp	r5, #255	; 0xff
 8014108:	eba3 0707 	sub.w	r7, r3, r7
 801410c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014110:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014114:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014118:	d049      	beq.n	80141ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801411a:	43eb      	mvns	r3, r5
 801411c:	fa1f f985 	uxth.w	r9, r5
 8014120:	b2db      	uxtb	r3, r3
 8014122:	42b0      	cmp	r0, r6
 8014124:	d266      	bcs.n	80141f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014126:	eb00 0a0e 	add.w	sl, r0, lr
 801412a:	4550      	cmp	r0, sl
 801412c:	4621      	mov	r1, r4
 801412e:	f104 0403 	add.w	r4, r4, #3
 8014132:	d25b      	bcs.n	80141ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014134:	8802      	ldrh	r2, [r0, #0]
 8014136:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801413a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801413e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8014142:	fb11 f109 	smulbb	r1, r1, r9
 8014146:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801414a:	10d5      	asrs	r5, r2, #3
 801414c:	fb08 1803 	mla	r8, r8, r3, r1
 8014150:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8014154:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014158:	fb11 f109 	smulbb	r1, r1, r9
 801415c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014160:	fb05 1503 	mla	r5, r5, r3, r1
 8014164:	00d2      	lsls	r2, r2, #3
 8014166:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801416a:	b2d2      	uxtb	r2, r2
 801416c:	fb11 f109 	smulbb	r1, r1, r9
 8014170:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014174:	fa1f f888 	uxth.w	r8, r8
 8014178:	fb02 1203 	mla	r2, r2, r3, r1
 801417c:	b292      	uxth	r2, r2
 801417e:	f108 0101 	add.w	r1, r8, #1
 8014182:	b2ad      	uxth	r5, r5
 8014184:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014188:	1c51      	adds	r1, r2, #1
 801418a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801418e:	1c69      	adds	r1, r5, #1
 8014190:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014194:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8014198:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801419c:	096d      	lsrs	r5, r5, #5
 801419e:	ea42 0208 	orr.w	r2, r2, r8
 80141a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80141a6:	432a      	orrs	r2, r5
 80141a8:	f820 2b02 	strh.w	r2, [r0], #2
 80141ac:	e7bd      	b.n	801412a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80141ae:	4a14      	ldr	r2, [pc, #80]	; (8014200 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80141b0:	42b0      	cmp	r0, r6
 80141b2:	d21f      	bcs.n	80141f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80141b4:	eb00 050e 	add.w	r5, r0, lr
 80141b8:	42a8      	cmp	r0, r5
 80141ba:	4621      	mov	r1, r4
 80141bc:	f104 0403 	add.w	r4, r4, #3
 80141c0:	d210      	bcs.n	80141e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80141c2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80141c6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80141ca:	00db      	lsls	r3, r3, #3
 80141cc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80141d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80141d4:	430b      	orrs	r3, r1
 80141d6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80141da:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80141de:	f820 3b02 	strh.w	r3, [r0], #2
 80141e2:	e7e9      	b.n	80141b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80141e4:	4438      	add	r0, r7
 80141e6:	eb01 040c 	add.w	r4, r1, ip
 80141ea:	e7e1      	b.n	80141b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80141ec:	4438      	add	r0, r7
 80141ee:	eb01 040c 	add.w	r4, r1, ip
 80141f2:	e796      	b.n	8014122 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80141f4:	4b03      	ldr	r3, [pc, #12]	; (8014204 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80141f6:	6818      	ldr	r0, [r3, #0]
 80141f8:	6803      	ldr	r3, [r0, #0]
 80141fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141fc:	4798      	blx	r3
 80141fe:	e768      	b.n	80140d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014200:	fffff800 	.word	0xfffff800
 8014204:	2000a80c 	.word	0x2000a80c
 8014208:	2000a806 	.word	0x2000a806

0801420c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801420c:	b570      	push	{r4, r5, r6, lr}
 801420e:	9c04      	ldr	r4, [sp, #16]
 8014210:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8014214:	4605      	mov	r5, r0
 8014216:	4608      	mov	r0, r1
 8014218:	4619      	mov	r1, r3
 801421a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801421e:	2a0d      	cmp	r2, #13
 8014220:	d825      	bhi.n	801426e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 8014222:	e8df f002 	tbb	[pc, r2]
 8014226:	1807      	.short	0x1807
 8014228:	1d1d1d13 	.word	0x1d1d1d13
 801422c:	1d1d1d1d 	.word	0x1d1d1d1d
 8014230:	1d1d1d1d 	.word	0x1d1d1d1d
 8014234:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8014238:	682a      	ldr	r2, [r5, #0]
 801423a:	68d6      	ldr	r6, [r2, #12]
 801423c:	4623      	mov	r3, r4
 801423e:	460a      	mov	r2, r1
 8014240:	46b4      	mov	ip, r6
 8014242:	4601      	mov	r1, r0
 8014244:	4628      	mov	r0, r5
 8014246:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801424a:	4760      	bx	ip
 801424c:	4622      	mov	r2, r4
 801424e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014252:	f7ff bd8d 	b.w	8013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014256:	4622      	mov	r2, r4
 8014258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801425c:	f7ff bede 	b.w	801401c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014260:	4b03      	ldr	r3, [pc, #12]	; (8014270 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8014262:	4a04      	ldr	r2, [pc, #16]	; (8014274 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8014264:	4804      	ldr	r0, [pc, #16]	; (8014278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8014266:	f240 3159 	movw	r1, #857	; 0x359
 801426a:	f008 fd27 	bl	801ccbc <__assert_func>
 801426e:	bd70      	pop	{r4, r5, r6, pc}
 8014270:	080213a1 	.word	0x080213a1
 8014274:	08021bad 	.word	0x08021bad
 8014278:	080212dc 	.word	0x080212dc

0801427c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801427c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014280:	b093      	sub	sp, #76	; 0x4c
 8014282:	880e      	ldrh	r6, [r1, #0]
 8014284:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014288:	4681      	mov	r9, r0
 801428a:	4688      	mov	r8, r1
 801428c:	4615      	mov	r5, r2
 801428e:	b136      	cbz	r6, 801429e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8014290:	4b70      	ldr	r3, [pc, #448]	; (8014454 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8014292:	4a71      	ldr	r2, [pc, #452]	; (8014458 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8014294:	4871      	ldr	r0, [pc, #452]	; (801445c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8014296:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801429a:	f008 fd0f 	bl	801ccbc <__assert_func>
 801429e:	6810      	ldr	r0, [r2, #0]
 80142a0:	6851      	ldr	r1, [r2, #4]
 80142a2:	4f6f      	ldr	r7, [pc, #444]	; (8014460 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80142a4:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8014464 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 80142a8:	ac0e      	add	r4, sp, #56	; 0x38
 80142aa:	c403      	stmia	r4!, {r0, r1}
 80142ac:	6818      	ldr	r0, [r3, #0]
 80142ae:	6859      	ldr	r1, [r3, #4]
 80142b0:	ac10      	add	r4, sp, #64	; 0x40
 80142b2:	c403      	stmia	r4!, {r0, r1}
 80142b4:	a80e      	add	r0, sp, #56	; 0x38
 80142b6:	f7f9 fcbd 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80142ba:	4629      	mov	r1, r5
 80142bc:	a810      	add	r0, sp, #64	; 0x40
 80142be:	f7f9 fce1 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80142c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80142c6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80142ca:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80142ce:	6838      	ldr	r0, [r7, #0]
 80142d0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80142d4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80142d8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80142dc:	4489      	add	r9, r1
 80142de:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80142e2:	440a      	add	r2, r1
 80142e4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80142e8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80142ec:	4413      	add	r3, r2
 80142ee:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80142f2:	6803      	ldr	r3, [r0, #0]
 80142f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142f6:	4798      	blx	r3
 80142f8:	f010 0f80 	tst.w	r0, #128	; 0x80
 80142fc:	6838      	ldr	r0, [r7, #0]
 80142fe:	d01d      	beq.n	801433c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 8014300:	6802      	ldr	r2, [r0, #0]
 8014302:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014306:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801430a:	210b      	movs	r1, #11
 801430c:	9107      	str	r1, [sp, #28]
 801430e:	f8bb 1000 	ldrh.w	r1, [fp]
 8014312:	9106      	str	r1, [sp, #24]
 8014314:	2101      	movs	r1, #1
 8014316:	e9cd a104 	strd	sl, r1, [sp, #16]
 801431a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801431e:	9103      	str	r1, [sp, #12]
 8014320:	b2a4      	uxth	r4, r4
 8014322:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8014326:	9100      	str	r1, [sp, #0]
 8014328:	b2ad      	uxth	r5, r5
 801432a:	9502      	str	r5, [sp, #8]
 801432c:	9401      	str	r4, [sp, #4]
 801432e:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8014330:	4649      	mov	r1, r9
 8014332:	4642      	mov	r2, r8
 8014334:	47a0      	blx	r4
 8014336:	b013      	add	sp, #76	; 0x4c
 8014338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801433c:	6803      	ldr	r3, [r0, #0]
 801433e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014340:	4798      	blx	r3
 8014342:	f8bb 3000 	ldrh.w	r3, [fp]
 8014346:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801434a:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801434e:	fb03 1202 	mla	r2, r3, r2, r1
 8014352:	435d      	muls	r5, r3
 8014354:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014358:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801435c:	920c      	str	r2, [sp, #48]	; 0x30
 801435e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8014362:	1b12      	subs	r2, r2, r4
 8014364:	920d      	str	r2, [sp, #52]	; 0x34
 8014366:	0062      	lsls	r2, r4, #1
 8014368:	1b1c      	subs	r4, r3, r4
 801436a:	0063      	lsls	r3, r4, #1
 801436c:	920a      	str	r2, [sp, #40]	; 0x28
 801436e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014370:	f04f 0e04 	mov.w	lr, #4
 8014374:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014376:	4298      	cmp	r0, r3
 8014378:	d266      	bcs.n	8014448 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801437a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801437c:	eb00 0b03 	add.w	fp, r0, r3
 8014380:	4558      	cmp	r0, fp
 8014382:	d25c      	bcs.n	801443e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8014384:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014388:	fb1e e303 	smlabb	r3, lr, r3, lr
 801438c:	f858 2003 	ldr.w	r2, [r8, r3]
 8014390:	0e11      	lsrs	r1, r2, #24
 8014392:	d012      	beq.n	80143ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8014394:	29ff      	cmp	r1, #255	; 0xff
 8014396:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801439a:	d110      	bne.n	80143be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801439c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80143a0:	d10d      	bne.n	80143be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80143a2:	0953      	lsrs	r3, r2, #5
 80143a4:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80143a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80143ac:	f027 0707 	bic.w	r7, r7, #7
 80143b0:	431f      	orrs	r7, r3
 80143b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80143b6:	433a      	orrs	r2, r7
 80143b8:	8002      	strh	r2, [r0, #0]
 80143ba:	3002      	adds	r0, #2
 80143bc:	e7e0      	b.n	8014380 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 80143be:	fb0a f101 	mul.w	r1, sl, r1
 80143c2:	8806      	ldrh	r6, [r0, #0]
 80143c4:	1c4b      	adds	r3, r1, #1
 80143c6:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80143ca:	1235      	asrs	r5, r6, #8
 80143cc:	10f4      	asrs	r4, r6, #3
 80143ce:	121b      	asrs	r3, r3, #8
 80143d0:	00f6      	lsls	r6, r6, #3
 80143d2:	b299      	uxth	r1, r3
 80143d4:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80143d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80143dc:	b2f6      	uxtb	r6, r6
 80143de:	43db      	mvns	r3, r3
 80143e0:	b2d2      	uxtb	r2, r2
 80143e2:	b2db      	uxtb	r3, r3
 80143e4:	fb1c fc01 	smulbb	ip, ip, r1
 80143e8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80143ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80143f0:	fb12 f201 	smulbb	r2, r2, r1
 80143f4:	fb05 c503 	mla	r5, r5, r3, ip
 80143f8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80143fc:	b2ff      	uxtb	r7, r7
 80143fe:	fb06 2203 	mla	r2, r6, r3, r2
 8014402:	b2ad      	uxth	r5, r5
 8014404:	fb17 f701 	smulbb	r7, r7, r1
 8014408:	b292      	uxth	r2, r2
 801440a:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801440e:	fb04 7403 	mla	r4, r4, r3, r7
 8014412:	f105 0c01 	add.w	ip, r5, #1
 8014416:	1c57      	adds	r7, r2, #1
 8014418:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801441c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014420:	b2a4      	uxth	r4, r4
 8014422:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014426:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801442a:	433d      	orrs	r5, r7
 801442c:	1c67      	adds	r7, r4, #1
 801442e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014432:	0964      	lsrs	r4, r4, #5
 8014434:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8014438:	4325      	orrs	r5, r4
 801443a:	8005      	strh	r5, [r0, #0]
 801443c:	e7bd      	b.n	80143ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801443e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014440:	4418      	add	r0, r3
 8014442:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014444:	4499      	add	r9, r3
 8014446:	e795      	b.n	8014374 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014448:	4b05      	ldr	r3, [pc, #20]	; (8014460 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801444a:	6818      	ldr	r0, [r3, #0]
 801444c:	6803      	ldr	r3, [r0, #0]
 801444e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014450:	4798      	blx	r3
 8014452:	e770      	b.n	8014336 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8014454:	0802118c 	.word	0x0802118c
 8014458:	080218eb 	.word	0x080218eb
 801445c:	080212dc 	.word	0x080212dc
 8014460:	2000a80c 	.word	0x2000a80c
 8014464:	2000a806 	.word	0x2000a806

08014468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801446c:	4614      	mov	r4, r2
 801446e:	880a      	ldrh	r2, [r1, #0]
 8014470:	b087      	sub	sp, #28
 8014472:	2a02      	cmp	r2, #2
 8014474:	4680      	mov	r8, r0
 8014476:	460d      	mov	r5, r1
 8014478:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801447c:	d006      	beq.n	801448c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801447e:	4b63      	ldr	r3, [pc, #396]	; (801460c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8014480:	4a63      	ldr	r2, [pc, #396]	; (8014610 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8014482:	4864      	ldr	r0, [pc, #400]	; (8014614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8014484:	f240 11dd 	movw	r1, #477	; 0x1dd
 8014488:	f008 fc18 	bl	801ccbc <__assert_func>
 801448c:	2e00      	cmp	r6, #0
 801448e:	f000 80b9 	beq.w	8014604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8014492:	6820      	ldr	r0, [r4, #0]
 8014494:	6861      	ldr	r1, [r4, #4]
 8014496:	af02      	add	r7, sp, #8
 8014498:	c703      	stmia	r7!, {r0, r1}
 801449a:	6818      	ldr	r0, [r3, #0]
 801449c:	6859      	ldr	r1, [r3, #4]
 801449e:	af04      	add	r7, sp, #16
 80144a0:	c703      	stmia	r7!, {r0, r1}
 80144a2:	a802      	add	r0, sp, #8
 80144a4:	f7f9 fbc6 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80144a8:	4621      	mov	r1, r4
 80144aa:	a804      	add	r0, sp, #16
 80144ac:	f7f9 fbea 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80144b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80144b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80144b8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80144bc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80144c0:	fb14 2103 	smlabb	r1, r4, r3, r2
 80144c4:	eb08 0401 	add.w	r4, r8, r1
 80144c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80144cc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80144d0:	440a      	add	r2, r1
 80144d2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80144d6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80144da:	4413      	add	r3, r2
 80144dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 80144e0:	4b4d      	ldr	r3, [pc, #308]	; (8014618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80144e2:	6818      	ldr	r0, [r3, #0]
 80144e4:	6803      	ldr	r3, [r0, #0]
 80144e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80144e8:	4798      	blx	r3
 80144ea:	4b4c      	ldr	r3, [pc, #304]	; (801461c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80144ec:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80144f0:	881a      	ldrh	r2, [r3, #0]
 80144f2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80144f6:	2eff      	cmp	r6, #255	; 0xff
 80144f8:	fb02 c101 	mla	r1, r2, r1, ip
 80144fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014500:	fb02 f207 	mul.w	r2, r2, r7
 8014504:	f105 0104 	add.w	r1, r5, #4
 8014508:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801450c:	461d      	mov	r5, r3
 801450e:	d05a      	beq.n	80145c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8014510:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8014514:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014518:	b2b6      	uxth	r6, r6
 801451a:	fa1f fe8e 	uxth.w	lr, lr
 801451e:	9301      	str	r3, [sp, #4]
 8014520:	4282      	cmp	r2, r0
 8014522:	d96a      	bls.n	80145fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8014524:	eb00 0b0a 	add.w	fp, r0, sl
 8014528:	4583      	cmp	fp, r0
 801452a:	d940      	bls.n	80145ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801452c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014530:	8805      	ldrh	r5, [r0, #0]
 8014532:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014536:	122f      	asrs	r7, r5, #8
 8014538:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801453c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014540:	fb17 f70e 	smulbb	r7, r7, lr
 8014544:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014548:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801454c:	00ed      	lsls	r5, r5, #3
 801454e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014552:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014556:	10df      	asrs	r7, r3, #3
 8014558:	b2ed      	uxtb	r5, r5
 801455a:	00db      	lsls	r3, r3, #3
 801455c:	fa1f fc8c 	uxth.w	ip, ip
 8014560:	fb19 f90e 	smulbb	r9, r9, lr
 8014564:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014568:	b2db      	uxtb	r3, r3
 801456a:	fb15 f50e 	smulbb	r5, r5, lr
 801456e:	fb07 9706 	mla	r7, r7, r6, r9
 8014572:	fb03 5306 	mla	r3, r3, r6, r5
 8014576:	f10c 0901 	add.w	r9, ip, #1
 801457a:	b29b      	uxth	r3, r3
 801457c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014580:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8014584:	f103 0c01 	add.w	ip, r3, #1
 8014588:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801458c:	b2bf      	uxth	r7, r7
 801458e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014592:	ea4c 0c09 	orr.w	ip, ip, r9
 8014596:	f107 0901 	add.w	r9, r7, #1
 801459a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801459e:	097f      	lsrs	r7, r7, #5
 80145a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80145a4:	ea4c 0c07 	orr.w	ip, ip, r7
 80145a8:	f820 cb02 	strh.w	ip, [r0], #2
 80145ac:	e7bc      	b.n	8014528 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80145ae:	9b01      	ldr	r3, [sp, #4]
 80145b0:	881b      	ldrh	r3, [r3, #0]
 80145b2:	eba3 0308 	sub.w	r3, r3, r8
 80145b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80145ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80145be:	eba3 0308 	sub.w	r3, r3, r8
 80145c2:	441c      	add	r4, r3
 80145c4:	e7ac      	b.n	8014520 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80145c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80145ca:	4282      	cmp	r2, r0
 80145cc:	d915      	bls.n	80145fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80145ce:	eb00 060a 	add.w	r6, r0, sl
 80145d2:	4286      	cmp	r6, r0
 80145d4:	d906      	bls.n	80145e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80145d6:	f814 3b01 	ldrb.w	r3, [r4], #1
 80145da:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80145de:	f820 3b02 	strh.w	r3, [r0], #2
 80145e2:	e7f6      	b.n	80145d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80145e4:	882b      	ldrh	r3, [r5, #0]
 80145e6:	eba3 0308 	sub.w	r3, r3, r8
 80145ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80145ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80145f2:	eba3 0308 	sub.w	r3, r3, r8
 80145f6:	441c      	add	r4, r3
 80145f8:	e7e7      	b.n	80145ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80145fa:	4b07      	ldr	r3, [pc, #28]	; (8014618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80145fc:	6818      	ldr	r0, [r3, #0]
 80145fe:	6803      	ldr	r3, [r0, #0]
 8014600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014602:	4798      	blx	r3
 8014604:	b007      	add	sp, #28
 8014606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801460a:	bf00      	nop
 801460c:	080210bc 	.word	0x080210bc
 8014610:	08021755 	.word	0x08021755
 8014614:	080212dc 	.word	0x080212dc
 8014618:	2000a80c 	.word	0x2000a80c
 801461c:	2000a806 	.word	0x2000a806

08014620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014624:	f8b1 9000 	ldrh.w	r9, [r1]
 8014628:	b091      	sub	sp, #68	; 0x44
 801462a:	f1b9 0f01 	cmp.w	r9, #1
 801462e:	4604      	mov	r4, r0
 8014630:	460f      	mov	r7, r1
 8014632:	4690      	mov	r8, r2
 8014634:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8014638:	d006      	beq.n	8014648 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801463a:	4b84      	ldr	r3, [pc, #528]	; (801484c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801463c:	4a84      	ldr	r2, [pc, #528]	; (8014850 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801463e:	4885      	ldr	r0, [pc, #532]	; (8014854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8014640:	f240 212b 	movw	r1, #555	; 0x22b
 8014644:	f008 fb3a 	bl	801ccbc <__assert_func>
 8014648:	2d00      	cmp	r5, #0
 801464a:	d04f      	beq.n	80146ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801464c:	6810      	ldr	r0, [r2, #0]
 801464e:	6851      	ldr	r1, [r2, #4]
 8014650:	f8df b208 	ldr.w	fp, [pc, #520]	; 801485c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8014654:	ae0c      	add	r6, sp, #48	; 0x30
 8014656:	c603      	stmia	r6!, {r0, r1}
 8014658:	6818      	ldr	r0, [r3, #0]
 801465a:	6859      	ldr	r1, [r3, #4]
 801465c:	ae0e      	add	r6, sp, #56	; 0x38
 801465e:	c603      	stmia	r6!, {r0, r1}
 8014660:	a80c      	add	r0, sp, #48	; 0x30
 8014662:	f7f9 fae7 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014666:	4641      	mov	r1, r8
 8014668:	a80e      	add	r0, sp, #56	; 0x38
 801466a:	f7f9 fb0b 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801466e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014672:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014676:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801467a:	f8db 0000 	ldr.w	r0, [fp]
 801467e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8014682:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8014686:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801468a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801468e:	440c      	add	r4, r1
 8014690:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014694:	440a      	add	r2, r1
 8014696:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801469a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801469e:	4413      	add	r3, r2
 80146a0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80146a4:	6803      	ldr	r3, [r0, #0]
 80146a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80146a8:	4798      	blx	r3
 80146aa:	f010 0f80 	tst.w	r0, #128	; 0x80
 80146ae:	f8db 0000 	ldr.w	r0, [fp]
 80146b2:	d01e      	beq.n	80146f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80146b4:	2200      	movs	r2, #0
 80146b6:	6801      	ldr	r1, [r0, #0]
 80146b8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80146bc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80146c0:	220b      	movs	r2, #11
 80146c2:	9207      	str	r2, [sp, #28]
 80146c4:	f8b8 2000 	ldrh.w	r2, [r8]
 80146c8:	9504      	str	r5, [sp, #16]
 80146ca:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80146ce:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80146d2:	9203      	str	r2, [sp, #12]
 80146d4:	fa1f f28a 	uxth.w	r2, sl
 80146d8:	9202      	str	r2, [sp, #8]
 80146da:	b2b6      	uxth	r6, r6
 80146dc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80146e0:	9200      	str	r2, [sp, #0]
 80146e2:	9601      	str	r6, [sp, #4]
 80146e4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80146e6:	463a      	mov	r2, r7
 80146e8:	4621      	mov	r1, r4
 80146ea:	47a8      	blx	r5
 80146ec:	b011      	add	sp, #68	; 0x44
 80146ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146f2:	6803      	ldr	r3, [r0, #0]
 80146f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146f6:	4798      	blx	r3
 80146f8:	f8b8 2000 	ldrh.w	r2, [r8]
 80146fc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014700:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8014704:	2dff      	cmp	r5, #255	; 0xff
 8014706:	fb02 1303 	mla	r3, r2, r3, r1
 801470a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801470e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014712:	fb0a fa02 	mul.w	sl, sl, r2
 8014716:	d062      	beq.n	80147de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8014718:	ea6f 0c05 	mvn.w	ip, r5
 801471c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014720:	930a      	str	r3, [sp, #40]	; 0x28
 8014722:	b2ad      	uxth	r5, r5
 8014724:	fa5f fc8c 	uxtb.w	ip, ip
 8014728:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801472c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801472e:	4298      	cmp	r0, r3
 8014730:	f080 8085 	bcs.w	801483e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8014734:	eb00 0b09 	add.w	fp, r0, r9
 8014738:	4558      	cmp	r0, fp
 801473a:	d246      	bcs.n	80147ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801473c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014740:	2303      	movs	r3, #3
 8014742:	2204      	movs	r2, #4
 8014744:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8014748:	eb07 0a0e 	add.w	sl, r7, lr
 801474c:	8803      	ldrh	r3, [r0, #0]
 801474e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014752:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014756:	1219      	asrs	r1, r3, #8
 8014758:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801475c:	fb18 f805 	smulbb	r8, r8, r5
 8014760:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014764:	10da      	asrs	r2, r3, #3
 8014766:	fb01 810c 	mla	r1, r1, ip, r8
 801476a:	00db      	lsls	r3, r3, #3
 801476c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014770:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014774:	b2db      	uxtb	r3, r3
 8014776:	fb18 f805 	smulbb	r8, r8, r5
 801477a:	fb1e fe05 	smulbb	lr, lr, r5
 801477e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014782:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014786:	b289      	uxth	r1, r1
 8014788:	fb02 820c 	mla	r2, r2, ip, r8
 801478c:	fb03 e30c 	mla	r3, r3, ip, lr
 8014790:	b292      	uxth	r2, r2
 8014792:	b29b      	uxth	r3, r3
 8014794:	f101 0801 	add.w	r8, r1, #1
 8014798:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801479c:	f103 0e01 	add.w	lr, r3, #1
 80147a0:	f102 0801 	add.w	r8, r2, #1
 80147a4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80147a8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80147ac:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80147b0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80147b4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80147b8:	ea4e 0101 	orr.w	r1, lr, r1
 80147bc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80147c0:	ea41 0108 	orr.w	r1, r1, r8
 80147c4:	f820 1b02 	strh.w	r1, [r0], #2
 80147c8:	e7b6      	b.n	8014738 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80147ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80147cc:	881b      	ldrh	r3, [r3, #0]
 80147ce:	1b9b      	subs	r3, r3, r6
 80147d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80147d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80147d8:	1b9b      	subs	r3, r3, r6
 80147da:	441c      	add	r4, r3
 80147dc:	e7a6      	b.n	801472c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80147de:	491e      	ldr	r1, [pc, #120]	; (8014858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80147e0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80147e4:	2203      	movs	r2, #3
 80147e6:	2504      	movs	r5, #4
 80147e8:	4550      	cmp	r0, sl
 80147ea:	d228      	bcs.n	801483e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80147ec:	eb00 0c09 	add.w	ip, r0, r9
 80147f0:	4560      	cmp	r0, ip
 80147f2:	4623      	mov	r3, r4
 80147f4:	d219      	bcs.n	801482a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80147f6:	f893 e000 	ldrb.w	lr, [r3]
 80147fa:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80147fe:	eb07 0b0e 	add.w	fp, r7, lr
 8014802:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014806:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801480a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801480e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014812:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014816:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801481a:	ea43 030b 	orr.w	r3, r3, fp
 801481e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014822:	3401      	adds	r4, #1
 8014824:	f820 3b02 	strh.w	r3, [r0], #2
 8014828:	e7e2      	b.n	80147f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801482a:	f8b8 3000 	ldrh.w	r3, [r8]
 801482e:	1b9b      	subs	r3, r3, r6
 8014830:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014834:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014838:	1b9b      	subs	r3, r3, r6
 801483a:	441c      	add	r4, r3
 801483c:	e7d4      	b.n	80147e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801483e:	4b07      	ldr	r3, [pc, #28]	; (801485c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8014840:	6818      	ldr	r0, [r3, #0]
 8014842:	6803      	ldr	r3, [r0, #0]
 8014844:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014846:	4798      	blx	r3
 8014848:	e750      	b.n	80146ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801484a:	bf00      	nop
 801484c:	0802110a 	.word	0x0802110a
 8014850:	080217de 	.word	0x080217de
 8014854:	080212dc 	.word	0x080212dc
 8014858:	fffff800 	.word	0xfffff800
 801485c:	2000a80c 	.word	0x2000a80c
 8014860:	2000a806 	.word	0x2000a806

08014864 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014864:	b430      	push	{r4, r5}
 8014866:	780d      	ldrb	r5, [r1, #0]
 8014868:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801486c:	2d01      	cmp	r5, #1
 801486e:	d00a      	beq.n	8014886 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8014870:	d305      	bcc.n	801487e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8014872:	2d02      	cmp	r5, #2
 8014874:	d10b      	bne.n	801488e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8014876:	9402      	str	r4, [sp, #8]
 8014878:	bc30      	pop	{r4, r5}
 801487a:	f7ff bdf5 	b.w	8014468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801487e:	9402      	str	r4, [sp, #8]
 8014880:	bc30      	pop	{r4, r5}
 8014882:	f7ff bcfb 	b.w	801427c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014886:	9402      	str	r4, [sp, #8]
 8014888:	bc30      	pop	{r4, r5}
 801488a:	f7ff bec9 	b.w	8014620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801488e:	bc30      	pop	{r4, r5}
 8014890:	4770      	bx	lr
	...

08014894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014898:	4604      	mov	r4, r0
 801489a:	b087      	sub	sp, #28
 801489c:	6810      	ldr	r0, [r2, #0]
 801489e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80148a2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8014adc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80148a6:	460e      	mov	r6, r1
 80148a8:	6851      	ldr	r1, [r2, #4]
 80148aa:	ad02      	add	r5, sp, #8
 80148ac:	c503      	stmia	r5!, {r0, r1}
 80148ae:	6818      	ldr	r0, [r3, #0]
 80148b0:	6859      	ldr	r1, [r3, #4]
 80148b2:	ad04      	add	r5, sp, #16
 80148b4:	4617      	mov	r7, r2
 80148b6:	c503      	stmia	r5!, {r0, r1}
 80148b8:	a802      	add	r0, sp, #8
 80148ba:	f7f9 f9bb 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80148be:	4639      	mov	r1, r7
 80148c0:	a804      	add	r0, sp, #16
 80148c2:	f7f9 f9df 	bl	800dc84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80148c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80148ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80148ce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80148d2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80148d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80148da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80148de:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80148e2:	440e      	add	r6, r1
 80148e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80148e8:	440a      	add	r2, r1
 80148ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 80148ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80148f2:	4413      	add	r3, r2
 80148f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80148f8:	4b77      	ldr	r3, [pc, #476]	; (8014ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80148fa:	6818      	ldr	r0, [r3, #0]
 80148fc:	6803      	ldr	r3, [r0, #0]
 80148fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014900:	4798      	blx	r3
 8014902:	f8b9 b000 	ldrh.w	fp, [r9]
 8014906:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801490a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801490e:	fb0b 2303 	mla	r3, fp, r3, r2
 8014912:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014916:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801491a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801491e:	fb05 f50b 	mul.w	r5, r5, fp
 8014922:	9300      	str	r3, [sp, #0]
 8014924:	d069      	beq.n	80149fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8014926:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801492a:	4558      	cmp	r0, fp
 801492c:	f080 80cc 	bcs.w	8014ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014930:	9b00      	ldr	r3, [sp, #0]
 8014932:	18c3      	adds	r3, r0, r3
 8014934:	9301      	str	r3, [sp, #4]
 8014936:	4631      	mov	r1, r6
 8014938:	9b01      	ldr	r3, [sp, #4]
 801493a:	4298      	cmp	r0, r3
 801493c:	d24f      	bcs.n	80149de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801493e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014942:	2a00      	cmp	r2, #0
 8014944:	d048      	beq.n	80149d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014946:	fb0a f202 	mul.w	r2, sl, r2
 801494a:	1c53      	adds	r3, r2, #1
 801494c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014950:	121b      	asrs	r3, r3, #8
 8014952:	d041      	beq.n	80149d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014954:	8802      	ldrh	r2, [r0, #0]
 8014956:	f8b4 c000 	ldrh.w	ip, [r4]
 801495a:	b29e      	uxth	r6, r3
 801495c:	1215      	asrs	r5, r2, #8
 801495e:	43db      	mvns	r3, r3
 8014960:	b2db      	uxtb	r3, r3
 8014962:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014966:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801496a:	fb15 f503 	smulbb	r5, r5, r3
 801496e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014972:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014976:	00d2      	lsls	r2, r2, #3
 8014978:	fb07 5706 	mla	r7, r7, r6, r5
 801497c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014980:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014984:	b2d2      	uxtb	r2, r2
 8014986:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801498a:	b2bf      	uxth	r7, r7
 801498c:	fb1e fe03 	smulbb	lr, lr, r3
 8014990:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014994:	fa5f fc8c 	uxtb.w	ip, ip
 8014998:	fb12 f203 	smulbb	r2, r2, r3
 801499c:	fb05 e506 	mla	r5, r5, r6, lr
 80149a0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80149a4:	f107 0e01 	add.w	lr, r7, #1
 80149a8:	fa1f fc8c 	uxth.w	ip, ip
 80149ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80149b0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80149b4:	f10c 0701 	add.w	r7, ip, #1
 80149b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80149bc:	b2ad      	uxth	r5, r5
 80149be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80149c2:	ea47 070e 	orr.w	r7, r7, lr
 80149c6:	f105 0e01 	add.w	lr, r5, #1
 80149ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80149ce:	096d      	lsrs	r5, r5, #5
 80149d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80149d4:	432f      	orrs	r7, r5
 80149d6:	8007      	strh	r7, [r0, #0]
 80149d8:	3002      	adds	r0, #2
 80149da:	3402      	adds	r4, #2
 80149dc:	e7ac      	b.n	8014938 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80149de:	f8b9 3000 	ldrh.w	r3, [r9]
 80149e2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80149e6:	eba3 0308 	sub.w	r3, r3, r8
 80149ea:	eba6 0608 	sub.w	r6, r6, r8
 80149ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80149f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149f6:	440e      	add	r6, r1
 80149f8:	e797      	b.n	801492a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80149fa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80149fe:	42a8      	cmp	r0, r5
 8014a00:	d262      	bcs.n	8014ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014a02:	9b00      	ldr	r3, [sp, #0]
 8014a04:	4631      	mov	r1, r6
 8014a06:	eb00 0b03 	add.w	fp, r0, r3
 8014a0a:	4558      	cmp	r0, fp
 8014a0c:	d24e      	bcs.n	8014aac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8014a0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014a12:	b12b      	cbz	r3, 8014a20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014a14:	2bff      	cmp	r3, #255	; 0xff
 8014a16:	f8b4 e000 	ldrh.w	lr, [r4]
 8014a1a:	d104      	bne.n	8014a26 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8014a1c:	f8a0 e000 	strh.w	lr, [r0]
 8014a20:	3002      	adds	r0, #2
 8014a22:	3402      	adds	r4, #2
 8014a24:	e7f1      	b.n	8014a0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8014a26:	8802      	ldrh	r2, [r0, #0]
 8014a28:	b29f      	uxth	r7, r3
 8014a2a:	1216      	asrs	r6, r2, #8
 8014a2c:	43db      	mvns	r3, r3
 8014a2e:	b2db      	uxtb	r3, r3
 8014a30:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014a34:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014a38:	fb16 f603 	smulbb	r6, r6, r3
 8014a3c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8014a40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a44:	00d2      	lsls	r2, r2, #3
 8014a46:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014a4a:	b2d2      	uxtb	r2, r2
 8014a4c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014a50:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014a54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014a58:	fb1a fa03 	smulbb	sl, sl, r3
 8014a5c:	fa1f fc8c 	uxth.w	ip, ip
 8014a60:	fb12 f303 	smulbb	r3, r2, r3
 8014a64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014a68:	fa5f fe8e 	uxtb.w	lr, lr
 8014a6c:	fb06 a607 	mla	r6, r6, r7, sl
 8014a70:	f10c 0201 	add.w	r2, ip, #1
 8014a74:	fb0e 3307 	mla	r3, lr, r7, r3
 8014a78:	b2b6      	uxth	r6, r6
 8014a7a:	b29b      	uxth	r3, r3
 8014a7c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014a80:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8014a84:	f106 0a01 	add.w	sl, r6, #1
 8014a88:	f103 0c01 	add.w	ip, r3, #1
 8014a8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014a90:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014a94:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014a98:	0976      	lsrs	r6, r6, #5
 8014a9a:	ea4c 0c02 	orr.w	ip, ip, r2
 8014a9e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014aa2:	ea4c 0c06 	orr.w	ip, ip, r6
 8014aa6:	f8a0 c000 	strh.w	ip, [r0]
 8014aaa:	e7b9      	b.n	8014a20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014aac:	f8b9 3000 	ldrh.w	r3, [r9]
 8014ab0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014ab4:	eba3 0308 	sub.w	r3, r3, r8
 8014ab8:	eba6 0608 	sub.w	r6, r6, r8
 8014abc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014ac0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014ac4:	440e      	add	r6, r1
 8014ac6:	e79a      	b.n	80149fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8014ac8:	4b03      	ldr	r3, [pc, #12]	; (8014ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014aca:	6818      	ldr	r0, [r3, #0]
 8014acc:	6803      	ldr	r3, [r0, #0]
 8014ace:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014ad0:	4798      	blx	r3
 8014ad2:	b007      	add	sp, #28
 8014ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ad8:	2000a80c 	.word	0x2000a80c
 8014adc:	2000a806 	.word	0x2000a806

08014ae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ae4:	b089      	sub	sp, #36	; 0x24
 8014ae6:	4682      	mov	sl, r0
 8014ae8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8014aec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014aee:	460f      	mov	r7, r1
 8014af0:	4691      	mov	r9, r2
 8014af2:	4698      	mov	r8, r3
 8014af4:	2e00      	cmp	r6, #0
 8014af6:	d03d      	beq.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014af8:	4608      	mov	r0, r1
 8014afa:	f7fb ff7d 	bl	80109f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014afe:	4605      	mov	r5, r0
 8014b00:	4638      	mov	r0, r7
 8014b02:	f7fb ffbd 	bl	8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014b06:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014b0a:	4638      	mov	r0, r7
 8014b0c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8014b10:	f8ad 500c 	strh.w	r5, [sp, #12]
 8014b14:	f8ad 800a 	strh.w	r8, [sp, #10]
 8014b18:	f7fc f88a 	bl	8010c30 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014b1c:	4605      	mov	r5, r0
 8014b1e:	4638      	mov	r0, r7
 8014b20:	f7fc f8b8 	bl	8010c94 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8014b24:	4681      	mov	r9, r0
 8014b26:	4638      	mov	r0, r7
 8014b28:	f7fc f90c 	bl	8010d44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014b2c:	280b      	cmp	r0, #11
 8014b2e:	f200 816f 	bhi.w	8014e10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8014b32:	e8df f010 	tbh	[pc, r0, lsl #1]
 8014b36:	00c3      	.short	0x00c3
 8014b38:	000c00b4 	.word	0x000c00b4
 8014b3c:	016d016d 	.word	0x016d016d
 8014b40:	016d016d 	.word	0x016d016d
 8014b44:	016d016d 	.word	0x016d016d
 8014b48:	016d016d 	.word	0x016d016d
 8014b4c:	00bb      	.short	0x00bb
 8014b4e:	4bb3      	ldr	r3, [pc, #716]	; (8014e1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8014b50:	6818      	ldr	r0, [r3, #0]
 8014b52:	6803      	ldr	r3, [r0, #0]
 8014b54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b56:	4798      	blx	r3
 8014b58:	2eff      	cmp	r6, #255	; 0xff
 8014b5a:	d121      	bne.n	8014ba0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8014b5c:	0683      	lsls	r3, r0, #26
 8014b5e:	d41f      	bmi.n	8014ba0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8014b60:	4638      	mov	r0, r7
 8014b62:	f7fc f82b 	bl	8010bbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014b66:	b940      	cbnz	r0, 8014b7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8014b68:	4623      	mov	r3, r4
 8014b6a:	aa02      	add	r2, sp, #8
 8014b6c:	4629      	mov	r1, r5
 8014b6e:	4650      	mov	r0, sl
 8014b70:	f7ff f9e4 	bl	8013f3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014b74:	b009      	add	sp, #36	; 0x24
 8014b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b7a:	f10d 0818 	add.w	r8, sp, #24
 8014b7e:	4639      	mov	r1, r7
 8014b80:	4640      	mov	r0, r8
 8014b82:	f7fb ffc1 	bl	8010b08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014b86:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014b8a:	af04      	add	r7, sp, #16
 8014b8c:	e887 0003 	stmia.w	r7, {r0, r1}
 8014b90:	4638      	mov	r0, r7
 8014b92:	4621      	mov	r1, r4
 8014b94:	f7f5 fc1c 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 8014b98:	4638      	mov	r0, r7
 8014b9a:	f7f5 fc5c 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b9e:	b130      	cbz	r0, 8014bae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8014ba0:	4633      	mov	r3, r6
 8014ba2:	4622      	mov	r2, r4
 8014ba4:	a902      	add	r1, sp, #8
 8014ba6:	4628      	mov	r0, r5
 8014ba8:	f7ff f8e2 	bl	8013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014bac:	e7e2      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014bae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014bb2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014bb6:	4293      	cmp	r3, r2
 8014bb8:	dd12      	ble.n	8014be0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8014bba:	1a9b      	subs	r3, r3, r2
 8014bbc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014bc0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014bc4:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014bc8:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014bcc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014bd0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014bd4:	4642      	mov	r2, r8
 8014bd6:	4633      	mov	r3, r6
 8014bd8:	a902      	add	r1, sp, #8
 8014bda:	4628      	mov	r0, r5
 8014bdc:	f7ff f8c8 	bl	8013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014be0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014be4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014be8:	4293      	cmp	r3, r2
 8014bea:	dd12      	ble.n	8014c12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8014bec:	1a9b      	subs	r3, r3, r2
 8014bee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014bf2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014bf6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014bfa:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014bfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014c02:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014c06:	23ff      	movs	r3, #255	; 0xff
 8014c08:	4642      	mov	r2, r8
 8014c0a:	a902      	add	r1, sp, #8
 8014c0c:	4628      	mov	r0, r5
 8014c0e:	f7ff f8af 	bl	8013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014c12:	463b      	mov	r3, r7
 8014c14:	aa02      	add	r2, sp, #8
 8014c16:	4629      	mov	r1, r5
 8014c18:	4650      	mov	r0, sl
 8014c1a:	f7ff f98f 	bl	8013f3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014c1e:	88a2      	ldrh	r2, [r4, #4]
 8014c20:	8823      	ldrh	r3, [r4, #0]
 8014c22:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014c26:	4413      	add	r3, r2
 8014c28:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014c2c:	440a      	add	r2, r1
 8014c2e:	b29b      	uxth	r3, r3
 8014c30:	b292      	uxth	r2, r2
 8014c32:	b211      	sxth	r1, r2
 8014c34:	b218      	sxth	r0, r3
 8014c36:	4288      	cmp	r0, r1
 8014c38:	dd12      	ble.n	8014c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8014c3a:	1a9b      	subs	r3, r3, r2
 8014c3c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014c40:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8014c44:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014c48:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014c4c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014c50:	23ff      	movs	r3, #255	; 0xff
 8014c52:	4642      	mov	r2, r8
 8014c54:	a902      	add	r1, sp, #8
 8014c56:	4628      	mov	r0, r5
 8014c58:	f8ad 601a 	strh.w	r6, [sp, #26]
 8014c5c:	f7ff f888 	bl	8013d70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014c60:	88e2      	ldrh	r2, [r4, #6]
 8014c62:	8863      	ldrh	r3, [r4, #2]
 8014c64:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014c68:	4413      	add	r3, r2
 8014c6a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014c6e:	440a      	add	r2, r1
 8014c70:	b29b      	uxth	r3, r3
 8014c72:	b292      	uxth	r2, r2
 8014c74:	b211      	sxth	r1, r2
 8014c76:	b218      	sxth	r0, r3
 8014c78:	4288      	cmp	r0, r1
 8014c7a:	f77f af7b 	ble.w	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014c7e:	1a9b      	subs	r3, r3, r2
 8014c80:	f9b4 6000 	ldrsh.w	r6, [r4]
 8014c84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014c88:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014c8c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014c90:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014c94:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014c98:	23ff      	movs	r3, #255	; 0xff
 8014c9a:	4642      	mov	r2, r8
 8014c9c:	e782      	b.n	8014ba4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8014c9e:	4633      	mov	r3, r6
 8014ca0:	4622      	mov	r2, r4
 8014ca2:	a902      	add	r1, sp, #8
 8014ca4:	4628      	mov	r0, r5
 8014ca6:	f7ff f9b9 	bl	801401c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014caa:	e763      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014cac:	9600      	str	r6, [sp, #0]
 8014cae:	4623      	mov	r3, r4
 8014cb0:	aa02      	add	r2, sp, #8
 8014cb2:	4649      	mov	r1, r9
 8014cb4:	4628      	mov	r0, r5
 8014cb6:	f7ff fdd5 	bl	8014864 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8014cba:	e75b      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014cbc:	4638      	mov	r0, r7
 8014cbe:	f7fb ff7d 	bl	8010bbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014cc2:	b950      	cbnz	r0, 8014cda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8014cc4:	e9cd 6000 	strd	r6, r0, [sp]
 8014cc8:	f8da 3000 	ldr.w	r3, [sl]
 8014ccc:	aa02      	add	r2, sp, #8
 8014cce:	68de      	ldr	r6, [r3, #12]
 8014cd0:	4629      	mov	r1, r5
 8014cd2:	4623      	mov	r3, r4
 8014cd4:	4650      	mov	r0, sl
 8014cd6:	47b0      	blx	r6
 8014cd8:	e74c      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014cda:	f10d 0818 	add.w	r8, sp, #24
 8014cde:	4639      	mov	r1, r7
 8014ce0:	4640      	mov	r0, r8
 8014ce2:	f7fb ff11 	bl	8010b08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014ce6:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014cea:	af04      	add	r7, sp, #16
 8014cec:	e887 0003 	stmia.w	r7, {r0, r1}
 8014cf0:	4638      	mov	r0, r7
 8014cf2:	4621      	mov	r1, r4
 8014cf4:	f7f5 fb6c 	bl	800a3d0 <_ZN8touchgfx4RectaNERKS0_>
 8014cf8:	4638      	mov	r0, r7
 8014cfa:	f7f5 fbac 	bl	800a456 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014cfe:	b138      	cbz	r0, 8014d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8014d00:	9600      	str	r6, [sp, #0]
 8014d02:	4623      	mov	r3, r4
 8014d04:	aa02      	add	r2, sp, #8
 8014d06:	4649      	mov	r1, r9
 8014d08:	4628      	mov	r0, r5
 8014d0a:	f7ff fdc3 	bl	8014894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014d0e:	e731      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014d10:	e9cd 6000 	strd	r6, r0, [sp]
 8014d14:	f8da 3000 	ldr.w	r3, [sl]
 8014d18:	aa02      	add	r2, sp, #8
 8014d1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8014d1e:	4629      	mov	r1, r5
 8014d20:	463b      	mov	r3, r7
 8014d22:	4650      	mov	r0, sl
 8014d24:	47d8      	blx	fp
 8014d26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014d2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014d2e:	4293      	cmp	r3, r2
 8014d30:	dd13      	ble.n	8014d5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8014d32:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014d36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014d3a:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014d3e:	1a9b      	subs	r3, r3, r2
 8014d40:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014d44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014d48:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014d4c:	9600      	str	r6, [sp, #0]
 8014d4e:	4643      	mov	r3, r8
 8014d50:	aa02      	add	r2, sp, #8
 8014d52:	4649      	mov	r1, r9
 8014d54:	4628      	mov	r0, r5
 8014d56:	f7ff fd9d 	bl	8014894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014d5a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014d5e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014d62:	4293      	cmp	r3, r2
 8014d64:	dd13      	ble.n	8014d8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8014d66:	1a9b      	subs	r3, r3, r2
 8014d68:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014d6c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014d70:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014d74:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014d78:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014d7c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014d80:	9600      	str	r6, [sp, #0]
 8014d82:	4643      	mov	r3, r8
 8014d84:	aa02      	add	r2, sp, #8
 8014d86:	4649      	mov	r1, r9
 8014d88:	4628      	mov	r0, r5
 8014d8a:	f7ff fd83 	bl	8014894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014d8e:	88a2      	ldrh	r2, [r4, #4]
 8014d90:	8823      	ldrh	r3, [r4, #0]
 8014d92:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014d96:	4413      	add	r3, r2
 8014d98:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014d9c:	440a      	add	r2, r1
 8014d9e:	b29b      	uxth	r3, r3
 8014da0:	b292      	uxth	r2, r2
 8014da2:	b211      	sxth	r1, r2
 8014da4:	b218      	sxth	r0, r3
 8014da6:	4288      	cmp	r0, r1
 8014da8:	dd13      	ble.n	8014dd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8014daa:	1a9b      	subs	r3, r3, r2
 8014dac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014db0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8014db4:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014db8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014dbc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014dc0:	9600      	str	r6, [sp, #0]
 8014dc2:	4643      	mov	r3, r8
 8014dc4:	aa02      	add	r2, sp, #8
 8014dc6:	4649      	mov	r1, r9
 8014dc8:	4628      	mov	r0, r5
 8014dca:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014dce:	f7ff fd61 	bl	8014894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014dd2:	88e2      	ldrh	r2, [r4, #6]
 8014dd4:	8863      	ldrh	r3, [r4, #2]
 8014dd6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014dda:	4413      	add	r3, r2
 8014ddc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014de0:	440a      	add	r2, r1
 8014de2:	b29b      	uxth	r3, r3
 8014de4:	b292      	uxth	r2, r2
 8014de6:	b211      	sxth	r1, r2
 8014de8:	b218      	sxth	r0, r3
 8014dea:	4288      	cmp	r0, r1
 8014dec:	f77f aec2 	ble.w	8014b74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014df0:	f9b4 7000 	ldrsh.w	r7, [r4]
 8014df4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014df8:	f8ad 7018 	strh.w	r7, [sp, #24]
 8014dfc:	1a9b      	subs	r3, r3, r2
 8014dfe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014e02:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014e06:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014e0a:	9600      	str	r6, [sp, #0]
 8014e0c:	4643      	mov	r3, r8
 8014e0e:	e779      	b.n	8014d04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8014e10:	4b03      	ldr	r3, [pc, #12]	; (8014e20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8014e12:	4a04      	ldr	r2, [pc, #16]	; (8014e24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8014e14:	4804      	ldr	r0, [pc, #16]	; (8014e28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8014e16:	21b0      	movs	r1, #176	; 0xb0
 8014e18:	f007 ff50 	bl	801ccbc <__assert_func>
 8014e1c:	2000a80c 	.word	0x2000a80c
 8014e20:	08021158 	.word	0x08021158
 8014e24:	08021867 	.word	0x08021867
 8014e28:	080212dc 	.word	0x080212dc

08014e2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8014e2c:	b508      	push	{r3, lr}
 8014e2e:	b180      	cbz	r0, 8014e52 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8014e30:	2902      	cmp	r1, #2
 8014e32:	d014      	beq.n	8014e5e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8014e34:	2903      	cmp	r1, #3
 8014e36:	d01d      	beq.n	8014e74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014e38:	2901      	cmp	r1, #1
 8014e3a:	d101      	bne.n	8014e40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014e3c:	2001      	movs	r0, #1
 8014e3e:	bd08      	pop	{r3, pc}
 8014e40:	4b0e      	ldr	r3, [pc, #56]	; (8014e7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014e42:	8818      	ldrh	r0, [r3, #0]
 8014e44:	b990      	cbnz	r0, 8014e6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014e46:	4b0e      	ldr	r3, [pc, #56]	; (8014e80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8014e48:	4a0e      	ldr	r2, [pc, #56]	; (8014e84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8014e4a:	480f      	ldr	r0, [pc, #60]	; (8014e88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8014e4c:	2153      	movs	r1, #83	; 0x53
 8014e4e:	f007 ff35 	bl	801ccbc <__assert_func>
 8014e52:	2902      	cmp	r1, #2
 8014e54:	d00e      	beq.n	8014e74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014e56:	2903      	cmp	r1, #3
 8014e58:	d0f2      	beq.n	8014e40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014e5a:	2901      	cmp	r1, #1
 8014e5c:	d1ee      	bne.n	8014e3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8014e5e:	4b07      	ldr	r3, [pc, #28]	; (8014e7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014e60:	8818      	ldrh	r0, [r3, #0]
 8014e62:	2800      	cmp	r0, #0
 8014e64:	d0ef      	beq.n	8014e46 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8014e66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014e6a:	e7e8      	b.n	8014e3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014e6c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014e70:	4240      	negs	r0, r0
 8014e72:	e7e4      	b.n	8014e3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014e74:	f04f 30ff 	mov.w	r0, #4294967295
 8014e78:	e7e1      	b.n	8014e3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014e7a:	bf00      	nop
 8014e7c:	2000a806 	.word	0x2000a806
 8014e80:	080213d2 	.word	0x080213d2
 8014e84:	080219e4 	.word	0x080219e4
 8014e88:	08021414 	.word	0x08021414

08014e8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8014e8c:	b508      	push	{r3, lr}
 8014e8e:	b180      	cbz	r0, 8014eb2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8014e90:	2902      	cmp	r1, #2
 8014e92:	d014      	beq.n	8014ebe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8014e94:	2903      	cmp	r1, #3
 8014e96:	d018      	beq.n	8014eca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014e98:	2901      	cmp	r1, #1
 8014e9a:	d001      	beq.n	8014ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014e9c:	2001      	movs	r0, #1
 8014e9e:	e013      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014ea0:	4b0e      	ldr	r3, [pc, #56]	; (8014edc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014ea2:	8818      	ldrh	r0, [r3, #0]
 8014ea4:	b970      	cbnz	r0, 8014ec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8014ea6:	4b0e      	ldr	r3, [pc, #56]	; (8014ee0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8014ea8:	4a0e      	ldr	r2, [pc, #56]	; (8014ee4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8014eaa:	480f      	ldr	r0, [pc, #60]	; (8014ee8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8014eac:	2153      	movs	r1, #83	; 0x53
 8014eae:	f007 ff05 	bl	801ccbc <__assert_func>
 8014eb2:	2902      	cmp	r1, #2
 8014eb4:	d009      	beq.n	8014eca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014eb6:	2903      	cmp	r1, #3
 8014eb8:	d0f0      	beq.n	8014e9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8014eba:	2901      	cmp	r1, #1
 8014ebc:	d1f0      	bne.n	8014ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014ebe:	f04f 30ff 	mov.w	r0, #4294967295
 8014ec2:	e001      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014ec4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014ec8:	bd08      	pop	{r3, pc}
 8014eca:	4b04      	ldr	r3, [pc, #16]	; (8014edc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014ecc:	8818      	ldrh	r0, [r3, #0]
 8014ece:	2800      	cmp	r0, #0
 8014ed0:	d0e9      	beq.n	8014ea6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8014ed2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014ed6:	4240      	negs	r0, r0
 8014ed8:	e7f6      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014eda:	bf00      	nop
 8014edc:	2000a806 	.word	0x2000a806
 8014ee0:	080213d2 	.word	0x080213d2
 8014ee4:	080219e4 	.word	0x080219e4
 8014ee8:	08021414 	.word	0x08021414

08014eec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8014eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ef0:	b099      	sub	sp, #100	; 0x64
 8014ef2:	910b      	str	r1, [sp, #44]	; 0x2c
 8014ef4:	a914      	add	r1, sp, #80	; 0x50
 8014ef6:	e881 000c 	stmia.w	r1, {r2, r3}
 8014efa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8014efe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8014f02:	930a      	str	r3, [sp, #40]	; 0x28
 8014f04:	f891 900d 	ldrb.w	r9, [r1, #13]
 8014f08:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8014f0c:	9311      	str	r3, [sp, #68]	; 0x44
 8014f0e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8014f12:	930c      	str	r3, [sp, #48]	; 0x30
 8014f14:	7988      	ldrb	r0, [r1, #6]
 8014f16:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8014f1a:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8014f1e:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8014f22:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8014f26:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8014f2a:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8014f2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014f32:	4303      	orrs	r3, r0
 8014f34:	9309      	str	r3, [sp, #36]	; 0x24
 8014f36:	f000 81a1 	beq.w	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014f3a:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8014f3e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014f42:	f891 9007 	ldrb.w	r9, [r1, #7]
 8014f46:	ea59 0903 	orrs.w	r9, r9, r3
 8014f4a:	f000 8197 	beq.w	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014f4e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8014f52:	b29b      	uxth	r3, r3
 8014f54:	2e00      	cmp	r6, #0
 8014f56:	f000 813a 	beq.w	80151ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8014f5a:	1af6      	subs	r6, r6, r3
 8014f5c:	b2b6      	uxth	r6, r6
 8014f5e:	0433      	lsls	r3, r6, #16
 8014f60:	d502      	bpl.n	8014f68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8014f62:	1bad      	subs	r5, r5, r6
 8014f64:	b22d      	sxth	r5, r5
 8014f66:	2600      	movs	r6, #0
 8014f68:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014f6c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8014f70:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014f74:	428d      	cmp	r5, r1
 8014f76:	b28b      	uxth	r3, r1
 8014f78:	bfbf      	itttt	lt
 8014f7a:	18f6      	addlt	r6, r6, r3
 8014f7c:	1b75      	sublt	r5, r6, r5
 8014f7e:	b2ae      	uxthlt	r6, r5
 8014f80:	460d      	movlt	r5, r1
 8014f82:	8891      	ldrh	r1, [r2, #4]
 8014f84:	440b      	add	r3, r1
 8014f86:	b21b      	sxth	r3, r3
 8014f88:	9310      	str	r3, [sp, #64]	; 0x40
 8014f8a:	88d3      	ldrh	r3, [r2, #6]
 8014f8c:	8852      	ldrh	r2, [r2, #2]
 8014f8e:	4413      	add	r3, r2
 8014f90:	b21b      	sxth	r3, r3
 8014f92:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f94:	4bbc      	ldr	r3, [pc, #752]	; (8015288 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014f96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f98:	f893 b000 	ldrb.w	fp, [r3]
 8014f9c:	f10b 3cff 	add.w	ip, fp, #4294967295
 8014fa0:	f1dc 0300 	rsbs	r3, ip, #0
 8014fa4:	eb43 030c 	adc.w	r3, r3, ip
 8014fa8:	930e      	str	r3, [sp, #56]	; 0x38
 8014faa:	4629      	mov	r1, r5
 8014fac:	4653      	mov	r3, sl
 8014fae:	a814      	add	r0, sp, #80	; 0x50
 8014fb0:	f7f8 fcc5 	bl	800d93e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8014fb4:	4629      	mov	r1, r5
 8014fb6:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8014fba:	4653      	mov	r3, sl
 8014fbc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014fbe:	a814      	add	r0, sp, #80	; 0x50
 8014fc0:	f7f8 fcd5 	bl	800d96e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014fc4:	a918      	add	r1, sp, #96	; 0x60
 8014fc6:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014fca:	a817      	add	r0, sp, #92	; 0x5c
 8014fcc:	f7f8 fdf0 	bl	800dbb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8014fd0:	f1ba 0f00 	cmp.w	sl, #0
 8014fd4:	f040 80fe 	bne.w	80151d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8014fd8:	f1bb 0f01 	cmp.w	fp, #1
 8014fdc:	f040 8102 	bne.w	80151e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8014fe0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014fe2:	b153      	cbz	r3, 8014ffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8014fe4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014fe6:	2408      	movs	r4, #8
 8014fe8:	fb94 f3f8 	sdiv	r3, r4, r8
 8014fec:	1e5c      	subs	r4, r3, #1
 8014fee:	4414      	add	r4, r2
 8014ff0:	fb94 f4f3 	sdiv	r4, r4, r3
 8014ff4:	fb14 f403 	smulbb	r4, r4, r3
 8014ff8:	b2a4      	uxth	r4, r4
 8014ffa:	b906      	cbnz	r6, 8014ffe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8014ffc:	b16f      	cbz	r7, 801501a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8014ffe:	fb07 6304 	mla	r3, r7, r4, r6
 8015002:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015004:	fb08 f303 	mul.w	r3, r8, r3
 8015008:	463a      	mov	r2, r7
 801500a:	f003 0707 	and.w	r7, r3, #7
 801500e:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8015012:	9328      	str	r3, [sp, #160]	; 0xa0
 8015014:	eba9 0302 	sub.w	r3, r9, r2
 8015018:	930d      	str	r3, [sp, #52]	; 0x34
 801501a:	4651      	mov	r1, sl
 801501c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801501e:	f7ff ff05 	bl	8014e2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8015022:	4651      	mov	r1, sl
 8015024:	4681      	mov	r9, r0
 8015026:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015028:	f7ff ff30 	bl	8014e8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801502c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801502e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015030:	eba3 0a02 	sub.w	sl, r3, r2
 8015034:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015036:	459a      	cmp	sl, r3
 8015038:	bfa8      	it	ge
 801503a:	469a      	movge	sl, r3
 801503c:	f1ba 0f00 	cmp.w	sl, #0
 8015040:	4683      	mov	fp, r0
 8015042:	f340 811b 	ble.w	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015046:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015048:	1bad      	subs	r5, r5, r6
 801504a:	1b5d      	subs	r5, r3, r5
 801504c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801504e:	429d      	cmp	r5, r3
 8015050:	bfd4      	ite	le
 8015052:	ebc6 0605 	rsble	r6, r6, r5
 8015056:	ebc6 0603 	rsbgt	r6, r6, r3
 801505a:	2e00      	cmp	r6, #0
 801505c:	f340 810e 	ble.w	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015060:	1ba4      	subs	r4, r4, r6
 8015062:	fb08 f304 	mul.w	r3, r8, r4
 8015066:	930f      	str	r3, [sp, #60]	; 0x3c
 8015068:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801506a:	2b00      	cmp	r3, #0
 801506c:	f040 8114 	bne.w	8015298 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8015070:	4b86      	ldr	r3, [pc, #536]	; (801528c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015072:	6818      	ldr	r0, [r3, #0]
 8015074:	6803      	ldr	r3, [r0, #0]
 8015076:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015078:	4798      	blx	r3
 801507a:	2301      	movs	r3, #1
 801507c:	fa03 f308 	lsl.w	r3, r3, r8
 8015080:	4a83      	ldr	r2, [pc, #524]	; (8015290 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8015082:	3b01      	subs	r3, #1
 8015084:	b2db      	uxtb	r3, r3
 8015086:	8811      	ldrh	r1, [r2, #0]
 8015088:	930e      	str	r3, [sp, #56]	; 0x38
 801508a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801508e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015092:	fb01 2303 	mla	r3, r1, r3, r2
 8015096:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801509a:	930a      	str	r3, [sp, #40]	; 0x28
 801509c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801509e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80150a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80150a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80150a6:	0a19      	lsrs	r1, r3, #8
 80150a8:	b2cb      	uxtb	r3, r1
 80150aa:	9312      	str	r3, [sp, #72]	; 0x48
 80150ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80150ae:	b2db      	uxtb	r3, r3
 80150b0:	9311      	str	r3, [sp, #68]	; 0x44
 80150b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80150b4:	095a      	lsrs	r2, r3, #5
 80150b6:	4b77      	ldr	r3, [pc, #476]	; (8015294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80150b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80150bc:	400b      	ands	r3, r1
 80150be:	4313      	orrs	r3, r2
 80150c0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80150c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80150c6:	4313      	orrs	r3, r2
 80150c8:	b29b      	uxth	r3, r3
 80150ca:	9310      	str	r3, [sp, #64]	; 0x40
 80150cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80150ce:	781a      	ldrb	r2, [r3, #0]
 80150d0:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80150d4:	413a      	asrs	r2, r7
 80150d6:	fb06 b919 	mls	r9, r6, r9, fp
 80150da:	fb03 fb06 	mul.w	fp, r3, r6
 80150de:	b2d2      	uxtb	r2, r2
 80150e0:	930d      	str	r3, [sp, #52]	; 0x34
 80150e2:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80150e6:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80150ea:	f0c0 80ea 	bcc.w	80152c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 80150ee:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80150f2:	46b6      	mov	lr, r6
 80150f4:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80150f8:	f0c0 80d2 	bcc.w	80152a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80150fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150fe:	4013      	ands	r3, r2
 8015100:	d055      	beq.n	80151ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8015102:	20ff      	movs	r0, #255	; 0xff
 8015104:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015106:	fb90 f1f1 	sdiv	r1, r0, r1
 801510a:	434b      	muls	r3, r1
 801510c:	2bfe      	cmp	r3, #254	; 0xfe
 801510e:	dd03      	ble.n	8015118 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8015110:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015112:	4281      	cmp	r1, r0
 8015114:	f000 80c2 	beq.w	801529c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8015118:	990c      	ldr	r1, [sp, #48]	; 0x30
 801511a:	f8bc 4000 	ldrh.w	r4, [ip]
 801511e:	fb11 f303 	smulbb	r3, r1, r3
 8015122:	b29b      	uxth	r3, r3
 8015124:	1c59      	adds	r1, r3, #1
 8015126:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801512a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801512e:	b29d      	uxth	r5, r3
 8015130:	43db      	mvns	r3, r3
 8015132:	b2db      	uxtb	r3, r3
 8015134:	9309      	str	r3, [sp, #36]	; 0x24
 8015136:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015138:	1220      	asrs	r0, r4, #8
 801513a:	fb13 f905 	smulbb	r9, r3, r5
 801513e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015144:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015148:	fb00 9003 	mla	r0, r0, r3, r9
 801514c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801514e:	10e1      	asrs	r1, r4, #3
 8015150:	fb13 f905 	smulbb	r9, r3, r5
 8015154:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801515a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801515e:	fb01 9103 	mla	r1, r1, r3, r9
 8015162:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015164:	00e4      	lsls	r4, r4, #3
 8015166:	fb13 f505 	smulbb	r5, r3, r5
 801516a:	b2e4      	uxtb	r4, r4
 801516c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801516e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015172:	fb04 5403 	mla	r4, r4, r3, r5
 8015176:	b280      	uxth	r0, r0
 8015178:	b2a4      	uxth	r4, r4
 801517a:	1c43      	adds	r3, r0, #1
 801517c:	f104 0901 	add.w	r9, r4, #1
 8015180:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015184:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8015188:	b289      	uxth	r1, r1
 801518a:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801518e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015192:	ea49 0000 	orr.w	r0, r9, r0
 8015196:	f101 0901 	add.w	r9, r1, #1
 801519a:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801519e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80151a2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80151a6:	ea40 0009 	orr.w	r0, r0, r9
 80151aa:	f8ac 0000 	strh.w	r0, [ip]
 80151ae:	4447      	add	r7, r8
 80151b0:	b2bf      	uxth	r7, r7
 80151b2:	2f07      	cmp	r7, #7
 80151b4:	bf81      	itttt	hi
 80151b6:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80151b8:	785a      	ldrbhi	r2, [r3, #1]
 80151ba:	3301      	addhi	r3, #1
 80151bc:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80151be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80151c0:	bf9a      	itte	ls
 80151c2:	fa42 f208 	asrls.w	r2, r2, r8
 80151c6:	b2d2      	uxtbls	r2, r2
 80151c8:	2700      	movhi	r7, #0
 80151ca:	449c      	add	ip, r3
 80151cc:	e792      	b.n	80150f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80151ce:	441d      	add	r5, r3
 80151d0:	b22d      	sxth	r5, r5
 80151d2:	e6c9      	b.n	8014f68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80151d4:	f1ba 0f01 	cmp.w	sl, #1
 80151d8:	f47f af02 	bne.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80151dc:	f1bb 0f01 	cmp.w	fp, #1
 80151e0:	f47f aefe 	bne.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80151e4:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801528c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80151e8:	f8db 0000 	ldr.w	r0, [fp]
 80151ec:	6803      	ldr	r3, [r0, #0]
 80151ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80151f0:	4798      	blx	r3
 80151f2:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80151f6:	465a      	mov	r2, fp
 80151f8:	d006      	beq.n	8015208 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 80151fa:	f1b8 0f04 	cmp.w	r8, #4
 80151fe:	d140      	bne.n	8015282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015200:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015202:	3300      	adds	r3, #0
 8015204:	bf18      	it	ne
 8015206:	2301      	movne	r3, #1
 8015208:	0580      	lsls	r0, r0, #22
 801520a:	d563      	bpl.n	80152d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801520c:	f1b8 0f08 	cmp.w	r8, #8
 8015210:	d160      	bne.n	80152d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8015212:	2b00      	cmp	r3, #0
 8015214:	bf0c      	ite	eq
 8015216:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801521a:	f44f 7180 	movne.w	r1, #256	; 0x100
 801521e:	2e00      	cmp	r6, #0
 8015220:	f47f aede 	bne.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015224:	2f00      	cmp	r7, #0
 8015226:	f47f aedb 	bne.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801522a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801522c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801522e:	18eb      	adds	r3, r5, r3
 8015230:	4283      	cmp	r3, r0
 8015232:	f73f aed5 	bgt.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015238:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801523a:	444b      	add	r3, r9
 801523c:	4283      	cmp	r3, r0
 801523e:	f73f aecf 	bgt.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015242:	6810      	ldr	r0, [r2, #0]
 8015244:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8015248:	6805      	ldr	r5, [r0, #0]
 801524a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801524e:	f1b8 0f08 	cmp.w	r8, #8
 8015252:	f04f 0600 	mov.w	r6, #0
 8015256:	bf18      	it	ne
 8015258:	3401      	addne	r4, #1
 801525a:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801525e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015260:	9104      	str	r1, [sp, #16]
 8015262:	bf18      	it	ne
 8015264:	f024 0401 	bicne.w	r4, r4, #1
 8015268:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801526a:	bf18      	it	ne
 801526c:	b2a4      	uxthne	r4, r4
 801526e:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8015272:	e9cd 4900 	strd	r4, r9, [sp]
 8015276:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015278:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801527a:	47a0      	blx	r4
 801527c:	b019      	add	sp, #100	; 0x64
 801527e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015282:	2300      	movs	r3, #0
 8015284:	e7c0      	b.n	8015208 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8015286:	bf00      	nop
 8015288:	2000a804 	.word	0x2000a804
 801528c:	2000a80c 	.word	0x2000a80c
 8015290:	2000a806 	.word	0x2000a806
 8015294:	00fff800 	.word	0x00fff800
 8015298:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801529a:	e6ee      	b.n	801507a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801529c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801529e:	e784      	b.n	80151aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 80152a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80152a2:	b153      	cbz	r3, 80152ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 80152a4:	441f      	add	r7, r3
 80152a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80152a8:	b2bf      	uxth	r7, r7
 80152aa:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80152ae:	f007 0707 	and.w	r7, r7, #7
 80152b2:	781a      	ldrb	r2, [r3, #0]
 80152b4:	9328      	str	r3, [sp, #160]	; 0xa0
 80152b6:	413a      	asrs	r2, r7
 80152b8:	b2d2      	uxtb	r2, r2
 80152ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80152bc:	445b      	add	r3, fp
 80152be:	930a      	str	r3, [sp, #40]	; 0x28
 80152c0:	e711      	b.n	80150e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 80152c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80152c4:	2b00      	cmp	r3, #0
 80152c6:	d1d9      	bne.n	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80152c8:	4b05      	ldr	r3, [pc, #20]	; (80152e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 80152ca:	6818      	ldr	r0, [r3, #0]
 80152cc:	6803      	ldr	r3, [r0, #0]
 80152ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152d0:	4798      	blx	r3
 80152d2:	e7d3      	b.n	801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80152d4:	2b00      	cmp	r3, #0
 80152d6:	f43f ae83 	beq.w	8014fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80152da:	f44f 7180 	mov.w	r1, #256	; 0x100
 80152de:	e79e      	b.n	801521e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 80152e0:	2000a80c 	.word	0x2000a80c

080152e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80152e4:	b538      	push	{r3, r4, r5, lr}
 80152e6:	4c15      	ldr	r4, [pc, #84]	; (801533c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80152e8:	7823      	ldrb	r3, [r4, #0]
 80152ea:	f3bf 8f5b 	dmb	ish
 80152ee:	07da      	lsls	r2, r3, #31
 80152f0:	4605      	mov	r5, r0
 80152f2:	d40b      	bmi.n	801530c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80152f4:	4620      	mov	r0, r4
 80152f6:	f007 fcb5 	bl	801cc64 <__cxa_guard_acquire>
 80152fa:	b138      	cbz	r0, 801530c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80152fc:	4620      	mov	r0, r4
 80152fe:	f007 fcbd 	bl	801cc7c <__cxa_guard_release>
 8015302:	4a0f      	ldr	r2, [pc, #60]	; (8015340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015304:	490f      	ldr	r1, [pc, #60]	; (8015344 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015306:	4810      	ldr	r0, [pc, #64]	; (8015348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015308:	f007 fca5 	bl	801cc56 <__aeabi_atexit>
 801530c:	4c0f      	ldr	r4, [pc, #60]	; (801534c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801530e:	7823      	ldrb	r3, [r4, #0]
 8015310:	f3bf 8f5b 	dmb	ish
 8015314:	07db      	lsls	r3, r3, #31
 8015316:	d40b      	bmi.n	8015330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015318:	4620      	mov	r0, r4
 801531a:	f007 fca3 	bl	801cc64 <__cxa_guard_acquire>
 801531e:	b138      	cbz	r0, 8015330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015320:	4620      	mov	r0, r4
 8015322:	f007 fcab 	bl	801cc7c <__cxa_guard_release>
 8015326:	4a06      	ldr	r2, [pc, #24]	; (8015340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015328:	4909      	ldr	r1, [pc, #36]	; (8015350 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801532a:	480a      	ldr	r0, [pc, #40]	; (8015354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801532c:	f007 fc93 	bl	801cc56 <__aeabi_atexit>
 8015330:	4b05      	ldr	r3, [pc, #20]	; (8015348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015332:	612b      	str	r3, [r5, #16]
 8015334:	4b07      	ldr	r3, [pc, #28]	; (8015354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015336:	616b      	str	r3, [r5, #20]
 8015338:	bd38      	pop	{r3, r4, r5, pc}
 801533a:	bf00      	nop
 801533c:	2000a8d8 	.word	0x2000a8d8
 8015340:	20000000 	.word	0x20000000
 8015344:	08013345 	.word	0x08013345
 8015348:	200000a4 	.word	0x200000a4
 801534c:	2000a8dc 	.word	0x2000a8dc
 8015350:	08013343 	.word	0x08013343
 8015354:	200000a8 	.word	0x200000a8

08015358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015358:	b538      	push	{r3, r4, r5, lr}
 801535a:	4c15      	ldr	r4, [pc, #84]	; (80153b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801535c:	7823      	ldrb	r3, [r4, #0]
 801535e:	f3bf 8f5b 	dmb	ish
 8015362:	07da      	lsls	r2, r3, #31
 8015364:	4605      	mov	r5, r0
 8015366:	d40b      	bmi.n	8015380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015368:	4620      	mov	r0, r4
 801536a:	f007 fc7b 	bl	801cc64 <__cxa_guard_acquire>
 801536e:	b138      	cbz	r0, 8015380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015370:	4620      	mov	r0, r4
 8015372:	f007 fc83 	bl	801cc7c <__cxa_guard_release>
 8015376:	4a0f      	ldr	r2, [pc, #60]	; (80153b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015378:	490f      	ldr	r1, [pc, #60]	; (80153b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801537a:	4810      	ldr	r0, [pc, #64]	; (80153bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801537c:	f007 fc6b 	bl	801cc56 <__aeabi_atexit>
 8015380:	4c0f      	ldr	r4, [pc, #60]	; (80153c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8015382:	7823      	ldrb	r3, [r4, #0]
 8015384:	f3bf 8f5b 	dmb	ish
 8015388:	07db      	lsls	r3, r3, #31
 801538a:	d40b      	bmi.n	80153a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801538c:	4620      	mov	r0, r4
 801538e:	f007 fc69 	bl	801cc64 <__cxa_guard_acquire>
 8015392:	b138      	cbz	r0, 80153a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015394:	4620      	mov	r0, r4
 8015396:	f007 fc71 	bl	801cc7c <__cxa_guard_release>
 801539a:	4a06      	ldr	r2, [pc, #24]	; (80153b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801539c:	4909      	ldr	r1, [pc, #36]	; (80153c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801539e:	480a      	ldr	r0, [pc, #40]	; (80153c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80153a0:	f007 fc59 	bl	801cc56 <__aeabi_atexit>
 80153a4:	4b05      	ldr	r3, [pc, #20]	; (80153bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80153a6:	60ab      	str	r3, [r5, #8]
 80153a8:	4b07      	ldr	r3, [pc, #28]	; (80153c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80153aa:	60eb      	str	r3, [r5, #12]
 80153ac:	bd38      	pop	{r3, r4, r5, pc}
 80153ae:	bf00      	nop
 80153b0:	2000a8b0 	.word	0x2000a8b0
 80153b4:	20000000 	.word	0x20000000
 80153b8:	08013349 	.word	0x08013349
 80153bc:	2000007c 	.word	0x2000007c
 80153c0:	2000a8b4 	.word	0x2000a8b4
 80153c4:	08013347 	.word	0x08013347
 80153c8:	20000080 	.word	0x20000080

080153cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80153cc:	b510      	push	{r4, lr}
 80153ce:	4604      	mov	r4, r0
 80153d0:	f7ff ff88 	bl	80152e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80153d4:	4620      	mov	r0, r4
 80153d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80153da:	f7ff bfbd 	b.w	8015358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080153e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80153e0:	b538      	push	{r3, r4, r5, lr}
 80153e2:	4c15      	ldr	r4, [pc, #84]	; (8015438 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80153e4:	7823      	ldrb	r3, [r4, #0]
 80153e6:	f3bf 8f5b 	dmb	ish
 80153ea:	07da      	lsls	r2, r3, #31
 80153ec:	4605      	mov	r5, r0
 80153ee:	d40b      	bmi.n	8015408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80153f0:	4620      	mov	r0, r4
 80153f2:	f007 fc37 	bl	801cc64 <__cxa_guard_acquire>
 80153f6:	b138      	cbz	r0, 8015408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80153f8:	4620      	mov	r0, r4
 80153fa:	f007 fc3f 	bl	801cc7c <__cxa_guard_release>
 80153fe:	4a0f      	ldr	r2, [pc, #60]	; (801543c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015400:	490f      	ldr	r1, [pc, #60]	; (8015440 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015402:	4810      	ldr	r0, [pc, #64]	; (8015444 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015404:	f007 fc27 	bl	801cc56 <__aeabi_atexit>
 8015408:	4c0f      	ldr	r4, [pc, #60]	; (8015448 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801540a:	7823      	ldrb	r3, [r4, #0]
 801540c:	f3bf 8f5b 	dmb	ish
 8015410:	07db      	lsls	r3, r3, #31
 8015412:	d40b      	bmi.n	801542c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015414:	4620      	mov	r0, r4
 8015416:	f007 fc25 	bl	801cc64 <__cxa_guard_acquire>
 801541a:	b138      	cbz	r0, 801542c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801541c:	4620      	mov	r0, r4
 801541e:	f007 fc2d 	bl	801cc7c <__cxa_guard_release>
 8015422:	4a06      	ldr	r2, [pc, #24]	; (801543c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015424:	4909      	ldr	r1, [pc, #36]	; (801544c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015426:	480a      	ldr	r0, [pc, #40]	; (8015450 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015428:	f007 fc15 	bl	801cc56 <__aeabi_atexit>
 801542c:	4b05      	ldr	r3, [pc, #20]	; (8015444 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801542e:	622b      	str	r3, [r5, #32]
 8015430:	4b07      	ldr	r3, [pc, #28]	; (8015450 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015432:	626b      	str	r3, [r5, #36]	; 0x24
 8015434:	bd38      	pop	{r3, r4, r5, pc}
 8015436:	bf00      	nop
 8015438:	2000a8e0 	.word	0x2000a8e0
 801543c:	20000000 	.word	0x20000000
 8015440:	0801333d 	.word	0x0801333d
 8015444:	200000ac 	.word	0x200000ac
 8015448:	2000a8e4 	.word	0x2000a8e4
 801544c:	0801333b 	.word	0x0801333b
 8015450:	200000b0 	.word	0x200000b0

08015454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015454:	b538      	push	{r3, r4, r5, lr}
 8015456:	4c15      	ldr	r4, [pc, #84]	; (80154ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015458:	7823      	ldrb	r3, [r4, #0]
 801545a:	f3bf 8f5b 	dmb	ish
 801545e:	07da      	lsls	r2, r3, #31
 8015460:	4605      	mov	r5, r0
 8015462:	d40b      	bmi.n	801547c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015464:	4620      	mov	r0, r4
 8015466:	f007 fbfd 	bl	801cc64 <__cxa_guard_acquire>
 801546a:	b138      	cbz	r0, 801547c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801546c:	4620      	mov	r0, r4
 801546e:	f007 fc05 	bl	801cc7c <__cxa_guard_release>
 8015472:	4a0f      	ldr	r2, [pc, #60]	; (80154b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015474:	490f      	ldr	r1, [pc, #60]	; (80154b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015476:	4810      	ldr	r0, [pc, #64]	; (80154b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015478:	f007 fbed 	bl	801cc56 <__aeabi_atexit>
 801547c:	4c0f      	ldr	r4, [pc, #60]	; (80154bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801547e:	7823      	ldrb	r3, [r4, #0]
 8015480:	f3bf 8f5b 	dmb	ish
 8015484:	07db      	lsls	r3, r3, #31
 8015486:	d40b      	bmi.n	80154a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015488:	4620      	mov	r0, r4
 801548a:	f007 fbeb 	bl	801cc64 <__cxa_guard_acquire>
 801548e:	b138      	cbz	r0, 80154a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015490:	4620      	mov	r0, r4
 8015492:	f007 fbf3 	bl	801cc7c <__cxa_guard_release>
 8015496:	4a06      	ldr	r2, [pc, #24]	; (80154b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015498:	4909      	ldr	r1, [pc, #36]	; (80154c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801549a:	480a      	ldr	r0, [pc, #40]	; (80154c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801549c:	f007 fbdb 	bl	801cc56 <__aeabi_atexit>
 80154a0:	4b05      	ldr	r3, [pc, #20]	; (80154b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80154a2:	61ab      	str	r3, [r5, #24]
 80154a4:	4b07      	ldr	r3, [pc, #28]	; (80154c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80154a6:	61eb      	str	r3, [r5, #28]
 80154a8:	bd38      	pop	{r3, r4, r5, pc}
 80154aa:	bf00      	nop
 80154ac:	2000a8b8 	.word	0x2000a8b8
 80154b0:	20000000 	.word	0x20000000
 80154b4:	08013341 	.word	0x08013341
 80154b8:	20000084 	.word	0x20000084
 80154bc:	2000a8bc 	.word	0x2000a8bc
 80154c0:	0801333f 	.word	0x0801333f
 80154c4:	20000088 	.word	0x20000088

080154c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80154c8:	b510      	push	{r4, lr}
 80154ca:	4604      	mov	r4, r0
 80154cc:	f7ff ff88 	bl	80153e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80154d0:	4620      	mov	r0, r4
 80154d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80154d6:	f7ff bfbd 	b.w	8015454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080154dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80154dc:	b538      	push	{r3, r4, r5, lr}
 80154de:	4c15      	ldr	r4, [pc, #84]	; (8015534 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80154e0:	7823      	ldrb	r3, [r4, #0]
 80154e2:	f3bf 8f5b 	dmb	ish
 80154e6:	07da      	lsls	r2, r3, #31
 80154e8:	4605      	mov	r5, r0
 80154ea:	d40b      	bmi.n	8015504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80154ec:	4620      	mov	r0, r4
 80154ee:	f007 fbb9 	bl	801cc64 <__cxa_guard_acquire>
 80154f2:	b138      	cbz	r0, 8015504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80154f4:	4620      	mov	r0, r4
 80154f6:	f007 fbc1 	bl	801cc7c <__cxa_guard_release>
 80154fa:	4a0f      	ldr	r2, [pc, #60]	; (8015538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80154fc:	490f      	ldr	r1, [pc, #60]	; (801553c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80154fe:	4810      	ldr	r0, [pc, #64]	; (8015540 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015500:	f007 fba9 	bl	801cc56 <__aeabi_atexit>
 8015504:	4c0f      	ldr	r4, [pc, #60]	; (8015544 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015506:	7823      	ldrb	r3, [r4, #0]
 8015508:	f3bf 8f5b 	dmb	ish
 801550c:	07db      	lsls	r3, r3, #31
 801550e:	d40b      	bmi.n	8015528 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015510:	4620      	mov	r0, r4
 8015512:	f007 fba7 	bl	801cc64 <__cxa_guard_acquire>
 8015516:	b138      	cbz	r0, 8015528 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015518:	4620      	mov	r0, r4
 801551a:	f007 fbaf 	bl	801cc7c <__cxa_guard_release>
 801551e:	4a06      	ldr	r2, [pc, #24]	; (8015538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015520:	4909      	ldr	r1, [pc, #36]	; (8015548 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015522:	480a      	ldr	r0, [pc, #40]	; (801554c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015524:	f007 fb97 	bl	801cc56 <__aeabi_atexit>
 8015528:	4b05      	ldr	r3, [pc, #20]	; (8015540 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801552a:	632b      	str	r3, [r5, #48]	; 0x30
 801552c:	4b07      	ldr	r3, [pc, #28]	; (801554c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801552e:	636b      	str	r3, [r5, #52]	; 0x34
 8015530:	bd38      	pop	{r3, r4, r5, pc}
 8015532:	bf00      	nop
 8015534:	2000a8f0 	.word	0x2000a8f0
 8015538:	20000000 	.word	0x20000000
 801553c:	08013335 	.word	0x08013335
 8015540:	200000bc 	.word	0x200000bc
 8015544:	2000a8f4 	.word	0x2000a8f4
 8015548:	08013333 	.word	0x08013333
 801554c:	200000c0 	.word	0x200000c0

08015550 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015550:	b538      	push	{r3, r4, r5, lr}
 8015552:	4c15      	ldr	r4, [pc, #84]	; (80155a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8015554:	7823      	ldrb	r3, [r4, #0]
 8015556:	f3bf 8f5b 	dmb	ish
 801555a:	07da      	lsls	r2, r3, #31
 801555c:	4605      	mov	r5, r0
 801555e:	d40b      	bmi.n	8015578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015560:	4620      	mov	r0, r4
 8015562:	f007 fb7f 	bl	801cc64 <__cxa_guard_acquire>
 8015566:	b138      	cbz	r0, 8015578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015568:	4620      	mov	r0, r4
 801556a:	f007 fb87 	bl	801cc7c <__cxa_guard_release>
 801556e:	4a0f      	ldr	r2, [pc, #60]	; (80155ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015570:	490f      	ldr	r1, [pc, #60]	; (80155b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8015572:	4810      	ldr	r0, [pc, #64]	; (80155b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015574:	f007 fb6f 	bl	801cc56 <__aeabi_atexit>
 8015578:	4c0f      	ldr	r4, [pc, #60]	; (80155b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801557a:	7823      	ldrb	r3, [r4, #0]
 801557c:	f3bf 8f5b 	dmb	ish
 8015580:	07db      	lsls	r3, r3, #31
 8015582:	d40b      	bmi.n	801559c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015584:	4620      	mov	r0, r4
 8015586:	f007 fb6d 	bl	801cc64 <__cxa_guard_acquire>
 801558a:	b138      	cbz	r0, 801559c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801558c:	4620      	mov	r0, r4
 801558e:	f007 fb75 	bl	801cc7c <__cxa_guard_release>
 8015592:	4a06      	ldr	r2, [pc, #24]	; (80155ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015594:	4909      	ldr	r1, [pc, #36]	; (80155bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015596:	480a      	ldr	r0, [pc, #40]	; (80155c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015598:	f007 fb5d 	bl	801cc56 <__aeabi_atexit>
 801559c:	4b05      	ldr	r3, [pc, #20]	; (80155b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801559e:	62ab      	str	r3, [r5, #40]	; 0x28
 80155a0:	4b07      	ldr	r3, [pc, #28]	; (80155c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80155a2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80155a4:	bd38      	pop	{r3, r4, r5, pc}
 80155a6:	bf00      	nop
 80155a8:	2000a8c0 	.word	0x2000a8c0
 80155ac:	20000000 	.word	0x20000000
 80155b0:	08013339 	.word	0x08013339
 80155b4:	2000008c 	.word	0x2000008c
 80155b8:	2000a8c4 	.word	0x2000a8c4
 80155bc:	08013337 	.word	0x08013337
 80155c0:	20000090 	.word	0x20000090

080155c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80155c4:	b510      	push	{r4, lr}
 80155c6:	4604      	mov	r4, r0
 80155c8:	f7ff ff88 	bl	80154dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80155cc:	4620      	mov	r0, r4
 80155ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80155d2:	f7ff bfbd 	b.w	8015550 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080155d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80155d8:	b538      	push	{r3, r4, r5, lr}
 80155da:	4c15      	ldr	r4, [pc, #84]	; (8015630 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80155dc:	7823      	ldrb	r3, [r4, #0]
 80155de:	f3bf 8f5b 	dmb	ish
 80155e2:	07da      	lsls	r2, r3, #31
 80155e4:	4605      	mov	r5, r0
 80155e6:	d40b      	bmi.n	8015600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80155e8:	4620      	mov	r0, r4
 80155ea:	f007 fb3b 	bl	801cc64 <__cxa_guard_acquire>
 80155ee:	b138      	cbz	r0, 8015600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80155f0:	4620      	mov	r0, r4
 80155f2:	f007 fb43 	bl	801cc7c <__cxa_guard_release>
 80155f6:	4a0f      	ldr	r2, [pc, #60]	; (8015634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80155f8:	490f      	ldr	r1, [pc, #60]	; (8015638 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80155fa:	4810      	ldr	r0, [pc, #64]	; (801563c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80155fc:	f007 fb2b 	bl	801cc56 <__aeabi_atexit>
 8015600:	4c0f      	ldr	r4, [pc, #60]	; (8015640 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015602:	7823      	ldrb	r3, [r4, #0]
 8015604:	f3bf 8f5b 	dmb	ish
 8015608:	07db      	lsls	r3, r3, #31
 801560a:	d40b      	bmi.n	8015624 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801560c:	4620      	mov	r0, r4
 801560e:	f007 fb29 	bl	801cc64 <__cxa_guard_acquire>
 8015612:	b138      	cbz	r0, 8015624 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015614:	4620      	mov	r0, r4
 8015616:	f007 fb31 	bl	801cc7c <__cxa_guard_release>
 801561a:	4a06      	ldr	r2, [pc, #24]	; (8015634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801561c:	4909      	ldr	r1, [pc, #36]	; (8015644 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801561e:	480a      	ldr	r0, [pc, #40]	; (8015648 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015620:	f007 fb19 	bl	801cc56 <__aeabi_atexit>
 8015624:	4b05      	ldr	r3, [pc, #20]	; (801563c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015626:	652b      	str	r3, [r5, #80]	; 0x50
 8015628:	4b07      	ldr	r3, [pc, #28]	; (8015648 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801562a:	656b      	str	r3, [r5, #84]	; 0x54
 801562c:	bd38      	pop	{r3, r4, r5, pc}
 801562e:	bf00      	nop
 8015630:	2000a8f8 	.word	0x2000a8f8
 8015634:	20000000 	.word	0x20000000
 8015638:	08013325 	.word	0x08013325
 801563c:	200000c4 	.word	0x200000c4
 8015640:	2000a8fc 	.word	0x2000a8fc
 8015644:	08013323 	.word	0x08013323
 8015648:	200000c8 	.word	0x200000c8

0801564c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801564c:	b538      	push	{r3, r4, r5, lr}
 801564e:	4c15      	ldr	r4, [pc, #84]	; (80156a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015650:	7823      	ldrb	r3, [r4, #0]
 8015652:	f3bf 8f5b 	dmb	ish
 8015656:	07da      	lsls	r2, r3, #31
 8015658:	4605      	mov	r5, r0
 801565a:	d40b      	bmi.n	8015674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801565c:	4620      	mov	r0, r4
 801565e:	f007 fb01 	bl	801cc64 <__cxa_guard_acquire>
 8015662:	b138      	cbz	r0, 8015674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015664:	4620      	mov	r0, r4
 8015666:	f007 fb09 	bl	801cc7c <__cxa_guard_release>
 801566a:	4a0f      	ldr	r2, [pc, #60]	; (80156a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801566c:	490f      	ldr	r1, [pc, #60]	; (80156ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801566e:	4810      	ldr	r0, [pc, #64]	; (80156b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015670:	f007 faf1 	bl	801cc56 <__aeabi_atexit>
 8015674:	4c0f      	ldr	r4, [pc, #60]	; (80156b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015676:	7823      	ldrb	r3, [r4, #0]
 8015678:	f3bf 8f5b 	dmb	ish
 801567c:	07db      	lsls	r3, r3, #31
 801567e:	d40b      	bmi.n	8015698 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015680:	4620      	mov	r0, r4
 8015682:	f007 faef 	bl	801cc64 <__cxa_guard_acquire>
 8015686:	b138      	cbz	r0, 8015698 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015688:	4620      	mov	r0, r4
 801568a:	f007 faf7 	bl	801cc7c <__cxa_guard_release>
 801568e:	4a06      	ldr	r2, [pc, #24]	; (80156a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015690:	4909      	ldr	r1, [pc, #36]	; (80156b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015692:	480a      	ldr	r0, [pc, #40]	; (80156bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015694:	f007 fadf 	bl	801cc56 <__aeabi_atexit>
 8015698:	4b05      	ldr	r3, [pc, #20]	; (80156b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801569a:	64ab      	str	r3, [r5, #72]	; 0x48
 801569c:	4b07      	ldr	r3, [pc, #28]	; (80156bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801569e:	64eb      	str	r3, [r5, #76]	; 0x4c
 80156a0:	bd38      	pop	{r3, r4, r5, pc}
 80156a2:	bf00      	nop
 80156a4:	2000a900 	.word	0x2000a900
 80156a8:	20000000 	.word	0x20000000
 80156ac:	08013329 	.word	0x08013329
 80156b0:	200000cc 	.word	0x200000cc
 80156b4:	2000a904 	.word	0x2000a904
 80156b8:	08013327 	.word	0x08013327
 80156bc:	200000d0 	.word	0x200000d0

080156c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80156c0:	b538      	push	{r3, r4, r5, lr}
 80156c2:	4c15      	ldr	r4, [pc, #84]	; (8015718 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80156c4:	7823      	ldrb	r3, [r4, #0]
 80156c6:	f3bf 8f5b 	dmb	ish
 80156ca:	07da      	lsls	r2, r3, #31
 80156cc:	4605      	mov	r5, r0
 80156ce:	d40b      	bmi.n	80156e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80156d0:	4620      	mov	r0, r4
 80156d2:	f007 fac7 	bl	801cc64 <__cxa_guard_acquire>
 80156d6:	b138      	cbz	r0, 80156e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80156d8:	4620      	mov	r0, r4
 80156da:	f007 facf 	bl	801cc7c <__cxa_guard_release>
 80156de:	4a0f      	ldr	r2, [pc, #60]	; (801571c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80156e0:	490f      	ldr	r1, [pc, #60]	; (8015720 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80156e2:	4810      	ldr	r0, [pc, #64]	; (8015724 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80156e4:	f007 fab7 	bl	801cc56 <__aeabi_atexit>
 80156e8:	4c0f      	ldr	r4, [pc, #60]	; (8015728 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80156ea:	7823      	ldrb	r3, [r4, #0]
 80156ec:	f3bf 8f5b 	dmb	ish
 80156f0:	07db      	lsls	r3, r3, #31
 80156f2:	d40b      	bmi.n	801570c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80156f4:	4620      	mov	r0, r4
 80156f6:	f007 fab5 	bl	801cc64 <__cxa_guard_acquire>
 80156fa:	b138      	cbz	r0, 801570c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80156fc:	4620      	mov	r0, r4
 80156fe:	f007 fabd 	bl	801cc7c <__cxa_guard_release>
 8015702:	4a06      	ldr	r2, [pc, #24]	; (801571c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015704:	4909      	ldr	r1, [pc, #36]	; (801572c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015706:	480a      	ldr	r0, [pc, #40]	; (8015730 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015708:	f007 faa5 	bl	801cc56 <__aeabi_atexit>
 801570c:	4b05      	ldr	r3, [pc, #20]	; (8015724 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801570e:	642b      	str	r3, [r5, #64]	; 0x40
 8015710:	4b07      	ldr	r3, [pc, #28]	; (8015730 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015712:	646b      	str	r3, [r5, #68]	; 0x44
 8015714:	bd38      	pop	{r3, r4, r5, pc}
 8015716:	bf00      	nop
 8015718:	2000a8c8 	.word	0x2000a8c8
 801571c:	20000000 	.word	0x20000000
 8015720:	0801332d 	.word	0x0801332d
 8015724:	20000094 	.word	0x20000094
 8015728:	2000a8cc 	.word	0x2000a8cc
 801572c:	0801332b 	.word	0x0801332b
 8015730:	20000098 	.word	0x20000098

08015734 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015734:	b538      	push	{r3, r4, r5, lr}
 8015736:	4c15      	ldr	r4, [pc, #84]	; (801578c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015738:	7823      	ldrb	r3, [r4, #0]
 801573a:	f3bf 8f5b 	dmb	ish
 801573e:	07da      	lsls	r2, r3, #31
 8015740:	4605      	mov	r5, r0
 8015742:	d40b      	bmi.n	801575c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015744:	4620      	mov	r0, r4
 8015746:	f007 fa8d 	bl	801cc64 <__cxa_guard_acquire>
 801574a:	b138      	cbz	r0, 801575c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801574c:	4620      	mov	r0, r4
 801574e:	f007 fa95 	bl	801cc7c <__cxa_guard_release>
 8015752:	4a0f      	ldr	r2, [pc, #60]	; (8015790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015754:	490f      	ldr	r1, [pc, #60]	; (8015794 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8015756:	4810      	ldr	r0, [pc, #64]	; (8015798 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015758:	f007 fa7d 	bl	801cc56 <__aeabi_atexit>
 801575c:	4c0f      	ldr	r4, [pc, #60]	; (801579c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801575e:	7823      	ldrb	r3, [r4, #0]
 8015760:	f3bf 8f5b 	dmb	ish
 8015764:	07db      	lsls	r3, r3, #31
 8015766:	d40b      	bmi.n	8015780 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015768:	4620      	mov	r0, r4
 801576a:	f007 fa7b 	bl	801cc64 <__cxa_guard_acquire>
 801576e:	b138      	cbz	r0, 8015780 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015770:	4620      	mov	r0, r4
 8015772:	f007 fa83 	bl	801cc7c <__cxa_guard_release>
 8015776:	4a06      	ldr	r2, [pc, #24]	; (8015790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015778:	4909      	ldr	r1, [pc, #36]	; (80157a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801577a:	480a      	ldr	r0, [pc, #40]	; (80157a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801577c:	f007 fa6b 	bl	801cc56 <__aeabi_atexit>
 8015780:	4b05      	ldr	r3, [pc, #20]	; (8015798 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015782:	63ab      	str	r3, [r5, #56]	; 0x38
 8015784:	4b07      	ldr	r3, [pc, #28]	; (80157a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015786:	63eb      	str	r3, [r5, #60]	; 0x3c
 8015788:	bd38      	pop	{r3, r4, r5, pc}
 801578a:	bf00      	nop
 801578c:	2000a8e8 	.word	0x2000a8e8
 8015790:	20000000 	.word	0x20000000
 8015794:	08013331 	.word	0x08013331
 8015798:	200000b4 	.word	0x200000b4
 801579c:	2000a8ec 	.word	0x2000a8ec
 80157a0:	0801332f 	.word	0x0801332f
 80157a4:	200000b8 	.word	0x200000b8

080157a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80157a8:	b510      	push	{r4, lr}
 80157aa:	4604      	mov	r4, r0
 80157ac:	f7ff ff14 	bl	80155d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80157b0:	4620      	mov	r0, r4
 80157b2:	f7ff ff85 	bl	80156c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80157b6:	4620      	mov	r0, r4
 80157b8:	f7ff ff48 	bl	801564c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80157bc:	4620      	mov	r0, r4
 80157be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157c2:	f7ff bfb7 	b.w	8015734 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080157c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80157c8:	b538      	push	{r3, r4, r5, lr}
 80157ca:	4c15      	ldr	r4, [pc, #84]	; (8015820 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80157cc:	7823      	ldrb	r3, [r4, #0]
 80157ce:	f3bf 8f5b 	dmb	ish
 80157d2:	07da      	lsls	r2, r3, #31
 80157d4:	4605      	mov	r5, r0
 80157d6:	d40b      	bmi.n	80157f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80157d8:	4620      	mov	r0, r4
 80157da:	f007 fa43 	bl	801cc64 <__cxa_guard_acquire>
 80157de:	b138      	cbz	r0, 80157f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80157e0:	4620      	mov	r0, r4
 80157e2:	f007 fa4b 	bl	801cc7c <__cxa_guard_release>
 80157e6:	4a0f      	ldr	r2, [pc, #60]	; (8015824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80157e8:	490f      	ldr	r1, [pc, #60]	; (8015828 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80157ea:	4810      	ldr	r0, [pc, #64]	; (801582c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80157ec:	f007 fa33 	bl	801cc56 <__aeabi_atexit>
 80157f0:	4c0f      	ldr	r4, [pc, #60]	; (8015830 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80157f2:	7823      	ldrb	r3, [r4, #0]
 80157f4:	f3bf 8f5b 	dmb	ish
 80157f8:	07db      	lsls	r3, r3, #31
 80157fa:	d40b      	bmi.n	8015814 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80157fc:	4620      	mov	r0, r4
 80157fe:	f007 fa31 	bl	801cc64 <__cxa_guard_acquire>
 8015802:	b138      	cbz	r0, 8015814 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015804:	4620      	mov	r0, r4
 8015806:	f007 fa39 	bl	801cc7c <__cxa_guard_release>
 801580a:	4a06      	ldr	r2, [pc, #24]	; (8015824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801580c:	4909      	ldr	r1, [pc, #36]	; (8015834 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801580e:	480a      	ldr	r0, [pc, #40]	; (8015838 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015810:	f007 fa21 	bl	801cc56 <__aeabi_atexit>
 8015814:	4b05      	ldr	r3, [pc, #20]	; (801582c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015816:	662b      	str	r3, [r5, #96]	; 0x60
 8015818:	4b07      	ldr	r3, [pc, #28]	; (8015838 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801581a:	666b      	str	r3, [r5, #100]	; 0x64
 801581c:	bd38      	pop	{r3, r4, r5, pc}
 801581e:	bf00      	nop
 8015820:	2000a8d0 	.word	0x2000a8d0
 8015824:	20000000 	.word	0x20000000
 8015828:	0801331d 	.word	0x0801331d
 801582c:	2000009c 	.word	0x2000009c
 8015830:	2000a8d4 	.word	0x2000a8d4
 8015834:	0801331b 	.word	0x0801331b
 8015838:	200000a0 	.word	0x200000a0

0801583c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801583c:	b538      	push	{r3, r4, r5, lr}
 801583e:	4c15      	ldr	r4, [pc, #84]	; (8015894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015840:	7823      	ldrb	r3, [r4, #0]
 8015842:	f3bf 8f5b 	dmb	ish
 8015846:	07da      	lsls	r2, r3, #31
 8015848:	4605      	mov	r5, r0
 801584a:	d40b      	bmi.n	8015864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801584c:	4620      	mov	r0, r4
 801584e:	f007 fa09 	bl	801cc64 <__cxa_guard_acquire>
 8015852:	b138      	cbz	r0, 8015864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015854:	4620      	mov	r0, r4
 8015856:	f007 fa11 	bl	801cc7c <__cxa_guard_release>
 801585a:	4a0f      	ldr	r2, [pc, #60]	; (8015898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801585c:	490f      	ldr	r1, [pc, #60]	; (801589c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801585e:	4810      	ldr	r0, [pc, #64]	; (80158a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015860:	f007 f9f9 	bl	801cc56 <__aeabi_atexit>
 8015864:	4c0f      	ldr	r4, [pc, #60]	; (80158a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8015866:	7823      	ldrb	r3, [r4, #0]
 8015868:	f3bf 8f5b 	dmb	ish
 801586c:	07db      	lsls	r3, r3, #31
 801586e:	d40b      	bmi.n	8015888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015870:	4620      	mov	r0, r4
 8015872:	f007 f9f7 	bl	801cc64 <__cxa_guard_acquire>
 8015876:	b138      	cbz	r0, 8015888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015878:	4620      	mov	r0, r4
 801587a:	f007 f9ff 	bl	801cc7c <__cxa_guard_release>
 801587e:	4a06      	ldr	r2, [pc, #24]	; (8015898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015880:	4909      	ldr	r1, [pc, #36]	; (80158a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8015882:	480a      	ldr	r0, [pc, #40]	; (80158ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015884:	f007 f9e7 	bl	801cc56 <__aeabi_atexit>
 8015888:	4b05      	ldr	r3, [pc, #20]	; (80158a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801588a:	65ab      	str	r3, [r5, #88]	; 0x58
 801588c:	4b07      	ldr	r3, [pc, #28]	; (80158ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801588e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8015890:	bd38      	pop	{r3, r4, r5, pc}
 8015892:	bf00      	nop
 8015894:	2000a8a8 	.word	0x2000a8a8
 8015898:	20000000 	.word	0x20000000
 801589c:	08013321 	.word	0x08013321
 80158a0:	20000074 	.word	0x20000074
 80158a4:	2000a8ac 	.word	0x2000a8ac
 80158a8:	0801331f 	.word	0x0801331f
 80158ac:	20000078 	.word	0x20000078

080158b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80158b0:	b510      	push	{r4, lr}
 80158b2:	4604      	mov	r4, r0
 80158b4:	f7ff ff88 	bl	80157c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80158b8:	4620      	mov	r0, r4
 80158ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80158be:	f7ff bfbd 	b.w	801583c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080158c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80158c4:	b538      	push	{r3, r4, r5, lr}
 80158c6:	4c15      	ldr	r4, [pc, #84]	; (801591c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80158c8:	7823      	ldrb	r3, [r4, #0]
 80158ca:	f3bf 8f5b 	dmb	ish
 80158ce:	07da      	lsls	r2, r3, #31
 80158d0:	4605      	mov	r5, r0
 80158d2:	d40b      	bmi.n	80158ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80158d4:	4620      	mov	r0, r4
 80158d6:	f007 f9c5 	bl	801cc64 <__cxa_guard_acquire>
 80158da:	b138      	cbz	r0, 80158ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80158dc:	4620      	mov	r0, r4
 80158de:	f007 f9cd 	bl	801cc7c <__cxa_guard_release>
 80158e2:	4a0f      	ldr	r2, [pc, #60]	; (8015920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80158e4:	490f      	ldr	r1, [pc, #60]	; (8015924 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80158e6:	4810      	ldr	r0, [pc, #64]	; (8015928 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80158e8:	f007 f9b5 	bl	801cc56 <__aeabi_atexit>
 80158ec:	4c0f      	ldr	r4, [pc, #60]	; (801592c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80158ee:	7823      	ldrb	r3, [r4, #0]
 80158f0:	f3bf 8f5b 	dmb	ish
 80158f4:	07db      	lsls	r3, r3, #31
 80158f6:	d40b      	bmi.n	8015910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80158f8:	4620      	mov	r0, r4
 80158fa:	f007 f9b3 	bl	801cc64 <__cxa_guard_acquire>
 80158fe:	b138      	cbz	r0, 8015910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015900:	4620      	mov	r0, r4
 8015902:	f007 f9bb 	bl	801cc7c <__cxa_guard_release>
 8015906:	4a06      	ldr	r2, [pc, #24]	; (8015920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015908:	4909      	ldr	r1, [pc, #36]	; (8015930 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801590a:	480a      	ldr	r0, [pc, #40]	; (8015934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801590c:	f007 f9a3 	bl	801cc56 <__aeabi_atexit>
 8015910:	4b05      	ldr	r3, [pc, #20]	; (8015928 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015912:	672b      	str	r3, [r5, #112]	; 0x70
 8015914:	4b07      	ldr	r3, [pc, #28]	; (8015934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015916:	676b      	str	r3, [r5, #116]	; 0x74
 8015918:	bd38      	pop	{r3, r4, r5, pc}
 801591a:	bf00      	nop
 801591c:	2000a8a0 	.word	0x2000a8a0
 8015920:	20000000 	.word	0x20000000
 8015924:	08013315 	.word	0x08013315
 8015928:	2000006c 	.word	0x2000006c
 801592c:	2000a8a4 	.word	0x2000a8a4
 8015930:	08013313 	.word	0x08013313
 8015934:	20000070 	.word	0x20000070

08015938 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015938:	b538      	push	{r3, r4, r5, lr}
 801593a:	4c15      	ldr	r4, [pc, #84]	; (8015990 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801593c:	7823      	ldrb	r3, [r4, #0]
 801593e:	f3bf 8f5b 	dmb	ish
 8015942:	07da      	lsls	r2, r3, #31
 8015944:	4605      	mov	r5, r0
 8015946:	d40b      	bmi.n	8015960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015948:	4620      	mov	r0, r4
 801594a:	f007 f98b 	bl	801cc64 <__cxa_guard_acquire>
 801594e:	b138      	cbz	r0, 8015960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015950:	4620      	mov	r0, r4
 8015952:	f007 f993 	bl	801cc7c <__cxa_guard_release>
 8015956:	4a0f      	ldr	r2, [pc, #60]	; (8015994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015958:	490f      	ldr	r1, [pc, #60]	; (8015998 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801595a:	4810      	ldr	r0, [pc, #64]	; (801599c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801595c:	f007 f97b 	bl	801cc56 <__aeabi_atexit>
 8015960:	4c0f      	ldr	r4, [pc, #60]	; (80159a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015962:	7823      	ldrb	r3, [r4, #0]
 8015964:	f3bf 8f5b 	dmb	ish
 8015968:	07db      	lsls	r3, r3, #31
 801596a:	d40b      	bmi.n	8015984 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801596c:	4620      	mov	r0, r4
 801596e:	f007 f979 	bl	801cc64 <__cxa_guard_acquire>
 8015972:	b138      	cbz	r0, 8015984 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015974:	4620      	mov	r0, r4
 8015976:	f007 f981 	bl	801cc7c <__cxa_guard_release>
 801597a:	4a06      	ldr	r2, [pc, #24]	; (8015994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801597c:	4909      	ldr	r1, [pc, #36]	; (80159a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801597e:	480a      	ldr	r0, [pc, #40]	; (80159a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015980:	f007 f969 	bl	801cc56 <__aeabi_atexit>
 8015984:	4b05      	ldr	r3, [pc, #20]	; (801599c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015986:	66ab      	str	r3, [r5, #104]	; 0x68
 8015988:	4b07      	ldr	r3, [pc, #28]	; (80159a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801598a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801598c:	bd38      	pop	{r3, r4, r5, pc}
 801598e:	bf00      	nop
 8015990:	2000a898 	.word	0x2000a898
 8015994:	20000000 	.word	0x20000000
 8015998:	08013319 	.word	0x08013319
 801599c:	20000064 	.word	0x20000064
 80159a0:	2000a89c 	.word	0x2000a89c
 80159a4:	08013317 	.word	0x08013317
 80159a8:	20000068 	.word	0x20000068

080159ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80159ac:	b510      	push	{r4, lr}
 80159ae:	4604      	mov	r4, r0
 80159b0:	f7ff ff88 	bl	80158c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80159b4:	4620      	mov	r0, r4
 80159b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159ba:	f7ff bfbd 	b.w	8015938 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080159be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80159be:	b510      	push	{r4, lr}
 80159c0:	4604      	mov	r4, r0
 80159c2:	f7ff fff3 	bl	80159ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80159c6:	4620      	mov	r0, r4
 80159c8:	f7ff ff72 	bl	80158b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80159cc:	4620      	mov	r0, r4
 80159ce:	f7ff fdf9 	bl	80155c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80159d2:	4620      	mov	r0, r4
 80159d4:	f7ff fcfa 	bl	80153cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80159d8:	4620      	mov	r0, r4
 80159da:	f7ff fd75 	bl	80154c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80159de:	4620      	mov	r0, r4
 80159e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159e4:	f7ff bee0 	b.w	80157a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080159e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80159e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159ec:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80159f0:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80159f4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80159f8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80159fc:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8015a00:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8015a04:	8808      	ldrh	r0, [r1, #0]
 8015a06:	fb0e 4708 	mla	r7, lr, r8, r4
 8015a0a:	f1be 0f00 	cmp.w	lr, #0
 8015a0e:	eb02 0a07 	add.w	sl, r2, r7
 8015a12:	db37      	blt.n	8015a84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015a14:	45f3      	cmp	fp, lr
 8015a16:	dd35      	ble.n	8015a84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015a18:	2c00      	cmp	r4, #0
 8015a1a:	db31      	blt.n	8015a80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015a1c:	45a0      	cmp	r8, r4
 8015a1e:	dd2f      	ble.n	8015a80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015a20:	5dd2      	ldrb	r2, [r2, r7]
 8015a22:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8015a26:	1c62      	adds	r2, r4, #1
 8015a28:	d42f      	bmi.n	8015a8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015a2a:	4590      	cmp	r8, r2
 8015a2c:	dd2d      	ble.n	8015a8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015a2e:	b366      	cbz	r6, 8015a8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015a30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015a34:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015a38:	f11e 0e01 	adds.w	lr, lr, #1
 8015a3c:	d429      	bmi.n	8015a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015a3e:	45f3      	cmp	fp, lr
 8015a40:	dd27      	ble.n	8015a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015a42:	f1bc 0f00 	cmp.w	ip, #0
 8015a46:	f000 80a1 	beq.w	8015b8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8015a4a:	2c00      	cmp	r4, #0
 8015a4c:	db1f      	blt.n	8015a8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015a4e:	45a0      	cmp	r8, r4
 8015a50:	dd1d      	ble.n	8015a8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015a52:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8015a56:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8015a5a:	3401      	adds	r4, #1
 8015a5c:	d41c      	bmi.n	8015a98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015a5e:	45a0      	cmp	r8, r4
 8015a60:	dd1a      	ble.n	8015a98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015a62:	b1de      	cbz	r6, 8015a9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8015a64:	44d0      	add	r8, sl
 8015a66:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015a6a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8015a6e:	2e0f      	cmp	r6, #15
 8015a70:	d915      	bls.n	8015a9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8015a72:	4b49      	ldr	r3, [pc, #292]	; (8015b98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8015a74:	4a49      	ldr	r2, [pc, #292]	; (8015b9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8015a76:	484a      	ldr	r0, [pc, #296]	; (8015ba0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8015a78:	f240 11db 	movw	r1, #475	; 0x1db
 8015a7c:	f007 f91e 	bl	801ccbc <__assert_func>
 8015a80:	4681      	mov	r9, r0
 8015a82:	e7d0      	b.n	8015a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8015a84:	4607      	mov	r7, r0
 8015a86:	4681      	mov	r9, r0
 8015a88:	e7d6      	b.n	8015a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8015a8a:	4607      	mov	r7, r0
 8015a8c:	e7d4      	b.n	8015a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8015a8e:	4686      	mov	lr, r0
 8015a90:	e7e3      	b.n	8015a5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8015a92:	4603      	mov	r3, r0
 8015a94:	4686      	mov	lr, r0
 8015a96:	e7ea      	b.n	8015a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8015a98:	4603      	mov	r3, r0
 8015a9a:	e7e8      	b.n	8015a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8015a9c:	4603      	mov	r3, r0
 8015a9e:	f1bc 0f0f 	cmp.w	ip, #15
 8015aa2:	d8e6      	bhi.n	8015a72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8015aa4:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8015aa8:	fb16 f80c 	smulbb	r8, r6, ip
 8015aac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015ab0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015ab4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015ab8:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015abc:	ea44 0909 	orr.w	r9, r4, r9
 8015ac0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015ac4:	f1cc 0410 	rsb	r4, ip, #16
 8015ac8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015acc:	1ba4      	subs	r4, r4, r6
 8015ace:	041a      	lsls	r2, r3, #16
 8015ad0:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015ad4:	ea4a 0707 	orr.w	r7, sl, r7
 8015ad8:	4377      	muls	r7, r6
 8015ada:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015ade:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015ae2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015ae6:	fb04 7409 	mla	r4, r4, r9, r7
 8015aea:	4313      	orrs	r3, r2
 8015aec:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8015af0:	fb08 4303 	mla	r3, r8, r3, r4
 8015af4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015af8:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8015afc:	4322      	orrs	r2, r4
 8015afe:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015b02:	fb0c 3202 	mla	r2, ip, r2, r3
 8015b06:	0d53      	lsrs	r3, r2, #21
 8015b08:	0952      	lsrs	r2, r2, #5
 8015b0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015b0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015b12:	431a      	orrs	r2, r3
 8015b14:	b293      	uxth	r3, r2
 8015b16:	b2af      	uxth	r7, r5
 8015b18:	1202      	asrs	r2, r0, #8
 8015b1a:	43ed      	mvns	r5, r5
 8015b1c:	b2ed      	uxtb	r5, r5
 8015b1e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015b22:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015b26:	fb12 f205 	smulbb	r2, r2, r5
 8015b2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b2e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015b32:	00dc      	lsls	r4, r3, #3
 8015b34:	10da      	asrs	r2, r3, #3
 8015b36:	10c6      	asrs	r6, r0, #3
 8015b38:	00c3      	lsls	r3, r0, #3
 8015b3a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015b3e:	b2db      	uxtb	r3, r3
 8015b40:	fb16 f605 	smulbb	r6, r6, r5
 8015b44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015b48:	b2e4      	uxtb	r4, r4
 8015b4a:	fb13 f305 	smulbb	r3, r3, r5
 8015b4e:	fa1f fc8c 	uxth.w	ip, ip
 8015b52:	fb02 6207 	mla	r2, r2, r7, r6
 8015b56:	fb04 3307 	mla	r3, r4, r7, r3
 8015b5a:	b296      	uxth	r6, r2
 8015b5c:	b29a      	uxth	r2, r3
 8015b5e:	f10c 0301 	add.w	r3, ip, #1
 8015b62:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015b66:	1c53      	adds	r3, r2, #1
 8015b68:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015b6c:	1c72      	adds	r2, r6, #1
 8015b6e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8015b72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015b7a:	0952      	lsrs	r2, r2, #5
 8015b7c:	ea43 030c 	orr.w	r3, r3, ip
 8015b80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015b84:	4313      	orrs	r3, r2
 8015b86:	800b      	strh	r3, [r1, #0]
 8015b88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b8c:	2e0f      	cmp	r6, #15
 8015b8e:	f63f af70 	bhi.w	8015a72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8015b92:	4603      	mov	r3, r0
 8015b94:	4686      	mov	lr, r0
 8015b96:	e785      	b.n	8015aa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8015b98:	08021447 	.word	0x08021447
 8015b9c:	08021a1f 	.word	0x08021a1f
 8015ba0:	08021414 	.word	0x08021414

08015ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ba8:	ed2d 8b08 	vpush	{d8-d11}
 8015bac:	b099      	sub	sp, #100	; 0x64
 8015bae:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8015bb2:	9215      	str	r2, [sp, #84]	; 0x54
 8015bb4:	9309      	str	r3, [sp, #36]	; 0x24
 8015bb6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015bb8:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8015bbc:	930d      	str	r3, [sp, #52]	; 0x34
 8015bbe:	910c      	str	r1, [sp, #48]	; 0x30
 8015bc0:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8015bc4:	9016      	str	r0, [sp, #88]	; 0x58
 8015bc6:	6850      	ldr	r0, [r2, #4]
 8015bc8:	6812      	ldr	r2, [r2, #0]
 8015bca:	fb00 1303 	mla	r3, r0, r3, r1
 8015bce:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8015bd2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015bd4:	681b      	ldr	r3, [r3, #0]
 8015bd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8015bd8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015bda:	685e      	ldr	r6, [r3, #4]
 8015bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015bde:	43db      	mvns	r3, r3
 8015be0:	b2db      	uxtb	r3, r3
 8015be2:	eeb0 aa40 	vmov.f32	s20, s0
 8015be6:	eef0 9a60 	vmov.f32	s19, s1
 8015bea:	eeb0 9a41 	vmov.f32	s18, s2
 8015bee:	eeb0 8a62 	vmov.f32	s16, s5
 8015bf2:	eef0 8a43 	vmov.f32	s17, s6
 8015bf6:	eef0 ba44 	vmov.f32	s23, s8
 8015bfa:	eeb0 ba64 	vmov.f32	s22, s9
 8015bfe:	eef0 aa45 	vmov.f32	s21, s10
 8015c02:	3604      	adds	r6, #4
 8015c04:	930a      	str	r3, [sp, #40]	; 0x28
 8015c06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c08:	2b00      	cmp	r3, #0
 8015c0a:	dc03      	bgt.n	8015c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015c0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015c0e:	2b00      	cmp	r3, #0
 8015c10:	f340 8225 	ble.w	801605e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015c14:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015c16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015c1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015c1e:	1e48      	subs	r0, r1, #1
 8015c20:	1e57      	subs	r7, r2, #1
 8015c22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c24:	2b00      	cmp	r3, #0
 8015c26:	f340 80e3 	ble.w	8015df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8015c2a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8015c2e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015c32:	d406      	bmi.n	8015c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015c34:	4584      	cmp	ip, r0
 8015c36:	da04      	bge.n	8015c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015c38:	2b00      	cmp	r3, #0
 8015c3a:	db02      	blt.n	8015c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015c3c:	42bb      	cmp	r3, r7
 8015c3e:	f2c0 80d8 	blt.w	8015df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8015c42:	f11c 0c01 	adds.w	ip, ip, #1
 8015c46:	f100 80c9 	bmi.w	8015ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015c4a:	4561      	cmp	r1, ip
 8015c4c:	f2c0 80c6 	blt.w	8015ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015c50:	3301      	adds	r3, #1
 8015c52:	f100 80c3 	bmi.w	8015ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015c56:	429a      	cmp	r2, r3
 8015c58:	f2c0 80c0 	blt.w	8015ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015c5c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8015c60:	4647      	mov	r7, r8
 8015c62:	f1bb 0f00 	cmp.w	fp, #0
 8015c66:	f340 80e3 	ble.w	8015e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015c6a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015c6c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015c6e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015c72:	689b      	ldr	r3, [r3, #8]
 8015c74:	ea5f 422a 	movs.w	r2, sl, asr #16
 8015c78:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015c7c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8015c80:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015c84:	f100 8121 	bmi.w	8015eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015c88:	f103 39ff 	add.w	r9, r3, #4294967295
 8015c8c:	454a      	cmp	r2, r9
 8015c8e:	f280 811c 	bge.w	8015eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015c92:	f1bc 0f00 	cmp.w	ip, #0
 8015c96:	f2c0 8118 	blt.w	8015eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015c9a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8015c9e:	45cc      	cmp	ip, r9
 8015ca0:	f280 8113 	bge.w	8015eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015ca4:	b21b      	sxth	r3, r3
 8015ca6:	fb0c 2203 	mla	r2, ip, r3, r2
 8015caa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015cac:	eb04 0902 	add.w	r9, r4, r2
 8015cb0:	5ca2      	ldrb	r2, [r4, r2]
 8015cb2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8015cb6:	2800      	cmp	r0, #0
 8015cb8:	f000 80fe 	beq.w	8015eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015cbc:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015cc0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015cc4:	9211      	str	r2, [sp, #68]	; 0x44
 8015cc6:	b151      	cbz	r1, 8015cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015cc8:	eb09 0203 	add.w	r2, r9, r3
 8015ccc:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015cd0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015cd4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015cd6:	7853      	ldrb	r3, [r2, #1]
 8015cd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015cdc:	9312      	str	r3, [sp, #72]	; 0x48
 8015cde:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ce0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015ce2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015ce6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015cea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015cee:	ea4c 0c03 	orr.w	ip, ip, r3
 8015cf2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015cf4:	041b      	lsls	r3, r3, #16
 8015cf6:	fb10 f201 	smulbb	r2, r0, r1
 8015cfa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8015cfe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015d02:	10d2      	asrs	r2, r2, #3
 8015d04:	4323      	orrs	r3, r4
 8015d06:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8015d0a:	4353      	muls	r3, r2
 8015d0c:	fb09 330c 	mla	r3, r9, ip, r3
 8015d10:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015d14:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015d18:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015d1c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015d20:	f1c1 0c10 	rsb	ip, r1, #16
 8015d24:	ebac 0c00 	sub.w	ip, ip, r0
 8015d28:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015d2c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015d30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015d32:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015d34:	0418      	lsls	r0, r3, #16
 8015d36:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015d3a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015d3e:	4318      	orrs	r0, r3
 8015d40:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015d44:	fb02 c200 	mla	r2, r2, r0, ip
 8015d48:	0d53      	lsrs	r3, r2, #21
 8015d4a:	0952      	lsrs	r2, r2, #5
 8015d4c:	8838      	ldrh	r0, [r7, #0]
 8015d4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015d52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015d56:	431a      	orrs	r2, r3
 8015d58:	b292      	uxth	r2, r2
 8015d5a:	1201      	asrs	r1, r0, #8
 8015d5c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8015d60:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8015d64:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015d68:	fb11 f104 	smulbb	r1, r1, r4
 8015d6c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8015d70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d74:	00c0      	lsls	r0, r0, #3
 8015d76:	fb0c 1c03 	mla	ip, ip, r3, r1
 8015d7a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015d7e:	10d1      	asrs	r1, r2, #3
 8015d80:	b2c0      	uxtb	r0, r0
 8015d82:	00d2      	lsls	r2, r2, #3
 8015d84:	b2d2      	uxtb	r2, r2
 8015d86:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015d8a:	fb1e fe04 	smulbb	lr, lr, r4
 8015d8e:	fb10 f004 	smulbb	r0, r0, r4
 8015d92:	fa1f fc8c 	uxth.w	ip, ip
 8015d96:	fb01 e103 	mla	r1, r1, r3, lr
 8015d9a:	fb02 0303 	mla	r3, r2, r3, r0
 8015d9e:	b29a      	uxth	r2, r3
 8015da0:	f10c 0301 	add.w	r3, ip, #1
 8015da4:	b289      	uxth	r1, r1
 8015da6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015daa:	1c53      	adds	r3, r2, #1
 8015dac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015db0:	1c4a      	adds	r2, r1, #1
 8015db2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015db6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015dba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015dbe:	0949      	lsrs	r1, r1, #5
 8015dc0:	ea43 030c 	orr.w	r3, r3, ip
 8015dc4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015dc8:	430b      	orrs	r3, r1
 8015dca:	803b      	strh	r3, [r7, #0]
 8015dcc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015dce:	449a      	add	sl, r3
 8015dd0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015dd2:	3702      	adds	r7, #2
 8015dd4:	441d      	add	r5, r3
 8015dd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015dda:	e742      	b.n	8015c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015ddc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015dde:	449a      	add	sl, r3
 8015de0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015de2:	441d      	add	r5, r3
 8015de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015de6:	3b01      	subs	r3, #1
 8015de8:	9309      	str	r3, [sp, #36]	; 0x24
 8015dea:	f108 0802 	add.w	r8, r8, #2
 8015dee:	e718      	b.n	8015c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015df0:	d023      	beq.n	8015e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8015df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015df4:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8015df6:	3b01      	subs	r3, #1
 8015df8:	fb00 a003 	mla	r0, r0, r3, sl
 8015dfc:	1400      	asrs	r0, r0, #16
 8015dfe:	f53f af2d 	bmi.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015e02:	3901      	subs	r1, #1
 8015e04:	4288      	cmp	r0, r1
 8015e06:	f6bf af29 	bge.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015e0a:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015e0c:	fb01 5303 	mla	r3, r1, r3, r5
 8015e10:	141b      	asrs	r3, r3, #16
 8015e12:	f53f af23 	bmi.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015e16:	3a01      	subs	r2, #1
 8015e18:	4293      	cmp	r3, r2
 8015e1a:	f6bf af1f 	bge.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015e1e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015e22:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8015e26:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8015e2a:	f1be 0f00 	cmp.w	lr, #0
 8015e2e:	dc6c      	bgt.n	8015f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8015e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e32:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015e36:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015e3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e3c:	2b00      	cmp	r3, #0
 8015e3e:	f340 810e 	ble.w	801605e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015e42:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015e46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015e4a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015e4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e50:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015e54:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015e58:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015e5c:	eef0 6a48 	vmov.f32	s13, s16
 8015e60:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015e64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e68:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015e6c:	ee16 aa90 	vmov	sl, s13
 8015e70:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015e74:	eef0 6a68 	vmov.f32	s13, s17
 8015e78:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015e7c:	ee18 2a10 	vmov	r2, s16
 8015e80:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015e84:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e88:	ee18 2a90 	vmov	r2, s17
 8015e8c:	932d      	str	r3, [sp, #180]	; 0xb4
 8015e8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e90:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e94:	932e      	str	r3, [sp, #184]	; 0xb8
 8015e96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e98:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015e9a:	3b01      	subs	r3, #1
 8015e9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ea0:	930c      	str	r3, [sp, #48]	; 0x30
 8015ea2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015ea4:	bf08      	it	eq
 8015ea6:	4613      	moveq	r3, r2
 8015ea8:	ee16 5a90 	vmov	r5, s13
 8015eac:	9309      	str	r3, [sp, #36]	; 0x24
 8015eae:	eef0 8a67 	vmov.f32	s17, s15
 8015eb2:	eeb0 8a47 	vmov.f32	s16, s14
 8015eb6:	e6a6      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015eb8:	2900      	cmp	r1, #0
 8015eba:	f43f af10 	beq.w	8015cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015ebe:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015ec2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015ec6:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ec8:	e709      	b.n	8015cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015eca:	f112 0901 	adds.w	r9, r2, #1
 8015ece:	f53f af7d 	bmi.w	8015dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ed2:	454b      	cmp	r3, r9
 8015ed4:	f6ff af7a 	blt.w	8015dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ed8:	f11c 0901 	adds.w	r9, ip, #1
 8015edc:	f53f af76 	bmi.w	8015dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ee0:	45ce      	cmp	lr, r9
 8015ee2:	f6ff af73 	blt.w	8015dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015ee6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015ee8:	9202      	str	r2, [sp, #8]
 8015eea:	b21b      	sxth	r3, r3
 8015eec:	fa0f f28e 	sxth.w	r2, lr
 8015ef0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015ef4:	e9cd c003 	strd	ip, r0, [sp, #12]
 8015ef8:	9201      	str	r2, [sp, #4]
 8015efa:	9300      	str	r3, [sp, #0]
 8015efc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015efe:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015f00:	4633      	mov	r3, r6
 8015f02:	4639      	mov	r1, r7
 8015f04:	f7ff fd70 	bl	80159e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8015f08:	e760      	b.n	8015dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015f0a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015f0c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015f0e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015f12:	ea4f 422a 	mov.w	r2, sl, asr #16
 8015f16:	1429      	asrs	r1, r5, #16
 8015f18:	fb03 2101 	mla	r1, r3, r1, r2
 8015f1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015f1e:	440a      	add	r2, r1
 8015f20:	5c61      	ldrb	r1, [r4, r1]
 8015f22:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8015f26:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015f2a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8015f2e:	f1bc 0f00 	cmp.w	ip, #0
 8015f32:	f000 808c 	beq.w	801604e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8015f36:	7857      	ldrb	r7, [r2, #1]
 8015f38:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8015f3c:	9413      	str	r4, [sp, #76]	; 0x4c
 8015f3e:	b140      	cbz	r0, 8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015f40:	18d7      	adds	r7, r2, r3
 8015f42:	5cd3      	ldrb	r3, [r2, r3]
 8015f44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015f48:	9310      	str	r3, [sp, #64]	; 0x40
 8015f4a:	787b      	ldrb	r3, [r7, #1]
 8015f4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015f50:	9314      	str	r3, [sp, #80]	; 0x50
 8015f52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015f54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015f56:	fb1c f200 	smulbb	r2, ip, r0
 8015f5a:	041f      	lsls	r7, r3, #16
 8015f5c:	10d2      	asrs	r2, r2, #3
 8015f5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015f62:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015f66:	431f      	orrs	r7, r3
 8015f68:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8015f6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015f6e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015f70:	041b      	lsls	r3, r3, #16
 8015f72:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8015f76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015f7a:	ea43 030b 	orr.w	r3, r3, fp
 8015f7e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015f80:	4353      	muls	r3, r2
 8015f82:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015f86:	fb04 3707 	mla	r7, r4, r7, r3
 8015f8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015f8e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015f92:	ea43 0b01 	orr.w	fp, r3, r1
 8015f96:	f1c0 0110 	rsb	r1, r0, #16
 8015f9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015f9e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015fa2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015fa6:	fb0c 770b 	mla	r7, ip, fp, r7
 8015faa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015fae:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8015fb2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015fb6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015fba:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015fbe:	fb02 770c 	mla	r7, r2, ip, r7
 8015fc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015fc4:	0d79      	lsrs	r1, r7, #21
 8015fc6:	097f      	lsrs	r7, r7, #5
 8015fc8:	8812      	ldrh	r2, [r2, #0]
 8015fca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015fce:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015fd2:	430f      	orrs	r7, r1
 8015fd4:	b2bb      	uxth	r3, r7
 8015fd6:	1211      	asrs	r1, r2, #8
 8015fd8:	1218      	asrs	r0, r3, #8
 8015fda:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015fde:	fb11 f104 	smulbb	r1, r1, r4
 8015fe2:	10d7      	asrs	r7, r2, #3
 8015fe4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015fe8:	00d2      	lsls	r2, r2, #3
 8015fea:	fb00 1009 	mla	r0, r0, r9, r1
 8015fee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015ff2:	10d9      	asrs	r1, r3, #3
 8015ff4:	b2d2      	uxtb	r2, r2
 8015ff6:	00db      	lsls	r3, r3, #3
 8015ff8:	fb17 f704 	smulbb	r7, r7, r4
 8015ffc:	fb12 f204 	smulbb	r2, r2, r4
 8016000:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016004:	b2db      	uxtb	r3, r3
 8016006:	b280      	uxth	r0, r0
 8016008:	fb01 7109 	mla	r1, r1, r9, r7
 801600c:	fb03 2309 	mla	r3, r3, r9, r2
 8016010:	b29b      	uxth	r3, r3
 8016012:	b289      	uxth	r1, r1
 8016014:	1c42      	adds	r2, r0, #1
 8016016:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801601a:	1c4f      	adds	r7, r1, #1
 801601c:	1c5a      	adds	r2, r3, #1
 801601e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016022:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016026:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801602a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801602e:	0949      	lsrs	r1, r1, #5
 8016030:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016032:	4310      	orrs	r0, r2
 8016034:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016038:	4308      	orrs	r0, r1
 801603a:	f823 0b02 	strh.w	r0, [r3], #2
 801603e:	930e      	str	r3, [sp, #56]	; 0x38
 8016040:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016042:	449a      	add	sl, r3
 8016044:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016046:	f10e 3eff 	add.w	lr, lr, #4294967295
 801604a:	441d      	add	r5, r3
 801604c:	e6ed      	b.n	8015e2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801604e:	2800      	cmp	r0, #0
 8016050:	f43f af7f 	beq.w	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016054:	5cd3      	ldrb	r3, [r2, r3]
 8016056:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801605a:	9310      	str	r3, [sp, #64]	; 0x40
 801605c:	e779      	b.n	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801605e:	b019      	add	sp, #100	; 0x64
 8016060:	ecbd 8b08 	vpop	{d8-d11}
 8016064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801606c:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8016070:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016074:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8016078:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801607c:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8016080:	8808      	ldrh	r0, [r1, #0]
 8016082:	fb06 570e 	mla	r7, r6, lr, r5
 8016086:	2e00      	cmp	r6, #0
 8016088:	eb02 0807 	add.w	r8, r2, r7
 801608c:	db38      	blt.n	8016100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801608e:	45b1      	cmp	r9, r6
 8016090:	dd36      	ble.n	8016100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8016092:	2d00      	cmp	r5, #0
 8016094:	db32      	blt.n	80160fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8016096:	45ae      	cmp	lr, r5
 8016098:	dd30      	ble.n	80160fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801609a:	5dd2      	ldrb	r2, [r2, r7]
 801609c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80160a0:	1c6a      	adds	r2, r5, #1
 80160a2:	d430      	bmi.n	8016106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80160a4:	4596      	cmp	lr, r2
 80160a6:	dd2e      	ble.n	8016106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80160a8:	b36c      	cbz	r4, 8016106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80160aa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80160ae:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80160b2:	3601      	adds	r6, #1
 80160b4:	d42b      	bmi.n	801610e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80160b6:	45b1      	cmp	r9, r6
 80160b8:	dd29      	ble.n	801610e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80160ba:	f1bc 0f00 	cmp.w	ip, #0
 80160be:	d028      	beq.n	8016112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80160c0:	2d00      	cmp	r5, #0
 80160c2:	db22      	blt.n	801610a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80160c4:	45ae      	cmp	lr, r5
 80160c6:	dd20      	ble.n	801610a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80160c8:	f818 600e 	ldrb.w	r6, [r8, lr]
 80160cc:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80160d0:	3501      	adds	r5, #1
 80160d2:	d407      	bmi.n	80160e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80160d4:	45ae      	cmp	lr, r5
 80160d6:	dd05      	ble.n	80160e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80160d8:	b134      	cbz	r4, 80160e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80160da:	44c6      	add	lr, r8
 80160dc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80160e0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80160e4:	2c0f      	cmp	r4, #15
 80160e6:	d802      	bhi.n	80160ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80160e8:	f1bc 0f0f 	cmp.w	ip, #15
 80160ec:	d914      	bls.n	8016118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80160ee:	4b26      	ldr	r3, [pc, #152]	; (8016188 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80160f0:	4a26      	ldr	r2, [pc, #152]	; (801618c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80160f2:	4827      	ldr	r0, [pc, #156]	; (8016190 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80160f4:	f240 11db 	movw	r1, #475	; 0x1db
 80160f8:	f006 fde0 	bl	801ccbc <__assert_func>
 80160fc:	4607      	mov	r7, r0
 80160fe:	e7cf      	b.n	80160a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8016100:	4602      	mov	r2, r0
 8016102:	4607      	mov	r7, r0
 8016104:	e7d5      	b.n	80160b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8016106:	4602      	mov	r2, r0
 8016108:	e7d3      	b.n	80160b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801610a:	4606      	mov	r6, r0
 801610c:	e7e0      	b.n	80160d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801610e:	4606      	mov	r6, r0
 8016110:	e7e8      	b.n	80160e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8016112:	2c0f      	cmp	r4, #15
 8016114:	d8eb      	bhi.n	80160ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016116:	4606      	mov	r6, r0
 8016118:	043d      	lsls	r5, r7, #16
 801611a:	fb14 f30c 	smulbb	r3, r4, ip
 801611e:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016122:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016126:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801612a:	10db      	asrs	r3, r3, #3
 801612c:	432f      	orrs	r7, r5
 801612e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016132:	f1cc 0510 	rsb	r5, ip, #16
 8016136:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801613a:	1b2d      	subs	r5, r5, r4
 801613c:	ea4e 0202 	orr.w	r2, lr, r2
 8016140:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016144:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016148:	4354      	muls	r4, r2
 801614a:	fb05 4507 	mla	r5, r5, r7, r4
 801614e:	0404      	lsls	r4, r0, #16
 8016150:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016154:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016158:	4320      	orrs	r0, r4
 801615a:	fb03 5400 	mla	r4, r3, r0, r5
 801615e:	0430      	lsls	r0, r6, #16
 8016160:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016164:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8016168:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801616c:	4330      	orrs	r0, r6
 801616e:	fb03 4000 	mla	r0, r3, r0, r4
 8016172:	0d43      	lsrs	r3, r0, #21
 8016174:	0940      	lsrs	r0, r0, #5
 8016176:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801617a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801617e:	4318      	orrs	r0, r3
 8016180:	8008      	strh	r0, [r1, #0]
 8016182:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016186:	bf00      	nop
 8016188:	08021447 	.word	0x08021447
 801618c:	08021a1f 	.word	0x08021a1f
 8016190:	08021414 	.word	0x08021414

08016194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016198:	ed2d 8b0a 	vpush	{d8-d12}
 801619c:	b093      	sub	sp, #76	; 0x4c
 801619e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80161a2:	920f      	str	r2, [sp, #60]	; 0x3c
 80161a4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80161a6:	9108      	str	r1, [sp, #32]
 80161a8:	9306      	str	r3, [sp, #24]
 80161aa:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80161ae:	9010      	str	r0, [sp, #64]	; 0x40
 80161b0:	6850      	ldr	r0, [r2, #4]
 80161b2:	6812      	ldr	r2, [r2, #0]
 80161b4:	fb00 1303 	mla	r3, r0, r3, r1
 80161b8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80161bc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80161be:	681b      	ldr	r3, [r3, #0]
 80161c0:	9307      	str	r3, [sp, #28]
 80161c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80161c4:	685f      	ldr	r7, [r3, #4]
 80161c6:	eeb0 aa40 	vmov.f32	s20, s0
 80161ca:	eef0 9a60 	vmov.f32	s19, s1
 80161ce:	eeb0 9a41 	vmov.f32	s18, s2
 80161d2:	eeb0 8a62 	vmov.f32	s16, s5
 80161d6:	eef0 8a43 	vmov.f32	s17, s6
 80161da:	eeb0 ca44 	vmov.f32	s24, s8
 80161de:	eef0 ba64 	vmov.f32	s23, s9
 80161e2:	eeb0 ba45 	vmov.f32	s22, s10
 80161e6:	3704      	adds	r7, #4
 80161e8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80161ec:	9b08      	ldr	r3, [sp, #32]
 80161ee:	2b00      	cmp	r3, #0
 80161f0:	dc03      	bgt.n	80161fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80161f4:	2b00      	cmp	r3, #0
 80161f6:	f340 81b2 	ble.w	801655e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80161fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80161fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016200:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016204:	1e48      	subs	r0, r1, #1
 8016206:	f102 3cff 	add.w	ip, r2, #4294967295
 801620a:	9b06      	ldr	r3, [sp, #24]
 801620c:	2b00      	cmp	r3, #0
 801620e:	f340 80a9 	ble.w	8016364 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8016212:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016216:	ea4f 4326 	mov.w	r3, r6, asr #16
 801621a:	d406      	bmi.n	801622a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801621c:	4586      	cmp	lr, r0
 801621e:	da04      	bge.n	801622a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016220:	2b00      	cmp	r3, #0
 8016222:	db02      	blt.n	801622a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016224:	4563      	cmp	r3, ip
 8016226:	f2c0 809e 	blt.w	8016366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801622a:	f11e 0e01 	adds.w	lr, lr, #1
 801622e:	f100 808f 	bmi.w	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016232:	4571      	cmp	r1, lr
 8016234:	f2c0 808c 	blt.w	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016238:	3301      	adds	r3, #1
 801623a:	f100 8089 	bmi.w	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801623e:	429a      	cmp	r2, r3
 8016240:	f2c0 8086 	blt.w	8016350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016244:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016248:	46c8      	mov	r8, r9
 801624a:	f1bb 0f00 	cmp.w	fp, #0
 801624e:	f340 80a6 	ble.w	801639e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8016252:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016254:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016256:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801625a:	689b      	ldr	r3, [r3, #8]
 801625c:	1422      	asrs	r2, r4, #16
 801625e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016262:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016266:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801626a:	f100 80e3 	bmi.w	8016434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801626e:	f103 3aff 	add.w	sl, r3, #4294967295
 8016272:	4552      	cmp	r2, sl
 8016274:	f280 80de 	bge.w	8016434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016278:	f1bc 0f00 	cmp.w	ip, #0
 801627c:	f2c0 80da 	blt.w	8016434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016280:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016284:	45d4      	cmp	ip, sl
 8016286:	f280 80d5 	bge.w	8016434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801628a:	b21b      	sxth	r3, r3
 801628c:	fb0c 2203 	mla	r2, ip, r3, r2
 8016290:	9d07      	ldr	r5, [sp, #28]
 8016292:	eb05 0a02 	add.w	sl, r5, r2
 8016296:	5caa      	ldrb	r2, [r5, r2]
 8016298:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801629c:	2800      	cmp	r0, #0
 801629e:	f000 80c0 	beq.w	8016422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80162a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80162a6:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80162aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80162ac:	b151      	cbz	r1, 80162c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80162ae:	eb0a 0203 	add.w	r2, sl, r3
 80162b2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80162b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80162ba:	9309      	str	r3, [sp, #36]	; 0x24
 80162bc:	7853      	ldrb	r3, [r2, #1]
 80162be:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80162c2:	930c      	str	r3, [sp, #48]	; 0x30
 80162c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80162c6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80162c8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80162cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80162d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80162d4:	ea4c 0c03 	orr.w	ip, ip, r3
 80162d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80162da:	041b      	lsls	r3, r3, #16
 80162dc:	fb10 f201 	smulbb	r2, r0, r1
 80162e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80162e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80162e8:	10d2      	asrs	r2, r2, #3
 80162ea:	432b      	orrs	r3, r5
 80162ec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80162f0:	4353      	muls	r3, r2
 80162f2:	fb0a 330c 	mla	r3, sl, ip, r3
 80162f6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80162fa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80162fe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016302:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016306:	f1c1 0c10 	rsb	ip, r1, #16
 801630a:	ebac 0c00 	sub.w	ip, ip, r0
 801630e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016312:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016318:	0418      	lsls	r0, r3, #16
 801631a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801631e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016322:	4318      	orrs	r0, r3
 8016324:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016328:	fb02 c200 	mla	r2, r2, r0, ip
 801632c:	0d53      	lsrs	r3, r2, #21
 801632e:	0952      	lsrs	r2, r2, #5
 8016330:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016334:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016338:	431a      	orrs	r2, r3
 801633a:	f8a8 2000 	strh.w	r2, [r8]
 801633e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016340:	441c      	add	r4, r3
 8016342:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016344:	f108 0802 	add.w	r8, r8, #2
 8016348:	441e      	add	r6, r3
 801634a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801634e:	e77c      	b.n	801624a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016350:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016352:	441c      	add	r4, r3
 8016354:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016356:	441e      	add	r6, r3
 8016358:	9b06      	ldr	r3, [sp, #24]
 801635a:	3b01      	subs	r3, #1
 801635c:	9306      	str	r3, [sp, #24]
 801635e:	f109 0902 	add.w	r9, r9, #2
 8016362:	e752      	b.n	801620a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016364:	d020      	beq.n	80163a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016366:	9b06      	ldr	r3, [sp, #24]
 8016368:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801636a:	3b01      	subs	r3, #1
 801636c:	fb00 4003 	mla	r0, r0, r3, r4
 8016370:	1400      	asrs	r0, r0, #16
 8016372:	f53f af67 	bmi.w	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016376:	3901      	subs	r1, #1
 8016378:	4288      	cmp	r0, r1
 801637a:	f6bf af63 	bge.w	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801637e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016380:	fb01 6303 	mla	r3, r1, r3, r6
 8016384:	141b      	asrs	r3, r3, #16
 8016386:	f53f af5d 	bmi.w	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801638a:	3a01      	subs	r2, #1
 801638c:	4293      	cmp	r3, r2
 801638e:	f6bf af59 	bge.w	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016392:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016396:	46ca      	mov	sl, r9
 8016398:	f1b8 0f00 	cmp.w	r8, #0
 801639c:	dc67      	bgt.n	801646e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801639e:	9b06      	ldr	r3, [sp, #24]
 80163a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80163a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80163a8:	9b08      	ldr	r3, [sp, #32]
 80163aa:	2b00      	cmp	r3, #0
 80163ac:	f340 80d7 	ble.w	801655e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80163b0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80163b4:	ee79 9aab 	vadd.f32	s19, s19, s23
 80163b8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80163bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80163be:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80163c2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80163c6:	eef0 6a48 	vmov.f32	s13, s16
 80163ca:	ee69 7a27 	vmul.f32	s15, s18, s15
 80163ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80163d2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80163d6:	ee16 4a90 	vmov	r4, s13
 80163da:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80163de:	eef0 6a68 	vmov.f32	s13, s17
 80163e2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80163e6:	ee18 2a10 	vmov	r2, s16
 80163ea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80163ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80163f2:	ee18 2a90 	vmov	r2, s17
 80163f6:	9329      	str	r3, [sp, #164]	; 0xa4
 80163f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80163fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80163fe:	932a      	str	r3, [sp, #168]	; 0xa8
 8016400:	9b08      	ldr	r3, [sp, #32]
 8016402:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016404:	3b01      	subs	r3, #1
 8016406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801640a:	9308      	str	r3, [sp, #32]
 801640c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801640e:	bf08      	it	eq
 8016410:	4613      	moveq	r3, r2
 8016412:	ee16 6a90 	vmov	r6, s13
 8016416:	9306      	str	r3, [sp, #24]
 8016418:	eef0 8a67 	vmov.f32	s17, s15
 801641c:	eeb0 8a47 	vmov.f32	s16, s14
 8016420:	e6e4      	b.n	80161ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016422:	2900      	cmp	r1, #0
 8016424:	f43f af4e 	beq.w	80162c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8016428:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801642c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016430:	9309      	str	r3, [sp, #36]	; 0x24
 8016432:	e747      	b.n	80162c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8016434:	f112 0a01 	adds.w	sl, r2, #1
 8016438:	d481      	bmi.n	801633e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801643a:	4553      	cmp	r3, sl
 801643c:	f6ff af7f 	blt.w	801633e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016440:	f11c 0a01 	adds.w	sl, ip, #1
 8016444:	f53f af7b 	bmi.w	801633e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016448:	45d6      	cmp	lr, sl
 801644a:	f6ff af78 	blt.w	801633e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801644e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016452:	b21b      	sxth	r3, r3
 8016454:	fa0f f28e 	sxth.w	r2, lr
 8016458:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801645c:	9201      	str	r2, [sp, #4]
 801645e:	9300      	str	r3, [sp, #0]
 8016460:	9a07      	ldr	r2, [sp, #28]
 8016462:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016464:	463b      	mov	r3, r7
 8016466:	4641      	mov	r1, r8
 8016468:	f7ff fdfe 	bl	8016068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801646c:	e767      	b.n	801633e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801646e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016470:	9d07      	ldr	r5, [sp, #28]
 8016472:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016476:	1422      	asrs	r2, r4, #16
 8016478:	1431      	asrs	r1, r6, #16
 801647a:	fb03 2101 	mla	r1, r3, r1, r2
 801647e:	9a07      	ldr	r2, [sp, #28]
 8016480:	440a      	add	r2, r1
 8016482:	5c69      	ldrb	r1, [r5, r1]
 8016484:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016488:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801648c:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016490:	f1be 0f00 	cmp.w	lr, #0
 8016494:	d05c      	beq.n	8016550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8016496:	f892 c001 	ldrb.w	ip, [r2, #1]
 801649a:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801649e:	950d      	str	r5, [sp, #52]	; 0x34
 80164a0:	b150      	cbz	r0, 80164b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80164a2:	eb02 0c03 	add.w	ip, r2, r3
 80164a6:	5cd3      	ldrb	r3, [r2, r3]
 80164a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80164ac:	930a      	str	r3, [sp, #40]	; 0x28
 80164ae:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80164b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80164b6:	930e      	str	r3, [sp, #56]	; 0x38
 80164b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80164ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80164bc:	fb1e f200 	smulbb	r2, lr, r0
 80164c0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80164c4:	10d2      	asrs	r2, r2, #3
 80164c6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80164ca:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80164ce:	ea4c 0c03 	orr.w	ip, ip, r3
 80164d2:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80164d6:	9311      	str	r3, [sp, #68]	; 0x44
 80164d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80164da:	041b      	lsls	r3, r3, #16
 80164dc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80164e0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80164e4:	ea43 030b 	orr.w	r3, r3, fp
 80164e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80164ea:	4353      	muls	r3, r2
 80164ec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80164f0:	fb05 3c0c 	mla	ip, r5, ip, r3
 80164f4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80164f8:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80164fc:	ea43 0b01 	orr.w	fp, r3, r1
 8016500:	f1c0 0110 	rsb	r1, r0, #16
 8016504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016506:	eba1 0e0e 	sub.w	lr, r1, lr
 801650a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801650e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016512:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016516:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801651a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801651e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016522:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016526:	fb02 cc0e 	mla	ip, r2, lr, ip
 801652a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801652e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016532:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016536:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801653a:	ea43 0c0c 	orr.w	ip, r3, ip
 801653e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016540:	f82a cb02 	strh.w	ip, [sl], #2
 8016544:	441c      	add	r4, r3
 8016546:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016548:	f108 38ff 	add.w	r8, r8, #4294967295
 801654c:	441e      	add	r6, r3
 801654e:	e723      	b.n	8016398 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016550:	2800      	cmp	r0, #0
 8016552:	d0b1      	beq.n	80164b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8016554:	5cd3      	ldrb	r3, [r2, r3]
 8016556:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801655a:	930a      	str	r3, [sp, #40]	; 0x28
 801655c:	e7ac      	b.n	80164b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801655e:	b013      	add	sp, #76	; 0x4c
 8016560:	ecbd 8b0a 	vpop	{d8-d12}
 8016564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801656c:	468b      	mov	fp, r1
 801656e:	8809      	ldrh	r1, [r1, #0]
 8016570:	b089      	sub	sp, #36	; 0x24
 8016572:	10cd      	asrs	r5, r1, #3
 8016574:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8016578:	ea4f 2921 	mov.w	r9, r1, asr #8
 801657c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016580:	00c9      	lsls	r1, r1, #3
 8016582:	9500      	str	r5, [sp, #0]
 8016584:	b2c9      	uxtb	r1, r1
 8016586:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801658a:	9101      	str	r1, [sp, #4]
 801658c:	9900      	ldr	r1, [sp, #0]
 801658e:	9202      	str	r2, [sp, #8]
 8016590:	fb04 650e 	mla	r5, r4, lr, r6
 8016594:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8016598:	eb02 0805 	add.w	r8, r2, r5
 801659c:	0209      	lsls	r1, r1, #8
 801659e:	9a01      	ldr	r2, [sp, #4]
 80165a0:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80165a4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80165a8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80165ac:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80165b0:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80165b4:	4311      	orrs	r1, r2
 80165b6:	2c00      	cmp	r4, #0
 80165b8:	9107      	str	r1, [sp, #28]
 80165ba:	db43      	blt.n	8016644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80165bc:	45a2      	cmp	sl, r4
 80165be:	dd41      	ble.n	8016644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80165c0:	2e00      	cmp	r6, #0
 80165c2:	db3d      	blt.n	8016640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80165c4:	45b6      	cmp	lr, r6
 80165c6:	dd3b      	ble.n	8016640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80165c8:	9a02      	ldr	r2, [sp, #8]
 80165ca:	5d55      	ldrb	r5, [r2, r5]
 80165cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80165d0:	441d      	add	r5, r3
 80165d2:	1c72      	adds	r2, r6, #1
 80165d4:	d439      	bmi.n	801664a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80165d6:	4596      	cmp	lr, r2
 80165d8:	dd37      	ble.n	801664a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80165da:	2f00      	cmp	r7, #0
 80165dc:	d035      	beq.n	801664a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80165de:	f898 1001 	ldrb.w	r1, [r8, #1]
 80165e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80165e6:	4419      	add	r1, r3
 80165e8:	3401      	adds	r4, #1
 80165ea:	d432      	bmi.n	8016652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80165ec:	45a2      	cmp	sl, r4
 80165ee:	dd30      	ble.n	8016652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80165f0:	b378      	cbz	r0, 8016652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80165f2:	2e00      	cmp	r6, #0
 80165f4:	db2b      	blt.n	801664e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80165f6:	45b6      	cmp	lr, r6
 80165f8:	dd29      	ble.n	801664e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80165fa:	f818 400e 	ldrb.w	r4, [r8, lr]
 80165fe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016602:	441c      	add	r4, r3
 8016604:	3601      	adds	r6, #1
 8016606:	d427      	bmi.n	8016658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016608:	45b6      	cmp	lr, r6
 801660a:	dd25      	ble.n	8016658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801660c:	b327      	cbz	r7, 8016658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801660e:	44c6      	add	lr, r8
 8016610:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016614:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016618:	4413      	add	r3, r2
 801661a:	782a      	ldrb	r2, [r5, #0]
 801661c:	9202      	str	r2, [sp, #8]
 801661e:	780a      	ldrb	r2, [r1, #0]
 8016620:	9203      	str	r2, [sp, #12]
 8016622:	7822      	ldrb	r2, [r4, #0]
 8016624:	9204      	str	r2, [sp, #16]
 8016626:	2f0f      	cmp	r7, #15
 8016628:	781a      	ldrb	r2, [r3, #0]
 801662a:	9205      	str	r2, [sp, #20]
 801662c:	d801      	bhi.n	8016632 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801662e:	280f      	cmp	r0, #15
 8016630:	d914      	bls.n	801665c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8016632:	4b3f      	ldr	r3, [pc, #252]	; (8016730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8016634:	4a3f      	ldr	r2, [pc, #252]	; (8016734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8016636:	4840      	ldr	r0, [pc, #256]	; (8016738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8016638:	f240 11f9 	movw	r1, #505	; 0x1f9
 801663c:	f006 fb3e 	bl	801ccbc <__assert_func>
 8016640:	ad07      	add	r5, sp, #28
 8016642:	e7c6      	b.n	80165d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8016644:	a907      	add	r1, sp, #28
 8016646:	460d      	mov	r5, r1
 8016648:	e7ce      	b.n	80165e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801664a:	a907      	add	r1, sp, #28
 801664c:	e7cc      	b.n	80165e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801664e:	ac07      	add	r4, sp, #28
 8016650:	e7d8      	b.n	8016604 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8016652:	ab07      	add	r3, sp, #28
 8016654:	461c      	mov	r4, r3
 8016656:	e7e0      	b.n	801661a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8016658:	ab07      	add	r3, sp, #28
 801665a:	e7de      	b.n	801661a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801665c:	b2ba      	uxth	r2, r7
 801665e:	b280      	uxth	r0, r0
 8016660:	fb02 fa00 	mul.w	sl, r2, r0
 8016664:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8016668:	0112      	lsls	r2, r2, #4
 801666a:	b280      	uxth	r0, r0
 801666c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8016670:	7849      	ldrb	r1, [r1, #1]
 8016672:	78ae      	ldrb	r6, [r5, #2]
 8016674:	786d      	ldrb	r5, [r5, #1]
 8016676:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801667a:	eba2 020a 	sub.w	r2, r2, sl
 801667e:	b292      	uxth	r2, r2
 8016680:	ebae 0e00 	sub.w	lr, lr, r0
 8016684:	fa1f fe8e 	uxth.w	lr, lr
 8016688:	4351      	muls	r1, r2
 801668a:	fb02 f808 	mul.w	r8, r2, r8
 801668e:	fb0e 8806 	mla	r8, lr, r6, r8
 8016692:	fb0e 1505 	mla	r5, lr, r5, r1
 8016696:	78a6      	ldrb	r6, [r4, #2]
 8016698:	7861      	ldrb	r1, [r4, #1]
 801669a:	fa1f f78c 	uxth.w	r7, ip
 801669e:	fb00 8806 	mla	r8, r0, r6, r8
 80166a2:	fb00 5501 	mla	r5, r0, r1, r5
 80166a6:	789e      	ldrb	r6, [r3, #2]
 80166a8:	7859      	ldrb	r1, [r3, #1]
 80166aa:	9b00      	ldr	r3, [sp, #0]
 80166ac:	ea6f 0c0c 	mvn.w	ip, ip
 80166b0:	fa5f fc8c 	uxtb.w	ip, ip
 80166b4:	fb0a 5101 	mla	r1, sl, r1, r5
 80166b8:	fb13 f50c 	smulbb	r5, r3, ip
 80166bc:	9b03      	ldr	r3, [sp, #12]
 80166be:	435a      	muls	r2, r3
 80166c0:	9b02      	ldr	r3, [sp, #8]
 80166c2:	fb0e 2203 	mla	r2, lr, r3, r2
 80166c6:	9b04      	ldr	r3, [sp, #16]
 80166c8:	fb00 2003 	mla	r0, r0, r3, r2
 80166cc:	9b05      	ldr	r3, [sp, #20]
 80166ce:	fb0a 8606 	mla	r6, sl, r6, r8
 80166d2:	fb19 f90c 	smulbb	r9, r9, ip
 80166d6:	fb0a 0a03 	mla	sl, sl, r3, r0
 80166da:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80166de:	9b01      	ldr	r3, [sp, #4]
 80166e0:	fb06 9607 	mla	r6, r6, r7, r9
 80166e4:	b2b6      	uxth	r6, r6
 80166e6:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80166ea:	fb13 fc0c 	smulbb	ip, r3, ip
 80166ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80166f2:	fb01 5107 	mla	r1, r1, r7, r5
 80166f6:	f106 0901 	add.w	r9, r6, #1
 80166fa:	fb0a c707 	mla	r7, sl, r7, ip
 80166fe:	b2bf      	uxth	r7, r7
 8016700:	b289      	uxth	r1, r1
 8016702:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8016706:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801670a:	1c4d      	adds	r5, r1, #1
 801670c:	1c7e      	adds	r6, r7, #1
 801670e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016712:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8016716:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801671a:	0949      	lsrs	r1, r1, #5
 801671c:	ea46 0609 	orr.w	r6, r6, r9
 8016720:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016724:	430e      	orrs	r6, r1
 8016726:	f8ab 6000 	strh.w	r6, [fp]
 801672a:	b009      	add	sp, #36	; 0x24
 801672c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016730:	08021447 	.word	0x08021447
 8016734:	08021976 	.word	0x08021976
 8016738:	08021414 	.word	0x08021414

0801673c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801673c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016740:	ed2d 8b08 	vpush	{d8-d11}
 8016744:	b095      	sub	sp, #84	; 0x54
 8016746:	eeb0 aa40 	vmov.f32	s20, s0
 801674a:	9212      	str	r2, [sp, #72]	; 0x48
 801674c:	9309      	str	r3, [sp, #36]	; 0x24
 801674e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016750:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8016754:	930f      	str	r3, [sp, #60]	; 0x3c
 8016756:	910e      	str	r1, [sp, #56]	; 0x38
 8016758:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801675c:	9013      	str	r0, [sp, #76]	; 0x4c
 801675e:	6850      	ldr	r0, [r2, #4]
 8016760:	6812      	ldr	r2, [r2, #0]
 8016762:	fb00 1303 	mla	r3, r0, r3, r1
 8016766:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801676a:	930a      	str	r3, [sp, #40]	; 0x28
 801676c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801676e:	681b      	ldr	r3, [r3, #0]
 8016770:	930d      	str	r3, [sp, #52]	; 0x34
 8016772:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016774:	685c      	ldr	r4, [r3, #4]
 8016776:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016778:	43db      	mvns	r3, r3
 801677a:	b2db      	uxtb	r3, r3
 801677c:	eef0 9a60 	vmov.f32	s19, s1
 8016780:	eeb0 9a41 	vmov.f32	s18, s2
 8016784:	eeb0 8a62 	vmov.f32	s16, s5
 8016788:	eef0 8a43 	vmov.f32	s17, s6
 801678c:	eef0 ba44 	vmov.f32	s23, s8
 8016790:	eeb0 ba64 	vmov.f32	s22, s9
 8016794:	eef0 aa45 	vmov.f32	s21, s10
 8016798:	3404      	adds	r4, #4
 801679a:	930b      	str	r3, [sp, #44]	; 0x2c
 801679c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801679e:	2b00      	cmp	r3, #0
 80167a0:	dc03      	bgt.n	80167aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80167a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80167a4:	2b00      	cmp	r3, #0
 80167a6:	f340 8255 	ble.w	8016c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80167aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80167ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80167b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80167b4:	1e48      	subs	r0, r1, #1
 80167b6:	1e55      	subs	r5, r2, #1
 80167b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167ba:	2b00      	cmp	r3, #0
 80167bc:	f340 80f9 	ble.w	80169b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80167c0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80167c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80167c4:	1436      	asrs	r6, r6, #16
 80167c6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80167ca:	d406      	bmi.n	80167da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80167cc:	4286      	cmp	r6, r0
 80167ce:	da04      	bge.n	80167da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80167d0:	2b00      	cmp	r3, #0
 80167d2:	db02      	blt.n	80167da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80167d4:	42ab      	cmp	r3, r5
 80167d6:	f2c0 80ed 	blt.w	80169b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80167da:	3601      	adds	r6, #1
 80167dc:	f100 80da 	bmi.w	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80167e0:	42b1      	cmp	r1, r6
 80167e2:	f2c0 80d7 	blt.w	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80167e6:	3301      	adds	r3, #1
 80167e8:	f100 80d4 	bmi.w	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80167ec:	429a      	cmp	r2, r3
 80167ee:	f2c0 80d1 	blt.w	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80167f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167f4:	9311      	str	r3, [sp, #68]	; 0x44
 80167f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167f8:	930c      	str	r3, [sp, #48]	; 0x30
 80167fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80167fc:	2b00      	cmp	r3, #0
 80167fe:	f340 80fa 	ble.w	80169f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016802:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8016804:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016806:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016808:	68c6      	ldr	r6, [r0, #12]
 801680a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801680c:	141d      	asrs	r5, r3, #16
 801680e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016812:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016814:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016816:	1400      	asrs	r0, r0, #16
 8016818:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801681c:	6892      	ldr	r2, [r2, #8]
 801681e:	f100 813e 	bmi.w	8016a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016822:	1e57      	subs	r7, r2, #1
 8016824:	42b8      	cmp	r0, r7
 8016826:	f280 813a 	bge.w	8016a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801682a:	2d00      	cmp	r5, #0
 801682c:	f2c0 8137 	blt.w	8016a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016830:	1e77      	subs	r7, r6, #1
 8016832:	42bd      	cmp	r5, r7
 8016834:	f280 8133 	bge.w	8016a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016838:	b212      	sxth	r2, r2
 801683a:	fb05 0002 	mla	r0, r5, r2, r0
 801683e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016840:	f815 a000 	ldrb.w	sl, [r5, r0]
 8016844:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8016848:	182e      	adds	r6, r5, r0
 801684a:	eb04 050a 	add.w	r5, r4, sl
 801684e:	2b00      	cmp	r3, #0
 8016850:	f000 8117 	beq.w	8016a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8016854:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016858:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801685c:	44a4      	add	ip, r4
 801685e:	2900      	cmp	r1, #0
 8016860:	f000 8117 	beq.w	8016a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8016864:	18b0      	adds	r0, r6, r2
 8016866:	5cb2      	ldrb	r2, [r6, r2]
 8016868:	7840      	ldrb	r0, [r0, #1]
 801686a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801686e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016872:	4422      	add	r2, r4
 8016874:	4420      	add	r0, r4
 8016876:	b29b      	uxth	r3, r3
 8016878:	b289      	uxth	r1, r1
 801687a:	fb03 f901 	mul.w	r9, r3, r1
 801687e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016882:	011b      	lsls	r3, r3, #4
 8016884:	b289      	uxth	r1, r1
 8016886:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801688a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801688e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016890:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8016894:	f8b6 e000 	ldrh.w	lr, [r6]
 8016898:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801689c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80168a0:	eba3 0309 	sub.w	r3, r3, r9
 80168a4:	b29b      	uxth	r3, r3
 80168a6:	eba8 0801 	sub.w	r8, r8, r1
 80168aa:	fa1f f888 	uxth.w	r8, r8
 80168ae:	435f      	muls	r7, r3
 80168b0:	fb08 770b 	mla	r7, r8, fp, r7
 80168b4:	f892 b002 	ldrb.w	fp, [r2, #2]
 80168b8:	9310      	str	r3, [sp, #64]	; 0x40
 80168ba:	fb01 770b 	mla	r7, r1, fp, r7
 80168be:	f890 b002 	ldrb.w	fp, [r0, #2]
 80168c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80168c4:	fb09 770b 	mla	r7, r9, fp, r7
 80168c8:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80168cc:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80168d0:	fb1b fb03 	smulbb	fp, fp, r3
 80168d4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80168d8:	fb07 b706 	mla	r7, r7, r6, fp
 80168dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168de:	f895 b001 	ldrb.w	fp, [r5, #1]
 80168e2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80168e6:	f89c c000 	ldrb.w	ip, [ip]
 80168ea:	435d      	muls	r5, r3
 80168ec:	fb08 550b 	mla	r5, r8, fp, r5
 80168f0:	f892 b001 	ldrb.w	fp, [r2, #1]
 80168f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80168f6:	fb01 550b 	mla	r5, r1, fp, r5
 80168fa:	f890 b001 	ldrb.w	fp, [r0, #1]
 80168fe:	fb09 550b 	mla	r5, r9, fp, r5
 8016902:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8016906:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801690a:	fb1b fb03 	smulbb	fp, fp, r3
 801690e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016910:	fb03 f30c 	mul.w	r3, r3, ip
 8016914:	f892 c000 	ldrb.w	ip, [r2]
 8016918:	fb08 330a 	mla	r3, r8, sl, r3
 801691c:	fb01 330c 	mla	r3, r1, ip, r3
 8016920:	f890 c000 	ldrb.w	ip, [r0]
 8016924:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016928:	fb09 3c0c 	mla	ip, r9, ip, r3
 801692c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801692e:	fa5f fe8e 	uxtb.w	lr, lr
 8016932:	b2bf      	uxth	r7, r7
 8016934:	fb1e fe03 	smulbb	lr, lr, r3
 8016938:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801693c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016940:	fb05 b506 	mla	r5, r5, r6, fp
 8016944:	1c7b      	adds	r3, r7, #1
 8016946:	fb0c e606 	mla	r6, ip, r6, lr
 801694a:	b2ad      	uxth	r5, r5
 801694c:	b2b6      	uxth	r6, r6
 801694e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016952:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8016956:	f105 0b01 	add.w	fp, r5, #1
 801695a:	1c77      	adds	r7, r6, #1
 801695c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016960:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016964:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016968:	096d      	lsrs	r5, r5, #5
 801696a:	431f      	orrs	r7, r3
 801696c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016970:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016972:	433d      	orrs	r5, r7
 8016974:	801d      	strh	r5, [r3, #0]
 8016976:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016978:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801697a:	3302      	adds	r3, #2
 801697c:	930c      	str	r3, [sp, #48]	; 0x30
 801697e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016980:	4413      	add	r3, r2
 8016982:	9327      	str	r3, [sp, #156]	; 0x9c
 8016984:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016986:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016988:	4413      	add	r3, r2
 801698a:	9328      	str	r3, [sp, #160]	; 0xa0
 801698c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801698e:	3b01      	subs	r3, #1
 8016990:	9311      	str	r3, [sp, #68]	; 0x44
 8016992:	e732      	b.n	80167fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016994:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016996:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8016998:	4433      	add	r3, r6
 801699a:	9327      	str	r3, [sp, #156]	; 0x9c
 801699c:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801699e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80169a0:	4433      	add	r3, r6
 80169a2:	9328      	str	r3, [sp, #160]	; 0xa0
 80169a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169a6:	3b01      	subs	r3, #1
 80169a8:	9309      	str	r3, [sp, #36]	; 0x24
 80169aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80169ac:	3302      	adds	r3, #2
 80169ae:	930a      	str	r3, [sp, #40]	; 0x28
 80169b0:	e702      	b.n	80167b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80169b2:	d027      	beq.n	8016a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80169b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169b6:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80169b8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80169ba:	3b01      	subs	r3, #1
 80169bc:	fb00 5003 	mla	r0, r0, r3, r5
 80169c0:	1400      	asrs	r0, r0, #16
 80169c2:	f53f af16 	bmi.w	80167f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80169c6:	3901      	subs	r1, #1
 80169c8:	4288      	cmp	r0, r1
 80169ca:	f6bf af12 	bge.w	80167f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80169ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80169d0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80169d2:	fb01 0303 	mla	r3, r1, r3, r0
 80169d6:	141b      	asrs	r3, r3, #16
 80169d8:	f53f af0b 	bmi.w	80167f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80169dc:	3a01      	subs	r2, #1
 80169de:	4293      	cmp	r3, r2
 80169e0:	f6bf af07 	bge.w	80167f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80169e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169e6:	9311      	str	r3, [sp, #68]	; 0x44
 80169e8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80169ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80169ee:	930c      	str	r3, [sp, #48]	; 0x30
 80169f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80169f2:	2b00      	cmp	r3, #0
 80169f4:	dc70      	bgt.n	8016ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80169f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80169fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80169fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016a02:	930a      	str	r3, [sp, #40]	; 0x28
 8016a04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a06:	2b00      	cmp	r3, #0
 8016a08:	f340 8124 	ble.w	8016c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8016a0c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016a10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016a14:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016a18:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a1a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016a1e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016a22:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016a26:	eef0 6a48 	vmov.f32	s13, s16
 8016a2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a32:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016a36:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8016a3a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016a3e:	eef0 6a68 	vmov.f32	s13, s17
 8016a42:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016a46:	ee18 2a10 	vmov	r2, s16
 8016a4a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016a4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a52:	ee18 2a90 	vmov	r2, s17
 8016a56:	9329      	str	r3, [sp, #164]	; 0xa4
 8016a58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a5e:	932a      	str	r3, [sp, #168]	; 0xa8
 8016a60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a62:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016a64:	3b01      	subs	r3, #1
 8016a66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a6a:	930e      	str	r3, [sp, #56]	; 0x38
 8016a6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a6e:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8016a72:	bf08      	it	eq
 8016a74:	4613      	moveq	r3, r2
 8016a76:	9309      	str	r3, [sp, #36]	; 0x24
 8016a78:	eef0 8a67 	vmov.f32	s17, s15
 8016a7c:	eeb0 8a47 	vmov.f32	s16, s14
 8016a80:	e68c      	b.n	801679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016a82:	b149      	cbz	r1, 8016a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8016a84:	5cb2      	ldrb	r2, [r6, r2]
 8016a86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016a8a:	4422      	add	r2, r4
 8016a8c:	4628      	mov	r0, r5
 8016a8e:	46ac      	mov	ip, r5
 8016a90:	e6f1      	b.n	8016876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016a92:	4628      	mov	r0, r5
 8016a94:	462a      	mov	r2, r5
 8016a96:	e6ee      	b.n	8016876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016a98:	4628      	mov	r0, r5
 8016a9a:	462a      	mov	r2, r5
 8016a9c:	e7f7      	b.n	8016a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8016a9e:	1c47      	adds	r7, r0, #1
 8016aa0:	f53f af69 	bmi.w	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016aa4:	42ba      	cmp	r2, r7
 8016aa6:	f6ff af66 	blt.w	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016aaa:	1c6f      	adds	r7, r5, #1
 8016aac:	f53f af63 	bmi.w	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016ab0:	42be      	cmp	r6, r7
 8016ab2:	f6ff af60 	blt.w	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016ab6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016ab8:	9002      	str	r0, [sp, #8]
 8016aba:	b236      	sxth	r6, r6
 8016abc:	b212      	sxth	r2, r2
 8016abe:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8016ac2:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8016ac6:	9200      	str	r2, [sp, #0]
 8016ac8:	9601      	str	r6, [sp, #4]
 8016aca:	4623      	mov	r3, r4
 8016acc:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8016ad0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016ad2:	f7ff fd49 	bl	8016568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8016ad6:	e74e      	b.n	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016ad8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016ada:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016adc:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8016ade:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016ae0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016ae4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016ae6:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016aea:	142d      	asrs	r5, r5, #16
 8016aec:	1400      	asrs	r0, r0, #16
 8016aee:	fb02 5000 	mla	r0, r2, r0, r5
 8016af2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016af4:	f815 9000 	ldrb.w	r9, [r5, r0]
 8016af8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016afc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8016b00:	182e      	adds	r6, r5, r0
 8016b02:	eb04 0509 	add.w	r5, r4, r9
 8016b06:	2b00      	cmp	r3, #0
 8016b08:	f000 8096 	beq.w	8016c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8016b0c:	7877      	ldrb	r7, [r6, #1]
 8016b0e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016b12:	4427      	add	r7, r4
 8016b14:	2900      	cmp	r1, #0
 8016b16:	f000 8097 	beq.w	8016c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8016b1a:	18b0      	adds	r0, r6, r2
 8016b1c:	5cb2      	ldrb	r2, [r6, r2]
 8016b1e:	7840      	ldrb	r0, [r0, #1]
 8016b20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016b24:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016b28:	4422      	add	r2, r4
 8016b2a:	4420      	add	r0, r4
 8016b2c:	b29b      	uxth	r3, r3
 8016b2e:	b289      	uxth	r1, r1
 8016b30:	fb03 f801 	mul.w	r8, r3, r1
 8016b34:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016b36:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016b3a:	f8b6 c000 	ldrh.w	ip, [r6]
 8016b3e:	78be      	ldrb	r6, [r7, #2]
 8016b40:	f814 9009 	ldrb.w	r9, [r4, r9]
 8016b44:	011b      	lsls	r3, r3, #4
 8016b46:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8016b4a:	b289      	uxth	r1, r1
 8016b4c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016b50:	eba3 0308 	sub.w	r3, r3, r8
 8016b54:	b29b      	uxth	r3, r3
 8016b56:	ebae 0e01 	sub.w	lr, lr, r1
 8016b5a:	fa1f fe8e 	uxth.w	lr, lr
 8016b5e:	435e      	muls	r6, r3
 8016b60:	fb0e 660b 	mla	r6, lr, fp, r6
 8016b64:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016b68:	9310      	str	r3, [sp, #64]	; 0x40
 8016b6a:	fb01 660b 	mla	r6, r1, fp, r6
 8016b6e:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016b72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016b74:	fb08 660b 	mla	r6, r8, fp, r6
 8016b78:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8016b7c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016b80:	fb1b fb03 	smulbb	fp, fp, r3
 8016b84:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016b88:	fb06 b60a 	mla	r6, r6, sl, fp
 8016b8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b8e:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016b92:	787d      	ldrb	r5, [r7, #1]
 8016b94:	783f      	ldrb	r7, [r7, #0]
 8016b96:	435d      	muls	r5, r3
 8016b98:	fb0e 550b 	mla	r5, lr, fp, r5
 8016b9c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016ba0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016ba2:	fb01 550b 	mla	r5, r1, fp, r5
 8016ba6:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016baa:	fb08 550b 	mla	r5, r8, fp, r5
 8016bae:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016bb2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016bb6:	fb1b fb03 	smulbb	fp, fp, r3
 8016bba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bbc:	437b      	muls	r3, r7
 8016bbe:	7817      	ldrb	r7, [r2, #0]
 8016bc0:	fb0e 3309 	mla	r3, lr, r9, r3
 8016bc4:	fb01 3307 	mla	r3, r1, r7, r3
 8016bc8:	7807      	ldrb	r7, [r0, #0]
 8016bca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016bce:	fb08 3707 	mla	r7, r8, r7, r3
 8016bd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016bd4:	fa5f fc8c 	uxtb.w	ip, ip
 8016bd8:	fb1c fc03 	smulbb	ip, ip, r3
 8016bdc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016be0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016be4:	fb05 b50a 	mla	r5, r5, sl, fp
 8016be8:	fb07 c70a 	mla	r7, r7, sl, ip
 8016bec:	b2b6      	uxth	r6, r6
 8016bee:	b2ad      	uxth	r5, r5
 8016bf0:	b2bf      	uxth	r7, r7
 8016bf2:	1c73      	adds	r3, r6, #1
 8016bf4:	1c7a      	adds	r2, r7, #1
 8016bf6:	f105 0b01 	add.w	fp, r5, #1
 8016bfa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016bfe:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8016c02:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016c06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c0a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016c0e:	096d      	lsrs	r5, r5, #5
 8016c10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c12:	4316      	orrs	r6, r2
 8016c14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016c18:	432e      	orrs	r6, r5
 8016c1a:	f823 6b02 	strh.w	r6, [r3], #2
 8016c1e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016c20:	930c      	str	r3, [sp, #48]	; 0x30
 8016c22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016c24:	4413      	add	r3, r2
 8016c26:	9327      	str	r3, [sp, #156]	; 0x9c
 8016c28:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016c2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c2c:	4413      	add	r3, r2
 8016c2e:	9328      	str	r3, [sp, #160]	; 0xa0
 8016c30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016c32:	3b01      	subs	r3, #1
 8016c34:	9311      	str	r3, [sp, #68]	; 0x44
 8016c36:	e6db      	b.n	80169f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8016c38:	b149      	cbz	r1, 8016c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016c3a:	5cb2      	ldrb	r2, [r6, r2]
 8016c3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016c40:	4422      	add	r2, r4
 8016c42:	4628      	mov	r0, r5
 8016c44:	462f      	mov	r7, r5
 8016c46:	e771      	b.n	8016b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016c48:	4628      	mov	r0, r5
 8016c4a:	462a      	mov	r2, r5
 8016c4c:	e76e      	b.n	8016b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016c4e:	4628      	mov	r0, r5
 8016c50:	462a      	mov	r2, r5
 8016c52:	e7f7      	b.n	8016c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016c54:	b015      	add	sp, #84	; 0x54
 8016c56:	ecbd 8b08 	vpop	{d8-d11}
 8016c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016c60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c64:	880e      	ldrh	r6, [r1, #0]
 8016c66:	b085      	sub	sp, #20
 8016c68:	0230      	lsls	r0, r6, #8
 8016c6a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016c6e:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8016c72:	0170      	lsls	r0, r6, #5
 8016c74:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016c78:	9101      	str	r1, [sp, #4]
 8016c7a:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8016c7e:	00f6      	lsls	r6, r6, #3
 8016c80:	ea4b 0000 	orr.w	r0, fp, r0
 8016c84:	b2f6      	uxtb	r6, r6
 8016c86:	4691      	mov	r9, r2
 8016c88:	fb05 7a0c 	mla	sl, r5, ip, r7
 8016c8c:	4306      	orrs	r6, r0
 8016c8e:	2d00      	cmp	r5, #0
 8016c90:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016c94:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8016c98:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8016c9c:	9603      	str	r6, [sp, #12]
 8016c9e:	eb09 0e0a 	add.w	lr, r9, sl
 8016ca2:	db42      	blt.n	8016d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016ca4:	45a8      	cmp	r8, r5
 8016ca6:	dd40      	ble.n	8016d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016ca8:	2f00      	cmp	r7, #0
 8016caa:	db3c      	blt.n	8016d26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016cac:	45bc      	cmp	ip, r7
 8016cae:	dd3a      	ble.n	8016d26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016cb0:	f819 600a 	ldrb.w	r6, [r9, sl]
 8016cb4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016cb8:	441e      	add	r6, r3
 8016cba:	1c78      	adds	r0, r7, #1
 8016cbc:	d438      	bmi.n	8016d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016cbe:	4584      	cmp	ip, r0
 8016cc0:	dd36      	ble.n	8016d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016cc2:	b3aa      	cbz	r2, 8016d30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016cc4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016cc8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016ccc:	4418      	add	r0, r3
 8016cce:	3501      	adds	r5, #1
 8016cd0:	d432      	bmi.n	8016d38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016cd2:	45a8      	cmp	r8, r5
 8016cd4:	dd30      	ble.n	8016d38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016cd6:	b37c      	cbz	r4, 8016d38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016cd8:	2f00      	cmp	r7, #0
 8016cda:	db2b      	blt.n	8016d34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016cdc:	45bc      	cmp	ip, r7
 8016cde:	dd29      	ble.n	8016d34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016ce0:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8016ce4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016ce8:	441d      	add	r5, r3
 8016cea:	3701      	adds	r7, #1
 8016cec:	d427      	bmi.n	8016d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016cee:	45bc      	cmp	ip, r7
 8016cf0:	dd25      	ble.n	8016d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016cf2:	b322      	cbz	r2, 8016d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016cf4:	44f4      	add	ip, lr
 8016cf6:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8016cfa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016cfe:	443b      	add	r3, r7
 8016d00:	781f      	ldrb	r7, [r3, #0]
 8016d02:	f896 9000 	ldrb.w	r9, [r6]
 8016d06:	f890 a000 	ldrb.w	sl, [r0]
 8016d0a:	f895 8000 	ldrb.w	r8, [r5]
 8016d0e:	2a0f      	cmp	r2, #15
 8016d10:	4639      	mov	r1, r7
 8016d12:	d801      	bhi.n	8016d18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8016d14:	2c0f      	cmp	r4, #15
 8016d16:	d914      	bls.n	8016d42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8016d18:	4b2c      	ldr	r3, [pc, #176]	; (8016dcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8016d1a:	4a2d      	ldr	r2, [pc, #180]	; (8016dd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8016d1c:	482d      	ldr	r0, [pc, #180]	; (8016dd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8016d1e:	f240 11f9 	movw	r1, #505	; 0x1f9
 8016d22:	f005 ffcb 	bl	801ccbc <__assert_func>
 8016d26:	ae03      	add	r6, sp, #12
 8016d28:	e7c7      	b.n	8016cba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8016d2a:	a803      	add	r0, sp, #12
 8016d2c:	4606      	mov	r6, r0
 8016d2e:	e7ce      	b.n	8016cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016d30:	a803      	add	r0, sp, #12
 8016d32:	e7cc      	b.n	8016cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016d34:	ad03      	add	r5, sp, #12
 8016d36:	e7d8      	b.n	8016cea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8016d38:	ab03      	add	r3, sp, #12
 8016d3a:	461d      	mov	r5, r3
 8016d3c:	e7e0      	b.n	8016d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016d3e:	ab03      	add	r3, sp, #12
 8016d40:	e7de      	b.n	8016d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016d42:	b292      	uxth	r2, r2
 8016d44:	b2a4      	uxth	r4, r4
 8016d46:	fb02 fe04 	mul.w	lr, r2, r4
 8016d4a:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8016d4e:	0112      	lsls	r2, r2, #4
 8016d50:	b2a4      	uxth	r4, r4
 8016d52:	f890 c002 	ldrb.w	ip, [r0, #2]
 8016d56:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016d5a:	7840      	ldrb	r0, [r0, #1]
 8016d5c:	7876      	ldrb	r6, [r6, #1]
 8016d5e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8016d62:	eba2 020e 	sub.w	r2, r2, lr
 8016d66:	b292      	uxth	r2, r2
 8016d68:	1b3f      	subs	r7, r7, r4
 8016d6a:	b2bf      	uxth	r7, r7
 8016d6c:	fb02 fc0c 	mul.w	ip, r2, ip
 8016d70:	fb07 cc0b 	mla	ip, r7, fp, ip
 8016d74:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016d78:	fb04 cc0b 	mla	ip, r4, fp, ip
 8016d7c:	f893 b002 	ldrb.w	fp, [r3, #2]
 8016d80:	785b      	ldrb	r3, [r3, #1]
 8016d82:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016d86:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016d8a:	fb02 fc0a 	mul.w	ip, r2, sl
 8016d8e:	4342      	muls	r2, r0
 8016d90:	7868      	ldrb	r0, [r5, #1]
 8016d92:	fb07 cc09 	mla	ip, r7, r9, ip
 8016d96:	fb07 2206 	mla	r2, r7, r6, r2
 8016d9a:	fb04 cc08 	mla	ip, r4, r8, ip
 8016d9e:	fb04 2400 	mla	r4, r4, r0, r2
 8016da2:	fb0e cc01 	mla	ip, lr, r1, ip
 8016da6:	fb0e 4e03 	mla	lr, lr, r3, r4
 8016daa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016dae:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016db2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016db6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016dba:	9b01      	ldr	r3, [sp, #4]
 8016dbc:	ea4c 0c0e 	orr.w	ip, ip, lr
 8016dc0:	f8a3 c000 	strh.w	ip, [r3]
 8016dc4:	b005      	add	sp, #20
 8016dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dca:	bf00      	nop
 8016dcc:	08021447 	.word	0x08021447
 8016dd0:	08021976 	.word	0x08021976
 8016dd4:	08021414 	.word	0x08021414

08016dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ddc:	ed2d 8b08 	vpush	{d8-d11}
 8016de0:	b08f      	sub	sp, #60	; 0x3c
 8016de2:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8016de6:	920c      	str	r2, [sp, #48]	; 0x30
 8016de8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016dea:	910a      	str	r1, [sp, #40]	; 0x28
 8016dec:	9306      	str	r3, [sp, #24]
 8016dee:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8016df2:	900d      	str	r0, [sp, #52]	; 0x34
 8016df4:	6850      	ldr	r0, [r2, #4]
 8016df6:	6812      	ldr	r2, [r2, #0]
 8016df8:	fb00 1303 	mla	r3, r0, r3, r1
 8016dfc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016e00:	9307      	str	r3, [sp, #28]
 8016e02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e04:	681b      	ldr	r3, [r3, #0]
 8016e06:	9308      	str	r3, [sp, #32]
 8016e08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e0a:	685c      	ldr	r4, [r3, #4]
 8016e0c:	eeb0 aa40 	vmov.f32	s20, s0
 8016e10:	eef0 9a60 	vmov.f32	s19, s1
 8016e14:	eeb0 9a41 	vmov.f32	s18, s2
 8016e18:	eeb0 8a62 	vmov.f32	s16, s5
 8016e1c:	eef0 8a43 	vmov.f32	s17, s6
 8016e20:	eef0 ba44 	vmov.f32	s23, s8
 8016e24:	eeb0 ba64 	vmov.f32	s22, s9
 8016e28:	eef0 aa45 	vmov.f32	s21, s10
 8016e2c:	3404      	adds	r4, #4
 8016e2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e30:	2b00      	cmp	r3, #0
 8016e32:	dc03      	bgt.n	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016e34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016e36:	2b00      	cmp	r3, #0
 8016e38:	f340 81d6 	ble.w	80171e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016e3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016e42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016e46:	1e48      	subs	r0, r1, #1
 8016e48:	1e56      	subs	r6, r2, #1
 8016e4a:	9b06      	ldr	r3, [sp, #24]
 8016e4c:	2b00      	cmp	r3, #0
 8016e4e:	f340 80b7 	ble.w	8016fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016e52:	ea5f 472b 	movs.w	r7, fp, asr #16
 8016e56:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016e5a:	d406      	bmi.n	8016e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e5c:	4287      	cmp	r7, r0
 8016e5e:	da04      	bge.n	8016e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e60:	2b00      	cmp	r3, #0
 8016e62:	db02      	blt.n	8016e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e64:	42b3      	cmp	r3, r6
 8016e66:	f2c0 80ac 	blt.w	8016fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016e6a:	3701      	adds	r7, #1
 8016e6c:	f100 809d 	bmi.w	8016faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e70:	42b9      	cmp	r1, r7
 8016e72:	f2c0 809a 	blt.w	8016faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e76:	3301      	adds	r3, #1
 8016e78:	f100 8097 	bmi.w	8016faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e7c:	429a      	cmp	r2, r3
 8016e7e:	f2c0 8094 	blt.w	8016faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e82:	9b06      	ldr	r3, [sp, #24]
 8016e84:	930b      	str	r3, [sp, #44]	; 0x2c
 8016e86:	9b07      	ldr	r3, [sp, #28]
 8016e88:	9309      	str	r3, [sp, #36]	; 0x24
 8016e8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e8c:	2b00      	cmp	r3, #0
 8016e8e:	f340 80b5 	ble.w	8016ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016e92:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016e94:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016e96:	68c7      	ldr	r7, [r0, #12]
 8016e98:	6892      	ldr	r2, [r2, #8]
 8016e9a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8016e9e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8016ea2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016ea6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016eaa:	f100 80fb 	bmi.w	80170a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016eae:	f102 3cff 	add.w	ip, r2, #4294967295
 8016eb2:	4560      	cmp	r0, ip
 8016eb4:	f280 80f6 	bge.w	80170a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016eb8:	2e00      	cmp	r6, #0
 8016eba:	f2c0 80f3 	blt.w	80170a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016ebe:	f107 3cff 	add.w	ip, r7, #4294967295
 8016ec2:	4566      	cmp	r6, ip
 8016ec4:	f280 80ee 	bge.w	80170a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016ec8:	b212      	sxth	r2, r2
 8016eca:	fb06 0002 	mla	r0, r6, r2, r0
 8016ece:	9e08      	ldr	r6, [sp, #32]
 8016ed0:	1837      	adds	r7, r6, r0
 8016ed2:	5c30      	ldrb	r0, [r6, r0]
 8016ed4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8016ed8:	eb04 0c08 	add.w	ip, r4, r8
 8016edc:	2b00      	cmp	r3, #0
 8016ede:	f000 80d3 	beq.w	8017088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016ee2:	787e      	ldrb	r6, [r7, #1]
 8016ee4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016ee8:	4426      	add	r6, r4
 8016eea:	2900      	cmp	r1, #0
 8016eec:	f000 80d4 	beq.w	8017098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8016ef0:	18b8      	adds	r0, r7, r2
 8016ef2:	5cba      	ldrb	r2, [r7, r2]
 8016ef4:	7840      	ldrb	r0, [r0, #1]
 8016ef6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016efa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016efe:	4422      	add	r2, r4
 8016f00:	4420      	add	r0, r4
 8016f02:	b29b      	uxth	r3, r3
 8016f04:	b289      	uxth	r1, r1
 8016f06:	fb03 f901 	mul.w	r9, r3, r1
 8016f0a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016f0e:	011b      	lsls	r3, r3, #4
 8016f10:	b289      	uxth	r1, r1
 8016f12:	78b7      	ldrb	r7, [r6, #2]
 8016f14:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016f18:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016f1c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016f20:	eba3 0309 	sub.w	r3, r3, r9
 8016f24:	b29b      	uxth	r3, r3
 8016f26:	ebae 0e01 	sub.w	lr, lr, r1
 8016f2a:	fa1f fe8e 	uxth.w	lr, lr
 8016f2e:	435f      	muls	r7, r3
 8016f30:	fb0e 770a 	mla	r7, lr, sl, r7
 8016f34:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016f38:	fb01 770a 	mla	r7, r1, sl, r7
 8016f3c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016f40:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016f44:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016f48:	f896 8000 	ldrb.w	r8, [r6]
 8016f4c:	7876      	ldrb	r6, [r6, #1]
 8016f4e:	fb03 f808 	mul.w	r8, r3, r8
 8016f52:	fb0e 8807 	mla	r8, lr, r7, r8
 8016f56:	7817      	ldrb	r7, [r2, #0]
 8016f58:	fb01 8807 	mla	r8, r1, r7, r8
 8016f5c:	7807      	ldrb	r7, [r0, #0]
 8016f5e:	fb09 8707 	mla	r7, r9, r7, r8
 8016f62:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016f66:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016f6a:	ea47 070a 	orr.w	r7, r7, sl
 8016f6e:	4373      	muls	r3, r6
 8016f70:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016f74:	fb0e 330c 	mla	r3, lr, ip, r3
 8016f78:	fb01 310a 	mla	r1, r1, sl, r3
 8016f7c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016f80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016f82:	fb09 1a0a 	mla	sl, r9, sl, r1
 8016f86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f8a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016f8e:	ea47 070a 	orr.w	r7, r7, sl
 8016f92:	801f      	strh	r7, [r3, #0]
 8016f94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016f96:	3302      	adds	r3, #2
 8016f98:	9309      	str	r3, [sp, #36]	; 0x24
 8016f9a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016f9c:	449b      	add	fp, r3
 8016f9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016fa0:	441d      	add	r5, r3
 8016fa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016fa4:	3b01      	subs	r3, #1
 8016fa6:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fa8:	e76f      	b.n	8016e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016faa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016fac:	449b      	add	fp, r3
 8016fae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016fb0:	441d      	add	r5, r3
 8016fb2:	9b06      	ldr	r3, [sp, #24]
 8016fb4:	3b01      	subs	r3, #1
 8016fb6:	9306      	str	r3, [sp, #24]
 8016fb8:	9b07      	ldr	r3, [sp, #28]
 8016fba:	3302      	adds	r3, #2
 8016fbc:	9307      	str	r3, [sp, #28]
 8016fbe:	e744      	b.n	8016e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016fc0:	d023      	beq.n	801700a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8016fc2:	9b06      	ldr	r3, [sp, #24]
 8016fc4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8016fc6:	3b01      	subs	r3, #1
 8016fc8:	fb00 b003 	mla	r0, r0, r3, fp
 8016fcc:	1400      	asrs	r0, r0, #16
 8016fce:	f53f af58 	bmi.w	8016e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016fd2:	3901      	subs	r1, #1
 8016fd4:	4288      	cmp	r0, r1
 8016fd6:	f6bf af54 	bge.w	8016e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016fda:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016fdc:	fb01 5303 	mla	r3, r1, r3, r5
 8016fe0:	141b      	asrs	r3, r3, #16
 8016fe2:	f53f af4e 	bmi.w	8016e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016fe6:	3a01      	subs	r2, #1
 8016fe8:	4293      	cmp	r3, r2
 8016fea:	f6bf af4a 	bge.w	8016e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016fee:	9b06      	ldr	r3, [sp, #24]
 8016ff0:	9309      	str	r3, [sp, #36]	; 0x24
 8016ff2:	9b07      	ldr	r3, [sp, #28]
 8016ff4:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ff6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ff8:	2b00      	cmp	r3, #0
 8016ffa:	dc70      	bgt.n	80170de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8016ffc:	9b06      	ldr	r3, [sp, #24]
 8016ffe:	9a07      	ldr	r2, [sp, #28]
 8017000:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017004:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017008:	9307      	str	r3, [sp, #28]
 801700a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801700c:	2b00      	cmp	r3, #0
 801700e:	f340 80eb 	ble.w	80171e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8017012:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017016:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801701a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801701e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017020:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017024:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017028:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801702c:	eef0 6a48 	vmov.f32	s13, s16
 8017030:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017034:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017038:	ee37 8a48 	vsub.f32	s16, s14, s16
 801703c:	ee16 ba90 	vmov	fp, s13
 8017040:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017044:	eef0 6a68 	vmov.f32	s13, s17
 8017048:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801704c:	ee18 2a10 	vmov	r2, s16
 8017050:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017054:	fb92 f3f3 	sdiv	r3, r2, r3
 8017058:	ee18 2a90 	vmov	r2, s17
 801705c:	9323      	str	r3, [sp, #140]	; 0x8c
 801705e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017060:	fb92 f3f3 	sdiv	r3, r2, r3
 8017064:	9324      	str	r3, [sp, #144]	; 0x90
 8017066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017068:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801706a:	3b01      	subs	r3, #1
 801706c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017070:	930a      	str	r3, [sp, #40]	; 0x28
 8017072:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017074:	bf08      	it	eq
 8017076:	4613      	moveq	r3, r2
 8017078:	ee16 5a90 	vmov	r5, s13
 801707c:	9306      	str	r3, [sp, #24]
 801707e:	eef0 8a67 	vmov.f32	s17, s15
 8017082:	eeb0 8a47 	vmov.f32	s16, s14
 8017086:	e6d2      	b.n	8016e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8017088:	b149      	cbz	r1, 801709e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801708a:	5cba      	ldrb	r2, [r7, r2]
 801708c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017090:	4422      	add	r2, r4
 8017092:	4660      	mov	r0, ip
 8017094:	4666      	mov	r6, ip
 8017096:	e734      	b.n	8016f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8017098:	4660      	mov	r0, ip
 801709a:	4662      	mov	r2, ip
 801709c:	e731      	b.n	8016f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801709e:	4660      	mov	r0, ip
 80170a0:	4662      	mov	r2, ip
 80170a2:	e7f7      	b.n	8017094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80170a4:	f110 0c01 	adds.w	ip, r0, #1
 80170a8:	f53f af74 	bmi.w	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170ac:	4562      	cmp	r2, ip
 80170ae:	f6ff af71 	blt.w	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170b2:	f116 0c01 	adds.w	ip, r6, #1
 80170b6:	f53f af6d 	bmi.w	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170ba:	4567      	cmp	r7, ip
 80170bc:	f6ff af6a 	blt.w	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170c0:	b23f      	sxth	r7, r7
 80170c2:	b212      	sxth	r2, r2
 80170c4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80170c8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80170cc:	9200      	str	r2, [sp, #0]
 80170ce:	9701      	str	r7, [sp, #4]
 80170d0:	4623      	mov	r3, r4
 80170d2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80170d6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80170d8:	f7ff fdc2 	bl	8016c60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80170dc:	e75a      	b.n	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170de:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80170e0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80170e4:	ea4f 462b 	mov.w	r6, fp, asr #16
 80170e8:	1428      	asrs	r0, r5, #16
 80170ea:	fb02 6000 	mla	r0, r2, r0, r6
 80170ee:	9e08      	ldr	r6, [sp, #32]
 80170f0:	f816 8000 	ldrb.w	r8, [r6, r0]
 80170f4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80170f8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80170fc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017100:	1837      	adds	r7, r6, r0
 8017102:	eb04 0c08 	add.w	ip, r4, r8
 8017106:	2b00      	cmp	r3, #0
 8017108:	d060      	beq.n	80171cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801710a:	787e      	ldrb	r6, [r7, #1]
 801710c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017110:	4426      	add	r6, r4
 8017112:	2900      	cmp	r1, #0
 8017114:	d062      	beq.n	80171dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8017116:	18b8      	adds	r0, r7, r2
 8017118:	5cba      	ldrb	r2, [r7, r2]
 801711a:	7840      	ldrb	r0, [r0, #1]
 801711c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017120:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017124:	4422      	add	r2, r4
 8017126:	4420      	add	r0, r4
 8017128:	b29b      	uxth	r3, r3
 801712a:	b289      	uxth	r1, r1
 801712c:	fb03 f901 	mul.w	r9, r3, r1
 8017130:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017134:	011b      	lsls	r3, r3, #4
 8017136:	b289      	uxth	r1, r1
 8017138:	78b7      	ldrb	r7, [r6, #2]
 801713a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801713e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017142:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017146:	eba3 0309 	sub.w	r3, r3, r9
 801714a:	b29b      	uxth	r3, r3
 801714c:	ebae 0e01 	sub.w	lr, lr, r1
 8017150:	fa1f fe8e 	uxth.w	lr, lr
 8017154:	435f      	muls	r7, r3
 8017156:	fb0e 770a 	mla	r7, lr, sl, r7
 801715a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801715e:	fb01 770a 	mla	r7, r1, sl, r7
 8017162:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017166:	fb09 7a0a 	mla	sl, r9, sl, r7
 801716a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801716e:	f896 8000 	ldrb.w	r8, [r6]
 8017172:	7876      	ldrb	r6, [r6, #1]
 8017174:	fb03 f808 	mul.w	r8, r3, r8
 8017178:	fb0e 8807 	mla	r8, lr, r7, r8
 801717c:	7817      	ldrb	r7, [r2, #0]
 801717e:	fb01 8807 	mla	r8, r1, r7, r8
 8017182:	7807      	ldrb	r7, [r0, #0]
 8017184:	fb09 8707 	mla	r7, r9, r7, r8
 8017188:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801718c:	4373      	muls	r3, r6
 801718e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017192:	7856      	ldrb	r6, [r2, #1]
 8017194:	ea47 070a 	orr.w	r7, r7, sl
 8017198:	fb0e 330c 	mla	r3, lr, ip, r3
 801719c:	f890 a001 	ldrb.w	sl, [r0, #1]
 80171a0:	fb01 3306 	mla	r3, r1, r6, r3
 80171a4:	fb09 3a0a 	mla	sl, r9, sl, r3
 80171a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80171ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80171ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80171b2:	ea47 070a 	orr.w	r7, r7, sl
 80171b6:	f823 7b02 	strh.w	r7, [r3], #2
 80171ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80171bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80171be:	449b      	add	fp, r3
 80171c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80171c2:	441d      	add	r5, r3
 80171c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80171c6:	3b01      	subs	r3, #1
 80171c8:	9309      	str	r3, [sp, #36]	; 0x24
 80171ca:	e714      	b.n	8016ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80171cc:	b149      	cbz	r1, 80171e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80171ce:	5cba      	ldrb	r2, [r7, r2]
 80171d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80171d4:	4422      	add	r2, r4
 80171d6:	4660      	mov	r0, ip
 80171d8:	4666      	mov	r6, ip
 80171da:	e7a5      	b.n	8017128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80171dc:	4660      	mov	r0, ip
 80171de:	4662      	mov	r2, ip
 80171e0:	e7a2      	b.n	8017128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80171e2:	4660      	mov	r0, ip
 80171e4:	4662      	mov	r2, ip
 80171e6:	e7f7      	b.n	80171d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80171e8:	b00f      	add	sp, #60	; 0x3c
 80171ea:	ecbd 8b08 	vpop	{d8-d11}
 80171ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080171f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80171f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171f8:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 80171fc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8017200:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8017204:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8017208:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 801720c:	fb04 560c 	mla	r6, r4, ip, r5
 8017210:	2c00      	cmp	r4, #0
 8017212:	eb02 0e06 	add.w	lr, r2, r6
 8017216:	db3d      	blt.n	8017294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8017218:	45a0      	cmp	r8, r4
 801721a:	dd3b      	ble.n	8017294 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801721c:	2d00      	cmp	r5, #0
 801721e:	db37      	blt.n	8017290 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017220:	45ac      	cmp	ip, r5
 8017222:	dd35      	ble.n	8017290 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017224:	5d92      	ldrb	r2, [r2, r6]
 8017226:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801722a:	1c6e      	adds	r6, r5, #1
 801722c:	d435      	bmi.n	801729a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801722e:	45b4      	cmp	ip, r6
 8017230:	dd33      	ble.n	801729a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8017232:	b3a0      	cbz	r0, 801729e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8017234:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8017238:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801723c:	3401      	adds	r4, #1
 801723e:	d432      	bmi.n	80172a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017240:	45a0      	cmp	r8, r4
 8017242:	dd30      	ble.n	80172a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017244:	b397      	cbz	r7, 80172ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8017246:	2d00      	cmp	r5, #0
 8017248:	db2b      	blt.n	80172a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801724a:	45ac      	cmp	ip, r5
 801724c:	dd29      	ble.n	80172a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801724e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8017252:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017256:	3501      	adds	r5, #1
 8017258:	d42b      	bmi.n	80172b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801725a:	45ac      	cmp	ip, r5
 801725c:	dd29      	ble.n	80172b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801725e:	b350      	cbz	r0, 80172b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8017260:	44f4      	add	ip, lr
 8017262:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017266:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801726a:	280f      	cmp	r0, #15
 801726c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017270:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017274:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017278:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801727c:	d801      	bhi.n	8017282 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801727e:	2f0f      	cmp	r7, #15
 8017280:	d91b      	bls.n	80172ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8017282:	4b8d      	ldr	r3, [pc, #564]	; (80174b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8017284:	4a8d      	ldr	r2, [pc, #564]	; (80174bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8017286:	488e      	ldr	r0, [pc, #568]	; (80174c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8017288:	f240 11f9 	movw	r1, #505	; 0x1f9
 801728c:	f005 fd16 	bl	801ccbc <__assert_func>
 8017290:	2200      	movs	r2, #0
 8017292:	e7ca      	b.n	801722a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8017294:	2600      	movs	r6, #0
 8017296:	4632      	mov	r2, r6
 8017298:	e7d0      	b.n	801723c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801729a:	2600      	movs	r6, #0
 801729c:	e7ce      	b.n	801723c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801729e:	4606      	mov	r6, r0
 80172a0:	e7cc      	b.n	801723c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80172a2:	2400      	movs	r4, #0
 80172a4:	e7d7      	b.n	8017256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 80172a6:	2300      	movs	r3, #0
 80172a8:	461c      	mov	r4, r3
 80172aa:	e7de      	b.n	801726a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80172ac:	463b      	mov	r3, r7
 80172ae:	463c      	mov	r4, r7
 80172b0:	e7db      	b.n	801726a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80172b2:	2300      	movs	r3, #0
 80172b4:	e7d9      	b.n	801726a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80172b6:	4603      	mov	r3, r0
 80172b8:	e7d7      	b.n	801726a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80172ba:	b280      	uxth	r0, r0
 80172bc:	b2bf      	uxth	r7, r7
 80172be:	fb07 fe00 	mul.w	lr, r7, r0
 80172c2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80172c6:	0100      	lsls	r0, r0, #4
 80172c8:	eba0 0c0e 	sub.w	ip, r0, lr
 80172cc:	b2bf      	uxth	r7, r7
 80172ce:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80172d2:	fa1f fc8c 	uxth.w	ip, ip
 80172d6:	1bed      	subs	r5, r5, r7
 80172d8:	b2ad      	uxth	r5, r5
 80172da:	fb0a f00c 	mul.w	r0, sl, ip
 80172de:	fb0b 0005 	mla	r0, fp, r5, r0
 80172e2:	fb07 0009 	mla	r0, r7, r9, r0
 80172e6:	fb0e 0008 	mla	r0, lr, r8, r0
 80172ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80172ee:	9001      	str	r0, [sp, #4]
 80172f0:	2800      	cmp	r0, #0
 80172f2:	f000 80de 	beq.w	80174b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80172f6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80172fa:	d018      	beq.n	801732e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80172fc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017300:	fb0b f000 	mul.w	r0, fp, r0
 8017304:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017308:	fb0b fb02 	mul.w	fp, fp, r2
 801730c:	0a02      	lsrs	r2, r0, #8
 801730e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017312:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017316:	4402      	add	r2, r0
 8017318:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801731c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017320:	0a12      	lsrs	r2, r2, #8
 8017322:	0a00      	lsrs	r0, r0, #8
 8017324:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017328:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801732c:	4302      	orrs	r2, r0
 801732e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017332:	d01a      	beq.n	801736a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8017334:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8017338:	fb0a f000 	mul.w	r0, sl, r0
 801733c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017340:	fb0a fa06 	mul.w	sl, sl, r6
 8017344:	0a06      	lsrs	r6, r0, #8
 8017346:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801734a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801734e:	4406      	add	r6, r0
 8017350:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017354:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8017358:	0a36      	lsrs	r6, r6, #8
 801735a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801735e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017362:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017366:	ea46 060a 	orr.w	r6, r6, sl
 801736a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801736e:	d01b      	beq.n	80173a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8017370:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017374:	fb09 fa0a 	mul.w	sl, r9, sl
 8017378:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801737c:	fb09 f004 	mul.w	r0, r9, r4
 8017380:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017384:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017388:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801738c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8017390:	4454      	add	r4, sl
 8017392:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8017396:	0a24      	lsrs	r4, r4, #8
 8017398:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801739c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80173a0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80173a4:	ea44 0409 	orr.w	r4, r4, r9
 80173a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80173ac:	d01b      	beq.n	80173e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 80173ae:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80173b2:	fb08 f909 	mul.w	r9, r8, r9
 80173b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80173ba:	fb08 f003 	mul.w	r0, r8, r3
 80173be:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80173c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80173c6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80173ca:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80173ce:	444b      	add	r3, r9
 80173d0:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80173d4:	0a1b      	lsrs	r3, r3, #8
 80173d6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80173da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80173de:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80173e2:	ea43 0308 	orr.w	r3, r3, r8
 80173e6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80173ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80173ee:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80173f2:	fb0c f808 	mul.w	r8, ip, r8
 80173f6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80173fa:	fb0c f606 	mul.w	r6, ip, r6
 80173fe:	fb05 8909 	mla	r9, r5, r9, r8
 8017402:	fb05 6502 	mla	r5, r5, r2, r6
 8017406:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801740a:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801740e:	9a01      	ldr	r2, [sp, #4]
 8017410:	8808      	ldrh	r0, [r1, #0]
 8017412:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017416:	fb07 9908 	mla	r9, r7, r8, r9
 801741a:	fb07 5704 	mla	r7, r7, r4, r5
 801741e:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8017422:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017426:	b2b6      	uxth	r6, r6
 8017428:	fb0e 9808 	mla	r8, lr, r8, r9
 801742c:	fb0e 7e03 	mla	lr, lr, r3, r7
 8017430:	4372      	muls	r2, r6
 8017432:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017436:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801743a:	1c53      	adds	r3, r2, #1
 801743c:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8017440:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017444:	ea48 0e0e 	orr.w	lr, r8, lr
 8017448:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801744c:	1205      	asrs	r5, r0, #8
 801744e:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8017452:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017456:	b2db      	uxtb	r3, r3
 8017458:	fb12 f206 	smulbb	r2, r2, r6
 801745c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017460:	fb05 2503 	mla	r5, r5, r3, r2
 8017464:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8017468:	10c2      	asrs	r2, r0, #3
 801746a:	fa5f fe8e 	uxtb.w	lr, lr
 801746e:	00c0      	lsls	r0, r0, #3
 8017470:	fb14 f406 	smulbb	r4, r4, r6
 8017474:	b2c0      	uxtb	r0, r0
 8017476:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801747a:	fb1e fe06 	smulbb	lr, lr, r6
 801747e:	fb02 4203 	mla	r2, r2, r3, r4
 8017482:	b2ad      	uxth	r5, r5
 8017484:	fb00 e303 	mla	r3, r0, r3, lr
 8017488:	b298      	uxth	r0, r3
 801748a:	b294      	uxth	r4, r2
 801748c:	1c6b      	adds	r3, r5, #1
 801748e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017492:	1c62      	adds	r2, r4, #1
 8017494:	1c43      	adds	r3, r0, #1
 8017496:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801749a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801749e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80174a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80174a6:	0952      	lsrs	r2, r2, #5
 80174a8:	432b      	orrs	r3, r5
 80174aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80174ae:	4313      	orrs	r3, r2
 80174b0:	800b      	strh	r3, [r1, #0]
 80174b2:	b003      	add	sp, #12
 80174b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174b8:	08021447 	.word	0x08021447
 80174bc:	08021976 	.word	0x08021976
 80174c0:	08021414 	.word	0x08021414

080174c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80174c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174c8:	ed2d 8b08 	vpush	{d8-d11}
 80174cc:	b09f      	sub	sp, #124	; 0x7c
 80174ce:	eeb0 aa40 	vmov.f32	s20, s0
 80174d2:	921b      	str	r2, [sp, #108]	; 0x6c
 80174d4:	9309      	str	r3, [sp, #36]	; 0x24
 80174d6:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80174d8:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80174dc:	931c      	str	r3, [sp, #112]	; 0x70
 80174de:	9119      	str	r1, [sp, #100]	; 0x64
 80174e0:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80174e4:	901d      	str	r0, [sp, #116]	; 0x74
 80174e6:	6850      	ldr	r0, [r2, #4]
 80174e8:	6812      	ldr	r2, [r2, #0]
 80174ea:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80174ec:	fb00 1303 	mla	r3, r0, r3, r1
 80174f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80174f4:	930c      	str	r3, [sp, #48]	; 0x30
 80174f6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80174f8:	681b      	ldr	r3, [r3, #0]
 80174fa:	9312      	str	r3, [sp, #72]	; 0x48
 80174fc:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80174fe:	685e      	ldr	r6, [r3, #4]
 8017500:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017504:	930d      	str	r3, [sp, #52]	; 0x34
 8017506:	eef0 9a60 	vmov.f32	s19, s1
 801750a:	eeb0 9a41 	vmov.f32	s18, s2
 801750e:	eeb0 8a62 	vmov.f32	s16, s5
 8017512:	eef0 8a43 	vmov.f32	s17, s6
 8017516:	eef0 ba44 	vmov.f32	s23, s8
 801751a:	eeb0 ba64 	vmov.f32	s22, s9
 801751e:	eef0 aa45 	vmov.f32	s21, s10
 8017522:	3604      	adds	r6, #4
 8017524:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017526:	2b00      	cmp	r3, #0
 8017528:	dc03      	bgt.n	8017532 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801752a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801752c:	2b00      	cmp	r3, #0
 801752e:	f340 8388 	ble.w	8017c42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8017532:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017534:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017538:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801753c:	1e48      	subs	r0, r1, #1
 801753e:	1e57      	subs	r7, r2, #1
 8017540:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017542:	2b00      	cmp	r3, #0
 8017544:	f340 8195 	ble.w	8017872 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8017548:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801754a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801754e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017552:	d406      	bmi.n	8017562 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017554:	4584      	cmp	ip, r0
 8017556:	da04      	bge.n	8017562 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017558:	2b00      	cmp	r3, #0
 801755a:	db02      	blt.n	8017562 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801755c:	42bb      	cmp	r3, r7
 801755e:	f2c0 8189 	blt.w	8017874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8017562:	f11c 0c01 	adds.w	ip, ip, #1
 8017566:	f100 8177 	bmi.w	8017858 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801756a:	4561      	cmp	r1, ip
 801756c:	f2c0 8174 	blt.w	8017858 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8017570:	3301      	adds	r3, #1
 8017572:	f100 8171 	bmi.w	8017858 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8017576:	429a      	cmp	r2, r3
 8017578:	f2c0 816e 	blt.w	8017858 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801757c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801757e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017580:	931a      	str	r3, [sp, #104]	; 0x68
 8017582:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017584:	2b00      	cmp	r3, #0
 8017586:	f340 8193 	ble.w	80178b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801758a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801758c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017590:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017592:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017596:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017598:	141b      	asrs	r3, r3, #16
 801759a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801759e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80175a2:	f100 81d6 	bmi.w	8017952 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80175a6:	f100 38ff 	add.w	r8, r0, #4294967295
 80175aa:	4543      	cmp	r3, r8
 80175ac:	f280 81d1 	bge.w	8017952 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80175b0:	f1bc 0f00 	cmp.w	ip, #0
 80175b4:	f2c0 81cd 	blt.w	8017952 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80175b8:	f10e 38ff 	add.w	r8, lr, #4294967295
 80175bc:	45c4      	cmp	ip, r8
 80175be:	f280 81c8 	bge.w	8017952 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80175c2:	b200      	sxth	r0, r0
 80175c4:	fb0c 3300 	mla	r3, ip, r0, r3
 80175c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80175ca:	eb04 0803 	add.w	r8, r4, r3
 80175ce:	5ce3      	ldrb	r3, [r4, r3]
 80175d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80175d4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80175d8:	2a00      	cmp	r2, #0
 80175da:	f000 81af 	beq.w	801793c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80175de:	f898 c001 	ldrb.w	ip, [r8, #1]
 80175e2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80175e6:	940e      	str	r4, [sp, #56]	; 0x38
 80175e8:	0e24      	lsrs	r4, r4, #24
 80175ea:	9415      	str	r4, [sp, #84]	; 0x54
 80175ec:	b179      	cbz	r1, 801760e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80175ee:	eb08 0c00 	add.w	ip, r8, r0
 80175f2:	f818 0000 	ldrb.w	r0, [r8, r0]
 80175f6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80175fa:	900a      	str	r0, [sp, #40]	; 0x28
 80175fc:	0e00      	lsrs	r0, r0, #24
 80175fe:	9013      	str	r0, [sp, #76]	; 0x4c
 8017600:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017604:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017608:	900f      	str	r0, [sp, #60]	; 0x3c
 801760a:	0e00      	lsrs	r0, r0, #24
 801760c:	9016      	str	r0, [sp, #88]	; 0x58
 801760e:	b292      	uxth	r2, r2
 8017610:	b289      	uxth	r1, r1
 8017612:	fb02 f901 	mul.w	r9, r2, r1
 8017616:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801761a:	0112      	lsls	r2, r2, #4
 801761c:	eba2 0809 	sub.w	r8, r2, r9
 8017620:	b289      	uxth	r1, r1
 8017622:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017626:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017628:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801762a:	fa1f f888 	uxth.w	r8, r8
 801762e:	1a52      	subs	r2, r2, r1
 8017630:	b292      	uxth	r2, r2
 8017632:	fb08 f000 	mul.w	r0, r8, r0
 8017636:	fb02 000e 	mla	r0, r2, lr, r0
 801763a:	fb01 0004 	mla	r0, r1, r4, r0
 801763e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017640:	fb09 0004 	mla	r0, r9, r4, r0
 8017644:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017648:	2800      	cmp	r0, #0
 801764a:	f000 80fa 	beq.w	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801764e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017652:	d01b      	beq.n	801768c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017654:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017658:	fb0e fa0a 	mul.w	sl, lr, sl
 801765c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017660:	fb0e fe03 	mul.w	lr, lr, r3
 8017664:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017668:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801766c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017670:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017674:	4453      	add	r3, sl
 8017676:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801767a:	0a1b      	lsrs	r3, r3, #8
 801767c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017680:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017684:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017688:	ea43 030c 	orr.w	r3, r3, ip
 801768c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801768e:	2cff      	cmp	r4, #255	; 0xff
 8017690:	d021      	beq.n	80176d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017692:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017694:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017698:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801769a:	fb04 fb0b 	mul.w	fp, r4, fp
 801769e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80176a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80176a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80176a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80176aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80176ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80176b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80176b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80176ba:	44de      	add	lr, fp
 80176bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80176c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80176c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80176c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80176cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80176d0:	ea4e 040a 	orr.w	r4, lr, sl
 80176d4:	940e      	str	r4, [sp, #56]	; 0x38
 80176d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80176d8:	2cff      	cmp	r4, #255	; 0xff
 80176da:	d021      	beq.n	8017720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80176dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80176de:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80176e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80176e4:	fb04 fb0b 	mul.w	fp, r4, fp
 80176e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80176ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80176ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80176f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80176f4:	fb04 fa0a 	mul.w	sl, r4, sl
 80176f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80176fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017700:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017704:	44de      	add	lr, fp
 8017706:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801770a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801770e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017712:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017716:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801771a:	ea4e 040a 	orr.w	r4, lr, sl
 801771e:	940a      	str	r4, [sp, #40]	; 0x28
 8017720:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017722:	2cff      	cmp	r4, #255	; 0xff
 8017724:	d021      	beq.n	801776a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017726:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017728:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801772c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801772e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017732:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017734:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017738:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801773a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801773e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017742:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017746:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801774a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801774e:	44de      	add	lr, fp
 8017750:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017754:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017758:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801775c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017760:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017764:	ea4e 040a 	orr.w	r4, lr, sl
 8017768:	940f      	str	r4, [sp, #60]	; 0x3c
 801776a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801776c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017770:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017772:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017776:	fb08 fc0c 	mul.w	ip, r8, ip
 801777a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801777e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017782:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017784:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017788:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801778c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801778e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017792:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017796:	fb08 f80e 	mul.w	r8, r8, lr
 801779a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801779e:	fb02 8303 	mla	r3, r2, r3, r8
 80177a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80177a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80177a6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80177aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80177ac:	fb01 330a 	mla	r3, r1, sl, r3
 80177b0:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80177b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80177b6:	fb09 3901 	mla	r9, r9, r1, r3
 80177ba:	4342      	muls	r2, r0
 80177bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80177c4:	883b      	ldrh	r3, [r7, #0]
 80177c6:	1c50      	adds	r0, r2, #1
 80177c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80177cc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80177d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80177d4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80177d8:	1219      	asrs	r1, r3, #8
 80177da:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80177de:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80177e2:	b2c0      	uxtb	r0, r0
 80177e4:	fb12 f204 	smulbb	r2, r2, r4
 80177e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80177ec:	fb01 2100 	mla	r1, r1, r0, r2
 80177f0:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80177f4:	10da      	asrs	r2, r3, #3
 80177f6:	fa5f fc8c 	uxtb.w	ip, ip
 80177fa:	00db      	lsls	r3, r3, #3
 80177fc:	fb1c fc04 	smulbb	ip, ip, r4
 8017800:	b2db      	uxtb	r3, r3
 8017802:	b289      	uxth	r1, r1
 8017804:	fb03 c300 	mla	r3, r3, r0, ip
 8017808:	fa1f fc83 	uxth.w	ip, r3
 801780c:	1c4b      	adds	r3, r1, #1
 801780e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017812:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017816:	fb1e fe04 	smulbb	lr, lr, r4
 801781a:	f10c 0301 	add.w	r3, ip, #1
 801781e:	fb02 e200 	mla	r2, r2, r0, lr
 8017822:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017826:	b292      	uxth	r2, r2
 8017828:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801782c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017830:	430b      	orrs	r3, r1
 8017832:	1c51      	adds	r1, r2, #1
 8017834:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017838:	0952      	lsrs	r2, r2, #5
 801783a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801783e:	4313      	orrs	r3, r2
 8017840:	803b      	strh	r3, [r7, #0]
 8017842:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8017844:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017846:	441a      	add	r2, r3
 8017848:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801784a:	9231      	str	r2, [sp, #196]	; 0xc4
 801784c:	441d      	add	r5, r3
 801784e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017850:	3b01      	subs	r3, #1
 8017852:	3702      	adds	r7, #2
 8017854:	931a      	str	r3, [sp, #104]	; 0x68
 8017856:	e694      	b.n	8017582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017858:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801785a:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801785c:	441c      	add	r4, r3
 801785e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017860:	9431      	str	r4, [sp, #196]	; 0xc4
 8017862:	441d      	add	r5, r3
 8017864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017866:	3b01      	subs	r3, #1
 8017868:	9309      	str	r3, [sp, #36]	; 0x24
 801786a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801786c:	3302      	adds	r3, #2
 801786e:	930c      	str	r3, [sp, #48]	; 0x30
 8017870:	e666      	b.n	8017540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017872:	d024      	beq.n	80178be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8017874:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017876:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8017878:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801787a:	3b01      	subs	r3, #1
 801787c:	fb00 4003 	mla	r0, r0, r3, r4
 8017880:	1400      	asrs	r0, r0, #16
 8017882:	f53f ae7b 	bmi.w	801757c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8017886:	3901      	subs	r1, #1
 8017888:	4288      	cmp	r0, r1
 801788a:	f6bf ae77 	bge.w	801757c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801788e:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8017890:	fb01 5303 	mla	r3, r1, r3, r5
 8017894:	141b      	asrs	r3, r3, #16
 8017896:	f53f ae71 	bmi.w	801757c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801789a:	3a01      	subs	r2, #1
 801789c:	4293      	cmp	r3, r2
 801789e:	f6bf ae6d 	bge.w	801757c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80178a2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80178a6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80178aa:	f1bb 0f00 	cmp.w	fp, #0
 80178ae:	dc70      	bgt.n	8017992 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80178b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80178b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80178b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178b8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80178bc:	930c      	str	r3, [sp, #48]	; 0x30
 80178be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80178c0:	2b00      	cmp	r3, #0
 80178c2:	f340 81be 	ble.w	8017c42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80178c6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80178ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80178ce:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80178d2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80178d4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80178d8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80178dc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80178e0:	eef0 6a48 	vmov.f32	s13, s16
 80178e4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80178e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178ec:	ee37 8a48 	vsub.f32	s16, s14, s16
 80178f0:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80178f4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80178f8:	eef0 6a68 	vmov.f32	s13, s17
 80178fc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017900:	ee18 2a10 	vmov	r2, s16
 8017904:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017908:	fb92 f3f3 	sdiv	r3, r2, r3
 801790c:	ee18 2a90 	vmov	r2, s17
 8017910:	9333      	str	r3, [sp, #204]	; 0xcc
 8017912:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017914:	fb92 f3f3 	sdiv	r3, r2, r3
 8017918:	9334      	str	r3, [sp, #208]	; 0xd0
 801791a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801791c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801791e:	3b01      	subs	r3, #1
 8017920:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017924:	9319      	str	r3, [sp, #100]	; 0x64
 8017926:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017928:	bf08      	it	eq
 801792a:	4613      	moveq	r3, r2
 801792c:	ee16 5a90 	vmov	r5, s13
 8017930:	9309      	str	r3, [sp, #36]	; 0x24
 8017932:	eef0 8a67 	vmov.f32	s17, s15
 8017936:	eeb0 8a47 	vmov.f32	s16, s14
 801793a:	e5f3      	b.n	8017524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801793c:	2900      	cmp	r1, #0
 801793e:	f43f ae66 	beq.w	801760e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017942:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017946:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801794a:	900a      	str	r0, [sp, #40]	; 0x28
 801794c:	0e00      	lsrs	r0, r0, #24
 801794e:	9013      	str	r0, [sp, #76]	; 0x4c
 8017950:	e65d      	b.n	801760e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017952:	f113 0801 	adds.w	r8, r3, #1
 8017956:	f53f af74 	bmi.w	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801795a:	4540      	cmp	r0, r8
 801795c:	f6ff af71 	blt.w	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017960:	f11c 0801 	adds.w	r8, ip, #1
 8017964:	f53f af6d 	bmi.w	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017968:	45c6      	cmp	lr, r8
 801796a:	f6ff af6a 	blt.w	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801796e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8017970:	9302      	str	r3, [sp, #8]
 8017972:	b200      	sxth	r0, r0
 8017974:	fa0f f38e 	sxth.w	r3, lr
 8017978:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801797c:	e9cd c203 	strd	ip, r2, [sp, #12]
 8017980:	9301      	str	r3, [sp, #4]
 8017982:	9000      	str	r0, [sp, #0]
 8017984:	4633      	mov	r3, r6
 8017986:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017988:	981d      	ldr	r0, [sp, #116]	; 0x74
 801798a:	4639      	mov	r1, r7
 801798c:	f7ff fc32 	bl	80171f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8017990:	e757      	b.n	8017842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017992:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017994:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8017996:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801799a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801799c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80179a0:	1427      	asrs	r7, r4, #16
 80179a2:	142b      	asrs	r3, r5, #16
 80179a4:	fb01 7303 	mla	r3, r1, r3, r7
 80179a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80179aa:	18e7      	adds	r7, r4, r3
 80179ac:	5ce3      	ldrb	r3, [r4, r3]
 80179ae:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80179b2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80179b6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80179ba:	2a00      	cmp	r2, #0
 80179bc:	f000 8137 	beq.w	8017c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80179c0:	f897 e001 	ldrb.w	lr, [r7, #1]
 80179c4:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80179c8:	9410      	str	r4, [sp, #64]	; 0x40
 80179ca:	0e24      	lsrs	r4, r4, #24
 80179cc:	9417      	str	r4, [sp, #92]	; 0x5c
 80179ce:	b170      	cbz	r0, 80179ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80179d0:	eb07 0e01 	add.w	lr, r7, r1
 80179d4:	5c79      	ldrb	r1, [r7, r1]
 80179d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80179da:	910b      	str	r1, [sp, #44]	; 0x2c
 80179dc:	0e09      	lsrs	r1, r1, #24
 80179de:	9114      	str	r1, [sp, #80]	; 0x50
 80179e0:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80179e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80179e8:	9111      	str	r1, [sp, #68]	; 0x44
 80179ea:	0e09      	lsrs	r1, r1, #24
 80179ec:	9118      	str	r1, [sp, #96]	; 0x60
 80179ee:	b292      	uxth	r2, r2
 80179f0:	b280      	uxth	r0, r0
 80179f2:	fb02 f800 	mul.w	r8, r2, r0
 80179f6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80179fa:	0112      	lsls	r2, r2, #4
 80179fc:	eba2 0e08 	sub.w	lr, r2, r8
 8017a00:	b280      	uxth	r0, r0
 8017a02:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017a06:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017a08:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017a0a:	fa1f fe8e 	uxth.w	lr, lr
 8017a0e:	1a12      	subs	r2, r2, r0
 8017a10:	b292      	uxth	r2, r2
 8017a12:	fb0e f101 	mul.w	r1, lr, r1
 8017a16:	fb02 110c 	mla	r1, r2, ip, r1
 8017a1a:	fb00 1104 	mla	r1, r0, r4, r1
 8017a1e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017a20:	fb08 1104 	mla	r1, r8, r4, r1
 8017a24:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017a28:	2900      	cmp	r1, #0
 8017a2a:	f000 80f5 	beq.w	8017c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8017a2e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017a32:	d019      	beq.n	8017a68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8017a34:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017a38:	fb0c fa0a 	mul.w	sl, ip, sl
 8017a3c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017a40:	fb0c fc03 	mul.w	ip, ip, r3
 8017a44:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017a48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017a4c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017a50:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017a54:	4453      	add	r3, sl
 8017a56:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017a5a:	0a1b      	lsrs	r3, r3, #8
 8017a5c:	0a3f      	lsrs	r7, r7, #8
 8017a5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017a62:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017a66:	433b      	orrs	r3, r7
 8017a68:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017a6a:	2cff      	cmp	r4, #255	; 0xff
 8017a6c:	d020      	beq.n	8017ab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8017a6e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017a70:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017a74:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017a76:	4367      	muls	r7, r4
 8017a78:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017a7a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017a7e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017a80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017a84:	fb04 fa0a 	mul.w	sl, r4, sl
 8017a88:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017a8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017a90:	44bc      	add	ip, r7
 8017a92:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017a96:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017a9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017a9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017aa2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017aa6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017aaa:	ea4c 040a 	orr.w	r4, ip, sl
 8017aae:	9410      	str	r4, [sp, #64]	; 0x40
 8017ab0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017ab2:	2cff      	cmp	r4, #255	; 0xff
 8017ab4:	d020      	beq.n	8017af8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8017ab6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ab8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017abc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017abe:	4367      	muls	r7, r4
 8017ac0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ac2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017ac6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017ac8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017acc:	fb04 fa0a 	mul.w	sl, r4, sl
 8017ad0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017ad4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017ad8:	44bc      	add	ip, r7
 8017ada:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017ade:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017ae2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ae6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017aea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017aee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017af2:	ea4c 040a 	orr.w	r4, ip, sl
 8017af6:	940b      	str	r4, [sp, #44]	; 0x2c
 8017af8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017afa:	2cff      	cmp	r4, #255	; 0xff
 8017afc:	d020      	beq.n	8017b40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8017afe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017b00:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017b04:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017b06:	4367      	muls	r7, r4
 8017b08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017b0a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017b0e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017b10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017b14:	fb04 fa0a 	mul.w	sl, r4, sl
 8017b18:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017b1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017b20:	44bc      	add	ip, r7
 8017b22:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017b26:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017b2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017b2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017b32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017b36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017b3a:	ea4c 040a 	orr.w	r4, ip, sl
 8017b3e:	9411      	str	r4, [sp, #68]	; 0x44
 8017b40:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017b42:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017b46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017b48:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017b4c:	fb0e f707 	mul.w	r7, lr, r7
 8017b50:	fb02 770c 	mla	r7, r2, ip, r7
 8017b54:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017b58:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017b5a:	fb00 770c 	mla	r7, r0, ip, r7
 8017b5e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017b62:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017b64:	fb08 770c 	mla	r7, r8, ip, r7
 8017b68:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017b6c:	fb0e fe0c 	mul.w	lr, lr, ip
 8017b70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b74:	fb02 e303 	mla	r3, r2, r3, lr
 8017b78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017b7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017b7c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017b80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017b82:	fb00 330a 	mla	r3, r0, sl, r3
 8017b86:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017b8a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017b8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b90:	f8b9 0000 	ldrh.w	r0, [r9]
 8017b94:	434b      	muls	r3, r1
 8017b96:	0a3f      	lsrs	r7, r7, #8
 8017b98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017b9c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017ba0:	1c59      	adds	r1, r3, #1
 8017ba2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017ba6:	ea47 070c 	orr.w	r7, r7, ip
 8017baa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017bae:	1202      	asrs	r2, r0, #8
 8017bb0:	0c3b      	lsrs	r3, r7, #16
 8017bb2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017bb6:	b2c9      	uxtb	r1, r1
 8017bb8:	fb13 f304 	smulbb	r3, r3, r4
 8017bbc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017bc0:	fb02 3201 	mla	r2, r2, r1, r3
 8017bc4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8017bc8:	10c3      	asrs	r3, r0, #3
 8017bca:	b2ff      	uxtb	r7, r7
 8017bcc:	00c0      	lsls	r0, r0, #3
 8017bce:	b292      	uxth	r2, r2
 8017bd0:	fb1c fc04 	smulbb	ip, ip, r4
 8017bd4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017bd8:	b2c0      	uxtb	r0, r0
 8017bda:	fb17 f704 	smulbb	r7, r7, r4
 8017bde:	fb03 c301 	mla	r3, r3, r1, ip
 8017be2:	fb00 7001 	mla	r0, r0, r1, r7
 8017be6:	f102 0c01 	add.w	ip, r2, #1
 8017bea:	b280      	uxth	r0, r0
 8017bec:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017bf0:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8017bf4:	1c42      	adds	r2, r0, #1
 8017bf6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017bfa:	b29b      	uxth	r3, r3
 8017bfc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c00:	ea42 020c 	orr.w	r2, r2, ip
 8017c04:	f103 0c01 	add.w	ip, r3, #1
 8017c08:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017c0c:	095b      	lsrs	r3, r3, #5
 8017c0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c12:	431a      	orrs	r2, r3
 8017c14:	f8a9 2000 	strh.w	r2, [r9]
 8017c18:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8017c1a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017c1c:	441a      	add	r2, r3
 8017c1e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017c20:	9231      	str	r2, [sp, #196]	; 0xc4
 8017c22:	f109 0902 	add.w	r9, r9, #2
 8017c26:	441d      	add	r5, r3
 8017c28:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017c2c:	e63d      	b.n	80178aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017c2e:	2800      	cmp	r0, #0
 8017c30:	f43f aedd 	beq.w	80179ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017c34:	5c79      	ldrb	r1, [r7, r1]
 8017c36:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017c3a:	910b      	str	r1, [sp, #44]	; 0x2c
 8017c3c:	0e09      	lsrs	r1, r1, #24
 8017c3e:	9114      	str	r1, [sp, #80]	; 0x50
 8017c40:	e6d5      	b.n	80179ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017c42:	b01f      	add	sp, #124	; 0x7c
 8017c44:	ecbd 8b08 	vpop	{d8-d11}
 8017c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017c4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8017c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c50:	880e      	ldrh	r6, [r1, #0]
 8017c52:	b085      	sub	sp, #20
 8017c54:	ea4f 2826 	mov.w	r8, r6, asr #8
 8017c58:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8017c5c:	4691      	mov	r9, r2
 8017c5e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017c62:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8017c66:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017c6a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8017c6e:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8017c72:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8017c76:	9200      	str	r2, [sp, #0]
 8017c78:	00f6      	lsls	r6, r6, #3
 8017c7a:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8017c7e:	9201      	str	r2, [sp, #4]
 8017c80:	2c00      	cmp	r4, #0
 8017c82:	b2f2      	uxtb	r2, r6
 8017c84:	fb04 560c 	mla	r6, r4, ip, r5
 8017c88:	9202      	str	r2, [sp, #8]
 8017c8a:	eb09 0806 	add.w	r8, r9, r6
 8017c8e:	db3f      	blt.n	8017d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017c90:	45a6      	cmp	lr, r4
 8017c92:	dd3d      	ble.n	8017d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017c94:	2d00      	cmp	r5, #0
 8017c96:	db39      	blt.n	8017d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017c98:	45ac      	cmp	ip, r5
 8017c9a:	dd37      	ble.n	8017d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017c9c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8017ca0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017ca4:	1c6e      	adds	r6, r5, #1
 8017ca6:	d436      	bmi.n	8017d16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017ca8:	45b4      	cmp	ip, r6
 8017caa:	dd34      	ble.n	8017d16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017cac:	b3a8      	cbz	r0, 8017d1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8017cae:	f898 6001 	ldrb.w	r6, [r8, #1]
 8017cb2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8017cb6:	3401      	adds	r4, #1
 8017cb8:	d433      	bmi.n	8017d22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017cba:	45a6      	cmp	lr, r4
 8017cbc:	dd31      	ble.n	8017d22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017cbe:	b39f      	cbz	r7, 8017d28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8017cc0:	2d00      	cmp	r5, #0
 8017cc2:	eb08 0e0c 	add.w	lr, r8, ip
 8017cc6:	db2a      	blt.n	8017d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017cc8:	45ac      	cmp	ip, r5
 8017cca:	dd28      	ble.n	8017d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017ccc:	f818 400c 	ldrb.w	r4, [r8, ip]
 8017cd0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017cd4:	3501      	adds	r5, #1
 8017cd6:	d42a      	bmi.n	8017d2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017cd8:	45ac      	cmp	ip, r5
 8017cda:	dd28      	ble.n	8017d2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017cdc:	b348      	cbz	r0, 8017d32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8017cde:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8017ce2:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8017ce6:	280f      	cmp	r0, #15
 8017ce8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017cec:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017cf0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017cf4:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017cf8:	d801      	bhi.n	8017cfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8017cfa:	2f0f      	cmp	r7, #15
 8017cfc:	d91b      	bls.n	8017d36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8017cfe:	4b7d      	ldr	r3, [pc, #500]	; (8017ef4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8017d00:	4a7d      	ldr	r2, [pc, #500]	; (8017ef8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8017d02:	487e      	ldr	r0, [pc, #504]	; (8017efc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8017d04:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017d08:	f004 ffd8 	bl	801ccbc <__assert_func>
 8017d0c:	2200      	movs	r2, #0
 8017d0e:	e7c9      	b.n	8017ca4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8017d10:	2600      	movs	r6, #0
 8017d12:	4632      	mov	r2, r6
 8017d14:	e7cf      	b.n	8017cb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017d16:	2600      	movs	r6, #0
 8017d18:	e7cd      	b.n	8017cb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017d1a:	4606      	mov	r6, r0
 8017d1c:	e7cb      	b.n	8017cb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017d1e:	2400      	movs	r4, #0
 8017d20:	e7d8      	b.n	8017cd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8017d22:	2300      	movs	r3, #0
 8017d24:	461c      	mov	r4, r3
 8017d26:	e7de      	b.n	8017ce6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017d28:	463b      	mov	r3, r7
 8017d2a:	463c      	mov	r4, r7
 8017d2c:	e7db      	b.n	8017ce6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017d2e:	2300      	movs	r3, #0
 8017d30:	e7d9      	b.n	8017ce6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017d32:	4603      	mov	r3, r0
 8017d34:	e7d7      	b.n	8017ce6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017d36:	b280      	uxth	r0, r0
 8017d38:	b2bf      	uxth	r7, r7
 8017d3a:	fb00 fe07 	mul.w	lr, r0, r7
 8017d3e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017d42:	0100      	lsls	r0, r0, #4
 8017d44:	eba0 0c0e 	sub.w	ip, r0, lr
 8017d48:	b2bf      	uxth	r7, r7
 8017d4a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017d4e:	fa1f fc8c 	uxth.w	ip, ip
 8017d52:	1bed      	subs	r5, r5, r7
 8017d54:	b2ad      	uxth	r5, r5
 8017d56:	fb0c f00a 	mul.w	r0, ip, sl
 8017d5a:	fb05 000b 	mla	r0, r5, fp, r0
 8017d5e:	fb07 0009 	mla	r0, r7, r9, r0
 8017d62:	fb0e 0008 	mla	r0, lr, r8, r0
 8017d66:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017d6a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017d6e:	9003      	str	r0, [sp, #12]
 8017d70:	d018      	beq.n	8017da4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8017d72:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017d76:	fb0b f000 	mul.w	r0, fp, r0
 8017d7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017d7e:	fb0b fb02 	mul.w	fp, fp, r2
 8017d82:	0a02      	lsrs	r2, r0, #8
 8017d84:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017d88:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017d8c:	4402      	add	r2, r0
 8017d8e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017d92:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017d96:	0a12      	lsrs	r2, r2, #8
 8017d98:	0a00      	lsrs	r0, r0, #8
 8017d9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017d9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017da2:	4302      	orrs	r2, r0
 8017da4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017da8:	d019      	beq.n	8017dde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8017daa:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017dae:	fb0a fb0b 	mul.w	fp, sl, fp
 8017db2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017db6:	fb0a fa06 	mul.w	sl, sl, r6
 8017dba:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017dbe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017dc2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017dc6:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017dca:	445e      	add	r6, fp
 8017dcc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017dd0:	0a36      	lsrs	r6, r6, #8
 8017dd2:	0a00      	lsrs	r0, r0, #8
 8017dd4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017dd8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017ddc:	4306      	orrs	r6, r0
 8017dde:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017de2:	d019      	beq.n	8017e18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8017de4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017de8:	fb09 fa0a 	mul.w	sl, r9, sl
 8017dec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017df0:	fb09 f904 	mul.w	r9, r9, r4
 8017df4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017df8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017dfc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017e00:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017e04:	4454      	add	r4, sl
 8017e06:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017e0a:	0a24      	lsrs	r4, r4, #8
 8017e0c:	0a00      	lsrs	r0, r0, #8
 8017e0e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017e12:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017e16:	4304      	orrs	r4, r0
 8017e18:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017e1c:	d019      	beq.n	8017e52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8017e1e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017e22:	fb08 f909 	mul.w	r9, r8, r9
 8017e26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017e2a:	fb08 f803 	mul.w	r8, r8, r3
 8017e2e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017e32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017e36:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017e3a:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017e3e:	444b      	add	r3, r9
 8017e40:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017e44:	0a1b      	lsrs	r3, r3, #8
 8017e46:	0a00      	lsrs	r0, r0, #8
 8017e48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017e4c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017e50:	4303      	orrs	r3, r0
 8017e52:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017e56:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017e5a:	fb0c f808 	mul.w	r8, ip, r8
 8017e5e:	fb05 8800 	mla	r8, r5, r0, r8
 8017e62:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017e66:	fb07 8800 	mla	r8, r7, r0, r8
 8017e6a:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017e6e:	fb0e 8000 	mla	r0, lr, r0, r8
 8017e72:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017e76:	fb0c f606 	mul.w	r6, ip, r6
 8017e7a:	0a00      	lsrs	r0, r0, #8
 8017e7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017e80:	fb05 6202 	mla	r2, r5, r2, r6
 8017e84:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017e88:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8017e8c:	fb07 2700 	mla	r7, r7, r0, r2
 8017e90:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017e94:	9b03      	ldr	r3, [sp, #12]
 8017e96:	9d00      	ldr	r5, [sp, #0]
 8017e98:	9a02      	ldr	r2, [sp, #8]
 8017e9a:	fb0e 7000 	mla	r0, lr, r0, r7
 8017e9e:	43dc      	mvns	r4, r3
 8017ea0:	9b01      	ldr	r3, [sp, #4]
 8017ea2:	b2e4      	uxtb	r4, r4
 8017ea4:	0a00      	lsrs	r0, r0, #8
 8017ea6:	4363      	muls	r3, r4
 8017ea8:	4365      	muls	r5, r4
 8017eaa:	4362      	muls	r2, r4
 8017eac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017eb0:	ea48 0000 	orr.w	r0, r8, r0
 8017eb4:	4614      	mov	r4, r2
 8017eb6:	1c5e      	adds	r6, r3, #1
 8017eb8:	1c6a      	adds	r2, r5, #1
 8017eba:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8017ebe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017ec2:	0a03      	lsrs	r3, r0, #8
 8017ec4:	0c02      	lsrs	r2, r0, #16
 8017ec6:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8017eca:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017ece:	00db      	lsls	r3, r3, #3
 8017ed0:	0212      	lsls	r2, r2, #8
 8017ed2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017ed6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017eda:	4313      	orrs	r3, r2
 8017edc:	1c62      	adds	r2, r4, #1
 8017ede:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8017ee2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8017ee6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017eea:	4318      	orrs	r0, r3
 8017eec:	8008      	strh	r0, [r1, #0]
 8017eee:	b005      	add	sp, #20
 8017ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ef4:	08021447 	.word	0x08021447
 8017ef8:	08021976 	.word	0x08021976
 8017efc:	08021414 	.word	0x08021414

08017f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f04:	ed2d 8b08 	vpush	{d8-d11}
 8017f08:	b09b      	sub	sp, #108	; 0x6c
 8017f0a:	eeb0 aa40 	vmov.f32	s20, s0
 8017f0e:	9218      	str	r2, [sp, #96]	; 0x60
 8017f10:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017f12:	9116      	str	r1, [sp, #88]	; 0x58
 8017f14:	9307      	str	r3, [sp, #28]
 8017f16:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8017f1a:	9019      	str	r0, [sp, #100]	; 0x64
 8017f1c:	6850      	ldr	r0, [r2, #4]
 8017f1e:	6812      	ldr	r2, [r2, #0]
 8017f20:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8017f22:	fb00 1303 	mla	r3, r0, r3, r1
 8017f26:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017f2a:	930a      	str	r3, [sp, #40]	; 0x28
 8017f2c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017f2e:	681b      	ldr	r3, [r3, #0]
 8017f30:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f32:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017f34:	685e      	ldr	r6, [r3, #4]
 8017f36:	eef0 9a60 	vmov.f32	s19, s1
 8017f3a:	eeb0 9a41 	vmov.f32	s18, s2
 8017f3e:	eeb0 8a62 	vmov.f32	s16, s5
 8017f42:	eef0 8a43 	vmov.f32	s17, s6
 8017f46:	eef0 ba44 	vmov.f32	s23, s8
 8017f4a:	eeb0 ba64 	vmov.f32	s22, s9
 8017f4e:	eef0 aa45 	vmov.f32	s21, s10
 8017f52:	3604      	adds	r6, #4
 8017f54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017f56:	2b00      	cmp	r3, #0
 8017f58:	dc03      	bgt.n	8017f62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8017f5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017f5c:	2b00      	cmp	r3, #0
 8017f5e:	f340 8373 	ble.w	8018648 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017f62:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017f64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017f6c:	1e48      	subs	r0, r1, #1
 8017f6e:	1e57      	subs	r7, r2, #1
 8017f70:	9b07      	ldr	r3, [sp, #28]
 8017f72:	2b00      	cmp	r3, #0
 8017f74:	f340 8190 	ble.w	8018298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8017f78:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017f7a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017f7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017f82:	d406      	bmi.n	8017f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017f84:	4584      	cmp	ip, r0
 8017f86:	da04      	bge.n	8017f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017f88:	2b00      	cmp	r3, #0
 8017f8a:	db02      	blt.n	8017f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017f8c:	42bb      	cmp	r3, r7
 8017f8e:	f2c0 8184 	blt.w	801829a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8017f92:	f11c 0c01 	adds.w	ip, ip, #1
 8017f96:	f100 8172 	bmi.w	801827e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017f9a:	4561      	cmp	r1, ip
 8017f9c:	f2c0 816f 	blt.w	801827e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017fa0:	3301      	adds	r3, #1
 8017fa2:	f100 816c 	bmi.w	801827e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017fa6:	429a      	cmp	r2, r3
 8017fa8:	f2c0 8169 	blt.w	801827e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017fac:	9b07      	ldr	r3, [sp, #28]
 8017fae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017fb0:	9317      	str	r3, [sp, #92]	; 0x5c
 8017fb2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017fb4:	2b00      	cmp	r3, #0
 8017fb6:	f340 818e 	ble.w	80182d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8017fba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017fbc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017fc0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017fc2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8017fc6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017fc8:	141b      	asrs	r3, r3, #16
 8017fca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017fce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017fd2:	f100 81d1 	bmi.w	8018378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017fd6:	f101 38ff 	add.w	r8, r1, #4294967295
 8017fda:	4543      	cmp	r3, r8
 8017fdc:	f280 81cc 	bge.w	8018378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017fe0:	f1bc 0f00 	cmp.w	ip, #0
 8017fe4:	f2c0 81c8 	blt.w	8018378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017fe8:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017fec:	45c4      	cmp	ip, r8
 8017fee:	f280 81c3 	bge.w	8018378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017ff2:	b209      	sxth	r1, r1
 8017ff4:	fb0c 3301 	mla	r3, ip, r1, r3
 8017ff8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017ffa:	eb04 0803 	add.w	r8, r4, r3
 8017ffe:	5ce3      	ldrb	r3, [r4, r3]
 8018000:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018004:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018008:	2a00      	cmp	r2, #0
 801800a:	f000 81aa 	beq.w	8018362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801800e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018012:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018016:	940b      	str	r4, [sp, #44]	; 0x2c
 8018018:	0e24      	lsrs	r4, r4, #24
 801801a:	9412      	str	r4, [sp, #72]	; 0x48
 801801c:	b178      	cbz	r0, 801803e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801801e:	eb08 0c01 	add.w	ip, r8, r1
 8018022:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018026:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801802a:	9108      	str	r1, [sp, #32]
 801802c:	0e09      	lsrs	r1, r1, #24
 801802e:	9110      	str	r1, [sp, #64]	; 0x40
 8018030:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8018034:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018038:	910c      	str	r1, [sp, #48]	; 0x30
 801803a:	0e09      	lsrs	r1, r1, #24
 801803c:	9113      	str	r1, [sp, #76]	; 0x4c
 801803e:	b292      	uxth	r2, r2
 8018040:	b280      	uxth	r0, r0
 8018042:	fb02 f900 	mul.w	r9, r2, r0
 8018046:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801804a:	0112      	lsls	r2, r2, #4
 801804c:	eba2 0809 	sub.w	r8, r2, r9
 8018050:	b280      	uxth	r0, r0
 8018052:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018056:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018058:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801805a:	fa1f f888 	uxth.w	r8, r8
 801805e:	1a12      	subs	r2, r2, r0
 8018060:	b292      	uxth	r2, r2
 8018062:	fb08 f101 	mul.w	r1, r8, r1
 8018066:	fb02 110e 	mla	r1, r2, lr, r1
 801806a:	fb00 1104 	mla	r1, r0, r4, r1
 801806e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018070:	fb09 1104 	mla	r1, r9, r4, r1
 8018074:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018078:	2900      	cmp	r1, #0
 801807a:	f000 80f5 	beq.w	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801807e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018082:	d01b      	beq.n	80180bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018084:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018088:	fb0e fa0a 	mul.w	sl, lr, sl
 801808c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018090:	fb0e fe03 	mul.w	lr, lr, r3
 8018094:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018098:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801809c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80180a0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80180a4:	4453      	add	r3, sl
 80180a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80180aa:	0a1b      	lsrs	r3, r3, #8
 80180ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80180b4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80180b8:	ea43 030c 	orr.w	r3, r3, ip
 80180bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80180be:	2cff      	cmp	r4, #255	; 0xff
 80180c0:	d021      	beq.n	8018106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80180c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80180c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80180c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80180ca:	fb04 fb0b 	mul.w	fp, r4, fp
 80180ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80180d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80180d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80180d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80180da:	fb04 fa0a 	mul.w	sl, r4, sl
 80180de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80180e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80180e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80180ea:	44de      	add	lr, fp
 80180ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80180f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80180f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80180fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018100:	ea4e 040a 	orr.w	r4, lr, sl
 8018104:	940b      	str	r4, [sp, #44]	; 0x2c
 8018106:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018108:	2cff      	cmp	r4, #255	; 0xff
 801810a:	d021      	beq.n	8018150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801810c:	9c08      	ldr	r4, [sp, #32]
 801810e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018112:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018114:	fb04 fb0b 	mul.w	fp, r4, fp
 8018118:	9c08      	ldr	r4, [sp, #32]
 801811a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801811e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018120:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018124:	fb04 fa0a 	mul.w	sl, r4, sl
 8018128:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801812c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018130:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018134:	44de      	add	lr, fp
 8018136:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801813a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801813e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018142:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018146:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801814a:	ea4e 040a 	orr.w	r4, lr, sl
 801814e:	9408      	str	r4, [sp, #32]
 8018150:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018152:	2cff      	cmp	r4, #255	; 0xff
 8018154:	d021      	beq.n	801819a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018156:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018158:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801815c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801815e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018162:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018164:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018168:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801816a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801816e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018172:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018176:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801817a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801817e:	44de      	add	lr, fp
 8018180:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018184:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801818c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018190:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018194:	ea4e 040a 	orr.w	r4, lr, sl
 8018198:	940c      	str	r4, [sp, #48]	; 0x30
 801819a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801819c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80181a0:	9c08      	ldr	r4, [sp, #32]
 80181a2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80181a6:	fb08 fc0c 	mul.w	ip, r8, ip
 80181aa:	fb02 cc0e 	mla	ip, r2, lr, ip
 80181ae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80181b4:	fb00 cc0e 	mla	ip, r0, lr, ip
 80181b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80181be:	fb09 cc0e 	mla	ip, r9, lr, ip
 80181c2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80181c6:	fb08 f80e 	mul.w	r8, r8, lr
 80181ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181ce:	fb02 8303 	mla	r3, r2, r3, r8
 80181d2:	9a08      	ldr	r2, [sp, #32]
 80181d4:	f8b7 8000 	ldrh.w	r8, [r7]
 80181d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80181dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80181de:	fb00 330a 	mla	r3, r0, sl, r3
 80181e2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80181e6:	fb09 3900 	mla	r9, r9, r0, r3
 80181ea:	43c9      	mvns	r1, r1
 80181ec:	ea4f 2228 	mov.w	r2, r8, asr #8
 80181f0:	fa5f fe81 	uxtb.w	lr, r1
 80181f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80181fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018200:	fb02 f20e 	mul.w	r2, r2, lr
 8018204:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018208:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801820c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018210:	1c53      	adds	r3, r2, #1
 8018212:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018216:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801821a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801821e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018222:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018226:	4a63      	ldr	r2, [pc, #396]	; (80183b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8018228:	fb00 f00e 	mul.w	r0, r0, lr
 801822c:	b2db      	uxtb	r3, r3
 801822e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018232:	1c43      	adds	r3, r0, #1
 8018234:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018238:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801823c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018240:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018244:	b2c9      	uxtb	r1, r1
 8018246:	00db      	lsls	r3, r3, #3
 8018248:	fb01 f10e 	mul.w	r1, r1, lr
 801824c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018250:	4313      	orrs	r3, r2
 8018252:	1c4a      	adds	r2, r1, #1
 8018254:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018258:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801825c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018260:	ea4c 0c03 	orr.w	ip, ip, r3
 8018264:	f8a7 c000 	strh.w	ip, [r7]
 8018268:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801826a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801826c:	441a      	add	r2, r3
 801826e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018270:	922d      	str	r2, [sp, #180]	; 0xb4
 8018272:	441d      	add	r5, r3
 8018274:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018276:	3b01      	subs	r3, #1
 8018278:	3702      	adds	r7, #2
 801827a:	9317      	str	r3, [sp, #92]	; 0x5c
 801827c:	e699      	b.n	8017fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801827e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018280:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8018282:	441c      	add	r4, r3
 8018284:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018286:	942d      	str	r4, [sp, #180]	; 0xb4
 8018288:	441d      	add	r5, r3
 801828a:	9b07      	ldr	r3, [sp, #28]
 801828c:	3b01      	subs	r3, #1
 801828e:	9307      	str	r3, [sp, #28]
 8018290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018292:	3302      	adds	r3, #2
 8018294:	930a      	str	r3, [sp, #40]	; 0x28
 8018296:	e66b      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018298:	d024      	beq.n	80182e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801829a:	9b07      	ldr	r3, [sp, #28]
 801829c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801829e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80182a0:	3b01      	subs	r3, #1
 80182a2:	fb00 4003 	mla	r0, r0, r3, r4
 80182a6:	1400      	asrs	r0, r0, #16
 80182a8:	f53f ae80 	bmi.w	8017fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80182ac:	3901      	subs	r1, #1
 80182ae:	4288      	cmp	r0, r1
 80182b0:	f6bf ae7c 	bge.w	8017fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80182b4:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80182b6:	fb01 5303 	mla	r3, r1, r3, r5
 80182ba:	141b      	asrs	r3, r3, #16
 80182bc:	f53f ae76 	bmi.w	8017fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80182c0:	3a01      	subs	r2, #1
 80182c2:	4293      	cmp	r3, r2
 80182c4:	f6bf ae72 	bge.w	8017fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80182c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80182cc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80182d0:	f1bb 0f00 	cmp.w	fp, #0
 80182d4:	dc70      	bgt.n	80183b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80182d6:	9b07      	ldr	r3, [sp, #28]
 80182d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80182dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80182de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80182e2:	930a      	str	r3, [sp, #40]	; 0x28
 80182e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80182e6:	2b00      	cmp	r3, #0
 80182e8:	f340 81ae 	ble.w	8018648 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80182ec:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80182f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80182f4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80182f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80182fa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80182fe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018302:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018306:	eef0 6a48 	vmov.f32	s13, s16
 801830a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801830e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018312:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018316:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801831a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801831e:	eef0 6a68 	vmov.f32	s13, s17
 8018322:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018326:	ee18 2a10 	vmov	r2, s16
 801832a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801832e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018332:	ee18 2a90 	vmov	r2, s17
 8018336:	932f      	str	r3, [sp, #188]	; 0xbc
 8018338:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801833a:	fb92 f3f3 	sdiv	r3, r2, r3
 801833e:	9330      	str	r3, [sp, #192]	; 0xc0
 8018340:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018342:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018344:	3b01      	subs	r3, #1
 8018346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801834a:	9316      	str	r3, [sp, #88]	; 0x58
 801834c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801834e:	bf08      	it	eq
 8018350:	4613      	moveq	r3, r2
 8018352:	ee16 5a90 	vmov	r5, s13
 8018356:	9307      	str	r3, [sp, #28]
 8018358:	eef0 8a67 	vmov.f32	s17, s15
 801835c:	eeb0 8a47 	vmov.f32	s16, s14
 8018360:	e5f8      	b.n	8017f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018362:	2800      	cmp	r0, #0
 8018364:	f43f ae6b 	beq.w	801803e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018368:	f818 1001 	ldrb.w	r1, [r8, r1]
 801836c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018370:	9108      	str	r1, [sp, #32]
 8018372:	0e09      	lsrs	r1, r1, #24
 8018374:	9110      	str	r1, [sp, #64]	; 0x40
 8018376:	e662      	b.n	801803e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018378:	f113 0801 	adds.w	r8, r3, #1
 801837c:	f53f af74 	bmi.w	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018380:	4541      	cmp	r1, r8
 8018382:	f6ff af71 	blt.w	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018386:	f11c 0801 	adds.w	r8, ip, #1
 801838a:	f53f af6d 	bmi.w	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801838e:	45c6      	cmp	lr, r8
 8018390:	f6ff af6a 	blt.w	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018394:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018398:	b209      	sxth	r1, r1
 801839a:	fa0f f38e 	sxth.w	r3, lr
 801839e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80183a2:	9301      	str	r3, [sp, #4]
 80183a4:	9100      	str	r1, [sp, #0]
 80183a6:	4633      	mov	r3, r6
 80183a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80183aa:	9819      	ldr	r0, [sp, #100]	; 0x64
 80183ac:	4639      	mov	r1, r7
 80183ae:	f7ff fc4d 	bl	8017c4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80183b2:	e759      	b.n	8018268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80183b4:	fffff800 	.word	0xfffff800
 80183b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80183ba:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80183bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80183c0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80183c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80183c6:	1427      	asrs	r7, r4, #16
 80183c8:	142b      	asrs	r3, r5, #16
 80183ca:	fb01 7303 	mla	r3, r1, r3, r7
 80183ce:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80183d0:	18e7      	adds	r7, r4, r3
 80183d2:	5ce3      	ldrb	r3, [r4, r3]
 80183d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80183d8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80183dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80183e0:	2a00      	cmp	r2, #0
 80183e2:	f000 8127 	beq.w	8018634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80183e6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80183ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80183ee:	940d      	str	r4, [sp, #52]	; 0x34
 80183f0:	0e24      	lsrs	r4, r4, #24
 80183f2:	9414      	str	r4, [sp, #80]	; 0x50
 80183f4:	b170      	cbz	r0, 8018414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80183f6:	eb07 0e01 	add.w	lr, r7, r1
 80183fa:	5c79      	ldrb	r1, [r7, r1]
 80183fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018400:	9109      	str	r1, [sp, #36]	; 0x24
 8018402:	0e09      	lsrs	r1, r1, #24
 8018404:	9111      	str	r1, [sp, #68]	; 0x44
 8018406:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801840a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801840e:	910e      	str	r1, [sp, #56]	; 0x38
 8018410:	0e09      	lsrs	r1, r1, #24
 8018412:	9115      	str	r1, [sp, #84]	; 0x54
 8018414:	b292      	uxth	r2, r2
 8018416:	b280      	uxth	r0, r0
 8018418:	fb02 f800 	mul.w	r8, r2, r0
 801841c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018420:	0112      	lsls	r2, r2, #4
 8018422:	eba2 0e08 	sub.w	lr, r2, r8
 8018426:	b280      	uxth	r0, r0
 8018428:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801842c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801842e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018430:	fa1f fe8e 	uxth.w	lr, lr
 8018434:	1a09      	subs	r1, r1, r0
 8018436:	b289      	uxth	r1, r1
 8018438:	fb0e f202 	mul.w	r2, lr, r2
 801843c:	fb01 220c 	mla	r2, r1, ip, r2
 8018440:	fb00 2204 	mla	r2, r0, r4, r2
 8018444:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018446:	fb08 2204 	mla	r2, r8, r4, r2
 801844a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801844e:	2a00      	cmp	r2, #0
 8018450:	f000 80e5 	beq.w	801861e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8018454:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018458:	d019      	beq.n	801848e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 801845a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801845e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018462:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018466:	fb0c fc03 	mul.w	ip, ip, r3
 801846a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801846e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018472:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018476:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801847a:	4453      	add	r3, sl
 801847c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018480:	0a1b      	lsrs	r3, r3, #8
 8018482:	0a3f      	lsrs	r7, r7, #8
 8018484:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018488:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801848c:	433b      	orrs	r3, r7
 801848e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018490:	2cff      	cmp	r4, #255	; 0xff
 8018492:	d020      	beq.n	80184d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8018494:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018496:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801849a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801849c:	4367      	muls	r7, r4
 801849e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80184a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80184a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80184aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80184ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184b6:	44bc      	add	ip, r7
 80184b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80184bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80184c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80184c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80184d0:	ea4c 040a 	orr.w	r4, ip, sl
 80184d4:	940d      	str	r4, [sp, #52]	; 0x34
 80184d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80184d8:	2cff      	cmp	r4, #255	; 0xff
 80184da:	d020      	beq.n	801851e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80184dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80184de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80184e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80184e4:	4367      	muls	r7, r4
 80184e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80184e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80184ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80184f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80184f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184fe:	44bc      	add	ip, r7
 8018500:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018504:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801850c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018510:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018514:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018518:	ea4c 040a 	orr.w	r4, ip, sl
 801851c:	9409      	str	r4, [sp, #36]	; 0x24
 801851e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018520:	2cff      	cmp	r4, #255	; 0xff
 8018522:	d020      	beq.n	8018566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8018524:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018526:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801852a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801852c:	4367      	muls	r7, r4
 801852e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018530:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018534:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018536:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801853a:	fb04 fa0a 	mul.w	sl, r4, sl
 801853e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018542:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018546:	44bc      	add	ip, r7
 8018548:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801854c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018554:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018558:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801855c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018560:	ea4c 040a 	orr.w	r4, ip, sl
 8018564:	940e      	str	r4, [sp, #56]	; 0x38
 8018566:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018568:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801856c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801856e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018572:	fb0e f707 	mul.w	r7, lr, r7
 8018576:	fb01 770c 	mla	r7, r1, ip, r7
 801857a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801857e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018580:	fb00 770c 	mla	r7, r0, ip, r7
 8018584:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018588:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801858a:	fb08 770c 	mla	r7, r8, ip, r7
 801858e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018592:	fb0e fe0c 	mul.w	lr, lr, ip
 8018596:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801859a:	fb01 e303 	mla	r3, r1, r3, lr
 801859e:	9909      	ldr	r1, [sp, #36]	; 0x24
 80185a0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80185a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80185a6:	fb00 330a 	mla	r3, r0, sl, r3
 80185aa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80185ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 80185b2:	f8b9 3000 	ldrh.w	r3, [r9]
 80185b6:	43d2      	mvns	r2, r2
 80185b8:	1218      	asrs	r0, r3, #8
 80185ba:	b2d2      	uxtb	r2, r2
 80185bc:	10d9      	asrs	r1, r3, #3
 80185be:	0a3f      	lsrs	r7, r7, #8
 80185c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80185c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80185c8:	00db      	lsls	r3, r3, #3
 80185ca:	4350      	muls	r0, r2
 80185cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80185d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80185d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80185d8:	b2db      	uxtb	r3, r3
 80185da:	ea47 070c 	orr.w	r7, r7, ip
 80185de:	4351      	muls	r1, r2
 80185e0:	4353      	muls	r3, r2
 80185e2:	1c42      	adds	r2, r0, #1
 80185e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80185e8:	0c3a      	lsrs	r2, r7, #16
 80185ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80185ee:	4a19      	ldr	r2, [pc, #100]	; (8018654 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80185f0:	b2c0      	uxtb	r0, r0
 80185f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80185f6:	1c4a      	adds	r2, r1, #1
 80185f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80185fc:	0a3a      	lsrs	r2, r7, #8
 80185fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018602:	00c9      	lsls	r1, r1, #3
 8018604:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018608:	4301      	orrs	r1, r0
 801860a:	1c58      	adds	r0, r3, #1
 801860c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018610:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018614:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018618:	4308      	orrs	r0, r1
 801861a:	f8a9 0000 	strh.w	r0, [r9]
 801861e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018620:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018622:	441a      	add	r2, r3
 8018624:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018626:	922d      	str	r2, [sp, #180]	; 0xb4
 8018628:	f109 0902 	add.w	r9, r9, #2
 801862c:	441d      	add	r5, r3
 801862e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018632:	e64d      	b.n	80182d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8018634:	2800      	cmp	r0, #0
 8018636:	f43f aeed 	beq.w	8018414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801863a:	5c79      	ldrb	r1, [r7, r1]
 801863c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018640:	9109      	str	r1, [sp, #36]	; 0x24
 8018642:	0e09      	lsrs	r1, r1, #24
 8018644:	9111      	str	r1, [sp, #68]	; 0x44
 8018646:	e6e5      	b.n	8018414 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8018648:	b01b      	add	sp, #108	; 0x6c
 801864a:	ecbd 8b08 	vpop	{d8-d11}
 801864e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018652:	bf00      	nop
 8018654:	fffff800 	.word	0xfffff800

08018658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801865c:	b085      	sub	sp, #20
 801865e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018662:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018666:	9103      	str	r1, [sp, #12]
 8018668:	fb05 7106 	mla	r1, r5, r6, r7
 801866c:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8018670:	2d00      	cmp	r5, #0
 8018672:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018676:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801867a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801867e:	9401      	str	r4, [sp, #4]
 8018680:	eb03 0901 	add.w	r9, r3, r1
 8018684:	f2c0 80c0 	blt.w	8018808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8018688:	45a8      	cmp	r8, r5
 801868a:	f340 80bd 	ble.w	8018808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801868e:	2f00      	cmp	r7, #0
 8018690:	f2c0 80b6 	blt.w	8018800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8018694:	42be      	cmp	r6, r7
 8018696:	f340 80b3 	ble.w	8018800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801869a:	f813 c001 	ldrb.w	ip, [r3, r1]
 801869e:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80186a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80186a6:	d019      	beq.n	80186dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80186a8:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80186ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80186b0:	435a      	muls	r2, r3
 80186b2:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80186b6:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80186ba:	fb0c f403 	mul.w	r4, ip, r3
 80186be:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80186c2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80186c6:	441a      	add	r2, r3
 80186c8:	f104 0320 	add.w	r3, r4, #32
 80186cc:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80186d0:	0a1b      	lsrs	r3, r3, #8
 80186d2:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80186d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80186da:	4319      	orrs	r1, r3
 80186dc:	b289      	uxth	r1, r1
 80186de:	1c7b      	adds	r3, r7, #1
 80186e0:	f100 8097 	bmi.w	8018812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80186e4:	429e      	cmp	r6, r3
 80186e6:	f340 8094 	ble.w	8018812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80186ea:	2800      	cmp	r0, #0
 80186ec:	f000 8094 	beq.w	8018818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80186f0:	f899 4001 	ldrb.w	r4, [r9, #1]
 80186f4:	9b01      	ldr	r3, [sp, #4]
 80186f6:	2cff      	cmp	r4, #255	; 0xff
 80186f8:	885b      	ldrh	r3, [r3, #2]
 80186fa:	d01b      	beq.n	8018734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80186fc:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018700:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018704:	fb0a f202 	mul.w	r2, sl, r2
 8018708:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801870c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018710:	fb04 fa03 	mul.w	sl, r4, r3
 8018714:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018718:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801871c:	441a      	add	r2, r3
 801871e:	f10a 0320 	add.w	r3, sl, #32
 8018722:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018726:	0a1b      	lsrs	r3, r3, #8
 8018728:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801872c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018730:	ea4b 0303 	orr.w	r3, fp, r3
 8018734:	b29b      	uxth	r3, r3
 8018736:	3501      	adds	r5, #1
 8018738:	d474      	bmi.n	8018824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801873a:	45a8      	cmp	r8, r5
 801873c:	dd72      	ble.n	8018824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801873e:	f1be 0f00 	cmp.w	lr, #0
 8018742:	f000 8120 	beq.w	8018986 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8018746:	2f00      	cmp	r7, #0
 8018748:	db69      	blt.n	801881e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801874a:	42be      	cmp	r6, r7
 801874c:	dd67      	ble.n	801881e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801874e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018752:	9a01      	ldr	r2, [sp, #4]
 8018754:	2dff      	cmp	r5, #255	; 0xff
 8018756:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801875a:	d01c      	beq.n	8018796 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801875c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8018760:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018764:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018768:	fb05 fa0b 	mul.w	sl, r5, fp
 801876c:	fb08 f802 	mul.w	r8, r8, r2
 8018770:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018774:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018778:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801877c:	4490      	add	r8, r2
 801877e:	f10a 0220 	add.w	r2, sl, #32
 8018782:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018786:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801878a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801878e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018792:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018796:	fa1f fb8b 	uxth.w	fp, fp
 801879a:	3701      	adds	r7, #1
 801879c:	d447      	bmi.n	801882e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801879e:	42be      	cmp	r6, r7
 80187a0:	dd45      	ble.n	801882e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80187a2:	2800      	cmp	r0, #0
 80187a4:	d046      	beq.n	8018834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80187a6:	3601      	adds	r6, #1
 80187a8:	9a01      	ldr	r2, [sp, #4]
 80187aa:	f819 7006 	ldrb.w	r7, [r9, r6]
 80187ae:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80187b2:	2fff      	cmp	r7, #255	; 0xff
 80187b4:	d01a      	beq.n	80187ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80187b6:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80187ba:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80187be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187c2:	fb07 f902 	mul.w	r9, r7, r2
 80187c6:	fb08 f806 	mul.w	r8, r8, r6
 80187ca:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80187ce:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80187d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80187d6:	44b0      	add	r8, r6
 80187d8:	f109 0620 	add.w	r6, r9, #32
 80187dc:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80187e0:	0a36      	lsrs	r6, r6, #8
 80187e2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80187e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80187ea:	4332      	orrs	r2, r6
 80187ec:	b292      	uxth	r2, r2
 80187ee:	280f      	cmp	r0, #15
 80187f0:	d922      	bls.n	8018838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80187f2:	4b69      	ldr	r3, [pc, #420]	; (8018998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80187f4:	4a69      	ldr	r2, [pc, #420]	; (801899c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80187f6:	486a      	ldr	r0, [pc, #424]	; (80189a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80187f8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80187fc:	f004 fa5e 	bl	801ccbc <__assert_func>
 8018800:	f04f 0c00 	mov.w	ip, #0
 8018804:	4661      	mov	r1, ip
 8018806:	e76a      	b.n	80186de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8018808:	2400      	movs	r4, #0
 801880a:	46a4      	mov	ip, r4
 801880c:	4623      	mov	r3, r4
 801880e:	4621      	mov	r1, r4
 8018810:	e791      	b.n	8018736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018812:	2400      	movs	r4, #0
 8018814:	4623      	mov	r3, r4
 8018816:	e78e      	b.n	8018736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018818:	4604      	mov	r4, r0
 801881a:	4603      	mov	r3, r0
 801881c:	e78b      	b.n	8018736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801881e:	2500      	movs	r5, #0
 8018820:	46ab      	mov	fp, r5
 8018822:	e7ba      	b.n	801879a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8018824:	2700      	movs	r7, #0
 8018826:	463d      	mov	r5, r7
 8018828:	463a      	mov	r2, r7
 801882a:	46bb      	mov	fp, r7
 801882c:	e7df      	b.n	80187ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801882e:	2700      	movs	r7, #0
 8018830:	463a      	mov	r2, r7
 8018832:	e7dc      	b.n	80187ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8018834:	4607      	mov	r7, r0
 8018836:	4602      	mov	r2, r0
 8018838:	f1be 0f0f 	cmp.w	lr, #15
 801883c:	d8d9      	bhi.n	80187f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801883e:	b286      	uxth	r6, r0
 8018840:	fa1f f98e 	uxth.w	r9, lr
 8018844:	fb06 f809 	mul.w	r8, r6, r9
 8018848:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801884c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018850:	0136      	lsls	r6, r6, #4
 8018852:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018856:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801885a:	9601      	str	r6, [sp, #4]
 801885c:	ea4a 0101 	orr.w	r1, sl, r1
 8018860:	fa1f f689 	uxth.w	r6, r9
 8018864:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018868:	fb10 f90e 	smulbb	r9, r0, lr
 801886c:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8018870:	9602      	str	r6, [sp, #8]
 8018872:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018876:	460e      	mov	r6, r1
 8018878:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801887c:	f1ce 0110 	rsb	r1, lr, #16
 8018880:	1a09      	subs	r1, r1, r0
 8018882:	ea4a 0303 	orr.w	r3, sl, r3
 8018886:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801888a:	4343      	muls	r3, r0
 801888c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018890:	9801      	ldr	r0, [sp, #4]
 8018892:	fb01 3106 	mla	r1, r1, r6, r3
 8018896:	9e02      	ldr	r6, [sp, #8]
 8018898:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801889c:	1b80      	subs	r0, r0, r6
 801889e:	9e01      	ldr	r6, [sp, #4]
 80188a0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80188a4:	eba6 0608 	sub.w	r6, r6, r8
 80188a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80188ac:	b2b6      	uxth	r6, r6
 80188ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80188b2:	ea4a 0202 	orr.w	r2, sl, r2
 80188b6:	b280      	uxth	r0, r0
 80188b8:	4374      	muls	r4, r6
 80188ba:	fb09 1302 	mla	r3, r9, r2, r1
 80188be:	fb0c 4400 	mla	r4, ip, r0, r4
 80188c2:	9a03      	ldr	r2, [sp, #12]
 80188c4:	9802      	ldr	r0, [sp, #8]
 80188c6:	8811      	ldrh	r1, [r2, #0]
 80188c8:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80188cc:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80188d0:	fb00 4505 	mla	r5, r0, r5, r4
 80188d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80188d8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80188dc:	fb08 5707 	mla	r7, r8, r7, r5
 80188e0:	ea4a 0b0b 	orr.w	fp, sl, fp
 80188e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80188e8:	b292      	uxth	r2, r2
 80188ea:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80188ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80188f2:	4357      	muls	r7, r2
 80188f4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80188f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80188fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018900:	f107 0801 	add.w	r8, r7, #1
 8018904:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018908:	ea43 0e0e 	orr.w	lr, r3, lr
 801890c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8018910:	fa1f f38e 	uxth.w	r3, lr
 8018914:	1208      	asrs	r0, r1, #8
 8018916:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801891a:	b2ff      	uxtb	r7, r7
 801891c:	121c      	asrs	r4, r3, #8
 801891e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018922:	fb10 f007 	smulbb	r0, r0, r7
 8018926:	10cd      	asrs	r5, r1, #3
 8018928:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801892c:	fb04 0402 	mla	r4, r4, r2, r0
 8018930:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018934:	10d8      	asrs	r0, r3, #3
 8018936:	fb15 f507 	smulbb	r5, r5, r7
 801893a:	00db      	lsls	r3, r3, #3
 801893c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018940:	fb00 5002 	mla	r0, r0, r2, r5
 8018944:	b2dd      	uxtb	r5, r3
 8018946:	00cb      	lsls	r3, r1, #3
 8018948:	b2db      	uxtb	r3, r3
 801894a:	fb13 f307 	smulbb	r3, r3, r7
 801894e:	fb05 3202 	mla	r2, r5, r2, r3
 8018952:	b2a4      	uxth	r4, r4
 8018954:	b292      	uxth	r2, r2
 8018956:	1c63      	adds	r3, r4, #1
 8018958:	b280      	uxth	r0, r0
 801895a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801895e:	1c53      	adds	r3, r2, #1
 8018960:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018964:	1c42      	adds	r2, r0, #1
 8018966:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801896a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801896e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018972:	0940      	lsrs	r0, r0, #5
 8018974:	4323      	orrs	r3, r4
 8018976:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801897a:	9a03      	ldr	r2, [sp, #12]
 801897c:	4303      	orrs	r3, r0
 801897e:	8013      	strh	r3, [r2, #0]
 8018980:	b005      	add	sp, #20
 8018982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018986:	280f      	cmp	r0, #15
 8018988:	f63f af33 	bhi.w	80187f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801898c:	4677      	mov	r7, lr
 801898e:	4675      	mov	r5, lr
 8018990:	4672      	mov	r2, lr
 8018992:	46f3      	mov	fp, lr
 8018994:	e753      	b.n	801883e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8018996:	bf00      	nop
 8018998:	08021447 	.word	0x08021447
 801899c:	08021976 	.word	0x08021976
 80189a0:	08021414 	.word	0x08021414

080189a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80189a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189a8:	ed2d 8b08 	vpush	{d8-d11}
 80189ac:	b097      	sub	sp, #92	; 0x5c
 80189ae:	eeb0 aa40 	vmov.f32	s20, s0
 80189b2:	9214      	str	r2, [sp, #80]	; 0x50
 80189b4:	9308      	str	r3, [sp, #32]
 80189b6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80189b8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80189bc:	9312      	str	r3, [sp, #72]	; 0x48
 80189be:	9111      	str	r1, [sp, #68]	; 0x44
 80189c0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80189c4:	9015      	str	r0, [sp, #84]	; 0x54
 80189c6:	6850      	ldr	r0, [r2, #4]
 80189c8:	6812      	ldr	r2, [r2, #0]
 80189ca:	fb00 1303 	mla	r3, r0, r3, r1
 80189ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80189d2:	9309      	str	r3, [sp, #36]	; 0x24
 80189d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80189d6:	681b      	ldr	r3, [r3, #0]
 80189d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80189da:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80189dc:	685b      	ldr	r3, [r3, #4]
 80189de:	930c      	str	r3, [sp, #48]	; 0x30
 80189e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80189e4:	930a      	str	r3, [sp, #40]	; 0x28
 80189e6:	eef0 9a60 	vmov.f32	s19, s1
 80189ea:	eeb0 9a41 	vmov.f32	s18, s2
 80189ee:	eeb0 8a62 	vmov.f32	s16, s5
 80189f2:	eef0 8a43 	vmov.f32	s17, s6
 80189f6:	eef0 ba44 	vmov.f32	s23, s8
 80189fa:	eeb0 ba64 	vmov.f32	s22, s9
 80189fe:	eef0 aa45 	vmov.f32	s21, s10
 8018a02:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a04:	2b00      	cmp	r3, #0
 8018a06:	dc03      	bgt.n	8018a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018a08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018a0a:	2b00      	cmp	r3, #0
 8018a0c:	f340 83cb 	ble.w	80191a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018a10:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018a12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a16:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018a1a:	1e48      	subs	r0, r1, #1
 8018a1c:	1e55      	subs	r5, r2, #1
 8018a1e:	9b08      	ldr	r3, [sp, #32]
 8018a20:	2b00      	cmp	r3, #0
 8018a22:	f340 81a3 	ble.w	8018d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8018a26:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8018a28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a2a:	1436      	asrs	r6, r6, #16
 8018a2c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018a30:	d406      	bmi.n	8018a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018a32:	4286      	cmp	r6, r0
 8018a34:	da04      	bge.n	8018a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018a36:	2b00      	cmp	r3, #0
 8018a38:	db02      	blt.n	8018a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018a3a:	42ab      	cmp	r3, r5
 8018a3c:	f2c0 8197 	blt.w	8018d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018a40:	3601      	adds	r6, #1
 8018a42:	f100 8184 	bmi.w	8018d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018a46:	42b1      	cmp	r1, r6
 8018a48:	f2c0 8181 	blt.w	8018d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018a4c:	3301      	adds	r3, #1
 8018a4e:	f100 817e 	bmi.w	8018d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018a52:	429a      	cmp	r2, r3
 8018a54:	f2c0 817b 	blt.w	8018d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018a58:	9b08      	ldr	r3, [sp, #32]
 8018a5a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018a5c:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a5e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018a62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018a64:	2b00      	cmp	r3, #0
 8018a66:	f340 81a4 	ble.w	8018db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8018a6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a6c:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8018a6e:	1418      	asrs	r0, r3, #16
 8018a70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018a72:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018a76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a78:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018a7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018a7e:	142d      	asrs	r5, r5, #16
 8018a80:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018a84:	f100 81f8 	bmi.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018a88:	f102 3eff 	add.w	lr, r2, #4294967295
 8018a8c:	4575      	cmp	r5, lr
 8018a8e:	f280 81f3 	bge.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018a92:	2800      	cmp	r0, #0
 8018a94:	f2c0 81f0 	blt.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018a98:	f103 3eff 	add.w	lr, r3, #4294967295
 8018a9c:	4570      	cmp	r0, lr
 8018a9e:	f280 81eb 	bge.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018aa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018aa4:	b212      	sxth	r2, r2
 8018aa6:	fb00 5002 	mla	r0, r0, r2, r5
 8018aaa:	fa1f fe81 	uxth.w	lr, r1
 8018aae:	eb03 0a00 	add.w	sl, r3, r0
 8018ab2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018ab6:	f813 9000 	ldrb.w	r9, [r3, r0]
 8018aba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018abe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018ac2:	b29b      	uxth	r3, r3
 8018ac4:	f1bc 0f00 	cmp.w	ip, #0
 8018ac8:	f000 81b9 	beq.w	8018e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018acc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018ad0:	940d      	str	r4, [sp, #52]	; 0x34
 8018ad2:	eb0a 0b02 	add.w	fp, sl, r2
 8018ad6:	fa1f fa8c 	uxth.w	sl, ip
 8018ada:	fb0a fe0e 	mul.w	lr, sl, lr
 8018ade:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018ae2:	fa1f fa8a 	uxth.w	sl, sl
 8018ae6:	eba5 050e 	sub.w	r5, r5, lr
 8018aea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018aee:	940e      	str	r4, [sp, #56]	; 0x38
 8018af0:	eba3 030a 	sub.w	r3, r3, sl
 8018af4:	b2ad      	uxth	r5, r5
 8018af6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018af8:	b29b      	uxth	r3, r3
 8018afa:	fb08 f505 	mul.w	r5, r8, r5
 8018afe:	fb09 5303 	mla	r3, r9, r3, r5
 8018b02:	fb0a 3304 	mla	r3, sl, r4, r3
 8018b06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018b08:	fb0e 3304 	mla	r3, lr, r4, r3
 8018b0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018b10:	2b00      	cmp	r3, #0
 8018b12:	f000 810f 	beq.w	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018b16:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018b18:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018b1c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018b20:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018b24:	f000 8190 	beq.w	8018e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8018b28:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018b2c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018b30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b34:	fb09 f000 	mul.w	r0, r9, r0
 8018b38:	fb0a fe0e 	mul.w	lr, sl, lr
 8018b3c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018b40:	f100 0b20 	add.w	fp, r0, #32
 8018b44:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018b48:	44ce      	add	lr, r9
 8018b4a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018b4e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018b52:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018b56:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018b5a:	ea4e 0909 	orr.w	r9, lr, r9
 8018b5e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018b62:	8868      	ldrh	r0, [r5, #2]
 8018b64:	d019      	beq.n	8018b9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018b66:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018b6a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018b6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b72:	fb08 f800 	mul.w	r8, r8, r0
 8018b76:	fb0a fe0e 	mul.w	lr, sl, lr
 8018b7a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8018b7e:	f108 0b20 	add.w	fp, r8, #32
 8018b82:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018b86:	4486      	add	lr, r0
 8018b88:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8018b8c:	0a00      	lsrs	r0, r0, #8
 8018b8e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018b92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b96:	ea4e 0000 	orr.w	r0, lr, r0
 8018b9a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018b9e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018ba2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018ba6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018baa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018bae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018bb2:	ea4e 0909 	orr.w	r9, lr, r9
 8018bb6:	ea4a 0000 	orr.w	r0, sl, r0
 8018bba:	f1bc 0f00 	cmp.w	ip, #0
 8018bbe:	f000 8145 	beq.w	8018e4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8018bc2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018bc6:	3a01      	subs	r2, #1
 8018bc8:	0052      	lsls	r2, r2, #1
 8018bca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018bcc:	3202      	adds	r2, #2
 8018bce:	2cff      	cmp	r4, #255	; 0xff
 8018bd0:	eb05 0e02 	add.w	lr, r5, r2
 8018bd4:	5aaa      	ldrh	r2, [r5, r2]
 8018bd6:	d018      	beq.n	8018c0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018bd8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018bdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018be0:	fb04 fa02 	mul.w	sl, r4, r2
 8018be4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018be8:	fb08 f805 	mul.w	r8, r8, r5
 8018bec:	f10a 0520 	add.w	r5, sl, #32
 8018bf0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018bf4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018bf8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018bfc:	4442      	add	r2, r8
 8018bfe:	0a2d      	lsrs	r5, r5, #8
 8018c00:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018c04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018c08:	432a      	orrs	r2, r5
 8018c0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c0c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018c10:	2cff      	cmp	r4, #255	; 0xff
 8018c12:	d01a      	beq.n	8018c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018c14:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018c18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018c1c:	fb04 fa05 	mul.w	sl, r4, r5
 8018c20:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018c24:	fb08 f80e 	mul.w	r8, r8, lr
 8018c28:	f10a 0e20 	add.w	lr, sl, #32
 8018c2c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018c30:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018c34:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018c38:	4445      	add	r5, r8
 8018c3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c3e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018c42:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018c46:	ea45 050e 	orr.w	r5, r5, lr
 8018c4a:	fb1c fe01 	smulbb	lr, ip, r1
 8018c4e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018c52:	f1cc 0810 	rsb	r8, ip, #16
 8018c56:	eba8 0801 	sub.w	r8, r8, r1
 8018c5a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018c5e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018c62:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018c66:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8018c6a:	4341      	muls	r1, r0
 8018c6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018c70:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c74:	ea4a 0202 	orr.w	r2, sl, r2
 8018c78:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018c7c:	fb09 1108 	mla	r1, r9, r8, r1
 8018c80:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018c84:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018c88:	fb0c 1102 	mla	r1, ip, r2, r1
 8018c8c:	ea4b 0505 	orr.w	r5, fp, r5
 8018c90:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018c94:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018c98:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018c9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018ca0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018ca4:	ea42 0e0e 	orr.w	lr, r2, lr
 8018ca8:	fa1f f28e 	uxth.w	r2, lr
 8018cac:	2bff      	cmp	r3, #255	; 0xff
 8018cae:	d103      	bne.n	8018cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018cb0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018cb2:	29ff      	cmp	r1, #255	; 0xff
 8018cb4:	f000 80de 	beq.w	8018e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8018cb8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018cba:	8838      	ldrh	r0, [r7, #0]
 8018cbc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018cbe:	434b      	muls	r3, r1
 8018cc0:	f103 0c01 	add.w	ip, r3, #1
 8018cc4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8018cc8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018ccc:	fa5f fc83 	uxtb.w	ip, r3
 8018cd0:	1203      	asrs	r3, r0, #8
 8018cd2:	1215      	asrs	r5, r2, #8
 8018cd4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018cd8:	fb13 f30c 	smulbb	r3, r3, ip
 8018cdc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018ce0:	fb05 3501 	mla	r5, r5, r1, r3
 8018ce4:	10c3      	asrs	r3, r0, #3
 8018ce6:	10d1      	asrs	r1, r2, #3
 8018ce8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018cec:	fb13 f30c 	smulbb	r3, r3, ip
 8018cf0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018cf4:	fb01 3104 	mla	r1, r1, r4, r3
 8018cf8:	00c3      	lsls	r3, r0, #3
 8018cfa:	00d2      	lsls	r2, r2, #3
 8018cfc:	b2db      	uxtb	r3, r3
 8018cfe:	b2d2      	uxtb	r2, r2
 8018d00:	fb13 f30c 	smulbb	r3, r3, ip
 8018d04:	b2ad      	uxth	r5, r5
 8018d06:	fb02 3304 	mla	r3, r2, r4, r3
 8018d0a:	b29a      	uxth	r2, r3
 8018d0c:	1c6b      	adds	r3, r5, #1
 8018d0e:	b289      	uxth	r1, r1
 8018d10:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018d14:	1c53      	adds	r3, r2, #1
 8018d16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018d1a:	1c4a      	adds	r2, r1, #1
 8018d1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018d20:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018d24:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018d28:	0949      	lsrs	r1, r1, #5
 8018d2a:	432b      	orrs	r3, r5
 8018d2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018d30:	430b      	orrs	r3, r1
 8018d32:	803b      	strh	r3, [r7, #0]
 8018d34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d36:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018d38:	4413      	add	r3, r2
 8018d3a:	9329      	str	r3, [sp, #164]	; 0xa4
 8018d3c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018d3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d40:	441a      	add	r2, r3
 8018d42:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018d44:	922a      	str	r2, [sp, #168]	; 0xa8
 8018d46:	3b01      	subs	r3, #1
 8018d48:	3702      	adds	r7, #2
 8018d4a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d4c:	e689      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018d4e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d50:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8018d52:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8018d54:	4433      	add	r3, r6
 8018d56:	9329      	str	r3, [sp, #164]	; 0xa4
 8018d58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d5a:	441c      	add	r4, r3
 8018d5c:	9b08      	ldr	r3, [sp, #32]
 8018d5e:	942a      	str	r4, [sp, #168]	; 0xa8
 8018d60:	3b01      	subs	r3, #1
 8018d62:	9308      	str	r3, [sp, #32]
 8018d64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d66:	3302      	adds	r3, #2
 8018d68:	9309      	str	r3, [sp, #36]	; 0x24
 8018d6a:	e658      	b.n	8018a1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018d6c:	d028      	beq.n	8018dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018d6e:	9b08      	ldr	r3, [sp, #32]
 8018d70:	982b      	ldr	r0, [sp, #172]	; 0xac
 8018d72:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8018d74:	3b01      	subs	r3, #1
 8018d76:	fb00 5003 	mla	r0, r0, r3, r5
 8018d7a:	1400      	asrs	r0, r0, #16
 8018d7c:	f53f ae6c 	bmi.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018d80:	3901      	subs	r1, #1
 8018d82:	4288      	cmp	r0, r1
 8018d84:	f6bf ae68 	bge.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018d88:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8018d8a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8018d8c:	fb01 0303 	mla	r3, r1, r3, r0
 8018d90:	141b      	asrs	r3, r3, #16
 8018d92:	f53f ae61 	bmi.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018d96:	3a01      	subs	r2, #1
 8018d98:	4293      	cmp	r3, r2
 8018d9a:	f6bf ae5d 	bge.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018d9e:	9b08      	ldr	r3, [sp, #32]
 8018da0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018da4:	9313      	str	r3, [sp, #76]	; 0x4c
 8018da6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018daa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018dac:	2b00      	cmp	r3, #0
 8018dae:	f300 8082 	bgt.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018db2:	9b08      	ldr	r3, [sp, #32]
 8018db4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018db8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018dba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018dbe:	9309      	str	r3, [sp, #36]	; 0x24
 8018dc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018dc2:	2b00      	cmp	r3, #0
 8018dc4:	f340 81ef 	ble.w	80191a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018dc8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018dd0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018dd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018dd6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018dda:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018dde:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018de2:	eef0 6a48 	vmov.f32	s13, s16
 8018de6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dee:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018df2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018df6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018dfa:	eef0 6a68 	vmov.f32	s13, s17
 8018dfe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018e02:	ee18 2a10 	vmov	r2, s16
 8018e06:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e0e:	ee18 2a90 	vmov	r2, s17
 8018e12:	932b      	str	r3, [sp, #172]	; 0xac
 8018e14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e1a:	932c      	str	r3, [sp, #176]	; 0xb0
 8018e1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018e1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018e20:	3b01      	subs	r3, #1
 8018e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e26:	9311      	str	r3, [sp, #68]	; 0x44
 8018e28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e2a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8018e2e:	bf08      	it	eq
 8018e30:	4613      	moveq	r3, r2
 8018e32:	9308      	str	r3, [sp, #32]
 8018e34:	eef0 8a67 	vmov.f32	s17, s15
 8018e38:	eeb0 8a47 	vmov.f32	s16, s14
 8018e3c:	e5e1      	b.n	8018a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018e3e:	fb08 f505 	mul.w	r5, r8, r5
 8018e42:	fb09 5303 	mla	r3, r9, r3, r5
 8018e46:	e661      	b.n	8018b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8018e48:	4681      	mov	r9, r0
 8018e4a:	e688      	b.n	8018b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8018e4c:	f1c1 0210 	rsb	r2, r1, #16
 8018e50:	4341      	muls	r1, r0
 8018e52:	fb09 1902 	mla	r9, r9, r2, r1
 8018e56:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018e5a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018e5e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018e62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e66:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018e6a:	ea42 0909 	orr.w	r9, r2, r9
 8018e6e:	fa1f f289 	uxth.w	r2, r9
 8018e72:	e71b      	b.n	8018cac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8018e74:	803a      	strh	r2, [r7, #0]
 8018e76:	e75d      	b.n	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018e78:	f115 0e01 	adds.w	lr, r5, #1
 8018e7c:	f53f af5a 	bmi.w	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018e80:	4572      	cmp	r2, lr
 8018e82:	f6ff af57 	blt.w	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018e86:	f110 0e01 	adds.w	lr, r0, #1
 8018e8a:	f53f af53 	bmi.w	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018e8e:	4573      	cmp	r3, lr
 8018e90:	f6ff af50 	blt.w	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018e94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018e96:	9502      	str	r5, [sp, #8]
 8018e98:	b21b      	sxth	r3, r3
 8018e9a:	b212      	sxth	r2, r2
 8018e9c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8018ea0:	9301      	str	r3, [sp, #4]
 8018ea2:	9200      	str	r2, [sp, #0]
 8018ea4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8018ea8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8018eac:	4639      	mov	r1, r7
 8018eae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018eb0:	f7ff fbd2 	bl	8018658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018eb4:	e73e      	b.n	8018d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018eb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018eb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018ebc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ebe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018ec2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018ec4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ec8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018eca:	141f      	asrs	r7, r3, #16
 8018ecc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018ece:	141b      	asrs	r3, r3, #16
 8018ed0:	fb01 3707 	mla	r7, r1, r7, r3
 8018ed4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ed6:	fa1f fc82 	uxth.w	ip, r2
 8018eda:	eb03 0a07 	add.w	sl, r3, r7
 8018ede:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018ee2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018ee6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018eea:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018eee:	b29b      	uxth	r3, r3
 8018ef0:	2d00      	cmp	r5, #0
 8018ef2:	f000 813d 	beq.w	8019170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8018ef6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018efa:	940f      	str	r4, [sp, #60]	; 0x3c
 8018efc:	eb0a 0b01 	add.w	fp, sl, r1
 8018f00:	fa1f fa85 	uxth.w	sl, r5
 8018f04:	fb0a fc0c 	mul.w	ip, sl, ip
 8018f08:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018f0c:	fa1f fa8a 	uxth.w	sl, sl
 8018f10:	eba0 000c 	sub.w	r0, r0, ip
 8018f14:	eba3 030a 	sub.w	r3, r3, sl
 8018f18:	b280      	uxth	r0, r0
 8018f1a:	fb08 f000 	mul.w	r0, r8, r0
 8018f1e:	b29b      	uxth	r3, r3
 8018f20:	fb09 0303 	mla	r3, r9, r3, r0
 8018f24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018f26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018f2a:	9410      	str	r4, [sp, #64]	; 0x40
 8018f2c:	fb0a 3300 	mla	r3, sl, r0, r3
 8018f30:	fb0c 3304 	mla	r3, ip, r4, r3
 8018f34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f38:	2b00      	cmp	r3, #0
 8018f3a:	f000 810b 	beq.w	8019154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8018f3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018f40:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018f42:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018f46:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018f4a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018f4e:	f000 8114 	beq.w	801917a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8018f52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018f56:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018f5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018f5e:	fb09 f707 	mul.w	r7, r9, r7
 8018f62:	fb0a fc0c 	mul.w	ip, sl, ip
 8018f66:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018f6a:	f107 0b20 	add.w	fp, r7, #32
 8018f6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018f72:	44cc      	add	ip, r9
 8018f74:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018f78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018f7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018f80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018f84:	ea4c 0909 	orr.w	r9, ip, r9
 8018f88:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018f8c:	8847      	ldrh	r7, [r0, #2]
 8018f8e:	d019      	beq.n	8018fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8018f90:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018f94:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018f98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018f9c:	fb08 f807 	mul.w	r8, r8, r7
 8018fa0:	fb0a fc0c 	mul.w	ip, sl, ip
 8018fa4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018fa8:	f108 0b20 	add.w	fp, r8, #32
 8018fac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018fb0:	44bc      	add	ip, r7
 8018fb2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018fb6:	0a3f      	lsrs	r7, r7, #8
 8018fb8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018fbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018fc0:	ea4c 0707 	orr.w	r7, ip, r7
 8018fc4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018fc8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018fcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018fd0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018fd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018fd8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018fdc:	ea4c 0909 	orr.w	r9, ip, r9
 8018fe0:	ea4a 0707 	orr.w	r7, sl, r7
 8018fe4:	2d00      	cmp	r5, #0
 8018fe6:	f000 80ca 	beq.w	801917e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8018fea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018fee:	3901      	subs	r1, #1
 8018ff0:	0049      	lsls	r1, r1, #1
 8018ff2:	3102      	adds	r1, #2
 8018ff4:	eb00 0c01 	add.w	ip, r0, r1
 8018ff8:	5a41      	ldrh	r1, [r0, r1]
 8018ffa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018ffc:	28ff      	cmp	r0, #255	; 0xff
 8018ffe:	d019      	beq.n	8019034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8019000:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019002:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019006:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801900a:	fb04 fa01 	mul.w	sl, r4, r1
 801900e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019012:	fb08 f800 	mul.w	r8, r8, r0
 8019016:	f10a 0020 	add.w	r0, sl, #32
 801901a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801901e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019022:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019026:	4441      	add	r1, r8
 8019028:	0a00      	lsrs	r0, r0, #8
 801902a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801902e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019032:	4301      	orrs	r1, r0
 8019034:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019036:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801903a:	2cff      	cmp	r4, #255	; 0xff
 801903c:	d01a      	beq.n	8019074 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801903e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019042:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019046:	fb04 fa00 	mul.w	sl, r4, r0
 801904a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801904e:	fb08 f80c 	mul.w	r8, r8, ip
 8019052:	f10a 0c20 	add.w	ip, sl, #32
 8019056:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801905a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801905e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019062:	4440      	add	r0, r8
 8019064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019068:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801906c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019070:	ea40 000c 	orr.w	r0, r0, ip
 8019074:	fb15 fc02 	smulbb	ip, r5, r2
 8019078:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801907c:	f1c5 0810 	rsb	r8, r5, #16
 8019080:	eba8 0802 	sub.w	r8, r8, r2
 8019084:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019088:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801908c:	437a      	muls	r2, r7
 801908e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019092:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019096:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801909a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801909e:	fb09 2208 	mla	r2, r9, r8, r2
 80190a2:	ea4a 0101 	orr.w	r1, sl, r1
 80190a6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80190aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80190ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80190b2:	fb05 2201 	mla	r2, r5, r1, r2
 80190b6:	ea4b 0000 	orr.w	r0, fp, r0
 80190ba:	fb0c 2200 	mla	r2, ip, r0, r2
 80190be:	0d57      	lsrs	r7, r2, #21
 80190c0:	0952      	lsrs	r2, r2, #5
 80190c2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80190c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80190ca:	433a      	orrs	r2, r7
 80190cc:	2bff      	cmp	r3, #255	; 0xff
 80190ce:	b292      	uxth	r2, r2
 80190d0:	d102      	bne.n	80190d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80190d2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190d4:	29ff      	cmp	r1, #255	; 0xff
 80190d6:	d063      	beq.n	80191a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 80190d8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80190da:	f8be 1000 	ldrh.w	r1, [lr]
 80190de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80190e0:	4343      	muls	r3, r0
 80190e2:	1c58      	adds	r0, r3, #1
 80190e4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80190e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80190ec:	1208      	asrs	r0, r1, #8
 80190ee:	b2db      	uxtb	r3, r3
 80190f0:	1215      	asrs	r5, r2, #8
 80190f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80190f6:	fb10 f003 	smulbb	r0, r0, r3
 80190fa:	10cf      	asrs	r7, r1, #3
 80190fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019100:	00c9      	lsls	r1, r1, #3
 8019102:	fb05 0504 	mla	r5, r5, r4, r0
 8019106:	b2c9      	uxtb	r1, r1
 8019108:	10d0      	asrs	r0, r2, #3
 801910a:	00d2      	lsls	r2, r2, #3
 801910c:	fb11 f103 	smulbb	r1, r1, r3
 8019110:	b2d2      	uxtb	r2, r2
 8019112:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019116:	fb02 1204 	mla	r2, r2, r4, r1
 801911a:	fb17 f703 	smulbb	r7, r7, r3
 801911e:	b2ad      	uxth	r5, r5
 8019120:	b292      	uxth	r2, r2
 8019122:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019126:	fb00 7004 	mla	r0, r0, r4, r7
 801912a:	1c6b      	adds	r3, r5, #1
 801912c:	1c57      	adds	r7, r2, #1
 801912e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019132:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019136:	b280      	uxth	r0, r0
 8019138:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801913c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019140:	433d      	orrs	r5, r7
 8019142:	1c47      	adds	r7, r0, #1
 8019144:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019148:	097f      	lsrs	r7, r7, #5
 801914a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801914e:	433d      	orrs	r5, r7
 8019150:	f8ae 5000 	strh.w	r5, [lr]
 8019154:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019156:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019158:	4413      	add	r3, r2
 801915a:	9329      	str	r3, [sp, #164]	; 0xa4
 801915c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801915e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019160:	441a      	add	r2, r3
 8019162:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019164:	922a      	str	r2, [sp, #168]	; 0xa8
 8019166:	3b01      	subs	r3, #1
 8019168:	f10e 0e02 	add.w	lr, lr, #2
 801916c:	9313      	str	r3, [sp, #76]	; 0x4c
 801916e:	e61c      	b.n	8018daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8019170:	fb08 f000 	mul.w	r0, r8, r0
 8019174:	fb09 0303 	mla	r3, r9, r3, r0
 8019178:	e6dc      	b.n	8018f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801917a:	46b9      	mov	r9, r7
 801917c:	e704      	b.n	8018f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801917e:	f1c2 0110 	rsb	r1, r2, #16
 8019182:	437a      	muls	r2, r7
 8019184:	fb09 2901 	mla	r9, r9, r1, r2
 8019188:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801918c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019190:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019194:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019198:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801919c:	4302      	orrs	r2, r0
 801919e:	e795      	b.n	80190cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80191a0:	f8ae 2000 	strh.w	r2, [lr]
 80191a4:	e7d6      	b.n	8019154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80191a6:	b017      	add	sp, #92	; 0x5c
 80191a8:	ecbd 8b08 	vpop	{d8-d11}
 80191ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80191b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191b4:	b085      	sub	sp, #20
 80191b6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80191ba:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80191be:	9103      	str	r1, [sp, #12]
 80191c0:	fb05 7106 	mla	r1, r5, r6, r7
 80191c4:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80191c8:	2d00      	cmp	r5, #0
 80191ca:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80191ce:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80191d2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80191d6:	9401      	str	r4, [sp, #4]
 80191d8:	eb02 0901 	add.w	r9, r2, r1
 80191dc:	f2c0 80c0 	blt.w	8019360 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80191e0:	45a8      	cmp	r8, r5
 80191e2:	f340 80bd 	ble.w	8019360 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80191e6:	2f00      	cmp	r7, #0
 80191e8:	f2c0 80b6 	blt.w	8019358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80191ec:	42be      	cmp	r6, r7
 80191ee:	f340 80b3 	ble.w	8019358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80191f2:	f812 c001 	ldrb.w	ip, [r2, r1]
 80191f6:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80191fa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80191fe:	d019      	beq.n	8019234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8019200:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8019204:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019208:	435a      	muls	r2, r3
 801920a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801920e:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8019212:	fb0c f403 	mul.w	r4, ip, r3
 8019216:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801921a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801921e:	441a      	add	r2, r3
 8019220:	f104 0320 	add.w	r3, r4, #32
 8019224:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8019228:	0a1b      	lsrs	r3, r3, #8
 801922a:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801922e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019232:	4319      	orrs	r1, r3
 8019234:	b289      	uxth	r1, r1
 8019236:	1c7b      	adds	r3, r7, #1
 8019238:	f100 8097 	bmi.w	801936a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801923c:	429e      	cmp	r6, r3
 801923e:	f340 8094 	ble.w	801936a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8019242:	2800      	cmp	r0, #0
 8019244:	f000 8094 	beq.w	8019370 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8019248:	f899 4001 	ldrb.w	r4, [r9, #1]
 801924c:	9b01      	ldr	r3, [sp, #4]
 801924e:	2cff      	cmp	r4, #255	; 0xff
 8019250:	885b      	ldrh	r3, [r3, #2]
 8019252:	d01b      	beq.n	801928c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8019254:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8019258:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801925c:	fb0a f202 	mul.w	r2, sl, r2
 8019260:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019264:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019268:	fb04 fa03 	mul.w	sl, r4, r3
 801926c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8019270:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019274:	441a      	add	r2, r3
 8019276:	f10a 0320 	add.w	r3, sl, #32
 801927a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801927e:	0a1b      	lsrs	r3, r3, #8
 8019280:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8019284:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019288:	ea4b 0303 	orr.w	r3, fp, r3
 801928c:	b29b      	uxth	r3, r3
 801928e:	3501      	adds	r5, #1
 8019290:	d474      	bmi.n	801937c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8019292:	45a8      	cmp	r8, r5
 8019294:	dd72      	ble.n	801937c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8019296:	f1be 0f00 	cmp.w	lr, #0
 801929a:	f000 8110 	beq.w	80194be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801929e:	2f00      	cmp	r7, #0
 80192a0:	db69      	blt.n	8019376 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80192a2:	42be      	cmp	r6, r7
 80192a4:	dd67      	ble.n	8019376 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80192a6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80192aa:	9a01      	ldr	r2, [sp, #4]
 80192ac:	2dff      	cmp	r5, #255	; 0xff
 80192ae:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80192b2:	d01c      	beq.n	80192ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80192b4:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80192b8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80192bc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80192c0:	fb05 fa0b 	mul.w	sl, r5, fp
 80192c4:	fb08 f802 	mul.w	r8, r8, r2
 80192c8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80192cc:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80192d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80192d4:	4490      	add	r8, r2
 80192d6:	f10a 0220 	add.w	r2, sl, #32
 80192da:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80192de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80192e2:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80192e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80192ea:	ea4b 0b0a 	orr.w	fp, fp, sl
 80192ee:	fa1f fb8b 	uxth.w	fp, fp
 80192f2:	3701      	adds	r7, #1
 80192f4:	d447      	bmi.n	8019386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80192f6:	42be      	cmp	r6, r7
 80192f8:	dd45      	ble.n	8019386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80192fa:	2800      	cmp	r0, #0
 80192fc:	d046      	beq.n	801938c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80192fe:	3601      	adds	r6, #1
 8019300:	9a01      	ldr	r2, [sp, #4]
 8019302:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019306:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801930a:	2fff      	cmp	r7, #255	; 0xff
 801930c:	d01a      	beq.n	8019344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801930e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8019312:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8019316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801931a:	fb07 f902 	mul.w	r9, r7, r2
 801931e:	fb08 f806 	mul.w	r8, r8, r6
 8019322:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8019326:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801932a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801932e:	44b0      	add	r8, r6
 8019330:	f109 0620 	add.w	r6, r9, #32
 8019334:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8019338:	0a36      	lsrs	r6, r6, #8
 801933a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801933e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019342:	4332      	orrs	r2, r6
 8019344:	b292      	uxth	r2, r2
 8019346:	280f      	cmp	r0, #15
 8019348:	d922      	bls.n	8019390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801934a:	4b61      	ldr	r3, [pc, #388]	; (80194d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801934c:	4a61      	ldr	r2, [pc, #388]	; (80194d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801934e:	4862      	ldr	r0, [pc, #392]	; (80194d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8019350:	f240 11f9 	movw	r1, #505	; 0x1f9
 8019354:	f003 fcb2 	bl	801ccbc <__assert_func>
 8019358:	f04f 0c00 	mov.w	ip, #0
 801935c:	4661      	mov	r1, ip
 801935e:	e76a      	b.n	8019236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8019360:	2400      	movs	r4, #0
 8019362:	46a4      	mov	ip, r4
 8019364:	4623      	mov	r3, r4
 8019366:	4621      	mov	r1, r4
 8019368:	e791      	b.n	801928e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801936a:	2400      	movs	r4, #0
 801936c:	4623      	mov	r3, r4
 801936e:	e78e      	b.n	801928e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8019370:	4604      	mov	r4, r0
 8019372:	4603      	mov	r3, r0
 8019374:	e78b      	b.n	801928e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8019376:	2500      	movs	r5, #0
 8019378:	46ab      	mov	fp, r5
 801937a:	e7ba      	b.n	80192f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801937c:	2700      	movs	r7, #0
 801937e:	463d      	mov	r5, r7
 8019380:	463a      	mov	r2, r7
 8019382:	46bb      	mov	fp, r7
 8019384:	e7df      	b.n	8019346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8019386:	2700      	movs	r7, #0
 8019388:	463a      	mov	r2, r7
 801938a:	e7dc      	b.n	8019346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801938c:	4607      	mov	r7, r0
 801938e:	4602      	mov	r2, r0
 8019390:	f1be 0f0f 	cmp.w	lr, #15
 8019394:	d8d9      	bhi.n	801934a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8019396:	b286      	uxth	r6, r0
 8019398:	fa1f f98e 	uxth.w	r9, lr
 801939c:	fb06 f809 	mul.w	r8, r6, r9
 80193a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80193a4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80193a8:	0136      	lsls	r6, r6, #4
 80193aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80193ae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80193b2:	9601      	str	r6, [sp, #4]
 80193b4:	ea4a 0101 	orr.w	r1, sl, r1
 80193b8:	fa1f f689 	uxth.w	r6, r9
 80193bc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80193c0:	fb10 f90e 	smulbb	r9, r0, lr
 80193c4:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80193c8:	9602      	str	r6, [sp, #8]
 80193ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80193ce:	460e      	mov	r6, r1
 80193d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80193d4:	f1ce 0110 	rsb	r1, lr, #16
 80193d8:	1a09      	subs	r1, r1, r0
 80193da:	ea4a 0303 	orr.w	r3, sl, r3
 80193de:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80193e2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80193e6:	4343      	muls	r3, r0
 80193e8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80193ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80193f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193f4:	fb01 3106 	mla	r1, r1, r6, r3
 80193f8:	ea4a 0202 	orr.w	r2, sl, r2
 80193fc:	fb09 1302 	mla	r3, r9, r2, r1
 8019400:	9a03      	ldr	r2, [sp, #12]
 8019402:	9802      	ldr	r0, [sp, #8]
 8019404:	8811      	ldrh	r1, [r2, #0]
 8019406:	9a01      	ldr	r2, [sp, #4]
 8019408:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801940c:	1a12      	subs	r2, r2, r0
 801940e:	9801      	ldr	r0, [sp, #4]
 8019410:	eba0 0608 	sub.w	r6, r0, r8
 8019414:	b2b6      	uxth	r6, r6
 8019416:	b292      	uxth	r2, r2
 8019418:	4374      	muls	r4, r6
 801941a:	fb0c 4402 	mla	r4, ip, r2, r4
 801941e:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8019422:	9a02      	ldr	r2, [sp, #8]
 8019424:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019428:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801942c:	fb02 4505 	mla	r5, r2, r5, r4
 8019430:	ea4a 0b0b 	orr.w	fp, sl, fp
 8019434:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019438:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801943c:	fb08 5707 	mla	r7, r8, r7, r5
 8019440:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8019444:	120a      	asrs	r2, r1, #8
 8019446:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801944a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801944e:	b2ff      	uxtb	r7, r7
 8019450:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019454:	10c8      	asrs	r0, r1, #3
 8019456:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801945a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801945e:	00c9      	lsls	r1, r1, #3
 8019460:	437a      	muls	r2, r7
 8019462:	ea43 0e0e 	orr.w	lr, r3, lr
 8019466:	b2c9      	uxtb	r1, r1
 8019468:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801946c:	fa1f f38e 	uxth.w	r3, lr
 8019470:	4378      	muls	r0, r7
 8019472:	434f      	muls	r7, r1
 8019474:	1c51      	adds	r1, r2, #1
 8019476:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801947a:	121a      	asrs	r2, r3, #8
 801947c:	f022 0207 	bic.w	r2, r2, #7
 8019480:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8019484:	1c41      	adds	r1, r0, #1
 8019486:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801948a:	10d9      	asrs	r1, r3, #3
 801948c:	f021 0103 	bic.w	r1, r1, #3
 8019490:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019494:	0212      	lsls	r2, r2, #8
 8019496:	00c9      	lsls	r1, r1, #3
 8019498:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801949c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80194a0:	430a      	orrs	r2, r1
 80194a2:	1c79      	adds	r1, r7, #1
 80194a4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80194a8:	00db      	lsls	r3, r3, #3
 80194aa:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80194ae:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80194b2:	4313      	orrs	r3, r2
 80194b4:	9a03      	ldr	r2, [sp, #12]
 80194b6:	8013      	strh	r3, [r2, #0]
 80194b8:	b005      	add	sp, #20
 80194ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194be:	280f      	cmp	r0, #15
 80194c0:	f63f af43 	bhi.w	801934a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80194c4:	4677      	mov	r7, lr
 80194c6:	4675      	mov	r5, lr
 80194c8:	4672      	mov	r2, lr
 80194ca:	46f3      	mov	fp, lr
 80194cc:	e763      	b.n	8019396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80194ce:	bf00      	nop
 80194d0:	08021447 	.word	0x08021447
 80194d4:	08021976 	.word	0x08021976
 80194d8:	08021414 	.word	0x08021414

080194dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194e0:	ed2d 8b08 	vpush	{d8-d11}
 80194e4:	b093      	sub	sp, #76	; 0x4c
 80194e6:	eeb0 aa40 	vmov.f32	s20, s0
 80194ea:	9210      	str	r2, [sp, #64]	; 0x40
 80194ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80194ee:	910e      	str	r1, [sp, #56]	; 0x38
 80194f0:	9306      	str	r3, [sp, #24]
 80194f2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80194f6:	9011      	str	r0, [sp, #68]	; 0x44
 80194f8:	6850      	ldr	r0, [r2, #4]
 80194fa:	6812      	ldr	r2, [r2, #0]
 80194fc:	fb00 1303 	mla	r3, r0, r3, r1
 8019500:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019504:	9307      	str	r3, [sp, #28]
 8019506:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019508:	681b      	ldr	r3, [r3, #0]
 801950a:	9308      	str	r3, [sp, #32]
 801950c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801950e:	685b      	ldr	r3, [r3, #4]
 8019510:	9309      	str	r3, [sp, #36]	; 0x24
 8019512:	eef0 9a60 	vmov.f32	s19, s1
 8019516:	eeb0 9a41 	vmov.f32	s18, s2
 801951a:	eeb0 8a62 	vmov.f32	s16, s5
 801951e:	eef0 8a43 	vmov.f32	s17, s6
 8019522:	eef0 ba44 	vmov.f32	s23, s8
 8019526:	eeb0 ba64 	vmov.f32	s22, s9
 801952a:	eef0 aa45 	vmov.f32	s21, s10
 801952e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019530:	2b00      	cmp	r3, #0
 8019532:	dc03      	bgt.n	801953c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019534:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019536:	2b00      	cmp	r3, #0
 8019538:	f340 83b4 	ble.w	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801953c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801953e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019542:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019546:	1e48      	subs	r0, r1, #1
 8019548:	1e55      	subs	r5, r2, #1
 801954a:	9b06      	ldr	r3, [sp, #24]
 801954c:	2b00      	cmp	r3, #0
 801954e:	f340 8163 	ble.w	8019818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8019552:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8019554:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019556:	1436      	asrs	r6, r6, #16
 8019558:	ea4f 4323 	mov.w	r3, r3, asr #16
 801955c:	d406      	bmi.n	801956c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801955e:	4286      	cmp	r6, r0
 8019560:	da04      	bge.n	801956c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019562:	2b00      	cmp	r3, #0
 8019564:	db02      	blt.n	801956c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019566:	42ab      	cmp	r3, r5
 8019568:	f2c0 8157 	blt.w	801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801956c:	3601      	adds	r6, #1
 801956e:	f100 8144 	bmi.w	80197fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019572:	42b1      	cmp	r1, r6
 8019574:	f2c0 8141 	blt.w	80197fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019578:	3301      	adds	r3, #1
 801957a:	f100 813e 	bmi.w	80197fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801957e:	429a      	cmp	r2, r3
 8019580:	f2c0 813b 	blt.w	80197fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019584:	9b06      	ldr	r3, [sp, #24]
 8019586:	9f07      	ldr	r7, [sp, #28]
 8019588:	930f      	str	r3, [sp, #60]	; 0x3c
 801958a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801958e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019590:	2b00      	cmp	r3, #0
 8019592:	f340 8164 	ble.w	801985e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8019596:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019598:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801959a:	1418      	asrs	r0, r3, #16
 801959c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801959e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80195a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80195a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80195aa:	142d      	asrs	r5, r5, #16
 80195ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80195b0:	f100 81ee 	bmi.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80195b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80195b8:	4575      	cmp	r5, lr
 80195ba:	f280 81e9 	bge.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80195be:	2800      	cmp	r0, #0
 80195c0:	f2c0 81e6 	blt.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80195c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80195c8:	4570      	cmp	r0, lr
 80195ca:	f280 81e1 	bge.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80195ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195d0:	b212      	sxth	r2, r2
 80195d2:	fb00 5002 	mla	r0, r0, r2, r5
 80195d6:	fa1f fe81 	uxth.w	lr, r1
 80195da:	eb03 0a00 	add.w	sl, r3, r0
 80195de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80195e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80195e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80195ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80195ee:	b29b      	uxth	r3, r3
 80195f0:	f1bc 0f00 	cmp.w	ip, #0
 80195f4:	f000 8179 	beq.w	80198ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80195f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80195fc:	940a      	str	r4, [sp, #40]	; 0x28
 80195fe:	eb0a 0b02 	add.w	fp, sl, r2
 8019602:	fa1f fa8c 	uxth.w	sl, ip
 8019606:	fb0a fe0e 	mul.w	lr, sl, lr
 801960a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801960e:	fa1f fa8a 	uxth.w	sl, sl
 8019612:	eba5 050e 	sub.w	r5, r5, lr
 8019616:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801961a:	940b      	str	r4, [sp, #44]	; 0x2c
 801961c:	eba3 030a 	sub.w	r3, r3, sl
 8019620:	b2ad      	uxth	r5, r5
 8019622:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019624:	b29b      	uxth	r3, r3
 8019626:	fb08 f505 	mul.w	r5, r8, r5
 801962a:	fb09 5303 	mla	r3, r9, r3, r5
 801962e:	fb0a 3304 	mla	r3, sl, r4, r3
 8019632:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019634:	fb0e 3304 	mla	r3, lr, r4, r3
 8019638:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801963c:	2b00      	cmp	r3, #0
 801963e:	f000 80cf 	beq.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8019642:	9c08      	ldr	r4, [sp, #32]
 8019644:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019648:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801964c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019650:	f000 8150 	beq.w	80198f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8019654:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019658:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801965c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019660:	fb09 f000 	mul.w	r0, r9, r0
 8019664:	fb0a fe0e 	mul.w	lr, sl, lr
 8019668:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801966c:	f100 0b20 	add.w	fp, r0, #32
 8019670:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019674:	44ce      	add	lr, r9
 8019676:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801967a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801967e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019682:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019686:	ea4e 0909 	orr.w	r9, lr, r9
 801968a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801968e:	8868      	ldrh	r0, [r5, #2]
 8019690:	d019      	beq.n	80196c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019692:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019696:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801969a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801969e:	fb08 f800 	mul.w	r8, r8, r0
 80196a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80196a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80196aa:	f108 0b20 	add.w	fp, r8, #32
 80196ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80196b2:	4486      	add	lr, r0
 80196b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80196b8:	0a00      	lsrs	r0, r0, #8
 80196ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80196be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196c2:	ea4e 0000 	orr.w	r0, lr, r0
 80196c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80196ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80196ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80196d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80196d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80196da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80196de:	ea4e 0909 	orr.w	r9, lr, r9
 80196e2:	ea4a 0000 	orr.w	r0, sl, r0
 80196e6:	f1bc 0f00 	cmp.w	ip, #0
 80196ea:	f000 8105 	beq.w	80198f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80196ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80196f2:	3a01      	subs	r2, #1
 80196f4:	0052      	lsls	r2, r2, #1
 80196f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80196f8:	3202      	adds	r2, #2
 80196fa:	2cff      	cmp	r4, #255	; 0xff
 80196fc:	eb05 0e02 	add.w	lr, r5, r2
 8019700:	5aaa      	ldrh	r2, [r5, r2]
 8019702:	d018      	beq.n	8019736 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019704:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019708:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801970c:	fb04 fa02 	mul.w	sl, r4, r2
 8019710:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019714:	fb08 f805 	mul.w	r8, r8, r5
 8019718:	f10a 0520 	add.w	r5, sl, #32
 801971c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019720:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019724:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019728:	4442      	add	r2, r8
 801972a:	0a2d      	lsrs	r5, r5, #8
 801972c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019730:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019734:	432a      	orrs	r2, r5
 8019736:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019738:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801973c:	2cff      	cmp	r4, #255	; 0xff
 801973e:	d01a      	beq.n	8019776 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019740:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8019744:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019748:	fb04 fa05 	mul.w	sl, r4, r5
 801974c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019750:	fb08 f80e 	mul.w	r8, r8, lr
 8019754:	f10a 0e20 	add.w	lr, sl, #32
 8019758:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801975c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019760:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019764:	4445      	add	r5, r8
 8019766:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801976a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801976e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019772:	ea45 050e 	orr.w	r5, r5, lr
 8019776:	fb1c fe01 	smulbb	lr, ip, r1
 801977a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801977e:	f1cc 0810 	rsb	r8, ip, #16
 8019782:	eba8 0801 	sub.w	r8, r8, r1
 8019786:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801978a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801978e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019792:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019796:	4341      	muls	r1, r0
 8019798:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801979c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80197a0:	ea4a 0202 	orr.w	r2, sl, r2
 80197a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80197a8:	fb09 1108 	mla	r1, r9, r8, r1
 80197ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80197b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80197b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80197b8:	ea4b 0505 	orr.w	r5, fp, r5
 80197bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80197c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80197c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80197c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80197cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80197d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80197d4:	fa1f f28e 	uxth.w	r2, lr
 80197d8:	2bff      	cmp	r3, #255	; 0xff
 80197da:	f040 80a1 	bne.w	8019920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80197de:	803a      	strh	r2, [r7, #0]
 80197e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80197e4:	4413      	add	r3, r2
 80197e6:	9325      	str	r3, [sp, #148]	; 0x94
 80197e8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80197ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80197ec:	441a      	add	r2, r3
 80197ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80197f0:	9226      	str	r2, [sp, #152]	; 0x98
 80197f2:	3b01      	subs	r3, #1
 80197f4:	3702      	adds	r7, #2
 80197f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80197f8:	e6c9      	b.n	801958e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80197fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197fc:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80197fe:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8019800:	4433      	add	r3, r6
 8019802:	9325      	str	r3, [sp, #148]	; 0x94
 8019804:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019806:	441c      	add	r4, r3
 8019808:	9b06      	ldr	r3, [sp, #24]
 801980a:	9426      	str	r4, [sp, #152]	; 0x98
 801980c:	3b01      	subs	r3, #1
 801980e:	9306      	str	r3, [sp, #24]
 8019810:	9b07      	ldr	r3, [sp, #28]
 8019812:	3302      	adds	r3, #2
 8019814:	9307      	str	r3, [sp, #28]
 8019816:	e698      	b.n	801954a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019818:	d028      	beq.n	801986c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801981a:	9b06      	ldr	r3, [sp, #24]
 801981c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801981e:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8019820:	3b01      	subs	r3, #1
 8019822:	fb00 5003 	mla	r0, r0, r3, r5
 8019826:	1400      	asrs	r0, r0, #16
 8019828:	f53f aeac 	bmi.w	8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801982c:	3901      	subs	r1, #1
 801982e:	4288      	cmp	r0, r1
 8019830:	f6bf aea8 	bge.w	8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019834:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019836:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019838:	fb01 0303 	mla	r3, r1, r3, r0
 801983c:	141b      	asrs	r3, r3, #16
 801983e:	f53f aea1 	bmi.w	8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019842:	3a01      	subs	r2, #1
 8019844:	4293      	cmp	r3, r2
 8019846:	f6bf ae9d 	bge.w	8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801984a:	9b06      	ldr	r3, [sp, #24]
 801984c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019850:	930f      	str	r3, [sp, #60]	; 0x3c
 8019852:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019856:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019858:	2b00      	cmp	r3, #0
 801985a:	f300 80b6 	bgt.w	80199ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801985e:	9b06      	ldr	r3, [sp, #24]
 8019860:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019864:	9b07      	ldr	r3, [sp, #28]
 8019866:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801986a:	9307      	str	r3, [sp, #28]
 801986c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801986e:	2b00      	cmp	r3, #0
 8019870:	f340 8218 	ble.w	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8019874:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019878:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801987c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019880:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019882:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019886:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801988a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801988e:	eef0 6a48 	vmov.f32	s13, s16
 8019892:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801989a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801989e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80198a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80198a6:	eef0 6a68 	vmov.f32	s13, s17
 80198aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80198ae:	ee18 2a10 	vmov	r2, s16
 80198b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80198b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80198ba:	ee18 2a90 	vmov	r2, s17
 80198be:	9327      	str	r3, [sp, #156]	; 0x9c
 80198c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80198c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80198c6:	9328      	str	r3, [sp, #160]	; 0xa0
 80198c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80198cc:	3b01      	subs	r3, #1
 80198ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198d2:	930e      	str	r3, [sp, #56]	; 0x38
 80198d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80198d6:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80198da:	bf08      	it	eq
 80198dc:	4613      	moveq	r3, r2
 80198de:	9306      	str	r3, [sp, #24]
 80198e0:	eef0 8a67 	vmov.f32	s17, s15
 80198e4:	eeb0 8a47 	vmov.f32	s16, s14
 80198e8:	e621      	b.n	801952e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80198ea:	fb08 f505 	mul.w	r5, r8, r5
 80198ee:	fb09 5303 	mla	r3, r9, r3, r5
 80198f2:	e6a1      	b.n	8019638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80198f4:	4681      	mov	r9, r0
 80198f6:	e6c8      	b.n	801968a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80198f8:	f1c1 0210 	rsb	r2, r1, #16
 80198fc:	4341      	muls	r1, r0
 80198fe:	fb09 1902 	mla	r9, r9, r2, r1
 8019902:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019906:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801990a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801990e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019912:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019916:	ea42 0909 	orr.w	r9, r2, r9
 801991a:	fa1f f289 	uxth.w	r2, r9
 801991e:	e75b      	b.n	80197d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019920:	f8b7 c000 	ldrh.w	ip, [r7]
 8019924:	43db      	mvns	r3, r3
 8019926:	ea4f 202c 	mov.w	r0, ip, asr #8
 801992a:	fa5f fe83 	uxtb.w	lr, r3
 801992e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019932:	fb00 f00e 	mul.w	r0, r0, lr
 8019936:	1c41      	adds	r1, r0, #1
 8019938:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801993c:	1211      	asrs	r1, r2, #8
 801993e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019942:	f021 0107 	bic.w	r1, r1, #7
 8019946:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801994a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801994e:	48d8      	ldr	r0, [pc, #864]	; (8019cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8019950:	fb05 f50e 	mul.w	r5, r5, lr
 8019954:	b2c9      	uxtb	r1, r1
 8019956:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801995a:	1c69      	adds	r1, r5, #1
 801995c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019960:	10d1      	asrs	r1, r2, #3
 8019962:	f021 0103 	bic.w	r1, r1, #3
 8019966:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801996a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801996e:	b2db      	uxtb	r3, r3
 8019970:	00c9      	lsls	r1, r1, #3
 8019972:	fb03 f30e 	mul.w	r3, r3, lr
 8019976:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801997a:	4301      	orrs	r1, r0
 801997c:	1c58      	adds	r0, r3, #1
 801997e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019982:	00d2      	lsls	r2, r2, #3
 8019984:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019988:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801998c:	430a      	orrs	r2, r1
 801998e:	e726      	b.n	80197de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019990:	f115 0e01 	adds.w	lr, r5, #1
 8019994:	f53f af24 	bmi.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8019998:	4572      	cmp	r2, lr
 801999a:	f6ff af21 	blt.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801999e:	f110 0e01 	adds.w	lr, r0, #1
 80199a2:	f53f af1d 	bmi.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80199a6:	4573      	cmp	r3, lr
 80199a8:	f6ff af1a 	blt.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80199ac:	b21b      	sxth	r3, r3
 80199ae:	b212      	sxth	r2, r2
 80199b0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80199b4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80199b8:	9301      	str	r3, [sp, #4]
 80199ba:	9200      	str	r2, [sp, #0]
 80199bc:	4639      	mov	r1, r7
 80199be:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80199c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80199c4:	f7ff fbf4 	bl	80191b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80199c8:	e70a      	b.n	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80199ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80199d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80199d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80199d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80199d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80199dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80199de:	141f      	asrs	r7, r3, #16
 80199e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199e2:	141b      	asrs	r3, r3, #16
 80199e4:	fb01 3707 	mla	r7, r1, r7, r3
 80199e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199ea:	fa1f fc82 	uxth.w	ip, r2
 80199ee:	eb03 0a07 	add.w	sl, r3, r7
 80199f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80199f6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80199fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80199fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019a02:	b29b      	uxth	r3, r3
 8019a04:	2d00      	cmp	r5, #0
 8019a06:	f000 80fe 	beq.w	8019c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 8019a0a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019a0e:	940c      	str	r4, [sp, #48]	; 0x30
 8019a10:	eb0a 0b01 	add.w	fp, sl, r1
 8019a14:	fa1f fa85 	uxth.w	sl, r5
 8019a18:	fb0a fc0c 	mul.w	ip, sl, ip
 8019a1c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019a20:	fa1f fa8a 	uxth.w	sl, sl
 8019a24:	eba0 000c 	sub.w	r0, r0, ip
 8019a28:	eba3 030a 	sub.w	r3, r3, sl
 8019a2c:	b280      	uxth	r0, r0
 8019a2e:	fb08 f000 	mul.w	r0, r8, r0
 8019a32:	b29b      	uxth	r3, r3
 8019a34:	fb09 0303 	mla	r3, r9, r3, r0
 8019a38:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019a3a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019a3e:	940d      	str	r4, [sp, #52]	; 0x34
 8019a40:	fb0a 3300 	mla	r3, sl, r0, r3
 8019a44:	fb0c 3304 	mla	r3, ip, r4, r3
 8019a48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a4c:	2b00      	cmp	r3, #0
 8019a4e:	f000 80cc 	beq.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8019a52:	9808      	ldr	r0, [sp, #32]
 8019a54:	9c08      	ldr	r4, [sp, #32]
 8019a56:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019a5a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019a5e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019a62:	f000 80d5 	beq.w	8019c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8019a66:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019a6a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019a6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019a72:	fb09 f707 	mul.w	r7, r9, r7
 8019a76:	fb0a fc0c 	mul.w	ip, sl, ip
 8019a7a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019a7e:	f107 0b20 	add.w	fp, r7, #32
 8019a82:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019a86:	44cc      	add	ip, r9
 8019a88:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019a8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019a90:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019a94:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019a98:	ea4c 0909 	orr.w	r9, ip, r9
 8019a9c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019aa0:	8847      	ldrh	r7, [r0, #2]
 8019aa2:	d019      	beq.n	8019ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8019aa4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019aa8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019aac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019ab0:	fb08 f807 	mul.w	r8, r8, r7
 8019ab4:	fb0a fc0c 	mul.w	ip, sl, ip
 8019ab8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019abc:	f108 0b20 	add.w	fp, r8, #32
 8019ac0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019ac4:	44bc      	add	ip, r7
 8019ac6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019aca:	0a3f      	lsrs	r7, r7, #8
 8019acc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019ad0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019ad4:	ea4c 0707 	orr.w	r7, ip, r7
 8019ad8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019adc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019ae0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019ae4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019ae8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019aec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019af0:	ea4c 0909 	orr.w	r9, ip, r9
 8019af4:	ea4a 0707 	orr.w	r7, sl, r7
 8019af8:	2d00      	cmp	r5, #0
 8019afa:	f000 808b 	beq.w	8019c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8019afe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019b02:	3901      	subs	r1, #1
 8019b04:	0049      	lsls	r1, r1, #1
 8019b06:	3102      	adds	r1, #2
 8019b08:	eb00 0c01 	add.w	ip, r0, r1
 8019b0c:	5a41      	ldrh	r1, [r0, r1]
 8019b0e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019b10:	28ff      	cmp	r0, #255	; 0xff
 8019b12:	d019      	beq.n	8019b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8019b14:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019b16:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019b1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019b1e:	fb04 fa01 	mul.w	sl, r4, r1
 8019b22:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b26:	fb08 f800 	mul.w	r8, r8, r0
 8019b2a:	f10a 0020 	add.w	r0, sl, #32
 8019b2e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019b32:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019b36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019b3a:	4441      	add	r1, r8
 8019b3c:	0a00      	lsrs	r0, r0, #8
 8019b3e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019b42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019b46:	4301      	orrs	r1, r0
 8019b48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019b4a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019b4e:	2cff      	cmp	r4, #255	; 0xff
 8019b50:	d01a      	beq.n	8019b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8019b52:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019b56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019b5a:	fb04 fa00 	mul.w	sl, r4, r0
 8019b5e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b62:	fb08 f80c 	mul.w	r8, r8, ip
 8019b66:	f10a 0c20 	add.w	ip, sl, #32
 8019b6a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019b6e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019b72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019b76:	4440      	add	r0, r8
 8019b78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019b7c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019b80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019b84:	ea40 000c 	orr.w	r0, r0, ip
 8019b88:	fb15 fc02 	smulbb	ip, r5, r2
 8019b8c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019b90:	f1c5 0810 	rsb	r8, r5, #16
 8019b94:	eba8 0802 	sub.w	r8, r8, r2
 8019b98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019b9c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019ba0:	437a      	muls	r2, r7
 8019ba2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019ba6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019baa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019bae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019bb2:	fb09 2208 	mla	r2, r9, r8, r2
 8019bb6:	ea4a 0101 	orr.w	r1, sl, r1
 8019bba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019bbe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019bc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019bc6:	fb05 2201 	mla	r2, r5, r1, r2
 8019bca:	ea4b 0000 	orr.w	r0, fp, r0
 8019bce:	fb0c 2200 	mla	r2, ip, r0, r2
 8019bd2:	0d57      	lsrs	r7, r2, #21
 8019bd4:	0952      	lsrs	r2, r2, #5
 8019bd6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019bda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bde:	433a      	orrs	r2, r7
 8019be0:	2bff      	cmp	r3, #255	; 0xff
 8019be2:	b292      	uxth	r2, r2
 8019be4:	d127      	bne.n	8019c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8019be6:	f8ae 2000 	strh.w	r2, [lr]
 8019bea:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019bec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019bee:	4413      	add	r3, r2
 8019bf0:	9325      	str	r3, [sp, #148]	; 0x94
 8019bf2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019bf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019bf6:	441a      	add	r2, r3
 8019bf8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019bfa:	9226      	str	r2, [sp, #152]	; 0x98
 8019bfc:	3b01      	subs	r3, #1
 8019bfe:	f10e 0e02 	add.w	lr, lr, #2
 8019c02:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c04:	e627      	b.n	8019856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019c06:	fb08 f000 	mul.w	r0, r8, r0
 8019c0a:	fb09 0303 	mla	r3, r9, r3, r0
 8019c0e:	e71b      	b.n	8019a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019c10:	46b9      	mov	r9, r7
 8019c12:	e743      	b.n	8019a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019c14:	f1c2 0110 	rsb	r1, r2, #16
 8019c18:	437a      	muls	r2, r7
 8019c1a:	fb09 2901 	mla	r9, r9, r1, r2
 8019c1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019c22:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019c26:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019c2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019c32:	4302      	orrs	r2, r0
 8019c34:	e7d4      	b.n	8019be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8019c36:	f8be 7000 	ldrh.w	r7, [lr]
 8019c3a:	4c1d      	ldr	r4, [pc, #116]	; (8019cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8019c3c:	43db      	mvns	r3, r3
 8019c3e:	1238      	asrs	r0, r7, #8
 8019c40:	fa5f fc83 	uxtb.w	ip, r3
 8019c44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019c48:	10fd      	asrs	r5, r7, #3
 8019c4a:	fb00 f00c 	mul.w	r0, r0, ip
 8019c4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019c52:	fb05 f10c 	mul.w	r1, r5, ip
 8019c56:	1c45      	adds	r5, r0, #1
 8019c58:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019c5c:	1215      	asrs	r5, r2, #8
 8019c5e:	f025 0507 	bic.w	r5, r5, #7
 8019c62:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019c66:	1c4d      	adds	r5, r1, #1
 8019c68:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8019c6c:	10d1      	asrs	r1, r2, #3
 8019c6e:	f021 0103 	bic.w	r1, r1, #3
 8019c72:	00fb      	lsls	r3, r7, #3
 8019c74:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019c78:	b2db      	uxtb	r3, r3
 8019c7a:	b2c0      	uxtb	r0, r0
 8019c7c:	00c9      	lsls	r1, r1, #3
 8019c7e:	fb03 f30c 	mul.w	r3, r3, ip
 8019c82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019c86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8019c8a:	4308      	orrs	r0, r1
 8019c8c:	1c59      	adds	r1, r3, #1
 8019c8e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019c92:	00d2      	lsls	r2, r2, #3
 8019c94:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019c98:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019c9c:	4318      	orrs	r0, r3
 8019c9e:	f8ae 0000 	strh.w	r0, [lr]
 8019ca2:	e7a2      	b.n	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8019ca4:	b013      	add	sp, #76	; 0x4c
 8019ca6:	ecbd 8b08 	vpop	{d8-d11}
 8019caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cae:	bf00      	nop
 8019cb0:	fffff800 	.word	0xfffff800

08019cb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8019cb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019cb8:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8019cbc:	fb0c 4e03 	mla	lr, ip, r3, r4
 8019cc0:	f1bc 0f00 	cmp.w	ip, #0
 8019cc4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019cc8:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8019ccc:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8019cd0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8019cd4:	8808      	ldrh	r0, [r1, #0]
 8019cd6:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8019cda:	db2f      	blt.n	8019d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019cdc:	45e2      	cmp	sl, ip
 8019cde:	dd2d      	ble.n	8019d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019ce0:	2c00      	cmp	r4, #0
 8019ce2:	db29      	blt.n	8019d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019ce4:	42a3      	cmp	r3, r4
 8019ce6:	dd27      	ble.n	8019d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019ce8:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8019cec:	1c62      	adds	r2, r4, #1
 8019cee:	d428      	bmi.n	8019d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019cf0:	4293      	cmp	r3, r2
 8019cf2:	dd26      	ble.n	8019d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019cf4:	b32f      	cbz	r7, 8019d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019cf6:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8019cfa:	f11c 0c01 	adds.w	ip, ip, #1
 8019cfe:	d424      	bmi.n	8019d4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019d00:	45e2      	cmp	sl, ip
 8019d02:	dd22      	ble.n	8019d4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019d04:	2e00      	cmp	r6, #0
 8019d06:	f000 809d 	beq.w	8019e44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8019d0a:	2c00      	cmp	r4, #0
 8019d0c:	db1b      	blt.n	8019d46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019d0e:	42a3      	cmp	r3, r4
 8019d10:	dd19      	ble.n	8019d46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019d12:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8019d16:	3401      	adds	r4, #1
 8019d18:	d41a      	bmi.n	8019d50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019d1a:	42a3      	cmp	r3, r4
 8019d1c:	dd18      	ble.n	8019d50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019d1e:	b1cf      	cbz	r7, 8019d54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8019d20:	3301      	adds	r3, #1
 8019d22:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8019d26:	2f0f      	cmp	r7, #15
 8019d28:	d915      	bls.n	8019d56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8019d2a:	4b49      	ldr	r3, [pc, #292]	; (8019e50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8019d2c:	4a49      	ldr	r2, [pc, #292]	; (8019e54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8019d2e:	484a      	ldr	r0, [pc, #296]	; (8019e58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8019d30:	f240 11db 	movw	r1, #475	; 0x1db
 8019d34:	f002 ffc2 	bl	801ccbc <__assert_func>
 8019d38:	4681      	mov	r9, r0
 8019d3a:	e7d7      	b.n	8019cec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8019d3c:	4686      	mov	lr, r0
 8019d3e:	4681      	mov	r9, r0
 8019d40:	e7db      	b.n	8019cfa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019d42:	4686      	mov	lr, r0
 8019d44:	e7d9      	b.n	8019cfa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019d46:	4684      	mov	ip, r0
 8019d48:	e7e5      	b.n	8019d16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8019d4a:	4603      	mov	r3, r0
 8019d4c:	4684      	mov	ip, r0
 8019d4e:	e7ea      	b.n	8019d26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019d50:	4603      	mov	r3, r0
 8019d52:	e7e8      	b.n	8019d26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019d54:	4603      	mov	r3, r0
 8019d56:	2e0f      	cmp	r6, #15
 8019d58:	d8e7      	bhi.n	8019d2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019d5a:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8019d5e:	fb17 f806 	smulbb	r8, r7, r6
 8019d62:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019d66:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8019d6a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019d6e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8019d72:	ea44 0909 	orr.w	r9, r4, r9
 8019d76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019d7a:	f1c6 0410 	rsb	r4, r6, #16
 8019d7e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019d82:	1be4      	subs	r4, r4, r7
 8019d84:	041a      	lsls	r2, r3, #16
 8019d86:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8019d8a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019d8e:	fb07 fe0e 	mul.w	lr, r7, lr
 8019d92:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019d96:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019d9a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d9e:	fb04 e409 	mla	r4, r4, r9, lr
 8019da2:	4313      	orrs	r3, r2
 8019da4:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8019da8:	fb08 4303 	mla	r3, r8, r3, r4
 8019dac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019db0:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8019db4:	4322      	orrs	r2, r4
 8019db6:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8019dba:	fb06 3202 	mla	r2, r6, r2, r3
 8019dbe:	0d53      	lsrs	r3, r2, #21
 8019dc0:	0952      	lsrs	r2, r2, #5
 8019dc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019dc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019dca:	431a      	orrs	r2, r3
 8019dcc:	b293      	uxth	r3, r2
 8019dce:	b2af      	uxth	r7, r5
 8019dd0:	1202      	asrs	r2, r0, #8
 8019dd2:	43ed      	mvns	r5, r5
 8019dd4:	b2ed      	uxtb	r5, r5
 8019dd6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019dda:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019dde:	fb12 f205 	smulbb	r2, r2, r5
 8019de2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019de6:	fb0c 2c07 	mla	ip, ip, r7, r2
 8019dea:	00dc      	lsls	r4, r3, #3
 8019dec:	10da      	asrs	r2, r3, #3
 8019dee:	10c6      	asrs	r6, r0, #3
 8019df0:	00c3      	lsls	r3, r0, #3
 8019df2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019df6:	b2db      	uxtb	r3, r3
 8019df8:	fb16 f605 	smulbb	r6, r6, r5
 8019dfc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019e00:	b2e4      	uxtb	r4, r4
 8019e02:	fb13 f305 	smulbb	r3, r3, r5
 8019e06:	fa1f fc8c 	uxth.w	ip, ip
 8019e0a:	fb02 6207 	mla	r2, r2, r7, r6
 8019e0e:	fb04 3307 	mla	r3, r4, r7, r3
 8019e12:	b296      	uxth	r6, r2
 8019e14:	b29a      	uxth	r2, r3
 8019e16:	f10c 0301 	add.w	r3, ip, #1
 8019e1a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019e1e:	1c53      	adds	r3, r2, #1
 8019e20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019e24:	1c72      	adds	r2, r6, #1
 8019e26:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8019e2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e32:	0952      	lsrs	r2, r2, #5
 8019e34:	ea43 030c 	orr.w	r3, r3, ip
 8019e38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e3c:	4313      	orrs	r3, r2
 8019e3e:	800b      	strh	r3, [r1, #0]
 8019e40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019e44:	2f0f      	cmp	r7, #15
 8019e46:	f63f af70 	bhi.w	8019d2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019e4a:	4603      	mov	r3, r0
 8019e4c:	4684      	mov	ip, r0
 8019e4e:	e784      	b.n	8019d5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8019e50:	08021447 	.word	0x08021447
 8019e54:	08021a1f 	.word	0x08021a1f
 8019e58:	08021414 	.word	0x08021414

08019e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e60:	ed2d 8b08 	vpush	{d8-d11}
 8019e64:	b093      	sub	sp, #76	; 0x4c
 8019e66:	461d      	mov	r5, r3
 8019e68:	9210      	str	r2, [sp, #64]	; 0x40
 8019e6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e6c:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8019e70:	920b      	str	r2, [sp, #44]	; 0x2c
 8019e72:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8019e76:	910a      	str	r1, [sp, #40]	; 0x28
 8019e78:	6859      	ldr	r1, [r3, #4]
 8019e7a:	681b      	ldr	r3, [r3, #0]
 8019e7c:	9011      	str	r0, [sp, #68]	; 0x44
 8019e7e:	fb01 2707 	mla	r7, r1, r7, r2
 8019e82:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019e86:	9307      	str	r3, [sp, #28]
 8019e88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019e8a:	681b      	ldr	r3, [r3, #0]
 8019e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8019e8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019e90:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8019e94:	43db      	mvns	r3, r3
 8019e96:	b2db      	uxtb	r3, r3
 8019e98:	eeb0 aa40 	vmov.f32	s20, s0
 8019e9c:	eef0 9a60 	vmov.f32	s19, s1
 8019ea0:	eeb0 9a41 	vmov.f32	s18, s2
 8019ea4:	eeb0 8a62 	vmov.f32	s16, s5
 8019ea8:	eef0 8a43 	vmov.f32	s17, s6
 8019eac:	eef0 ba44 	vmov.f32	s23, s8
 8019eb0:	eeb0 ba64 	vmov.f32	s22, s9
 8019eb4:	eef0 aa45 	vmov.f32	s21, s10
 8019eb8:	9308      	str	r3, [sp, #32]
 8019eba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ebc:	2b00      	cmp	r3, #0
 8019ebe:	dc03      	bgt.n	8019ec8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ec2:	2b00      	cmp	r3, #0
 8019ec4:	f340 8203 	ble.w	801a2ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019ec8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019eca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ece:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019ed2:	1e48      	subs	r0, r1, #1
 8019ed4:	f102 3cff 	add.w	ip, r2, #4294967295
 8019ed8:	2d00      	cmp	r5, #0
 8019eda:	f340 80da 	ble.w	801a092 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019ede:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019ee2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ee6:	d406      	bmi.n	8019ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019ee8:	4586      	cmp	lr, r0
 8019eea:	da04      	bge.n	8019ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019eec:	2b00      	cmp	r3, #0
 8019eee:	db02      	blt.n	8019ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019ef0:	4563      	cmp	r3, ip
 8019ef2:	f2c0 80cf 	blt.w	801a094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8019ef6:	f11e 0e01 	adds.w	lr, lr, #1
 8019efa:	f100 80c1 	bmi.w	801a080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019efe:	4571      	cmp	r1, lr
 8019f00:	f2c0 80be 	blt.w	801a080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019f04:	3301      	adds	r3, #1
 8019f06:	f100 80bb 	bmi.w	801a080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019f0a:	429a      	cmp	r2, r3
 8019f0c:	f2c0 80b8 	blt.w	801a080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019f10:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019f14:	46a9      	mov	r9, r5
 8019f16:	f1b9 0f00 	cmp.w	r9, #0
 8019f1a:	f340 80d8 	ble.w	801a0ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019f1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019f20:	1421      	asrs	r1, r4, #16
 8019f22:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019f26:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019f2a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019f2e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019f32:	f100 8111 	bmi.w	801a158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019f36:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019f3a:	4551      	cmp	r1, sl
 8019f3c:	f280 810c 	bge.w	801a158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019f40:	2800      	cmp	r0, #0
 8019f42:	f2c0 8109 	blt.w	801a158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019f46:	f103 3aff 	add.w	sl, r3, #4294967295
 8019f4a:	4550      	cmp	r0, sl
 8019f4c:	f280 8104 	bge.w	801a158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019f50:	fa0f f38e 	sxth.w	r3, lr
 8019f54:	fb00 1103 	mla	r1, r0, r3, r1
 8019f58:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019f5a:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8019f5e:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8019f62:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8019f66:	f1bc 0f00 	cmp.w	ip, #0
 8019f6a:	d007      	beq.n	8019f7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8019f6c:	005b      	lsls	r3, r3, #1
 8019f6e:	eb0a 0003 	add.w	r0, sl, r3
 8019f72:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8019f76:	930c      	str	r3, [sp, #48]	; 0x30
 8019f78:	8843      	ldrh	r3, [r0, #2]
 8019f7a:	930d      	str	r3, [sp, #52]	; 0x34
 8019f7c:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8019f80:	fb12 f30c 	smulbb	r3, r2, ip
 8019f84:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019f88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019f8c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019f90:	10db      	asrs	r3, r3, #3
 8019f92:	ea40 000e 	orr.w	r0, r0, lr
 8019f96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019f9a:	f1cc 0e10 	rsb	lr, ip, #16
 8019f9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019fa2:	ebae 0e02 	sub.w	lr, lr, r2
 8019fa6:	ea4a 0101 	orr.w	r1, sl, r1
 8019faa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019fae:	4351      	muls	r1, r2
 8019fb0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019fb2:	9f08      	ldr	r7, [sp, #32]
 8019fb4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019fb8:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019fbc:	0410      	lsls	r0, r2, #16
 8019fbe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019fc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019fc6:	4310      	orrs	r0, r2
 8019fc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019fca:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019fcc:	0412      	lsls	r2, r2, #16
 8019fce:	fb03 e000 	mla	r0, r3, r0, lr
 8019fd2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019fd6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019fda:	ea42 020e 	orr.w	r2, r2, lr
 8019fde:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8019fe2:	fb03 0302 	mla	r3, r3, r2, r0
 8019fe6:	0d5a      	lsrs	r2, r3, #21
 8019fe8:	095b      	lsrs	r3, r3, #5
 8019fea:	f8b8 0000 	ldrh.w	r0, [r8]
 8019fee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019ff2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019ff6:	4313      	orrs	r3, r2
 8019ff8:	b29b      	uxth	r3, r3
 8019ffa:	1201      	asrs	r1, r0, #8
 8019ffc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801a000:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a004:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a008:	fb11 f107 	smulbb	r1, r1, r7
 801a00c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a010:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a014:	00c0      	lsls	r0, r0, #3
 801a016:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a01a:	b2c0      	uxtb	r0, r0
 801a01c:	10d9      	asrs	r1, r3, #3
 801a01e:	00db      	lsls	r3, r3, #3
 801a020:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a024:	b2db      	uxtb	r3, r3
 801a026:	fb10 f007 	smulbb	r0, r0, r7
 801a02a:	fa1f fc8c 	uxth.w	ip, ip
 801a02e:	fb03 0302 	mla	r3, r3, r2, r0
 801a032:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a036:	fb1e fe07 	smulbb	lr, lr, r7
 801a03a:	fb01 e102 	mla	r1, r1, r2, lr
 801a03e:	b29a      	uxth	r2, r3
 801a040:	f10c 0301 	add.w	r3, ip, #1
 801a044:	b289      	uxth	r1, r1
 801a046:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a04a:	1c53      	adds	r3, r2, #1
 801a04c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a050:	1c4a      	adds	r2, r1, #1
 801a052:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a056:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a05a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a05e:	0949      	lsrs	r1, r1, #5
 801a060:	ea43 030c 	orr.w	r3, r3, ip
 801a064:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a068:	430b      	orrs	r3, r1
 801a06a:	f8a8 3000 	strh.w	r3, [r8]
 801a06e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a070:	441c      	add	r4, r3
 801a072:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a074:	f108 0802 	add.w	r8, r8, #2
 801a078:	441e      	add	r6, r3
 801a07a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a07e:	e74a      	b.n	8019f16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801a080:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a082:	441c      	add	r4, r3
 801a084:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a086:	441e      	add	r6, r3
 801a088:	9b07      	ldr	r3, [sp, #28]
 801a08a:	3302      	adds	r3, #2
 801a08c:	3d01      	subs	r5, #1
 801a08e:	9307      	str	r3, [sp, #28]
 801a090:	e722      	b.n	8019ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a092:	d022      	beq.n	801a0da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801a094:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a096:	1e6b      	subs	r3, r5, #1
 801a098:	fb00 4003 	mla	r0, r0, r3, r4
 801a09c:	1400      	asrs	r0, r0, #16
 801a09e:	f53f af37 	bmi.w	8019f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a0a2:	3901      	subs	r1, #1
 801a0a4:	4288      	cmp	r0, r1
 801a0a6:	f6bf af33 	bge.w	8019f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a0aa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a0ac:	fb01 6303 	mla	r3, r1, r3, r6
 801a0b0:	141b      	asrs	r3, r3, #16
 801a0b2:	f53f af2d 	bmi.w	8019f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a0b6:	3a01      	subs	r2, #1
 801a0b8:	4293      	cmp	r3, r2
 801a0ba:	f6bf af29 	bge.w	8019f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a0be:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a0c2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801a0c6:	46a8      	mov	r8, r5
 801a0c8:	f1b8 0f00 	cmp.w	r8, #0
 801a0cc:	dc5e      	bgt.n	801a18c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a0ce:	9b07      	ldr	r3, [sp, #28]
 801a0d0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a0d4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a0d8:	9307      	str	r3, [sp, #28]
 801a0da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a0dc:	2b00      	cmp	r3, #0
 801a0de:	f340 80f6 	ble.w	801a2ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801a0e2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a0e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a0ea:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a0ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a0f0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a0f4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a0f8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a0fc:	eef0 6a48 	vmov.f32	s13, s16
 801a100:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a104:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a108:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a10c:	ee16 4a90 	vmov	r4, s13
 801a110:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a114:	eef0 6a68 	vmov.f32	s13, s17
 801a118:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a11c:	ee18 2a10 	vmov	r2, s16
 801a120:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a124:	fb92 f3f3 	sdiv	r3, r2, r3
 801a128:	ee18 2a90 	vmov	r2, s17
 801a12c:	9327      	str	r3, [sp, #156]	; 0x9c
 801a12e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a130:	fb92 f3f3 	sdiv	r3, r2, r3
 801a134:	9328      	str	r3, [sp, #160]	; 0xa0
 801a136:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a138:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a13a:	3b01      	subs	r3, #1
 801a13c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a140:	930a      	str	r3, [sp, #40]	; 0x28
 801a142:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a144:	ee16 6a90 	vmov	r6, s13
 801a148:	bf14      	ite	ne
 801a14a:	461d      	movne	r5, r3
 801a14c:	4615      	moveq	r5, r2
 801a14e:	eef0 8a67 	vmov.f32	s17, s15
 801a152:	eeb0 8a47 	vmov.f32	s16, s14
 801a156:	e6b0      	b.n	8019eba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a158:	f111 0a01 	adds.w	sl, r1, #1
 801a15c:	d487      	bmi.n	801a06e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a15e:	45d6      	cmp	lr, sl
 801a160:	db85      	blt.n	801a06e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a162:	f110 0a01 	adds.w	sl, r0, #1
 801a166:	d482      	bmi.n	801a06e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a168:	4553      	cmp	r3, sl
 801a16a:	db80      	blt.n	801a06e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a16c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a16e:	9101      	str	r1, [sp, #4]
 801a170:	b21b      	sxth	r3, r3
 801a172:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a176:	9300      	str	r3, [sp, #0]
 801a178:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a17c:	fa0f f38e 	sxth.w	r3, lr
 801a180:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a182:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a184:	4641      	mov	r1, r8
 801a186:	f7ff fd95 	bl	8019cb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a18a:	e770      	b.n	801a06e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a18c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a18e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a190:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a194:	1430      	asrs	r0, r6, #16
 801a196:	1423      	asrs	r3, r4, #16
 801a198:	fb01 3000 	mla	r0, r1, r0, r3
 801a19c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a19e:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a1a2:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a1a6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a1aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a1ae:	8858      	ldrh	r0, [r3, #2]
 801a1b0:	f1be 0f00 	cmp.w	lr, #0
 801a1b4:	d00b      	beq.n	801a1ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801a1b6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a1ba:	3901      	subs	r1, #1
 801a1bc:	0049      	lsls	r1, r1, #1
 801a1be:	3102      	adds	r1, #2
 801a1c0:	eb03 0b01 	add.w	fp, r3, r1
 801a1c4:	5a5b      	ldrh	r3, [r3, r1]
 801a1c6:	930e      	str	r3, [sp, #56]	; 0x38
 801a1c8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a1cc:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1ce:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a1d2:	fb12 f30e 	smulbb	r3, r2, lr
 801a1d6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a1da:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a1de:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801a1e2:	10db      	asrs	r3, r3, #3
 801a1e4:	ea41 010c 	orr.w	r1, r1, ip
 801a1e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a1ec:	f1ce 0c10 	rsb	ip, lr, #16
 801a1f0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a1f4:	ebac 0c02 	sub.w	ip, ip, r2
 801a1f8:	ea4b 0000 	orr.w	r0, fp, r0
 801a1fc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a200:	4350      	muls	r0, r2
 801a202:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a204:	9f08      	ldr	r7, [sp, #32]
 801a206:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a20a:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a20e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a212:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801a216:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a218:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a21a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a21e:	0412      	lsls	r2, r2, #16
 801a220:	ea4b 0101 	orr.w	r1, fp, r1
 801a224:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a228:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a22c:	fb03 c101 	mla	r1, r3, r1, ip
 801a230:	4302      	orrs	r2, r0
 801a232:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a236:	fb03 1202 	mla	r2, r3, r2, r1
 801a23a:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a23e:	0952      	lsrs	r2, r2, #5
 801a240:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801a244:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a248:	f8b9 2000 	ldrh.w	r2, [r9]
 801a24c:	ea4b 0303 	orr.w	r3, fp, r3
 801a250:	b29b      	uxth	r3, r3
 801a252:	1211      	asrs	r1, r2, #8
 801a254:	1218      	asrs	r0, r3, #8
 801a256:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a25a:	fb11 f107 	smulbb	r1, r1, r7
 801a25e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a262:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a266:	00d2      	lsls	r2, r2, #3
 801a268:	fb00 100a 	mla	r0, r0, sl, r1
 801a26c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a270:	10d9      	asrs	r1, r3, #3
 801a272:	b2d2      	uxtb	r2, r2
 801a274:	00db      	lsls	r3, r3, #3
 801a276:	fb1c fc07 	smulbb	ip, ip, r7
 801a27a:	fb12 f207 	smulbb	r2, r2, r7
 801a27e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a282:	b2db      	uxtb	r3, r3
 801a284:	b280      	uxth	r0, r0
 801a286:	fb01 c10a 	mla	r1, r1, sl, ip
 801a28a:	fb03 230a 	mla	r3, r3, sl, r2
 801a28e:	b29b      	uxth	r3, r3
 801a290:	b289      	uxth	r1, r1
 801a292:	1c42      	adds	r2, r0, #1
 801a294:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a298:	f101 0c01 	add.w	ip, r1, #1
 801a29c:	1c5a      	adds	r2, r3, #1
 801a29e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a2a2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a2a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a2a8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a2ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a2b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a2b4:	4310      	orrs	r0, r2
 801a2b6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a2ba:	441c      	add	r4, r3
 801a2bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a2be:	ea40 000c 	orr.w	r0, r0, ip
 801a2c2:	f829 0b02 	strh.w	r0, [r9], #2
 801a2c6:	441e      	add	r6, r3
 801a2c8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2cc:	e6fc      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a2ce:	b013      	add	sp, #76	; 0x4c
 801a2d0:	ecbd 8b08 	vpop	{d8-d11}
 801a2d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a2d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a2dc:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801a2e0:	fb06 5c03 	mla	ip, r6, r3, r5
 801a2e4:	2e00      	cmp	r6, #0
 801a2e6:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801a2ea:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801a2ee:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801a2f2:	8808      	ldrh	r0, [r1, #0]
 801a2f4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a2f8:	db2e      	blt.n	801a358 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a2fa:	45b0      	cmp	r8, r6
 801a2fc:	dd2c      	ble.n	801a358 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a2fe:	2d00      	cmp	r5, #0
 801a300:	db28      	blt.n	801a354 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a302:	42ab      	cmp	r3, r5
 801a304:	dd26      	ble.n	801a354 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a306:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801a30a:	1c6a      	adds	r2, r5, #1
 801a30c:	d427      	bmi.n	801a35e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a30e:	4293      	cmp	r3, r2
 801a310:	dd25      	ble.n	801a35e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a312:	b324      	cbz	r4, 801a35e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a314:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801a318:	3601      	adds	r6, #1
 801a31a:	d424      	bmi.n	801a366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a31c:	45b0      	cmp	r8, r6
 801a31e:	dd22      	ble.n	801a366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a320:	b31f      	cbz	r7, 801a36a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801a322:	2d00      	cmp	r5, #0
 801a324:	db1d      	blt.n	801a362 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a326:	42ab      	cmp	r3, r5
 801a328:	dd1b      	ble.n	801a362 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a32a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801a32e:	3501      	adds	r5, #1
 801a330:	d405      	bmi.n	801a33e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a332:	42ab      	cmp	r3, r5
 801a334:	dd03      	ble.n	801a33e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a336:	b124      	cbz	r4, 801a342 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801a338:	3301      	adds	r3, #1
 801a33a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801a33e:	2c0f      	cmp	r4, #15
 801a340:	d801      	bhi.n	801a346 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a342:	2f0f      	cmp	r7, #15
 801a344:	d914      	bls.n	801a370 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801a346:	4b27      	ldr	r3, [pc, #156]	; (801a3e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801a348:	4a27      	ldr	r2, [pc, #156]	; (801a3e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801a34a:	4828      	ldr	r0, [pc, #160]	; (801a3ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801a34c:	f240 11db 	movw	r1, #475	; 0x1db
 801a350:	f002 fcb4 	bl	801ccbc <__assert_func>
 801a354:	4684      	mov	ip, r0
 801a356:	e7d8      	b.n	801a30a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801a358:	4602      	mov	r2, r0
 801a35a:	4684      	mov	ip, r0
 801a35c:	e7dc      	b.n	801a318 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a35e:	4602      	mov	r2, r0
 801a360:	e7da      	b.n	801a318 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a362:	4606      	mov	r6, r0
 801a364:	e7e3      	b.n	801a32e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801a366:	4606      	mov	r6, r0
 801a368:	e7e9      	b.n	801a33e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a36a:	2c0f      	cmp	r4, #15
 801a36c:	d8eb      	bhi.n	801a346 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a36e:	4606      	mov	r6, r0
 801a370:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801a374:	fb14 f307 	smulbb	r3, r4, r7
 801a378:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801a37c:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801a380:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a384:	10db      	asrs	r3, r3, #3
 801a386:	ea45 0c0c 	orr.w	ip, r5, ip
 801a38a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a38e:	f1c7 0510 	rsb	r5, r7, #16
 801a392:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a396:	1b2d      	subs	r5, r5, r4
 801a398:	ea4e 0202 	orr.w	r2, lr, r2
 801a39c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801a3a0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a3a4:	4354      	muls	r4, r2
 801a3a6:	fb05 450c 	mla	r5, r5, ip, r4
 801a3aa:	0404      	lsls	r4, r0, #16
 801a3ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a3b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a3b4:	4320      	orrs	r0, r4
 801a3b6:	fb03 5400 	mla	r4, r3, r0, r5
 801a3ba:	0430      	lsls	r0, r6, #16
 801a3bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a3c0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801a3c4:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801a3c8:	4330      	orrs	r0, r6
 801a3ca:	fb07 4000 	mla	r0, r7, r0, r4
 801a3ce:	0d43      	lsrs	r3, r0, #21
 801a3d0:	0940      	lsrs	r0, r0, #5
 801a3d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a3da:	4318      	orrs	r0, r3
 801a3dc:	8008      	strh	r0, [r1, #0]
 801a3de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a3e2:	bf00      	nop
 801a3e4:	08021447 	.word	0x08021447
 801a3e8:	08021a1f 	.word	0x08021a1f
 801a3ec:	08021414 	.word	0x08021414

0801a3f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3f4:	ed2d 8b08 	vpush	{d8-d11}
 801a3f8:	b08f      	sub	sp, #60	; 0x3c
 801a3fa:	461d      	mov	r5, r3
 801a3fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a3fe:	920c      	str	r2, [sp, #48]	; 0x30
 801a400:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801a404:	9107      	str	r1, [sp, #28]
 801a406:	6859      	ldr	r1, [r3, #4]
 801a408:	681b      	ldr	r3, [r3, #0]
 801a40a:	900d      	str	r0, [sp, #52]	; 0x34
 801a40c:	fb01 2707 	mla	r7, r1, r7, r2
 801a410:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a414:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a416:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801a41a:	f8d3 8000 	ldr.w	r8, [r3]
 801a41e:	eeb0 aa40 	vmov.f32	s20, s0
 801a422:	eef0 9a60 	vmov.f32	s19, s1
 801a426:	eeb0 9a41 	vmov.f32	s18, s2
 801a42a:	eeb0 8a62 	vmov.f32	s16, s5
 801a42e:	eef0 8a43 	vmov.f32	s17, s6
 801a432:	eef0 ba44 	vmov.f32	s23, s8
 801a436:	eeb0 ba64 	vmov.f32	s22, s9
 801a43a:	eef0 aa45 	vmov.f32	s21, s10
 801a43e:	9b07      	ldr	r3, [sp, #28]
 801a440:	2b00      	cmp	r3, #0
 801a442:	dc03      	bgt.n	801a44c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a444:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a446:	2b00      	cmp	r3, #0
 801a448:	f340 8181 	ble.w	801a74e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a44c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a44e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a452:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a456:	1e48      	subs	r0, r1, #1
 801a458:	f102 3cff 	add.w	ip, r2, #4294967295
 801a45c:	2d00      	cmp	r5, #0
 801a45e:	f340 809b 	ble.w	801a598 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801a462:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a466:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a46a:	d406      	bmi.n	801a47a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a46c:	4586      	cmp	lr, r0
 801a46e:	da04      	bge.n	801a47a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a470:	2b00      	cmp	r3, #0
 801a472:	db02      	blt.n	801a47a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a474:	4563      	cmp	r3, ip
 801a476:	f2c0 8090 	blt.w	801a59a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801a47a:	f11e 0e01 	adds.w	lr, lr, #1
 801a47e:	f100 8084 	bmi.w	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a482:	4571      	cmp	r1, lr
 801a484:	f2c0 8081 	blt.w	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a488:	3301      	adds	r3, #1
 801a48a:	d47e      	bmi.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a48c:	429a      	cmp	r2, r3
 801a48e:	db7c      	blt.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a490:	46aa      	mov	sl, r5
 801a492:	46b9      	mov	r9, r7
 801a494:	f1ba 0f00 	cmp.w	sl, #0
 801a498:	f340 8099 	ble.w	801a5ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801a49c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a49e:	1421      	asrs	r1, r4, #16
 801a4a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a4a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a4a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a4ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a4b0:	f100 80d0 	bmi.w	801a654 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a4b4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a4b8:	4559      	cmp	r1, fp
 801a4ba:	f280 80cb 	bge.w	801a654 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a4be:	2800      	cmp	r0, #0
 801a4c0:	f2c0 80c8 	blt.w	801a654 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a4c4:	f103 3bff 	add.w	fp, r3, #4294967295
 801a4c8:	4558      	cmp	r0, fp
 801a4ca:	f280 80c3 	bge.w	801a654 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a4ce:	fa0f fe8e 	sxth.w	lr, lr
 801a4d2:	fb00 110e 	mla	r1, r0, lr, r1
 801a4d6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a4da:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a4de:	8841      	ldrh	r1, [r0, #2]
 801a4e0:	f1bc 0f00 	cmp.w	ip, #0
 801a4e4:	d00b      	beq.n	801a4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a4e6:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801a4ea:	3b01      	subs	r3, #1
 801a4ec:	005b      	lsls	r3, r3, #1
 801a4ee:	3302      	adds	r3, #2
 801a4f0:	eb00 0e03 	add.w	lr, r0, r3
 801a4f4:	5ac3      	ldrh	r3, [r0, r3]
 801a4f6:	9308      	str	r3, [sp, #32]
 801a4f8:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a4fc:	9309      	str	r3, [sp, #36]	; 0x24
 801a4fe:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a502:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a506:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a50a:	ea40 000b 	orr.w	r0, r0, fp
 801a50e:	fb12 f30c 	smulbb	r3, r2, ip
 801a512:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a516:	10db      	asrs	r3, r3, #3
 801a518:	f1cc 0e10 	rsb	lr, ip, #16
 801a51c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a520:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a524:	ebae 0e02 	sub.w	lr, lr, r2
 801a528:	ea4b 0101 	orr.w	r1, fp, r1
 801a52c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a530:	4351      	muls	r1, r2
 801a532:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a534:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a538:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a53c:	0410      	lsls	r0, r2, #16
 801a53e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a542:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a546:	4310      	orrs	r0, r2
 801a548:	9a08      	ldr	r2, [sp, #32]
 801a54a:	9908      	ldr	r1, [sp, #32]
 801a54c:	0412      	lsls	r2, r2, #16
 801a54e:	fb03 e000 	mla	r0, r3, r0, lr
 801a552:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a556:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a55a:	ea42 020e 	orr.w	r2, r2, lr
 801a55e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a562:	fb03 0302 	mla	r3, r3, r2, r0
 801a566:	0d5a      	lsrs	r2, r3, #21
 801a568:	095b      	lsrs	r3, r3, #5
 801a56a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a56e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a572:	4313      	orrs	r3, r2
 801a574:	f8a9 3000 	strh.w	r3, [r9]
 801a578:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a57a:	441c      	add	r4, r3
 801a57c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a57e:	f109 0902 	add.w	r9, r9, #2
 801a582:	441e      	add	r6, r3
 801a584:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a588:	e784      	b.n	801a494 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a58a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a58c:	441c      	add	r4, r3
 801a58e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a590:	3d01      	subs	r5, #1
 801a592:	441e      	add	r6, r3
 801a594:	3702      	adds	r7, #2
 801a596:	e761      	b.n	801a45c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a598:	d01d      	beq.n	801a5d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a59a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a59c:	1e6b      	subs	r3, r5, #1
 801a59e:	fb00 4003 	mla	r0, r0, r3, r4
 801a5a2:	1400      	asrs	r0, r0, #16
 801a5a4:	f53f af74 	bmi.w	801a490 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5a8:	3901      	subs	r1, #1
 801a5aa:	4288      	cmp	r0, r1
 801a5ac:	f6bf af70 	bge.w	801a490 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5b0:	9924      	ldr	r1, [sp, #144]	; 0x90
 801a5b2:	fb01 6303 	mla	r3, r1, r3, r6
 801a5b6:	141b      	asrs	r3, r3, #16
 801a5b8:	f53f af6a 	bmi.w	801a490 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5bc:	3a01      	subs	r2, #1
 801a5be:	4293      	cmp	r3, r2
 801a5c0:	f6bf af66 	bge.w	801a490 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5c4:	46a9      	mov	r9, r5
 801a5c6:	46ba      	mov	sl, r7
 801a5c8:	f1b9 0f00 	cmp.w	r9, #0
 801a5cc:	dc5a      	bgt.n	801a684 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a5ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a5d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a5d6:	9b07      	ldr	r3, [sp, #28]
 801a5d8:	2b00      	cmp	r3, #0
 801a5da:	f340 80b8 	ble.w	801a74e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a5de:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a5e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5e6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a5ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5ec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a5f0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a5f4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a5f8:	eef0 6a48 	vmov.f32	s13, s16
 801a5fc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a600:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a604:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a608:	ee16 4a90 	vmov	r4, s13
 801a60c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a610:	eef0 6a68 	vmov.f32	s13, s17
 801a614:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a618:	ee18 2a10 	vmov	r2, s16
 801a61c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a620:	fb92 f3f3 	sdiv	r3, r2, r3
 801a624:	ee18 2a90 	vmov	r2, s17
 801a628:	9323      	str	r3, [sp, #140]	; 0x8c
 801a62a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a62c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a630:	9324      	str	r3, [sp, #144]	; 0x90
 801a632:	9b07      	ldr	r3, [sp, #28]
 801a634:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a636:	3b01      	subs	r3, #1
 801a638:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a63c:	9307      	str	r3, [sp, #28]
 801a63e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a640:	ee16 6a90 	vmov	r6, s13
 801a644:	bf14      	ite	ne
 801a646:	461d      	movne	r5, r3
 801a648:	4615      	moveq	r5, r2
 801a64a:	eef0 8a67 	vmov.f32	s17, s15
 801a64e:	eeb0 8a47 	vmov.f32	s16, s14
 801a652:	e6f4      	b.n	801a43e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a654:	f111 0b01 	adds.w	fp, r1, #1
 801a658:	d48e      	bmi.n	801a578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a65a:	45de      	cmp	lr, fp
 801a65c:	db8c      	blt.n	801a578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a65e:	f110 0b01 	adds.w	fp, r0, #1
 801a662:	d489      	bmi.n	801a578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a664:	455b      	cmp	r3, fp
 801a666:	db87      	blt.n	801a578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a668:	b21b      	sxth	r3, r3
 801a66a:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a66e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a672:	9300      	str	r3, [sp, #0]
 801a674:	4642      	mov	r2, r8
 801a676:	fa0f f38e 	sxth.w	r3, lr
 801a67a:	4649      	mov	r1, r9
 801a67c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a67e:	f7ff fe2b 	bl	801a2d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a682:	e779      	b.n	801a578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a686:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a68a:	1420      	asrs	r0, r4, #16
 801a68c:	1431      	asrs	r1, r6, #16
 801a68e:	fb03 0101 	mla	r1, r3, r1, r0
 801a692:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a696:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a69a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a69e:	8841      	ldrh	r1, [r0, #2]
 801a6a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a6a4:	f1be 0f00 	cmp.w	lr, #0
 801a6a8:	d00b      	beq.n	801a6c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801a6aa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a6ae:	3b01      	subs	r3, #1
 801a6b0:	005b      	lsls	r3, r3, #1
 801a6b2:	3302      	adds	r3, #2
 801a6b4:	eb00 0b03 	add.w	fp, r0, r3
 801a6b8:	5ac3      	ldrh	r3, [r0, r3]
 801a6ba:	930a      	str	r3, [sp, #40]	; 0x28
 801a6bc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a6c0:	930b      	str	r3, [sp, #44]	; 0x2c
 801a6c2:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a6c6:	fb12 f30e 	smulbb	r3, r2, lr
 801a6ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a6ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a6d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a6d6:	10db      	asrs	r3, r3, #3
 801a6d8:	ea40 000c 	orr.w	r0, r0, ip
 801a6dc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a6e0:	f1ce 0c10 	rsb	ip, lr, #16
 801a6e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a6e8:	ebac 0c02 	sub.w	ip, ip, r2
 801a6ec:	ea4b 0101 	orr.w	r1, fp, r1
 801a6f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a6f4:	4351      	muls	r1, r2
 801a6f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a6f8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a6fc:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a700:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a704:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801a708:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a70a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a70c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a710:	0412      	lsls	r2, r2, #16
 801a712:	ea4b 0000 	orr.w	r0, fp, r0
 801a716:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a71a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801a71e:	fb03 c000 	mla	r0, r3, r0, ip
 801a722:	ea42 0b0b 	orr.w	fp, r2, fp
 801a726:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a72a:	fb03 000b 	mla	r0, r3, fp, r0
 801a72e:	0d43      	lsrs	r3, r0, #21
 801a730:	0940      	lsrs	r0, r0, #5
 801a732:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a736:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a73a:	4318      	orrs	r0, r3
 801a73c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a73e:	f82a 0b02 	strh.w	r0, [sl], #2
 801a742:	441c      	add	r4, r3
 801a744:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a746:	f109 39ff 	add.w	r9, r9, #4294967295
 801a74a:	441e      	add	r6, r3
 801a74c:	e73c      	b.n	801a5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a74e:	b00f      	add	sp, #60	; 0x3c
 801a750:	ecbd 8b08 	vpop	{d8-d11}
 801a754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a758:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a75c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801a760:	fb04 5603 	mla	r6, r4, r3, r5
 801a764:	2c00      	cmp	r4, #0
 801a766:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a76a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801a76e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801a772:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801a776:	db36      	blt.n	801a7e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801a778:	45a6      	cmp	lr, r4
 801a77a:	dd34      	ble.n	801a7e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801a77c:	2d00      	cmp	r5, #0
 801a77e:	db30      	blt.n	801a7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801a780:	42ab      	cmp	r3, r5
 801a782:	dd2e      	ble.n	801a7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801a784:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801a788:	1c6e      	adds	r6, r5, #1
 801a78a:	d42f      	bmi.n	801a7ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801a78c:	42b3      	cmp	r3, r6
 801a78e:	dd2d      	ble.n	801a7ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801a790:	b370      	cbz	r0, 801a7f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801a792:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a796:	3401      	adds	r4, #1
 801a798:	d42e      	bmi.n	801a7f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801a79a:	45a6      	cmp	lr, r4
 801a79c:	dd2c      	ble.n	801a7f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801a79e:	b377      	cbz	r7, 801a7fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 801a7a0:	2d00      	cmp	r5, #0
 801a7a2:	db27      	blt.n	801a7f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a7a4:	42ab      	cmp	r3, r5
 801a7a6:	dd25      	ble.n	801a7f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a7a8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a7ac:	3501      	adds	r5, #1
 801a7ae:	d429      	bmi.n	801a804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801a7b0:	42ab      	cmp	r3, r5
 801a7b2:	dd27      	ble.n	801a804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801a7b4:	b340      	cbz	r0, 801a808 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801a7b6:	3301      	adds	r3, #1
 801a7b8:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801a7bc:	280f      	cmp	r0, #15
 801a7be:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a7c2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a7c6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a7ca:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a7ce:	d801      	bhi.n	801a7d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 801a7d0:	2f0f      	cmp	r7, #15
 801a7d2:	d91b      	bls.n	801a80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a7d4:	4b8d      	ldr	r3, [pc, #564]	; (801aa0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801a7d6:	4a8e      	ldr	r2, [pc, #568]	; (801aa10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801a7d8:	488e      	ldr	r0, [pc, #568]	; (801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801a7da:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a7de:	f002 fa6d 	bl	801ccbc <__assert_func>
 801a7e2:	2200      	movs	r2, #0
 801a7e4:	e7d0      	b.n	801a788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801a7e6:	2600      	movs	r6, #0
 801a7e8:	4632      	mov	r2, r6
 801a7ea:	e7d4      	b.n	801a796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a7ec:	2600      	movs	r6, #0
 801a7ee:	e7d2      	b.n	801a796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a7f0:	4606      	mov	r6, r0
 801a7f2:	e7d0      	b.n	801a796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801a7f4:	2400      	movs	r4, #0
 801a7f6:	e7d9      	b.n	801a7ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801a7f8:	2300      	movs	r3, #0
 801a7fa:	461c      	mov	r4, r3
 801a7fc:	e7de      	b.n	801a7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a7fe:	463b      	mov	r3, r7
 801a800:	463c      	mov	r4, r7
 801a802:	e7db      	b.n	801a7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a804:	2300      	movs	r3, #0
 801a806:	e7d9      	b.n	801a7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a808:	4603      	mov	r3, r0
 801a80a:	e7d7      	b.n	801a7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801a80c:	b280      	uxth	r0, r0
 801a80e:	b2bf      	uxth	r7, r7
 801a810:	fb07 fe00 	mul.w	lr, r7, r0
 801a814:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a818:	0100      	lsls	r0, r0, #4
 801a81a:	eba0 0c0e 	sub.w	ip, r0, lr
 801a81e:	b2bf      	uxth	r7, r7
 801a820:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a824:	fa1f fc8c 	uxth.w	ip, ip
 801a828:	1bed      	subs	r5, r5, r7
 801a82a:	b2ad      	uxth	r5, r5
 801a82c:	fb0a f00c 	mul.w	r0, sl, ip
 801a830:	fb0b 0005 	mla	r0, fp, r5, r0
 801a834:	fb07 0009 	mla	r0, r7, r9, r0
 801a838:	fb0e 0008 	mla	r0, lr, r8, r0
 801a83c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a840:	9001      	str	r0, [sp, #4]
 801a842:	2800      	cmp	r0, #0
 801a844:	f000 80de 	beq.w	801aa04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 801a848:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a84c:	d018      	beq.n	801a880 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 801a84e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a852:	fb0b f000 	mul.w	r0, fp, r0
 801a856:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a85a:	fb0b fb02 	mul.w	fp, fp, r2
 801a85e:	0a02      	lsrs	r2, r0, #8
 801a860:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a864:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a868:	4402      	add	r2, r0
 801a86a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a86e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a872:	0a12      	lsrs	r2, r2, #8
 801a874:	0a00      	lsrs	r0, r0, #8
 801a876:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a87a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a87e:	4302      	orrs	r2, r0
 801a880:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a884:	d01a      	beq.n	801a8bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801a886:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a88a:	fb0a f000 	mul.w	r0, sl, r0
 801a88e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a892:	fb0a fa06 	mul.w	sl, sl, r6
 801a896:	0a06      	lsrs	r6, r0, #8
 801a898:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a89c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a8a0:	4406      	add	r6, r0
 801a8a2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a8a6:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a8aa:	0a36      	lsrs	r6, r6, #8
 801a8ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a8b0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a8b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a8b8:	ea46 060a 	orr.w	r6, r6, sl
 801a8bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a8c0:	d01b      	beq.n	801a8fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 801a8c2:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a8c6:	fb09 fa0a 	mul.w	sl, r9, sl
 801a8ca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a8ce:	fb09 f004 	mul.w	r0, r9, r4
 801a8d2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a8d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a8da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a8de:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a8e2:	4454      	add	r4, sl
 801a8e4:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a8e8:	0a24      	lsrs	r4, r4, #8
 801a8ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a8ee:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a8f2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a8f6:	ea44 0409 	orr.w	r4, r4, r9
 801a8fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a8fe:	d01b      	beq.n	801a938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 801a900:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a904:	fb08 f909 	mul.w	r9, r8, r9
 801a908:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a90c:	fb08 f003 	mul.w	r0, r8, r3
 801a910:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a914:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a918:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a91c:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a920:	444b      	add	r3, r9
 801a922:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a926:	0a1b      	lsrs	r3, r3, #8
 801a928:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a92c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a930:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a934:	ea43 0308 	orr.w	r3, r3, r8
 801a938:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a93c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a940:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a944:	fb0c f808 	mul.w	r8, ip, r8
 801a948:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a94c:	fb0c f606 	mul.w	r6, ip, r6
 801a950:	fb05 8909 	mla	r9, r5, r9, r8
 801a954:	fb05 6502 	mla	r5, r5, r2, r6
 801a958:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a95c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a960:	9a01      	ldr	r2, [sp, #4]
 801a962:	8808      	ldrh	r0, [r1, #0]
 801a964:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a968:	fb07 9908 	mla	r9, r7, r8, r9
 801a96c:	fb07 5704 	mla	r7, r7, r4, r5
 801a970:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a974:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a978:	b2b6      	uxth	r6, r6
 801a97a:	fb0e 9808 	mla	r8, lr, r8, r9
 801a97e:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a982:	4372      	muls	r2, r6
 801a984:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a988:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a98c:	1c53      	adds	r3, r2, #1
 801a98e:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a992:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a996:	ea48 0e0e 	orr.w	lr, r8, lr
 801a99a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a99e:	1205      	asrs	r5, r0, #8
 801a9a0:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801a9a4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a9a8:	b2db      	uxtb	r3, r3
 801a9aa:	fb12 f206 	smulbb	r2, r2, r6
 801a9ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a9b2:	fb05 2503 	mla	r5, r5, r3, r2
 801a9b6:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801a9ba:	10c2      	asrs	r2, r0, #3
 801a9bc:	fa5f fe8e 	uxtb.w	lr, lr
 801a9c0:	00c0      	lsls	r0, r0, #3
 801a9c2:	fb14 f406 	smulbb	r4, r4, r6
 801a9c6:	b2c0      	uxtb	r0, r0
 801a9c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9cc:	fb1e fe06 	smulbb	lr, lr, r6
 801a9d0:	fb02 4203 	mla	r2, r2, r3, r4
 801a9d4:	b2ad      	uxth	r5, r5
 801a9d6:	fb00 e303 	mla	r3, r0, r3, lr
 801a9da:	b298      	uxth	r0, r3
 801a9dc:	b294      	uxth	r4, r2
 801a9de:	1c6b      	adds	r3, r5, #1
 801a9e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a9e4:	1c62      	adds	r2, r4, #1
 801a9e6:	1c43      	adds	r3, r0, #1
 801a9e8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a9ec:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a9f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a9f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a9f8:	0952      	lsrs	r2, r2, #5
 801a9fa:	432b      	orrs	r3, r5
 801a9fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa00:	4313      	orrs	r3, r2
 801aa02:	800b      	strh	r3, [r1, #0]
 801aa04:	b003      	add	sp, #12
 801aa06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa0a:	bf00      	nop
 801aa0c:	08021447 	.word	0x08021447
 801aa10:	08021976 	.word	0x08021976
 801aa14:	08021414 	.word	0x08021414

0801aa18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa1c:	ed2d 8b08 	vpush	{d8-d11}
 801aa20:	b09d      	sub	sp, #116	; 0x74
 801aa22:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801aa26:	9219      	str	r2, [sp, #100]	; 0x64
 801aa28:	9307      	str	r3, [sp, #28]
 801aa2a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801aa2c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801aa30:	931a      	str	r3, [sp, #104]	; 0x68
 801aa32:	9117      	str	r1, [sp, #92]	; 0x5c
 801aa34:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801aa38:	901b      	str	r0, [sp, #108]	; 0x6c
 801aa3a:	6850      	ldr	r0, [r2, #4]
 801aa3c:	6812      	ldr	r2, [r2, #0]
 801aa3e:	fb00 1303 	mla	r3, r0, r3, r1
 801aa42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa46:	930a      	str	r3, [sp, #40]	; 0x28
 801aa48:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801aa4a:	681b      	ldr	r3, [r3, #0]
 801aa4c:	9310      	str	r3, [sp, #64]	; 0x40
 801aa4e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801aa52:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa54:	eeb0 aa40 	vmov.f32	s20, s0
 801aa58:	eef0 9a60 	vmov.f32	s19, s1
 801aa5c:	eeb0 9a41 	vmov.f32	s18, s2
 801aa60:	eeb0 8a62 	vmov.f32	s16, s5
 801aa64:	eef0 8a43 	vmov.f32	s17, s6
 801aa68:	eef0 ba44 	vmov.f32	s23, s8
 801aa6c:	eeb0 ba64 	vmov.f32	s22, s9
 801aa70:	eef0 aa45 	vmov.f32	s21, s10
 801aa74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801aa76:	2b00      	cmp	r3, #0
 801aa78:	dc03      	bgt.n	801aa82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aa7a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801aa7c:	2b00      	cmp	r3, #0
 801aa7e:	f340 8375 	ble.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801aa82:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801aa84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa8c:	1e48      	subs	r0, r1, #1
 801aa8e:	1e57      	subs	r7, r2, #1
 801aa90:	9b07      	ldr	r3, [sp, #28]
 801aa92:	2b00      	cmp	r3, #0
 801aa94:	f340 818e 	ble.w	801adb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801aa98:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801aa9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aaa0:	d406      	bmi.n	801aab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aaa2:	4584      	cmp	ip, r0
 801aaa4:	da04      	bge.n	801aab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aaa6:	2b00      	cmp	r3, #0
 801aaa8:	db02      	blt.n	801aab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aaaa:	42bb      	cmp	r3, r7
 801aaac:	f2c0 8183 	blt.w	801adb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801aab0:	f11c 0c01 	adds.w	ip, ip, #1
 801aab4:	f100 8173 	bmi.w	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aab8:	4561      	cmp	r1, ip
 801aaba:	f2c0 8170 	blt.w	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aabe:	3301      	adds	r3, #1
 801aac0:	f100 816d 	bmi.w	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aac4:	429a      	cmp	r2, r3
 801aac6:	f2c0 816a 	blt.w	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aaca:	9b07      	ldr	r3, [sp, #28]
 801aacc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801aace:	9318      	str	r3, [sp, #96]	; 0x60
 801aad0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aad2:	2b00      	cmp	r3, #0
 801aad4:	f340 818c 	ble.w	801adf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801aad8:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801aada:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801aadc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801aae0:	689b      	ldr	r3, [r3, #8]
 801aae2:	1422      	asrs	r2, r4, #16
 801aae4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801aae8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801aaec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801aaf0:	f100 81cd 	bmi.w	801ae8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801aaf4:	f103 38ff 	add.w	r8, r3, #4294967295
 801aaf8:	4542      	cmp	r2, r8
 801aafa:	f280 81c8 	bge.w	801ae8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801aafe:	f1bc 0f00 	cmp.w	ip, #0
 801ab02:	f2c0 81c4 	blt.w	801ae8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ab06:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ab0a:	45c4      	cmp	ip, r8
 801ab0c:	f280 81bf 	bge.w	801ae8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ab10:	b21b      	sxth	r3, r3
 801ab12:	fb0c 2203 	mla	r2, ip, r3, r2
 801ab16:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ab18:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ab1c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ab20:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ab24:	2800      	cmp	r0, #0
 801ab26:	f000 81a9 	beq.w	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801ab2a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ab2e:	950c      	str	r5, [sp, #48]	; 0x30
 801ab30:	0e2d      	lsrs	r5, r5, #24
 801ab32:	9513      	str	r5, [sp, #76]	; 0x4c
 801ab34:	b181      	cbz	r1, 801ab58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ab36:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ab3a:	3b01      	subs	r3, #1
 801ab3c:	009b      	lsls	r3, r3, #2
 801ab3e:	3304      	adds	r3, #4
 801ab40:	eb08 0c03 	add.w	ip, r8, r3
 801ab44:	f858 3003 	ldr.w	r3, [r8, r3]
 801ab48:	9308      	str	r3, [sp, #32]
 801ab4a:	0e1b      	lsrs	r3, r3, #24
 801ab4c:	9311      	str	r3, [sp, #68]	; 0x44
 801ab4e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ab52:	930d      	str	r3, [sp, #52]	; 0x34
 801ab54:	0e1b      	lsrs	r3, r3, #24
 801ab56:	9314      	str	r3, [sp, #80]	; 0x50
 801ab58:	b280      	uxth	r0, r0
 801ab5a:	b289      	uxth	r1, r1
 801ab5c:	fb00 f901 	mul.w	r9, r0, r1
 801ab60:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab64:	0100      	lsls	r0, r0, #4
 801ab66:	eba0 0809 	sub.w	r8, r0, r9
 801ab6a:	b289      	uxth	r1, r1
 801ab6c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ab70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab72:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab74:	fa1f f888 	uxth.w	r8, r8
 801ab78:	1a5b      	subs	r3, r3, r1
 801ab7a:	b29b      	uxth	r3, r3
 801ab7c:	fb08 f000 	mul.w	r0, r8, r0
 801ab80:	fb03 000e 	mla	r0, r3, lr, r0
 801ab84:	fb01 0005 	mla	r0, r1, r5, r0
 801ab88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ab8a:	fb09 0005 	mla	r0, r9, r5, r0
 801ab8e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ab92:	2800      	cmp	r0, #0
 801ab94:	f000 80fa 	beq.w	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ab98:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ab9c:	d01b      	beq.n	801abd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801ab9e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801aba2:	fb0e fa0a 	mul.w	sl, lr, sl
 801aba6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801abaa:	fb0e fe02 	mul.w	lr, lr, r2
 801abae:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801abb2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801abb6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801abba:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801abbe:	4452      	add	r2, sl
 801abc0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801abc4:	0a12      	lsrs	r2, r2, #8
 801abc6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801abce:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801abd2:	ea42 020c 	orr.w	r2, r2, ip
 801abd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801abd8:	2dff      	cmp	r5, #255	; 0xff
 801abda:	d021      	beq.n	801ac20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801abdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801abde:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801abe2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801abe4:	fb05 fb0b 	mul.w	fp, r5, fp
 801abe8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801abea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801abee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801abf0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801abf4:	fb05 fa0a 	mul.w	sl, r5, sl
 801abf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801abfc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac04:	44de      	add	lr, fp
 801ac06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac1a:	ea4e 050a 	orr.w	r5, lr, sl
 801ac1e:	950c      	str	r5, [sp, #48]	; 0x30
 801ac20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac22:	2dff      	cmp	r5, #255	; 0xff
 801ac24:	d021      	beq.n	801ac6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ac26:	9d08      	ldr	r5, [sp, #32]
 801ac28:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ac2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac2e:	fb05 fb0b 	mul.w	fp, r5, fp
 801ac32:	9d08      	ldr	r5, [sp, #32]
 801ac34:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ac38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac3e:	fb05 fa0a 	mul.w	sl, r5, sl
 801ac42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac46:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac4a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac4e:	44de      	add	lr, fp
 801ac50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac64:	ea4e 050a 	orr.w	r5, lr, sl
 801ac68:	9508      	str	r5, [sp, #32]
 801ac6a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac6c:	2dff      	cmp	r5, #255	; 0xff
 801ac6e:	d021      	beq.n	801acb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ac70:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ac72:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ac76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac78:	fb05 fb0b 	mul.w	fp, r5, fp
 801ac7c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ac7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ac82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac88:	fb05 fa0a 	mul.w	sl, r5, sl
 801ac8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac98:	44de      	add	lr, fp
 801ac9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aca2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aca6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801acaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801acae:	ea4e 050a 	orr.w	r5, lr, sl
 801acb2:	950d      	str	r5, [sp, #52]	; 0x34
 801acb4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801acb6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801acba:	9d08      	ldr	r5, [sp, #32]
 801acbc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801acc0:	fb08 fc0c 	mul.w	ip, r8, ip
 801acc4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801acc8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801accc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801acce:	fb01 cc0e 	mla	ip, r1, lr, ip
 801acd2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801acd6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801acd8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801acdc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ace0:	fb08 f80e 	mul.w	r8, r8, lr
 801ace4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ace8:	fb03 8202 	mla	r2, r3, r2, r8
 801acec:	9b08      	ldr	r3, [sp, #32]
 801acee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801acf0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801acf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801acf6:	fb01 220a 	mla	r2, r1, sl, r2
 801acfa:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801acfe:	fb09 2901 	mla	r9, r9, r1, r2
 801ad02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad04:	883b      	ldrh	r3, [r7, #0]
 801ad06:	4342      	muls	r2, r0
 801ad08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ad10:	1c50      	adds	r0, r2, #1
 801ad12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad16:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ad1a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad1e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ad22:	1219      	asrs	r1, r3, #8
 801ad24:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ad28:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ad2c:	b2c0      	uxtb	r0, r0
 801ad2e:	fb12 f205 	smulbb	r2, r2, r5
 801ad32:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ad36:	fb01 2100 	mla	r1, r1, r0, r2
 801ad3a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ad3e:	10da      	asrs	r2, r3, #3
 801ad40:	fa5f fc8c 	uxtb.w	ip, ip
 801ad44:	00db      	lsls	r3, r3, #3
 801ad46:	fb1c fc05 	smulbb	ip, ip, r5
 801ad4a:	b2db      	uxtb	r3, r3
 801ad4c:	b289      	uxth	r1, r1
 801ad4e:	fb03 c300 	mla	r3, r3, r0, ip
 801ad52:	fa1f fc83 	uxth.w	ip, r3
 801ad56:	1c4b      	adds	r3, r1, #1
 801ad58:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad5c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad60:	fb1e fe05 	smulbb	lr, lr, r5
 801ad64:	f10c 0301 	add.w	r3, ip, #1
 801ad68:	fb02 e200 	mla	r2, r2, r0, lr
 801ad6c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ad70:	b292      	uxth	r2, r2
 801ad72:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ad76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad7a:	430b      	orrs	r3, r1
 801ad7c:	1c51      	adds	r1, r2, #1
 801ad7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ad82:	0952      	lsrs	r2, r2, #5
 801ad84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad88:	4313      	orrs	r3, r2
 801ad8a:	803b      	strh	r3, [r7, #0]
 801ad8c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801ad8e:	441c      	add	r4, r3
 801ad90:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ad92:	441e      	add	r6, r3
 801ad94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ad96:	3b01      	subs	r3, #1
 801ad98:	3702      	adds	r7, #2
 801ad9a:	9318      	str	r3, [sp, #96]	; 0x60
 801ad9c:	e698      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801ad9e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801ada0:	441c      	add	r4, r3
 801ada2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ada4:	441e      	add	r6, r3
 801ada6:	9b07      	ldr	r3, [sp, #28]
 801ada8:	3b01      	subs	r3, #1
 801adaa:	9307      	str	r3, [sp, #28]
 801adac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801adae:	3302      	adds	r3, #2
 801adb0:	930a      	str	r3, [sp, #40]	; 0x28
 801adb2:	e66d      	b.n	801aa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801adb4:	d023      	beq.n	801adfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801adb6:	9b07      	ldr	r3, [sp, #28]
 801adb8:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801adba:	3b01      	subs	r3, #1
 801adbc:	fb00 4003 	mla	r0, r0, r3, r4
 801adc0:	1400      	asrs	r0, r0, #16
 801adc2:	f53f ae82 	bmi.w	801aaca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801adc6:	3901      	subs	r1, #1
 801adc8:	4288      	cmp	r0, r1
 801adca:	f6bf ae7e 	bge.w	801aaca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801adce:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801add0:	fb01 6303 	mla	r3, r1, r3, r6
 801add4:	141b      	asrs	r3, r3, #16
 801add6:	f53f ae78 	bmi.w	801aaca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801adda:	3a01      	subs	r2, #1
 801addc:	4293      	cmp	r3, r2
 801adde:	f6bf ae74 	bge.w	801aaca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ade2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ade6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801adea:	f1bb 0f00 	cmp.w	fp, #0
 801adee:	dc6c      	bgt.n	801aeca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801adf0:	9b07      	ldr	r3, [sp, #28]
 801adf2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801adf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801adf8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801adfc:	930a      	str	r3, [sp, #40]	; 0x28
 801adfe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ae00:	2b00      	cmp	r3, #0
 801ae02:	f340 81b3 	ble.w	801b16c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801ae06:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ae0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae0e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ae12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ae14:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ae18:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ae1c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ae20:	eef0 6a48 	vmov.f32	s13, s16
 801ae24:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ae28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae2c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ae30:	ee16 4a90 	vmov	r4, s13
 801ae34:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ae38:	eef0 6a68 	vmov.f32	s13, s17
 801ae3c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ae40:	ee18 2a10 	vmov	r2, s16
 801ae44:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ae48:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae4c:	ee18 2a90 	vmov	r2, s17
 801ae50:	9331      	str	r3, [sp, #196]	; 0xc4
 801ae52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ae54:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae58:	9332      	str	r3, [sp, #200]	; 0xc8
 801ae5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ae5c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801ae5e:	3b01      	subs	r3, #1
 801ae60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae64:	9317      	str	r3, [sp, #92]	; 0x5c
 801ae66:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ae68:	bf08      	it	eq
 801ae6a:	4613      	moveq	r3, r2
 801ae6c:	ee16 6a90 	vmov	r6, s13
 801ae70:	9307      	str	r3, [sp, #28]
 801ae72:	eef0 8a67 	vmov.f32	s17, s15
 801ae76:	eeb0 8a47 	vmov.f32	s16, s14
 801ae7a:	e5fb      	b.n	801aa74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ae7c:	2900      	cmp	r1, #0
 801ae7e:	f43f ae6b 	beq.w	801ab58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ae82:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ae86:	9308      	str	r3, [sp, #32]
 801ae88:	0e1b      	lsrs	r3, r3, #24
 801ae8a:	9311      	str	r3, [sp, #68]	; 0x44
 801ae8c:	e664      	b.n	801ab58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ae8e:	f112 0801 	adds.w	r8, r2, #1
 801ae92:	f53f af7b 	bmi.w	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ae96:	4543      	cmp	r3, r8
 801ae98:	f6ff af78 	blt.w	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ae9c:	f11c 0801 	adds.w	r8, ip, #1
 801aea0:	f53f af74 	bmi.w	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aea4:	45c6      	cmp	lr, r8
 801aea6:	f6ff af71 	blt.w	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aeaa:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801aeac:	9201      	str	r2, [sp, #4]
 801aeae:	fa0f f28e 	sxth.w	r2, lr
 801aeb2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801aeb6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801aeba:	9200      	str	r2, [sp, #0]
 801aebc:	b21b      	sxth	r3, r3
 801aebe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aec0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801aec2:	4639      	mov	r1, r7
 801aec4:	f7ff fc48 	bl	801a758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801aec8:	e760      	b.n	801ad8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aeca:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801aecc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aece:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aed2:	1427      	asrs	r7, r4, #16
 801aed4:	1433      	asrs	r3, r6, #16
 801aed6:	fb01 7303 	mla	r3, r1, r3, r7
 801aeda:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801aede:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801aee2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aee6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aeea:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801aeee:	2a00      	cmp	r2, #0
 801aef0:	f000 8133 	beq.w	801b15a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801aef4:	687d      	ldr	r5, [r7, #4]
 801aef6:	950e      	str	r5, [sp, #56]	; 0x38
 801aef8:	0e2d      	lsrs	r5, r5, #24
 801aefa:	9515      	str	r5, [sp, #84]	; 0x54
 801aefc:	b178      	cbz	r0, 801af1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801aefe:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801af02:	3901      	subs	r1, #1
 801af04:	0089      	lsls	r1, r1, #2
 801af06:	3104      	adds	r1, #4
 801af08:	eb07 0e01 	add.w	lr, r7, r1
 801af0c:	5879      	ldr	r1, [r7, r1]
 801af0e:	9109      	str	r1, [sp, #36]	; 0x24
 801af10:	0e09      	lsrs	r1, r1, #24
 801af12:	9112      	str	r1, [sp, #72]	; 0x48
 801af14:	f8de 1004 	ldr.w	r1, [lr, #4]
 801af18:	910f      	str	r1, [sp, #60]	; 0x3c
 801af1a:	0e09      	lsrs	r1, r1, #24
 801af1c:	9116      	str	r1, [sp, #88]	; 0x58
 801af1e:	b292      	uxth	r2, r2
 801af20:	b280      	uxth	r0, r0
 801af22:	fb02 f800 	mul.w	r8, r2, r0
 801af26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801af2a:	0112      	lsls	r2, r2, #4
 801af2c:	eba2 0e08 	sub.w	lr, r2, r8
 801af30:	b280      	uxth	r0, r0
 801af32:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801af36:	9915      	ldr	r1, [sp, #84]	; 0x54
 801af38:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801af3a:	fa1f fe8e 	uxth.w	lr, lr
 801af3e:	1a12      	subs	r2, r2, r0
 801af40:	b292      	uxth	r2, r2
 801af42:	fb0e f101 	mul.w	r1, lr, r1
 801af46:	fb02 110c 	mla	r1, r2, ip, r1
 801af4a:	fb00 1105 	mla	r1, r0, r5, r1
 801af4e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801af50:	fb08 1105 	mla	r1, r8, r5, r1
 801af54:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801af58:	2900      	cmp	r1, #0
 801af5a:	f000 80f5 	beq.w	801b148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801af5e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801af62:	d019      	beq.n	801af98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801af64:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801af68:	fb0c fa0a 	mul.w	sl, ip, sl
 801af6c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af70:	fb0c fc03 	mul.w	ip, ip, r3
 801af74:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801af78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801af7c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801af80:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801af84:	4453      	add	r3, sl
 801af86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801af8a:	0a1b      	lsrs	r3, r3, #8
 801af8c:	0a3f      	lsrs	r7, r7, #8
 801af8e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801af92:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801af96:	433b      	orrs	r3, r7
 801af98:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801af9a:	2dff      	cmp	r5, #255	; 0xff
 801af9c:	d020      	beq.n	801afe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801af9e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afa0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801afa4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801afa6:	436f      	muls	r7, r5
 801afa8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afaa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801afae:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801afb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801afb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801afb8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801afbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801afc0:	44bc      	add	ip, r7
 801afc2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801afc6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801afca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801afd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801afda:	ea4c 050a 	orr.w	r5, ip, sl
 801afde:	950e      	str	r5, [sp, #56]	; 0x38
 801afe0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801afe2:	2dff      	cmp	r5, #255	; 0xff
 801afe4:	d020      	beq.n	801b028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801afe6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801afe8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801afec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801afee:	436f      	muls	r7, r5
 801aff0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801aff2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aff6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aff8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801affc:	fb05 fa0a 	mul.w	sl, r5, sl
 801b000:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b004:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b008:	44bc      	add	ip, r7
 801b00a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b00e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b012:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b016:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b01a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b01e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b022:	ea4c 050a 	orr.w	r5, ip, sl
 801b026:	9509      	str	r5, [sp, #36]	; 0x24
 801b028:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b02a:	2dff      	cmp	r5, #255	; 0xff
 801b02c:	d020      	beq.n	801b070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b02e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b030:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b034:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b036:	436f      	muls	r7, r5
 801b038:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b03a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b03e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b040:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b044:	fb05 fa0a 	mul.w	sl, r5, sl
 801b048:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b04c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b050:	44bc      	add	ip, r7
 801b052:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b056:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b05a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b05e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b062:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b066:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b06a:	ea4c 050a 	orr.w	r5, ip, sl
 801b06e:	950f      	str	r5, [sp, #60]	; 0x3c
 801b070:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b072:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b076:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b078:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b07c:	fb0e f707 	mul.w	r7, lr, r7
 801b080:	fb02 770c 	mla	r7, r2, ip, r7
 801b084:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b088:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b08a:	fb00 770c 	mla	r7, r0, ip, r7
 801b08e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b092:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b094:	fb08 770c 	mla	r7, r8, ip, r7
 801b098:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b09c:	fb0e fe0c 	mul.w	lr, lr, ip
 801b0a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b0a4:	fb02 e303 	mla	r3, r2, r3, lr
 801b0a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b0aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b0ac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b0b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0b2:	fb00 330a 	mla	r3, r0, sl, r3
 801b0b6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b0ba:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b0be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b0c0:	f8b9 0000 	ldrh.w	r0, [r9]
 801b0c4:	4359      	muls	r1, r3
 801b0c6:	0a3f      	lsrs	r7, r7, #8
 801b0c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b0d0:	1c4b      	adds	r3, r1, #1
 801b0d2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b0d6:	ea47 070c 	orr.w	r7, r7, ip
 801b0da:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b0de:	1202      	asrs	r2, r0, #8
 801b0e0:	0c3b      	lsrs	r3, r7, #16
 801b0e2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b0e6:	b2c9      	uxtb	r1, r1
 801b0e8:	fb13 f305 	smulbb	r3, r3, r5
 801b0ec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b0f0:	fb02 3201 	mla	r2, r2, r1, r3
 801b0f4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b0f8:	10c3      	asrs	r3, r0, #3
 801b0fa:	b2ff      	uxtb	r7, r7
 801b0fc:	00c0      	lsls	r0, r0, #3
 801b0fe:	b2c0      	uxtb	r0, r0
 801b100:	fb17 f705 	smulbb	r7, r7, r5
 801b104:	fb00 7001 	mla	r0, r0, r1, r7
 801b108:	b292      	uxth	r2, r2
 801b10a:	fb1c fc05 	smulbb	ip, ip, r5
 801b10e:	b280      	uxth	r0, r0
 801b110:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b114:	fb03 c301 	mla	r3, r3, r1, ip
 801b118:	1c51      	adds	r1, r2, #1
 801b11a:	f100 0c01 	add.w	ip, r0, #1
 801b11e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b122:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b126:	b29b      	uxth	r3, r3
 801b128:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b12c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b130:	ea4c 0202 	orr.w	r2, ip, r2
 801b134:	f103 0c01 	add.w	ip, r3, #1
 801b138:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b13c:	095b      	lsrs	r3, r3, #5
 801b13e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b142:	431a      	orrs	r2, r3
 801b144:	f8a9 2000 	strh.w	r2, [r9]
 801b148:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b14a:	441c      	add	r4, r3
 801b14c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b14e:	f109 0902 	add.w	r9, r9, #2
 801b152:	441e      	add	r6, r3
 801b154:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b158:	e647      	b.n	801adea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801b15a:	2800      	cmp	r0, #0
 801b15c:	f43f aedf 	beq.w	801af1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b160:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b164:	9109      	str	r1, [sp, #36]	; 0x24
 801b166:	0e09      	lsrs	r1, r1, #24
 801b168:	9112      	str	r1, [sp, #72]	; 0x48
 801b16a:	e6d8      	b.n	801af1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b16c:	b01d      	add	sp, #116	; 0x74
 801b16e:	ecbd 8b08 	vpop	{d8-d11}
 801b172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b178 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b178:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b17c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801b180:	fb04 5603 	mla	r6, r4, r3, r5
 801b184:	2c00      	cmp	r4, #0
 801b186:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b18a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b18e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801b192:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801b196:	db37      	blt.n	801b208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801b198:	45a6      	cmp	lr, r4
 801b19a:	dd35      	ble.n	801b208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801b19c:	2d00      	cmp	r5, #0
 801b19e:	db31      	blt.n	801b204 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b1a0:	42ab      	cmp	r3, r5
 801b1a2:	dd2f      	ble.n	801b204 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b1a4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801b1a8:	1c6e      	adds	r6, r5, #1
 801b1aa:	d430      	bmi.n	801b20e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801b1ac:	42b3      	cmp	r3, r6
 801b1ae:	dd2e      	ble.n	801b20e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801b1b0:	b378      	cbz	r0, 801b212 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801b1b2:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b1b6:	3401      	adds	r4, #1
 801b1b8:	d42f      	bmi.n	801b21a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801b1ba:	45a6      	cmp	lr, r4
 801b1bc:	dd2d      	ble.n	801b21a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801b1be:	b37f      	cbz	r7, 801b220 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801b1c0:	2d00      	cmp	r5, #0
 801b1c2:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801b1c6:	db26      	blt.n	801b216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801b1c8:	42ab      	cmp	r3, r5
 801b1ca:	dd24      	ble.n	801b216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801b1cc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b1d0:	3501      	adds	r5, #1
 801b1d2:	d428      	bmi.n	801b226 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801b1d4:	42ab      	cmp	r3, r5
 801b1d6:	dd26      	ble.n	801b226 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801b1d8:	b338      	cbz	r0, 801b22a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801b1da:	f8de 3004 	ldr.w	r3, [lr, #4]
 801b1de:	280f      	cmp	r0, #15
 801b1e0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b1e4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b1e8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b1ec:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b1f0:	d801      	bhi.n	801b1f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801b1f2:	2f0f      	cmp	r7, #15
 801b1f4:	d91b      	bls.n	801b22e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801b1f6:	4b87      	ldr	r3, [pc, #540]	; (801b414 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801b1f8:	4a87      	ldr	r2, [pc, #540]	; (801b418 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801b1fa:	4888      	ldr	r0, [pc, #544]	; (801b41c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801b1fc:	f240 11f9 	movw	r1, #505	; 0x1f9
 801b200:	f001 fd5c 	bl	801ccbc <__assert_func>
 801b204:	2200      	movs	r2, #0
 801b206:	e7cf      	b.n	801b1a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801b208:	2600      	movs	r6, #0
 801b20a:	4632      	mov	r2, r6
 801b20c:	e7d3      	b.n	801b1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b20e:	2600      	movs	r6, #0
 801b210:	e7d1      	b.n	801b1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b212:	4606      	mov	r6, r0
 801b214:	e7cf      	b.n	801b1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801b216:	2400      	movs	r4, #0
 801b218:	e7da      	b.n	801b1d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801b21a:	2300      	movs	r3, #0
 801b21c:	461c      	mov	r4, r3
 801b21e:	e7de      	b.n	801b1de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b220:	463b      	mov	r3, r7
 801b222:	463c      	mov	r4, r7
 801b224:	e7db      	b.n	801b1de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b226:	2300      	movs	r3, #0
 801b228:	e7d9      	b.n	801b1de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b22a:	4603      	mov	r3, r0
 801b22c:	e7d7      	b.n	801b1de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801b22e:	b280      	uxth	r0, r0
 801b230:	b2bf      	uxth	r7, r7
 801b232:	fb07 fe00 	mul.w	lr, r7, r0
 801b236:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b23a:	0100      	lsls	r0, r0, #4
 801b23c:	eba0 0c0e 	sub.w	ip, r0, lr
 801b240:	b2bf      	uxth	r7, r7
 801b242:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b246:	fa1f fc8c 	uxth.w	ip, ip
 801b24a:	1bed      	subs	r5, r5, r7
 801b24c:	b2ad      	uxth	r5, r5
 801b24e:	fb0c f00a 	mul.w	r0, ip, sl
 801b252:	fb0b 0005 	mla	r0, fp, r5, r0
 801b256:	fb07 0009 	mla	r0, r7, r9, r0
 801b25a:	fb0e 0008 	mla	r0, lr, r8, r0
 801b25e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b262:	9001      	str	r0, [sp, #4]
 801b264:	2800      	cmp	r0, #0
 801b266:	f000 80d1 	beq.w	801b40c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801b26a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b26e:	d018      	beq.n	801b2a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801b270:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b274:	fb0b f000 	mul.w	r0, fp, r0
 801b278:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b27c:	fb0b fb02 	mul.w	fp, fp, r2
 801b280:	0a02      	lsrs	r2, r0, #8
 801b282:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b286:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b28a:	4402      	add	r2, r0
 801b28c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b290:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b294:	0a12      	lsrs	r2, r2, #8
 801b296:	0a00      	lsrs	r0, r0, #8
 801b298:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b29c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b2a0:	4302      	orrs	r2, r0
 801b2a2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b2a6:	d01a      	beq.n	801b2de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801b2a8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b2ac:	fb0a f000 	mul.w	r0, sl, r0
 801b2b0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b2b4:	fb0a fa06 	mul.w	sl, sl, r6
 801b2b8:	0a06      	lsrs	r6, r0, #8
 801b2ba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b2be:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b2c2:	4406      	add	r6, r0
 801b2c4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b2c8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801b2cc:	0a36      	lsrs	r6, r6, #8
 801b2ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2d2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b2d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2da:	ea46 060a 	orr.w	r6, r6, sl
 801b2de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b2e2:	d01b      	beq.n	801b31c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801b2e4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b2e8:	fb09 fa0a 	mul.w	sl, r9, sl
 801b2ec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b2f0:	fb09 f004 	mul.w	r0, r9, r4
 801b2f4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b2f8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b2fc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b300:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801b304:	4454      	add	r4, sl
 801b306:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801b30a:	0a24      	lsrs	r4, r4, #8
 801b30c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b310:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b314:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b318:	ea44 0409 	orr.w	r4, r4, r9
 801b31c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b320:	d01b      	beq.n	801b35a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801b322:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b326:	fb08 f909 	mul.w	r9, r8, r9
 801b32a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b32e:	fb08 f003 	mul.w	r0, r8, r3
 801b332:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b336:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b33a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b33e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801b342:	444b      	add	r3, r9
 801b344:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801b348:	0a1b      	lsrs	r3, r3, #8
 801b34a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b34e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b352:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b356:	ea43 0308 	orr.w	r3, r3, r8
 801b35a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801b35e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b362:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801b366:	fb0c f808 	mul.w	r8, ip, r8
 801b36a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b36e:	fb0c f606 	mul.w	r6, ip, r6
 801b372:	fb05 8909 	mla	r9, r5, r9, r8
 801b376:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801b37a:	fb05 6502 	mla	r5, r5, r2, r6
 801b37e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b382:	fb07 9908 	mla	r9, r7, r8, r9
 801b386:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801b38a:	fb07 5704 	mla	r7, r7, r4, r5
 801b38e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b392:	8808      	ldrh	r0, [r1, #0]
 801b394:	fb0e 9808 	mla	r8, lr, r8, r9
 801b398:	fb0e 7e03 	mla	lr, lr, r3, r7
 801b39c:	9b01      	ldr	r3, [sp, #4]
 801b39e:	43da      	mvns	r2, r3
 801b3a0:	1203      	asrs	r3, r0, #8
 801b3a2:	b2d2      	uxtb	r2, r2
 801b3a4:	10c4      	asrs	r4, r0, #3
 801b3a6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b3aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b3ae:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b3b2:	00c0      	lsls	r0, r0, #3
 801b3b4:	4353      	muls	r3, r2
 801b3b6:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801b3ba:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b3be:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801b3c2:	b2c0      	uxtb	r0, r0
 801b3c4:	ea48 0e0e 	orr.w	lr, r8, lr
 801b3c8:	4354      	muls	r4, r2
 801b3ca:	4350      	muls	r0, r2
 801b3cc:	1c5a      	adds	r2, r3, #1
 801b3ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b3d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801b3d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b3da:	1c62      	adds	r2, r4, #1
 801b3dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b3e0:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801b3e4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b3e8:	021b      	lsls	r3, r3, #8
 801b3ea:	00d2      	lsls	r2, r2, #3
 801b3ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b3f4:	4313      	orrs	r3, r2
 801b3f6:	1c42      	adds	r2, r0, #1
 801b3f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b3fc:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801b400:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801b404:	ea4e 0e03 	orr.w	lr, lr, r3
 801b408:	f8a1 e000 	strh.w	lr, [r1]
 801b40c:	b003      	add	sp, #12
 801b40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b412:	bf00      	nop
 801b414:	08021447 	.word	0x08021447
 801b418:	08021976 	.word	0x08021976
 801b41c:	08021414 	.word	0x08021414

0801b420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b424:	ed2d 8b08 	vpush	{d8-d11}
 801b428:	b09b      	sub	sp, #108	; 0x6c
 801b42a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801b42e:	9218      	str	r2, [sp, #96]	; 0x60
 801b430:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801b432:	9116      	str	r1, [sp, #88]	; 0x58
 801b434:	9307      	str	r3, [sp, #28]
 801b436:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801b43a:	9019      	str	r0, [sp, #100]	; 0x64
 801b43c:	6850      	ldr	r0, [r2, #4]
 801b43e:	6812      	ldr	r2, [r2, #0]
 801b440:	fb00 1303 	mla	r3, r0, r3, r1
 801b444:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b448:	930a      	str	r3, [sp, #40]	; 0x28
 801b44a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b44c:	681b      	ldr	r3, [r3, #0]
 801b44e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b450:	eeb0 aa40 	vmov.f32	s20, s0
 801b454:	eef0 9a60 	vmov.f32	s19, s1
 801b458:	eeb0 9a41 	vmov.f32	s18, s2
 801b45c:	eeb0 8a62 	vmov.f32	s16, s5
 801b460:	eef0 8a43 	vmov.f32	s17, s6
 801b464:	eef0 ba44 	vmov.f32	s23, s8
 801b468:	eeb0 ba64 	vmov.f32	s22, s9
 801b46c:	eef0 aa45 	vmov.f32	s21, s10
 801b470:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b472:	2b00      	cmp	r3, #0
 801b474:	dc03      	bgt.n	801b47e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b476:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b478:	2b00      	cmp	r3, #0
 801b47a:	f340 8386 	ble.w	801bb8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801b47e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b480:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b484:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b488:	1e48      	subs	r0, r1, #1
 801b48a:	1e57      	subs	r7, r2, #1
 801b48c:	9b07      	ldr	r3, [sp, #28]
 801b48e:	2b00      	cmp	r3, #0
 801b490:	f340 8166 	ble.w	801b760 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801b494:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b498:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b49c:	d406      	bmi.n	801b4ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b49e:	4584      	cmp	ip, r0
 801b4a0:	da04      	bge.n	801b4ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b4a2:	2b00      	cmp	r3, #0
 801b4a4:	db02      	blt.n	801b4ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b4a6:	42bb      	cmp	r3, r7
 801b4a8:	f2c0 815b 	blt.w	801b762 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b4ac:	f11c 0c01 	adds.w	ip, ip, #1
 801b4b0:	f100 814b 	bmi.w	801b74a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b4b4:	4561      	cmp	r1, ip
 801b4b6:	f2c0 8148 	blt.w	801b74a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b4ba:	3301      	adds	r3, #1
 801b4bc:	f100 8145 	bmi.w	801b74a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b4c0:	429a      	cmp	r2, r3
 801b4c2:	f2c0 8142 	blt.w	801b74a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801b4c6:	9b07      	ldr	r3, [sp, #28]
 801b4c8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b4ca:	9317      	str	r3, [sp, #92]	; 0x5c
 801b4cc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b4ce:	2b00      	cmp	r3, #0
 801b4d0:	f340 8165 	ble.w	801b79e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801b4d4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801b4d6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b4d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b4dc:	689b      	ldr	r3, [r3, #8]
 801b4de:	1422      	asrs	r2, r4, #16
 801b4e0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b4e4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b4e8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b4ec:	f100 81d5 	bmi.w	801b89a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b4f0:	f103 38ff 	add.w	r8, r3, #4294967295
 801b4f4:	4542      	cmp	r2, r8
 801b4f6:	f280 81d0 	bge.w	801b89a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b4fa:	f1bc 0f00 	cmp.w	ip, #0
 801b4fe:	f2c0 81cc 	blt.w	801b89a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b502:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b506:	45c4      	cmp	ip, r8
 801b508:	f280 81c7 	bge.w	801b89a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b50c:	b21b      	sxth	r3, r3
 801b50e:	fb0c 2203 	mla	r2, ip, r3, r2
 801b512:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b514:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b518:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b51c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b520:	2900      	cmp	r1, #0
 801b522:	f000 8182 	beq.w	801b82a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801b526:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b52a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b52c:	0e2d      	lsrs	r5, r5, #24
 801b52e:	9512      	str	r5, [sp, #72]	; 0x48
 801b530:	b180      	cbz	r0, 801b554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b532:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b536:	3b01      	subs	r3, #1
 801b538:	009b      	lsls	r3, r3, #2
 801b53a:	3304      	adds	r3, #4
 801b53c:	eb08 0c03 	add.w	ip, r8, r3
 801b540:	f858 3003 	ldr.w	r3, [r8, r3]
 801b544:	9308      	str	r3, [sp, #32]
 801b546:	0e1b      	lsrs	r3, r3, #24
 801b548:	9310      	str	r3, [sp, #64]	; 0x40
 801b54a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b54e:	930c      	str	r3, [sp, #48]	; 0x30
 801b550:	0e1b      	lsrs	r3, r3, #24
 801b552:	9313      	str	r3, [sp, #76]	; 0x4c
 801b554:	b289      	uxth	r1, r1
 801b556:	b280      	uxth	r0, r0
 801b558:	fb01 f900 	mul.w	r9, r1, r0
 801b55c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b560:	0109      	lsls	r1, r1, #4
 801b562:	eba1 0809 	sub.w	r8, r1, r9
 801b566:	b280      	uxth	r0, r0
 801b568:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b56c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b56e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b570:	fa1f f888 	uxth.w	r8, r8
 801b574:	1a09      	subs	r1, r1, r0
 801b576:	b289      	uxth	r1, r1
 801b578:	fb08 f303 	mul.w	r3, r8, r3
 801b57c:	fb01 330e 	mla	r3, r1, lr, r3
 801b580:	fb00 3305 	mla	r3, r0, r5, r3
 801b584:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b586:	fb09 3305 	mla	r3, r9, r5, r3
 801b58a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b58e:	2b00      	cmp	r3, #0
 801b590:	f000 80d2 	beq.w	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b594:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b598:	d01b      	beq.n	801b5d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801b59a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b59e:	fb0e fa0a 	mul.w	sl, lr, sl
 801b5a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b5a6:	fb0e fe02 	mul.w	lr, lr, r2
 801b5aa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b5ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b5b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b5b6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b5ba:	4452      	add	r2, sl
 801b5bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b5c0:	0a12      	lsrs	r2, r2, #8
 801b5c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b5ca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b5ce:	ea42 020c 	orr.w	r2, r2, ip
 801b5d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5d4:	2dff      	cmp	r5, #255	; 0xff
 801b5d6:	d021      	beq.n	801b61c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b5d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b5da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b5de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5e0:	fb05 fb0b 	mul.w	fp, r5, fp
 801b5e4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b5e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b5ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b5f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b5fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b600:	44de      	add	lr, fp
 801b602:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b606:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b60a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b60e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b612:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b616:	ea4e 050a 	orr.w	r5, lr, sl
 801b61a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b61c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b61e:	2dff      	cmp	r5, #255	; 0xff
 801b620:	d021      	beq.n	801b666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b622:	9d08      	ldr	r5, [sp, #32]
 801b624:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b628:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b62a:	fb05 fb0b 	mul.w	fp, r5, fp
 801b62e:	9d08      	ldr	r5, [sp, #32]
 801b630:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b634:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b636:	fb05 fa0e 	mul.w	sl, r5, lr
 801b63a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b63e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b642:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b646:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b64a:	44de      	add	lr, fp
 801b64c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b650:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b654:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b658:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b65c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b660:	ea4e 050a 	orr.w	r5, lr, sl
 801b664:	9508      	str	r5, [sp, #32]
 801b666:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b668:	2dff      	cmp	r5, #255	; 0xff
 801b66a:	d021      	beq.n	801b6b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b66c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b66e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b672:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b674:	fb05 fb0b 	mul.w	fp, r5, fp
 801b678:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b67a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b67e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b680:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b684:	fb05 fa0a 	mul.w	sl, r5, sl
 801b688:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b68c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b690:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b694:	44de      	add	lr, fp
 801b696:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b69a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b69e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b6a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b6aa:	ea4e 050a 	orr.w	r5, lr, sl
 801b6ae:	950c      	str	r5, [sp, #48]	; 0x30
 801b6b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b6b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b6b6:	9d08      	ldr	r5, [sp, #32]
 801b6b8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b6bc:	fb08 fc0c 	mul.w	ip, r8, ip
 801b6c0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b6c4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b6c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b6ca:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b6ce:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b6d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b6d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b6d8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b6dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b6e0:	fb08 f80e 	mul.w	r8, r8, lr
 801b6e4:	fb01 8202 	mla	r2, r1, r2, r8
 801b6e8:	9908      	ldr	r1, [sp, #32]
 801b6ea:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b6ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b6f0:	fb00 220a 	mla	r2, r0, sl, r2
 801b6f4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801b6f8:	fb09 2900 	mla	r9, r9, r0, r2
 801b6fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b700:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b704:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b708:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b70c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b710:	2bff      	cmp	r3, #255	; 0xff
 801b712:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b716:	f040 8091 	bne.w	801b83c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801b71a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801b71e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801b722:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b726:	f022 0207 	bic.w	r2, r2, #7
 801b72a:	431a      	orrs	r2, r3
 801b72c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b730:	ea4c 0c02 	orr.w	ip, ip, r2
 801b734:	f8a7 c000 	strh.w	ip, [r7]
 801b738:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b73a:	441c      	add	r4, r3
 801b73c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b73e:	441e      	add	r6, r3
 801b740:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b742:	3b01      	subs	r3, #1
 801b744:	3702      	adds	r7, #2
 801b746:	9317      	str	r3, [sp, #92]	; 0x5c
 801b748:	e6c0      	b.n	801b4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801b74a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b74c:	441c      	add	r4, r3
 801b74e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b750:	441e      	add	r6, r3
 801b752:	9b07      	ldr	r3, [sp, #28]
 801b754:	3b01      	subs	r3, #1
 801b756:	9307      	str	r3, [sp, #28]
 801b758:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b75a:	3302      	adds	r3, #2
 801b75c:	930a      	str	r3, [sp, #40]	; 0x28
 801b75e:	e695      	b.n	801b48c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b760:	d024      	beq.n	801b7ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b762:	9b07      	ldr	r3, [sp, #28]
 801b764:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801b766:	3b01      	subs	r3, #1
 801b768:	fb00 4003 	mla	r0, r0, r3, r4
 801b76c:	1400      	asrs	r0, r0, #16
 801b76e:	f53f aeaa 	bmi.w	801b4c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b772:	3901      	subs	r1, #1
 801b774:	4288      	cmp	r0, r1
 801b776:	f6bf aea6 	bge.w	801b4c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b77a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801b77c:	fb01 6303 	mla	r3, r1, r3, r6
 801b780:	141b      	asrs	r3, r3, #16
 801b782:	f53f aea0 	bmi.w	801b4c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b786:	3a01      	subs	r2, #1
 801b788:	4293      	cmp	r3, r2
 801b78a:	f6bf ae9c 	bge.w	801b4c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b78e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b792:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801b796:	f1bb 0f00 	cmp.w	fp, #0
 801b79a:	f300 809a 	bgt.w	801b8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801b79e:	9b07      	ldr	r3, [sp, #28]
 801b7a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b7a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7a6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b7aa:	930a      	str	r3, [sp, #40]	; 0x28
 801b7ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b7ae:	2b00      	cmp	r3, #0
 801b7b0:	f340 81eb 	ble.w	801bb8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801b7b4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b7b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b7bc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b7c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b7c2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b7c6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b7ca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b7ce:	eef0 6a48 	vmov.f32	s13, s16
 801b7d2:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b7d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7da:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b7de:	ee16 4a90 	vmov	r4, s13
 801b7e2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b7e6:	eef0 6a68 	vmov.f32	s13, s17
 801b7ea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b7ee:	ee18 2a10 	vmov	r2, s16
 801b7f2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b7f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7fa:	ee18 2a90 	vmov	r2, s17
 801b7fe:	932f      	str	r3, [sp, #188]	; 0xbc
 801b800:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b802:	fb92 f3f3 	sdiv	r3, r2, r3
 801b806:	9330      	str	r3, [sp, #192]	; 0xc0
 801b808:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b80a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b80c:	3b01      	subs	r3, #1
 801b80e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b812:	9316      	str	r3, [sp, #88]	; 0x58
 801b814:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b816:	bf08      	it	eq
 801b818:	4613      	moveq	r3, r2
 801b81a:	ee16 6a90 	vmov	r6, s13
 801b81e:	9307      	str	r3, [sp, #28]
 801b820:	eef0 8a67 	vmov.f32	s17, s15
 801b824:	eeb0 8a47 	vmov.f32	s16, s14
 801b828:	e622      	b.n	801b470 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b82a:	2800      	cmp	r0, #0
 801b82c:	f43f ae92 	beq.w	801b554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b830:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b834:	9308      	str	r3, [sp, #32]
 801b836:	0e1b      	lsrs	r3, r3, #24
 801b838:	9310      	str	r3, [sp, #64]	; 0x40
 801b83a:	e68b      	b.n	801b554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b83c:	8839      	ldrh	r1, [r7, #0]
 801b83e:	4dd5      	ldr	r5, [pc, #852]	; (801bb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801b840:	43db      	mvns	r3, r3
 801b842:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801b846:	fa5f f883 	uxtb.w	r8, r3
 801b84a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b84e:	fb0e fe08 	mul.w	lr, lr, r8
 801b852:	10c8      	asrs	r0, r1, #3
 801b854:	00cb      	lsls	r3, r1, #3
 801b856:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b85a:	f10e 0101 	add.w	r1, lr, #1
 801b85e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801b862:	fb00 f008 	mul.w	r0, r0, r8
 801b866:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801b86a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b86e:	f100 0e01 	add.w	lr, r0, #1
 801b872:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b876:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b87a:	b2db      	uxtb	r3, r3
 801b87c:	b2c9      	uxtb	r1, r1
 801b87e:	00d2      	lsls	r2, r2, #3
 801b880:	fb03 f308 	mul.w	r3, r3, r8
 801b884:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801b888:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b88c:	430a      	orrs	r2, r1
 801b88e:	1c59      	adds	r1, r3, #1
 801b890:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b894:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b898:	e748      	b.n	801b72c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b89a:	f112 0801 	adds.w	r8, r2, #1
 801b89e:	f53f af4b 	bmi.w	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b8a2:	4543      	cmp	r3, r8
 801b8a4:	f6ff af48 	blt.w	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b8a8:	f11c 0801 	adds.w	r8, ip, #1
 801b8ac:	f53f af44 	bmi.w	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b8b0:	45c6      	cmp	lr, r8
 801b8b2:	f6ff af41 	blt.w	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b8b6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b8ba:	fa0f f28e 	sxth.w	r2, lr
 801b8be:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801b8c2:	9200      	str	r2, [sp, #0]
 801b8c4:	b21b      	sxth	r3, r3
 801b8c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b8c8:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b8ca:	4639      	mov	r1, r7
 801b8cc:	f7ff fc54 	bl	801b178 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801b8d0:	e732      	b.n	801b738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b8d2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b8d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b8d6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801b8da:	1421      	asrs	r1, r4, #16
 801b8dc:	1433      	asrs	r3, r6, #16
 801b8de:	fb07 1303 	mla	r3, r7, r3, r1
 801b8e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b8e4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801b8e8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b8ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b8f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b8f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8f8:	2a00      	cmp	r2, #0
 801b8fa:	f000 8107 	beq.w	801bb0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801b8fe:	684d      	ldr	r5, [r1, #4]
 801b900:	950d      	str	r5, [sp, #52]	; 0x34
 801b902:	0e2d      	lsrs	r5, r5, #24
 801b904:	9514      	str	r5, [sp, #80]	; 0x50
 801b906:	b178      	cbz	r0, 801b928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801b908:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801b90c:	3f01      	subs	r7, #1
 801b90e:	00bf      	lsls	r7, r7, #2
 801b910:	3704      	adds	r7, #4
 801b912:	eb01 0e07 	add.w	lr, r1, r7
 801b916:	59c9      	ldr	r1, [r1, r7]
 801b918:	9109      	str	r1, [sp, #36]	; 0x24
 801b91a:	0e09      	lsrs	r1, r1, #24
 801b91c:	9111      	str	r1, [sp, #68]	; 0x44
 801b91e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b922:	910e      	str	r1, [sp, #56]	; 0x38
 801b924:	0e09      	lsrs	r1, r1, #24
 801b926:	9115      	str	r1, [sp, #84]	; 0x54
 801b928:	b292      	uxth	r2, r2
 801b92a:	b280      	uxth	r0, r0
 801b92c:	fb02 f900 	mul.w	r9, r2, r0
 801b930:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b934:	0112      	lsls	r2, r2, #4
 801b936:	eba2 0e09 	sub.w	lr, r2, r9
 801b93a:	b280      	uxth	r0, r0
 801b93c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b940:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b942:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b944:	fa1f fe8e 	uxth.w	lr, lr
 801b948:	1a09      	subs	r1, r1, r0
 801b94a:	b289      	uxth	r1, r1
 801b94c:	fb0e f202 	mul.w	r2, lr, r2
 801b950:	fb01 220c 	mla	r2, r1, ip, r2
 801b954:	fb00 2205 	mla	r2, r0, r5, r2
 801b958:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b95a:	fb09 2205 	mla	r2, r9, r5, r2
 801b95e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b962:	2a00      	cmp	r2, #0
 801b964:	f000 80c9 	beq.w	801bafa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801b968:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b96c:	d019      	beq.n	801b9a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801b96e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b972:	fb0c fa0a 	mul.w	sl, ip, sl
 801b976:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b97a:	fb0c fc03 	mul.w	ip, ip, r3
 801b97e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b982:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b986:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b98a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b98e:	4453      	add	r3, sl
 801b990:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b994:	0a1b      	lsrs	r3, r3, #8
 801b996:	0a3f      	lsrs	r7, r7, #8
 801b998:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b99c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b9a0:	433b      	orrs	r3, r7
 801b9a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9a4:	2dff      	cmp	r5, #255	; 0xff
 801b9a6:	d020      	beq.n	801b9ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801b9a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b9aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b9ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9b0:	436f      	muls	r7, r5
 801b9b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b9b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b9b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9be:	fb05 fa0a 	mul.w	sl, r5, sl
 801b9c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b9c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9ca:	44bc      	add	ip, r7
 801b9cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b9d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9e4:	ea4c 050a 	orr.w	r5, ip, sl
 801b9e8:	950d      	str	r5, [sp, #52]	; 0x34
 801b9ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9ec:	2dff      	cmp	r5, #255	; 0xff
 801b9ee:	d020      	beq.n	801ba32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801b9f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b9f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b9f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9f8:	436f      	muls	r7, r5
 801b9fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b9fc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ba00:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ba02:	fb05 fa0c 	mul.w	sl, r5, ip
 801ba06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba12:	44bc      	add	ip, r7
 801ba14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba2c:	ea4c 050a 	orr.w	r5, ip, sl
 801ba30:	9509      	str	r5, [sp, #36]	; 0x24
 801ba32:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ba34:	2dff      	cmp	r5, #255	; 0xff
 801ba36:	d020      	beq.n	801ba7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801ba38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ba3a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ba3e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ba40:	436f      	muls	r7, r5
 801ba42:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ba44:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ba48:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ba4a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba4e:	fb05 fa0a 	mul.w	sl, r5, sl
 801ba52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba5a:	44bc      	add	ip, r7
 801ba5c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba74:	ea4c 050a 	orr.w	r5, ip, sl
 801ba78:	950e      	str	r5, [sp, #56]	; 0x38
 801ba7a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ba80:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ba82:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ba86:	fb0e f707 	mul.w	r7, lr, r7
 801ba8a:	fb01 770c 	mla	r7, r1, ip, r7
 801ba8e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba92:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ba94:	fb00 770c 	mla	r7, r0, ip, r7
 801ba98:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba9e:	fb09 770c 	mla	r7, r9, ip, r7
 801baa2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801baa6:	fb0e fe0c 	mul.w	lr, lr, ip
 801baaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801baae:	fb01 e303 	mla	r3, r1, r3, lr
 801bab2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bab4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bab8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801baba:	fb00 330a 	mla	r3, r0, sl, r3
 801babe:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bac2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bac6:	0a3f      	lsrs	r7, r7, #8
 801bac8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bacc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bad0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bad4:	ea47 070c 	orr.w	r7, r7, ip
 801bad8:	2aff      	cmp	r2, #255	; 0xff
 801bada:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801bade:	d11e      	bne.n	801bb1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801bae0:	097a      	lsrs	r2, r7, #5
 801bae2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801bae6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801baea:	f023 0307 	bic.w	r3, r3, #7
 801baee:	4313      	orrs	r3, r2
 801baf0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801baf4:	431f      	orrs	r7, r3
 801baf6:	f8a8 7000 	strh.w	r7, [r8]
 801bafa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801bafc:	441c      	add	r4, r3
 801bafe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bb00:	f108 0802 	add.w	r8, r8, #2
 801bb04:	441e      	add	r6, r3
 801bb06:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb0a:	e644      	b.n	801b796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801bb0c:	2800      	cmp	r0, #0
 801bb0e:	f43f af0b 	beq.w	801b928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801bb12:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bb16:	9109      	str	r1, [sp, #36]	; 0x24
 801bb18:	0e09      	lsrs	r1, r1, #24
 801bb1a:	9111      	str	r1, [sp, #68]	; 0x44
 801bb1c:	e704      	b.n	801b928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801bb1e:	f8b8 1000 	ldrh.w	r1, [r8]
 801bb22:	43d2      	mvns	r2, r2
 801bb24:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801bb28:	fa5f fe82 	uxtb.w	lr, r2
 801bb2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb30:	fb0c fc0e 	mul.w	ip, ip, lr
 801bb34:	10c8      	asrs	r0, r1, #3
 801bb36:	00ca      	lsls	r2, r1, #3
 801bb38:	f10c 0101 	add.w	r1, ip, #1
 801bb3c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801bb40:	0c39      	lsrs	r1, r7, #16
 801bb42:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801bb46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bb4a:	4912      	ldr	r1, [pc, #72]	; (801bb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801bb4c:	fb00 f00e 	mul.w	r0, r0, lr
 801bb50:	fa5f fc8c 	uxtb.w	ip, ip
 801bb54:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801bb58:	b2d2      	uxtb	r2, r2
 801bb5a:	1c41      	adds	r1, r0, #1
 801bb5c:	fb02 f20e 	mul.w	r2, r2, lr
 801bb60:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bb64:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bb68:	1c51      	adds	r1, r2, #1
 801bb6a:	00c0      	lsls	r0, r0, #3
 801bb6c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bb70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb74:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bb78:	ea4c 0c00 	orr.w	ip, ip, r0
 801bb7c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bb80:	ea47 0c0c 	orr.w	ip, r7, ip
 801bb84:	f8a8 c000 	strh.w	ip, [r8]
 801bb88:	e7b7      	b.n	801bafa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801bb8a:	b01b      	add	sp, #108	; 0x6c
 801bb8c:	ecbd 8b08 	vpop	{d8-d11}
 801bb90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb94:	fffff800 	.word	0xfffff800

0801bb98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801bb98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bb9c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801bba0:	2c00      	cmp	r4, #0
 801bba2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801bba6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801bbaa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801bbae:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801bbb2:	fb04 ce03 	mla	lr, r4, r3, ip
 801bbb6:	db60      	blt.n	801bc7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801bbb8:	45a1      	cmp	r9, r4
 801bbba:	dd5e      	ble.n	801bc7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801bbbc:	f1bc 0f00 	cmp.w	ip, #0
 801bbc0:	db59      	blt.n	801bc76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801bbc2:	45e0      	cmp	r8, ip
 801bbc4:	dd57      	ble.n	801bc76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801bbc6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801bbca:	f01e 0f01 	tst.w	lr, #1
 801bbce:	5c16      	ldrb	r6, [r2, r0]
 801bbd0:	bf0c      	ite	eq
 801bbd2:	f006 060f 	andeq.w	r6, r6, #15
 801bbd6:	1136      	asrne	r6, r6, #4
 801bbd8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801bbdc:	b2f6      	uxtb	r6, r6
 801bbde:	f11c 0001 	adds.w	r0, ip, #1
 801bbe2:	d44d      	bmi.n	801bc80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801bbe4:	4580      	cmp	r8, r0
 801bbe6:	dd4b      	ble.n	801bc80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801bbe8:	2d00      	cmp	r5, #0
 801bbea:	d04b      	beq.n	801bc84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801bbec:	f10e 0a01 	add.w	sl, lr, #1
 801bbf0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801bbf4:	f01a 0f01 	tst.w	sl, #1
 801bbf8:	5c10      	ldrb	r0, [r2, r0]
 801bbfa:	bf0c      	ite	eq
 801bbfc:	f000 000f 	andeq.w	r0, r0, #15
 801bc00:	1100      	asrne	r0, r0, #4
 801bc02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bc06:	b2c0      	uxtb	r0, r0
 801bc08:	3401      	adds	r4, #1
 801bc0a:	d43f      	bmi.n	801bc8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801bc0c:	45a1      	cmp	r9, r4
 801bc0e:	dd3d      	ble.n	801bc8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801bc10:	2f00      	cmp	r7, #0
 801bc12:	f000 80a8 	beq.w	801bd66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801bc16:	f1bc 0f00 	cmp.w	ip, #0
 801bc1a:	db35      	blt.n	801bc88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801bc1c:	45e0      	cmp	r8, ip
 801bc1e:	dd33      	ble.n	801bc88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801bc20:	eb03 090e 	add.w	r9, r3, lr
 801bc24:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801bc28:	f019 0f01 	tst.w	r9, #1
 801bc2c:	5d14      	ldrb	r4, [r2, r4]
 801bc2e:	bf0c      	ite	eq
 801bc30:	f004 040f 	andeq.w	r4, r4, #15
 801bc34:	1124      	asrne	r4, r4, #4
 801bc36:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801bc3a:	b2e4      	uxtb	r4, r4
 801bc3c:	f11c 0c01 	adds.w	ip, ip, #1
 801bc40:	d427      	bmi.n	801bc92 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801bc42:	45e0      	cmp	r8, ip
 801bc44:	dd25      	ble.n	801bc92 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801bc46:	b335      	cbz	r5, 801bc96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801bc48:	3301      	adds	r3, #1
 801bc4a:	449e      	add	lr, r3
 801bc4c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801bc50:	f01e 0f01 	tst.w	lr, #1
 801bc54:	5cd2      	ldrb	r2, [r2, r3]
 801bc56:	bf0c      	ite	eq
 801bc58:	f002 020f 	andeq.w	r2, r2, #15
 801bc5c:	1112      	asrne	r2, r2, #4
 801bc5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc62:	b2d3      	uxtb	r3, r2
 801bc64:	2d0f      	cmp	r5, #15
 801bc66:	d917      	bls.n	801bc98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801bc68:	4b42      	ldr	r3, [pc, #264]	; (801bd74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801bc6a:	4a43      	ldr	r2, [pc, #268]	; (801bd78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801bc6c:	4843      	ldr	r0, [pc, #268]	; (801bd7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801bc6e:	f240 11f9 	movw	r1, #505	; 0x1f9
 801bc72:	f001 f823 	bl	801ccbc <__assert_func>
 801bc76:	2600      	movs	r6, #0
 801bc78:	e7b1      	b.n	801bbde <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801bc7a:	2000      	movs	r0, #0
 801bc7c:	4606      	mov	r6, r0
 801bc7e:	e7c3      	b.n	801bc08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bc80:	2000      	movs	r0, #0
 801bc82:	e7c1      	b.n	801bc08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bc84:	4628      	mov	r0, r5
 801bc86:	e7bf      	b.n	801bc08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bc88:	2400      	movs	r4, #0
 801bc8a:	e7d7      	b.n	801bc3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801bc8c:	2300      	movs	r3, #0
 801bc8e:	461c      	mov	r4, r3
 801bc90:	e7e8      	b.n	801bc64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801bc92:	2300      	movs	r3, #0
 801bc94:	e7e6      	b.n	801bc64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801bc96:	462b      	mov	r3, r5
 801bc98:	2f0f      	cmp	r7, #15
 801bc9a:	d8e5      	bhi.n	801bc68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801bc9c:	b2ad      	uxth	r5, r5
 801bc9e:	b2bf      	uxth	r7, r7
 801bca0:	fb05 fc07 	mul.w	ip, r5, r7
 801bca4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801bca8:	012d      	lsls	r5, r5, #4
 801bcaa:	b2bf      	uxth	r7, r7
 801bcac:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801bcb0:	eba5 050c 	sub.w	r5, r5, ip
 801bcb4:	1bd2      	subs	r2, r2, r7
 801bcb6:	b2ad      	uxth	r5, r5
 801bcb8:	b292      	uxth	r2, r2
 801bcba:	4368      	muls	r0, r5
 801bcbc:	fb06 0002 	mla	r0, r6, r2, r0
 801bcc0:	fb07 0404 	mla	r4, r7, r4, r0
 801bcc4:	fb0c 4303 	mla	r3, ip, r3, r4
 801bcc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bccc:	b1b3      	cbz	r3, 801bcfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801bcce:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801bcd2:	435a      	muls	r2, r3
 801bcd4:	1c53      	adds	r3, r2, #1
 801bcd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcda:	4a29      	ldr	r2, [pc, #164]	; (801bd80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801bcdc:	121b      	asrs	r3, r3, #8
 801bcde:	6812      	ldr	r2, [r2, #0]
 801bce0:	2bff      	cmp	r3, #255	; 0xff
 801bce2:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bce6:	d10b      	bne.n	801bd00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801bce8:	4b26      	ldr	r3, [pc, #152]	; (801bd84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801bcea:	0950      	lsrs	r0, r2, #5
 801bcec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bcf0:	4033      	ands	r3, r6
 801bcf2:	4318      	orrs	r0, r3
 801bcf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bcf8:	4302      	orrs	r2, r0
 801bcfa:	800a      	strh	r2, [r1, #0]
 801bcfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bd00:	880d      	ldrh	r5, [r1, #0]
 801bd02:	b29f      	uxth	r7, r3
 801bd04:	122c      	asrs	r4, r5, #8
 801bd06:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801bd0a:	43db      	mvns	r3, r3
 801bd0c:	b2db      	uxtb	r3, r3
 801bd0e:	fb10 f007 	smulbb	r0, r0, r7
 801bd12:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801bd16:	fb04 0403 	mla	r4, r4, r3, r0
 801bd1a:	b2f6      	uxtb	r6, r6
 801bd1c:	10e8      	asrs	r0, r5, #3
 801bd1e:	b2d2      	uxtb	r2, r2
 801bd20:	00ed      	lsls	r5, r5, #3
 801bd22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bd26:	fb12 f207 	smulbb	r2, r2, r7
 801bd2a:	fb16 f607 	smulbb	r6, r6, r7
 801bd2e:	b2ed      	uxtb	r5, r5
 801bd30:	b2a4      	uxth	r4, r4
 801bd32:	fb00 6603 	mla	r6, r0, r3, r6
 801bd36:	fb05 2303 	mla	r3, r5, r3, r2
 801bd3a:	b29a      	uxth	r2, r3
 801bd3c:	1c63      	adds	r3, r4, #1
 801bd3e:	b2b0      	uxth	r0, r6
 801bd40:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801bd44:	1c53      	adds	r3, r2, #1
 801bd46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd4a:	1c42      	adds	r2, r0, #1
 801bd4c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd50:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801bd54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bd58:	0940      	lsrs	r0, r0, #5
 801bd5a:	4323      	orrs	r3, r4
 801bd5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bd60:	4303      	orrs	r3, r0
 801bd62:	800b      	strh	r3, [r1, #0]
 801bd64:	e7ca      	b.n	801bcfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801bd66:	2d0f      	cmp	r5, #15
 801bd68:	f63f af7e 	bhi.w	801bc68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801bd6c:	463b      	mov	r3, r7
 801bd6e:	463c      	mov	r4, r7
 801bd70:	e794      	b.n	801bc9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801bd72:	bf00      	nop
 801bd74:	08021447 	.word	0x08021447
 801bd78:	08021976 	.word	0x08021976
 801bd7c:	08021414 	.word	0x08021414
 801bd80:	2000a814 	.word	0x2000a814
 801bd84:	00fff800 	.word	0x00fff800

0801bd88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd8c:	ed2d 8b08 	vpush	{d8-d11}
 801bd90:	b097      	sub	sp, #92	; 0x5c
 801bd92:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801bd96:	9214      	str	r2, [sp, #80]	; 0x50
 801bd98:	9309      	str	r3, [sp, #36]	; 0x24
 801bd9a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801bd9c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801bda0:	910d      	str	r1, [sp, #52]	; 0x34
 801bda2:	930f      	str	r3, [sp, #60]	; 0x3c
 801bda4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801bda8:	9015      	str	r0, [sp, #84]	; 0x54
 801bdaa:	6850      	ldr	r0, [r2, #4]
 801bdac:	6812      	ldr	r2, [r2, #0]
 801bdae:	fb00 1303 	mla	r3, r0, r3, r1
 801bdb2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bdb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bdb8:	689b      	ldr	r3, [r3, #8]
 801bdba:	3301      	adds	r3, #1
 801bdbc:	f023 0301 	bic.w	r3, r3, #1
 801bdc0:	930a      	str	r3, [sp, #40]	; 0x28
 801bdc2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bdc4:	681f      	ldr	r7, [r3, #0]
 801bdc6:	eeb0 aa40 	vmov.f32	s20, s0
 801bdca:	eef0 9a60 	vmov.f32	s19, s1
 801bdce:	eeb0 9a41 	vmov.f32	s18, s2
 801bdd2:	eeb0 8a62 	vmov.f32	s16, s5
 801bdd6:	eef0 8a43 	vmov.f32	s17, s6
 801bdda:	eef0 ba44 	vmov.f32	s23, s8
 801bdde:	eeb0 ba64 	vmov.f32	s22, s9
 801bde2:	eef0 aa45 	vmov.f32	s21, s10
 801bde6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bde8:	2b00      	cmp	r3, #0
 801bdea:	dc03      	bgt.n	801bdf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bdec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bdee:	2b00      	cmp	r3, #0
 801bdf0:	f340 8287 	ble.w	801c302 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801bdf4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bdf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bdfe:	1e48      	subs	r0, r1, #1
 801be00:	f102 3cff 	add.w	ip, r2, #4294967295
 801be04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be06:	2b00      	cmp	r3, #0
 801be08:	f340 80c4 	ble.w	801bf94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801be0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801be10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801be14:	d406      	bmi.n	801be24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801be16:	4586      	cmp	lr, r0
 801be18:	da04      	bge.n	801be24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801be1a:	2b00      	cmp	r3, #0
 801be1c:	db02      	blt.n	801be24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801be1e:	4563      	cmp	r3, ip
 801be20:	f2c0 80b9 	blt.w	801bf96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801be24:	f11e 0e01 	adds.w	lr, lr, #1
 801be28:	f100 80aa 	bmi.w	801bf80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801be2c:	4571      	cmp	r1, lr
 801be2e:	f2c0 80a7 	blt.w	801bf80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801be32:	3301      	adds	r3, #1
 801be34:	f100 80a4 	bmi.w	801bf80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801be38:	429a      	cmp	r2, r3
 801be3a:	f2c0 80a1 	blt.w	801bf80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801be3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be40:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801be44:	930e      	str	r3, [sp, #56]	; 0x38
 801be46:	46c8      	mov	r8, r9
 801be48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be4a:	2b00      	cmp	r3, #0
 801be4c:	f340 80c3 	ble.w	801bfd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801be50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801be52:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801be56:	1423      	asrs	r3, r4, #16
 801be58:	ea4f 4026 	mov.w	r0, r6, asr #16
 801be5c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801be60:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801be64:	f100 814d 	bmi.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801be68:	f10c 3bff 	add.w	fp, ip, #4294967295
 801be6c:	455b      	cmp	r3, fp
 801be6e:	f280 8148 	bge.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801be72:	2800      	cmp	r0, #0
 801be74:	f2c0 8145 	blt.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801be78:	f10e 3bff 	add.w	fp, lr, #4294967295
 801be7c:	4558      	cmp	r0, fp
 801be7e:	f280 8140 	bge.w	801c102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801be82:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801be84:	fb00 3305 	mla	r3, r0, r5, r3
 801be88:	0858      	lsrs	r0, r3, #1
 801be8a:	07dd      	lsls	r5, r3, #31
 801be8c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801be90:	bf54      	ite	pl
 801be92:	f00c 0c0f 	andpl.w	ip, ip, #15
 801be96:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801be9a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801be9e:	fa5f fc8c 	uxtb.w	ip, ip
 801bea2:	2a00      	cmp	r2, #0
 801bea4:	f000 80db 	beq.w	801c05e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bea8:	1c58      	adds	r0, r3, #1
 801beaa:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801beae:	07c0      	lsls	r0, r0, #31
 801beb0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801beb4:	bf54      	ite	pl
 801beb6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801beba:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801bebe:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801bec2:	fa5f f08e 	uxtb.w	r0, lr
 801bec6:	9010      	str	r0, [sp, #64]	; 0x40
 801bec8:	b1c9      	cbz	r1, 801befe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801beca:	4453      	add	r3, sl
 801becc:	0858      	lsrs	r0, r3, #1
 801bece:	07dd      	lsls	r5, r3, #31
 801bed0:	5c38      	ldrb	r0, [r7, r0]
 801bed2:	bf54      	ite	pl
 801bed4:	f000 000f 	andpl.w	r0, r0, #15
 801bed8:	1100      	asrmi	r0, r0, #4
 801beda:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bede:	3301      	adds	r3, #1
 801bee0:	b2c0      	uxtb	r0, r0
 801bee2:	900b      	str	r0, [sp, #44]	; 0x2c
 801bee4:	0858      	lsrs	r0, r3, #1
 801bee6:	07dd      	lsls	r5, r3, #31
 801bee8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801beec:	bf54      	ite	pl
 801beee:	f00e 030f 	andpl.w	r3, lr, #15
 801bef2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801bef6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801befa:	b2db      	uxtb	r3, r3
 801befc:	9311      	str	r3, [sp, #68]	; 0x44
 801befe:	b292      	uxth	r2, r2
 801bf00:	b289      	uxth	r1, r1
 801bf02:	fb02 f301 	mul.w	r3, r2, r1
 801bf06:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801bf0a:	0112      	lsls	r2, r2, #4
 801bf0c:	b289      	uxth	r1, r1
 801bf0e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801bf12:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bf14:	1ad2      	subs	r2, r2, r3
 801bf16:	1a40      	subs	r0, r0, r1
 801bf18:	b292      	uxth	r2, r2
 801bf1a:	436a      	muls	r2, r5
 801bf1c:	b280      	uxth	r0, r0
 801bf1e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801bf22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bf24:	fb01 c102 	mla	r1, r1, r2, ip
 801bf28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bf2a:	fb03 1302 	mla	r3, r3, r2, r1
 801bf2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf32:	b1db      	cbz	r3, 801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bf34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bf36:	4353      	muls	r3, r2
 801bf38:	1c5a      	adds	r2, r3, #1
 801bf3a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bf3e:	4ac6      	ldr	r2, [pc, #792]	; (801c258 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801bf40:	121b      	asrs	r3, r3, #8
 801bf42:	6812      	ldr	r2, [r2, #0]
 801bf44:	2bff      	cmp	r3, #255	; 0xff
 801bf46:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801bf4a:	f040 8099 	bne.w	801c080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801bf4e:	0953      	lsrs	r3, r2, #5
 801bf50:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801bf54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bf58:	f02c 0c07 	bic.w	ip, ip, #7
 801bf5c:	ea43 0c0c 	orr.w	ip, r3, ip
 801bf60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bf64:	ea4c 0202 	orr.w	r2, ip, r2
 801bf68:	f8a8 2000 	strh.w	r2, [r8]
 801bf6c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bf6e:	441c      	add	r4, r3
 801bf70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bf72:	441e      	add	r6, r3
 801bf74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf76:	3b01      	subs	r3, #1
 801bf78:	f108 0802 	add.w	r8, r8, #2
 801bf7c:	930e      	str	r3, [sp, #56]	; 0x38
 801bf7e:	e763      	b.n	801be48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801bf80:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bf82:	441c      	add	r4, r3
 801bf84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bf86:	441e      	add	r6, r3
 801bf88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf8a:	3b01      	subs	r3, #1
 801bf8c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf8e:	f109 0902 	add.w	r9, r9, #2
 801bf92:	e737      	b.n	801be04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bf94:	d024      	beq.n	801bfe0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801bf96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf98:	982b      	ldr	r0, [sp, #172]	; 0xac
 801bf9a:	3b01      	subs	r3, #1
 801bf9c:	fb00 4003 	mla	r0, r0, r3, r4
 801bfa0:	1400      	asrs	r0, r0, #16
 801bfa2:	f53f af4c 	bmi.w	801be3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bfa6:	3901      	subs	r1, #1
 801bfa8:	4288      	cmp	r0, r1
 801bfaa:	f6bf af48 	bge.w	801be3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bfae:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801bfb0:	fb01 6303 	mla	r3, r1, r3, r6
 801bfb4:	141b      	asrs	r3, r3, #16
 801bfb6:	f53f af42 	bmi.w	801be3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bfba:	3a01      	subs	r2, #1
 801bfbc:	4293      	cmp	r3, r2
 801bfbe:	f6bf af3e 	bge.w	801be3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bfc2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bfc6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bfca:	930e      	str	r3, [sp, #56]	; 0x38
 801bfcc:	46c8      	mov	r8, r9
 801bfce:	f1bb 0f00 	cmp.w	fp, #0
 801bfd2:	f300 80b7 	bgt.w	801c144 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801bfd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfd8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bfdc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bfe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfe2:	2b00      	cmp	r3, #0
 801bfe4:	f340 818d 	ble.w	801c302 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801bfe8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bfec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bff0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bff4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bff6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bffa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bffe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c002:	eef0 6a48 	vmov.f32	s13, s16
 801c006:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c00a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c00e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c012:	ee16 4a90 	vmov	r4, s13
 801c016:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c01a:	eef0 6a68 	vmov.f32	s13, s17
 801c01e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c022:	ee18 2a10 	vmov	r2, s16
 801c026:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c02a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c02e:	ee18 2a90 	vmov	r2, s17
 801c032:	932b      	str	r3, [sp, #172]	; 0xac
 801c034:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c036:	fb92 f3f3 	sdiv	r3, r2, r3
 801c03a:	932c      	str	r3, [sp, #176]	; 0xb0
 801c03c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c03e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c040:	3b01      	subs	r3, #1
 801c042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c046:	930d      	str	r3, [sp, #52]	; 0x34
 801c048:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c04a:	bf08      	it	eq
 801c04c:	4613      	moveq	r3, r2
 801c04e:	ee16 6a90 	vmov	r6, s13
 801c052:	9309      	str	r3, [sp, #36]	; 0x24
 801c054:	eef0 8a67 	vmov.f32	s17, s15
 801c058:	eeb0 8a47 	vmov.f32	s16, s14
 801c05c:	e6c3      	b.n	801bde6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c05e:	2900      	cmp	r1, #0
 801c060:	f43f af4d 	beq.w	801befe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c064:	eb0a 0003 	add.w	r0, sl, r3
 801c068:	0843      	lsrs	r3, r0, #1
 801c06a:	07c0      	lsls	r0, r0, #31
 801c06c:	5cfb      	ldrb	r3, [r7, r3]
 801c06e:	bf54      	ite	pl
 801c070:	f003 030f 	andpl.w	r3, r3, #15
 801c074:	111b      	asrmi	r3, r3, #4
 801c076:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c07a:	b2db      	uxtb	r3, r3
 801c07c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c07e:	e73e      	b.n	801befe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c080:	f8b8 e000 	ldrh.w	lr, [r8]
 801c084:	fa1f fb83 	uxth.w	fp, r3
 801c088:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c08c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c090:	43db      	mvns	r3, r3
 801c092:	b2db      	uxtb	r3, r3
 801c094:	fb11 f10b 	smulbb	r1, r1, fp
 801c098:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c09c:	fb00 1003 	mla	r0, r0, r3, r1
 801c0a0:	fa5f fc8c 	uxtb.w	ip, ip
 801c0a4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c0a8:	b2d2      	uxtb	r2, r2
 801c0aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c0ae:	b280      	uxth	r0, r0
 801c0b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c0b4:	fb1c fc0b 	smulbb	ip, ip, fp
 801c0b8:	fa5f fe8e 	uxtb.w	lr, lr
 801c0bc:	fb12 fb0b 	smulbb	fp, r2, fp
 801c0c0:	fb01 cc03 	mla	ip, r1, r3, ip
 801c0c4:	fb0e bb03 	mla	fp, lr, r3, fp
 801c0c8:	1c43      	adds	r3, r0, #1
 801c0ca:	fa1f fc8c 	uxth.w	ip, ip
 801c0ce:	fa1f fb8b 	uxth.w	fp, fp
 801c0d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c0d6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801c0da:	f10c 0101 	add.w	r1, ip, #1
 801c0de:	f10b 0001 	add.w	r0, fp, #1
 801c0e2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c0e6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c0ea:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c0ee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c0f2:	4318      	orrs	r0, r3
 801c0f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c0f8:	ea40 000c 	orr.w	r0, r0, ip
 801c0fc:	f8a8 0000 	strh.w	r0, [r8]
 801c100:	e734      	b.n	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c102:	f113 0b01 	adds.w	fp, r3, #1
 801c106:	f53f af31 	bmi.w	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c10a:	45dc      	cmp	ip, fp
 801c10c:	f6ff af2e 	blt.w	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c110:	f110 0b01 	adds.w	fp, r0, #1
 801c114:	f53f af2a 	bmi.w	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c118:	45de      	cmp	lr, fp
 801c11a:	f6ff af27 	blt.w	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c11e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c120:	9302      	str	r3, [sp, #8]
 801c122:	fa0f f38e 	sxth.w	r3, lr
 801c126:	9301      	str	r3, [sp, #4]
 801c128:	fa0f f38c 	sxth.w	r3, ip
 801c12c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c130:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c134:	9300      	str	r3, [sp, #0]
 801c136:	463a      	mov	r2, r7
 801c138:	4653      	mov	r3, sl
 801c13a:	4641      	mov	r1, r8
 801c13c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c13e:	f7ff fd2b 	bl	801bb98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c142:	e713      	b.n	801bf6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c144:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c146:	1422      	asrs	r2, r4, #16
 801c148:	1433      	asrs	r3, r6, #16
 801c14a:	fb05 2303 	mla	r3, r5, r3, r2
 801c14e:	085a      	lsrs	r2, r3, #1
 801c150:	07dd      	lsls	r5, r3, #31
 801c152:	5cba      	ldrb	r2, [r7, r2]
 801c154:	bf54      	ite	pl
 801c156:	f002 020f 	andpl.w	r2, r2, #15
 801c15a:	1112      	asrmi	r2, r2, #4
 801c15c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c160:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c164:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c168:	b2d2      	uxtb	r2, r2
 801c16a:	2900      	cmp	r1, #0
 801c16c:	d076      	beq.n	801c25c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801c16e:	f103 0e01 	add.w	lr, r3, #1
 801c172:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c176:	f01e 0f01 	tst.w	lr, #1
 801c17a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c17e:	bf0c      	ite	eq
 801c180:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c184:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c188:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c18c:	fa5f f58c 	uxtb.w	r5, ip
 801c190:	9512      	str	r5, [sp, #72]	; 0x48
 801c192:	b300      	cbz	r0, 801c1d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c194:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c196:	442b      	add	r3, r5
 801c198:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c19c:	07dd      	lsls	r5, r3, #31
 801c19e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c1a2:	bf54      	ite	pl
 801c1a4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c1a8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c1ac:	3301      	adds	r3, #1
 801c1ae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c1b2:	fa5f f58c 	uxtb.w	r5, ip
 801c1b6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c1ba:	950c      	str	r5, [sp, #48]	; 0x30
 801c1bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c1c0:	07dd      	lsls	r5, r3, #31
 801c1c2:	bf54      	ite	pl
 801c1c4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c1c8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c1cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c1d0:	fa5f f38c 	uxtb.w	r3, ip
 801c1d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c1d6:	b289      	uxth	r1, r1
 801c1d8:	b280      	uxth	r0, r0
 801c1da:	fb01 f300 	mul.w	r3, r1, r0
 801c1de:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c1e2:	0109      	lsls	r1, r1, #4
 801c1e4:	b280      	uxth	r0, r0
 801c1e6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c1ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c1ec:	1ac9      	subs	r1, r1, r3
 801c1ee:	ebac 0c00 	sub.w	ip, ip, r0
 801c1f2:	b289      	uxth	r1, r1
 801c1f4:	4369      	muls	r1, r5
 801c1f6:	fa1f fc8c 	uxth.w	ip, ip
 801c1fa:	fb02 120c 	mla	r2, r2, ip, r1
 801c1fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c200:	fb00 2001 	mla	r0, r0, r1, r2
 801c204:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c206:	fb03 0302 	mla	r3, r3, r2, r0
 801c20a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c20e:	b1d3      	cbz	r3, 801c246 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801c210:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c212:	4353      	muls	r3, r2
 801c214:	1c5a      	adds	r2, r3, #1
 801c216:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c21a:	4a0f      	ldr	r2, [pc, #60]	; (801c258 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801c21c:	121b      	asrs	r3, r3, #8
 801c21e:	6812      	ldr	r2, [r2, #0]
 801c220:	2bff      	cmp	r3, #255	; 0xff
 801c222:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c226:	d12d      	bne.n	801c284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801c228:	0953      	lsrs	r3, r2, #5
 801c22a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c22e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c232:	f02c 0c07 	bic.w	ip, ip, #7
 801c236:	ea43 0c0c 	orr.w	ip, r3, ip
 801c23a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c23e:	ea4c 0202 	orr.w	r2, ip, r2
 801c242:	f8a8 2000 	strh.w	r2, [r8]
 801c246:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c248:	441c      	add	r4, r3
 801c24a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c24c:	f108 0802 	add.w	r8, r8, #2
 801c250:	441e      	add	r6, r3
 801c252:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c256:	e6ba      	b.n	801bfce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c258:	2000a814 	.word	0x2000a814
 801c25c:	2800      	cmp	r0, #0
 801c25e:	d0ba      	beq.n	801c1d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c260:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c262:	442b      	add	r3, r5
 801c264:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c268:	07db      	lsls	r3, r3, #31
 801c26a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c26e:	bf54      	ite	pl
 801c270:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c274:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c278:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c27c:	fa5f f38c 	uxtb.w	r3, ip
 801c280:	930c      	str	r3, [sp, #48]	; 0x30
 801c282:	e7a8      	b.n	801c1d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c284:	f8b8 e000 	ldrh.w	lr, [r8]
 801c288:	fa1f fa83 	uxth.w	sl, r3
 801c28c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c290:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c294:	43db      	mvns	r3, r3
 801c296:	b2db      	uxtb	r3, r3
 801c298:	fb11 f10a 	smulbb	r1, r1, sl
 801c29c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c2a0:	fb00 1003 	mla	r0, r0, r3, r1
 801c2a4:	b2d2      	uxtb	r2, r2
 801c2a6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c2aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c2ae:	fa5f fe8e 	uxtb.w	lr, lr
 801c2b2:	fb12 f20a 	smulbb	r2, r2, sl
 801c2b6:	fb0e 2203 	mla	r2, lr, r3, r2
 801c2ba:	fa5f fc8c 	uxtb.w	ip, ip
 801c2be:	b280      	uxth	r0, r0
 801c2c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c2c4:	b292      	uxth	r2, r2
 801c2c6:	fb1c fc0a 	smulbb	ip, ip, sl
 801c2ca:	fb01 cc03 	mla	ip, r1, r3, ip
 801c2ce:	1c43      	adds	r3, r0, #1
 801c2d0:	1c51      	adds	r1, r2, #1
 801c2d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c2d6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c2da:	fa1f fc8c 	uxth.w	ip, ip
 801c2de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c2e2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c2e6:	4308      	orrs	r0, r1
 801c2e8:	f10c 0101 	add.w	r1, ip, #1
 801c2ec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c2f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c2f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c2f8:	ea40 000c 	orr.w	r0, r0, ip
 801c2fc:	f8a8 0000 	strh.w	r0, [r8]
 801c300:	e7a1      	b.n	801c246 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801c302:	b017      	add	sp, #92	; 0x5c
 801c304:	ecbd 8b08 	vpop	{d8-d11}
 801c308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c30c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c30c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c310:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801c314:	2c00      	cmp	r4, #0
 801c316:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c31a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c31e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801c322:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801c326:	fb04 ce03 	mla	lr, r4, r3, ip
 801c32a:	db60      	blt.n	801c3ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c32c:	45a1      	cmp	r9, r4
 801c32e:	dd5e      	ble.n	801c3ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c330:	f1bc 0f00 	cmp.w	ip, #0
 801c334:	db59      	blt.n	801c3ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c336:	45e0      	cmp	r8, ip
 801c338:	dd57      	ble.n	801c3ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c33a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801c33e:	f01e 0f01 	tst.w	lr, #1
 801c342:	5c16      	ldrb	r6, [r2, r0]
 801c344:	bf0c      	ite	eq
 801c346:	f006 060f 	andeq.w	r6, r6, #15
 801c34a:	1136      	asrne	r6, r6, #4
 801c34c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c350:	b2f6      	uxtb	r6, r6
 801c352:	f11c 0001 	adds.w	r0, ip, #1
 801c356:	d44d      	bmi.n	801c3f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c358:	4580      	cmp	r8, r0
 801c35a:	dd4b      	ble.n	801c3f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c35c:	2d00      	cmp	r5, #0
 801c35e:	d04b      	beq.n	801c3f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801c360:	f10e 0a01 	add.w	sl, lr, #1
 801c364:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801c368:	f01a 0f01 	tst.w	sl, #1
 801c36c:	5c10      	ldrb	r0, [r2, r0]
 801c36e:	bf0c      	ite	eq
 801c370:	f000 000f 	andeq.w	r0, r0, #15
 801c374:	1100      	asrne	r0, r0, #4
 801c376:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c37a:	b2c0      	uxtb	r0, r0
 801c37c:	3401      	adds	r4, #1
 801c37e:	d43f      	bmi.n	801c400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c380:	45a1      	cmp	r9, r4
 801c382:	dd3d      	ble.n	801c400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c384:	2f00      	cmp	r7, #0
 801c386:	f000 8093 	beq.w	801c4b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c38a:	f1bc 0f00 	cmp.w	ip, #0
 801c38e:	db35      	blt.n	801c3fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c390:	45e0      	cmp	r8, ip
 801c392:	dd33      	ble.n	801c3fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c394:	eb03 090e 	add.w	r9, r3, lr
 801c398:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801c39c:	f019 0f01 	tst.w	r9, #1
 801c3a0:	5d14      	ldrb	r4, [r2, r4]
 801c3a2:	bf0c      	ite	eq
 801c3a4:	f004 040f 	andeq.w	r4, r4, #15
 801c3a8:	1124      	asrne	r4, r4, #4
 801c3aa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c3ae:	b2e4      	uxtb	r4, r4
 801c3b0:	f11c 0c01 	adds.w	ip, ip, #1
 801c3b4:	d427      	bmi.n	801c406 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c3b6:	45e0      	cmp	r8, ip
 801c3b8:	dd25      	ble.n	801c406 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c3ba:	b335      	cbz	r5, 801c40a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801c3bc:	3301      	adds	r3, #1
 801c3be:	449e      	add	lr, r3
 801c3c0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c3c4:	f01e 0f01 	tst.w	lr, #1
 801c3c8:	5cd2      	ldrb	r2, [r2, r3]
 801c3ca:	bf0c      	ite	eq
 801c3cc:	f002 020f 	andeq.w	r2, r2, #15
 801c3d0:	1112      	asrne	r2, r2, #4
 801c3d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c3d6:	b2d3      	uxtb	r3, r2
 801c3d8:	2d0f      	cmp	r5, #15
 801c3da:	d917      	bls.n	801c40c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801c3dc:	4b37      	ldr	r3, [pc, #220]	; (801c4bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801c3de:	4a38      	ldr	r2, [pc, #224]	; (801c4c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801c3e0:	4838      	ldr	r0, [pc, #224]	; (801c4c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801c3e2:	f240 11f9 	movw	r1, #505	; 0x1f9
 801c3e6:	f000 fc69 	bl	801ccbc <__assert_func>
 801c3ea:	2600      	movs	r6, #0
 801c3ec:	e7b1      	b.n	801c352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801c3ee:	2000      	movs	r0, #0
 801c3f0:	4606      	mov	r6, r0
 801c3f2:	e7c3      	b.n	801c37c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c3f4:	2000      	movs	r0, #0
 801c3f6:	e7c1      	b.n	801c37c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c3f8:	4628      	mov	r0, r5
 801c3fa:	e7bf      	b.n	801c37c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c3fc:	2400      	movs	r4, #0
 801c3fe:	e7d7      	b.n	801c3b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801c400:	2300      	movs	r3, #0
 801c402:	461c      	mov	r4, r3
 801c404:	e7e8      	b.n	801c3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c406:	2300      	movs	r3, #0
 801c408:	e7e6      	b.n	801c3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c40a:	462b      	mov	r3, r5
 801c40c:	2f0f      	cmp	r7, #15
 801c40e:	d8e5      	bhi.n	801c3dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c410:	b2ad      	uxth	r5, r5
 801c412:	b2bf      	uxth	r7, r7
 801c414:	fb05 fc07 	mul.w	ip, r5, r7
 801c418:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801c41c:	012d      	lsls	r5, r5, #4
 801c41e:	b2bf      	uxth	r7, r7
 801c420:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801c424:	eba5 050c 	sub.w	r5, r5, ip
 801c428:	1bd2      	subs	r2, r2, r7
 801c42a:	b2ad      	uxth	r5, r5
 801c42c:	b292      	uxth	r2, r2
 801c42e:	4368      	muls	r0, r5
 801c430:	fb06 0002 	mla	r0, r6, r2, r0
 801c434:	fb07 0404 	mla	r4, r7, r4, r0
 801c438:	fb0c 4303 	mla	r3, ip, r3, r4
 801c43c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c440:	b3a3      	cbz	r3, 801c4ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c442:	4a21      	ldr	r2, [pc, #132]	; (801c4c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801c444:	880e      	ldrh	r6, [r1, #0]
 801c446:	6815      	ldr	r5, [r2, #0]
 801c448:	1234      	asrs	r4, r6, #8
 801c44a:	b29a      	uxth	r2, r3
 801c44c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c450:	43db      	mvns	r3, r3
 801c452:	b2db      	uxtb	r3, r3
 801c454:	fb10 f002 	smulbb	r0, r0, r2
 801c458:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c45c:	fb04 0403 	mla	r4, r4, r3, r0
 801c460:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c464:	10f0      	asrs	r0, r6, #3
 801c466:	b2ed      	uxtb	r5, r5
 801c468:	00f6      	lsls	r6, r6, #3
 801c46a:	fb17 f702 	smulbb	r7, r7, r2
 801c46e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c472:	fb15 f202 	smulbb	r2, r5, r2
 801c476:	b2f6      	uxtb	r6, r6
 801c478:	b2a4      	uxth	r4, r4
 801c47a:	fb00 7003 	mla	r0, r0, r3, r7
 801c47e:	fb06 2303 	mla	r3, r6, r3, r2
 801c482:	b29a      	uxth	r2, r3
 801c484:	1c63      	adds	r3, r4, #1
 801c486:	b280      	uxth	r0, r0
 801c488:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c48c:	1c53      	adds	r3, r2, #1
 801c48e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c492:	1c42      	adds	r2, r0, #1
 801c494:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c498:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c49c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c4a0:	0940      	lsrs	r0, r0, #5
 801c4a2:	4323      	orrs	r3, r4
 801c4a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4a8:	4303      	orrs	r3, r0
 801c4aa:	800b      	strh	r3, [r1, #0]
 801c4ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c4b0:	2d0f      	cmp	r5, #15
 801c4b2:	d893      	bhi.n	801c3dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c4b4:	463b      	mov	r3, r7
 801c4b6:	463c      	mov	r4, r7
 801c4b8:	e7aa      	b.n	801c410 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801c4ba:	bf00      	nop
 801c4bc:	08021447 	.word	0x08021447
 801c4c0:	08021976 	.word	0x08021976
 801c4c4:	08021414 	.word	0x08021414
 801c4c8:	2000a814 	.word	0x2000a814

0801c4cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4d0:	ed2d 8b08 	vpush	{d8-d11}
 801c4d4:	b093      	sub	sp, #76	; 0x4c
 801c4d6:	461d      	mov	r5, r3
 801c4d8:	920c      	str	r2, [sp, #48]	; 0x30
 801c4da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c4dc:	9107      	str	r1, [sp, #28]
 801c4de:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c4e2:	9011      	str	r0, [sp, #68]	; 0x44
 801c4e4:	6850      	ldr	r0, [r2, #4]
 801c4e6:	6812      	ldr	r2, [r2, #0]
 801c4e8:	fb00 1303 	mla	r3, r0, r3, r1
 801c4ec:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c4f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c4f2:	689b      	ldr	r3, [r3, #8]
 801c4f4:	3301      	adds	r3, #1
 801c4f6:	f023 0301 	bic.w	r3, r3, #1
 801c4fa:	9306      	str	r3, [sp, #24]
 801c4fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c4fe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c502:	681f      	ldr	r7, [r3, #0]
 801c504:	eeb0 aa40 	vmov.f32	s20, s0
 801c508:	eef0 9a60 	vmov.f32	s19, s1
 801c50c:	eeb0 9a41 	vmov.f32	s18, s2
 801c510:	eeb0 8a62 	vmov.f32	s16, s5
 801c514:	eef0 8a43 	vmov.f32	s17, s6
 801c518:	eef0 ba44 	vmov.f32	s23, s8
 801c51c:	eeb0 ba64 	vmov.f32	s22, s9
 801c520:	eef0 aa45 	vmov.f32	s21, s10
 801c524:	9b07      	ldr	r3, [sp, #28]
 801c526:	2b00      	cmp	r3, #0
 801c528:	dc03      	bgt.n	801c532 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c52a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c52c:	2b00      	cmp	r3, #0
 801c52e:	f340 8267 	ble.w	801ca00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c532:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c534:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c538:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c53c:	1e48      	subs	r0, r1, #1
 801c53e:	f102 3cff 	add.w	ip, r2, #4294967295
 801c542:	2d00      	cmp	r5, #0
 801c544:	f340 80b8 	ble.w	801c6b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801c548:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c54c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c550:	d406      	bmi.n	801c560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c552:	4586      	cmp	lr, r0
 801c554:	da04      	bge.n	801c560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c556:	2b00      	cmp	r3, #0
 801c558:	db02      	blt.n	801c560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c55a:	4563      	cmp	r3, ip
 801c55c:	f2c0 80ad 	blt.w	801c6ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c560:	f11e 0e01 	adds.w	lr, lr, #1
 801c564:	f100 80a0 	bmi.w	801c6a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c568:	4571      	cmp	r1, lr
 801c56a:	f2c0 809d 	blt.w	801c6a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c56e:	3301      	adds	r3, #1
 801c570:	f100 809a 	bmi.w	801c6a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c574:	429a      	cmp	r2, r3
 801c576:	f2c0 8097 	blt.w	801c6a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801c57a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c57e:	9509      	str	r5, [sp, #36]	; 0x24
 801c580:	46c8      	mov	r8, r9
 801c582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c584:	2b00      	cmp	r3, #0
 801c586:	f340 80b6 	ble.w	801c6f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c58a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c58e:	9308      	str	r3, [sp, #32]
 801c590:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c592:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c596:	1423      	asrs	r3, r4, #16
 801c598:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c59c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c5a0:	f100 813e 	bmi.w	801c820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c5a4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c5a8:	455b      	cmp	r3, fp
 801c5aa:	f280 8139 	bge.w	801c820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c5ae:	2800      	cmp	r0, #0
 801c5b0:	f2c0 8136 	blt.w	801c820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c5b4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c5b8:	4558      	cmp	r0, fp
 801c5ba:	f280 8131 	bge.w	801c820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801c5be:	9a06      	ldr	r2, [sp, #24]
 801c5c0:	fb00 3302 	mla	r3, r0, r2, r3
 801c5c4:	0858      	lsrs	r0, r3, #1
 801c5c6:	07da      	lsls	r2, r3, #31
 801c5c8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c5cc:	9a08      	ldr	r2, [sp, #32]
 801c5ce:	bf54      	ite	pl
 801c5d0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c5d4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c5d8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c5dc:	fa5f fc8c 	uxtb.w	ip, ip
 801c5e0:	2a00      	cmp	r2, #0
 801c5e2:	f000 80cb 	beq.w	801c77c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801c5e6:	1c58      	adds	r0, r3, #1
 801c5e8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c5ec:	07c0      	lsls	r0, r0, #31
 801c5ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c5f2:	bf54      	ite	pl
 801c5f4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c5f8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c5fc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c600:	fa5f fe8e 	uxtb.w	lr, lr
 801c604:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801c608:	b1b9      	cbz	r1, 801c63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c60a:	4453      	add	r3, sl
 801c60c:	0858      	lsrs	r0, r3, #1
 801c60e:	07da      	lsls	r2, r3, #31
 801c610:	5c38      	ldrb	r0, [r7, r0]
 801c612:	bf54      	ite	pl
 801c614:	f000 000f 	andpl.w	r0, r0, #15
 801c618:	1100      	asrmi	r0, r0, #4
 801c61a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c61e:	b2c0      	uxtb	r0, r0
 801c620:	900a      	str	r0, [sp, #40]	; 0x28
 801c622:	1c58      	adds	r0, r3, #1
 801c624:	0843      	lsrs	r3, r0, #1
 801c626:	07c2      	lsls	r2, r0, #31
 801c628:	5cfb      	ldrb	r3, [r7, r3]
 801c62a:	bf54      	ite	pl
 801c62c:	f003 030f 	andpl.w	r3, r3, #15
 801c630:	111b      	asrmi	r3, r3, #4
 801c632:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c636:	b2db      	uxtb	r3, r3
 801c638:	930e      	str	r3, [sp, #56]	; 0x38
 801c63a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c63e:	b289      	uxth	r1, r1
 801c640:	fb02 f301 	mul.w	r3, r2, r1
 801c644:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c648:	0112      	lsls	r2, r2, #4
 801c64a:	b289      	uxth	r1, r1
 801c64c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c650:	1a40      	subs	r0, r0, r1
 801c652:	fa1f fe80 	uxth.w	lr, r0
 801c656:	1ad2      	subs	r2, r2, r3
 801c658:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c65a:	b292      	uxth	r2, r2
 801c65c:	4342      	muls	r2, r0
 801c65e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c662:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c664:	fb01 c102 	mla	r1, r1, r2, ip
 801c668:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c66a:	fb03 1302 	mla	r3, r3, r2, r1
 801c66e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c672:	2bff      	cmp	r3, #255	; 0xff
 801c674:	f040 8093 	bne.w	801c79e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801c678:	4bbe      	ldr	r3, [pc, #760]	; (801c974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c67a:	681a      	ldr	r2, [r3, #0]
 801c67c:	4bbe      	ldr	r3, [pc, #760]	; (801c978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c67e:	0951      	lsrs	r1, r2, #5
 801c680:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c684:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c688:	430b      	orrs	r3, r1
 801c68a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c68e:	4313      	orrs	r3, r2
 801c690:	f8a8 3000 	strh.w	r3, [r8]
 801c694:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c696:	441c      	add	r4, r3
 801c698:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c69a:	441e      	add	r6, r3
 801c69c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c69e:	3b01      	subs	r3, #1
 801c6a0:	f108 0802 	add.w	r8, r8, #2
 801c6a4:	9309      	str	r3, [sp, #36]	; 0x24
 801c6a6:	e76c      	b.n	801c582 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801c6a8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c6aa:	441c      	add	r4, r3
 801c6ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c6ae:	3d01      	subs	r5, #1
 801c6b0:	441e      	add	r6, r3
 801c6b2:	f109 0902 	add.w	r9, r9, #2
 801c6b6:	e744      	b.n	801c542 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c6b8:	d021      	beq.n	801c6fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801c6ba:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c6bc:	1e6b      	subs	r3, r5, #1
 801c6be:	fb00 4003 	mla	r0, r0, r3, r4
 801c6c2:	1400      	asrs	r0, r0, #16
 801c6c4:	f53f af59 	bmi.w	801c57a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c6c8:	3901      	subs	r1, #1
 801c6ca:	4288      	cmp	r0, r1
 801c6cc:	f6bf af55 	bge.w	801c57a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c6d0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c6d2:	fb01 6303 	mla	r3, r1, r3, r6
 801c6d6:	141b      	asrs	r3, r3, #16
 801c6d8:	f53f af4f 	bmi.w	801c57a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c6dc:	3a01      	subs	r2, #1
 801c6de:	4293      	cmp	r3, r2
 801c6e0:	f6bf af4b 	bge.w	801c57a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c6e4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c6e8:	9308      	str	r3, [sp, #32]
 801c6ea:	46a8      	mov	r8, r5
 801c6ec:	46ce      	mov	lr, r9
 801c6ee:	f1b8 0f00 	cmp.w	r8, #0
 801c6f2:	f300 80b5 	bgt.w	801c860 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801c6f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c6fa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c6fe:	9b07      	ldr	r3, [sp, #28]
 801c700:	2b00      	cmp	r3, #0
 801c702:	f340 817d 	ble.w	801ca00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c706:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c70a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c70e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c712:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c714:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c718:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c71c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c720:	eef0 6a48 	vmov.f32	s13, s16
 801c724:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c728:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c72c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c730:	ee16 4a90 	vmov	r4, s13
 801c734:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c738:	eef0 6a68 	vmov.f32	s13, s17
 801c73c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c740:	ee18 2a10 	vmov	r2, s16
 801c744:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c748:	fb92 f3f3 	sdiv	r3, r2, r3
 801c74c:	ee18 2a90 	vmov	r2, s17
 801c750:	9327      	str	r3, [sp, #156]	; 0x9c
 801c752:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c754:	fb92 f3f3 	sdiv	r3, r2, r3
 801c758:	9328      	str	r3, [sp, #160]	; 0xa0
 801c75a:	9b07      	ldr	r3, [sp, #28]
 801c75c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c75e:	3b01      	subs	r3, #1
 801c760:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c764:	9307      	str	r3, [sp, #28]
 801c766:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c768:	ee16 6a90 	vmov	r6, s13
 801c76c:	bf14      	ite	ne
 801c76e:	461d      	movne	r5, r3
 801c770:	4615      	moveq	r5, r2
 801c772:	eef0 8a67 	vmov.f32	s17, s15
 801c776:	eeb0 8a47 	vmov.f32	s16, s14
 801c77a:	e6d3      	b.n	801c524 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c77c:	2900      	cmp	r1, #0
 801c77e:	f43f af5c 	beq.w	801c63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c782:	eb0a 0003 	add.w	r0, sl, r3
 801c786:	0843      	lsrs	r3, r0, #1
 801c788:	07c0      	lsls	r0, r0, #31
 801c78a:	5cfb      	ldrb	r3, [r7, r3]
 801c78c:	bf54      	ite	pl
 801c78e:	f003 030f 	andpl.w	r3, r3, #15
 801c792:	111b      	asrmi	r3, r3, #4
 801c794:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c798:	b2db      	uxtb	r3, r3
 801c79a:	930a      	str	r3, [sp, #40]	; 0x28
 801c79c:	e74d      	b.n	801c63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c79e:	2b00      	cmp	r3, #0
 801c7a0:	f43f af78 	beq.w	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c7a4:	4a73      	ldr	r2, [pc, #460]	; (801c974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c7a6:	f8b8 c000 	ldrh.w	ip, [r8]
 801c7aa:	6810      	ldr	r0, [r2, #0]
 801c7ac:	fa1f fe83 	uxth.w	lr, r3
 801c7b0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c7b4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c7b8:	43db      	mvns	r3, r3
 801c7ba:	b2db      	uxtb	r3, r3
 801c7bc:	fb12 f20e 	smulbb	r2, r2, lr
 801c7c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c7c4:	fb01 2103 	mla	r1, r1, r3, r2
 801c7c8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c7cc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c7d0:	b2c0      	uxtb	r0, r0
 801c7d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7d6:	fb1b fb0e 	smulbb	fp, fp, lr
 801c7da:	b289      	uxth	r1, r1
 801c7dc:	fb10 fe0e 	smulbb	lr, r0, lr
 801c7e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c7e4:	fa5f fc8c 	uxtb.w	ip, ip
 801c7e8:	fb02 b203 	mla	r2, r2, r3, fp
 801c7ec:	1c48      	adds	r0, r1, #1
 801c7ee:	fb0c e303 	mla	r3, ip, r3, lr
 801c7f2:	b292      	uxth	r2, r2
 801c7f4:	b29b      	uxth	r3, r3
 801c7f6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801c7fa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801c7fe:	f102 0b01 	add.w	fp, r2, #1
 801c802:	1c59      	adds	r1, r3, #1
 801c804:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c808:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c80c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c810:	0952      	lsrs	r2, r2, #5
 801c812:	4301      	orrs	r1, r0
 801c814:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c818:	4311      	orrs	r1, r2
 801c81a:	f8a8 1000 	strh.w	r1, [r8]
 801c81e:	e739      	b.n	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c820:	f113 0b01 	adds.w	fp, r3, #1
 801c824:	f53f af36 	bmi.w	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c828:	45dc      	cmp	ip, fp
 801c82a:	f6ff af33 	blt.w	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c82e:	f110 0b01 	adds.w	fp, r0, #1
 801c832:	f53f af2f 	bmi.w	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c836:	45de      	cmp	lr, fp
 801c838:	f6ff af2c 	blt.w	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c83c:	9a08      	ldr	r2, [sp, #32]
 801c83e:	9302      	str	r3, [sp, #8]
 801c840:	fa0f f38e 	sxth.w	r3, lr
 801c844:	9301      	str	r3, [sp, #4]
 801c846:	fa0f f38c 	sxth.w	r3, ip
 801c84a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c84e:	9105      	str	r1, [sp, #20]
 801c850:	9300      	str	r3, [sp, #0]
 801c852:	463a      	mov	r2, r7
 801c854:	4653      	mov	r3, sl
 801c856:	4641      	mov	r1, r8
 801c858:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c85a:	f7ff fd57 	bl	801c30c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c85e:	e719      	b.n	801c694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c860:	9906      	ldr	r1, [sp, #24]
 801c862:	1422      	asrs	r2, r4, #16
 801c864:	1433      	asrs	r3, r6, #16
 801c866:	fb01 2303 	mla	r3, r1, r3, r2
 801c86a:	085a      	lsrs	r2, r3, #1
 801c86c:	07d9      	lsls	r1, r3, #31
 801c86e:	5cba      	ldrb	r2, [r7, r2]
 801c870:	bf54      	ite	pl
 801c872:	f002 020f 	andpl.w	r2, r2, #15
 801c876:	1112      	asrmi	r2, r2, #4
 801c878:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c87c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c880:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c884:	b2d2      	uxtb	r2, r2
 801c886:	2800      	cmp	r0, #0
 801c888:	d062      	beq.n	801c950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c88a:	f103 0a01 	add.w	sl, r3, #1
 801c88e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801c892:	f01a 0f01 	tst.w	sl, #1
 801c896:	5c79      	ldrb	r1, [r7, r1]
 801c898:	bf0c      	ite	eq
 801c89a:	f001 010f 	andeq.w	r1, r1, #15
 801c89e:	1109      	asrne	r1, r1, #4
 801c8a0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c8a4:	b2c9      	uxtb	r1, r1
 801c8a6:	910f      	str	r1, [sp, #60]	; 0x3c
 801c8a8:	f1bc 0f00 	cmp.w	ip, #0
 801c8ac:	d019      	beq.n	801c8e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c8ae:	9908      	ldr	r1, [sp, #32]
 801c8b0:	440b      	add	r3, r1
 801c8b2:	0859      	lsrs	r1, r3, #1
 801c8b4:	f013 0f01 	tst.w	r3, #1
 801c8b8:	5c79      	ldrb	r1, [r7, r1]
 801c8ba:	bf0c      	ite	eq
 801c8bc:	f001 010f 	andeq.w	r1, r1, #15
 801c8c0:	1109      	asrne	r1, r1, #4
 801c8c2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c8c6:	b2c9      	uxtb	r1, r1
 801c8c8:	3301      	adds	r3, #1
 801c8ca:	910b      	str	r1, [sp, #44]	; 0x2c
 801c8cc:	0859      	lsrs	r1, r3, #1
 801c8ce:	07db      	lsls	r3, r3, #31
 801c8d0:	5c79      	ldrb	r1, [r7, r1]
 801c8d2:	bf54      	ite	pl
 801c8d4:	f001 010f 	andpl.w	r1, r1, #15
 801c8d8:	1109      	asrmi	r1, r1, #4
 801c8da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c8de:	b2c9      	uxtb	r1, r1
 801c8e0:	9110      	str	r1, [sp, #64]	; 0x40
 801c8e2:	b280      	uxth	r0, r0
 801c8e4:	fa1f fc8c 	uxth.w	ip, ip
 801c8e8:	fb00 f30c 	mul.w	r3, r0, ip
 801c8ec:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c8f0:	0100      	lsls	r0, r0, #4
 801c8f2:	fa1f fc8c 	uxth.w	ip, ip
 801c8f6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801c8fa:	eba1 010c 	sub.w	r1, r1, ip
 801c8fe:	fa1f fa81 	uxth.w	sl, r1
 801c902:	1ac0      	subs	r0, r0, r3
 801c904:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c906:	b280      	uxth	r0, r0
 801c908:	4348      	muls	r0, r1
 801c90a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c90c:	fb02 020a 	mla	r2, r2, sl, r0
 801c910:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c914:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c916:	fb03 c302 	mla	r3, r3, r2, ip
 801c91a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c91e:	2bff      	cmp	r3, #255	; 0xff
 801c920:	d12c      	bne.n	801c97c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c922:	4b14      	ldr	r3, [pc, #80]	; (801c974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801c924:	681a      	ldr	r2, [r3, #0]
 801c926:	4b14      	ldr	r3, [pc, #80]	; (801c978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c928:	0951      	lsrs	r1, r2, #5
 801c92a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c92e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c932:	430b      	orrs	r3, r1
 801c934:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c938:	4313      	orrs	r3, r2
 801c93a:	f8ae 3000 	strh.w	r3, [lr]
 801c93e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c940:	441c      	add	r4, r3
 801c942:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c944:	f10e 0e02 	add.w	lr, lr, #2
 801c948:	441e      	add	r6, r3
 801c94a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c94e:	e6ce      	b.n	801c6ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c950:	f1bc 0f00 	cmp.w	ip, #0
 801c954:	d0c5      	beq.n	801c8e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c956:	9908      	ldr	r1, [sp, #32]
 801c958:	440b      	add	r3, r1
 801c95a:	0859      	lsrs	r1, r3, #1
 801c95c:	07db      	lsls	r3, r3, #31
 801c95e:	5c79      	ldrb	r1, [r7, r1]
 801c960:	bf54      	ite	pl
 801c962:	f001 010f 	andpl.w	r1, r1, #15
 801c966:	1109      	asrmi	r1, r1, #4
 801c968:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c96c:	b2c9      	uxtb	r1, r1
 801c96e:	910b      	str	r1, [sp, #44]	; 0x2c
 801c970:	e7b7      	b.n	801c8e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801c972:	bf00      	nop
 801c974:	2000a814 	.word	0x2000a814
 801c978:	fffff800 	.word	0xfffff800
 801c97c:	2b00      	cmp	r3, #0
 801c97e:	d0de      	beq.n	801c93e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c980:	4a22      	ldr	r2, [pc, #136]	; (801ca0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801c982:	f8be c000 	ldrh.w	ip, [lr]
 801c986:	6810      	ldr	r0, [r2, #0]
 801c988:	fa1f fa83 	uxth.w	sl, r3
 801c98c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c990:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c994:	43db      	mvns	r3, r3
 801c996:	b2db      	uxtb	r3, r3
 801c998:	fb12 f20a 	smulbb	r2, r2, sl
 801c99c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c9a0:	fb01 2103 	mla	r1, r1, r3, r2
 801c9a4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c9a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c9ac:	b2c0      	uxtb	r0, r0
 801c9ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c9b2:	fa5f fc8c 	uxtb.w	ip, ip
 801c9b6:	fb10 f00a 	smulbb	r0, r0, sl
 801c9ba:	fb0c 0003 	mla	r0, ip, r3, r0
 801c9be:	b289      	uxth	r1, r1
 801c9c0:	fb1b fb0a 	smulbb	fp, fp, sl
 801c9c4:	b280      	uxth	r0, r0
 801c9c6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c9ca:	fb02 b203 	mla	r2, r2, r3, fp
 801c9ce:	1c4b      	adds	r3, r1, #1
 801c9d0:	f100 0b01 	add.w	fp, r0, #1
 801c9d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c9d8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801c9dc:	b292      	uxth	r2, r2
 801c9de:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801c9e2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c9e6:	ea4b 0101 	orr.w	r1, fp, r1
 801c9ea:	f102 0b01 	add.w	fp, r2, #1
 801c9ee:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c9f2:	0952      	lsrs	r2, r2, #5
 801c9f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c9f8:	4311      	orrs	r1, r2
 801c9fa:	f8ae 1000 	strh.w	r1, [lr]
 801c9fe:	e79e      	b.n	801c93e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801ca00:	b013      	add	sp, #76	; 0x4c
 801ca02:	ecbd 8b08 	vpop	{d8-d11}
 801ca06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca0a:	bf00      	nop
 801ca0c:	2000a814 	.word	0x2000a814

0801ca10 <CRC_Lock>:
 801ca10:	b530      	push	{r4, r5, lr}
 801ca12:	4a20      	ldr	r2, [pc, #128]	; (801ca94 <CRC_Lock+0x84>)
 801ca14:	6813      	ldr	r3, [r2, #0]
 801ca16:	f023 0301 	bic.w	r3, r3, #1
 801ca1a:	6013      	str	r3, [r2, #0]
 801ca1c:	4b1e      	ldr	r3, [pc, #120]	; (801ca98 <CRC_Lock+0x88>)
 801ca1e:	681a      	ldr	r2, [r3, #0]
 801ca20:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ca24:	4022      	ands	r2, r4
 801ca26:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ca2a:	42aa      	cmp	r2, r5
 801ca2c:	d005      	beq.n	801ca3a <CRC_Lock+0x2a>
 801ca2e:	681b      	ldr	r3, [r3, #0]
 801ca30:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ca34:	4023      	ands	r3, r4
 801ca36:	4293      	cmp	r3, r2
 801ca38:	d124      	bne.n	801ca84 <CRC_Lock+0x74>
 801ca3a:	4b18      	ldr	r3, [pc, #96]	; (801ca9c <CRC_Lock+0x8c>)
 801ca3c:	681b      	ldr	r3, [r3, #0]
 801ca3e:	bb0b      	cbnz	r3, 801ca84 <CRC_Lock+0x74>
 801ca40:	4b17      	ldr	r3, [pc, #92]	; (801caa0 <CRC_Lock+0x90>)
 801ca42:	681a      	ldr	r2, [r3, #0]
 801ca44:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ca48:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ca4c:	d00d      	beq.n	801ca6a <CRC_Lock+0x5a>
 801ca4e:	681a      	ldr	r2, [r3, #0]
 801ca50:	f240 4483 	movw	r4, #1155	; 0x483
 801ca54:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ca58:	42a2      	cmp	r2, r4
 801ca5a:	d006      	beq.n	801ca6a <CRC_Lock+0x5a>
 801ca5c:	681b      	ldr	r3, [r3, #0]
 801ca5e:	f240 4285 	movw	r2, #1157	; 0x485
 801ca62:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ca66:	4293      	cmp	r3, r2
 801ca68:	d10c      	bne.n	801ca84 <CRC_Lock+0x74>
 801ca6a:	4b0e      	ldr	r3, [pc, #56]	; (801caa4 <CRC_Lock+0x94>)
 801ca6c:	2201      	movs	r2, #1
 801ca6e:	601a      	str	r2, [r3, #0]
 801ca70:	681a      	ldr	r2, [r3, #0]
 801ca72:	2a00      	cmp	r2, #0
 801ca74:	d1fc      	bne.n	801ca70 <CRC_Lock+0x60>
 801ca76:	4b0c      	ldr	r3, [pc, #48]	; (801caa8 <CRC_Lock+0x98>)
 801ca78:	6018      	str	r0, [r3, #0]
 801ca7a:	6818      	ldr	r0, [r3, #0]
 801ca7c:	1a43      	subs	r3, r0, r1
 801ca7e:	4258      	negs	r0, r3
 801ca80:	4158      	adcs	r0, r3
 801ca82:	bd30      	pop	{r4, r5, pc}
 801ca84:	4b09      	ldr	r3, [pc, #36]	; (801caac <CRC_Lock+0x9c>)
 801ca86:	2201      	movs	r2, #1
 801ca88:	601a      	str	r2, [r3, #0]
 801ca8a:	681a      	ldr	r2, [r3, #0]
 801ca8c:	2a00      	cmp	r2, #0
 801ca8e:	d1fc      	bne.n	801ca8a <CRC_Lock+0x7a>
 801ca90:	4b07      	ldr	r3, [pc, #28]	; (801cab0 <CRC_Lock+0xa0>)
 801ca92:	e7f1      	b.n	801ca78 <CRC_Lock+0x68>
 801ca94:	e0002000 	.word	0xe0002000
 801ca98:	e000ed00 	.word	0xe000ed00
 801ca9c:	e0042000 	.word	0xe0042000
 801caa0:	5c001000 	.word	0x5c001000
 801caa4:	58024c08 	.word	0x58024c08
 801caa8:	58024c00 	.word	0x58024c00
 801caac:	40023008 	.word	0x40023008
 801cab0:	40023000 	.word	0x40023000

0801cab4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801cab4:	6101      	str	r1, [r0, #16]
 801cab6:	4770      	bx	lr

0801cab8 <_ZN8touchgfx8Gestures4tickEv>:
 801cab8:	7b83      	ldrb	r3, [r0, #14]
 801caba:	b14b      	cbz	r3, 801cad0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801cabc:	8903      	ldrh	r3, [r0, #8]
 801cabe:	3301      	adds	r3, #1
 801cac0:	b29b      	uxth	r3, r3
 801cac2:	2b07      	cmp	r3, #7
 801cac4:	8103      	strh	r3, [r0, #8]
 801cac6:	bf81      	itttt	hi
 801cac8:	2300      	movhi	r3, #0
 801caca:	8143      	strhhi	r3, [r0, #10]
 801cacc:	8183      	strhhi	r3, [r0, #12]
 801cace:	7383      	strbhi	r3, [r0, #14]
 801cad0:	4770      	bx	lr
	...

0801cad4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801cad4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801cad8:	4698      	mov	r8, r3
 801cada:	8883      	ldrh	r3, [r0, #4]
 801cadc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cae0:	eba8 0303 	sub.w	r3, r8, r3
 801cae4:	b21b      	sxth	r3, r3
 801cae6:	4604      	mov	r4, r0
 801cae8:	2b00      	cmp	r3, #0
 801caea:	4617      	mov	r7, r2
 801caec:	4a18      	ldr	r2, [pc, #96]	; (801cb50 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801caee:	9200      	str	r2, [sp, #0]
 801caf0:	bfb8      	it	lt
 801caf2:	425b      	neglt	r3, r3
 801caf4:	8aa2      	ldrh	r2, [r4, #20]
 801caf6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801cafa:	f8ad 800a 	strh.w	r8, [sp, #10]
 801cafe:	b21b      	sxth	r3, r3
 801cb00:	460e      	mov	r6, r1
 801cb02:	4293      	cmp	r3, r2
 801cb04:	88c1      	ldrh	r1, [r0, #6]
 801cb06:	f8ad 1008 	strh.w	r1, [sp, #8]
 801cb0a:	f04f 0000 	mov.w	r0, #0
 801cb0e:	f88d 0004 	strb.w	r0, [sp, #4]
 801cb12:	f8ad 500c 	strh.w	r5, [sp, #12]
 801cb16:	dc07      	bgt.n	801cb28 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801cb18:	1a69      	subs	r1, r5, r1
 801cb1a:	b209      	sxth	r1, r1
 801cb1c:	2900      	cmp	r1, #0
 801cb1e:	bfb8      	it	lt
 801cb20:	4249      	neglt	r1, r1
 801cb22:	b209      	sxth	r1, r1
 801cb24:	428a      	cmp	r2, r1
 801cb26:	da10      	bge.n	801cb4a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801cb28:	6920      	ldr	r0, [r4, #16]
 801cb2a:	6803      	ldr	r3, [r0, #0]
 801cb2c:	4669      	mov	r1, sp
 801cb2e:	685b      	ldr	r3, [r3, #4]
 801cb30:	4798      	blx	r3
 801cb32:	eba8 0606 	sub.w	r6, r8, r6
 801cb36:	2300      	movs	r3, #0
 801cb38:	1bef      	subs	r7, r5, r7
 801cb3a:	2001      	movs	r0, #1
 801cb3c:	8123      	strh	r3, [r4, #8]
 801cb3e:	8166      	strh	r6, [r4, #10]
 801cb40:	81a7      	strh	r7, [r4, #12]
 801cb42:	f8a4 8004 	strh.w	r8, [r4, #4]
 801cb46:	80e5      	strh	r5, [r4, #6]
 801cb48:	73a0      	strb	r0, [r4, #14]
 801cb4a:	b004      	add	sp, #16
 801cb4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cb50:	08020874 	.word	0x08020874

0801cb54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801cb54:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cb56:	461e      	mov	r6, r3
 801cb58:	1e4b      	subs	r3, r1, #1
 801cb5a:	2b01      	cmp	r3, #1
 801cb5c:	b085      	sub	sp, #20
 801cb5e:	4604      	mov	r4, r0
 801cb60:	460d      	mov	r5, r1
 801cb62:	4617      	mov	r7, r2
 801cb64:	d84b      	bhi.n	801cbfe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801cb66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801cb6a:	1cd3      	adds	r3, r2, #3
 801cb6c:	b29b      	uxth	r3, r3
 801cb6e:	2b06      	cmp	r3, #6
 801cb70:	d916      	bls.n	801cba0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801cb72:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801cc14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801cb76:	f8cd c004 	str.w	ip, [sp, #4]
 801cb7a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cb7e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cb82:	6900      	ldr	r0, [r0, #16]
 801cb84:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cb88:	f04f 0c00 	mov.w	ip, #0
 801cb8c:	f88d c008 	strb.w	ip, [sp, #8]
 801cb90:	f8ad 200a 	strh.w	r2, [sp, #10]
 801cb94:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cb98:	6803      	ldr	r3, [r0, #0]
 801cb9a:	a901      	add	r1, sp, #4
 801cb9c:	689b      	ldr	r3, [r3, #8]
 801cb9e:	4798      	blx	r3
 801cba0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801cba4:	1cd3      	adds	r3, r2, #3
 801cba6:	b29b      	uxth	r3, r3
 801cba8:	2b06      	cmp	r3, #6
 801cbaa:	d916      	bls.n	801cbda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cbac:	f8df c064 	ldr.w	ip, [pc, #100]	; 801cc14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801cbb0:	f8cd c004 	str.w	ip, [sp, #4]
 801cbb4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cbb8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cbbc:	6920      	ldr	r0, [r4, #16]
 801cbbe:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cbc2:	f04f 0c01 	mov.w	ip, #1
 801cbc6:	f88d c008 	strb.w	ip, [sp, #8]
 801cbca:	f8ad 200a 	strh.w	r2, [sp, #10]
 801cbce:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cbd2:	6803      	ldr	r3, [r0, #0]
 801cbd4:	a901      	add	r1, sp, #4
 801cbd6:	689b      	ldr	r3, [r3, #8]
 801cbd8:	4798      	blx	r3
 801cbda:	4b0d      	ldr	r3, [pc, #52]	; (801cc10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801cbdc:	9301      	str	r3, [sp, #4]
 801cbde:	6920      	ldr	r0, [r4, #16]
 801cbe0:	f88d 5008 	strb.w	r5, [sp, #8]
 801cbe4:	2300      	movs	r3, #0
 801cbe6:	f8ad 700a 	strh.w	r7, [sp, #10]
 801cbea:	f8ad 600c 	strh.w	r6, [sp, #12]
 801cbee:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cbf2:	6803      	ldr	r3, [r0, #0]
 801cbf4:	a901      	add	r1, sp, #4
 801cbf6:	681b      	ldr	r3, [r3, #0]
 801cbf8:	4798      	blx	r3
 801cbfa:	b005      	add	sp, #20
 801cbfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cbfe:	2900      	cmp	r1, #0
 801cc00:	d1eb      	bne.n	801cbda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cc02:	80a2      	strh	r2, [r4, #4]
 801cc04:	80c6      	strh	r6, [r0, #6]
 801cc06:	60a1      	str	r1, [r4, #8]
 801cc08:	81a1      	strh	r1, [r4, #12]
 801cc0a:	73a1      	strb	r1, [r4, #14]
 801cc0c:	e7e5      	b.n	801cbda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cc0e:	bf00      	nop
 801cc10:	08020860 	.word	0x08020860
 801cc14:	08020888 	.word	0x08020888

0801cc18 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801cc18:	b570      	push	{r4, r5, r6, lr}
 801cc1a:	790b      	ldrb	r3, [r1, #4]
 801cc1c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801cc20:	2b00      	cmp	r3, #0
 801cc22:	bf0c      	ite	eq
 801cc24:	2301      	moveq	r3, #1
 801cc26:	2300      	movne	r3, #0
 801cc28:	4604      	mov	r4, r0
 801cc2a:	460e      	mov	r6, r1
 801cc2c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801cc30:	d109      	bne.n	801cc46 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801cc32:	b14d      	cbz	r5, 801cc48 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801cc34:	7933      	ldrb	r3, [r6, #4]
 801cc36:	2b01      	cmp	r3, #1
 801cc38:	d10c      	bne.n	801cc54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cc3a:	6823      	ldr	r3, [r4, #0]
 801cc3c:	4620      	mov	r0, r4
 801cc3e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801cc40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cc44:	4718      	bx	r3
 801cc46:	b12d      	cbz	r5, 801cc54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cc48:	6823      	ldr	r3, [r4, #0]
 801cc4a:	4620      	mov	r0, r4
 801cc4c:	695b      	ldr	r3, [r3, #20]
 801cc4e:	4798      	blx	r3
 801cc50:	2d00      	cmp	r5, #0
 801cc52:	d1ef      	bne.n	801cc34 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801cc54:	bd70      	pop	{r4, r5, r6, pc}

0801cc56 <__aeabi_atexit>:
 801cc56:	460b      	mov	r3, r1
 801cc58:	4601      	mov	r1, r0
 801cc5a:	4618      	mov	r0, r3
 801cc5c:	f000 b852 	b.w	801cd04 <__cxa_atexit>

0801cc60 <_ZdlPvj>:
 801cc60:	f000 b812 	b.w	801cc88 <_ZdlPv>

0801cc64 <__cxa_guard_acquire>:
 801cc64:	6803      	ldr	r3, [r0, #0]
 801cc66:	07db      	lsls	r3, r3, #31
 801cc68:	d406      	bmi.n	801cc78 <__cxa_guard_acquire+0x14>
 801cc6a:	7843      	ldrb	r3, [r0, #1]
 801cc6c:	b103      	cbz	r3, 801cc70 <__cxa_guard_acquire+0xc>
 801cc6e:	deff      	udf	#255	; 0xff
 801cc70:	2301      	movs	r3, #1
 801cc72:	7043      	strb	r3, [r0, #1]
 801cc74:	4618      	mov	r0, r3
 801cc76:	4770      	bx	lr
 801cc78:	2000      	movs	r0, #0
 801cc7a:	4770      	bx	lr

0801cc7c <__cxa_guard_release>:
 801cc7c:	2301      	movs	r3, #1
 801cc7e:	6003      	str	r3, [r0, #0]
 801cc80:	4770      	bx	lr

0801cc82 <__cxa_pure_virtual>:
 801cc82:	b508      	push	{r3, lr}
 801cc84:	f000 f80e 	bl	801cca4 <_ZSt9terminatev>

0801cc88 <_ZdlPv>:
 801cc88:	f000 b88e 	b.w	801cda8 <free>

0801cc8c <_ZN10__cxxabiv111__terminateEPFvvE>:
 801cc8c:	b508      	push	{r3, lr}
 801cc8e:	4780      	blx	r0
 801cc90:	f000 f80d 	bl	801ccae <abort>

0801cc94 <_ZSt13get_terminatev>:
 801cc94:	4b02      	ldr	r3, [pc, #8]	; (801cca0 <_ZSt13get_terminatev+0xc>)
 801cc96:	6818      	ldr	r0, [r3, #0]
 801cc98:	f3bf 8f5b 	dmb	ish
 801cc9c:	4770      	bx	lr
 801cc9e:	bf00      	nop
 801cca0:	200000d4 	.word	0x200000d4

0801cca4 <_ZSt9terminatev>:
 801cca4:	b508      	push	{r3, lr}
 801cca6:	f7ff fff5 	bl	801cc94 <_ZSt13get_terminatev>
 801ccaa:	f7ff ffef 	bl	801cc8c <_ZN10__cxxabiv111__terminateEPFvvE>

0801ccae <abort>:
 801ccae:	b508      	push	{r3, lr}
 801ccb0:	2006      	movs	r0, #6
 801ccb2:	f000 fc9d 	bl	801d5f0 <raise>
 801ccb6:	2001      	movs	r0, #1
 801ccb8:	f7e5 f972 	bl	8001fa0 <_exit>

0801ccbc <__assert_func>:
 801ccbc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801ccbe:	4614      	mov	r4, r2
 801ccc0:	461a      	mov	r2, r3
 801ccc2:	4b09      	ldr	r3, [pc, #36]	; (801cce8 <__assert_func+0x2c>)
 801ccc4:	681b      	ldr	r3, [r3, #0]
 801ccc6:	4605      	mov	r5, r0
 801ccc8:	68d8      	ldr	r0, [r3, #12]
 801ccca:	b14c      	cbz	r4, 801cce0 <__assert_func+0x24>
 801cccc:	4b07      	ldr	r3, [pc, #28]	; (801ccec <__assert_func+0x30>)
 801ccce:	9100      	str	r1, [sp, #0]
 801ccd0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801ccd4:	4906      	ldr	r1, [pc, #24]	; (801ccf0 <__assert_func+0x34>)
 801ccd6:	462b      	mov	r3, r5
 801ccd8:	f000 f828 	bl	801cd2c <fiprintf>
 801ccdc:	f7ff ffe7 	bl	801ccae <abort>
 801cce0:	4b04      	ldr	r3, [pc, #16]	; (801ccf4 <__assert_func+0x38>)
 801cce2:	461c      	mov	r4, r3
 801cce4:	e7f3      	b.n	801ccce <__assert_func+0x12>
 801cce6:	bf00      	nop
 801cce8:	200000d8 	.word	0x200000d8
 801ccec:	08021c44 	.word	0x08021c44
 801ccf0:	08021c51 	.word	0x08021c51
 801ccf4:	08021c7f 	.word	0x08021c7f

0801ccf8 <atexit>:
 801ccf8:	2300      	movs	r3, #0
 801ccfa:	4601      	mov	r1, r0
 801ccfc:	461a      	mov	r2, r3
 801ccfe:	4618      	mov	r0, r3
 801cd00:	f000 bd52 	b.w	801d7a8 <__register_exitproc>

0801cd04 <__cxa_atexit>:
 801cd04:	b510      	push	{r4, lr}
 801cd06:	4c05      	ldr	r4, [pc, #20]	; (801cd1c <__cxa_atexit+0x18>)
 801cd08:	4613      	mov	r3, r2
 801cd0a:	b12c      	cbz	r4, 801cd18 <__cxa_atexit+0x14>
 801cd0c:	460a      	mov	r2, r1
 801cd0e:	4601      	mov	r1, r0
 801cd10:	2002      	movs	r0, #2
 801cd12:	f000 fd49 	bl	801d7a8 <__register_exitproc>
 801cd16:	bd10      	pop	{r4, pc}
 801cd18:	4620      	mov	r0, r4
 801cd1a:	e7fc      	b.n	801cd16 <__cxa_atexit+0x12>
 801cd1c:	0801d7a9 	.word	0x0801d7a9

0801cd20 <__errno>:
 801cd20:	4b01      	ldr	r3, [pc, #4]	; (801cd28 <__errno+0x8>)
 801cd22:	6818      	ldr	r0, [r3, #0]
 801cd24:	4770      	bx	lr
 801cd26:	bf00      	nop
 801cd28:	200000d8 	.word	0x200000d8

0801cd2c <fiprintf>:
 801cd2c:	b40e      	push	{r1, r2, r3}
 801cd2e:	b503      	push	{r0, r1, lr}
 801cd30:	4601      	mov	r1, r0
 801cd32:	ab03      	add	r3, sp, #12
 801cd34:	4805      	ldr	r0, [pc, #20]	; (801cd4c <fiprintf+0x20>)
 801cd36:	f853 2b04 	ldr.w	r2, [r3], #4
 801cd3a:	6800      	ldr	r0, [r0, #0]
 801cd3c:	9301      	str	r3, [sp, #4]
 801cd3e:	f000 f95b 	bl	801cff8 <_vfiprintf_r>
 801cd42:	b002      	add	sp, #8
 801cd44:	f85d eb04 	ldr.w	lr, [sp], #4
 801cd48:	b003      	add	sp, #12
 801cd4a:	4770      	bx	lr
 801cd4c:	200000d8 	.word	0x200000d8

0801cd50 <__libc_init_array>:
 801cd50:	b570      	push	{r4, r5, r6, lr}
 801cd52:	4d0d      	ldr	r5, [pc, #52]	; (801cd88 <__libc_init_array+0x38>)
 801cd54:	4c0d      	ldr	r4, [pc, #52]	; (801cd8c <__libc_init_array+0x3c>)
 801cd56:	1b64      	subs	r4, r4, r5
 801cd58:	10a4      	asrs	r4, r4, #2
 801cd5a:	2600      	movs	r6, #0
 801cd5c:	42a6      	cmp	r6, r4
 801cd5e:	d109      	bne.n	801cd74 <__libc_init_array+0x24>
 801cd60:	4d0b      	ldr	r5, [pc, #44]	; (801cd90 <__libc_init_array+0x40>)
 801cd62:	4c0c      	ldr	r4, [pc, #48]	; (801cd94 <__libc_init_array+0x44>)
 801cd64:	f001 f85a 	bl	801de1c <_init>
 801cd68:	1b64      	subs	r4, r4, r5
 801cd6a:	10a4      	asrs	r4, r4, #2
 801cd6c:	2600      	movs	r6, #0
 801cd6e:	42a6      	cmp	r6, r4
 801cd70:	d105      	bne.n	801cd7e <__libc_init_array+0x2e>
 801cd72:	bd70      	pop	{r4, r5, r6, pc}
 801cd74:	f855 3b04 	ldr.w	r3, [r5], #4
 801cd78:	4798      	blx	r3
 801cd7a:	3601      	adds	r6, #1
 801cd7c:	e7ee      	b.n	801cd5c <__libc_init_array+0xc>
 801cd7e:	f855 3b04 	ldr.w	r3, [r5], #4
 801cd82:	4798      	blx	r3
 801cd84:	3601      	adds	r6, #1
 801cd86:	e7f2      	b.n	801cd6e <__libc_init_array+0x1e>
 801cd88:	08021d3c 	.word	0x08021d3c
 801cd8c:	08021d3c 	.word	0x08021d3c
 801cd90:	08021d3c 	.word	0x08021d3c
 801cd94:	08021d54 	.word	0x08021d54

0801cd98 <malloc>:
 801cd98:	4b02      	ldr	r3, [pc, #8]	; (801cda4 <malloc+0xc>)
 801cd9a:	4601      	mov	r1, r0
 801cd9c:	6818      	ldr	r0, [r3, #0]
 801cd9e:	f000 b88d 	b.w	801cebc <_malloc_r>
 801cda2:	bf00      	nop
 801cda4:	200000d8 	.word	0x200000d8

0801cda8 <free>:
 801cda8:	4b02      	ldr	r3, [pc, #8]	; (801cdb4 <free+0xc>)
 801cdaa:	4601      	mov	r1, r0
 801cdac:	6818      	ldr	r0, [r3, #0]
 801cdae:	f000 b819 	b.w	801cde4 <_free_r>
 801cdb2:	bf00      	nop
 801cdb4:	200000d8 	.word	0x200000d8

0801cdb8 <memcpy>:
 801cdb8:	440a      	add	r2, r1
 801cdba:	4291      	cmp	r1, r2
 801cdbc:	f100 33ff 	add.w	r3, r0, #4294967295
 801cdc0:	d100      	bne.n	801cdc4 <memcpy+0xc>
 801cdc2:	4770      	bx	lr
 801cdc4:	b510      	push	{r4, lr}
 801cdc6:	f811 4b01 	ldrb.w	r4, [r1], #1
 801cdca:	f803 4f01 	strb.w	r4, [r3, #1]!
 801cdce:	4291      	cmp	r1, r2
 801cdd0:	d1f9      	bne.n	801cdc6 <memcpy+0xe>
 801cdd2:	bd10      	pop	{r4, pc}

0801cdd4 <memset>:
 801cdd4:	4402      	add	r2, r0
 801cdd6:	4603      	mov	r3, r0
 801cdd8:	4293      	cmp	r3, r2
 801cdda:	d100      	bne.n	801cdde <memset+0xa>
 801cddc:	4770      	bx	lr
 801cdde:	f803 1b01 	strb.w	r1, [r3], #1
 801cde2:	e7f9      	b.n	801cdd8 <memset+0x4>

0801cde4 <_free_r>:
 801cde4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cde6:	2900      	cmp	r1, #0
 801cde8:	d044      	beq.n	801ce74 <_free_r+0x90>
 801cdea:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801cdee:	9001      	str	r0, [sp, #4]
 801cdf0:	2b00      	cmp	r3, #0
 801cdf2:	f1a1 0404 	sub.w	r4, r1, #4
 801cdf6:	bfb8      	it	lt
 801cdf8:	18e4      	addlt	r4, r4, r3
 801cdfa:	f000 ff57 	bl	801dcac <__malloc_lock>
 801cdfe:	4a1e      	ldr	r2, [pc, #120]	; (801ce78 <_free_r+0x94>)
 801ce00:	9801      	ldr	r0, [sp, #4]
 801ce02:	6813      	ldr	r3, [r2, #0]
 801ce04:	b933      	cbnz	r3, 801ce14 <_free_r+0x30>
 801ce06:	6063      	str	r3, [r4, #4]
 801ce08:	6014      	str	r4, [r2, #0]
 801ce0a:	b003      	add	sp, #12
 801ce0c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ce10:	f000 bf52 	b.w	801dcb8 <__malloc_unlock>
 801ce14:	42a3      	cmp	r3, r4
 801ce16:	d908      	bls.n	801ce2a <_free_r+0x46>
 801ce18:	6825      	ldr	r5, [r4, #0]
 801ce1a:	1961      	adds	r1, r4, r5
 801ce1c:	428b      	cmp	r3, r1
 801ce1e:	bf01      	itttt	eq
 801ce20:	6819      	ldreq	r1, [r3, #0]
 801ce22:	685b      	ldreq	r3, [r3, #4]
 801ce24:	1949      	addeq	r1, r1, r5
 801ce26:	6021      	streq	r1, [r4, #0]
 801ce28:	e7ed      	b.n	801ce06 <_free_r+0x22>
 801ce2a:	461a      	mov	r2, r3
 801ce2c:	685b      	ldr	r3, [r3, #4]
 801ce2e:	b10b      	cbz	r3, 801ce34 <_free_r+0x50>
 801ce30:	42a3      	cmp	r3, r4
 801ce32:	d9fa      	bls.n	801ce2a <_free_r+0x46>
 801ce34:	6811      	ldr	r1, [r2, #0]
 801ce36:	1855      	adds	r5, r2, r1
 801ce38:	42a5      	cmp	r5, r4
 801ce3a:	d10b      	bne.n	801ce54 <_free_r+0x70>
 801ce3c:	6824      	ldr	r4, [r4, #0]
 801ce3e:	4421      	add	r1, r4
 801ce40:	1854      	adds	r4, r2, r1
 801ce42:	42a3      	cmp	r3, r4
 801ce44:	6011      	str	r1, [r2, #0]
 801ce46:	d1e0      	bne.n	801ce0a <_free_r+0x26>
 801ce48:	681c      	ldr	r4, [r3, #0]
 801ce4a:	685b      	ldr	r3, [r3, #4]
 801ce4c:	6053      	str	r3, [r2, #4]
 801ce4e:	4421      	add	r1, r4
 801ce50:	6011      	str	r1, [r2, #0]
 801ce52:	e7da      	b.n	801ce0a <_free_r+0x26>
 801ce54:	d902      	bls.n	801ce5c <_free_r+0x78>
 801ce56:	230c      	movs	r3, #12
 801ce58:	6003      	str	r3, [r0, #0]
 801ce5a:	e7d6      	b.n	801ce0a <_free_r+0x26>
 801ce5c:	6825      	ldr	r5, [r4, #0]
 801ce5e:	1961      	adds	r1, r4, r5
 801ce60:	428b      	cmp	r3, r1
 801ce62:	bf04      	itt	eq
 801ce64:	6819      	ldreq	r1, [r3, #0]
 801ce66:	685b      	ldreq	r3, [r3, #4]
 801ce68:	6063      	str	r3, [r4, #4]
 801ce6a:	bf04      	itt	eq
 801ce6c:	1949      	addeq	r1, r1, r5
 801ce6e:	6021      	streq	r1, [r4, #0]
 801ce70:	6054      	str	r4, [r2, #4]
 801ce72:	e7ca      	b.n	801ce0a <_free_r+0x26>
 801ce74:	b003      	add	sp, #12
 801ce76:	bd30      	pop	{r4, r5, pc}
 801ce78:	2000a908 	.word	0x2000a908

0801ce7c <sbrk_aligned>:
 801ce7c:	b570      	push	{r4, r5, r6, lr}
 801ce7e:	4e0e      	ldr	r6, [pc, #56]	; (801ceb8 <sbrk_aligned+0x3c>)
 801ce80:	460c      	mov	r4, r1
 801ce82:	6831      	ldr	r1, [r6, #0]
 801ce84:	4605      	mov	r5, r0
 801ce86:	b911      	cbnz	r1, 801ce8e <sbrk_aligned+0x12>
 801ce88:	f000 fb7a 	bl	801d580 <_sbrk_r>
 801ce8c:	6030      	str	r0, [r6, #0]
 801ce8e:	4621      	mov	r1, r4
 801ce90:	4628      	mov	r0, r5
 801ce92:	f000 fb75 	bl	801d580 <_sbrk_r>
 801ce96:	1c43      	adds	r3, r0, #1
 801ce98:	d00a      	beq.n	801ceb0 <sbrk_aligned+0x34>
 801ce9a:	1cc4      	adds	r4, r0, #3
 801ce9c:	f024 0403 	bic.w	r4, r4, #3
 801cea0:	42a0      	cmp	r0, r4
 801cea2:	d007      	beq.n	801ceb4 <sbrk_aligned+0x38>
 801cea4:	1a21      	subs	r1, r4, r0
 801cea6:	4628      	mov	r0, r5
 801cea8:	f000 fb6a 	bl	801d580 <_sbrk_r>
 801ceac:	3001      	adds	r0, #1
 801ceae:	d101      	bne.n	801ceb4 <sbrk_aligned+0x38>
 801ceb0:	f04f 34ff 	mov.w	r4, #4294967295
 801ceb4:	4620      	mov	r0, r4
 801ceb6:	bd70      	pop	{r4, r5, r6, pc}
 801ceb8:	2000a90c 	.word	0x2000a90c

0801cebc <_malloc_r>:
 801cebc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cec0:	1ccd      	adds	r5, r1, #3
 801cec2:	f025 0503 	bic.w	r5, r5, #3
 801cec6:	3508      	adds	r5, #8
 801cec8:	2d0c      	cmp	r5, #12
 801ceca:	bf38      	it	cc
 801cecc:	250c      	movcc	r5, #12
 801cece:	2d00      	cmp	r5, #0
 801ced0:	4607      	mov	r7, r0
 801ced2:	db01      	blt.n	801ced8 <_malloc_r+0x1c>
 801ced4:	42a9      	cmp	r1, r5
 801ced6:	d905      	bls.n	801cee4 <_malloc_r+0x28>
 801ced8:	230c      	movs	r3, #12
 801ceda:	603b      	str	r3, [r7, #0]
 801cedc:	2600      	movs	r6, #0
 801cede:	4630      	mov	r0, r6
 801cee0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cee4:	4e2e      	ldr	r6, [pc, #184]	; (801cfa0 <_malloc_r+0xe4>)
 801cee6:	f000 fee1 	bl	801dcac <__malloc_lock>
 801ceea:	6833      	ldr	r3, [r6, #0]
 801ceec:	461c      	mov	r4, r3
 801ceee:	bb34      	cbnz	r4, 801cf3e <_malloc_r+0x82>
 801cef0:	4629      	mov	r1, r5
 801cef2:	4638      	mov	r0, r7
 801cef4:	f7ff ffc2 	bl	801ce7c <sbrk_aligned>
 801cef8:	1c43      	adds	r3, r0, #1
 801cefa:	4604      	mov	r4, r0
 801cefc:	d14d      	bne.n	801cf9a <_malloc_r+0xde>
 801cefe:	6834      	ldr	r4, [r6, #0]
 801cf00:	4626      	mov	r6, r4
 801cf02:	2e00      	cmp	r6, #0
 801cf04:	d140      	bne.n	801cf88 <_malloc_r+0xcc>
 801cf06:	6823      	ldr	r3, [r4, #0]
 801cf08:	4631      	mov	r1, r6
 801cf0a:	4638      	mov	r0, r7
 801cf0c:	eb04 0803 	add.w	r8, r4, r3
 801cf10:	f000 fb36 	bl	801d580 <_sbrk_r>
 801cf14:	4580      	cmp	r8, r0
 801cf16:	d13a      	bne.n	801cf8e <_malloc_r+0xd2>
 801cf18:	6821      	ldr	r1, [r4, #0]
 801cf1a:	3503      	adds	r5, #3
 801cf1c:	1a6d      	subs	r5, r5, r1
 801cf1e:	f025 0503 	bic.w	r5, r5, #3
 801cf22:	3508      	adds	r5, #8
 801cf24:	2d0c      	cmp	r5, #12
 801cf26:	bf38      	it	cc
 801cf28:	250c      	movcc	r5, #12
 801cf2a:	4629      	mov	r1, r5
 801cf2c:	4638      	mov	r0, r7
 801cf2e:	f7ff ffa5 	bl	801ce7c <sbrk_aligned>
 801cf32:	3001      	adds	r0, #1
 801cf34:	d02b      	beq.n	801cf8e <_malloc_r+0xd2>
 801cf36:	6823      	ldr	r3, [r4, #0]
 801cf38:	442b      	add	r3, r5
 801cf3a:	6023      	str	r3, [r4, #0]
 801cf3c:	e00e      	b.n	801cf5c <_malloc_r+0xa0>
 801cf3e:	6822      	ldr	r2, [r4, #0]
 801cf40:	1b52      	subs	r2, r2, r5
 801cf42:	d41e      	bmi.n	801cf82 <_malloc_r+0xc6>
 801cf44:	2a0b      	cmp	r2, #11
 801cf46:	d916      	bls.n	801cf76 <_malloc_r+0xba>
 801cf48:	1961      	adds	r1, r4, r5
 801cf4a:	42a3      	cmp	r3, r4
 801cf4c:	6025      	str	r5, [r4, #0]
 801cf4e:	bf18      	it	ne
 801cf50:	6059      	strne	r1, [r3, #4]
 801cf52:	6863      	ldr	r3, [r4, #4]
 801cf54:	bf08      	it	eq
 801cf56:	6031      	streq	r1, [r6, #0]
 801cf58:	5162      	str	r2, [r4, r5]
 801cf5a:	604b      	str	r3, [r1, #4]
 801cf5c:	4638      	mov	r0, r7
 801cf5e:	f104 060b 	add.w	r6, r4, #11
 801cf62:	f000 fea9 	bl	801dcb8 <__malloc_unlock>
 801cf66:	f026 0607 	bic.w	r6, r6, #7
 801cf6a:	1d23      	adds	r3, r4, #4
 801cf6c:	1af2      	subs	r2, r6, r3
 801cf6e:	d0b6      	beq.n	801cede <_malloc_r+0x22>
 801cf70:	1b9b      	subs	r3, r3, r6
 801cf72:	50a3      	str	r3, [r4, r2]
 801cf74:	e7b3      	b.n	801cede <_malloc_r+0x22>
 801cf76:	6862      	ldr	r2, [r4, #4]
 801cf78:	42a3      	cmp	r3, r4
 801cf7a:	bf0c      	ite	eq
 801cf7c:	6032      	streq	r2, [r6, #0]
 801cf7e:	605a      	strne	r2, [r3, #4]
 801cf80:	e7ec      	b.n	801cf5c <_malloc_r+0xa0>
 801cf82:	4623      	mov	r3, r4
 801cf84:	6864      	ldr	r4, [r4, #4]
 801cf86:	e7b2      	b.n	801ceee <_malloc_r+0x32>
 801cf88:	4634      	mov	r4, r6
 801cf8a:	6876      	ldr	r6, [r6, #4]
 801cf8c:	e7b9      	b.n	801cf02 <_malloc_r+0x46>
 801cf8e:	230c      	movs	r3, #12
 801cf90:	603b      	str	r3, [r7, #0]
 801cf92:	4638      	mov	r0, r7
 801cf94:	f000 fe90 	bl	801dcb8 <__malloc_unlock>
 801cf98:	e7a1      	b.n	801cede <_malloc_r+0x22>
 801cf9a:	6025      	str	r5, [r4, #0]
 801cf9c:	e7de      	b.n	801cf5c <_malloc_r+0xa0>
 801cf9e:	bf00      	nop
 801cfa0:	2000a908 	.word	0x2000a908

0801cfa4 <__sfputc_r>:
 801cfa4:	6893      	ldr	r3, [r2, #8]
 801cfa6:	3b01      	subs	r3, #1
 801cfa8:	2b00      	cmp	r3, #0
 801cfaa:	b410      	push	{r4}
 801cfac:	6093      	str	r3, [r2, #8]
 801cfae:	da08      	bge.n	801cfc2 <__sfputc_r+0x1e>
 801cfb0:	6994      	ldr	r4, [r2, #24]
 801cfb2:	42a3      	cmp	r3, r4
 801cfb4:	db01      	blt.n	801cfba <__sfputc_r+0x16>
 801cfb6:	290a      	cmp	r1, #10
 801cfb8:	d103      	bne.n	801cfc2 <__sfputc_r+0x1e>
 801cfba:	f85d 4b04 	ldr.w	r4, [sp], #4
 801cfbe:	f000 bb33 	b.w	801d628 <__swbuf_r>
 801cfc2:	6813      	ldr	r3, [r2, #0]
 801cfc4:	1c58      	adds	r0, r3, #1
 801cfc6:	6010      	str	r0, [r2, #0]
 801cfc8:	7019      	strb	r1, [r3, #0]
 801cfca:	4608      	mov	r0, r1
 801cfcc:	f85d 4b04 	ldr.w	r4, [sp], #4
 801cfd0:	4770      	bx	lr

0801cfd2 <__sfputs_r>:
 801cfd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cfd4:	4606      	mov	r6, r0
 801cfd6:	460f      	mov	r7, r1
 801cfd8:	4614      	mov	r4, r2
 801cfda:	18d5      	adds	r5, r2, r3
 801cfdc:	42ac      	cmp	r4, r5
 801cfde:	d101      	bne.n	801cfe4 <__sfputs_r+0x12>
 801cfe0:	2000      	movs	r0, #0
 801cfe2:	e007      	b.n	801cff4 <__sfputs_r+0x22>
 801cfe4:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cfe8:	463a      	mov	r2, r7
 801cfea:	4630      	mov	r0, r6
 801cfec:	f7ff ffda 	bl	801cfa4 <__sfputc_r>
 801cff0:	1c43      	adds	r3, r0, #1
 801cff2:	d1f3      	bne.n	801cfdc <__sfputs_r+0xa>
 801cff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801cff8 <_vfiprintf_r>:
 801cff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cffc:	460d      	mov	r5, r1
 801cffe:	b09d      	sub	sp, #116	; 0x74
 801d000:	4614      	mov	r4, r2
 801d002:	4698      	mov	r8, r3
 801d004:	4606      	mov	r6, r0
 801d006:	b118      	cbz	r0, 801d010 <_vfiprintf_r+0x18>
 801d008:	6983      	ldr	r3, [r0, #24]
 801d00a:	b90b      	cbnz	r3, 801d010 <_vfiprintf_r+0x18>
 801d00c:	f000 fd48 	bl	801daa0 <__sinit>
 801d010:	4b89      	ldr	r3, [pc, #548]	; (801d238 <_vfiprintf_r+0x240>)
 801d012:	429d      	cmp	r5, r3
 801d014:	d11b      	bne.n	801d04e <_vfiprintf_r+0x56>
 801d016:	6875      	ldr	r5, [r6, #4]
 801d018:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d01a:	07d9      	lsls	r1, r3, #31
 801d01c:	d405      	bmi.n	801d02a <_vfiprintf_r+0x32>
 801d01e:	89ab      	ldrh	r3, [r5, #12]
 801d020:	059a      	lsls	r2, r3, #22
 801d022:	d402      	bmi.n	801d02a <_vfiprintf_r+0x32>
 801d024:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d026:	f000 fdd9 	bl	801dbdc <__retarget_lock_acquire_recursive>
 801d02a:	89ab      	ldrh	r3, [r5, #12]
 801d02c:	071b      	lsls	r3, r3, #28
 801d02e:	d501      	bpl.n	801d034 <_vfiprintf_r+0x3c>
 801d030:	692b      	ldr	r3, [r5, #16]
 801d032:	b9eb      	cbnz	r3, 801d070 <_vfiprintf_r+0x78>
 801d034:	4629      	mov	r1, r5
 801d036:	4630      	mov	r0, r6
 801d038:	f000 fb48 	bl	801d6cc <__swsetup_r>
 801d03c:	b1c0      	cbz	r0, 801d070 <_vfiprintf_r+0x78>
 801d03e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d040:	07dc      	lsls	r4, r3, #31
 801d042:	d50e      	bpl.n	801d062 <_vfiprintf_r+0x6a>
 801d044:	f04f 30ff 	mov.w	r0, #4294967295
 801d048:	b01d      	add	sp, #116	; 0x74
 801d04a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d04e:	4b7b      	ldr	r3, [pc, #492]	; (801d23c <_vfiprintf_r+0x244>)
 801d050:	429d      	cmp	r5, r3
 801d052:	d101      	bne.n	801d058 <_vfiprintf_r+0x60>
 801d054:	68b5      	ldr	r5, [r6, #8]
 801d056:	e7df      	b.n	801d018 <_vfiprintf_r+0x20>
 801d058:	4b79      	ldr	r3, [pc, #484]	; (801d240 <_vfiprintf_r+0x248>)
 801d05a:	429d      	cmp	r5, r3
 801d05c:	bf08      	it	eq
 801d05e:	68f5      	ldreq	r5, [r6, #12]
 801d060:	e7da      	b.n	801d018 <_vfiprintf_r+0x20>
 801d062:	89ab      	ldrh	r3, [r5, #12]
 801d064:	0598      	lsls	r0, r3, #22
 801d066:	d4ed      	bmi.n	801d044 <_vfiprintf_r+0x4c>
 801d068:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d06a:	f000 fdb9 	bl	801dbe0 <__retarget_lock_release_recursive>
 801d06e:	e7e9      	b.n	801d044 <_vfiprintf_r+0x4c>
 801d070:	2300      	movs	r3, #0
 801d072:	9309      	str	r3, [sp, #36]	; 0x24
 801d074:	2320      	movs	r3, #32
 801d076:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801d07a:	f8cd 800c 	str.w	r8, [sp, #12]
 801d07e:	2330      	movs	r3, #48	; 0x30
 801d080:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801d244 <_vfiprintf_r+0x24c>
 801d084:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801d088:	f04f 0901 	mov.w	r9, #1
 801d08c:	4623      	mov	r3, r4
 801d08e:	469a      	mov	sl, r3
 801d090:	f813 2b01 	ldrb.w	r2, [r3], #1
 801d094:	b10a      	cbz	r2, 801d09a <_vfiprintf_r+0xa2>
 801d096:	2a25      	cmp	r2, #37	; 0x25
 801d098:	d1f9      	bne.n	801d08e <_vfiprintf_r+0x96>
 801d09a:	ebba 0b04 	subs.w	fp, sl, r4
 801d09e:	d00b      	beq.n	801d0b8 <_vfiprintf_r+0xc0>
 801d0a0:	465b      	mov	r3, fp
 801d0a2:	4622      	mov	r2, r4
 801d0a4:	4629      	mov	r1, r5
 801d0a6:	4630      	mov	r0, r6
 801d0a8:	f7ff ff93 	bl	801cfd2 <__sfputs_r>
 801d0ac:	3001      	adds	r0, #1
 801d0ae:	f000 80aa 	beq.w	801d206 <_vfiprintf_r+0x20e>
 801d0b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d0b4:	445a      	add	r2, fp
 801d0b6:	9209      	str	r2, [sp, #36]	; 0x24
 801d0b8:	f89a 3000 	ldrb.w	r3, [sl]
 801d0bc:	2b00      	cmp	r3, #0
 801d0be:	f000 80a2 	beq.w	801d206 <_vfiprintf_r+0x20e>
 801d0c2:	2300      	movs	r3, #0
 801d0c4:	f04f 32ff 	mov.w	r2, #4294967295
 801d0c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801d0cc:	f10a 0a01 	add.w	sl, sl, #1
 801d0d0:	9304      	str	r3, [sp, #16]
 801d0d2:	9307      	str	r3, [sp, #28]
 801d0d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801d0d8:	931a      	str	r3, [sp, #104]	; 0x68
 801d0da:	4654      	mov	r4, sl
 801d0dc:	2205      	movs	r2, #5
 801d0de:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d0e2:	4858      	ldr	r0, [pc, #352]	; (801d244 <_vfiprintf_r+0x24c>)
 801d0e4:	f7e3 f88c 	bl	8000200 <memchr>
 801d0e8:	9a04      	ldr	r2, [sp, #16]
 801d0ea:	b9d8      	cbnz	r0, 801d124 <_vfiprintf_r+0x12c>
 801d0ec:	06d1      	lsls	r1, r2, #27
 801d0ee:	bf44      	itt	mi
 801d0f0:	2320      	movmi	r3, #32
 801d0f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d0f6:	0713      	lsls	r3, r2, #28
 801d0f8:	bf44      	itt	mi
 801d0fa:	232b      	movmi	r3, #43	; 0x2b
 801d0fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d100:	f89a 3000 	ldrb.w	r3, [sl]
 801d104:	2b2a      	cmp	r3, #42	; 0x2a
 801d106:	d015      	beq.n	801d134 <_vfiprintf_r+0x13c>
 801d108:	9a07      	ldr	r2, [sp, #28]
 801d10a:	4654      	mov	r4, sl
 801d10c:	2000      	movs	r0, #0
 801d10e:	f04f 0c0a 	mov.w	ip, #10
 801d112:	4621      	mov	r1, r4
 801d114:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d118:	3b30      	subs	r3, #48	; 0x30
 801d11a:	2b09      	cmp	r3, #9
 801d11c:	d94e      	bls.n	801d1bc <_vfiprintf_r+0x1c4>
 801d11e:	b1b0      	cbz	r0, 801d14e <_vfiprintf_r+0x156>
 801d120:	9207      	str	r2, [sp, #28]
 801d122:	e014      	b.n	801d14e <_vfiprintf_r+0x156>
 801d124:	eba0 0308 	sub.w	r3, r0, r8
 801d128:	fa09 f303 	lsl.w	r3, r9, r3
 801d12c:	4313      	orrs	r3, r2
 801d12e:	9304      	str	r3, [sp, #16]
 801d130:	46a2      	mov	sl, r4
 801d132:	e7d2      	b.n	801d0da <_vfiprintf_r+0xe2>
 801d134:	9b03      	ldr	r3, [sp, #12]
 801d136:	1d19      	adds	r1, r3, #4
 801d138:	681b      	ldr	r3, [r3, #0]
 801d13a:	9103      	str	r1, [sp, #12]
 801d13c:	2b00      	cmp	r3, #0
 801d13e:	bfbb      	ittet	lt
 801d140:	425b      	neglt	r3, r3
 801d142:	f042 0202 	orrlt.w	r2, r2, #2
 801d146:	9307      	strge	r3, [sp, #28]
 801d148:	9307      	strlt	r3, [sp, #28]
 801d14a:	bfb8      	it	lt
 801d14c:	9204      	strlt	r2, [sp, #16]
 801d14e:	7823      	ldrb	r3, [r4, #0]
 801d150:	2b2e      	cmp	r3, #46	; 0x2e
 801d152:	d10c      	bne.n	801d16e <_vfiprintf_r+0x176>
 801d154:	7863      	ldrb	r3, [r4, #1]
 801d156:	2b2a      	cmp	r3, #42	; 0x2a
 801d158:	d135      	bne.n	801d1c6 <_vfiprintf_r+0x1ce>
 801d15a:	9b03      	ldr	r3, [sp, #12]
 801d15c:	1d1a      	adds	r2, r3, #4
 801d15e:	681b      	ldr	r3, [r3, #0]
 801d160:	9203      	str	r2, [sp, #12]
 801d162:	2b00      	cmp	r3, #0
 801d164:	bfb8      	it	lt
 801d166:	f04f 33ff 	movlt.w	r3, #4294967295
 801d16a:	3402      	adds	r4, #2
 801d16c:	9305      	str	r3, [sp, #20]
 801d16e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801d254 <_vfiprintf_r+0x25c>
 801d172:	7821      	ldrb	r1, [r4, #0]
 801d174:	2203      	movs	r2, #3
 801d176:	4650      	mov	r0, sl
 801d178:	f7e3 f842 	bl	8000200 <memchr>
 801d17c:	b140      	cbz	r0, 801d190 <_vfiprintf_r+0x198>
 801d17e:	2340      	movs	r3, #64	; 0x40
 801d180:	eba0 000a 	sub.w	r0, r0, sl
 801d184:	fa03 f000 	lsl.w	r0, r3, r0
 801d188:	9b04      	ldr	r3, [sp, #16]
 801d18a:	4303      	orrs	r3, r0
 801d18c:	3401      	adds	r4, #1
 801d18e:	9304      	str	r3, [sp, #16]
 801d190:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d194:	482c      	ldr	r0, [pc, #176]	; (801d248 <_vfiprintf_r+0x250>)
 801d196:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801d19a:	2206      	movs	r2, #6
 801d19c:	f7e3 f830 	bl	8000200 <memchr>
 801d1a0:	2800      	cmp	r0, #0
 801d1a2:	d03f      	beq.n	801d224 <_vfiprintf_r+0x22c>
 801d1a4:	4b29      	ldr	r3, [pc, #164]	; (801d24c <_vfiprintf_r+0x254>)
 801d1a6:	bb1b      	cbnz	r3, 801d1f0 <_vfiprintf_r+0x1f8>
 801d1a8:	9b03      	ldr	r3, [sp, #12]
 801d1aa:	3307      	adds	r3, #7
 801d1ac:	f023 0307 	bic.w	r3, r3, #7
 801d1b0:	3308      	adds	r3, #8
 801d1b2:	9303      	str	r3, [sp, #12]
 801d1b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d1b6:	443b      	add	r3, r7
 801d1b8:	9309      	str	r3, [sp, #36]	; 0x24
 801d1ba:	e767      	b.n	801d08c <_vfiprintf_r+0x94>
 801d1bc:	fb0c 3202 	mla	r2, ip, r2, r3
 801d1c0:	460c      	mov	r4, r1
 801d1c2:	2001      	movs	r0, #1
 801d1c4:	e7a5      	b.n	801d112 <_vfiprintf_r+0x11a>
 801d1c6:	2300      	movs	r3, #0
 801d1c8:	3401      	adds	r4, #1
 801d1ca:	9305      	str	r3, [sp, #20]
 801d1cc:	4619      	mov	r1, r3
 801d1ce:	f04f 0c0a 	mov.w	ip, #10
 801d1d2:	4620      	mov	r0, r4
 801d1d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 801d1d8:	3a30      	subs	r2, #48	; 0x30
 801d1da:	2a09      	cmp	r2, #9
 801d1dc:	d903      	bls.n	801d1e6 <_vfiprintf_r+0x1ee>
 801d1de:	2b00      	cmp	r3, #0
 801d1e0:	d0c5      	beq.n	801d16e <_vfiprintf_r+0x176>
 801d1e2:	9105      	str	r1, [sp, #20]
 801d1e4:	e7c3      	b.n	801d16e <_vfiprintf_r+0x176>
 801d1e6:	fb0c 2101 	mla	r1, ip, r1, r2
 801d1ea:	4604      	mov	r4, r0
 801d1ec:	2301      	movs	r3, #1
 801d1ee:	e7f0      	b.n	801d1d2 <_vfiprintf_r+0x1da>
 801d1f0:	ab03      	add	r3, sp, #12
 801d1f2:	9300      	str	r3, [sp, #0]
 801d1f4:	462a      	mov	r2, r5
 801d1f6:	4b16      	ldr	r3, [pc, #88]	; (801d250 <_vfiprintf_r+0x258>)
 801d1f8:	a904      	add	r1, sp, #16
 801d1fa:	4630      	mov	r0, r6
 801d1fc:	f3af 8000 	nop.w
 801d200:	4607      	mov	r7, r0
 801d202:	1c78      	adds	r0, r7, #1
 801d204:	d1d6      	bne.n	801d1b4 <_vfiprintf_r+0x1bc>
 801d206:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d208:	07d9      	lsls	r1, r3, #31
 801d20a:	d405      	bmi.n	801d218 <_vfiprintf_r+0x220>
 801d20c:	89ab      	ldrh	r3, [r5, #12]
 801d20e:	059a      	lsls	r2, r3, #22
 801d210:	d402      	bmi.n	801d218 <_vfiprintf_r+0x220>
 801d212:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d214:	f000 fce4 	bl	801dbe0 <__retarget_lock_release_recursive>
 801d218:	89ab      	ldrh	r3, [r5, #12]
 801d21a:	065b      	lsls	r3, r3, #25
 801d21c:	f53f af12 	bmi.w	801d044 <_vfiprintf_r+0x4c>
 801d220:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d222:	e711      	b.n	801d048 <_vfiprintf_r+0x50>
 801d224:	ab03      	add	r3, sp, #12
 801d226:	9300      	str	r3, [sp, #0]
 801d228:	462a      	mov	r2, r5
 801d22a:	4b09      	ldr	r3, [pc, #36]	; (801d250 <_vfiprintf_r+0x258>)
 801d22c:	a904      	add	r1, sp, #16
 801d22e:	4630      	mov	r0, r6
 801d230:	f000 f880 	bl	801d334 <_printf_i>
 801d234:	e7e4      	b.n	801d200 <_vfiprintf_r+0x208>
 801d236:	bf00      	nop
 801d238:	08021cdc 	.word	0x08021cdc
 801d23c:	08021cfc 	.word	0x08021cfc
 801d240:	08021cbc 	.word	0x08021cbc
 801d244:	08021c84 	.word	0x08021c84
 801d248:	08021c8e 	.word	0x08021c8e
 801d24c:	00000000 	.word	0x00000000
 801d250:	0801cfd3 	.word	0x0801cfd3
 801d254:	08021c8a 	.word	0x08021c8a

0801d258 <_printf_common>:
 801d258:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d25c:	4616      	mov	r6, r2
 801d25e:	4699      	mov	r9, r3
 801d260:	688a      	ldr	r2, [r1, #8]
 801d262:	690b      	ldr	r3, [r1, #16]
 801d264:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801d268:	4293      	cmp	r3, r2
 801d26a:	bfb8      	it	lt
 801d26c:	4613      	movlt	r3, r2
 801d26e:	6033      	str	r3, [r6, #0]
 801d270:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801d274:	4607      	mov	r7, r0
 801d276:	460c      	mov	r4, r1
 801d278:	b10a      	cbz	r2, 801d27e <_printf_common+0x26>
 801d27a:	3301      	adds	r3, #1
 801d27c:	6033      	str	r3, [r6, #0]
 801d27e:	6823      	ldr	r3, [r4, #0]
 801d280:	0699      	lsls	r1, r3, #26
 801d282:	bf42      	ittt	mi
 801d284:	6833      	ldrmi	r3, [r6, #0]
 801d286:	3302      	addmi	r3, #2
 801d288:	6033      	strmi	r3, [r6, #0]
 801d28a:	6825      	ldr	r5, [r4, #0]
 801d28c:	f015 0506 	ands.w	r5, r5, #6
 801d290:	d106      	bne.n	801d2a0 <_printf_common+0x48>
 801d292:	f104 0a19 	add.w	sl, r4, #25
 801d296:	68e3      	ldr	r3, [r4, #12]
 801d298:	6832      	ldr	r2, [r6, #0]
 801d29a:	1a9b      	subs	r3, r3, r2
 801d29c:	42ab      	cmp	r3, r5
 801d29e:	dc26      	bgt.n	801d2ee <_printf_common+0x96>
 801d2a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801d2a4:	1e13      	subs	r3, r2, #0
 801d2a6:	6822      	ldr	r2, [r4, #0]
 801d2a8:	bf18      	it	ne
 801d2aa:	2301      	movne	r3, #1
 801d2ac:	0692      	lsls	r2, r2, #26
 801d2ae:	d42b      	bmi.n	801d308 <_printf_common+0xb0>
 801d2b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801d2b4:	4649      	mov	r1, r9
 801d2b6:	4638      	mov	r0, r7
 801d2b8:	47c0      	blx	r8
 801d2ba:	3001      	adds	r0, #1
 801d2bc:	d01e      	beq.n	801d2fc <_printf_common+0xa4>
 801d2be:	6823      	ldr	r3, [r4, #0]
 801d2c0:	68e5      	ldr	r5, [r4, #12]
 801d2c2:	6832      	ldr	r2, [r6, #0]
 801d2c4:	f003 0306 	and.w	r3, r3, #6
 801d2c8:	2b04      	cmp	r3, #4
 801d2ca:	bf08      	it	eq
 801d2cc:	1aad      	subeq	r5, r5, r2
 801d2ce:	68a3      	ldr	r3, [r4, #8]
 801d2d0:	6922      	ldr	r2, [r4, #16]
 801d2d2:	bf0c      	ite	eq
 801d2d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801d2d8:	2500      	movne	r5, #0
 801d2da:	4293      	cmp	r3, r2
 801d2dc:	bfc4      	itt	gt
 801d2de:	1a9b      	subgt	r3, r3, r2
 801d2e0:	18ed      	addgt	r5, r5, r3
 801d2e2:	2600      	movs	r6, #0
 801d2e4:	341a      	adds	r4, #26
 801d2e6:	42b5      	cmp	r5, r6
 801d2e8:	d11a      	bne.n	801d320 <_printf_common+0xc8>
 801d2ea:	2000      	movs	r0, #0
 801d2ec:	e008      	b.n	801d300 <_printf_common+0xa8>
 801d2ee:	2301      	movs	r3, #1
 801d2f0:	4652      	mov	r2, sl
 801d2f2:	4649      	mov	r1, r9
 801d2f4:	4638      	mov	r0, r7
 801d2f6:	47c0      	blx	r8
 801d2f8:	3001      	adds	r0, #1
 801d2fa:	d103      	bne.n	801d304 <_printf_common+0xac>
 801d2fc:	f04f 30ff 	mov.w	r0, #4294967295
 801d300:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d304:	3501      	adds	r5, #1
 801d306:	e7c6      	b.n	801d296 <_printf_common+0x3e>
 801d308:	18e1      	adds	r1, r4, r3
 801d30a:	1c5a      	adds	r2, r3, #1
 801d30c:	2030      	movs	r0, #48	; 0x30
 801d30e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801d312:	4422      	add	r2, r4
 801d314:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801d318:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801d31c:	3302      	adds	r3, #2
 801d31e:	e7c7      	b.n	801d2b0 <_printf_common+0x58>
 801d320:	2301      	movs	r3, #1
 801d322:	4622      	mov	r2, r4
 801d324:	4649      	mov	r1, r9
 801d326:	4638      	mov	r0, r7
 801d328:	47c0      	blx	r8
 801d32a:	3001      	adds	r0, #1
 801d32c:	d0e6      	beq.n	801d2fc <_printf_common+0xa4>
 801d32e:	3601      	adds	r6, #1
 801d330:	e7d9      	b.n	801d2e6 <_printf_common+0x8e>
	...

0801d334 <_printf_i>:
 801d334:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d338:	7e0f      	ldrb	r7, [r1, #24]
 801d33a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d33c:	2f78      	cmp	r7, #120	; 0x78
 801d33e:	4691      	mov	r9, r2
 801d340:	4680      	mov	r8, r0
 801d342:	460c      	mov	r4, r1
 801d344:	469a      	mov	sl, r3
 801d346:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801d34a:	d807      	bhi.n	801d35c <_printf_i+0x28>
 801d34c:	2f62      	cmp	r7, #98	; 0x62
 801d34e:	d80a      	bhi.n	801d366 <_printf_i+0x32>
 801d350:	2f00      	cmp	r7, #0
 801d352:	f000 80d8 	beq.w	801d506 <_printf_i+0x1d2>
 801d356:	2f58      	cmp	r7, #88	; 0x58
 801d358:	f000 80a3 	beq.w	801d4a2 <_printf_i+0x16e>
 801d35c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d360:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801d364:	e03a      	b.n	801d3dc <_printf_i+0xa8>
 801d366:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801d36a:	2b15      	cmp	r3, #21
 801d36c:	d8f6      	bhi.n	801d35c <_printf_i+0x28>
 801d36e:	a101      	add	r1, pc, #4	; (adr r1, 801d374 <_printf_i+0x40>)
 801d370:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801d374:	0801d3cd 	.word	0x0801d3cd
 801d378:	0801d3e1 	.word	0x0801d3e1
 801d37c:	0801d35d 	.word	0x0801d35d
 801d380:	0801d35d 	.word	0x0801d35d
 801d384:	0801d35d 	.word	0x0801d35d
 801d388:	0801d35d 	.word	0x0801d35d
 801d38c:	0801d3e1 	.word	0x0801d3e1
 801d390:	0801d35d 	.word	0x0801d35d
 801d394:	0801d35d 	.word	0x0801d35d
 801d398:	0801d35d 	.word	0x0801d35d
 801d39c:	0801d35d 	.word	0x0801d35d
 801d3a0:	0801d4ed 	.word	0x0801d4ed
 801d3a4:	0801d411 	.word	0x0801d411
 801d3a8:	0801d4cf 	.word	0x0801d4cf
 801d3ac:	0801d35d 	.word	0x0801d35d
 801d3b0:	0801d35d 	.word	0x0801d35d
 801d3b4:	0801d50f 	.word	0x0801d50f
 801d3b8:	0801d35d 	.word	0x0801d35d
 801d3bc:	0801d411 	.word	0x0801d411
 801d3c0:	0801d35d 	.word	0x0801d35d
 801d3c4:	0801d35d 	.word	0x0801d35d
 801d3c8:	0801d4d7 	.word	0x0801d4d7
 801d3cc:	682b      	ldr	r3, [r5, #0]
 801d3ce:	1d1a      	adds	r2, r3, #4
 801d3d0:	681b      	ldr	r3, [r3, #0]
 801d3d2:	602a      	str	r2, [r5, #0]
 801d3d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d3d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801d3dc:	2301      	movs	r3, #1
 801d3de:	e0a3      	b.n	801d528 <_printf_i+0x1f4>
 801d3e0:	6820      	ldr	r0, [r4, #0]
 801d3e2:	6829      	ldr	r1, [r5, #0]
 801d3e4:	0606      	lsls	r6, r0, #24
 801d3e6:	f101 0304 	add.w	r3, r1, #4
 801d3ea:	d50a      	bpl.n	801d402 <_printf_i+0xce>
 801d3ec:	680e      	ldr	r6, [r1, #0]
 801d3ee:	602b      	str	r3, [r5, #0]
 801d3f0:	2e00      	cmp	r6, #0
 801d3f2:	da03      	bge.n	801d3fc <_printf_i+0xc8>
 801d3f4:	232d      	movs	r3, #45	; 0x2d
 801d3f6:	4276      	negs	r6, r6
 801d3f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d3fc:	485e      	ldr	r0, [pc, #376]	; (801d578 <_printf_i+0x244>)
 801d3fe:	230a      	movs	r3, #10
 801d400:	e019      	b.n	801d436 <_printf_i+0x102>
 801d402:	680e      	ldr	r6, [r1, #0]
 801d404:	602b      	str	r3, [r5, #0]
 801d406:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d40a:	bf18      	it	ne
 801d40c:	b236      	sxthne	r6, r6
 801d40e:	e7ef      	b.n	801d3f0 <_printf_i+0xbc>
 801d410:	682b      	ldr	r3, [r5, #0]
 801d412:	6820      	ldr	r0, [r4, #0]
 801d414:	1d19      	adds	r1, r3, #4
 801d416:	6029      	str	r1, [r5, #0]
 801d418:	0601      	lsls	r1, r0, #24
 801d41a:	d501      	bpl.n	801d420 <_printf_i+0xec>
 801d41c:	681e      	ldr	r6, [r3, #0]
 801d41e:	e002      	b.n	801d426 <_printf_i+0xf2>
 801d420:	0646      	lsls	r6, r0, #25
 801d422:	d5fb      	bpl.n	801d41c <_printf_i+0xe8>
 801d424:	881e      	ldrh	r6, [r3, #0]
 801d426:	4854      	ldr	r0, [pc, #336]	; (801d578 <_printf_i+0x244>)
 801d428:	2f6f      	cmp	r7, #111	; 0x6f
 801d42a:	bf0c      	ite	eq
 801d42c:	2308      	moveq	r3, #8
 801d42e:	230a      	movne	r3, #10
 801d430:	2100      	movs	r1, #0
 801d432:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801d436:	6865      	ldr	r5, [r4, #4]
 801d438:	60a5      	str	r5, [r4, #8]
 801d43a:	2d00      	cmp	r5, #0
 801d43c:	bfa2      	ittt	ge
 801d43e:	6821      	ldrge	r1, [r4, #0]
 801d440:	f021 0104 	bicge.w	r1, r1, #4
 801d444:	6021      	strge	r1, [r4, #0]
 801d446:	b90e      	cbnz	r6, 801d44c <_printf_i+0x118>
 801d448:	2d00      	cmp	r5, #0
 801d44a:	d04d      	beq.n	801d4e8 <_printf_i+0x1b4>
 801d44c:	4615      	mov	r5, r2
 801d44e:	fbb6 f1f3 	udiv	r1, r6, r3
 801d452:	fb03 6711 	mls	r7, r3, r1, r6
 801d456:	5dc7      	ldrb	r7, [r0, r7]
 801d458:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801d45c:	4637      	mov	r7, r6
 801d45e:	42bb      	cmp	r3, r7
 801d460:	460e      	mov	r6, r1
 801d462:	d9f4      	bls.n	801d44e <_printf_i+0x11a>
 801d464:	2b08      	cmp	r3, #8
 801d466:	d10b      	bne.n	801d480 <_printf_i+0x14c>
 801d468:	6823      	ldr	r3, [r4, #0]
 801d46a:	07de      	lsls	r6, r3, #31
 801d46c:	d508      	bpl.n	801d480 <_printf_i+0x14c>
 801d46e:	6923      	ldr	r3, [r4, #16]
 801d470:	6861      	ldr	r1, [r4, #4]
 801d472:	4299      	cmp	r1, r3
 801d474:	bfde      	ittt	le
 801d476:	2330      	movle	r3, #48	; 0x30
 801d478:	f805 3c01 	strble.w	r3, [r5, #-1]
 801d47c:	f105 35ff 	addle.w	r5, r5, #4294967295
 801d480:	1b52      	subs	r2, r2, r5
 801d482:	6122      	str	r2, [r4, #16]
 801d484:	f8cd a000 	str.w	sl, [sp]
 801d488:	464b      	mov	r3, r9
 801d48a:	aa03      	add	r2, sp, #12
 801d48c:	4621      	mov	r1, r4
 801d48e:	4640      	mov	r0, r8
 801d490:	f7ff fee2 	bl	801d258 <_printf_common>
 801d494:	3001      	adds	r0, #1
 801d496:	d14c      	bne.n	801d532 <_printf_i+0x1fe>
 801d498:	f04f 30ff 	mov.w	r0, #4294967295
 801d49c:	b004      	add	sp, #16
 801d49e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d4a2:	4835      	ldr	r0, [pc, #212]	; (801d578 <_printf_i+0x244>)
 801d4a4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801d4a8:	6829      	ldr	r1, [r5, #0]
 801d4aa:	6823      	ldr	r3, [r4, #0]
 801d4ac:	f851 6b04 	ldr.w	r6, [r1], #4
 801d4b0:	6029      	str	r1, [r5, #0]
 801d4b2:	061d      	lsls	r5, r3, #24
 801d4b4:	d514      	bpl.n	801d4e0 <_printf_i+0x1ac>
 801d4b6:	07df      	lsls	r7, r3, #31
 801d4b8:	bf44      	itt	mi
 801d4ba:	f043 0320 	orrmi.w	r3, r3, #32
 801d4be:	6023      	strmi	r3, [r4, #0]
 801d4c0:	b91e      	cbnz	r6, 801d4ca <_printf_i+0x196>
 801d4c2:	6823      	ldr	r3, [r4, #0]
 801d4c4:	f023 0320 	bic.w	r3, r3, #32
 801d4c8:	6023      	str	r3, [r4, #0]
 801d4ca:	2310      	movs	r3, #16
 801d4cc:	e7b0      	b.n	801d430 <_printf_i+0xfc>
 801d4ce:	6823      	ldr	r3, [r4, #0]
 801d4d0:	f043 0320 	orr.w	r3, r3, #32
 801d4d4:	6023      	str	r3, [r4, #0]
 801d4d6:	2378      	movs	r3, #120	; 0x78
 801d4d8:	4828      	ldr	r0, [pc, #160]	; (801d57c <_printf_i+0x248>)
 801d4da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801d4de:	e7e3      	b.n	801d4a8 <_printf_i+0x174>
 801d4e0:	0659      	lsls	r1, r3, #25
 801d4e2:	bf48      	it	mi
 801d4e4:	b2b6      	uxthmi	r6, r6
 801d4e6:	e7e6      	b.n	801d4b6 <_printf_i+0x182>
 801d4e8:	4615      	mov	r5, r2
 801d4ea:	e7bb      	b.n	801d464 <_printf_i+0x130>
 801d4ec:	682b      	ldr	r3, [r5, #0]
 801d4ee:	6826      	ldr	r6, [r4, #0]
 801d4f0:	6961      	ldr	r1, [r4, #20]
 801d4f2:	1d18      	adds	r0, r3, #4
 801d4f4:	6028      	str	r0, [r5, #0]
 801d4f6:	0635      	lsls	r5, r6, #24
 801d4f8:	681b      	ldr	r3, [r3, #0]
 801d4fa:	d501      	bpl.n	801d500 <_printf_i+0x1cc>
 801d4fc:	6019      	str	r1, [r3, #0]
 801d4fe:	e002      	b.n	801d506 <_printf_i+0x1d2>
 801d500:	0670      	lsls	r0, r6, #25
 801d502:	d5fb      	bpl.n	801d4fc <_printf_i+0x1c8>
 801d504:	8019      	strh	r1, [r3, #0]
 801d506:	2300      	movs	r3, #0
 801d508:	6123      	str	r3, [r4, #16]
 801d50a:	4615      	mov	r5, r2
 801d50c:	e7ba      	b.n	801d484 <_printf_i+0x150>
 801d50e:	682b      	ldr	r3, [r5, #0]
 801d510:	1d1a      	adds	r2, r3, #4
 801d512:	602a      	str	r2, [r5, #0]
 801d514:	681d      	ldr	r5, [r3, #0]
 801d516:	6862      	ldr	r2, [r4, #4]
 801d518:	2100      	movs	r1, #0
 801d51a:	4628      	mov	r0, r5
 801d51c:	f7e2 fe70 	bl	8000200 <memchr>
 801d520:	b108      	cbz	r0, 801d526 <_printf_i+0x1f2>
 801d522:	1b40      	subs	r0, r0, r5
 801d524:	6060      	str	r0, [r4, #4]
 801d526:	6863      	ldr	r3, [r4, #4]
 801d528:	6123      	str	r3, [r4, #16]
 801d52a:	2300      	movs	r3, #0
 801d52c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d530:	e7a8      	b.n	801d484 <_printf_i+0x150>
 801d532:	6923      	ldr	r3, [r4, #16]
 801d534:	462a      	mov	r2, r5
 801d536:	4649      	mov	r1, r9
 801d538:	4640      	mov	r0, r8
 801d53a:	47d0      	blx	sl
 801d53c:	3001      	adds	r0, #1
 801d53e:	d0ab      	beq.n	801d498 <_printf_i+0x164>
 801d540:	6823      	ldr	r3, [r4, #0]
 801d542:	079b      	lsls	r3, r3, #30
 801d544:	d413      	bmi.n	801d56e <_printf_i+0x23a>
 801d546:	68e0      	ldr	r0, [r4, #12]
 801d548:	9b03      	ldr	r3, [sp, #12]
 801d54a:	4298      	cmp	r0, r3
 801d54c:	bfb8      	it	lt
 801d54e:	4618      	movlt	r0, r3
 801d550:	e7a4      	b.n	801d49c <_printf_i+0x168>
 801d552:	2301      	movs	r3, #1
 801d554:	4632      	mov	r2, r6
 801d556:	4649      	mov	r1, r9
 801d558:	4640      	mov	r0, r8
 801d55a:	47d0      	blx	sl
 801d55c:	3001      	adds	r0, #1
 801d55e:	d09b      	beq.n	801d498 <_printf_i+0x164>
 801d560:	3501      	adds	r5, #1
 801d562:	68e3      	ldr	r3, [r4, #12]
 801d564:	9903      	ldr	r1, [sp, #12]
 801d566:	1a5b      	subs	r3, r3, r1
 801d568:	42ab      	cmp	r3, r5
 801d56a:	dcf2      	bgt.n	801d552 <_printf_i+0x21e>
 801d56c:	e7eb      	b.n	801d546 <_printf_i+0x212>
 801d56e:	2500      	movs	r5, #0
 801d570:	f104 0619 	add.w	r6, r4, #25
 801d574:	e7f5      	b.n	801d562 <_printf_i+0x22e>
 801d576:	bf00      	nop
 801d578:	08021c95 	.word	0x08021c95
 801d57c:	08021ca6 	.word	0x08021ca6

0801d580 <_sbrk_r>:
 801d580:	b538      	push	{r3, r4, r5, lr}
 801d582:	4d06      	ldr	r5, [pc, #24]	; (801d59c <_sbrk_r+0x1c>)
 801d584:	2300      	movs	r3, #0
 801d586:	4604      	mov	r4, r0
 801d588:	4608      	mov	r0, r1
 801d58a:	602b      	str	r3, [r5, #0]
 801d58c:	f7e4 fd36 	bl	8001ffc <_sbrk>
 801d590:	1c43      	adds	r3, r0, #1
 801d592:	d102      	bne.n	801d59a <_sbrk_r+0x1a>
 801d594:	682b      	ldr	r3, [r5, #0]
 801d596:	b103      	cbz	r3, 801d59a <_sbrk_r+0x1a>
 801d598:	6023      	str	r3, [r4, #0]
 801d59a:	bd38      	pop	{r3, r4, r5, pc}
 801d59c:	2000aaac 	.word	0x2000aaac

0801d5a0 <_raise_r>:
 801d5a0:	291f      	cmp	r1, #31
 801d5a2:	b538      	push	{r3, r4, r5, lr}
 801d5a4:	4604      	mov	r4, r0
 801d5a6:	460d      	mov	r5, r1
 801d5a8:	d904      	bls.n	801d5b4 <_raise_r+0x14>
 801d5aa:	2316      	movs	r3, #22
 801d5ac:	6003      	str	r3, [r0, #0]
 801d5ae:	f04f 30ff 	mov.w	r0, #4294967295
 801d5b2:	bd38      	pop	{r3, r4, r5, pc}
 801d5b4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801d5b6:	b112      	cbz	r2, 801d5be <_raise_r+0x1e>
 801d5b8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d5bc:	b94b      	cbnz	r3, 801d5d2 <_raise_r+0x32>
 801d5be:	4620      	mov	r0, r4
 801d5c0:	f000 f830 	bl	801d624 <_getpid_r>
 801d5c4:	462a      	mov	r2, r5
 801d5c6:	4601      	mov	r1, r0
 801d5c8:	4620      	mov	r0, r4
 801d5ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d5ce:	f000 b817 	b.w	801d600 <_kill_r>
 801d5d2:	2b01      	cmp	r3, #1
 801d5d4:	d00a      	beq.n	801d5ec <_raise_r+0x4c>
 801d5d6:	1c59      	adds	r1, r3, #1
 801d5d8:	d103      	bne.n	801d5e2 <_raise_r+0x42>
 801d5da:	2316      	movs	r3, #22
 801d5dc:	6003      	str	r3, [r0, #0]
 801d5de:	2001      	movs	r0, #1
 801d5e0:	e7e7      	b.n	801d5b2 <_raise_r+0x12>
 801d5e2:	2400      	movs	r4, #0
 801d5e4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d5e8:	4628      	mov	r0, r5
 801d5ea:	4798      	blx	r3
 801d5ec:	2000      	movs	r0, #0
 801d5ee:	e7e0      	b.n	801d5b2 <_raise_r+0x12>

0801d5f0 <raise>:
 801d5f0:	4b02      	ldr	r3, [pc, #8]	; (801d5fc <raise+0xc>)
 801d5f2:	4601      	mov	r1, r0
 801d5f4:	6818      	ldr	r0, [r3, #0]
 801d5f6:	f7ff bfd3 	b.w	801d5a0 <_raise_r>
 801d5fa:	bf00      	nop
 801d5fc:	200000d8 	.word	0x200000d8

0801d600 <_kill_r>:
 801d600:	b538      	push	{r3, r4, r5, lr}
 801d602:	4d07      	ldr	r5, [pc, #28]	; (801d620 <_kill_r+0x20>)
 801d604:	2300      	movs	r3, #0
 801d606:	4604      	mov	r4, r0
 801d608:	4608      	mov	r0, r1
 801d60a:	4611      	mov	r1, r2
 801d60c:	602b      	str	r3, [r5, #0]
 801d60e:	f7e4 fcbf 	bl	8001f90 <_kill>
 801d612:	1c43      	adds	r3, r0, #1
 801d614:	d102      	bne.n	801d61c <_kill_r+0x1c>
 801d616:	682b      	ldr	r3, [r5, #0]
 801d618:	b103      	cbz	r3, 801d61c <_kill_r+0x1c>
 801d61a:	6023      	str	r3, [r4, #0]
 801d61c:	bd38      	pop	{r3, r4, r5, pc}
 801d61e:	bf00      	nop
 801d620:	2000aaac 	.word	0x2000aaac

0801d624 <_getpid_r>:
 801d624:	f7e4 bcb2 	b.w	8001f8c <_getpid>

0801d628 <__swbuf_r>:
 801d628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d62a:	460e      	mov	r6, r1
 801d62c:	4614      	mov	r4, r2
 801d62e:	4605      	mov	r5, r0
 801d630:	b118      	cbz	r0, 801d63a <__swbuf_r+0x12>
 801d632:	6983      	ldr	r3, [r0, #24]
 801d634:	b90b      	cbnz	r3, 801d63a <__swbuf_r+0x12>
 801d636:	f000 fa33 	bl	801daa0 <__sinit>
 801d63a:	4b21      	ldr	r3, [pc, #132]	; (801d6c0 <__swbuf_r+0x98>)
 801d63c:	429c      	cmp	r4, r3
 801d63e:	d12b      	bne.n	801d698 <__swbuf_r+0x70>
 801d640:	686c      	ldr	r4, [r5, #4]
 801d642:	69a3      	ldr	r3, [r4, #24]
 801d644:	60a3      	str	r3, [r4, #8]
 801d646:	89a3      	ldrh	r3, [r4, #12]
 801d648:	071a      	lsls	r2, r3, #28
 801d64a:	d52f      	bpl.n	801d6ac <__swbuf_r+0x84>
 801d64c:	6923      	ldr	r3, [r4, #16]
 801d64e:	b36b      	cbz	r3, 801d6ac <__swbuf_r+0x84>
 801d650:	6923      	ldr	r3, [r4, #16]
 801d652:	6820      	ldr	r0, [r4, #0]
 801d654:	1ac0      	subs	r0, r0, r3
 801d656:	6963      	ldr	r3, [r4, #20]
 801d658:	b2f6      	uxtb	r6, r6
 801d65a:	4283      	cmp	r3, r0
 801d65c:	4637      	mov	r7, r6
 801d65e:	dc04      	bgt.n	801d66a <__swbuf_r+0x42>
 801d660:	4621      	mov	r1, r4
 801d662:	4628      	mov	r0, r5
 801d664:	f000 f988 	bl	801d978 <_fflush_r>
 801d668:	bb30      	cbnz	r0, 801d6b8 <__swbuf_r+0x90>
 801d66a:	68a3      	ldr	r3, [r4, #8]
 801d66c:	3b01      	subs	r3, #1
 801d66e:	60a3      	str	r3, [r4, #8]
 801d670:	6823      	ldr	r3, [r4, #0]
 801d672:	1c5a      	adds	r2, r3, #1
 801d674:	6022      	str	r2, [r4, #0]
 801d676:	701e      	strb	r6, [r3, #0]
 801d678:	6963      	ldr	r3, [r4, #20]
 801d67a:	3001      	adds	r0, #1
 801d67c:	4283      	cmp	r3, r0
 801d67e:	d004      	beq.n	801d68a <__swbuf_r+0x62>
 801d680:	89a3      	ldrh	r3, [r4, #12]
 801d682:	07db      	lsls	r3, r3, #31
 801d684:	d506      	bpl.n	801d694 <__swbuf_r+0x6c>
 801d686:	2e0a      	cmp	r6, #10
 801d688:	d104      	bne.n	801d694 <__swbuf_r+0x6c>
 801d68a:	4621      	mov	r1, r4
 801d68c:	4628      	mov	r0, r5
 801d68e:	f000 f973 	bl	801d978 <_fflush_r>
 801d692:	b988      	cbnz	r0, 801d6b8 <__swbuf_r+0x90>
 801d694:	4638      	mov	r0, r7
 801d696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d698:	4b0a      	ldr	r3, [pc, #40]	; (801d6c4 <__swbuf_r+0x9c>)
 801d69a:	429c      	cmp	r4, r3
 801d69c:	d101      	bne.n	801d6a2 <__swbuf_r+0x7a>
 801d69e:	68ac      	ldr	r4, [r5, #8]
 801d6a0:	e7cf      	b.n	801d642 <__swbuf_r+0x1a>
 801d6a2:	4b09      	ldr	r3, [pc, #36]	; (801d6c8 <__swbuf_r+0xa0>)
 801d6a4:	429c      	cmp	r4, r3
 801d6a6:	bf08      	it	eq
 801d6a8:	68ec      	ldreq	r4, [r5, #12]
 801d6aa:	e7ca      	b.n	801d642 <__swbuf_r+0x1a>
 801d6ac:	4621      	mov	r1, r4
 801d6ae:	4628      	mov	r0, r5
 801d6b0:	f000 f80c 	bl	801d6cc <__swsetup_r>
 801d6b4:	2800      	cmp	r0, #0
 801d6b6:	d0cb      	beq.n	801d650 <__swbuf_r+0x28>
 801d6b8:	f04f 37ff 	mov.w	r7, #4294967295
 801d6bc:	e7ea      	b.n	801d694 <__swbuf_r+0x6c>
 801d6be:	bf00      	nop
 801d6c0:	08021cdc 	.word	0x08021cdc
 801d6c4:	08021cfc 	.word	0x08021cfc
 801d6c8:	08021cbc 	.word	0x08021cbc

0801d6cc <__swsetup_r>:
 801d6cc:	4b32      	ldr	r3, [pc, #200]	; (801d798 <__swsetup_r+0xcc>)
 801d6ce:	b570      	push	{r4, r5, r6, lr}
 801d6d0:	681d      	ldr	r5, [r3, #0]
 801d6d2:	4606      	mov	r6, r0
 801d6d4:	460c      	mov	r4, r1
 801d6d6:	b125      	cbz	r5, 801d6e2 <__swsetup_r+0x16>
 801d6d8:	69ab      	ldr	r3, [r5, #24]
 801d6da:	b913      	cbnz	r3, 801d6e2 <__swsetup_r+0x16>
 801d6dc:	4628      	mov	r0, r5
 801d6de:	f000 f9df 	bl	801daa0 <__sinit>
 801d6e2:	4b2e      	ldr	r3, [pc, #184]	; (801d79c <__swsetup_r+0xd0>)
 801d6e4:	429c      	cmp	r4, r3
 801d6e6:	d10f      	bne.n	801d708 <__swsetup_r+0x3c>
 801d6e8:	686c      	ldr	r4, [r5, #4]
 801d6ea:	89a3      	ldrh	r3, [r4, #12]
 801d6ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d6f0:	0719      	lsls	r1, r3, #28
 801d6f2:	d42c      	bmi.n	801d74e <__swsetup_r+0x82>
 801d6f4:	06dd      	lsls	r5, r3, #27
 801d6f6:	d411      	bmi.n	801d71c <__swsetup_r+0x50>
 801d6f8:	2309      	movs	r3, #9
 801d6fa:	6033      	str	r3, [r6, #0]
 801d6fc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801d700:	81a3      	strh	r3, [r4, #12]
 801d702:	f04f 30ff 	mov.w	r0, #4294967295
 801d706:	e03e      	b.n	801d786 <__swsetup_r+0xba>
 801d708:	4b25      	ldr	r3, [pc, #148]	; (801d7a0 <__swsetup_r+0xd4>)
 801d70a:	429c      	cmp	r4, r3
 801d70c:	d101      	bne.n	801d712 <__swsetup_r+0x46>
 801d70e:	68ac      	ldr	r4, [r5, #8]
 801d710:	e7eb      	b.n	801d6ea <__swsetup_r+0x1e>
 801d712:	4b24      	ldr	r3, [pc, #144]	; (801d7a4 <__swsetup_r+0xd8>)
 801d714:	429c      	cmp	r4, r3
 801d716:	bf08      	it	eq
 801d718:	68ec      	ldreq	r4, [r5, #12]
 801d71a:	e7e6      	b.n	801d6ea <__swsetup_r+0x1e>
 801d71c:	0758      	lsls	r0, r3, #29
 801d71e:	d512      	bpl.n	801d746 <__swsetup_r+0x7a>
 801d720:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d722:	b141      	cbz	r1, 801d736 <__swsetup_r+0x6a>
 801d724:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d728:	4299      	cmp	r1, r3
 801d72a:	d002      	beq.n	801d732 <__swsetup_r+0x66>
 801d72c:	4630      	mov	r0, r6
 801d72e:	f7ff fb59 	bl	801cde4 <_free_r>
 801d732:	2300      	movs	r3, #0
 801d734:	6363      	str	r3, [r4, #52]	; 0x34
 801d736:	89a3      	ldrh	r3, [r4, #12]
 801d738:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801d73c:	81a3      	strh	r3, [r4, #12]
 801d73e:	2300      	movs	r3, #0
 801d740:	6063      	str	r3, [r4, #4]
 801d742:	6923      	ldr	r3, [r4, #16]
 801d744:	6023      	str	r3, [r4, #0]
 801d746:	89a3      	ldrh	r3, [r4, #12]
 801d748:	f043 0308 	orr.w	r3, r3, #8
 801d74c:	81a3      	strh	r3, [r4, #12]
 801d74e:	6923      	ldr	r3, [r4, #16]
 801d750:	b94b      	cbnz	r3, 801d766 <__swsetup_r+0x9a>
 801d752:	89a3      	ldrh	r3, [r4, #12]
 801d754:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801d758:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801d75c:	d003      	beq.n	801d766 <__swsetup_r+0x9a>
 801d75e:	4621      	mov	r1, r4
 801d760:	4630      	mov	r0, r6
 801d762:	f000 fa63 	bl	801dc2c <__smakebuf_r>
 801d766:	89a0      	ldrh	r0, [r4, #12]
 801d768:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d76c:	f010 0301 	ands.w	r3, r0, #1
 801d770:	d00a      	beq.n	801d788 <__swsetup_r+0xbc>
 801d772:	2300      	movs	r3, #0
 801d774:	60a3      	str	r3, [r4, #8]
 801d776:	6963      	ldr	r3, [r4, #20]
 801d778:	425b      	negs	r3, r3
 801d77a:	61a3      	str	r3, [r4, #24]
 801d77c:	6923      	ldr	r3, [r4, #16]
 801d77e:	b943      	cbnz	r3, 801d792 <__swsetup_r+0xc6>
 801d780:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801d784:	d1ba      	bne.n	801d6fc <__swsetup_r+0x30>
 801d786:	bd70      	pop	{r4, r5, r6, pc}
 801d788:	0781      	lsls	r1, r0, #30
 801d78a:	bf58      	it	pl
 801d78c:	6963      	ldrpl	r3, [r4, #20]
 801d78e:	60a3      	str	r3, [r4, #8]
 801d790:	e7f4      	b.n	801d77c <__swsetup_r+0xb0>
 801d792:	2000      	movs	r0, #0
 801d794:	e7f7      	b.n	801d786 <__swsetup_r+0xba>
 801d796:	bf00      	nop
 801d798:	200000d8 	.word	0x200000d8
 801d79c:	08021cdc 	.word	0x08021cdc
 801d7a0:	08021cfc 	.word	0x08021cfc
 801d7a4:	08021cbc 	.word	0x08021cbc

0801d7a8 <__register_exitproc>:
 801d7a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d7ac:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801d868 <__register_exitproc+0xc0>
 801d7b0:	4606      	mov	r6, r0
 801d7b2:	f8d8 0000 	ldr.w	r0, [r8]
 801d7b6:	461f      	mov	r7, r3
 801d7b8:	460d      	mov	r5, r1
 801d7ba:	4691      	mov	r9, r2
 801d7bc:	f000 fa0e 	bl	801dbdc <__retarget_lock_acquire_recursive>
 801d7c0:	4b25      	ldr	r3, [pc, #148]	; (801d858 <__register_exitproc+0xb0>)
 801d7c2:	681c      	ldr	r4, [r3, #0]
 801d7c4:	b934      	cbnz	r4, 801d7d4 <__register_exitproc+0x2c>
 801d7c6:	4c25      	ldr	r4, [pc, #148]	; (801d85c <__register_exitproc+0xb4>)
 801d7c8:	601c      	str	r4, [r3, #0]
 801d7ca:	4b25      	ldr	r3, [pc, #148]	; (801d860 <__register_exitproc+0xb8>)
 801d7cc:	b113      	cbz	r3, 801d7d4 <__register_exitproc+0x2c>
 801d7ce:	681b      	ldr	r3, [r3, #0]
 801d7d0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801d7d4:	6863      	ldr	r3, [r4, #4]
 801d7d6:	2b1f      	cmp	r3, #31
 801d7d8:	dd07      	ble.n	801d7ea <__register_exitproc+0x42>
 801d7da:	f8d8 0000 	ldr.w	r0, [r8]
 801d7de:	f000 f9ff 	bl	801dbe0 <__retarget_lock_release_recursive>
 801d7e2:	f04f 30ff 	mov.w	r0, #4294967295
 801d7e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d7ea:	b34e      	cbz	r6, 801d840 <__register_exitproc+0x98>
 801d7ec:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801d7f0:	b988      	cbnz	r0, 801d816 <__register_exitproc+0x6e>
 801d7f2:	4b1c      	ldr	r3, [pc, #112]	; (801d864 <__register_exitproc+0xbc>)
 801d7f4:	b923      	cbnz	r3, 801d800 <__register_exitproc+0x58>
 801d7f6:	f8d8 0000 	ldr.w	r0, [r8]
 801d7fa:	f000 f9f0 	bl	801dbde <__retarget_lock_release>
 801d7fe:	e7f0      	b.n	801d7e2 <__register_exitproc+0x3a>
 801d800:	f44f 7084 	mov.w	r0, #264	; 0x108
 801d804:	f7ff fac8 	bl	801cd98 <malloc>
 801d808:	2800      	cmp	r0, #0
 801d80a:	d0f4      	beq.n	801d7f6 <__register_exitproc+0x4e>
 801d80c:	2300      	movs	r3, #0
 801d80e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801d812:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801d816:	6863      	ldr	r3, [r4, #4]
 801d818:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801d81c:	2201      	movs	r2, #1
 801d81e:	409a      	lsls	r2, r3
 801d820:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801d824:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801d828:	4313      	orrs	r3, r2
 801d82a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801d82e:	2e02      	cmp	r6, #2
 801d830:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801d834:	bf02      	ittt	eq
 801d836:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801d83a:	4313      	orreq	r3, r2
 801d83c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801d840:	6863      	ldr	r3, [r4, #4]
 801d842:	f8d8 0000 	ldr.w	r0, [r8]
 801d846:	1c5a      	adds	r2, r3, #1
 801d848:	3302      	adds	r3, #2
 801d84a:	6062      	str	r2, [r4, #4]
 801d84c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801d850:	f000 f9c6 	bl	801dbe0 <__retarget_lock_release_recursive>
 801d854:	2000      	movs	r0, #0
 801d856:	e7c6      	b.n	801d7e6 <__register_exitproc+0x3e>
 801d858:	2000aaa4 	.word	0x2000aaa4
 801d85c:	2000aa18 	.word	0x2000aa18
 801d860:	08021cb8 	.word	0x08021cb8
 801d864:	0801cd99 	.word	0x0801cd99
 801d868:	2000013c 	.word	0x2000013c

0801d86c <__sflush_r>:
 801d86c:	898a      	ldrh	r2, [r1, #12]
 801d86e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d872:	4605      	mov	r5, r0
 801d874:	0710      	lsls	r0, r2, #28
 801d876:	460c      	mov	r4, r1
 801d878:	d458      	bmi.n	801d92c <__sflush_r+0xc0>
 801d87a:	684b      	ldr	r3, [r1, #4]
 801d87c:	2b00      	cmp	r3, #0
 801d87e:	dc05      	bgt.n	801d88c <__sflush_r+0x20>
 801d880:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d882:	2b00      	cmp	r3, #0
 801d884:	dc02      	bgt.n	801d88c <__sflush_r+0x20>
 801d886:	2000      	movs	r0, #0
 801d888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d88c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d88e:	2e00      	cmp	r6, #0
 801d890:	d0f9      	beq.n	801d886 <__sflush_r+0x1a>
 801d892:	2300      	movs	r3, #0
 801d894:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d898:	682f      	ldr	r7, [r5, #0]
 801d89a:	602b      	str	r3, [r5, #0]
 801d89c:	d032      	beq.n	801d904 <__sflush_r+0x98>
 801d89e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d8a0:	89a3      	ldrh	r3, [r4, #12]
 801d8a2:	075a      	lsls	r2, r3, #29
 801d8a4:	d505      	bpl.n	801d8b2 <__sflush_r+0x46>
 801d8a6:	6863      	ldr	r3, [r4, #4]
 801d8a8:	1ac0      	subs	r0, r0, r3
 801d8aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d8ac:	b10b      	cbz	r3, 801d8b2 <__sflush_r+0x46>
 801d8ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d8b0:	1ac0      	subs	r0, r0, r3
 801d8b2:	2300      	movs	r3, #0
 801d8b4:	4602      	mov	r2, r0
 801d8b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d8b8:	6a21      	ldr	r1, [r4, #32]
 801d8ba:	4628      	mov	r0, r5
 801d8bc:	47b0      	blx	r6
 801d8be:	1c43      	adds	r3, r0, #1
 801d8c0:	89a3      	ldrh	r3, [r4, #12]
 801d8c2:	d106      	bne.n	801d8d2 <__sflush_r+0x66>
 801d8c4:	6829      	ldr	r1, [r5, #0]
 801d8c6:	291d      	cmp	r1, #29
 801d8c8:	d82c      	bhi.n	801d924 <__sflush_r+0xb8>
 801d8ca:	4a2a      	ldr	r2, [pc, #168]	; (801d974 <__sflush_r+0x108>)
 801d8cc:	40ca      	lsrs	r2, r1
 801d8ce:	07d6      	lsls	r6, r2, #31
 801d8d0:	d528      	bpl.n	801d924 <__sflush_r+0xb8>
 801d8d2:	2200      	movs	r2, #0
 801d8d4:	6062      	str	r2, [r4, #4]
 801d8d6:	04d9      	lsls	r1, r3, #19
 801d8d8:	6922      	ldr	r2, [r4, #16]
 801d8da:	6022      	str	r2, [r4, #0]
 801d8dc:	d504      	bpl.n	801d8e8 <__sflush_r+0x7c>
 801d8de:	1c42      	adds	r2, r0, #1
 801d8e0:	d101      	bne.n	801d8e6 <__sflush_r+0x7a>
 801d8e2:	682b      	ldr	r3, [r5, #0]
 801d8e4:	b903      	cbnz	r3, 801d8e8 <__sflush_r+0x7c>
 801d8e6:	6560      	str	r0, [r4, #84]	; 0x54
 801d8e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d8ea:	602f      	str	r7, [r5, #0]
 801d8ec:	2900      	cmp	r1, #0
 801d8ee:	d0ca      	beq.n	801d886 <__sflush_r+0x1a>
 801d8f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d8f4:	4299      	cmp	r1, r3
 801d8f6:	d002      	beq.n	801d8fe <__sflush_r+0x92>
 801d8f8:	4628      	mov	r0, r5
 801d8fa:	f7ff fa73 	bl	801cde4 <_free_r>
 801d8fe:	2000      	movs	r0, #0
 801d900:	6360      	str	r0, [r4, #52]	; 0x34
 801d902:	e7c1      	b.n	801d888 <__sflush_r+0x1c>
 801d904:	6a21      	ldr	r1, [r4, #32]
 801d906:	2301      	movs	r3, #1
 801d908:	4628      	mov	r0, r5
 801d90a:	47b0      	blx	r6
 801d90c:	1c41      	adds	r1, r0, #1
 801d90e:	d1c7      	bne.n	801d8a0 <__sflush_r+0x34>
 801d910:	682b      	ldr	r3, [r5, #0]
 801d912:	2b00      	cmp	r3, #0
 801d914:	d0c4      	beq.n	801d8a0 <__sflush_r+0x34>
 801d916:	2b1d      	cmp	r3, #29
 801d918:	d001      	beq.n	801d91e <__sflush_r+0xb2>
 801d91a:	2b16      	cmp	r3, #22
 801d91c:	d101      	bne.n	801d922 <__sflush_r+0xb6>
 801d91e:	602f      	str	r7, [r5, #0]
 801d920:	e7b1      	b.n	801d886 <__sflush_r+0x1a>
 801d922:	89a3      	ldrh	r3, [r4, #12]
 801d924:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d928:	81a3      	strh	r3, [r4, #12]
 801d92a:	e7ad      	b.n	801d888 <__sflush_r+0x1c>
 801d92c:	690f      	ldr	r7, [r1, #16]
 801d92e:	2f00      	cmp	r7, #0
 801d930:	d0a9      	beq.n	801d886 <__sflush_r+0x1a>
 801d932:	0793      	lsls	r3, r2, #30
 801d934:	680e      	ldr	r6, [r1, #0]
 801d936:	bf08      	it	eq
 801d938:	694b      	ldreq	r3, [r1, #20]
 801d93a:	600f      	str	r7, [r1, #0]
 801d93c:	bf18      	it	ne
 801d93e:	2300      	movne	r3, #0
 801d940:	eba6 0807 	sub.w	r8, r6, r7
 801d944:	608b      	str	r3, [r1, #8]
 801d946:	f1b8 0f00 	cmp.w	r8, #0
 801d94a:	dd9c      	ble.n	801d886 <__sflush_r+0x1a>
 801d94c:	6a21      	ldr	r1, [r4, #32]
 801d94e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801d950:	4643      	mov	r3, r8
 801d952:	463a      	mov	r2, r7
 801d954:	4628      	mov	r0, r5
 801d956:	47b0      	blx	r6
 801d958:	2800      	cmp	r0, #0
 801d95a:	dc06      	bgt.n	801d96a <__sflush_r+0xfe>
 801d95c:	89a3      	ldrh	r3, [r4, #12]
 801d95e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d962:	81a3      	strh	r3, [r4, #12]
 801d964:	f04f 30ff 	mov.w	r0, #4294967295
 801d968:	e78e      	b.n	801d888 <__sflush_r+0x1c>
 801d96a:	4407      	add	r7, r0
 801d96c:	eba8 0800 	sub.w	r8, r8, r0
 801d970:	e7e9      	b.n	801d946 <__sflush_r+0xda>
 801d972:	bf00      	nop
 801d974:	20400001 	.word	0x20400001

0801d978 <_fflush_r>:
 801d978:	b538      	push	{r3, r4, r5, lr}
 801d97a:	690b      	ldr	r3, [r1, #16]
 801d97c:	4605      	mov	r5, r0
 801d97e:	460c      	mov	r4, r1
 801d980:	b913      	cbnz	r3, 801d988 <_fflush_r+0x10>
 801d982:	2500      	movs	r5, #0
 801d984:	4628      	mov	r0, r5
 801d986:	bd38      	pop	{r3, r4, r5, pc}
 801d988:	b118      	cbz	r0, 801d992 <_fflush_r+0x1a>
 801d98a:	6983      	ldr	r3, [r0, #24]
 801d98c:	b90b      	cbnz	r3, 801d992 <_fflush_r+0x1a>
 801d98e:	f000 f887 	bl	801daa0 <__sinit>
 801d992:	4b14      	ldr	r3, [pc, #80]	; (801d9e4 <_fflush_r+0x6c>)
 801d994:	429c      	cmp	r4, r3
 801d996:	d11b      	bne.n	801d9d0 <_fflush_r+0x58>
 801d998:	686c      	ldr	r4, [r5, #4]
 801d99a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d99e:	2b00      	cmp	r3, #0
 801d9a0:	d0ef      	beq.n	801d982 <_fflush_r+0xa>
 801d9a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801d9a4:	07d0      	lsls	r0, r2, #31
 801d9a6:	d404      	bmi.n	801d9b2 <_fflush_r+0x3a>
 801d9a8:	0599      	lsls	r1, r3, #22
 801d9aa:	d402      	bmi.n	801d9b2 <_fflush_r+0x3a>
 801d9ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d9ae:	f000 f915 	bl	801dbdc <__retarget_lock_acquire_recursive>
 801d9b2:	4628      	mov	r0, r5
 801d9b4:	4621      	mov	r1, r4
 801d9b6:	f7ff ff59 	bl	801d86c <__sflush_r>
 801d9ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801d9bc:	07da      	lsls	r2, r3, #31
 801d9be:	4605      	mov	r5, r0
 801d9c0:	d4e0      	bmi.n	801d984 <_fflush_r+0xc>
 801d9c2:	89a3      	ldrh	r3, [r4, #12]
 801d9c4:	059b      	lsls	r3, r3, #22
 801d9c6:	d4dd      	bmi.n	801d984 <_fflush_r+0xc>
 801d9c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d9ca:	f000 f909 	bl	801dbe0 <__retarget_lock_release_recursive>
 801d9ce:	e7d9      	b.n	801d984 <_fflush_r+0xc>
 801d9d0:	4b05      	ldr	r3, [pc, #20]	; (801d9e8 <_fflush_r+0x70>)
 801d9d2:	429c      	cmp	r4, r3
 801d9d4:	d101      	bne.n	801d9da <_fflush_r+0x62>
 801d9d6:	68ac      	ldr	r4, [r5, #8]
 801d9d8:	e7df      	b.n	801d99a <_fflush_r+0x22>
 801d9da:	4b04      	ldr	r3, [pc, #16]	; (801d9ec <_fflush_r+0x74>)
 801d9dc:	429c      	cmp	r4, r3
 801d9de:	bf08      	it	eq
 801d9e0:	68ec      	ldreq	r4, [r5, #12]
 801d9e2:	e7da      	b.n	801d99a <_fflush_r+0x22>
 801d9e4:	08021cdc 	.word	0x08021cdc
 801d9e8:	08021cfc 	.word	0x08021cfc
 801d9ec:	08021cbc 	.word	0x08021cbc

0801d9f0 <std>:
 801d9f0:	2300      	movs	r3, #0
 801d9f2:	b510      	push	{r4, lr}
 801d9f4:	4604      	mov	r4, r0
 801d9f6:	e9c0 3300 	strd	r3, r3, [r0]
 801d9fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d9fe:	6083      	str	r3, [r0, #8]
 801da00:	8181      	strh	r1, [r0, #12]
 801da02:	6643      	str	r3, [r0, #100]	; 0x64
 801da04:	81c2      	strh	r2, [r0, #14]
 801da06:	6183      	str	r3, [r0, #24]
 801da08:	4619      	mov	r1, r3
 801da0a:	2208      	movs	r2, #8
 801da0c:	305c      	adds	r0, #92	; 0x5c
 801da0e:	f7ff f9e1 	bl	801cdd4 <memset>
 801da12:	4b05      	ldr	r3, [pc, #20]	; (801da28 <std+0x38>)
 801da14:	6263      	str	r3, [r4, #36]	; 0x24
 801da16:	4b05      	ldr	r3, [pc, #20]	; (801da2c <std+0x3c>)
 801da18:	62a3      	str	r3, [r4, #40]	; 0x28
 801da1a:	4b05      	ldr	r3, [pc, #20]	; (801da30 <std+0x40>)
 801da1c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801da1e:	4b05      	ldr	r3, [pc, #20]	; (801da34 <std+0x44>)
 801da20:	6224      	str	r4, [r4, #32]
 801da22:	6323      	str	r3, [r4, #48]	; 0x30
 801da24:	bd10      	pop	{r4, pc}
 801da26:	bf00      	nop
 801da28:	0801dcc5 	.word	0x0801dcc5
 801da2c:	0801dce7 	.word	0x0801dce7
 801da30:	0801dd1f 	.word	0x0801dd1f
 801da34:	0801dd43 	.word	0x0801dd43

0801da38 <_cleanup_r>:
 801da38:	4901      	ldr	r1, [pc, #4]	; (801da40 <_cleanup_r+0x8>)
 801da3a:	f000 b8af 	b.w	801db9c <_fwalk_reent>
 801da3e:	bf00      	nop
 801da40:	0801d979 	.word	0x0801d979

0801da44 <__sfmoreglue>:
 801da44:	b570      	push	{r4, r5, r6, lr}
 801da46:	2268      	movs	r2, #104	; 0x68
 801da48:	1e4d      	subs	r5, r1, #1
 801da4a:	4355      	muls	r5, r2
 801da4c:	460e      	mov	r6, r1
 801da4e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801da52:	f7ff fa33 	bl	801cebc <_malloc_r>
 801da56:	4604      	mov	r4, r0
 801da58:	b140      	cbz	r0, 801da6c <__sfmoreglue+0x28>
 801da5a:	2100      	movs	r1, #0
 801da5c:	e9c0 1600 	strd	r1, r6, [r0]
 801da60:	300c      	adds	r0, #12
 801da62:	60a0      	str	r0, [r4, #8]
 801da64:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801da68:	f7ff f9b4 	bl	801cdd4 <memset>
 801da6c:	4620      	mov	r0, r4
 801da6e:	bd70      	pop	{r4, r5, r6, pc}

0801da70 <__sfp_lock_acquire>:
 801da70:	4801      	ldr	r0, [pc, #4]	; (801da78 <__sfp_lock_acquire+0x8>)
 801da72:	f000 b8b3 	b.w	801dbdc <__retarget_lock_acquire_recursive>
 801da76:	bf00      	nop
 801da78:	2000aaaa 	.word	0x2000aaaa

0801da7c <__sfp_lock_release>:
 801da7c:	4801      	ldr	r0, [pc, #4]	; (801da84 <__sfp_lock_release+0x8>)
 801da7e:	f000 b8af 	b.w	801dbe0 <__retarget_lock_release_recursive>
 801da82:	bf00      	nop
 801da84:	2000aaaa 	.word	0x2000aaaa

0801da88 <__sinit_lock_acquire>:
 801da88:	4801      	ldr	r0, [pc, #4]	; (801da90 <__sinit_lock_acquire+0x8>)
 801da8a:	f000 b8a7 	b.w	801dbdc <__retarget_lock_acquire_recursive>
 801da8e:	bf00      	nop
 801da90:	2000aaab 	.word	0x2000aaab

0801da94 <__sinit_lock_release>:
 801da94:	4801      	ldr	r0, [pc, #4]	; (801da9c <__sinit_lock_release+0x8>)
 801da96:	f000 b8a3 	b.w	801dbe0 <__retarget_lock_release_recursive>
 801da9a:	bf00      	nop
 801da9c:	2000aaab 	.word	0x2000aaab

0801daa0 <__sinit>:
 801daa0:	b510      	push	{r4, lr}
 801daa2:	4604      	mov	r4, r0
 801daa4:	f7ff fff0 	bl	801da88 <__sinit_lock_acquire>
 801daa8:	69a3      	ldr	r3, [r4, #24]
 801daaa:	b11b      	cbz	r3, 801dab4 <__sinit+0x14>
 801daac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dab0:	f7ff bff0 	b.w	801da94 <__sinit_lock_release>
 801dab4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801dab8:	6523      	str	r3, [r4, #80]	; 0x50
 801daba:	4b13      	ldr	r3, [pc, #76]	; (801db08 <__sinit+0x68>)
 801dabc:	4a13      	ldr	r2, [pc, #76]	; (801db0c <__sinit+0x6c>)
 801dabe:	681b      	ldr	r3, [r3, #0]
 801dac0:	62a2      	str	r2, [r4, #40]	; 0x28
 801dac2:	42a3      	cmp	r3, r4
 801dac4:	bf04      	itt	eq
 801dac6:	2301      	moveq	r3, #1
 801dac8:	61a3      	streq	r3, [r4, #24]
 801daca:	4620      	mov	r0, r4
 801dacc:	f000 f820 	bl	801db10 <__sfp>
 801dad0:	6060      	str	r0, [r4, #4]
 801dad2:	4620      	mov	r0, r4
 801dad4:	f000 f81c 	bl	801db10 <__sfp>
 801dad8:	60a0      	str	r0, [r4, #8]
 801dada:	4620      	mov	r0, r4
 801dadc:	f000 f818 	bl	801db10 <__sfp>
 801dae0:	2200      	movs	r2, #0
 801dae2:	60e0      	str	r0, [r4, #12]
 801dae4:	2104      	movs	r1, #4
 801dae6:	6860      	ldr	r0, [r4, #4]
 801dae8:	f7ff ff82 	bl	801d9f0 <std>
 801daec:	68a0      	ldr	r0, [r4, #8]
 801daee:	2201      	movs	r2, #1
 801daf0:	2109      	movs	r1, #9
 801daf2:	f7ff ff7d 	bl	801d9f0 <std>
 801daf6:	68e0      	ldr	r0, [r4, #12]
 801daf8:	2202      	movs	r2, #2
 801dafa:	2112      	movs	r1, #18
 801dafc:	f7ff ff78 	bl	801d9f0 <std>
 801db00:	2301      	movs	r3, #1
 801db02:	61a3      	str	r3, [r4, #24]
 801db04:	e7d2      	b.n	801daac <__sinit+0xc>
 801db06:	bf00      	nop
 801db08:	08021c80 	.word	0x08021c80
 801db0c:	0801da39 	.word	0x0801da39

0801db10 <__sfp>:
 801db10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801db12:	4607      	mov	r7, r0
 801db14:	f7ff ffac 	bl	801da70 <__sfp_lock_acquire>
 801db18:	4b1e      	ldr	r3, [pc, #120]	; (801db94 <__sfp+0x84>)
 801db1a:	681e      	ldr	r6, [r3, #0]
 801db1c:	69b3      	ldr	r3, [r6, #24]
 801db1e:	b913      	cbnz	r3, 801db26 <__sfp+0x16>
 801db20:	4630      	mov	r0, r6
 801db22:	f7ff ffbd 	bl	801daa0 <__sinit>
 801db26:	3648      	adds	r6, #72	; 0x48
 801db28:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801db2c:	3b01      	subs	r3, #1
 801db2e:	d503      	bpl.n	801db38 <__sfp+0x28>
 801db30:	6833      	ldr	r3, [r6, #0]
 801db32:	b30b      	cbz	r3, 801db78 <__sfp+0x68>
 801db34:	6836      	ldr	r6, [r6, #0]
 801db36:	e7f7      	b.n	801db28 <__sfp+0x18>
 801db38:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801db3c:	b9d5      	cbnz	r5, 801db74 <__sfp+0x64>
 801db3e:	4b16      	ldr	r3, [pc, #88]	; (801db98 <__sfp+0x88>)
 801db40:	60e3      	str	r3, [r4, #12]
 801db42:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801db46:	6665      	str	r5, [r4, #100]	; 0x64
 801db48:	f000 f847 	bl	801dbda <__retarget_lock_init_recursive>
 801db4c:	f7ff ff96 	bl	801da7c <__sfp_lock_release>
 801db50:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801db54:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801db58:	6025      	str	r5, [r4, #0]
 801db5a:	61a5      	str	r5, [r4, #24]
 801db5c:	2208      	movs	r2, #8
 801db5e:	4629      	mov	r1, r5
 801db60:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801db64:	f7ff f936 	bl	801cdd4 <memset>
 801db68:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801db6c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801db70:	4620      	mov	r0, r4
 801db72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801db74:	3468      	adds	r4, #104	; 0x68
 801db76:	e7d9      	b.n	801db2c <__sfp+0x1c>
 801db78:	2104      	movs	r1, #4
 801db7a:	4638      	mov	r0, r7
 801db7c:	f7ff ff62 	bl	801da44 <__sfmoreglue>
 801db80:	4604      	mov	r4, r0
 801db82:	6030      	str	r0, [r6, #0]
 801db84:	2800      	cmp	r0, #0
 801db86:	d1d5      	bne.n	801db34 <__sfp+0x24>
 801db88:	f7ff ff78 	bl	801da7c <__sfp_lock_release>
 801db8c:	230c      	movs	r3, #12
 801db8e:	603b      	str	r3, [r7, #0]
 801db90:	e7ee      	b.n	801db70 <__sfp+0x60>
 801db92:	bf00      	nop
 801db94:	08021c80 	.word	0x08021c80
 801db98:	ffff0001 	.word	0xffff0001

0801db9c <_fwalk_reent>:
 801db9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dba0:	4606      	mov	r6, r0
 801dba2:	4688      	mov	r8, r1
 801dba4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801dba8:	2700      	movs	r7, #0
 801dbaa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801dbae:	f1b9 0901 	subs.w	r9, r9, #1
 801dbb2:	d505      	bpl.n	801dbc0 <_fwalk_reent+0x24>
 801dbb4:	6824      	ldr	r4, [r4, #0]
 801dbb6:	2c00      	cmp	r4, #0
 801dbb8:	d1f7      	bne.n	801dbaa <_fwalk_reent+0xe>
 801dbba:	4638      	mov	r0, r7
 801dbbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dbc0:	89ab      	ldrh	r3, [r5, #12]
 801dbc2:	2b01      	cmp	r3, #1
 801dbc4:	d907      	bls.n	801dbd6 <_fwalk_reent+0x3a>
 801dbc6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801dbca:	3301      	adds	r3, #1
 801dbcc:	d003      	beq.n	801dbd6 <_fwalk_reent+0x3a>
 801dbce:	4629      	mov	r1, r5
 801dbd0:	4630      	mov	r0, r6
 801dbd2:	47c0      	blx	r8
 801dbd4:	4307      	orrs	r7, r0
 801dbd6:	3568      	adds	r5, #104	; 0x68
 801dbd8:	e7e9      	b.n	801dbae <_fwalk_reent+0x12>

0801dbda <__retarget_lock_init_recursive>:
 801dbda:	4770      	bx	lr

0801dbdc <__retarget_lock_acquire_recursive>:
 801dbdc:	4770      	bx	lr

0801dbde <__retarget_lock_release>:
 801dbde:	4770      	bx	lr

0801dbe0 <__retarget_lock_release_recursive>:
 801dbe0:	4770      	bx	lr

0801dbe2 <__swhatbuf_r>:
 801dbe2:	b570      	push	{r4, r5, r6, lr}
 801dbe4:	460e      	mov	r6, r1
 801dbe6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dbea:	2900      	cmp	r1, #0
 801dbec:	b096      	sub	sp, #88	; 0x58
 801dbee:	4614      	mov	r4, r2
 801dbf0:	461d      	mov	r5, r3
 801dbf2:	da08      	bge.n	801dc06 <__swhatbuf_r+0x24>
 801dbf4:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801dbf8:	2200      	movs	r2, #0
 801dbfa:	602a      	str	r2, [r5, #0]
 801dbfc:	061a      	lsls	r2, r3, #24
 801dbfe:	d410      	bmi.n	801dc22 <__swhatbuf_r+0x40>
 801dc00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801dc04:	e00e      	b.n	801dc24 <__swhatbuf_r+0x42>
 801dc06:	466a      	mov	r2, sp
 801dc08:	f000 f8c2 	bl	801dd90 <_fstat_r>
 801dc0c:	2800      	cmp	r0, #0
 801dc0e:	dbf1      	blt.n	801dbf4 <__swhatbuf_r+0x12>
 801dc10:	9a01      	ldr	r2, [sp, #4]
 801dc12:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801dc16:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801dc1a:	425a      	negs	r2, r3
 801dc1c:	415a      	adcs	r2, r3
 801dc1e:	602a      	str	r2, [r5, #0]
 801dc20:	e7ee      	b.n	801dc00 <__swhatbuf_r+0x1e>
 801dc22:	2340      	movs	r3, #64	; 0x40
 801dc24:	2000      	movs	r0, #0
 801dc26:	6023      	str	r3, [r4, #0]
 801dc28:	b016      	add	sp, #88	; 0x58
 801dc2a:	bd70      	pop	{r4, r5, r6, pc}

0801dc2c <__smakebuf_r>:
 801dc2c:	898b      	ldrh	r3, [r1, #12]
 801dc2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801dc30:	079d      	lsls	r5, r3, #30
 801dc32:	4606      	mov	r6, r0
 801dc34:	460c      	mov	r4, r1
 801dc36:	d507      	bpl.n	801dc48 <__smakebuf_r+0x1c>
 801dc38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801dc3c:	6023      	str	r3, [r4, #0]
 801dc3e:	6123      	str	r3, [r4, #16]
 801dc40:	2301      	movs	r3, #1
 801dc42:	6163      	str	r3, [r4, #20]
 801dc44:	b002      	add	sp, #8
 801dc46:	bd70      	pop	{r4, r5, r6, pc}
 801dc48:	ab01      	add	r3, sp, #4
 801dc4a:	466a      	mov	r2, sp
 801dc4c:	f7ff ffc9 	bl	801dbe2 <__swhatbuf_r>
 801dc50:	9900      	ldr	r1, [sp, #0]
 801dc52:	4605      	mov	r5, r0
 801dc54:	4630      	mov	r0, r6
 801dc56:	f7ff f931 	bl	801cebc <_malloc_r>
 801dc5a:	b948      	cbnz	r0, 801dc70 <__smakebuf_r+0x44>
 801dc5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dc60:	059a      	lsls	r2, r3, #22
 801dc62:	d4ef      	bmi.n	801dc44 <__smakebuf_r+0x18>
 801dc64:	f023 0303 	bic.w	r3, r3, #3
 801dc68:	f043 0302 	orr.w	r3, r3, #2
 801dc6c:	81a3      	strh	r3, [r4, #12]
 801dc6e:	e7e3      	b.n	801dc38 <__smakebuf_r+0xc>
 801dc70:	4b0d      	ldr	r3, [pc, #52]	; (801dca8 <__smakebuf_r+0x7c>)
 801dc72:	62b3      	str	r3, [r6, #40]	; 0x28
 801dc74:	89a3      	ldrh	r3, [r4, #12]
 801dc76:	6020      	str	r0, [r4, #0]
 801dc78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801dc7c:	81a3      	strh	r3, [r4, #12]
 801dc7e:	9b00      	ldr	r3, [sp, #0]
 801dc80:	6163      	str	r3, [r4, #20]
 801dc82:	9b01      	ldr	r3, [sp, #4]
 801dc84:	6120      	str	r0, [r4, #16]
 801dc86:	b15b      	cbz	r3, 801dca0 <__smakebuf_r+0x74>
 801dc88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dc8c:	4630      	mov	r0, r6
 801dc8e:	f000 f891 	bl	801ddb4 <_isatty_r>
 801dc92:	b128      	cbz	r0, 801dca0 <__smakebuf_r+0x74>
 801dc94:	89a3      	ldrh	r3, [r4, #12]
 801dc96:	f023 0303 	bic.w	r3, r3, #3
 801dc9a:	f043 0301 	orr.w	r3, r3, #1
 801dc9e:	81a3      	strh	r3, [r4, #12]
 801dca0:	89a0      	ldrh	r0, [r4, #12]
 801dca2:	4305      	orrs	r5, r0
 801dca4:	81a5      	strh	r5, [r4, #12]
 801dca6:	e7cd      	b.n	801dc44 <__smakebuf_r+0x18>
 801dca8:	0801da39 	.word	0x0801da39

0801dcac <__malloc_lock>:
 801dcac:	4801      	ldr	r0, [pc, #4]	; (801dcb4 <__malloc_lock+0x8>)
 801dcae:	f7ff bf95 	b.w	801dbdc <__retarget_lock_acquire_recursive>
 801dcb2:	bf00      	nop
 801dcb4:	2000aaa9 	.word	0x2000aaa9

0801dcb8 <__malloc_unlock>:
 801dcb8:	4801      	ldr	r0, [pc, #4]	; (801dcc0 <__malloc_unlock+0x8>)
 801dcba:	f7ff bf91 	b.w	801dbe0 <__retarget_lock_release_recursive>
 801dcbe:	bf00      	nop
 801dcc0:	2000aaa9 	.word	0x2000aaa9

0801dcc4 <__sread>:
 801dcc4:	b510      	push	{r4, lr}
 801dcc6:	460c      	mov	r4, r1
 801dcc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dccc:	f000 f894 	bl	801ddf8 <_read_r>
 801dcd0:	2800      	cmp	r0, #0
 801dcd2:	bfab      	itete	ge
 801dcd4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801dcd6:	89a3      	ldrhlt	r3, [r4, #12]
 801dcd8:	181b      	addge	r3, r3, r0
 801dcda:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801dcde:	bfac      	ite	ge
 801dce0:	6563      	strge	r3, [r4, #84]	; 0x54
 801dce2:	81a3      	strhlt	r3, [r4, #12]
 801dce4:	bd10      	pop	{r4, pc}

0801dce6 <__swrite>:
 801dce6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dcea:	461f      	mov	r7, r3
 801dcec:	898b      	ldrh	r3, [r1, #12]
 801dcee:	05db      	lsls	r3, r3, #23
 801dcf0:	4605      	mov	r5, r0
 801dcf2:	460c      	mov	r4, r1
 801dcf4:	4616      	mov	r6, r2
 801dcf6:	d505      	bpl.n	801dd04 <__swrite+0x1e>
 801dcf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dcfc:	2302      	movs	r3, #2
 801dcfe:	2200      	movs	r2, #0
 801dd00:	f000 f868 	bl	801ddd4 <_lseek_r>
 801dd04:	89a3      	ldrh	r3, [r4, #12]
 801dd06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dd0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801dd0e:	81a3      	strh	r3, [r4, #12]
 801dd10:	4632      	mov	r2, r6
 801dd12:	463b      	mov	r3, r7
 801dd14:	4628      	mov	r0, r5
 801dd16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801dd1a:	f000 b817 	b.w	801dd4c <_write_r>

0801dd1e <__sseek>:
 801dd1e:	b510      	push	{r4, lr}
 801dd20:	460c      	mov	r4, r1
 801dd22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dd26:	f000 f855 	bl	801ddd4 <_lseek_r>
 801dd2a:	1c43      	adds	r3, r0, #1
 801dd2c:	89a3      	ldrh	r3, [r4, #12]
 801dd2e:	bf15      	itete	ne
 801dd30:	6560      	strne	r0, [r4, #84]	; 0x54
 801dd32:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801dd36:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801dd3a:	81a3      	strheq	r3, [r4, #12]
 801dd3c:	bf18      	it	ne
 801dd3e:	81a3      	strhne	r3, [r4, #12]
 801dd40:	bd10      	pop	{r4, pc}

0801dd42 <__sclose>:
 801dd42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dd46:	f000 b813 	b.w	801dd70 <_close_r>
	...

0801dd4c <_write_r>:
 801dd4c:	b538      	push	{r3, r4, r5, lr}
 801dd4e:	4d07      	ldr	r5, [pc, #28]	; (801dd6c <_write_r+0x20>)
 801dd50:	4604      	mov	r4, r0
 801dd52:	4608      	mov	r0, r1
 801dd54:	4611      	mov	r1, r2
 801dd56:	2200      	movs	r2, #0
 801dd58:	602a      	str	r2, [r5, #0]
 801dd5a:	461a      	mov	r2, r3
 801dd5c:	f7e4 f934 	bl	8001fc8 <_write>
 801dd60:	1c43      	adds	r3, r0, #1
 801dd62:	d102      	bne.n	801dd6a <_write_r+0x1e>
 801dd64:	682b      	ldr	r3, [r5, #0]
 801dd66:	b103      	cbz	r3, 801dd6a <_write_r+0x1e>
 801dd68:	6023      	str	r3, [r4, #0]
 801dd6a:	bd38      	pop	{r3, r4, r5, pc}
 801dd6c:	2000aaac 	.word	0x2000aaac

0801dd70 <_close_r>:
 801dd70:	b538      	push	{r3, r4, r5, lr}
 801dd72:	4d06      	ldr	r5, [pc, #24]	; (801dd8c <_close_r+0x1c>)
 801dd74:	2300      	movs	r3, #0
 801dd76:	4604      	mov	r4, r0
 801dd78:	4608      	mov	r0, r1
 801dd7a:	602b      	str	r3, [r5, #0]
 801dd7c:	f7e4 f932 	bl	8001fe4 <_close>
 801dd80:	1c43      	adds	r3, r0, #1
 801dd82:	d102      	bne.n	801dd8a <_close_r+0x1a>
 801dd84:	682b      	ldr	r3, [r5, #0]
 801dd86:	b103      	cbz	r3, 801dd8a <_close_r+0x1a>
 801dd88:	6023      	str	r3, [r4, #0]
 801dd8a:	bd38      	pop	{r3, r4, r5, pc}
 801dd8c:	2000aaac 	.word	0x2000aaac

0801dd90 <_fstat_r>:
 801dd90:	b538      	push	{r3, r4, r5, lr}
 801dd92:	4d07      	ldr	r5, [pc, #28]	; (801ddb0 <_fstat_r+0x20>)
 801dd94:	2300      	movs	r3, #0
 801dd96:	4604      	mov	r4, r0
 801dd98:	4608      	mov	r0, r1
 801dd9a:	4611      	mov	r1, r2
 801dd9c:	602b      	str	r3, [r5, #0]
 801dd9e:	f7e4 f924 	bl	8001fea <_fstat>
 801dda2:	1c43      	adds	r3, r0, #1
 801dda4:	d102      	bne.n	801ddac <_fstat_r+0x1c>
 801dda6:	682b      	ldr	r3, [r5, #0]
 801dda8:	b103      	cbz	r3, 801ddac <_fstat_r+0x1c>
 801ddaa:	6023      	str	r3, [r4, #0]
 801ddac:	bd38      	pop	{r3, r4, r5, pc}
 801ddae:	bf00      	nop
 801ddb0:	2000aaac 	.word	0x2000aaac

0801ddb4 <_isatty_r>:
 801ddb4:	b538      	push	{r3, r4, r5, lr}
 801ddb6:	4d06      	ldr	r5, [pc, #24]	; (801ddd0 <_isatty_r+0x1c>)
 801ddb8:	2300      	movs	r3, #0
 801ddba:	4604      	mov	r4, r0
 801ddbc:	4608      	mov	r0, r1
 801ddbe:	602b      	str	r3, [r5, #0]
 801ddc0:	f7e4 f918 	bl	8001ff4 <_isatty>
 801ddc4:	1c43      	adds	r3, r0, #1
 801ddc6:	d102      	bne.n	801ddce <_isatty_r+0x1a>
 801ddc8:	682b      	ldr	r3, [r5, #0]
 801ddca:	b103      	cbz	r3, 801ddce <_isatty_r+0x1a>
 801ddcc:	6023      	str	r3, [r4, #0]
 801ddce:	bd38      	pop	{r3, r4, r5, pc}
 801ddd0:	2000aaac 	.word	0x2000aaac

0801ddd4 <_lseek_r>:
 801ddd4:	b538      	push	{r3, r4, r5, lr}
 801ddd6:	4d07      	ldr	r5, [pc, #28]	; (801ddf4 <_lseek_r+0x20>)
 801ddd8:	4604      	mov	r4, r0
 801ddda:	4608      	mov	r0, r1
 801dddc:	4611      	mov	r1, r2
 801ddde:	2200      	movs	r2, #0
 801dde0:	602a      	str	r2, [r5, #0]
 801dde2:	461a      	mov	r2, r3
 801dde4:	f7e4 f908 	bl	8001ff8 <_lseek>
 801dde8:	1c43      	adds	r3, r0, #1
 801ddea:	d102      	bne.n	801ddf2 <_lseek_r+0x1e>
 801ddec:	682b      	ldr	r3, [r5, #0]
 801ddee:	b103      	cbz	r3, 801ddf2 <_lseek_r+0x1e>
 801ddf0:	6023      	str	r3, [r4, #0]
 801ddf2:	bd38      	pop	{r3, r4, r5, pc}
 801ddf4:	2000aaac 	.word	0x2000aaac

0801ddf8 <_read_r>:
 801ddf8:	b538      	push	{r3, r4, r5, lr}
 801ddfa:	4d07      	ldr	r5, [pc, #28]	; (801de18 <_read_r+0x20>)
 801ddfc:	4604      	mov	r4, r0
 801ddfe:	4608      	mov	r0, r1
 801de00:	4611      	mov	r1, r2
 801de02:	2200      	movs	r2, #0
 801de04:	602a      	str	r2, [r5, #0]
 801de06:	461a      	mov	r2, r3
 801de08:	f7e4 f8d0 	bl	8001fac <_read>
 801de0c:	1c43      	adds	r3, r0, #1
 801de0e:	d102      	bne.n	801de16 <_read_r+0x1e>
 801de10:	682b      	ldr	r3, [r5, #0]
 801de12:	b103      	cbz	r3, 801de16 <_read_r+0x1e>
 801de14:	6023      	str	r3, [r4, #0]
 801de16:	bd38      	pop	{r3, r4, r5, pc}
 801de18:	2000aaac 	.word	0x2000aaac

0801de1c <_init>:
 801de1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801de1e:	bf00      	nop
 801de20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801de22:	bc08      	pop	{r3}
 801de24:	469e      	mov	lr, r3
 801de26:	4770      	bx	lr

0801de28 <_fini>:
 801de28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801de2a:	bf00      	nop
 801de2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801de2e:	bc08      	pop	{r3}
 801de30:	469e      	mov	lr, r3
 801de32:	4770      	bx	lr
