
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001cc4c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000036e0  0801ce0c  0801ce0c  0002ce0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  080204ec  080204ec  000304ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08020504  08020504  00064ddc  2**0
                  CONTENTS
  5 .ARM          00000008  08020504  08020504  00030504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802050c  0802050c  00064ddc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802050c  0802050c  0003050c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08020524  08020524  00030524  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0802052c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a698  20000140  0802066c  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a7d8  0802066c  0004a7d8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00064ddc  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00013ec0  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00000f04  90013ec0  90013ec0  00063ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000018  90014dc4  90014dc4  00064dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00049a88  00000000  00000000  00064e0c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00099903  00000000  00000000  000ae894  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000132ae  00000000  00000000  00148197  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000029e0  00000000  00000000  0015b448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012bdd9  00000000  00000000  0015de28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004560  00000000  00000000  00289c08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00025f85  00000000  00000000  0028e168  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037e8b  00000000  00000000  002b40ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  002ebf78  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007ec4  00000000  00000000  002ec048  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801cdf4 	.word	0x0801cdf4

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801cdf4 	.word	0x0801cdf4

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 fb07 	bl	8003be0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01b fba9 	bl	801bd28 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff7d 	bl	80014d4 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	0802052c 	.word	0x0802052c
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a7d8 	.word	0x2000a7d8

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf9 	b.w	80011ec <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be67 	b.w	80012cc <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f002 be55 	b.w	80032b0 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f002 be8c 	b.w	8003324 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01b faf0 	bl	801bc38 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01b faaf 	bl	801bc38 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01b faa7 	bl	801bc38 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 f9c3 	bl	8003a84 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2127      	movs	r1, #39	; 0x27
 8000716:	f01b fabd 	bl	801bc94 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801ce90 	.word	0x0801ce90
 8000724:	0801cea3 	.word	0x0801cea3
 8000728:	0801cecd 	.word	0x0801cecd

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 f9db 	bl	8003af4 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2801      	cmp	r0, #1
 8000762:	d00b      	beq.n	800077c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000764:	2803      	cmp	r0, #3
 8000766:	d010      	beq.n	800078a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000768:	b9c0      	cbnz	r0, 800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0d      	ldr	r3, [pc, #52]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	480b      	ldr	r0, [pc, #44]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	f004 ba56 	b.w	8004c28 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2140      	movs	r1, #64	; 0x40
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800078c:	4806      	ldr	r0, [pc, #24]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 800078e:	68da      	ldr	r2, [r3, #12]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800079a:	e7ed      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000164 	.word	0x20000164
 80007a4:	40020000 	.word	0x40020000
 80007a8:	40021800 	.word	0x40021800

080007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007ac:	2801      	cmp	r0, #1
 80007ae:	d00b      	beq.n	80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 80007b0:	2803      	cmp	r0, #3
 80007b2:	d010      	beq.n	80007d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80007b4:	b9c0      	cbnz	r0, 80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0d      	ldr	r3, [pc, #52]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	480b      	ldr	r0, [pc, #44]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	f004 ba30 	b.w	8004c28 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b08      	ldr	r3, [pc, #32]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2140      	movs	r1, #64	; 0x40
 80007d4:	e7f5      	b.n	80007c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007d8:	4806      	ldr	r0, [pc, #24]	; (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	3a00      	subs	r2, #0
 80007de:	bf18      	it	ne
 80007e0:	2201      	movne	r2, #1
 80007e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007e6:	e7ed      	b.n	80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000164 	.word	0x20000164
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40021800 	.word	0x40021800

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2801      	cmp	r0, #1
 80007fa:	d006      	beq.n	800080a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 80007fc:	2803      	cmp	r0, #3
 80007fe:	d006      	beq.n	800080e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8000800:	b948      	cbnz	r0, 8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000804:	4804      	ldr	r0, [pc, #16]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	f004 ba14 	b.w	8004c32 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080a:	2140      	movs	r1, #64	; 0x40
 800080c:	e7fa      	b.n	8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800080e:	4803      	ldr	r0, [pc, #12]	; (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000810:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000814:	e7f7      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000816:	4770      	bx	lr
 8000818:	40020000 	.word	0x40020000
 800081c:	40021800 	.word	0x40021800

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000820:	2801      	cmp	r0, #1
{
 8000822:	b508      	push	{r3, lr}
    switch (id)
 8000824:	d00a      	beq.n	800083c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000826:	2803      	cmp	r0, #3
 8000828:	d00a      	beq.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 800082a:	b968      	cbnz	r0, 8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800082e:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	f004 f9f4 	bl	8004c1c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000834:	1e43      	subs	r3, r0, #1
 8000836:	4258      	negs	r0, r3
 8000838:	4158      	adcs	r0, r3
 800083a:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083c:	2140      	movs	r1, #64	; 0x40
 800083e:	e7f6      	b.n	800082e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4803      	ldr	r0, [pc, #12]	; (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000846:	e7f3      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000848:	2000      	movs	r0, #0
 800084a:	e7f3      	b.n	8000834 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 800084c:	40020000 	.word	0x40020000
 8000850:	40021800 	.word	0x40021800

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	; (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000164 	.word	0x20000164

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000882:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	2000a533 	.word	0x2000a533

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b4:	6840      	ldr	r0, [r0, #4]
 80008b6:	6803      	ldr	r3, [r0, #0]
 80008b8:	699b      	ldr	r3, [r3, #24]
 80008ba:	4718      	bx	r3

080008bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008be:	4770      	bx	lr

080008c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80008c0:	4b01      	ldr	r3, [pc, #4]	; (80008c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	20000174 	.word	0x20000174

080008cc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008cc:	4770      	bx	lr
	...

080008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4604      	mov	r4, r0
    mcuInstr.init();
 80008d4:	4d09      	ldr	r5, [pc, #36]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008d6:	f7ff ffbd 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 fd76 	bl	80013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008e0:	2300      	movs	r3, #0
 80008e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008e6:	4628      	mov	r0, r5
 80008e8:	f7ff fe94 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008ec:	2301      	movs	r3, #1
 80008ee:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008f2:	4b03      	ldr	r3, [pc, #12]	; (8000900 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008f4:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008f6:	6163      	str	r3, [r4, #20]
}
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	bf00      	nop
 80008fc:	20000180 	.word	0x20000180
 8000900:	2000017c 	.word	0x2000017c

08000904 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000904:	6803      	ldr	r3, [r0, #0]
{
 8000906:	4604      	mov	r4, r0
 8000908:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800090a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090e:	4798      	blx	r3
    enableInterrupts();
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	4620      	mov	r0, r4
 8000914:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000916:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000918:	f000 fa2e 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4620      	mov	r0, r4
 8000920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000922:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000924:	2100      	movs	r1, #0
 8000926:	4806      	ldr	r0, [pc, #24]	; (8000940 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	2329      	movs	r3, #41	; 0x29
 800092c:	2215      	movs	r2, #21
 800092e:	f003 ff64 	bl	80047fa <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000932:	f000 fa21 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	4620      	mov	r0, r4
 800093a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800093c:	4798      	blx	r3
    for (;;)
 800093e:	e7f8      	b.n	8000932 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000940:	20001360 	.word	0x20001360

08000944 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000944:	b510      	push	{r4, lr}
 8000946:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000948:	f009 fc56 	bl	800a1f8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800094c:	6823      	ldr	r3, [r4, #0]
 800094e:	4620      	mov	r0, r4
 8000950:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000958:	4718      	bx	r3

0800095a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800095a:	f000 bd36 	b.w	80013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800095e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800095e:	f000 bd4c 	b.w	80013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000962 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000962:	f000 bd4c 	b.w	80013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000966 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000966:	f000 bd1f 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800096a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800096a:	f000 bd25 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800096e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800096e:	f000 bd49 	b.w	8001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000974 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000976:	2200      	movs	r2, #0
 8000978:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800097a:	f008 be05 	b.w	8009588 <_ZN8touchgfx3HAL10beginFrameEv>
 800097e:	bf00      	nop
 8000980:	20000014 	.word	0x20000014

08000984 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000984:	b510      	push	{r4, lr}
 8000986:	4604      	mov	r4, r0
    HAL::endFrame();
 8000988:	f008 fe0a 	bl	80095a0 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800098c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000990:	b113      	cbz	r3, 8000998 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000992:	4b02      	ldr	r3, [pc, #8]	; (800099c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
    }
}
 8000998:	bd10      	pop	{r4, pc}
 800099a:	bf00      	nop
 800099c:	20000014 	.word	0x20000014

080009a0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009a0:	f008 bdb6 	b.w	8009510 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009a4 <_ZN11TouchGFXHALD0Ev>:
 80009a4:	b510      	push	{r4, lr}
 80009a6:	217c      	movs	r1, #124	; 0x7c
 80009a8:	4604      	mov	r4, r0
 80009aa:	f01b f945 	bl	801bc38 <_ZdlPvj>
 80009ae:	4620      	mov	r0, r4
 80009b0:	bd10      	pop	{r4, pc}

080009b2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009b2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009b6:	b11b      	cbz	r3, 80009c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009b8:	6840      	ldr	r0, [r0, #4]
 80009ba:	6803      	ldr	r3, [r0, #0]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4718      	bx	r3
    }
 80009c0:	4618      	mov	r0, r3
 80009c2:	4770      	bx	lr

080009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009ca:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009d4:	d009      	beq.n	80009ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009d6:	b93a      	cbnz	r2, 80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009d8:	4a0a      	ldr	r2, [pc, #40]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009da:	490b      	ldr	r1, [pc, #44]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009e6:	701a      	strb	r2, [r3, #0]
    }
 80009e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	d0fc      	beq.n	80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ee:	4a05      	ldr	r2, [pc, #20]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f0:	4905      	ldr	r1, [pc, #20]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009fa:	2200      	movs	r2, #0
 80009fc:	e7f3      	b.n	80009e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009fe:	bf00      	nop
 8000a00:	2000a52c 	.word	0x2000a52c
 8000a04:	2000a528 	.word	0x2000a528
 8000a08:	2000a52a 	.word	0x2000a52a

08000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a0c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	428b      	cmp	r3, r1
 8000a14:	d803      	bhi.n	8000a1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a16:	4b08      	ldr	r3, [pc, #32]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	4293      	cmp	r3, r2
 8000a1c:	d905      	bls.n	8000a2a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a22:	4808      	ldr	r0, [pc, #32]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a24:	219e      	movs	r1, #158	; 0x9e
 8000a26:	f01b f935 	bl	801bc94 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a2a:	4b07      	ldr	r3, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a2c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a30:	801a      	strh	r2, [r3, #0]
    }
 8000a32:	bd08      	pop	{r3, pc}
 8000a34:	2000a528 	.word	0x2000a528
 8000a38:	2000a52a 	.word	0x2000a52a
 8000a3c:	0801cf30 	.word	0x0801cf30
 8000a40:	0801cf93 	.word	0x0801cf93
 8000a44:	0801cfd6 	.word	0x0801cfd6
 8000a48:	2000a52e 	.word	0x2000a52e
 8000a4c:	2000a530 	.word	0x2000a530

08000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460d      	mov	r5, r1
 8000a54:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000a56:	4b0b      	ldr	r3, [pc, #44]	; (8000a84 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a58:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a5a:	b935      	cbnz	r5, 8000a6a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000a5c:	4b0a      	ldr	r3, [pc, #40]	; (8000a88 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a5e:	4a0b      	ldr	r2, [pc, #44]	; (8000a8c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a60:	480b      	ldr	r0, [pc, #44]	; (8000a90 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a62:	f240 21bb 	movw	r1, #699	; 0x2bb
 8000a66:	f01b f915 	bl	801bc94 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a6a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a6e:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000a70:	3a00      	subs	r2, #0
 8000a72:	bf18      	it	ne
 8000a74:	2201      	movne	r2, #1
 8000a76:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a78:	6803      	ldr	r3, [r0, #0]
}
 8000a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a82:	4718      	bx	r3
 8000a84:	20000174 	.word	0x20000174
 8000a88:	0801d01b 	.word	0x0801d01b
 8000a8c:	0801d053 	.word	0x0801d053
 8000a90:	0801cfd6 	.word	0x0801cfd6
 8000a94:	2000a532 	.word	0x2000a532

08000a98 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a98:	2801      	cmp	r0, #1
    {
 8000a9a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a9c:	d80a      	bhi.n	8000ab4 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a9e:	784b      	ldrb	r3, [r1, #1]
 8000aa0:	9300      	str	r3, [sp, #0]
 8000aa2:	780b      	ldrb	r3, [r1, #0]
 8000aa4:	4808      	ldr	r0, [pc, #32]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000aa6:	2215      	movs	r2, #21
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	f003 fea6 	bl	80047fa <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000aae:	b003      	add	sp, #12
 8000ab0:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000ab4:	9101      	str	r1, [sp, #4]
 8000ab6:	5c0b      	ldrb	r3, [r1, r0]
 8000ab8:	9300      	str	r3, [sp, #0]
 8000aba:	2239      	movs	r2, #57	; 0x39
 8000abc:	4603      	mov	r3, r0
 8000abe:	2100      	movs	r1, #0
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000ac2:	f003 feab 	bl	800481c <HAL_DSI_LongWrite>
    }
 8000ac6:	e7f2      	b.n	8000aae <DSI_IO_WriteCmd+0x16>
 8000ac8:	20001360 	.word	0x20001360

08000acc <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ad0:	4c0b      	ldr	r4, [pc, #44]	; (8000b00 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000ad2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000ad6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ada:	9201      	str	r2, [sp, #4]
 8000adc:	2244      	movs	r2, #68	; 0x44
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	2100      	movs	r1, #0
 8000ae2:	2239      	movs	r2, #57	; 0x39
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f003 fe99 	bl	800481c <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aea:	2100      	movs	r1, #0
 8000aec:	9100      	str	r1, [sp, #0]
 8000aee:	2335      	movs	r3, #53	; 0x35
 8000af0:	462a      	mov	r2, r5
 8000af2:	4620      	mov	r0, r4
 8000af4:	f003 fe81 	bl	80047fa <HAL_DSI_ShortWrite>
    }
 8000af8:	b003      	add	sp, #12
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	2000018c 	.word	0x2000018c
 8000b00:	20001360 	.word	0x20001360

08000b04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000b04:	b507      	push	{r0, r1, r2, lr}
 8000b06:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000b08:	f7ff ffe0 	bl	8000acc <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b0c:	9801      	ldr	r0, [sp, #4]
}
 8000b0e:	b003      	add	sp, #12
 8000b10:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b14:	f000 bc58 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000b18 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000b18:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	; (8000b38 <LCD_SetUpdateRegion+0x20>)
 8000b1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000b20:	232a      	movs	r3, #42	; 0x2a
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	9300      	str	r3, [sp, #0]
 8000b26:	2239      	movs	r2, #57	; 0x39
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <LCD_SetUpdateRegion+0x24>)
 8000b2e:	f003 fe75 	bl	800481c <HAL_DSI_LongWrite>
    }
 8000b32:	b003      	add	sp, #12
 8000b34:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b38:	20000004 	.word	0x20000004
 8000b3c:	20001360 	.word	0x20001360

08000b40 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b40:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b42:	4d15      	ldr	r5, [pc, #84]	; (8000b98 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b44:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b46:	2000      	movs	r0, #0
 8000b48:	f7ff fe0a 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b4c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b4e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b52:	3301      	adds	r3, #1
 8000b54:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b58:	f000 f902 	bl	8000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b5e:	6828      	ldr	r0, [r5, #0]
 8000b60:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b62:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b64:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b68:	b123      	cbz	r3, 8000b74 <HAL_DSI_TearingEffectCallback+0x34>
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ba0 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b6c:	782b      	ldrb	r3, [r5, #0]
 8000b6e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b72:	b123      	cbz	r3, 8000b7e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff be17 	b.w	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b7e:	f009 fb3b 	bl	800a1f8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b82:	4b08      	ldr	r3, [pc, #32]	; (8000ba4 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b84:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b86:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b88:	f7ff ffc6 	bl	8000b18 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f003 fe24 	bl	80047da <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b92:	2301      	movs	r3, #1
 8000b94:	702b      	strb	r3, [r5, #0]
    }
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2000a534 	.word	0x2000a534
 8000b9c:	20000014 	.word	0x20000014
 8000ba0:	2000018e 	.word	0x2000018e
 8000ba4:	20000178 	.word	0x20000178

08000ba8 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000ba8:	4b33      	ldr	r3, [pc, #204]	; (8000c78 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	3201      	adds	r2, #1
    {
 8000bae:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000bb0:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bb2:	4b32      	ldr	r3, [pc, #200]	; (8000c7c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb4:	4c32      	ldr	r4, [pc, #200]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bb6:	6819      	ldr	r1, [r3, #0]
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000bba:	2a03      	cmp	r2, #3
    {
 8000bbc:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000bbe:	dc2e      	bgt.n	8000c1e <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000bc4:	f020 0008 	bic.w	r0, r0, #8
 8000bc8:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000bd0:	fb00 1102 	mla	r1, r0, r2, r1
 8000bd4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000bd8:	bf0c      	ite	eq
 8000bda:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000bdc:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bde:	3302      	adds	r3, #2
 8000be0:	4928      	ldr	r1, [pc, #160]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	041b      	lsls	r3, r3, #16
 8000be4:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000be8:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bea:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000bec:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bee:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bf2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bf6:	4b25      	ldr	r3, [pc, #148]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bf8:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bfc:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000bfe:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c00:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000c02:	f7ff ff89 	bl	8000b18 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000c06:	4a1e      	ldr	r2, [pc, #120]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000c08:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000c0c:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000c10:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000c1a:	f003 bdde 	b.w	80047da <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000c1e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000c22:	f022 0208 	bic.w	r2, r2, #8
 8000c26:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000c2c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c30:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000c32:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000c36:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c38:	4a16      	ldr	r2, [pc, #88]	; (8000c94 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c3a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c3e:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c40:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c44:	2201      	movs	r2, #1
 8000c46:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f7ff ff65 	bl	8000b18 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c4e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fda6 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c66:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000c68:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c6a:	b120      	cbz	r0, 8000c76 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000c6c:	6803      	ldr	r3, [r0, #0]
    }
 8000c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c72:	6a1b      	ldr	r3, [r3, #32]
 8000c74:	4718      	bx	r3
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	20000178 	.word	0x20000178
 8000c7c:	20000174 	.word	0x20000174
 8000c80:	40016c00 	.word	0x40016c00
 8000c84:	40016800 	.word	0x40016800
 8000c88:	00ca01e3 	.word	0x00ca01e3
 8000c8c:	06800193 	.word	0x06800193
 8000c90:	00ca01e2 	.word	0x00ca01e2
 8000c94:	00ca0003 	.word	0x00ca0003
 8000c98:	2000018e 	.word	0x2000018e
 8000c9c:	2000a534 	.word	0x2000a534

08000ca0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000ca0:	b508      	push	{r3, lr}
        return instance;
 8000ca2:	4b04      	ldr	r3, [pc, #16]	; (8000cb4 <IdleTaskHook+0x14>)
 8000ca4:	4601      	mov	r1, r0
 8000ca6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000ca8:	b101      	cbz	r1, 8000cac <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000caa:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000cac:	f009 fabe 	bl	800a22c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000cb0:	2001      	movs	r0, #1
 8000cb2:	bd08      	pop	{r3, pc}
 8000cb4:	2000a534 	.word	0x2000a534

08000cb8 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000cc4:	601a      	str	r2, [r3, #0]
 8000cc6:	4b05      	ldr	r3, [pc, #20]	; (8000cdc <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000cc8:	6003      	str	r3, [r0, #0]
        init();
 8000cca:	f7ff bcd9 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000cce:	bf00      	nop
 8000cd0:	20000180 	.word	0x20000180
 8000cd4:	2000017c 	.word	0x2000017c
 8000cd8:	0801ce54 	.word	0x0801ce54
 8000cdc:	0801ce7c 	.word	0x0801ce7c

08000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce0:	2101      	movs	r1, #1
{
 8000ce2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	4608      	mov	r0, r1
 8000ce8:	f006 f81f 	bl	8006d2a <osSemaphoreNew>
 8000cec:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cf0:	b928      	cbnz	r0, 8000cfe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cf4:	4a0a      	ldr	r2, [pc, #40]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cf6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cf8:	480a      	ldr	r0, [pc, #40]	; (8000d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cfa:	f01a ffcb 	bl	801bc94 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cfe:	2200      	movs	r2, #0
 8000d00:	2104      	movs	r1, #4
 8000d02:	2001      	movs	r0, #1
 8000d04:	f006 f8ae 	bl	8006e64 <osMessageQueueNew>
 8000d08:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000d0a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000d0c:	b918      	cbnz	r0, 8000d16 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000d0e:	4b07      	ldr	r3, [pc, #28]	; (8000d2c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000d10:	4a03      	ldr	r2, [pc, #12]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000d12:	212c      	movs	r1, #44	; 0x2c
 8000d14:	e7f0      	b.n	8000cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000d16:	bd08      	pop	{r3, pc}
 8000d18:	20000194 	.word	0x20000194
 8000d1c:	0801d17c 	.word	0x0801d17c
 8000d20:	0801d1c5 	.word	0x0801d1c5
 8000d24:	0801d1f4 	.word	0x0801d1f4
 8000d28:	20000190 	.word	0x20000190
 8000d2c:	0801d23c 	.word	0x0801d23c

08000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000d30:	4b02      	ldr	r3, [pc, #8]	; (8000d3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000d32:	f04f 31ff 	mov.w	r1, #4294967295
 8000d36:	6818      	ldr	r0, [r3, #0]
 8000d38:	f006 b841 	b.w	8006dbe <osSemaphoreAcquire>
 8000d3c:	20000194 	.word	0x20000194

08000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d42:	6818      	ldr	r0, [r3, #0]
 8000d44:	f006 b866 	b.w	8006e14 <osSemaphoreRelease>
 8000d48:	20000194 	.word	0x20000194

08000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	6818      	ldr	r0, [r3, #0]
 8000d52:	f006 b834 	b.w	8006dbe <osSemaphoreAcquire>
 8000d56:	bf00      	nop
 8000d58:	20000194 	.word	0x20000194

08000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d5c:	f7ff bff0 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d60:	4803      	ldr	r0, [pc, #12]	; (8000d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d62:	4904      	ldr	r1, [pc, #16]	; (8000d74 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d64:	6800      	ldr	r0, [r0, #0]
 8000d66:	2300      	movs	r3, #0
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f006 b8b6 	b.w	8006eda <osMessageQueuePut>
 8000d6e:	bf00      	nop
 8000d70:	20000190 	.word	0x20000190
 8000d74:	20000018 	.word	0x20000018

08000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d78:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d7a:	4c08      	ldr	r4, [pc, #32]	; (8000d9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	461a      	mov	r2, r3
 8000d80:	a901      	add	r1, sp, #4
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	f006 f8d9 	bl	8006f3a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d88:	6820      	ldr	r0, [r4, #0]
 8000d8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000d8e:	2200      	movs	r2, #0
 8000d90:	a901      	add	r1, sp, #4
 8000d92:	f006 f8d2 	bl	8006f3a <osMessageQueueGet>
}
 8000d96:	b002      	add	sp, #8
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	20000190 	.word	0x20000190

08000da0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000da4:	4718      	bx	r3

08000da6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000da6:	2001      	movs	r0, #1
 8000da8:	4770      	bx	lr

08000daa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000daa:	6803      	ldr	r3, [r0, #0]
 8000dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000dae:	4718      	bx	r3

08000db0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000db0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	9301      	str	r3, [sp, #4]
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <_ZN8STM32DMA10initializeEv+0x3c>)
 8000db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dba:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000dc6:	9201      	str	r2, [sp, #4]
 8000dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000dca:	691a      	ldr	r2, [r3, #16]
 8000dcc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000dd2:	691a      	ldr	r2, [r3, #16]
 8000dd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000dd8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <_ZN8STM32DMA10initializeEv+0x40>)
 8000ddc:	4a05      	ldr	r2, [pc, #20]	; (8000df4 <_ZN8STM32DMA10initializeEv+0x44>)
 8000dde:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <_ZN8STM32DMA10initializeEv+0x48>)
 8000de2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000de6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000de8:	b002      	add	sp, #8
 8000dea:	4770      	bx	lr
 8000dec:	40023800 	.word	0x40023800
 8000df0:	20001320 	.word	0x20001320
 8000df4:	08000e3d 	.word	0x08000e3d
 8000df8:	e000e100 	.word	0xe000e100

08000dfc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dfc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000e00:	4770      	bx	lr
	...

08000e04 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000e04:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8STM32DMAD1Ev+0x18>)
 8000e06:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_ZN8STM32DMAD1Ev+0x1c>)
 8000e0a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000e16:	f3bf 8f6f 	isb	sy
}
 8000e1a:	4770      	bx	lr
 8000e1c:	0801d3d4 	.word	0x0801d3d4
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000e24:	b510      	push	{r4, lr}
 8000e26:	4604      	mov	r4, r0
}
 8000e28:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000e2c:	f7ff ffea 	bl	8000e04 <_ZN8STM32DMAD1Ev>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f01a ff01 	bl	801bc38 <_ZdlPvj>
 8000e36:	4620      	mov	r0, r4
 8000e38:	bd10      	pop	{r4, pc}
	...

08000e3c <DMA2D_XferCpltCallback>:
 8000e3c:	4b02      	ldr	r3, [pc, #8]	; (8000e48 <DMA2D_XferCpltCallback+0xc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e42:	6803      	ldr	r3, [r0, #0]
 8000e44:	695b      	ldr	r3, [r3, #20]
 8000e46:	4718      	bx	r3
 8000e48:	2000a534 	.word	0x2000a534

08000e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e4c:	b570      	push	{r4, r5, r6, lr}
 8000e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e50:	4625      	mov	r5, r4
 8000e52:	4b0a      	ldr	r3, [pc, #40]	; (8000e7c <_ZN8STM32DMAC1Ev+0x30>)
 8000e54:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e56:	2600      	movs	r6, #0
 8000e58:	6060      	str	r0, [r4, #4]
 8000e5a:	7226      	strb	r6, [r4, #8]
 8000e5c:	7266      	strb	r6, [r4, #9]
 8000e5e:	f845 3b20 	str.w	r3, [r5], #32
 8000e62:	2260      	movs	r2, #96	; 0x60
 8000e64:	4629      	mov	r1, r5
 8000e66:	f009 fb47 	bl	800a4f8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000e6e:	60ee      	str	r6, [r5, #12]
 8000e70:	3524      	adds	r5, #36	; 0x24
 8000e72:	42ab      	cmp	r3, r5
 8000e74:	d1fb      	bne.n	8000e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e76:	4620      	mov	r0, r4
 8000e78:	bd70      	pop	{r4, r5, r6, pc}
 8000e7a:	bf00      	nop
 8000e7c:	0801d3d4 	.word	0x0801d3d4

08000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000e80:	b508      	push	{r3, lr}
    switch (format)
 8000e82:	290b      	cmp	r1, #11
 8000e84:	d80b      	bhi.n	8000e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000e86:	e8df f001 	tbb	[pc, r1]
 8000e8a:	0612      	.short	0x0612
 8000e8c:	0a0a0a10 	.word	0x0a0a0a10
 8000e90:	0808080a 	.word	0x0808080a
 8000e94:	0808      	.short	0x0808
 8000e96:	2001      	movs	r0, #1
}
 8000e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000e9a:	2005      	movs	r0, #5
        break;
 8000e9c:	e7fc      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000e9e:	4b05      	ldr	r3, [pc, #20]	; (8000eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ea2:	4806      	ldr	r0, [pc, #24]	; (8000ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000ea4:	2166      	movs	r1, #102	; 0x66
 8000ea6:	f01a fef5 	bl	801bc94 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e7f4      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eb0:	e7f2      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eb2:	bf00      	nop
 8000eb4:	0801d27e 	.word	0x0801d27e
 8000eb8:	0801d299 	.word	0x0801d299
 8000ebc:	0801d2e3 	.word	0x0801d2e3

08000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ec0:	b508      	push	{r3, lr}
    switch (format)
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d809      	bhi.n	8000eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ec6:	e8df f001 	tbb	[pc, r1]
 8000eca:	0610      	.short	0x0610
 8000ecc:	0808080e 	.word	0x0808080e
 8000ed0:	06060608 	.word	0x06060608
 8000ed4:	06          	.byte	0x06
 8000ed5:	00          	.byte	0x00
 8000ed6:	2001      	movs	r0, #1
}
 8000ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000edc:	4a05      	ldr	r2, [pc, #20]	; (8000ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ede:	4806      	ldr	r0, [pc, #24]	; (8000ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ee0:	2187      	movs	r1, #135	; 0x87
 8000ee2:	f01a fed7 	bl	801bc94 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f6      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eec:	e7f4      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eee:	bf00      	nop
 8000ef0:	0801d27e 	.word	0x0801d27e
 8000ef4:	0801d329 	.word	0x0801d329
 8000ef8:	0801d2e3 	.word	0x0801d2e3

08000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8000f02:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f04:	4639      	mov	r1, r7
{
 8000f06:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f08:	f7ff ffba 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f12:	4641      	mov	r1, r8
 8000f14:	4648      	mov	r0, r9
 8000f16:	f7ff ffb3 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1e:	4648      	mov	r0, r9
 8000f20:	f7ff ffce 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f24:	8aa1      	ldrh	r1, [r4, #20]
 8000f26:	8b62      	ldrh	r2, [r4, #26]
 8000f28:	4b42      	ldr	r3, [pc, #264]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f2a:	1a52      	subs	r2, r2, r1
 8000f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000f30:	8b22      	ldrh	r2, [r4, #24]
 8000f32:	1a52      	subs	r2, r2, r1
 8000f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f3e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f40:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000f54:	d026      	beq.n	8000fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000f56:	d810      	bhi.n	8000f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000f58:	2920      	cmp	r1, #32
 8000f5a:	ea45 0402 	orr.w	r4, r5, r2
 8000f5e:	d061      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f60:	2940      	cmp	r1, #64	; 0x40
 8000f62:	d05f      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f64:	2904      	cmp	r1, #4
 8000f66:	d05d      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	4b32      	ldr	r3, [pc, #200]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f6a:	432a      	orrs	r2, r5
 8000f6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f70:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f74:	d05a      	beq.n	800102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a30      	ldr	r2, [pc, #192]	; (8001038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000f78:	e040      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000f7e:	d007      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000f84:	d1f0      	bne.n	8000f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f8a:	f042 0209 	orr.w	r2, r2, #9
 8000f8e:	e003      	b.n	8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f98:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa0:	6158      	str	r0, [r3, #20]
 8000fa2:	e02a      	b.n	8000ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000fa4:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fa6:	432a      	orrs	r2, r5
 8000fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000fac:	1d21      	adds	r1, r4, #4
 8000fae:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fb0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb2:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb4:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb8:	b142      	cbz	r2, 8000fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000fba:	2a01      	cmp	r2, #1
 8000fbc:	d021      	beq.n	8001002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000fbe:	4b1f      	ldr	r3, [pc, #124]	; (800103c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000fc0:	4a1f      	ldr	r2, [pc, #124]	; (8001040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000fc2:	4820      	ldr	r0, [pc, #128]	; (8001044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000fc4:	f240 1111 	movw	r1, #273	; 0x111
 8000fc8:	f01a fe64 	bl	801bc94 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000fcc:	69da      	ldr	r2, [r3, #28]
 8000fce:	8861      	ldrh	r1, [r4, #2]
 8000fd0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000fd4:	3901      	subs	r1, #1
 8000fd6:	f022 0210 	bic.w	r2, r2, #16
 8000fda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000fde:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000fe0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000fe2:	4b14      	ldr	r3, [pc, #80]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000fe4:	69da      	ldr	r2, [r3, #28]
 8000fe6:	f042 0220 	orr.w	r2, r2, #32
 8000fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000fec:	69da      	ldr	r2, [r3, #28]
 8000fee:	0692      	lsls	r2, r2, #26
 8000ff0:	d4fc      	bmi.n	8000fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ff2:	2210      	movs	r2, #16
 8000ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d0bd      	beq.n	8000f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffa:	4a13      	ldr	r2, [pc, #76]	; (8001048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001002:	8862      	ldrh	r2, [r4, #2]
 8001004:	69d9      	ldr	r1, [r3, #28]
 8001006:	1e54      	subs	r4, r2, #1
 8001008:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800100c:	f022 0210 	bic.w	r2, r2, #16
 8001010:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001014:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001018:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 800101c:	bf18      	it	ne
 800101e:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001020:	61da      	str	r2, [r3, #28]
                break;
 8001022:	e7de      	b.n	8000fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001024:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001028:	61dc      	str	r4, [r3, #28]
 800102a:	e7b8      	b.n	8000f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800102c:	f240 2201 	movw	r2, #513	; 0x201
 8001030:	e7e4      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001032:	bf00      	nop
 8001034:	4002b000 	.word	0x4002b000
 8001038:	00010201 	.word	0x00010201
 800103c:	0801d374 	.word	0x0801d374
 8001040:	0801d38e 	.word	0x0801d38e
 8001044:	0801d2e3 	.word	0x0801d2e3
 8001048:	00020201 	.word	0x00020201

0800104c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001050:	7f89      	ldrb	r1, [r1, #30]
 8001052:	f7ff ff35 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001056:	8aa6      	ldrh	r6, [r4, #20]
 8001058:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800105a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800105e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001060:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001062:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001066:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001068:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800106a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800106c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800106e:	6826      	ldr	r6, [r4, #0]
 8001070:	68e1      	ldr	r1, [r4, #12]
 8001072:	2e08      	cmp	r6, #8
 8001074:	d10d      	bne.n	8001092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800107a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800107c:	7f20      	ldrb	r0, [r4, #28]
 800107e:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001086:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001088:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800108e:	601a      	str	r2, [r3, #0]
    }
}
 8001090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001098:	0948      	lsrs	r0, r1, #5
 800109a:	0a0a      	lsrs	r2, r1, #8
 800109c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80010a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80010a4:	4302      	orrs	r2, r0
 80010a6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80010aa:	430a      	orrs	r2, r1
 80010ac:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80010ae:	4a04      	ldr	r2, [pc, #16]	; (80010c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80010b0:	e7ed      	b.n	800108e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80010b2:	bf00      	nop
 80010b4:	4002b000 	.word	0x4002b000
 80010b8:	00010009 	.word	0x00010009
 80010bc:	00020201 	.word	0x00020201
 80010c0:	00030201 	.word	0x00030201

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010c8:	200c      	movs	r0, #12
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010cc:	230c      	movs	r3, #12
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010d6:	230c      	movs	r3, #12
 80010d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e4:	f44f 709a 	mov.w	r0, #308	; 0x134
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f44f 739a 	mov.w	r3, #308	; 0x134
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f6:	f44f 739a 	mov.w	r3, #308	; 0x134
 80010fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010fe:	3008      	adds	r0, #8
 8001100:	4770      	bx	lr

08001102 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001102:	2001      	movs	r0, #1
 8001104:	4770      	bx	lr

08001106 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001106:	2010      	movs	r0, #16
 8001108:	4770      	bx	lr

0800110a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800110a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110e:	3008      	adds	r0, #8
 8001110:	4770      	bx	lr

08001112 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001112:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001116:	3008      	adds	r0, #8
 8001118:	4770      	bx	lr

0800111a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800111a:	4608      	mov	r0, r1
 800111c:	f001 b8fe 	b.w	800231c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001120:	b510      	push	{r4, lr}
 8001122:	4b03      	ldr	r3, [pc, #12]	; (8001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001124:	6003      	str	r3, [r0, #0]
 8001126:	4604      	mov	r4, r0
 8001128:	f007 ff18 	bl	8008f5c <_ZN8touchgfx17AbstractPartitionD1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	bd10      	pop	{r4, pc}
 8001130:	0801d48c 	.word	0x0801d48c

08001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff fff2 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	2114      	movs	r1, #20
 8001140:	f01a fd7a 	bl	801bc38 <_ZdlPvj>
 8001144:	4620      	mov	r0, r4
 8001146:	bd10      	pop	{r4, pc}

08001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001148:	b510      	push	{r4, lr}
 800114a:	4b03      	ldr	r3, [pc, #12]	; (8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800114c:	6003      	str	r3, [r0, #0]
 800114e:	4604      	mov	r4, r0
 8001150:	f007 ff04 	bl	8008f5c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001154:	4620      	mov	r0, r4
 8001156:	bd10      	pop	{r4, pc}
 8001158:	0801d458 	.word	0x0801d458

0800115c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800115c:	b510      	push	{r4, lr}
 800115e:	4604      	mov	r4, r0
 8001160:	f7ff fff2 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800116a:	f01a fd65 	bl	801bc38 <_ZdlPvj>
 800116e:	4620      	mov	r0, r4
 8001170:	bd10      	pop	{r4, pc}
	...

08001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001174:	b510      	push	{r4, lr}
 8001176:	4b03      	ldr	r3, [pc, #12]	; (8001184 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001178:	6003      	str	r3, [r0, #0]
 800117a:	4604      	mov	r4, r0
 800117c:	f007 feee 	bl	8008f5c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001180:	4620      	mov	r0, r4
 8001182:	bd10      	pop	{r4, pc}
 8001184:	0801d424 	.word	0x0801d424

08001188 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001188:	b510      	push	{r4, lr}
 800118a:	4604      	mov	r4, r0
 800118c:	f7ff fff2 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001190:	4620      	mov	r0, r4
 8001192:	2118      	movs	r1, #24
 8001194:	f01a fd50 	bl	801bc38 <_ZdlPvj>
 8001198:	4620      	mov	r0, r4
 800119a:	bd10      	pop	{r4, pc}

0800119c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800119c:	b510      	push	{r4, lr}
 800119e:	4b08      	ldr	r3, [pc, #32]	; (80011c0 <_ZN12FrontendHeapD1Ev+0x24>)
 80011a0:	6003      	str	r3, [r0, #0]
 80011a2:	4604      	mov	r4, r0
 80011a4:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80011a8:	f7ff ffba 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011ac:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011b0:	f7ff ffca 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b4:	f104 0014 	add.w	r0, r4, #20
 80011b8:	f7ff ffdc 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011bc:	4620      	mov	r0, r4
 80011be:	bd10      	pop	{r4, pc}
 80011c0:	0801d4c0 	.word	0x0801d4c0

080011c4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011c4:	b508      	push	{r3, lr}
 80011c6:	4802      	ldr	r0, [pc, #8]	; (80011d0 <__tcf_0+0xc>)
 80011c8:	f7ff ffe8 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011cc:	bd08      	pop	{r3, pc}
 80011ce:	bf00      	nop
 80011d0:	2000019c 	.word	0x2000019c

080011d4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011d4:	b510      	push	{r4, lr}
 80011d6:	4604      	mov	r4, r0
 80011d8:	f7ff ffe0 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011dc:	4620      	mov	r0, r4
 80011de:	f44f 7136 	mov.w	r1, #728	; 0x2d8
 80011e2:	f01a fd29 	bl	801bc38 <_ZdlPvj>
 80011e6:	4620      	mov	r0, r4
 80011e8:	bd10      	pop	{r4, pc}
	...

080011ec <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011f0:	f000 ff1e 	bl	8002030 <_ZN14BitmapDatabase11getInstanceEv>
 80011f4:	4605      	mov	r5, r0
 80011f6:	f000 ff1f 	bl	8002038 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011fa:	2400      	movs	r4, #0
 80011fc:	4601      	mov	r1, r0
 80011fe:	4623      	mov	r3, r4
 8001200:	4628      	mov	r0, r5
 8001202:	4622      	mov	r2, r4
 8001204:	9400      	str	r4, [sp, #0]
 8001206:	f00e fbcf 	bl	800f9a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800120a:	4b25      	ldr	r3, [pc, #148]	; (80012a0 <touchgfx_init+0xb4>)
 800120c:	4a25      	ldr	r2, [pc, #148]	; (80012a4 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800120e:	4d26      	ldr	r5, [pc, #152]	; (80012a8 <touchgfx_init+0xbc>)
 8001210:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001212:	4620      	mov	r0, r4
 8001214:	f001 fc4a 	bl	8002aac <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001218:	4824      	ldr	r0, [pc, #144]	; (80012ac <touchgfx_init+0xc0>)
 800121a:	f00e fb11 	bl	800f840 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800121e:	782b      	ldrb	r3, [r5, #0]
 8001220:	f3bf 8f5b 	dmb	ish
 8001224:	07db      	lsls	r3, r3, #31
 8001226:	d435      	bmi.n	8001294 <touchgfx_init+0xa8>
 8001228:	4628      	mov	r0, r5
 800122a:	f01a fd07 	bl	801bc3c <__cxa_guard_acquire>
 800122e:	b388      	cbz	r0, 8001294 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001230:	4c1f      	ldr	r4, [pc, #124]	; (80012b0 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001232:	4b20      	ldr	r3, [pc, #128]	; (80012b4 <touchgfx_init+0xc8>)
 8001234:	6023      	str	r3, [r4, #0]
 8001236:	f504 76c0 	add.w	r6, r4, #384	; 0x180
 800123a:	f104 0014 	add.w	r0, r4, #20
 800123e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001242:	f504 77b4 	add.w	r7, r4, #360	; 0x168
 8001246:	6060      	str	r0, [r4, #4]
 8001248:	f8c4 8008 	str.w	r8, [r4, #8]
 800124c:	60e7      	str	r7, [r4, #12]
 800124e:	6126      	str	r6, [r4, #16]
 8001250:	f007 fe86 	bl	8008f60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001254:	4b18      	ldr	r3, [pc, #96]	; (80012b8 <touchgfx_init+0xcc>)
 8001256:	6163      	str	r3, [r4, #20]
 8001258:	4640      	mov	r0, r8
 800125a:	f007 fe81 	bl	8008f60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800125e:	4b17      	ldr	r3, [pc, #92]	; (80012bc <touchgfx_init+0xd0>)
 8001260:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001262:	4638      	mov	r0, r7
 8001264:	f007 fe7c 	bl	8008f60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001268:	4b15      	ldr	r3, [pc, #84]	; (80012c0 <touchgfx_init+0xd4>)
 800126a:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
 800126e:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 8001272:	f001 fc97 	bl	8002ba4 <_ZN5ModelC1Ev>
 8001276:	4622      	mov	r2, r4
 8001278:	f504 71be 	add.w	r1, r4, #380	; 0x17c
 800127c:	4630      	mov	r0, r6
 800127e:	f001 fc87 	bl	8002b90 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001282:	4630      	mov	r0, r6
 8001284:	f001 f84a 	bl	800231c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001288:	480e      	ldr	r0, [pc, #56]	; (80012c4 <touchgfx_init+0xd8>)
 800128a:	f01a fd21 	bl	801bcd0 <atexit>
 800128e:	4628      	mov	r0, r5
 8001290:	f01a fce0 	bl	801bc54 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001294:	480c      	ldr	r0, [pc, #48]	; (80012c8 <touchgfx_init+0xdc>)
}
 8001296:	b002      	add	sp, #8
 8001298:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800129c:	f7ff bb18 	b.w	80008d0 <_ZN11TouchGFXHAL10initializeEv>
 80012a0:	2000a590 	.word	0x2000a590
 80012a4:	20001294 	.word	0x20001294
 80012a8:	20000198 	.word	0x20000198
 80012ac:	2000001c 	.word	0x2000001c
 80012b0:	2000019c 	.word	0x2000019c
 80012b4:	0801d4c0 	.word	0x0801d4c0
 80012b8:	0801d424 	.word	0x0801d424
 80012bc:	0801d458 	.word	0x0801d458
 80012c0:	0801d48c 	.word	0x0801d48c
 80012c4:	080011c5 	.word	0x080011c5
 80012c8:	20001218 	.word	0x20001218

080012cc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012cc:	4801      	ldr	r0, [pc, #4]	; (80012d4 <touchgfx_taskEntry+0x8>)
 80012ce:	f7ff bb19 	b.w	8000904 <_ZN11TouchGFXHAL9taskEntryEv>
 80012d2:	bf00      	nop
 80012d4:	20001218 	.word	0x20001218

080012d8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012da:	4e23      	ldr	r6, [pc, #140]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80012dc:	4c23      	ldr	r4, [pc, #140]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80012de:	4d24      	ldr	r5, [pc, #144]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012e0:	4b24      	ldr	r3, [pc, #144]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012e2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012e4:	4630      	mov	r0, r6
 80012e6:	f7ff fdb1 	bl	8000e4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012ea:	4628      	mov	r0, r5
 80012ec:	f011 fd08 	bl	8012d00 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012f0:	4b21      	ldr	r3, [pc, #132]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012f2:	4822      	ldr	r0, [pc, #136]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80012f4:	60dc      	str	r4, [r3, #12]
 80012f6:	2200      	movs	r2, #0
 80012f8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012fc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001300:	491f      	ldr	r1, [pc, #124]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001302:	861a      	strh	r2, [r3, #48]	; 0x30
 8001304:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001308:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800130c:	6759      	str	r1, [r3, #116]	; 0x74
 800130e:	2101      	movs	r1, #1
 8001310:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001314:	491b      	ldr	r1, [pc, #108]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001316:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001318:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800131a:	f44f 7150 	mov.w	r1, #832	; 0x340
 800131e:	8001      	strh	r1, [r0, #0]
 8001320:	4819      	ldr	r0, [pc, #100]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001322:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001326:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001328:	4818      	ldr	r0, [pc, #96]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 800132a:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800132c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001330:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001334:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001338:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800133c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001340:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001344:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001348:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800134c:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001350:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001354:	8001      	strh	r1, [r0, #0]
 8001356:	480e      	ldr	r0, [pc, #56]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001358:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800135c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800135e:	490d      	ldr	r1, [pc, #52]	; (8001394 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001360:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001362:	4a0d      	ldr	r2, [pc, #52]	; (8001398 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001364:	601a      	str	r2, [r3, #0]
}
 8001366:	bd70      	pop	{r4, r5, r6, pc}
 8001368:	20000478 	.word	0x20000478
 800136c:	20000474 	.word	0x20000474
 8001370:	20001298 	.word	0x20001298
 8001374:	0801cf20 	.word	0x0801cf20
 8001378:	20001218 	.word	0x20001218
 800137c:	2000a528 	.word	0x2000a528
 8001380:	01000001 	.word	0x01000001
 8001384:	2000a534 	.word	0x2000a534
 8001388:	2000a52e 	.word	0x2000a52e
 800138c:	2000a52a 	.word	0x2000a52a
 8001390:	2000a530 	.word	0x2000a530
 8001394:	2000a52c 	.word	0x2000a52c
 8001398:	0801d0ac 	.word	0x0801d0ac

0800139c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800139e:	f7ff bd31 	b.w	8000e04 <_ZN8STM32DMAD1Ev>
 80013a2:	bf00      	nop
 80013a4:	20000478 	.word	0x20000478

080013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013aa:	2290      	movs	r2, #144	; 0x90
 80013ac:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b8:	4b02      	ldr	r3, [pc, #8]	; (80013c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013be:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c8:	4770      	bx	lr

080013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013cc:	b570      	push	{r4, r5, r6, lr}
 80013ce:	4604      	mov	r4, r0
    HAL::initialize();
 80013d0:	f008 f8f3 	bl	80095ba <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013d4:	6823      	ldr	r3, [r4, #0]
 80013d6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80013d8:	f00b faea 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 80013dc:	4601      	mov	r1, r0
 80013de:	4620      	mov	r0, r4
 80013e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013e2:	6823      	ldr	r3, [r4, #0]
 80013e4:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80013e8:	2300      	movs	r3, #0
 80013ea:	4620      	mov	r0, r4
 80013ec:	46ac      	mov	ip, r5
 80013ee:	461a      	mov	r2, r3
}
 80013f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013f4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013f8:	4760      	bx	ip

080013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013fa:	f008 b88f 	b.w	800951c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013fe:	f008 b9e8 	b.w	80097d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001404:	4b04      	ldr	r3, [pc, #16]	; (8001418 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001406:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800140a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800140e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001412:	f3bf 8f6f 	isb	sy
}
 8001416:	4770      	bx	lr
 8001418:	e000e100 	.word	0xe000e100

0800141c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 800141c:	4901      	ldr	r1, [pc, #4]	; (8001424 <vApplicationIdleHook+0x8>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 b8c0 	b.w	80085a4 <vTaskSetApplicationTaskTag>
 8001424:	08000ca1 	.word	0x08000ca1

08001428 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001428:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800142a:	2064      	movs	r0, #100	; 0x64
 800142c:	f005 fc71 	bl	8006d12 <osDelay>
  for(;;)
 8001430:	e7fb      	b.n	800142a <StartDefaultTask+0x2>
	...

08001434 <SystemClock_Config>:
{
 8001434:	b530      	push	{r4, r5, lr}
 8001436:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001438:	2210      	movs	r2, #16
 800143a:	2100      	movs	r1, #0
 800143c:	a809      	add	r0, sp, #36	; 0x24
 800143e:	f01a fcb5 	bl	801bdac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001442:	2214      	movs	r2, #20
 8001444:	2100      	movs	r1, #0
 8001446:	a802      	add	r0, sp, #8
 8001448:	f01a fcb0 	bl	801bdac <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800144c:	2400      	movs	r4, #0
 800144e:	4b1f      	ldr	r3, [pc, #124]	; (80014cc <SystemClock_Config+0x98>)
 8001450:	9400      	str	r4, [sp, #0]
 8001452:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001454:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001458:	641a      	str	r2, [r3, #64]	; 0x40
 800145a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001460:	9300      	str	r3, [sp, #0]
 8001462:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001464:	4b1a      	ldr	r3, [pc, #104]	; (80014d0 <SystemClock_Config+0x9c>)
 8001466:	9401      	str	r4, [sp, #4]
 8001468:	681a      	ldr	r2, [r3, #0]
 800146a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800146e:	601a      	str	r2, [r3, #0]
 8001470:	681b      	ldr	r3, [r3, #0]
 8001472:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001476:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001478:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800147a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800147c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001480:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001484:	2502      	movs	r5, #2
 8001486:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800148a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800148c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001490:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001494:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001498:	2004      	movs	r0, #4
 800149a:	2306      	movs	r3, #6
 800149c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a0:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014a2:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a4:	f004 ff6e 	bl	8006384 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a8:	f004 f9c2 	bl	8005830 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014ac:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014ae:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014b2:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b8:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	2105      	movs	r1, #5
 80014be:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014c0:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c4:	f004 fd32 	bl	8005f2c <HAL_RCC_ClockConfig>
}
 80014c8:	b015      	add	sp, #84	; 0x54
 80014ca:	bd30      	pop	{r4, r5, pc}
 80014cc:	40023800 	.word	0x40023800
 80014d0:	40007000 	.word	0x40007000

080014d4 <main>:
{
 80014d4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014d8:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 80014da:	f002 fb8f 	bl	8003bfc <HAL_Init>
  SystemClock_Config();
 80014de:	f7ff ffa9 	bl	8001434 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e2:	2214      	movs	r2, #20
 80014e4:	2100      	movs	r1, #0
 80014e6:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ea:	f01a fc5f 	bl	801bdac <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ee:	4bc8      	ldr	r3, [pc, #800]	; (8001810 <main+0x33c>)
 80014f0:	9403      	str	r4, [sp, #12]
 80014f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014f4:	48c7      	ldr	r0, [pc, #796]	; (8001814 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f6:	f042 0210 	orr.w	r2, r2, #16
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0210 	and.w	r2, r2, #16
 8001502:	9203      	str	r2, [sp, #12]
 8001504:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001506:	9404      	str	r4, [sp, #16]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0202 	orr.w	r2, r2, #2
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0202 	and.w	r2, r2, #2
 8001516:	9204      	str	r2, [sp, #16]
 8001518:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800151a:	9405      	str	r4, [sp, #20]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800152a:	9205      	str	r2, [sp, #20]
 800152c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152e:	9406      	str	r4, [sp, #24]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f042 0208 	orr.w	r2, r2, #8
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f002 0208 	and.w	r2, r2, #8
 800153e:	9206      	str	r2, [sp, #24]
 8001540:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001542:	9407      	str	r4, [sp, #28]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001552:	9207      	str	r2, [sp, #28]
 8001554:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001556:	9408      	str	r4, [sp, #32]
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f042 0220 	orr.w	r2, r2, #32
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f002 0220 	and.w	r2, r2, #32
 8001566:	9208      	str	r2, [sp, #32]
 8001568:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800156a:	9409      	str	r4, [sp, #36]	; 0x24
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800157a:	9209      	str	r2, [sp, #36]	; 0x24
 800157c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800157e:	940a      	str	r4, [sp, #40]	; 0x28
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800158e:	920a      	str	r2, [sp, #40]	; 0x28
 8001590:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001592:	940b      	str	r4, [sp, #44]	; 0x2c
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f042 0201 	orr.w	r2, r2, #1
 800159a:	631a      	str	r2, [r3, #48]	; 0x30
 800159c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159e:	f002 0201 	and.w	r2, r2, #1
 80015a2:	920b      	str	r2, [sp, #44]	; 0x2c
 80015a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015a6:	940c      	str	r4, [sp, #48]	; 0x30
 80015a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015aa:	f042 0204 	orr.w	r2, r2, #4
 80015ae:	631a      	str	r2, [r3, #48]	; 0x30
 80015b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b2:	f002 0204 	and.w	r2, r2, #4
 80015b6:	920c      	str	r2, [sp, #48]	; 0x30
 80015b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015ba:	940d      	str	r4, [sp, #52]	; 0x34
 80015bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015c2:	631a      	str	r2, [r3, #48]	; 0x30
 80015c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c6:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015ca:	4622      	mov	r2, r4
 80015cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015d0:	930d      	str	r3, [sp, #52]	; 0x34
 80015d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015d4:	f003 fb28 	bl	8004c28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015d8:	488f      	ldr	r0, [pc, #572]	; (8001818 <main+0x344>)
 80015da:	2201      	movs	r2, #1
 80015dc:	2108      	movs	r1, #8
 80015de:	f003 fb23 	bl	8004c28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015e2:	488e      	ldr	r0, [pc, #568]	; (800181c <main+0x348>)
 80015e4:	4622      	mov	r2, r4
 80015e6:	2146      	movs	r1, #70	; 0x46
 80015e8:	f003 fb1e 	bl	8004c28 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015ec:	4622      	mov	r2, r4
 80015ee:	488c      	ldr	r0, [pc, #560]	; (8001820 <main+0x34c>)
 80015f0:	2180      	movs	r1, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f2:	2701      	movs	r7, #1
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015f4:	f003 fb18 	bl	8004c28 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f8:	2503      	movs	r5, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80015fe:	4885      	ldr	r0, [pc, #532]	; (8001814 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001600:	9530      	str	r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001602:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001604:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001608:	2611      	movs	r6, #17
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800160a:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 800160c:	f003 f97e 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001610:	2208      	movs	r2, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001612:	4881      	ldr	r0, [pc, #516]	; (8001818 <main+0x344>)
 8001614:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001616:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 800161a:	f44f 7980 	mov.w	r9, #256	; 0x100
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800161e:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001622:	f003 f973 	bl	800490c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001626:	487d      	ldr	r0, [pc, #500]	; (800181c <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001628:	972f      	str	r7, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800162a:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800162c:	e9cd 942d 	strd	r9, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001630:	f003 f96c 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001634:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001636:	4879      	ldr	r0, [pc, #484]	; (800181c <main+0x348>)
 8001638:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800163a:	f04f 0880 	mov.w	r8, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800163e:	e9cd 272d 	strd	r2, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001642:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001646:	f003 f961 	bl	800490c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800164a:	a92d      	add	r1, sp, #180	; 0xb4
 800164c:	4874      	ldr	r0, [pc, #464]	; (8001820 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800164e:	e9cd 862d 	strd	r8, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001652:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001656:	f003 f959 	bl	800490c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800165a:	4872      	ldr	r0, [pc, #456]	; (8001824 <main+0x350>)
  hdma2d.Instance = DMA2D;
 800165c:	4e72      	ldr	r6, [pc, #456]	; (8001828 <main+0x354>)
  hcrc.Instance = CRC;
 800165e:	4a73      	ldr	r2, [pc, #460]	; (800182c <main+0x358>)
 8001660:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001662:	f002 fb71 	bl	8003d48 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001666:	4a72      	ldr	r2, [pc, #456]	; (8001830 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001668:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800166c:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001670:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001672:	e9c6 2400 	strd	r2, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001676:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800167a:	f002 fc79 	bl	8003f70 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800167e:	4639      	mov	r1, r7
 8001680:	4630      	mov	r0, r6
 8001682:	f002 fd2d 	bl	80040e0 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001686:	4641      	mov	r1, r8
 8001688:	4622      	mov	r2, r4
 800168a:	4865      	ldr	r0, [pc, #404]	; (8001820 <main+0x34c>)
  hdsi.Instance = DSI;
 800168c:	4e69      	ldr	r6, [pc, #420]	; (8001834 <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800168e:	f003 facb 	bl	8004c28 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001692:	2014      	movs	r0, #20
 8001694:	f002 fade 	bl	8003c54 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001698:	4641      	mov	r1, r8
 800169a:	463a      	mov	r2, r7
 800169c:	4860      	ldr	r0, [pc, #384]	; (8001820 <main+0x34c>)
 800169e:	f003 fac3 	bl	8004c28 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 80016a2:	200a      	movs	r0, #10
 80016a4:	f002 fad6 	bl	8003c54 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016a8:	2224      	movs	r2, #36	; 0x24
 80016aa:	4621      	mov	r1, r4
 80016ac:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80016ae:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016b0:	f01a fb7c 	bl	801bdac <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016b4:	2218      	movs	r2, #24
 80016b6:	4621      	mov	r1, r4
 80016b8:	a811      	add	r0, sp, #68	; 0x44
 80016ba:	f01a fb77 	bl	801bdac <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016be:	2234      	movs	r2, #52	; 0x34
 80016c0:	4621      	mov	r1, r4
 80016c2:	a82d      	add	r0, sp, #180	; 0xb4
 80016c4:	f01a fb72 	bl	801bdac <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016c8:	222c      	movs	r2, #44	; 0x2c
 80016ca:	4621      	mov	r1, r4
 80016cc:	eb0d 0008 	add.w	r0, sp, r8
 80016d0:	f01a fb6c 	bl	801bdac <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016d4:	f04f 0802 	mov.w	r8, #2
  hdsi.Instance = DSI;
 80016d8:	4a57      	ldr	r2, [pc, #348]	; (8001838 <main+0x364>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016da:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 80016dc:	f04f 0a04 	mov.w	sl, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016e0:	e9cd 180e 	strd	r1, r8, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016e4:	4630      	mov	r0, r6
 80016e6:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016e8:	e9c6 2400 	strd	r2, r4, [r6]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016ec:	e9c6 a702 	strd	sl, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016f0:	f002 fdbe 	bl	8004270 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016f4:	a917      	add	r1, sp, #92	; 0x5c
 80016f6:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016f8:	e9cd 7417 	strd	r7, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016fc:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8001700:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8001704:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001708:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800170a:	f002 ffdd 	bl	80046c8 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 800170e:	231c      	movs	r3, #28
 8001710:	2121      	movs	r1, #33	; 0x21
  PhyTimings.DataLaneLP2HSTime = 25;
 8001712:	220f      	movs	r2, #15
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001714:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001718:	2119      	movs	r1, #25
 800171a:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800171e:	4630      	mov	r0, r6
 8001720:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 8001722:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001726:	f002 ff92 	bl	800464e <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 800172a:	4651      	mov	r1, sl
 800172c:	4630      	mov	r0, r6
 800172e:	f002 ff7d 	bl	800462c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001732:	f242 7110 	movw	r1, #10000	; 0x2710
 8001736:	4630      	mov	r0, r6
 8001738:	f003 f8d1 	bl	80048de <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 800173c:	4621      	mov	r1, r4
 800173e:	4630      	mov	r0, r6
 8001740:	f002 fd33 	bl	80041aa <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteTwoP = DSI_LP_GSW2P_ENABLE;
 8001744:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001748:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800174c:	e9cd 132e 	strd	r1, r3, [sp, #184]	; 0xb8
  LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_ENABLE;
 8001750:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001754:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001758:	e9cd 1330 	strd	r1, r3, [sp, #192]	; 0xc0
  LPCmd.LPGenShortWriteNoP = DSI_LP_GSW0P_ENABLE;
 800175c:	f8cd 90b4 	str.w	r9, [sp, #180]	; 0xb4
  LPCmd.LPGenLongWrite = DSI_LP_GLW_ENABLE;
 8001760:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001764:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 8001768:	e9cd 1932 	strd	r1, r9, [sp, #200]	; 0xc8
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 800176c:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8001770:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_ENABLE;
 8001774:	f44f 2c80 	mov.w	ip, #262144	; 0x40000
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 8001778:	e9cd 0134 	strd	r0, r1, [sp, #208]	; 0xd0
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_ENABLE;
 800177c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8001780:	e9cd c136 	strd	ip, r1, [sp, #216]	; 0xd8
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001784:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001788:	e9cd 1838 	strd	r1, r8, [sp, #224]	; 0xe0
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800178c:	4630      	mov	r0, r6
 800178e:	a92d      	add	r1, sp, #180	; 0xb4
 8001790:	f002 ff18 	bl	80045c4 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001794:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
 8001798:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800179a:	a920      	add	r1, sp, #128	; 0x80
 800179c:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800179e:	e9cd b322 	strd	fp, r3, [sp, #136]	; 0x88
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 80017a2:	e9cd 4a24 	strd	r4, sl, [sp, #144]	; 0x90
  CmdCfg.ColorCoding = DSI_RGB565;
 80017a6:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80017aa:	e9cd 8426 	strd	r8, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80017ae:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80017b2:	972a      	str	r7, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017b4:	f002 fe94 	bl	80044e0 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80017b8:	4621      	mov	r1, r4
 80017ba:	4630      	mov	r0, r6
 80017bc:	f002 fe7f 	bl	80044be <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017c0:	481e      	ldr	r0, [pc, #120]	; (800183c <main+0x368>)
 80017c2:	491f      	ldr	r1, [pc, #124]	; (8001840 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017c4:	6204      	str	r4, [r0, #32]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017c6:	f04f 0e20 	mov.w	lr, #32
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017ca:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017ce:	2140      	movs	r1, #64	; 0x40
 80017d0:	e9c0 e104 	strd	lr, r1, [r0, #16]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 80017d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017d8:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017dc:	e9c0 1406 	strd	r1, r4, [r0, #24]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017e0:	e9c0 3909 	strd	r3, r9, [r0, #36]	; 0x24
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e4:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017e6:	2307      	movs	r3, #7
  SdramTiming.SelfRefreshTime = 4;
 80017e8:	e9cd 3a2e 	strd	r3, sl, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 80017ec:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017f0:	e9c0 4a02 	strd	r4, sl, [r0, #8]
  SdramTiming.RCDDelay = 2;
 80017f4:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 80017f8:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017fc:	f004 ff7c 	bl	80066f8 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8001800:	f002 f92a 	bl	8003a58 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8001804:	f002 f8da 	bl	80039bc <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001808:	4621      	mov	r1, r4
 800180a:	2234      	movs	r2, #52	; 0x34
 800180c:	e01a      	b.n	8001844 <main+0x370>
 800180e:	bf00      	nop
 8001810:	40023800 	.word	0x40023800
 8001814:	40021800 	.word	0x40021800
 8001818:	40022800 	.word	0x40022800
 800181c:	40020000 	.word	0x40020000
 8001820:	40021c00 	.word	0x40021c00
 8001824:	20001318 	.word	0x20001318
 8001828:	20001320 	.word	0x20001320
 800182c:	40023000 	.word	0x40023000
 8001830:	4002b000 	.word	0x4002b000
 8001834:	20001360 	.word	0x20001360
 8001838:	40016c00 	.word	0x40016c00
 800183c:	200014c4 	.word	0x200014c4
 8001840:	a0000140 	.word	0xa0000140
 8001844:	a820      	add	r0, sp, #128	; 0x80
  hltdc.Instance = LTDC;
 8001846:	4d53      	ldr	r5, [pc, #332]	; (8001994 <main+0x4c0>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001848:	f01a fab0 	bl	801bdac <memset>
  hltdc.Instance = LTDC;
 800184c:	4b52      	ldr	r3, [pc, #328]	; (8001998 <main+0x4c4>)
  hltdc.Init.Backcolor.Blue = 0;
 800184e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001850:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001854:	f04f 0aca 	mov.w	sl, #202	; 0xca
 8001858:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 800185c:	e9c5 a309 	strd	sl, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001860:	22cb      	movs	r2, #203	; 0xcb
 8001862:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001866:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001868:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800186c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 8001870:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001874:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001878:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800187c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001880:	f003 fea0 	bl	80055c4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001884:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 8001886:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800188a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800188e:	2205      	movs	r2, #5
 8001890:	e9cd 1227 	strd	r1, r2, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001894:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
  pLayerCfg.WindowY1 = 480;
 8001898:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800189c:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.ImageWidth = 200;
 800189e:	e9cd 2b29 	strd	r2, fp, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018a2:	4628      	mov	r0, r5
 80018a4:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80018a6:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 80018aa:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.WindowX1 = 200;
 80018ac:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.WindowY0 = 0;
 80018b0:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 80018b2:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80018b6:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018ba:	f003 ff4f 	bl	800575c <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018be:	682a      	ldr	r2, [r5, #0]
 80018c0:	6993      	ldr	r3, [r2, #24]
 80018c2:	f023 0301 	bic.w	r3, r3, #1
 80018c6:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018c8:	4630      	mov	r0, r6
 80018ca:	f002 ff63 	bl	8004794 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018ce:	4639      	mov	r1, r7
 80018d0:	4640      	mov	r0, r8
 80018d2:	f001 fa37 	bl	8002d44 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018d6:	2328      	movs	r3, #40	; 0x28
 80018d8:	2215      	movs	r2, #21
 80018da:	4621      	mov	r1, r4
 80018dc:	4630      	mov	r0, r6
 80018de:	9400      	str	r4, [sp, #0]
 80018e0:	f002 ff8b 	bl	80047fa <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018e4:	a92d      	add	r1, sp, #180	; 0xb4
 80018e6:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018e8:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018ec:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018f0:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018f4:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018f8:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018fc:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018fe:	f002 fe61 	bl	80045c4 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001902:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001906:	4622      	mov	r2, r4
 8001908:	4628      	mov	r0, r5
 800190a:	f003 ff55 	bl	80057b8 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800190e:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001910:	4822      	ldr	r0, [pc, #136]	; (800199c <main+0x4c8>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001912:	6993      	ldr	r3, [r2, #24]
  hi2c1.Init.ClockSpeed = 400000;
 8001914:	4e22      	ldr	r6, [pc, #136]	; (80019a0 <main+0x4cc>)
  hqspi.Init.FifoThreshold = 1;
 8001916:	6087      	str	r7, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 8001918:	433b      	orrs	r3, r7
 800191a:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800191c:	4b21      	ldr	r3, [pc, #132]	; (80019a4 <main+0x4d0>)
  hqspi.Init.FlashSize = 27;
 800191e:	2510      	movs	r5, #16
  hqspi.Init.ClockPrescaler = 1;
 8001920:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 8001924:	231b      	movs	r3, #27
 8001926:	e9c0 5303 	strd	r5, r3, [r0, #12]
  hi2c1.Instance = I2C1;
 800192a:	4d1f      	ldr	r5, [pc, #124]	; (80019a8 <main+0x4d4>)
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800192c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8001930:	e9c0 3405 	strd	r3, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001934:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001938:	f004 f888 	bl	8005a4c <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800193c:	f001 ff04 	bl	8003748 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001940:	f001 fe38 	bl	80035b4 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001944:	f001 fdae 	bl	80034a4 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001948:	4b18      	ldr	r3, [pc, #96]	; (80019ac <main+0x4d8>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800194a:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800194c:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 800194e:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001952:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001956:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800195a:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800195e:	f003 fb4d 	bl	8004ffc <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001962:	4628      	mov	r0, r5
 8001964:	f003 fbf2 	bl	800514c <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001968:	f7fe fe45 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 800196c:	f005 f95c 	bl	8006c28 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001970:	4a0f      	ldr	r2, [pc, #60]	; (80019b0 <main+0x4dc>)
 8001972:	4810      	ldr	r0, [pc, #64]	; (80019b4 <main+0x4e0>)
 8001974:	4621      	mov	r1, r4
 8001976:	f005 f983 	bl	8006c80 <osThreadNew>
 800197a:	4b0f      	ldr	r3, [pc, #60]	; (80019b8 <main+0x4e4>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800197c:	4a0f      	ldr	r2, [pc, #60]	; (80019bc <main+0x4e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800197e:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001980:	4621      	mov	r1, r4
 8001982:	480f      	ldr	r0, [pc, #60]	; (80019c0 <main+0x4ec>)
 8001984:	f005 f97c 	bl	8006c80 <osThreadNew>
 8001988:	4b0e      	ldr	r3, [pc, #56]	; (80019c4 <main+0x4f0>)
 800198a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800198c:	f005 f95e 	bl	8006c4c <osKernelStart>
  while (1)
 8001990:	e7fe      	b.n	8001990 <main+0x4bc>
 8001992:	bf00      	nop
 8001994:	200013d0 	.word	0x200013d0
 8001998:	40016800 	.word	0x40016800
 800199c:	20001478 	.word	0x20001478
 80019a0:	40005400 	.word	0x40005400
 80019a4:	a0001000 	.word	0xa0001000
 80019a8:	2000137c 	.word	0x2000137c
 80019ac:	00061a80 	.word	0x00061a80
 80019b0:	0801d50c 	.word	0x0801d50c
 80019b4:	08001429 	.word	0x08001429
 80019b8:	20001314 	.word	0x20001314
 80019bc:	0801d4e8 	.word	0x0801d4e8
 80019c0:	080005fb 	.word	0x080005fb
 80019c4:	20001310 	.word	0x20001310

080019c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c8:	6802      	ldr	r2, [r0, #0]
 80019ca:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d101      	bne.n	80019d4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019d0:	f002 b92e 	b.w	8003c30 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	40001000 	.word	0x40001000

080019dc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80019dc:	4770      	bx	lr
	...

080019e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019e0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019e2:	4b0e      	ldr	r3, [pc, #56]	; (8001a1c <HAL_MspInit+0x3c>)
 80019e4:	2200      	movs	r2, #0
 80019e6:	9200      	str	r2, [sp, #0]
 80019e8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ea:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ee:	6459      	str	r1, [r3, #68]	; 0x44
 80019f0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019f2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019f6:	9100      	str	r1, [sp, #0]
 80019f8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019fa:	9201      	str	r2, [sp, #4]
 80019fc:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019fe:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a02:	6419      	str	r1, [r3, #64]	; 0x40
 8001a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a0a:	9301      	str	r3, [sp, #4]
 8001a0c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0e:	210f      	movs	r1, #15
 8001a10:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a14:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a16:	f002 b943 	b.w	8003ca0 <HAL_NVIC_SetPriority>
 8001a1a:	bf00      	nop
 8001a1c:	40023800 	.word	0x40023800

08001a20 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a20:	6802      	ldr	r2, [r0, #0]
 8001a22:	4b09      	ldr	r3, [pc, #36]	; (8001a48 <HAL_CRC_MspInit+0x28>)
 8001a24:	429a      	cmp	r2, r3
{
 8001a26:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a28:	d10b      	bne.n	8001a42 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	9301      	str	r3, [sp, #4]
 8001a2e:	4b07      	ldr	r3, [pc, #28]	; (8001a4c <HAL_CRC_MspInit+0x2c>)
 8001a30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a32:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a36:	631a      	str	r2, [r3, #48]	; 0x30
 8001a38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a3a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a3e:	9301      	str	r3, [sp, #4]
 8001a40:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a42:	b002      	add	sp, #8
 8001a44:	4770      	bx	lr
 8001a46:	bf00      	nop
 8001a48:	40023000 	.word	0x40023000
 8001a4c:	40023800 	.word	0x40023800

08001a50 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a50:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a52:	4b0f      	ldr	r3, [pc, #60]	; (8001a90 <HAL_DMA2D_MspInit+0x40>)
 8001a54:	6802      	ldr	r2, [r0, #0]
 8001a56:	429a      	cmp	r2, r3
 8001a58:	d116      	bne.n	8001a88 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a60:	9201      	str	r2, [sp, #4]
 8001a62:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a64:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a68:	6319      	str	r1, [r3, #48]	; 0x30
 8001a6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a6c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a70:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a72:	2105      	movs	r1, #5
 8001a74:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a76:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a78:	f002 f912 	bl	8003ca0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a7c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a7e:	b003      	add	sp, #12
 8001a80:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a84:	f002 b93e 	b.w	8003d04 <HAL_NVIC_EnableIRQ>
}
 8001a88:	b003      	add	sp, #12
 8001a8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a8e:	bf00      	nop
 8001a90:	4002b000 	.word	0x4002b000

08001a94 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a94:	b510      	push	{r4, lr}
 8001a96:	4604      	mov	r4, r0
 8001a98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a9a:	2214      	movs	r2, #20
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	a803      	add	r0, sp, #12
 8001aa0:	f01a f984 	bl	801bdac <memset>
  if(hdsi->Instance==DSI)
 8001aa4:	6822      	ldr	r2, [r4, #0]
 8001aa6:	4b17      	ldr	r3, [pc, #92]	; (8001b04 <HAL_DSI_MspInit+0x70>)
 8001aa8:	429a      	cmp	r2, r3
 8001aaa:	d128      	bne.n	8001afe <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001aac:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ab0:	2400      	movs	r4, #0
 8001ab2:	9401      	str	r4, [sp, #4]
 8001ab4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ab6:	4814      	ldr	r0, [pc, #80]	; (8001b08 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ab8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001abc:	645a      	str	r2, [r3, #68]	; 0x44
 8001abe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ac0:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001ac4:	9201      	str	r2, [sp, #4]
 8001ac6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ac8:	9402      	str	r4, [sp, #8]
 8001aca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001acc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ad0:	631a      	str	r2, [r3, #48]	; 0x30
 8001ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001ad8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ada:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001adc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ade:	2302      	movs	r3, #2
 8001ae0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ae4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001ae6:	230d      	movs	r3, #13
 8001ae8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001aea:	f002 ff0f 	bl	800490c <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001aee:	205c      	movs	r0, #92	; 0x5c
 8001af0:	4622      	mov	r2, r4
 8001af2:	2105      	movs	r1, #5
 8001af4:	f002 f8d4 	bl	8003ca0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001af8:	205c      	movs	r0, #92	; 0x5c
 8001afa:	f002 f903 	bl	8003d04 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001afe:	b008      	add	sp, #32
 8001b00:	bd10      	pop	{r4, pc}
 8001b02:	bf00      	nop
 8001b04:	40016c00 	.word	0x40016c00
 8001b08:	40022400 	.word	0x40022400

08001b0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b0c:	b530      	push	{r4, r5, lr}
 8001b0e:	4604      	mov	r4, r0
 8001b10:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b12:	2214      	movs	r2, #20
 8001b14:	2100      	movs	r1, #0
 8001b16:	a803      	add	r0, sp, #12
 8001b18:	f01a f948 	bl	801bdac <memset>
  if(hi2c->Instance==I2C1)
 8001b1c:	6822      	ldr	r2, [r4, #0]
 8001b1e:	4b1a      	ldr	r3, [pc, #104]	; (8001b88 <HAL_I2C_MspInit+0x7c>)
 8001b20:	429a      	cmp	r2, r3
 8001b22:	d12f      	bne.n	8001b84 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b24:	4c19      	ldr	r4, [pc, #100]	; (8001b8c <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b26:	481a      	ldr	r0, [pc, #104]	; (8001b90 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b28:	2500      	movs	r5, #0
 8001b2a:	9501      	str	r5, [sp, #4]
 8001b2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b2e:	f043 0302 	orr.w	r3, r3, #2
 8001b32:	6323      	str	r3, [r4, #48]	; 0x30
 8001b34:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b36:	f003 0302 	and.w	r3, r3, #2
 8001b3a:	9301      	str	r3, [sp, #4]
 8001b3c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b3e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b42:	2312      	movs	r3, #18
 8001b44:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b48:	2101      	movs	r1, #1
 8001b4a:	2303      	movs	r3, #3
 8001b4c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b50:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b52:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b54:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b56:	f002 fed9 	bl	800490c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b5a:	9502      	str	r5, [sp, #8]
 8001b5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b5e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b62:	6423      	str	r3, [r4, #64]	; 0x40
 8001b64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b66:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b6a:	9302      	str	r3, [sp, #8]
 8001b6c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b6e:	6a23      	ldr	r3, [r4, #32]
 8001b70:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b74:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b76:	6a23      	ldr	r3, [r4, #32]
 8001b78:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b7c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b7e:	2064      	movs	r0, #100	; 0x64
 8001b80:	f002 f868 	bl	8003c54 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b84:	b009      	add	sp, #36	; 0x24
 8001b86:	bd30      	pop	{r4, r5, pc}
 8001b88:	40005400 	.word	0x40005400
 8001b8c:	40023800 	.word	0x40023800
 8001b90:	40020400 	.word	0x40020400

08001b94 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b94:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b96:	6802      	ldr	r2, [r0, #0]
 8001b98:	4b0a      	ldr	r3, [pc, #40]	; (8001bc4 <HAL_I2C_MspDeInit+0x30>)
 8001b9a:	429a      	cmp	r2, r3
 8001b9c:	d110      	bne.n	8001bc0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b9e:	4a0a      	ldr	r2, [pc, #40]	; (8001bc8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001ba0:	480a      	ldr	r0, [pc, #40]	; (8001bcc <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001ba2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001ba4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001ba8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001baa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bae:	f002 ff93 	bl	8004ad8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bb6:	4805      	ldr	r0, [pc, #20]	; (8001bcc <HAL_I2C_MspDeInit+0x38>)
 8001bb8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bbc:	f002 bf8c 	b.w	8004ad8 <HAL_GPIO_DeInit>
}
 8001bc0:	bd08      	pop	{r3, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40005400 	.word	0x40005400
 8001bc8:	40023800 	.word	0x40023800
 8001bcc:	40020400 	.word	0x40020400

08001bd0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bd0:	b510      	push	{r4, lr}
 8001bd2:	4604      	mov	r4, r0
 8001bd4:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bd6:	223c      	movs	r2, #60	; 0x3c
 8001bd8:	2100      	movs	r1, #0
 8001bda:	a801      	add	r0, sp, #4
 8001bdc:	f01a f8e6 	bl	801bdac <memset>
  if(hltdc->Instance==LTDC)
 8001be0:	6822      	ldr	r2, [r4, #0]
 8001be2:	4b12      	ldr	r3, [pc, #72]	; (8001c2c <HAL_LTDC_MspInit+0x5c>)
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d11f      	bne.n	8001c28 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001be8:	2308      	movs	r3, #8
 8001bea:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001bec:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001bf0:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf2:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bf4:	2306      	movs	r3, #6
 8001bf6:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf8:	f004 fa62 	bl	80060c0 <HAL_RCCEx_PeriphCLKConfig>
 8001bfc:	b108      	cbz	r0, 8001c02 <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8001bfe:	f7ff feed 	bl	80019dc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c02:	4b0b      	ldr	r3, [pc, #44]	; (8001c30 <HAL_LTDC_MspInit+0x60>)
 8001c04:	2200      	movs	r2, #0
 8001c06:	9200      	str	r2, [sp, #0]
 8001c08:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c0a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c0e:	6459      	str	r1, [r3, #68]	; 0x44
 8001c10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c12:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c16:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c18:	2058      	movs	r0, #88	; 0x58
 8001c1a:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c1c:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c1e:	f002 f83f 	bl	8003ca0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c22:	2058      	movs	r0, #88	; 0x58
 8001c24:	f002 f86e 	bl	8003d04 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c28:	b010      	add	sp, #64	; 0x40
 8001c2a:	bd10      	pop	{r4, pc}
 8001c2c:	40016800 	.word	0x40016800
 8001c30:	40023800 	.word	0x40023800

08001c34 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c36:	4604      	mov	r4, r0
 8001c38:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2214      	movs	r2, #20
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	a803      	add	r0, sp, #12
 8001c40:	f01a f8b4 	bl	801bdac <memset>
  if(hqspi->Instance==QUADSPI)
 8001c44:	6822      	ldr	r2, [r4, #0]
 8001c46:	4b24      	ldr	r3, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xa4>)
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	d142      	bne.n	8001cd2 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c4c:	4b23      	ldr	r3, [pc, #140]	; (8001cdc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c4e:	4824      	ldr	r0, [pc, #144]	; (8001ce0 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c50:	2400      	movs	r4, #0
 8001c52:	9400      	str	r4, [sp, #0]
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f042 0202 	orr.w	r2, r2, #2
 8001c5a:	639a      	str	r2, [r3, #56]	; 0x38
 8001c5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c5e:	f002 0202 	and.w	r2, r2, #2
 8001c62:	9200      	str	r2, [sp, #0]
 8001c64:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9401      	str	r4, [sp, #4]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9201      	str	r2, [sp, #4]
 8001c78:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7a:	9402      	str	r4, [sp, #8]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0220 	orr.w	r2, r2, #32
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c86:	f003 0320 	and.w	r3, r3, #32
 8001c8a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8e:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c90:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c92:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c96:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c9c:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ca0:	f002 fe34 	bl	800490c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001ca4:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cac:	480d      	ldr	r0, [pc, #52]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cae:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cb2:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb4:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	f002 fe28 	bl	800490c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cbc:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	4808      	ldr	r0, [pc, #32]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc2:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cca:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cce:	f002 fe1d 	bl	800490c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cd2:	b009      	add	sp, #36	; 0x24
 8001cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	a0001000 	.word	0xa0001000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40020400 	.word	0x40020400
 8001ce4:	40021400 	.word	0x40021400

08001ce8 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce8:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cea:	6802      	ldr	r2, [r0, #0]
 8001cec:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x2c>)
 8001cee:	429a      	cmp	r2, r3
 8001cf0:	d10f      	bne.n	8001d12 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf2:	4a09      	ldr	r2, [pc, #36]	; (8001d18 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf4:	4809      	ldr	r0, [pc, #36]	; (8001d1c <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf8:	f023 0302 	bic.w	r3, r3, #2
 8001cfc:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cfe:	2140      	movs	r1, #64	; 0x40
 8001d00:	f002 feea 	bl	8004ad8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d08:	4805      	ldr	r0, [pc, #20]	; (8001d20 <HAL_QSPI_MspDeInit+0x38>)
 8001d0a:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d0e:	f002 bee3 	b.w	8004ad8 <HAL_GPIO_DeInit>
}
 8001d12:	bd08      	pop	{r3, pc}
 8001d14:	a0001000 	.word	0xa0001000
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020400 	.word	0x40020400
 8001d20:	40021400 	.word	0x40021400

08001d24 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d26:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d28:	2300      	movs	r3, #0
 8001d2a:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d2c:	4b30      	ldr	r3, [pc, #192]	; (8001df0 <HAL_SDRAM_MspInit+0xcc>)
 8001d2e:	681c      	ldr	r4, [r3, #0]
 8001d30:	2c00      	cmp	r4, #0
 8001d32:	d15a      	bne.n	8001dea <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d34:	2201      	movs	r2, #1
 8001d36:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <HAL_SDRAM_MspInit+0xd0>)
 8001d3a:	9400      	str	r4, [sp, #0]
 8001d3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d3e:	482e      	ldr	r0, [pc, #184]	; (8001df8 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d40:	f042 0201 	orr.w	r2, r2, #1
 8001d44:	639a      	str	r2, [r3, #56]	; 0x38
 8001d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d48:	f003 0301 	and.w	r3, r3, #1
 8001d4c:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d50:	2603      	movs	r6, #3
 8001d52:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d54:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d5c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d60:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d64:	f002 fdd2 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d68:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d6c:	4823      	ldr	r0, [pc, #140]	; (8001dfc <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d70:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d76:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d7a:	f002 fdc7 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d7e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d82:	481f      	ldr	r0, [pc, #124]	; (8001e00 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d84:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d86:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d8c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d90:	f002 fdbc 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d94:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d98:	481a      	ldr	r0, [pc, #104]	; (8001e04 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001da6:	f002 fdb1 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001daa:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dae:	4816      	ldr	r0, [pc, #88]	; (8001e08 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f002 fda6 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dc0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc4:	4811      	ldr	r0, [pc, #68]	; (8001e0c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dd2:	f002 fd9b 	bl	800490c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dd6:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd8:	480d      	ldr	r0, [pc, #52]	; (8001e10 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dda:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ddc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dde:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de6:	f002 fd91 	bl	800490c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dea:	b007      	add	sp, #28
 8001dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dee:	bf00      	nop
 8001df0:	200014fc 	.word	0x200014fc
 8001df4:	40023800 	.word	0x40023800
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	40021800 	.word	0x40021800
 8001e00:	40020c00 	.word	0x40020c00
 8001e04:	40022000 	.word	0x40022000
 8001e08:	40021400 	.word	0x40021400
 8001e0c:	40021c00 	.word	0x40021c00
 8001e10:	40020800 	.word	0x40020800

08001e14 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e14:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e16:	4b17      	ldr	r3, [pc, #92]	; (8001e74 <HAL_SDRAM_MspDeInit+0x60>)
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	bb52      	cbnz	r2, 8001e72 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e20:	4a15      	ldr	r2, [pc, #84]	; (8001e78 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e22:	4816      	ldr	r0, [pc, #88]	; (8001e7c <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e24:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e26:	f023 0301 	bic.w	r3, r3, #1
 8001e2a:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e2c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e30:	f002 fe52 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e34:	4812      	ldr	r0, [pc, #72]	; (8001e80 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e36:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e3a:	f002 fe4d 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e3e:	4811      	ldr	r0, [pc, #68]	; (8001e84 <HAL_SDRAM_MspDeInit+0x70>)
 8001e40:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e44:	f002 fe48 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e48:	480f      	ldr	r0, [pc, #60]	; (8001e88 <HAL_SDRAM_MspDeInit+0x74>)
 8001e4a:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e4e:	f002 fe43 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e52:	480e      	ldr	r0, [pc, #56]	; (8001e8c <HAL_SDRAM_MspDeInit+0x78>)
 8001e54:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e58:	f002 fe3e 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e5c:	480c      	ldr	r0, [pc, #48]	; (8001e90 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e5e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e62:	f002 fe39 	bl	8004ad8 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e6a:	480a      	ldr	r0, [pc, #40]	; (8001e94 <HAL_SDRAM_MspDeInit+0x80>)
 8001e6c:	210d      	movs	r1, #13
 8001e6e:	f002 be33 	b.w	8004ad8 <HAL_GPIO_DeInit>
}
 8001e72:	bd08      	pop	{r3, pc}
 8001e74:	200014f8 	.word	0x200014f8
 8001e78:	40023800 	.word	0x40023800
 8001e7c:	40021000 	.word	0x40021000
 8001e80:	40021800 	.word	0x40021800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	40022000 	.word	0x40022000
 8001e8c:	40021400 	.word	0x40021400
 8001e90:	40021c00 	.word	0x40021c00
 8001e94:	40020800 	.word	0x40020800

08001e98 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e98:	b530      	push	{r4, r5, lr}
 8001e9a:	4601      	mov	r1, r0
 8001e9c:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	2036      	movs	r0, #54	; 0x36
 8001ea2:	f001 fefd 	bl	8003ca0 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ea6:	2036      	movs	r0, #54	; 0x36
 8001ea8:	f001 ff2c 	bl	8003d04 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eac:	2500      	movs	r5, #0
 8001eae:	4b15      	ldr	r3, [pc, #84]	; (8001f04 <HAL_InitTick+0x6c>)
 8001eb0:	9502      	str	r5, [sp, #8]
 8001eb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eb4:	4c14      	ldr	r4, [pc, #80]	; (8001f08 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eb6:	f042 0210 	orr.w	r2, r2, #16
 8001eba:	641a      	str	r2, [r3, #64]	; 0x40
 8001ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ebe:	f003 0310 	and.w	r3, r3, #16
 8001ec2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec4:	a901      	add	r1, sp, #4
 8001ec6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001eca:	f004 f8db 	bl	8006084 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ece:	f004 f8c9 	bl	8006064 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001ed2:	4b0e      	ldr	r3, [pc, #56]	; (8001f0c <HAL_InitTick+0x74>)
 8001ed4:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001ed6:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001eda:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001edc:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001ede:	4b0c      	ldr	r3, [pc, #48]	; (8001f10 <HAL_InitTick+0x78>)
 8001ee0:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ee4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ee6:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee8:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eea:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eec:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eee:	f004 fdaf 	bl	8006a50 <HAL_TIM_Base_Init>
 8001ef2:	b920      	cbnz	r0, 8001efe <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f004 fc65 	bl	80067c4 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001efa:	b009      	add	sp, #36	; 0x24
 8001efc:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001efe:	2001      	movs	r0, #1
 8001f00:	e7fb      	b.n	8001efa <HAL_InitTick+0x62>
 8001f02:	bf00      	nop
 8001f04:	40023800 	.word	0x40023800
 8001f08:	20001500 	.word	0x20001500
 8001f0c:	40001000 	.word	0x40001000
 8001f10:	000f4240 	.word	0x000f4240

08001f14 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f14:	4770      	bx	lr

08001f16 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f16:	e7fe      	b.n	8001f16 <HardFault_Handler>

08001f18 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f18:	e7fe      	b.n	8001f18 <MemManage_Handler>

08001f1a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f1a:	e7fe      	b.n	8001f1a <BusFault_Handler>

08001f1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <UsageFault_Handler>

08001f1e <DebugMon_Handler>:
 8001f1e:	4770      	bx	lr

08001f20 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f20:	4801      	ldr	r0, [pc, #4]	; (8001f28 <TIM6_DAC_IRQHandler+0x8>)
 8001f22:	f004 bc8d 	b.w	8006840 <HAL_TIM_IRQHandler>
 8001f26:	bf00      	nop
 8001f28:	20001500 	.word	0x20001500

08001f2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f2c:	4801      	ldr	r0, [pc, #4]	; (8001f34 <LTDC_IRQHandler+0x8>)
 8001f2e:	f003 bbb8 	b.w	80056a2 <HAL_LTDC_IRQHandler>
 8001f32:	bf00      	nop
 8001f34:	200013d0 	.word	0x200013d0

08001f38 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <DMA2D_IRQHandler+0x8>)
 8001f3a:	f002 b847 	b.w	8003fcc <HAL_DMA2D_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	20001320 	.word	0x20001320

08001f44 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f44:	4801      	ldr	r0, [pc, #4]	; (8001f4c <DSI_IRQHandler+0x8>)
 8001f46:	f002 ba48 	b.w	80043da <HAL_DSI_IRQHandler>
 8001f4a:	bf00      	nop
 8001f4c:	20001360 	.word	0x20001360

08001f50 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f50:	2001      	movs	r0, #1
 8001f52:	4770      	bx	lr

08001f54 <_kill>:

int _kill(int pid, int sig)
{
 8001f54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f56:	f019 fecf 	bl	801bcf8 <__errno>
 8001f5a:	2316      	movs	r3, #22
 8001f5c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f62:	bd08      	pop	{r3, pc}

08001f64 <_exit>:

void _exit (int status)
{
 8001f64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f66:	f019 fec7 	bl	801bcf8 <__errno>
 8001f6a:	2316      	movs	r3, #22
 8001f6c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f6e:	e7fe      	b.n	8001f6e <_exit+0xa>

08001f70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	460d      	mov	r5, r1
 8001f74:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f76:	460e      	mov	r6, r1
 8001f78:	1b73      	subs	r3, r6, r5
 8001f7a:	429c      	cmp	r4, r3
 8001f7c:	dc01      	bgt.n	8001f82 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f7e:	4620      	mov	r0, r4
 8001f80:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f82:	f3af 8000 	nop.w
 8001f86:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	e7f5      	b.n	8001f78 <_read+0x8>

08001f8c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f8c:	b570      	push	{r4, r5, r6, lr}
 8001f8e:	460d      	mov	r5, r1
 8001f90:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f92:	460e      	mov	r6, r1
 8001f94:	1b73      	subs	r3, r6, r5
 8001f96:	429c      	cmp	r4, r3
 8001f98:	dc01      	bgt.n	8001f9e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f9e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fa2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa6:	e7f5      	b.n	8001f94 <_write+0x8>

08001fa8 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fac:	4770      	bx	lr

08001fae <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fb2:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4770      	bx	lr

08001fbc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	4770      	bx	lr

08001fc0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fc0:	4a0a      	ldr	r2, [pc, #40]	; (8001fec <_sbrk+0x2c>)
 8001fc2:	6811      	ldr	r1, [r2, #0]
{
 8001fc4:	b508      	push	{r3, lr}
 8001fc6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc8:	b909      	cbnz	r1, 8001fce <_sbrk+0xe>
		heap_end = &end;
 8001fca:	4909      	ldr	r1, [pc, #36]	; (8001ff0 <_sbrk+0x30>)
 8001fcc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fce:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fd0:	4669      	mov	r1, sp
 8001fd2:	4403      	add	r3, r0
 8001fd4:	428b      	cmp	r3, r1
 8001fd6:	d906      	bls.n	8001fe6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd8:	f019 fe8e 	bl	801bcf8 <__errno>
 8001fdc:	230c      	movs	r3, #12
 8001fde:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fe0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fe4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fe6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe8:	e7fc      	b.n	8001fe4 <_sbrk+0x24>
 8001fea:	bf00      	nop
 8001fec:	20001548 	.word	0x20001548
 8001ff0:	2000a7d8 	.word	0x2000a7d8

08001ff4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;    // verdana_10_4bpp
    static const touchgfx::FontId READ_PIN = 1; // verdana_40_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ff4:	4770      	bx	lr

08001ff6 <_ZN23ApplicationFontProviderD0Ev>:
 8001ff6:	b510      	push	{r4, lr}
 8001ff8:	2104      	movs	r1, #4
 8001ffa:	4604      	mov	r4, r0
 8001ffc:	f019 fe1c 	bl	801bc38 <_ZdlPvj>
 8002000:	4620      	mov	r0, r4
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002004:	b508      	push	{r3, lr}
    switch (typography)
 8002006:	2903      	cmp	r1, #3
 8002008:	d80f      	bhi.n	800202a <_ZN23ApplicationFontProvider7getFontEt+0x26>
 800200a:	e8df f001 	tbb	[pc, r1]
 800200e:	0a02      	.short	0x0a02
 8002010:	0a06      	.short	0x0a06
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002012:	f000 fd97 	bl	8002b44 <_ZN17TypedTextDatabase8getFontsEv>
 8002016:	6800      	ldr	r0, [r0, #0]
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    default:
        return 0;
    }
}
 8002018:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800201a:	f000 fd93 	bl	8002b44 <_ZN17TypedTextDatabase8getFontsEv>
 800201e:	6880      	ldr	r0, [r0, #8]
 8002020:	e7fa      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002022:	f000 fd8f 	bl	8002b44 <_ZN17TypedTextDatabase8getFontsEv>
 8002026:	6840      	ldr	r0, [r0, #4]
 8002028:	e7f6      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800202a:	2000      	movs	r0, #0
 800202c:	e7f4      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002030 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002030:	4800      	ldr	r0, [pc, #0]	; (8002034 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002032:	4770      	bx	lr
 8002034:	0801d544 	.word	0x0801d544

08002038 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002038:	2002      	movs	r0, #2
 800203a:	4770      	bx	lr

0800203c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800203c:	b513      	push	{r0, r1, r4, lr}
 800203e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002040:	b151      	cbz	r1, 8002058 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002042:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002044:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002046:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800204a:	aa01      	add	r2, sp, #4
 800204c:	689c      	ldr	r4, [r3, #8]
 800204e:	f10d 0303 	add.w	r3, sp, #3
 8002052:	47a0      	blx	r4
        return glyph;
    }
 8002054:	b002      	add	sp, #8
 8002056:	bd10      	pop	{r4, pc}
            return 0;
 8002058:	4608      	mov	r0, r1
 800205a:	e7fb      	b.n	8002054 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800205c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800205c:	8940      	ldrh	r0, [r0, #10]
 800205e:	4770      	bx	lr

08002060 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002060:	8980      	ldrh	r0, [r0, #12]
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002064:	8880      	ldrh	r0, [r0, #4]
 8002066:	4770      	bx	lr

08002068 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002068:	7983      	ldrb	r3, [r0, #6]
 800206a:	8880      	ldrh	r0, [r0, #4]
 800206c:	4418      	add	r0, r3
    }
 800206e:	b280      	uxth	r0, r0
 8002070:	4770      	bx	lr

08002072 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002072:	79c0      	ldrb	r0, [r0, #7]
    }
 8002074:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800207a:	79c0      	ldrb	r0, [r0, #7]
    }
 800207c:	09c0      	lsrs	r0, r0, #7
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002082:	b510      	push	{r4, lr}
    }
 8002084:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002086:	4604      	mov	r4, r0
    }
 8002088:	f019 fdd6 	bl	801bc38 <_ZdlPvj>
 800208c:	4620      	mov	r0, r4
 800208e:	bd10      	pop	{r4, pc}

08002090 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002090:	4770      	bx	lr

08002092 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002092:	4770      	bx	lr

08002094 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002094:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002098:	6808      	ldr	r0, [r1, #0]
 800209a:	6849      	ldr	r1, [r1, #4]
 800209c:	c303      	stmia	r3!, {r0, r1}
    }
 800209e:	4770      	bx	lr

080020a0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020a0:	4770      	bx	lr

080020a2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020a2:	4770      	bx	lr

080020a4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020a4:	6041      	str	r1, [r0, #4]
    }
 80020a6:	4770      	bx	lr

080020a8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020a8:	4770      	bx	lr
	...

080020ac <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020ac:	4b06      	ldr	r3, [pc, #24]	; (80020c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80020ae:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80020b2:	2300      	movs	r3, #0
 80020b4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80020b8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80020bc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80020c0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80020c4:	4770      	bx	lr
 80020c6:	bf00      	nop
 80020c8:	0800216d 	.word	0x0800216d

080020cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020cc:	2301      	movs	r3, #1
 80020ce:	7203      	strb	r3, [r0, #8]
    }
 80020d0:	4770      	bx	lr

080020d2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020d2:	4770      	bx	lr

080020d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80020d4:	4770      	bx	lr

080020d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020d6:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020d8:	68c2      	ldr	r2, [r0, #12]
 80020da:	6841      	ldr	r1, [r0, #4]
 80020dc:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80020de:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020e0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020e4:	07d2      	lsls	r2, r2, #31
 80020e6:	bf48      	it	mi
 80020e8:	590a      	ldrmi	r2, [r1, r4]
 80020ea:	689b      	ldr	r3, [r3, #8]
    }
 80020ec:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020f0:	bf48      	it	mi
 80020f2:	58d3      	ldrmi	r3, [r2, r3]
 80020f4:	4718      	bx	r3

080020f6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020f6:	6843      	ldr	r3, [r0, #4]
 80020f8:	b12b      	cbz	r3, 8002106 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020fa:	6883      	ldr	r3, [r0, #8]
 80020fc:	b92b      	cbnz	r3, 800210a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020fe:	68c0      	ldr	r0, [r0, #12]
 8002100:	f000 0001 	and.w	r0, r0, #1
 8002104:	4770      	bx	lr
 8002106:	4618      	mov	r0, r3
 8002108:	4770      	bx	lr
 800210a:	2001      	movs	r0, #1
    }
 800210c:	4770      	bx	lr

0800210e <_ZN8touchgfx12NoTransitionD0Ev>:
 800210e:	b510      	push	{r4, lr}
 8002110:	210c      	movs	r1, #12
 8002112:	4604      	mov	r4, r0
 8002114:	f019 fd90 	bl	801bc38 <_ZdlPvj>
 8002118:	4620      	mov	r0, r4
 800211a:	bd10      	pop	{r4, pc}

0800211c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800211c:	b510      	push	{r4, lr}
 800211e:	2110      	movs	r1, #16
 8002120:	4604      	mov	r4, r0
 8002122:	f019 fd89 	bl	801bc38 <_ZdlPvj>
 8002126:	4620      	mov	r0, r4
 8002128:	bd10      	pop	{r4, pc}

0800212a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800212a:	b510      	push	{r4, lr}
 800212c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002130:	4604      	mov	r4, r0
 8002132:	f019 fd81 	bl	801bc38 <_ZdlPvj>
 8002136:	4620      	mov	r0, r4
 8002138:	bd10      	pop	{r4, pc}

0800213a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800213a:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800213c:	f00a fc38 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002140:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002144:	f00a bffc 	b.w	800d140 <_ZN8touchgfx11Application10invalidateEv>

08002148 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002148:	b510      	push	{r4, lr}
 800214a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800214c:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002150:	b158      	cbz	r0, 800216a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002152:	6803      	ldr	r3, [r0, #0]
 8002154:	68db      	ldr	r3, [r3, #12]
 8002156:	4798      	blx	r3
 8002158:	b138      	cbz	r0, 800216a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800215a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800215e:	6803      	ldr	r3, [r0, #0]
 8002160:	689b      	ldr	r3, [r3, #8]
 8002162:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002164:	2300      	movs	r3, #0
 8002166:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800216a:	bd10      	pop	{r4, pc}

0800216c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800216c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002170:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002174:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002176:	68a8      	ldr	r0, [r5, #8]
 8002178:	6803      	ldr	r3, [r0, #0]
 800217a:	6a1b      	ldr	r3, [r3, #32]
 800217c:	4798      	blx	r3
 800217e:	f5b0 7f9a 	cmp.w	r0, #308	; 0x134
 8002182:	d205      	bcs.n	8002190 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002184:	4b45      	ldr	r3, [pc, #276]	; (800229c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002186:	4a46      	ldr	r2, [pc, #280]	; (80022a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002188:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800218a:	4846      	ldr	r0, [pc, #280]	; (80022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 800218c:	f019 fd82 	bl	801bc94 <__assert_func>
 8002190:	6868      	ldr	r0, [r5, #4]
 8002192:	6803      	ldr	r3, [r0, #0]
 8002194:	6a1b      	ldr	r3, [r3, #32]
 8002196:	4798      	blx	r3
 8002198:	280f      	cmp	r0, #15
 800219a:	d803      	bhi.n	80021a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 800219c:	4b42      	ldr	r3, [pc, #264]	; (80022a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800219e:	4a40      	ldr	r2, [pc, #256]	; (80022a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80021a0:	21a4      	movs	r1, #164	; 0xa4
 80021a2:	e7f2      	b.n	800218a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021a4:	68e8      	ldr	r0, [r5, #12]
 80021a6:	6803      	ldr	r3, [r0, #0]
 80021a8:	6a1b      	ldr	r3, [r3, #32]
 80021aa:	4798      	blx	r3
 80021ac:	280b      	cmp	r0, #11
 80021ae:	d803      	bhi.n	80021b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80021b0:	4b3e      	ldr	r3, [pc, #248]	; (80022ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80021b2:	4a3b      	ldr	r2, [pc, #236]	; (80022a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80021b4:	21a5      	movs	r1, #165	; 0xa5
 80021b6:	e7e8      	b.n	800218a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80021b8:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80022b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80021bc:	f00a fbf8 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 80021c0:	f00a fbfc 	bl	800c9bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021c4:	f8d9 0000 	ldr.w	r0, [r9]
 80021c8:	b110      	cbz	r0, 80021d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80021ca:	6803      	ldr	r3, [r0, #0]
 80021cc:	68db      	ldr	r3, [r3, #12]
 80021ce:	4798      	blx	r3
    if (*currentTrans)
 80021d0:	f8d9 0000 	ldr.w	r0, [r9]
 80021d4:	b110      	cbz	r0, 80021dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80021d6:	6803      	ldr	r3, [r0, #0]
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	4798      	blx	r3
    if (*currentScreen)
 80021dc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80022b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 80021e0:	f8d8 0000 	ldr.w	r0, [r8]
 80021e4:	b110      	cbz	r0, 80021ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80021e6:	6803      	ldr	r3, [r0, #0]
 80021e8:	695b      	ldr	r3, [r3, #20]
 80021ea:	4798      	blx	r3
    if (*currentPresenter)
 80021ec:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80021f0:	b110      	cbz	r0, 80021f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	685b      	ldr	r3, [r3, #4]
 80021f6:	4798      	blx	r3
    if (*currentScreen)
 80021f8:	f8d8 0000 	ldr.w	r0, [r8]
 80021fc:	b110      	cbz	r0, 8002204 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80021fe:	6803      	ldr	r3, [r0, #0]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	4798      	blx	r3
    if (*currentPresenter)
 8002204:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002208:	b110      	cbz	r0, 8002210 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800220a:	6803      	ldr	r3, [r0, #0]
 800220c:	689b      	ldr	r3, [r3, #8]
 800220e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002210:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002212:	6803      	ldr	r3, [r0, #0]
 8002214:	2100      	movs	r1, #0
 8002216:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002218:	4798      	blx	r3
        : screenContainer(0), done(false)
 800221a:	f04f 0b00 	mov.w	fp, #0
 800221e:	4b24      	ldr	r3, [pc, #144]	; (80022b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002220:	6003      	str	r3, [r0, #0]
 8002222:	4604      	mov	r4, r0
 8002224:	f8c0 b004 	str.w	fp, [r0, #4]
 8002228:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800222c:	68a8      	ldr	r0, [r5, #8]
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	4659      	mov	r1, fp
 8002232:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002234:	4798      	blx	r3
 8002236:	4606      	mov	r6, r0
 8002238:	f000 fcf8 	bl	8002c2c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800223c:	6868      	ldr	r0, [r5, #4]
 800223e:	6803      	ldr	r3, [r0, #0]
 8002240:	4659      	mov	r1, fp
 8002242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002244:	4798      	blx	r3
 8002246:	4631      	mov	r1, r6
 8002248:	4605      	mov	r5, r0
 800224a:	f000 fcbd 	bl	8002bc8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800224e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002252:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002256:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800225a:	b1e5      	cbz	r5, 8002296 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 800225c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800225e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002262:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002264:	f8c5 a008 	str.w	sl, [r5, #8]
 8002268:	4630      	mov	r0, r6
 800226a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800226c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800226e:	4798      	blx	r3
    newPresenter->activate();
 8002270:	682b      	ldr	r3, [r5, #0]
 8002272:	4628      	mov	r0, r5
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002278:	4621      	mov	r1, r4
 800227a:	4630      	mov	r0, r6
 800227c:	f00b ff72 	bl	800e164 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002280:	6823      	ldr	r3, [r4, #0]
 8002282:	4620      	mov	r0, r4
 8002284:	691b      	ldr	r3, [r3, #16]
 8002286:	4798      	blx	r3
    newTransition->invalidate();
 8002288:	6823      	ldr	r3, [r4, #0]
 800228a:	695b      	ldr	r3, [r3, #20]
 800228c:	4620      	mov	r0, r4
}
 800228e:	b001      	add	sp, #4
 8002290:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002294:	4718      	bx	r3
    model->bind(newPresenter);
 8002296:	462b      	mov	r3, r5
 8002298:	e7e1      	b.n	800225e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 800229a:	bf00      	nop
 800229c:	0801d57c 	.word	0x0801d57c
 80022a0:	0801d60a 	.word	0x0801d60a
 80022a4:	0801d70e 	.word	0x0801d70e
 80022a8:	0801d755 	.word	0x0801d755
 80022ac:	0801d7f8 	.word	0x0801d7f8
 80022b0:	0801d908 	.word	0x0801d908
 80022b4:	2000a574 	.word	0x2000a574
 80022b8:	2000a570 	.word	0x2000a570

080022bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80022bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022be:	4604      	mov	r4, r0
 80022c0:	4617      	mov	r7, r2
 80022c2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80022c4:	f00a fb94 	bl	800c9f0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80022c8:	4b10      	ldr	r3, [pc, #64]	; (800230c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80022ca:	2500      	movs	r5, #0
      model(m)
 80022cc:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80022d0:	4e0f      	ldr	r6, [pc, #60]	; (8002310 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80022d2:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80022d4:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80022d8:	4b0e      	ldr	r3, [pc, #56]	; (8002314 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80022da:	6830      	ldr	r0, [r6, #0]
 80022dc:	6023      	str	r3, [r4, #0]
 80022de:	4b0e      	ldr	r3, [pc, #56]	; (8002318 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80022e0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80022e4:	6803      	ldr	r3, [r0, #0]
 80022e6:	4629      	mov	r1, r5
 80022e8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80022ea:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80022ee:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80022f0:	4628      	mov	r0, r5
 80022f2:	f000 fbdb 	bl	8002aac <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80022f6:	6833      	ldr	r3, [r6, #0]
 80022f8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80022fc:	b10a      	cbz	r2, 8002302 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80022fe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002300:	b900      	cbnz	r0, 8002304 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002302:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002304:	f012 fb47 	bl	8014996 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002308:	4620      	mov	r0, r4
 800230a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800230c:	2000a580 	.word	0x2000a580
 8002310:	2000a534 	.word	0x2000a534
 8002314:	0801d8bc 	.word	0x0801d8bc
 8002318:	0801d8a4 	.word	0x0801d8a4

0800231c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800231c:	4b06      	ldr	r3, [pc, #24]	; (8002338 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800231e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002322:	2300      	movs	r3, #0
 8002324:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002328:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800232c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002330:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002334:	4770      	bx	lr
 8002336:	bf00      	nop
 8002338:	0800216d 	.word	0x0800216d

0800233c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800233c:	6a00      	ldr	r0, [r0, #32]
 800233e:	4770      	bx	lr

08002340 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002340:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002344:	4770      	bx	lr

08002346 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002346:	888b      	ldrh	r3, [r1, #4]
 8002348:	6980      	ldr	r0, [r0, #24]
 800234a:	680a      	ldr	r2, [r1, #0]
 800234c:	0adb      	lsrs	r3, r3, #11
 800234e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002352:	4410      	add	r0, r2
 8002354:	4770      	bx	lr

08002356 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002356:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002358:	b1c2      	cbz	r2, 800238c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800235a:	7b13      	ldrb	r3, [r2, #12]
 800235c:	b1b3      	cbz	r3, 800238c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800235e:	7b54      	ldrb	r4, [r2, #13]
 8002360:	7ad2      	ldrb	r2, [r2, #11]
 8002362:	0224      	lsls	r4, r4, #8
 8002364:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002368:	4314      	orrs	r4, r2
 800236a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800236c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800236e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002372:	8813      	ldrh	r3, [r2, #0]
 8002374:	428b      	cmp	r3, r1
 8002376:	d102      	bne.n	800237e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002378:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800237c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800237e:	d805      	bhi.n	800238c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002380:	3801      	subs	r0, #1
 8002382:	b280      	uxth	r0, r0
 8002384:	3204      	adds	r2, #4
 8002386:	2800      	cmp	r0, #0
 8002388:	d1f3      	bne.n	8002372 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800238a:	e7f7      	b.n	800237c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800238c:	2000      	movs	r0, #0
 800238e:	e7f5      	b.n	800237c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002390 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002390:	b510      	push	{r4, lr}
 8002392:	2128      	movs	r1, #40	; 0x28
 8002394:	4604      	mov	r4, r0
 8002396:	f019 fc4f 	bl	801bc38 <_ZdlPvj>
 800239a:	4620      	mov	r0, r4
 800239c:	bd10      	pop	{r4, pc}
	...

080023a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80023a0:	b530      	push	{r4, r5, lr}
 80023a2:	b089      	sub	sp, #36	; 0x24
 80023a4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80023a6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80023aa:	9506      	str	r5, [sp, #24]
 80023ac:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80023b0:	9505      	str	r5, [sp, #20]
 80023b2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80023b6:	9504      	str	r5, [sp, #16]
 80023b8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80023bc:	9503      	str	r5, [sp, #12]
 80023be:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80023c2:	9502      	str	r5, [sp, #8]
 80023c4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80023c8:	9501      	str	r5, [sp, #4]
 80023ca:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80023ce:	9500      	str	r5, [sp, #0]
 80023d0:	f00b fb28 	bl	800da24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023d4:	4b06      	ldr	r3, [pc, #24]	; (80023f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023d6:	6023      	str	r3, [r4, #0]
 80023d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023da:	61a3      	str	r3, [r4, #24]
 80023dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023de:	61e3      	str	r3, [r4, #28]
 80023e0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80023e2:	6223      	str	r3, [r4, #32]
 80023e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023e6:	6263      	str	r3, [r4, #36]	; 0x24
}
 80023e8:	4620      	mov	r0, r4
 80023ea:	b009      	add	sp, #36	; 0x24
 80023ec:	bd30      	pop	{r4, r5, pc}
 80023ee:	bf00      	nop
 80023f0:	0801d92c 	.word	0x0801d92c

080023f4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80023f4:	2000      	movs	r0, #0
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80023f8:	8081      	strh	r1, [r0, #4]
    }
 80023fa:	4770      	bx	lr

080023fc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80023fc:	80c1      	strh	r1, [r0, #6]
    }
 80023fe:	4770      	bx	lr

08002400 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002400:	8101      	strh	r1, [r0, #8]
    }
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002404:	8141      	strh	r1, [r0, #10]
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002408:	4770      	bx	lr

0800240a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800240c:	4770      	bx	lr

0800240e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002410:	4770      	bx	lr

08002412 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002412:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002414:	88c4      	ldrh	r4, [r0, #6]
 8002416:	6803      	ldr	r3, [r0, #0]
 8002418:	1b12      	subs	r2, r2, r4
 800241a:	8884      	ldrh	r4, [r0, #4]
 800241c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800241e:	1b09      	subs	r1, r1, r4
 8002420:	b212      	sxth	r2, r2
    }
 8002422:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002426:	b209      	sxth	r1, r1
 8002428:	4718      	bx	r3

0800242a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800242a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800242e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002430:	f04f 33ff 	mov.w	r3, #4294967295
 8002434:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002436:	6813      	ldr	r3, [r2, #0]
 8002438:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800243a:	6010      	str	r0, [r2, #0]
    }
 800243c:	4770      	bx	lr

0800243e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800243e:	4770      	bx	lr

08002440 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002440:	4770      	bx	lr

08002442 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002442:	4770      	bx	lr

08002444 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002444:	4770      	bx	lr

08002446 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002446:	4770      	bx	lr

08002448 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002448:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800244c:	b11a      	cbz	r2, 8002456 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800244e:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002452:	b102      	cbz	r2, 8002456 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002454:	6018      	str	r0, [r3, #0]
        }
    }
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002458:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800245a:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800245c:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800245e:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002460:	466d      	mov	r5, sp
 8002462:	4601      	mov	r1, r0
 8002464:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002468:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800246a:	4628      	mov	r0, r5
 800246c:	4798      	blx	r3
 800246e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002472:	343c      	adds	r4, #60	; 0x3c
 8002474:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002478:	b005      	add	sp, #20
 800247a:	bd30      	pop	{r4, r5, pc}

0800247c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800247c:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800247e:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002480:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002482:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002484:	466d      	mov	r5, sp
 8002486:	4601      	mov	r1, r0
 8002488:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800248c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800248e:	4628      	mov	r0, r5
 8002490:	4798      	blx	r3
 8002492:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002496:	343c      	adds	r4, #60	; 0x3c
 8002498:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800249c:	b005      	add	sp, #20
 800249e:	bd30      	pop	{r4, r5, pc}

080024a0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80024a0:	2200      	movs	r2, #0
 80024a2:	8002      	strh	r2, [r0, #0]
 80024a4:	8042      	strh	r2, [r0, #2]
 80024a6:	8082      	strh	r2, [r0, #4]
 80024a8:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024ac:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80024b0:	4770      	bx	lr

080024b2 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024b2:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80024b4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024b6:	4604      	mov	r4, r0
        setX(x);
 80024b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024ba:	4615      	mov	r5, r2
        setX(x);
 80024bc:	4798      	blx	r3
        setBaselineY(baselineY);
 80024be:	6823      	ldr	r3, [r4, #0]
 80024c0:	4629      	mov	r1, r5
 80024c2:	4620      	mov	r0, r4
 80024c4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80024c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80024ca:	4718      	bx	r3

080024cc <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80024cc:	2000      	movs	r0, #0
 80024ce:	4770      	bx	lr

080024d0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80024d0:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80024d2:	4770      	bx	lr

080024d4 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80024d4:	4770      	bx	lr

080024d6 <_ZN15Screen1ViewBase6verifyEv>:
     * Virtual Action Handlers
     */
    virtual void verify()
    {
        // Override and implement this function in Screen1
    }
 80024d6:	4770      	bx	lr

080024d8 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80024d8:	4770      	bx	lr

080024da <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80024da:	4770      	bx	lr

080024dc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80024dc:	4770      	bx	lr

080024de <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80024de:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80024e0:	68c2      	ldr	r2, [r0, #12]
 80024e2:	6844      	ldr	r4, [r0, #4]
 80024e4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80024e6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80024e8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80024ec:	07d2      	lsls	r2, r2, #31
 80024ee:	bf48      	it	mi
 80024f0:	5962      	ldrmi	r2, [r4, r5]
 80024f2:	689b      	ldr	r3, [r3, #8]
    }
 80024f4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80024f6:	bf48      	it	mi
 80024f8:	58d3      	ldrmi	r3, [r2, r3]
 80024fa:	4718      	bx	r3

080024fc <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80024fc:	6843      	ldr	r3, [r0, #4]
 80024fe:	b12b      	cbz	r3, 800250c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002500:	6883      	ldr	r3, [r0, #8]
 8002502:	b92b      	cbnz	r3, 8002510 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002504:	68c0      	ldr	r0, [r0, #12]
 8002506:	f000 0001 	and.w	r0, r0, #1
 800250a:	4770      	bx	lr
 800250c:	4618      	mov	r0, r3
 800250e:	4770      	bx	lr
 8002510:	2001      	movs	r0, #1
    }
 8002512:	4770      	bx	lr

08002514 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002514:	b510      	push	{r4, lr}
 8002516:	214c      	movs	r1, #76	; 0x4c
 8002518:	4604      	mov	r4, r0
 800251a:	f019 fb8d 	bl	801bc38 <_ZdlPvj>
 800251e:	4620      	mov	r0, r4
 8002520:	bd10      	pop	{r4, pc}

08002522 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002522:	b510      	push	{r4, lr}
 8002524:	2110      	movs	r1, #16
 8002526:	4604      	mov	r4, r0
 8002528:	f019 fb86 	bl	801bc38 <_ZdlPvj>
 800252c:	4620      	mov	r0, r4
 800252e:	bd10      	pop	{r4, pc}

08002530 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002530:	b510      	push	{r4, lr}
 8002532:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002536:	4604      	mov	r4, r0
 8002538:	f019 fb7e 	bl	801bc38 <_ZdlPvj>
 800253c:	4620      	mov	r0, r4
 800253e:	bd10      	pop	{r4, pc}

08002540 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002540:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002544:	b112      	cbz	r2, 800254c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002546:	6803      	ldr	r3, [r0, #0]
 8002548:	695b      	ldr	r3, [r3, #20]
 800254a:	4718      	bx	r3
    }
 800254c:	4770      	bx	lr

0800254e <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 800254e:	f100 02e4 	add.w	r2, r0, #228	; 0xe4
 8002552:	428a      	cmp	r2, r1
 8002554:	d102      	bne.n	800255c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When button1 clicked call virtual function
        //Call verify
        verify();
 8002556:	6803      	ldr	r3, [r0, #0]
 8002558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800255a:	4718      	bx	r3
    }
}
 800255c:	4770      	bx	lr
	...

08002560 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002560:	6803      	ldr	r3, [r0, #0]
class TypedText
 8002562:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 8002564:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002566:	6b5e      	ldr	r6, [r3, #52]	; 0x34
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002568:	4b11      	ldr	r3, [pc, #68]	; (80025b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800256a:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800256c:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800256e:	b28d      	uxth	r5, r1
 8002570:	b92b      	cbnz	r3, 800257e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8002572:	4b10      	ldr	r3, [pc, #64]	; (80025b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002574:	4a10      	ldr	r2, [pc, #64]	; (80025b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002576:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002578:	4810      	ldr	r0, [pc, #64]	; (80025bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800257a:	f019 fb8b 	bl	801bc94 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800257e:	4910      	ldr	r1, [pc, #64]	; (80025c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002580:	8809      	ldrh	r1, [r1, #0]
 8002582:	4291      	cmp	r1, r2
 8002584:	d803      	bhi.n	800258e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002586:	4b0f      	ldr	r3, [pc, #60]	; (80025c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002588:	4a0b      	ldr	r2, [pc, #44]	; (80025b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800258a:	21af      	movs	r1, #175	; 0xaf
 800258c:	e7f4      	b.n	8002578 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 800258e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002592:	4b0d      	ldr	r3, [pc, #52]	; (80025c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800259a:	6803      	ldr	r3, [r0, #0]
 800259c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800259e:	4798      	blx	r3
 80025a0:	1a28      	subs	r0, r5, r0
 80025a2:	b201      	sxth	r1, r0
 80025a4:	4633      	mov	r3, r6
 80025a6:	4620      	mov	r0, r4
    }
 80025a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80025ac:	4718      	bx	r3
 80025ae:	bf00      	nop
 80025b0:	2000a584 	.word	0x2000a584
 80025b4:	0801d97c 	.word	0x0801d97c
 80025b8:	0801d9be 	.word	0x0801d9be
 80025bc:	0801d9ec 	.word	0x0801d9ec
 80025c0:	2000a588 	.word	0x2000a588
 80025c4:	0801da33 	.word	0x0801da33
 80025c8:	2000a58c 	.word	0x2000a58c

080025cc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80025cc:	2200      	movs	r2, #0
 80025ce:	f04f 31ff 	mov.w	r1, #4294967295
 80025d2:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80025d6:	6082      	str	r2, [r0, #8]
    }
 80025d8:	4770      	bx	lr

080025da <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80025da:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80025dc:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80025de:	4604      	mov	r4, r0
        setX(x);
 80025e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80025e2:	4615      	mov	r5, r2
        setX(x);
 80025e4:	4798      	blx	r3
        setY(y);
 80025e6:	6823      	ldr	r3, [r4, #0]
 80025e8:	4629      	mov	r1, r5
 80025ea:	4620      	mov	r0, r4
 80025ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80025ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80025f2:	4718      	bx	r3

080025f4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80025f4:	b570      	push	{r4, r5, r6, lr}
 80025f6:	4604      	mov	r4, r0
 80025f8:	461d      	mov	r5, r3
 80025fa:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80025fe:	f7ff ffec 	bl	80025da <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002602:	6823      	ldr	r3, [r4, #0]
 8002604:	4629      	mov	r1, r5
 8002606:	4620      	mov	r0, r4
 8002608:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800260a:	4798      	blx	r3
        setHeight(height);
 800260c:	6823      	ldr	r3, [r4, #0]
 800260e:	4631      	mov	r1, r6
 8002610:	4620      	mov	r0, r4
 8002612:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002614:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002618:	4718      	bx	r3
	...

0800261c <_ZN8touchgfx6WidgetC1Ev>:
 800261c:	2200      	movs	r2, #0
 800261e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002622:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002626:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800262a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800262e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002632:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002634:	4a01      	ldr	r2, [pc, #4]	; (800263c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002636:	6002      	str	r2, [r0, #0]
 8002638:	4770      	bx	lr
 800263a:	bf00      	nop
 800263c:	0801da7c 	.word	0x0801da7c

08002640 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8002640:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002642:	2226      	movs	r2, #38	; 0x26
    Box()
 8002644:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002646:	2100      	movs	r1, #0
 8002648:	f019 fbb0 	bl	801bdac <memset>
 800264c:	4620      	mov	r0, r4
 800264e:	f7ff ffe5 	bl	800261c <_ZN8touchgfx6WidgetC1Ev>
 8002652:	4b04      	ldr	r3, [pc, #16]	; (8002664 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002654:	6023      	str	r3, [r4, #0]
 8002656:	23ff      	movs	r3, #255	; 0xff
 8002658:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 800265c:	2300      	movs	r3, #0
 800265e:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8002660:	4620      	mov	r0, r4
 8002662:	bd10      	pop	{r4, pc}
 8002664:	0801eb7c 	.word	0x0801eb7c

08002668 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800266c:	4604      	mov	r4, r0
 800266e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002670:	46a0      	mov	r8, r4
        : presenter(0)
 8002672:	2500      	movs	r5, #0
 8002674:	f00b fbca 	bl	800de0c <_ZN8touchgfx6ScreenC1Ev>
 8002678:	4b6c      	ldr	r3, [pc, #432]	; (800282c <_ZN15Screen1ViewBaseC1Ev+0x1c4>)
 800267a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800267c:	f848 3b40 	str.w	r3, [r8], #64
 8002680:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8002684:	4640      	mov	r0, r8
 8002686:	f7ff ffdb 	bl	8002640 <_ZN8touchgfx3BoxC1Ev>
 800268a:	f104 0698 	add.w	r6, r4, #152	; 0x98
 800268e:	4648      	mov	r0, r9
 8002690:	f7ff ffd6 	bl	8002640 <_ZN8touchgfx3BoxC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002694:	2226      	movs	r2, #38	; 0x26
 8002696:	4629      	mov	r1, r5
 8002698:	4630      	mov	r0, r6
 800269a:	f019 fb87 	bl	801bdac <memset>
 800269e:	4630      	mov	r0, r6
 80026a0:	f7ff ffbc 	bl	800261c <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 80026a4:	4b62      	ldr	r3, [pc, #392]	; (8002830 <_ZN15Screen1ViewBaseC1Ev+0x1c8>)
 80026a6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80026aa:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80026ae:	f64f 7bff 	movw	fp, #65535	; 0xffff
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 80026b2:	f04f 3aff 	mov.w	sl, #4294967295
 80026b6:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 80026ba:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80026be:	4b5d      	ldr	r3, [pc, #372]	; (8002834 <_ZN15Screen1ViewBaseC1Ev+0x1cc>)
 80026c0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80026c4:	2226      	movs	r2, #38	; 0x26
 80026c6:	4629      	mov	r1, r5
              text(0)
 80026c8:	e9c4 a536 	strd	sl, r5, [r4, #216]	; 0xd8
 80026cc:	f8a4 b0c4 	strh.w	fp, [r4, #196]	; 0xc4
        : color(col)
 80026d0:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026d4:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 80026d8:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 80026dc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80026e0:	4638      	mov	r0, r7
 80026e2:	f019 fb63 	bl	801bdac <memset>
 80026e6:	4638      	mov	r0, r7
 80026e8:	f7ff ff98 	bl	800261c <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 80026ec:	f04f 0301 	mov.w	r3, #1
 80026f0:	f884 3108 	strb.w	r3, [r4, #264]	; 0x108
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80026f4:	4b50      	ldr	r3, [pc, #320]	; (8002838 <_ZN15Screen1ViewBaseC1Ev+0x1d0>)
 80026f6:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80026fa:	4b50      	ldr	r3, [pc, #320]	; (800283c <_ZN15Screen1ViewBaseC1Ev+0x1d4>)
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80026fc:	f8a4 b114 	strh.w	fp, [r4, #276]	; 0x114
 8002700:	e9c4 3449 	strd	r3, r4, [r4, #292]	; 0x124
 8002704:	4b4e      	ldr	r3, [pc, #312]	; (8002840 <_ZN15Screen1ViewBaseC1Ev+0x1d8>)
 8002706:	f884 b116 	strb.w	fp, [r4, #278]	; 0x116
    __background.setPosition(0, 0, 800, 480);
 800270a:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
 800270e:	e9c4 354b 	strd	r3, r5, [r4, #300]	; 0x12c
 8002712:	f8a4 a112 	strh.w	sl, [r4, #274]	; 0x112
 8002716:	f44f 7348 	mov.w	r3, #800	; 0x320
 800271a:	462a      	mov	r2, r5
 800271c:	4629      	mov	r1, r5
 800271e:	4640      	mov	r0, r8
 8002720:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 8002724:	f884 5110 	strb.w	r5, [r4, #272]	; 0x110
 8002728:	f8cd b000 	str.w	fp, [sp]
 800272c:	f7ff ff62 	bl	80025f4 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002730:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002734:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 8002736:	462a      	mov	r2, r5
 8002738:	f44f 7348 	mov.w	r3, #800	; 0x320
 800273c:	4629      	mov	r1, r5
 800273e:	4648      	mov	r0, r9
 8002740:	f8cd b000 	str.w	fp, [sp]
 8002744:	f7ff ff56 	bl	80025f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setPosition(0, 215, 800, 51);
 8002748:	2333      	movs	r3, #51	; 0x33
 800274a:	22d7      	movs	r2, #215	; 0xd7
 800274c:	f8c4 a094 	str.w	sl, [r4, #148]	; 0x94
 8002750:	9300      	str	r3, [sp, #0]
 8002752:	4629      	mov	r1, r5
 8002754:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002758:	4630      	mov	r0, r6
 800275a:	f7ff ff4b 	bl	80025f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800275e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002762:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002766:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800276a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800276e:	f10d 0a10 	add.w	sl, sp, #16
 8002772:	4650      	mov	r0, sl
 8002774:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002778:	4631      	mov	r1, r6
 800277a:	4798      	blx	r3
 800277c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002780:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002784:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002788:	4b2e      	ldr	r3, [pc, #184]	; (8002844 <_ZN15Screen1ViewBaseC1Ev+0x1dc>)
 800278a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DETB).getText());
 800278c:	f504 7a8c 	add.w	sl, r4, #280	; 0x118
 8002790:	b92b      	cbnz	r3, 800279e <_ZN15Screen1ViewBaseC1Ev+0x136>
 8002792:	4b2d      	ldr	r3, [pc, #180]	; (8002848 <_ZN15Screen1ViewBaseC1Ev+0x1e0>)
 8002794:	4a2d      	ldr	r2, [pc, #180]	; (800284c <_ZN15Screen1ViewBaseC1Ev+0x1e4>)
 8002796:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002798:	482d      	ldr	r0, [pc, #180]	; (8002850 <_ZN15Screen1ViewBaseC1Ev+0x1e8>)
 800279a:	f019 fa7b 	bl	801bc94 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800279e:	4b2d      	ldr	r3, [pc, #180]	; (8002854 <_ZN15Screen1ViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027a0:	881b      	ldrh	r3, [r3, #0]
 80027a2:	b91b      	cbnz	r3, 80027ac <_ZN15Screen1ViewBaseC1Ev+0x144>
 80027a4:	4b2c      	ldr	r3, [pc, #176]	; (8002858 <_ZN15Screen1ViewBaseC1Ev+0x1f0>)
 80027a6:	4a29      	ldr	r2, [pc, #164]	; (800284c <_ZN15Screen1ViewBaseC1Ev+0x1e4>)
 80027a8:	21af      	movs	r1, #175	; 0xaf
 80027aa:	e7f5      	b.n	8002798 <_ZN15Screen1ViewBaseC1Ev+0x130>
        return texts->getText(typedTextId);
 80027ac:	4b2b      	ldr	r3, [pc, #172]	; (800285c <_ZN15Screen1ViewBaseC1Ev+0x1f4>)
 80027ae:	4629      	mov	r1, r5
 80027b0:	6818      	ldr	r0, [r3, #0]
 80027b2:	f000 f9b7 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 80027b6:	4a2a      	ldr	r2, [pc, #168]	; (8002860 <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
 80027b8:	4603      	mov	r3, r0
 80027ba:	2105      	movs	r1, #5
 80027bc:	4650      	mov	r0, sl
 80027be:	f00d f831 	bl	800f824 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80027c2:	4b1b      	ldr	r3, [pc, #108]	; (8002830 <_ZN15Screen1ViewBaseC1Ev+0x1c8>)
        wc1 = value;
 80027c4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYH1));
 80027c8:	a90a      	add	r1, sp, #40	; 0x28
 80027ca:	f04f 0a01 	mov.w	sl, #1
 80027ce:	4630      	mov	r0, r6
 80027d0:	930a      	str	r3, [sp, #40]	; 0x28
 80027d2:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 80027d6:	f008 f9a9 	bl	800ab2c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    button1.setXY(315, 307);
 80027da:	4638      	mov	r0, r7
 80027dc:	f240 1233 	movw	r2, #307	; 0x133
 80027e0:	f240 113b 	movw	r1, #315	; 0x13b
 80027e4:	f7ff fef9 	bl	80025da <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80027e8:	aa0a      	add	r2, sp, #40	; 0x28
 80027ea:	a909      	add	r1, sp, #36	; 0x24
 80027ec:	4638      	mov	r0, r7
 80027ee:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 80027f2:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80027f6:	f008 f9f7 	bl	800abe8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 80027fa:	f504 7392 	add.w	r3, r4, #292	; 0x124
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80027fe:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002802:	1d20      	adds	r0, r4, #4
 8002804:	4641      	mov	r1, r8
 8002806:	9003      	str	r0, [sp, #12]
 8002808:	f006 fc2e 	bl	8009068 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800280c:	9803      	ldr	r0, [sp, #12]
 800280e:	4649      	mov	r1, r9
 8002810:	f006 fc2a 	bl	8009068 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002814:	9803      	ldr	r0, [sp, #12]
 8002816:	4631      	mov	r1, r6
 8002818:	f006 fc26 	bl	8009068 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800281c:	9803      	ldr	r0, [sp, #12]
 800281e:	4639      	mov	r1, r7
 8002820:	f006 fc22 	bl	8009068 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002824:	4620      	mov	r0, r4
 8002826:	b00d      	add	sp, #52	; 0x34
 8002828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800282c:	0801db8c 	.word	0x0801db8c
 8002830:	0801d574 	.word	0x0801d574
 8002834:	0801dae4 	.word	0x0801dae4
 8002838:	0801ec48 	.word	0x0801ec48
 800283c:	0801db74 	.word	0x0801db74
 8002840:	0800254f 	.word	0x0800254f
 8002844:	2000a584 	.word	0x2000a584
 8002848:	0801d97c 	.word	0x0801d97c
 800284c:	0801d9be 	.word	0x0801d9be
 8002850:	0801d9ec 	.word	0x0801d9ec
 8002854:	2000a588 	.word	0x2000a588
 8002858:	0801da33 	.word	0x0801da33
 800285c:	2000a590 	.word	0x2000a590
 8002860:	0801da71 	.word	0x0801da71

08002864 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002864:	4770      	bx	lr
	...

08002868 <_Z23getFont_verdana_10_4bppv>:
{
 8002868:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800286a:	4d15      	ldr	r5, [pc, #84]	; (80028c0 <_Z23getFont_verdana_10_4bppv+0x58>)
 800286c:	782c      	ldrb	r4, [r5, #0]
 800286e:	f3bf 8f5b 	dmb	ish
 8002872:	f014 0401 	ands.w	r4, r4, #1
{
 8002876:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002878:	d11e      	bne.n	80028b8 <_Z23getFont_verdana_10_4bppv+0x50>
 800287a:	4628      	mov	r0, r5
 800287c:	f019 f9de 	bl	801bc3c <__cxa_guard_acquire>
 8002880:	b1d0      	cbz	r0, 80028b8 <_Z23getFont_verdana_10_4bppv+0x50>
 8002882:	233f      	movs	r3, #63	; 0x3f
 8002884:	9307      	str	r3, [sp, #28]
 8002886:	4b0f      	ldr	r3, [pc, #60]	; (80028c4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002888:	9306      	str	r3, [sp, #24]
 800288a:	4b0f      	ldr	r3, [pc, #60]	; (80028c8 <_Z23getFont_verdana_10_4bppv+0x60>)
 800288c:	490f      	ldr	r1, [pc, #60]	; (80028cc <_Z23getFont_verdana_10_4bppv+0x64>)
 800288e:	4810      	ldr	r0, [pc, #64]	; (80028d0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002890:	9408      	str	r4, [sp, #32]
 8002892:	2201      	movs	r2, #1
 8002894:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002898:	2304      	movs	r3, #4
 800289a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800289e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80028a2:	230a      	movs	r3, #10
 80028a4:	9403      	str	r4, [sp, #12]
 80028a6:	9400      	str	r4, [sp, #0]
 80028a8:	f7ff fd7a 	bl	80023a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80028ac:	4809      	ldr	r0, [pc, #36]	; (80028d4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80028ae:	f019 fa0f 	bl	801bcd0 <atexit>
 80028b2:	4628      	mov	r0, r5
 80028b4:	f019 f9ce 	bl	801bc54 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80028b8:	4805      	ldr	r0, [pc, #20]	; (80028d0 <_Z23getFont_verdana_10_4bppv+0x68>)
 80028ba:	b00d      	add	sp, #52	; 0x34
 80028bc:	bd30      	pop	{r4, r5, pc}
 80028be:	bf00      	nop
 80028c0:	2000154c 	.word	0x2000154c
 80028c4:	080204ec 	.word	0x080204ec
 80028c8:	080204f8 	.word	0x080204f8
 80028cc:	90014d08 	.word	0x90014d08
 80028d0:	20001550 	.word	0x20001550
 80028d4:	08002865 	.word	0x08002865

080028d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80028d8:	4770      	bx	lr
	...

080028dc <_Z23getFont_verdana_20_4bppv>:
{
 80028dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80028de:	4d15      	ldr	r5, [pc, #84]	; (8002934 <_Z23getFont_verdana_20_4bppv+0x58>)
 80028e0:	782c      	ldrb	r4, [r5, #0]
 80028e2:	f3bf 8f5b 	dmb	ish
 80028e6:	f014 0401 	ands.w	r4, r4, #1
{
 80028ea:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80028ec:	d11e      	bne.n	800292c <_Z23getFont_verdana_20_4bppv+0x50>
 80028ee:	4628      	mov	r0, r5
 80028f0:	f019 f9a4 	bl	801bc3c <__cxa_guard_acquire>
 80028f4:	b1d0      	cbz	r0, 800292c <_Z23getFont_verdana_20_4bppv+0x50>
 80028f6:	233f      	movs	r3, #63	; 0x3f
 80028f8:	9307      	str	r3, [sp, #28]
 80028fa:	4b0f      	ldr	r3, [pc, #60]	; (8002938 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80028fc:	9306      	str	r3, [sp, #24]
 80028fe:	4b0f      	ldr	r3, [pc, #60]	; (800293c <_Z23getFont_verdana_20_4bppv+0x60>)
 8002900:	490f      	ldr	r1, [pc, #60]	; (8002940 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002902:	4810      	ldr	r0, [pc, #64]	; (8002944 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002904:	9408      	str	r4, [sp, #32]
 8002906:	2201      	movs	r2, #1
 8002908:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800290c:	2304      	movs	r3, #4
 800290e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002912:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002916:	2314      	movs	r3, #20
 8002918:	9403      	str	r4, [sp, #12]
 800291a:	9400      	str	r4, [sp, #0]
 800291c:	f7ff fd40 	bl	80023a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002920:	4809      	ldr	r0, [pc, #36]	; (8002948 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002922:	f019 f9d5 	bl	801bcd0 <atexit>
 8002926:	4628      	mov	r0, r5
 8002928:	f019 f994 	bl	801bc54 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800292c:	4805      	ldr	r0, [pc, #20]	; (8002944 <_Z23getFont_verdana_20_4bppv+0x68>)
 800292e:	b00d      	add	sp, #52	; 0x34
 8002930:	bd30      	pop	{r4, r5, pc}
 8002932:	bf00      	nop
 8002934:	20001578 	.word	0x20001578
 8002938:	080204f0 	.word	0x080204f0
 800293c:	080204fc 	.word	0x080204fc
 8002940:	90014d18 	.word	0x90014d18
 8002944:	2000157c 	.word	0x2000157c
 8002948:	080028d9 	.word	0x080028d9

0800294c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800294c:	4770      	bx	lr
	...

08002950 <_Z23getFont_verdana_40_4bppv>:
{
 8002950:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002952:	4d15      	ldr	r5, [pc, #84]	; (80029a8 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002954:	782c      	ldrb	r4, [r5, #0]
 8002956:	f3bf 8f5b 	dmb	ish
 800295a:	f014 0401 	ands.w	r4, r4, #1
{
 800295e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002960:	d11f      	bne.n	80029a2 <_Z23getFont_verdana_40_4bppv+0x52>
 8002962:	4628      	mov	r0, r5
 8002964:	f019 f96a 	bl	801bc3c <__cxa_guard_acquire>
 8002968:	b1d8      	cbz	r0, 80029a2 <_Z23getFont_verdana_40_4bppv+0x52>
 800296a:	233f      	movs	r3, #63	; 0x3f
 800296c:	9307      	str	r3, [sp, #28]
 800296e:	4b0f      	ldr	r3, [pc, #60]	; (80029ac <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002970:	9306      	str	r3, [sp, #24]
 8002972:	4b0f      	ldr	r3, [pc, #60]	; (80029b0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002974:	490f      	ldr	r1, [pc, #60]	; (80029b4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002976:	4810      	ldr	r0, [pc, #64]	; (80029b8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002978:	9408      	str	r4, [sp, #32]
 800297a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800297e:	2204      	movs	r2, #4
 8002980:	2301      	movs	r3, #1
 8002982:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8002986:	9300      	str	r3, [sp, #0]
 8002988:	220b      	movs	r2, #11
 800298a:	2328      	movs	r3, #40	; 0x28
 800298c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002990:	9403      	str	r4, [sp, #12]
 8002992:	f7ff fd05 	bl	80023a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002996:	4809      	ldr	r0, [pc, #36]	; (80029bc <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002998:	f019 f99a 	bl	801bcd0 <atexit>
 800299c:	4628      	mov	r0, r5
 800299e:	f019 f959 	bl	801bc54 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80029a2:	4805      	ldr	r0, [pc, #20]	; (80029b8 <_Z23getFont_verdana_40_4bppv+0x68>)
 80029a4:	b00d      	add	sp, #52	; 0x34
 80029a6:	bd30      	pop	{r4, r5, pc}
 80029a8:	200015a4 	.word	0x200015a4
 80029ac:	080204f4 	.word	0x080204f4
 80029b0:	08020500 	.word	0x08020500
 80029b4:	90014d28 	.word	0x90014d28
 80029b8:	200015a8 	.word	0x200015a8
 80029bc:	0800294d 	.word	0x0800294d

080029c0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80029c0:	2000      	movs	r0, #0
 80029c2:	4770      	bx	lr

080029c4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80029c4:	2000      	movs	r0, #0
 80029c6:	4770      	bx	lr

080029c8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80029c8:	b40e      	push	{r1, r2, r3}
 80029ca:	b503      	push	{r0, r1, lr}
 80029cc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80029ce:	2100      	movs	r1, #0
{
 80029d0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80029d4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80029d6:	f00a fe57 	bl	800d688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80029da:	b002      	add	sp, #8
 80029dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80029e0:	b003      	add	sp, #12
 80029e2:	4770      	bx	lr

080029e4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80029e4:	b40c      	push	{r2, r3}
 80029e6:	b507      	push	{r0, r1, r2, lr}
 80029e8:	ab04      	add	r3, sp, #16
 80029ea:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80029ee:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80029f0:	f00a fe4a 	bl	800d688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80029f4:	b003      	add	sp, #12
 80029f6:	f85d eb04 	ldr.w	lr, [sp], #4
 80029fa:	b002      	add	sp, #8
 80029fc:	4770      	bx	lr
	...

08002a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002a00:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002a02:	b510      	push	{r4, lr}
 8002a04:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002a06:	b373      	cbz	r3, 8002a66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002a08:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002a0a:	b92b      	cbnz	r3, 8002a18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002a0c:	4b18      	ldr	r3, [pc, #96]	; (8002a70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002a0e:	4a19      	ldr	r2, [pc, #100]	; (8002a74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002a10:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002a12:	4819      	ldr	r0, [pc, #100]	; (8002a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002a14:	f019 f93e 	bl	801bc94 <__assert_func>
            return buffer[pos];
 8002a18:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002a1a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002a1e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002a20:	b30b      	cbz	r3, 8002a66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002a22:	f00c f937 	bl	800ec94 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002a26:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002a28:	2b01      	cmp	r3, #1
 8002a2a:	d803      	bhi.n	8002a34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002a2c:	4b13      	ldr	r3, [pc, #76]	; (8002a7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002a2e:	4a14      	ldr	r2, [pc, #80]	; (8002a80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002a30:	21c5      	movs	r1, #197	; 0xc5
 8002a32:	e7ee      	b.n	8002a12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002a34:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002a36:	1c53      	adds	r3, r2, #1
 8002a38:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002a3a:	2b09      	cmp	r3, #9
 8002a3c:	4619      	mov	r1, r3
 8002a3e:	bf88      	it	hi
 8002a40:	f1a3 010a 	subhi.w	r1, r3, #10
 8002a44:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002a48:	f640 103f 	movw	r0, #2367	; 0x93f
 8002a4c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002a4e:	4281      	cmp	r1, r0
 8002a50:	d109      	bne.n	8002a66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002a52:	2b0a      	cmp	r3, #10
 8002a54:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002a58:	bf28      	it	cs
 8002a5a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002a5c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002a60:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002a62:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002a64:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002a66:	4620      	mov	r0, r4
}
 8002a68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002a6c:	f00b bff6 	b.w	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002a70:	0801dbbc 	.word	0x0801dbbc
 8002a74:	0801dbc5 	.word	0x0801dbc5
 8002a78:	0801dc70 	.word	0x0801dc70
 8002a7c:	0801dcba 	.word	0x0801dcba
 8002a80:	0801dcc8 	.word	0x0801dcc8

08002a84 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002a84:	f00b bfa2 	b.w	800e9cc <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002a88 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002a88:	b510      	push	{r4, lr}
 8002a8a:	b086      	sub	sp, #24
 8002a8c:	ac02      	add	r4, sp, #8
 8002a8e:	e884 0006 	stmia.w	r4, {r1, r2}
 8002a92:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002a94:	ab0a      	add	r3, sp, #40	; 0x28
 8002a96:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002a98:	9301      	str	r3, [sp, #4]
 8002a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a9c:	9300      	str	r3, [sp, #0]
 8002a9e:	4621      	mov	r1, r4
 8002aa0:	9b08      	ldr	r3, [sp, #32]
 8002aa2:	f009 faa7 	bl	800bff4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002aa6:	b006      	add	sp, #24
 8002aa8:	bd10      	pop	{r4, pc}
	...

08002aac <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002aac:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002aae:	bb18      	cbnz	r0, 8002af8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002ab0:	4b12      	ldr	r3, [pc, #72]	; (8002afc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002ab2:	4813      	ldr	r0, [pc, #76]	; (8002b00 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	4913      	ldr	r1, [pc, #76]	; (8002b04 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002ab8:	b1b3      	cbz	r3, 8002ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002aba:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002abc:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002abe:	441a      	add	r2, r3
 8002ac0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002ac2:	685a      	ldr	r2, [r3, #4]
 8002ac4:	441a      	add	r2, r3
 8002ac6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002ac8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002aca:	4b0f      	ldr	r3, [pc, #60]	; (8002b08 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002acc:	2200      	movs	r2, #0
 8002ace:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002ad0:	f000 f838 	bl	8002b44 <_ZN17TypedTextDatabase8getFontsEv>
 8002ad4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002ad6:	f000 f833 	bl	8002b40 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002ada:	4b0c      	ldr	r3, [pc, #48]	; (8002b0c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002adc:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002ade:	4b0c      	ldr	r3, [pc, #48]	; (8002b10 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002ae0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002ae2:	4b0c      	ldr	r3, [pc, #48]	; (8002b14 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002ae4:	8018      	strh	r0, [r3, #0]
    }
}
 8002ae6:	e007      	b.n	8002af8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002ae8:	4b0b      	ldr	r3, [pc, #44]	; (8002b18 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002aea:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002aec:	4b0b      	ldr	r3, [pc, #44]	; (8002b1c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002aee:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002af0:	4b0b      	ldr	r3, [pc, #44]	; (8002b20 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002af2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002af4:	2c00      	cmp	r4, #0
 8002af6:	d1e8      	bne.n	8002aca <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002af8:	bd38      	pop	{r3, r4, r5, pc}
 8002afa:	bf00      	nop
 8002afc:	200015d0 	.word	0x200015d0
 8002b00:	200015d4 	.word	0x200015d4
 8002b04:	200015d8 	.word	0x200015d8
 8002b08:	200015dc 	.word	0x200015dc
 8002b0c:	2000a584 	.word	0x2000a584
 8002b10:	2000a58c 	.word	0x2000a58c
 8002b14:	2000a588 	.word	0x2000a588
 8002b18:	90014dcc 	.word	0x90014dcc
 8002b1c:	90014dc4 	.word	0x90014dc4
 8002b20:	90014dd8 	.word	0x90014dd8

08002b24 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002b24:	4b04      	ldr	r3, [pc, #16]	; (8002b38 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002b2c:	4b03      	ldr	r3, [pc, #12]	; (8002b3c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002b2e:	681b      	ldr	r3, [r3, #0]
}
 8002b30:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	200015d8 	.word	0x200015d8
 8002b3c:	200015d4 	.word	0x200015d4

08002b40 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002b40:	2002      	movs	r0, #2
 8002b42:	4770      	bx	lr

08002b44 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002b44:	4800      	ldr	r0, [pc, #0]	; (8002b48 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002b46:	4770      	bx	lr
 8002b48:	200015e0 	.word	0x200015e0

08002b4c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002b4c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002b4e:	f7ff fec5 	bl	80028dc <_Z23getFont_verdana_20_4bppv>
};
 8002b52:	4c04      	ldr	r4, [pc, #16]	; (8002b64 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002b54:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002b56:	f7ff fefb 	bl	8002950 <_Z23getFont_verdana_40_4bppv>
};
 8002b5a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002b5c:	f7ff fe84 	bl	8002868 <_Z23getFont_verdana_10_4bppv>
};
 8002b60:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002b62:	bd10      	pop	{r4, pc}
 8002b64:	200015e0 	.word	0x200015e0

08002b68 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002b68:	4770      	bx	lr

08002b6a <_ZN19FrontendApplicationD0Ev>:
 8002b6a:	b510      	push	{r4, lr}
 8002b6c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002b70:	4604      	mov	r4, r0
 8002b72:	f019 f861 	bl	801bc38 <_ZdlPvj>
 8002b76:	4620      	mov	r0, r4
 8002b78:	bd10      	pop	{r4, pc}

08002b7a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002b7a:	b510      	push	{r4, lr}
 8002b7c:	4604      	mov	r4, r0
    {
        model.tick();
 8002b7e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002b82:	f000 f812 	bl	8002baa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002b86:	4620      	mov	r0, r4
    }
 8002b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002b8c:	f009 bd90 	b.w	800c6b0 <_ZN8touchgfx11Application15handleTickEventEv>

08002b90 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002b90:	b510      	push	{r4, lr}
 8002b92:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002b94:	f7ff fb92 	bl	80022bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002b98:	4b01      	ldr	r3, [pc, #4]	; (8002ba0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002b9a:	6023      	str	r3, [r4, #0]
{

}
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	bd10      	pop	{r4, pc}
 8002ba0:	0801dda4 	.word	0x0801dda4

08002ba4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	6002      	str	r2, [r0, #0]
{

}
 8002ba8:	4770      	bx	lr

08002baa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002baa:	4770      	bx	lr

08002bac <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002bac:	4770      	bx	lr

08002bae <_ZThn4_N16Screen1PresenterD1Ev>:
 8002bae:	3804      	subs	r0, #4
 8002bb0:	4770      	bx	lr

08002bb2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002bb2:	4770      	bx	lr

08002bb4 <_ZN16Screen1PresenterD0Ev>:
 8002bb4:	b510      	push	{r4, lr}
 8002bb6:	2110      	movs	r1, #16
 8002bb8:	4604      	mov	r4, r0
 8002bba:	f019 f83d 	bl	801bc38 <_ZdlPvj>
 8002bbe:	4620      	mov	r0, r4
 8002bc0:	bd10      	pop	{r4, pc}

08002bc2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8002bc2:	f1a0 0004 	sub.w	r0, r0, #4
 8002bc6:	e7f5      	b.n	8002bb4 <_ZN16Screen1PresenterD0Ev>

08002bc8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002bc8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002bca:	2200      	movs	r2, #0
 8002bcc:	6082      	str	r2, [r0, #8]
    : view(v)
 8002bce:	4a04      	ldr	r2, [pc, #16]	; (8002be0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002bd0:	60c1      	str	r1, [r0, #12]
 8002bd2:	f102 0408 	add.w	r4, r2, #8
 8002bd6:	3220      	adds	r2, #32
 8002bd8:	6004      	str	r4, [r0, #0]
 8002bda:	6042      	str	r2, [r0, #4]
}
 8002bdc:	bd10      	pop	{r4, pc}
 8002bde:	bf00      	nop
 8002be0:	0801dde8 	.word	0x0801dde8

08002be4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002be4:	4770      	bx	lr

08002be6 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002be6:	4770      	bx	lr

08002be8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002be8:	f7ff bc76 	b.w	80024d8 <_ZN15Screen1ViewBase11setupScreenEv>

08002bec <_ZN11Screen1View6verifyEv>:

void Screen1View::verify()
{
 8002bec:	b510      	push	{r4, lr}
	GPIO_PinState input_pin = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8002bee:	f44f 7180 	mov.w	r1, #256	; 0x100
{
 8002bf2:	4604      	mov	r4, r0
	GPIO_PinState input_pin = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8002bf4:	4807      	ldr	r0, [pc, #28]	; (8002c14 <_ZN11Screen1View6verifyEv+0x28>)
 8002bf6:	f002 f811 	bl	8004c1c <HAL_GPIO_ReadPin>

	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", (int)input_pin);
 8002bfa:	4a07      	ldr	r2, [pc, #28]	; (8002c18 <_ZN11Screen1View6verifyEv+0x2c>)
	GPIO_PinState input_pin = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8002bfc:	4603      	mov	r3, r0
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", (int)input_pin);
 8002bfe:	2105      	movs	r1, #5
 8002c00:	f504 708c 	add.w	r0, r4, #280	; 0x118
 8002c04:	f00c fe0e 	bl	800f824 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8002c08:	f104 0098 	add.w	r0, r4, #152	; 0x98

}
 8002c0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8002c10:	f00a be5b 	b.w	800d8ca <_ZNK8touchgfx8Drawable10invalidateEv>
 8002c14:	40020000 	.word	0x40020000
 8002c18:	0801de10 	.word	0x0801de10

08002c1c <_ZN11Screen1ViewD0Ev>:
 8002c1c:	b510      	push	{r4, lr}
 8002c1e:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002c22:	4604      	mov	r4, r0
 8002c24:	f019 f808 	bl	801bc38 <_ZdlPvj>
 8002c28:	4620      	mov	r0, r4
 8002c2a:	bd10      	pop	{r4, pc}

08002c2c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002c2c:	b510      	push	{r4, lr}
 8002c2e:	4604      	mov	r4, r0
 8002c30:	f7ff fd1a 	bl	8002668 <_ZN15Screen1ViewBaseC1Ev>
 8002c34:	4b01      	ldr	r3, [pc, #4]	; (8002c3c <_ZN11Screen1ViewC1Ev+0x10>)
 8002c36:	6023      	str	r3, [r4, #0]
}
 8002c38:	4620      	mov	r0, r4
 8002c3a:	bd10      	pop	{r4, pc}
 8002c3c:	0801de1c 	.word	0x0801de1c

08002c40 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002c40:	4770      	bx	lr

08002c42 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002c42:	2000      	movs	r0, #0
 8002c44:	4770      	bx	lr

08002c46 <ft6x06_ReadID>:
{
 8002c46:	b510      	push	{r4, lr}
 8002c48:	4604      	mov	r4, r0
  TS_IO_Init();
 8002c4a:	f000 fb75 	bl	8003338 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002c4e:	21a8      	movs	r1, #168	; 0xa8
 8002c50:	b2e0      	uxtb	r0, r4
 8002c52:	f000 fb8d 	bl	8003370 <TS_IO_Read>
}
 8002c56:	b280      	uxth	r0, r0
 8002c58:	bd10      	pop	{r4, pc}
	...

08002c5c <ft6x06_TS_DetectTouch>:
{
 8002c5c:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002c5e:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002c60:	2102      	movs	r1, #2
 8002c62:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002c64:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002c68:	f000 fb82 	bl	8003370 <TS_IO_Read>
 8002c6c:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002c70:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002c74:	f003 030f 	and.w	r3, r3, #15
 8002c78:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002c7c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002c80:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002c82:	bf88      	it	hi
 8002c84:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002c88:	4b04      	ldr	r3, [pc, #16]	; (8002c9c <ft6x06_TS_DetectTouch+0x40>)
 8002c8a:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002c8e:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002c92:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002c94:	2200      	movs	r2, #0
 8002c96:	709a      	strb	r2, [r3, #2]
}
 8002c98:	b002      	add	sp, #8
 8002c9a:	bd10      	pop	{r4, pc}
 8002c9c:	200015ee 	.word	0x200015ee

08002ca0 <ft6x06_TS_GetXY>:
{
 8002ca0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002ca2:	4c15      	ldr	r4, [pc, #84]	; (8002cf8 <ft6x06_TS_GetXY+0x58>)
{
 8002ca4:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002ca6:	78a3      	ldrb	r3, [r4, #2]
 8002ca8:	7862      	ldrb	r2, [r4, #1]
 8002caa:	429a      	cmp	r2, r3
{
 8002cac:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002cae:	d91f      	bls.n	8002cf0 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002cb0:	b303      	cbz	r3, 8002cf4 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002cb2:	2b01      	cmp	r3, #1
 8002cb4:	bf14      	ite	ne
 8002cb6:	2100      	movne	r1, #0
 8002cb8:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002cba:	2304      	movs	r3, #4
 8002cbc:	eb0d 0203 	add.w	r2, sp, r3
 8002cc0:	b2c0      	uxtb	r0, r0
 8002cc2:	f000 fb73 	bl	80033ac <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002cc6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002cca:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002cce:	021b      	lsls	r3, r3, #8
 8002cd0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002cd4:	4313      	orrs	r3, r2
 8002cd6:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002cd8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002cdc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002ce0:	021b      	lsls	r3, r3, #8
 8002ce2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002ce6:	4313      	orrs	r3, r2
 8002ce8:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002cea:	78a3      	ldrb	r3, [r4, #2]
 8002cec:	3301      	adds	r3, #1
 8002cee:	70a3      	strb	r3, [r4, #2]
}
 8002cf0:	b002      	add	sp, #8
 8002cf2:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002cf4:	2103      	movs	r1, #3
 8002cf6:	e7e0      	b.n	8002cba <ft6x06_TS_GetXY+0x1a>
 8002cf8:	200015ee 	.word	0x200015ee

08002cfc <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002cfc:	2201      	movs	r2, #1
 8002cfe:	21a4      	movs	r1, #164	; 0xa4
 8002d00:	b2c0      	uxtb	r0, r0
 8002d02:	f000 bb1b 	b.w	800333c <TS_IO_Write>

08002d06 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002d06:	2200      	movs	r2, #0
 8002d08:	21a4      	movs	r1, #164	; 0xa4
 8002d0a:	b2c0      	uxtb	r0, r0
 8002d0c:	f000 bb16 	b.w	800333c <TS_IO_Write>

08002d10 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002d10:	f7ff bff9 	b.w	8002d06 <ft6x06_TS_DisableIT>

08002d14 <ft6x06_TS_ClearIT>:
 8002d14:	4770      	bx	lr
	...

08002d18 <ft6x06_Init>:
{  
 8002d18:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002d1a:	4b09      	ldr	r3, [pc, #36]	; (8002d40 <ft6x06_Init+0x28>)
 8002d1c:	781a      	ldrb	r2, [r3, #0]
 8002d1e:	4290      	cmp	r0, r2
 8002d20:	d00a      	beq.n	8002d38 <ft6x06_Init+0x20>
 8002d22:	7859      	ldrb	r1, [r3, #1]
 8002d24:	4288      	cmp	r0, r1
 8002d26:	d007      	beq.n	8002d38 <ft6x06_Init+0x20>
 8002d28:	b10a      	cbz	r2, 8002d2e <ft6x06_Init+0x16>
 8002d2a:	b929      	cbnz	r1, 8002d38 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002d2c:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002d2e:	5498      	strb	r0, [r3, r2]
}
 8002d30:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002d34:	f000 bb00 	b.w	8003338 <TS_IO_Init>
}
 8002d38:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d3c:	4770      	bx	lr
 8002d3e:	bf00      	nop
 8002d40:	200015ec 	.word	0x200015ec

08002d44 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002d44:	b538      	push	{r3, r4, r5, lr}
 8002d46:	4604      	mov	r4, r0
 8002d48:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d4a:	2000      	movs	r0, #0
 8002d4c:	49c9      	ldr	r1, [pc, #804]	; (8003074 <OTM8009A_Init+0x330>)
 8002d4e:	f7fd fea3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002d52:	49c9      	ldr	r1, [pc, #804]	; (8003078 <OTM8009A_Init+0x334>)
 8002d54:	2003      	movs	r0, #3
 8002d56:	f7fd fe9f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002d5a:	49c8      	ldr	r1, [pc, #800]	; (800307c <OTM8009A_Init+0x338>)
 8002d5c:	2000      	movs	r0, #0
 8002d5e:	f7fd fe9b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002d62:	49c7      	ldr	r1, [pc, #796]	; (8003080 <OTM8009A_Init+0x33c>)
 8002d64:	2002      	movs	r0, #2
 8002d66:	f7fd fe97 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002d6a:	49c4      	ldr	r1, [pc, #784]	; (800307c <OTM8009A_Init+0x338>)
 8002d6c:	2000      	movs	r0, #0
 8002d6e:	f7fd fe93 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002d72:	49c4      	ldr	r1, [pc, #784]	; (8003084 <OTM8009A_Init+0x340>)
 8002d74:	2000      	movs	r0, #0
 8002d76:	f7fd fe8f 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002d7a:	200a      	movs	r0, #10
 8002d7c:	f000 fb2e 	bl	80033dc <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002d80:	49c1      	ldr	r1, [pc, #772]	; (8003088 <OTM8009A_Init+0x344>)
 8002d82:	2000      	movs	r0, #0
 8002d84:	f7fd fe88 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002d88:	49c0      	ldr	r1, [pc, #768]	; (800308c <OTM8009A_Init+0x348>)
 8002d8a:	2000      	movs	r0, #0
 8002d8c:	f7fd fe84 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002d90:	200a      	movs	r0, #10
 8002d92:	f000 fb23 	bl	80033dc <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002d96:	49be      	ldr	r1, [pc, #760]	; (8003090 <OTM8009A_Init+0x34c>)
 8002d98:	2000      	movs	r0, #0
 8002d9a:	f7fd fe7d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002d9e:	49bd      	ldr	r1, [pc, #756]	; (8003094 <OTM8009A_Init+0x350>)
 8002da0:	2000      	movs	r0, #0
 8002da2:	f7fd fe79 	bl	8000a98 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002da6:	49bc      	ldr	r1, [pc, #752]	; (8003098 <OTM8009A_Init+0x354>)
 8002da8:	2000      	movs	r0, #0
 8002daa:	f7fd fe75 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002dae:	49bb      	ldr	r1, [pc, #748]	; (800309c <OTM8009A_Init+0x358>)
 8002db0:	2000      	movs	r0, #0
 8002db2:	f7fd fe71 	bl	8000a98 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002db6:	49ba      	ldr	r1, [pc, #744]	; (80030a0 <OTM8009A_Init+0x35c>)
 8002db8:	2000      	movs	r0, #0
 8002dba:	f7fd fe6d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002dbe:	49b9      	ldr	r1, [pc, #740]	; (80030a4 <OTM8009A_Init+0x360>)
 8002dc0:	2000      	movs	r0, #0
 8002dc2:	f7fd fe69 	bl	8000a98 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002dc6:	49ab      	ldr	r1, [pc, #684]	; (8003074 <OTM8009A_Init+0x330>)
 8002dc8:	2000      	movs	r0, #0
 8002dca:	f7fd fe65 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002dce:	49b6      	ldr	r1, [pc, #728]	; (80030a8 <OTM8009A_Init+0x364>)
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	f7fd fe61 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002dd6:	49b5      	ldr	r1, [pc, #724]	; (80030ac <OTM8009A_Init+0x368>)
 8002dd8:	2000      	movs	r0, #0
 8002dda:	f7fd fe5d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002dde:	49b4      	ldr	r1, [pc, #720]	; (80030b0 <OTM8009A_Init+0x36c>)
 8002de0:	2000      	movs	r0, #0
 8002de2:	f7fd fe59 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002de6:	49b3      	ldr	r1, [pc, #716]	; (80030b4 <OTM8009A_Init+0x370>)
 8002de8:	2000      	movs	r0, #0
 8002dea:	f7fd fe55 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002dee:	49b2      	ldr	r1, [pc, #712]	; (80030b8 <OTM8009A_Init+0x374>)
 8002df0:	2000      	movs	r0, #0
 8002df2:	f7fd fe51 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002df6:	49b1      	ldr	r1, [pc, #708]	; (80030bc <OTM8009A_Init+0x378>)
 8002df8:	2000      	movs	r0, #0
 8002dfa:	f7fd fe4d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002dfe:	49b0      	ldr	r1, [pc, #704]	; (80030c0 <OTM8009A_Init+0x37c>)
 8002e00:	2000      	movs	r0, #0
 8002e02:	f7fd fe49 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002e06:	49af      	ldr	r1, [pc, #700]	; (80030c4 <OTM8009A_Init+0x380>)
 8002e08:	2000      	movs	r0, #0
 8002e0a:	f7fd fe45 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002e0e:	49a3      	ldr	r1, [pc, #652]	; (800309c <OTM8009A_Init+0x358>)
 8002e10:	2000      	movs	r0, #0
 8002e12:	f7fd fe41 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e16:	4997      	ldr	r1, [pc, #604]	; (8003074 <OTM8009A_Init+0x330>)
 8002e18:	2000      	movs	r0, #0
 8002e1a:	f7fd fe3d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002e1e:	49aa      	ldr	r1, [pc, #680]	; (80030c8 <OTM8009A_Init+0x384>)
 8002e20:	2002      	movs	r0, #2
 8002e22:	f7fd fe39 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002e26:	49a9      	ldr	r1, [pc, #676]	; (80030cc <OTM8009A_Init+0x388>)
 8002e28:	2000      	movs	r0, #0
 8002e2a:	f7fd fe35 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002e2e:	49a8      	ldr	r1, [pc, #672]	; (80030d0 <OTM8009A_Init+0x38c>)
 8002e30:	2000      	movs	r0, #0
 8002e32:	f7fd fe31 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002e36:	49a7      	ldr	r1, [pc, #668]	; (80030d4 <OTM8009A_Init+0x390>)
 8002e38:	2000      	movs	r0, #0
 8002e3a:	f7fd fe2d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002e3e:	49a6      	ldr	r1, [pc, #664]	; (80030d8 <OTM8009A_Init+0x394>)
 8002e40:	2000      	movs	r0, #0
 8002e42:	f7fd fe29 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002e46:	49a5      	ldr	r1, [pc, #660]	; (80030dc <OTM8009A_Init+0x398>)
 8002e48:	2000      	movs	r0, #0
 8002e4a:	f7fd fe25 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002e4e:	49a4      	ldr	r1, [pc, #656]	; (80030e0 <OTM8009A_Init+0x39c>)
 8002e50:	2000      	movs	r0, #0
 8002e52:	f7fd fe21 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002e56:	4995      	ldr	r1, [pc, #596]	; (80030ac <OTM8009A_Init+0x368>)
 8002e58:	2000      	movs	r0, #0
 8002e5a:	f7fd fe1d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002e5e:	49a1      	ldr	r1, [pc, #644]	; (80030e4 <OTM8009A_Init+0x3a0>)
 8002e60:	2000      	movs	r0, #0
 8002e62:	f7fd fe19 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002e66:	4993      	ldr	r1, [pc, #588]	; (80030b4 <OTM8009A_Init+0x370>)
 8002e68:	2000      	movs	r0, #0
 8002e6a:	f7fd fe15 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002e6e:	499e      	ldr	r1, [pc, #632]	; (80030e8 <OTM8009A_Init+0x3a4>)
 8002e70:	2000      	movs	r0, #0
 8002e72:	f7fd fe11 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002e76:	499d      	ldr	r1, [pc, #628]	; (80030ec <OTM8009A_Init+0x3a8>)
 8002e78:	2000      	movs	r0, #0
 8002e7a:	f7fd fe0d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002e7e:	499c      	ldr	r1, [pc, #624]	; (80030f0 <OTM8009A_Init+0x3ac>)
 8002e80:	2002      	movs	r0, #2
 8002e82:	f7fd fe09 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002e86:	497d      	ldr	r1, [pc, #500]	; (800307c <OTM8009A_Init+0x338>)
 8002e88:	2000      	movs	r0, #0
 8002e8a:	f7fd fe05 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002e8e:	4999      	ldr	r1, [pc, #612]	; (80030f4 <OTM8009A_Init+0x3b0>)
 8002e90:	2006      	movs	r0, #6
 8002e92:	f7fd fe01 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002e96:	4998      	ldr	r1, [pc, #608]	; (80030f8 <OTM8009A_Init+0x3b4>)
 8002e98:	2000      	movs	r0, #0
 8002e9a:	f7fd fdfd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002e9e:	4997      	ldr	r1, [pc, #604]	; (80030fc <OTM8009A_Init+0x3b8>)
 8002ea0:	200e      	movs	r0, #14
 8002ea2:	f7fd fdf9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002ea6:	4996      	ldr	r1, [pc, #600]	; (8003100 <OTM8009A_Init+0x3bc>)
 8002ea8:	2000      	movs	r0, #0
 8002eaa:	f7fd fdf5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002eae:	4995      	ldr	r1, [pc, #596]	; (8003104 <OTM8009A_Init+0x3c0>)
 8002eb0:	200e      	movs	r0, #14
 8002eb2:	f7fd fdf1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002eb6:	4994      	ldr	r1, [pc, #592]	; (8003108 <OTM8009A_Init+0x3c4>)
 8002eb8:	2000      	movs	r0, #0
 8002eba:	f7fd fded 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002ebe:	4993      	ldr	r1, [pc, #588]	; (800310c <OTM8009A_Init+0x3c8>)
 8002ec0:	200a      	movs	r0, #10
 8002ec2:	f7fd fde9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002ec6:	4992      	ldr	r1, [pc, #584]	; (8003110 <OTM8009A_Init+0x3cc>)
 8002ec8:	2000      	movs	r0, #0
 8002eca:	f7fd fde5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002ece:	4991      	ldr	r1, [pc, #580]	; (8003114 <OTM8009A_Init+0x3d0>)
 8002ed0:	2000      	movs	r0, #0
 8002ed2:	f7fd fde1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002ed6:	4969      	ldr	r1, [pc, #420]	; (800307c <OTM8009A_Init+0x338>)
 8002ed8:	2000      	movs	r0, #0
 8002eda:	f7fd fddd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002ede:	498e      	ldr	r1, [pc, #568]	; (8003118 <OTM8009A_Init+0x3d4>)
 8002ee0:	200a      	movs	r0, #10
 8002ee2:	f7fd fdd9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002ee6:	498d      	ldr	r1, [pc, #564]	; (800311c <OTM8009A_Init+0x3d8>)
 8002ee8:	2000      	movs	r0, #0
 8002eea:	f7fd fdd5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002eee:	498c      	ldr	r1, [pc, #560]	; (8003120 <OTM8009A_Init+0x3dc>)
 8002ef0:	200f      	movs	r0, #15
 8002ef2:	f7fd fdd1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002ef6:	4980      	ldr	r1, [pc, #512]	; (80030f8 <OTM8009A_Init+0x3b4>)
 8002ef8:	2000      	movs	r0, #0
 8002efa:	f7fd fdcd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002efe:	4989      	ldr	r1, [pc, #548]	; (8003124 <OTM8009A_Init+0x3e0>)
 8002f00:	200f      	movs	r0, #15
 8002f02:	f7fd fdc9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002f06:	497e      	ldr	r1, [pc, #504]	; (8003100 <OTM8009A_Init+0x3bc>)
 8002f08:	2000      	movs	r0, #0
 8002f0a:	f7fd fdc5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002f0e:	4986      	ldr	r1, [pc, #536]	; (8003128 <OTM8009A_Init+0x3e4>)
 8002f10:	200a      	movs	r0, #10
 8002f12:	f7fd fdc1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002f16:	497c      	ldr	r1, [pc, #496]	; (8003108 <OTM8009A_Init+0x3c4>)
 8002f18:	2000      	movs	r0, #0
 8002f1a:	f7fd fdbd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002f1e:	4983      	ldr	r1, [pc, #524]	; (800312c <OTM8009A_Init+0x3e8>)
 8002f20:	200f      	movs	r0, #15
 8002f22:	f7fd fdb9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002f26:	497a      	ldr	r1, [pc, #488]	; (8003110 <OTM8009A_Init+0x3cc>)
 8002f28:	2000      	movs	r0, #0
 8002f2a:	f7fd fdb5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002f2e:	4980      	ldr	r1, [pc, #512]	; (8003130 <OTM8009A_Init+0x3ec>)
 8002f30:	200f      	movs	r0, #15
 8002f32:	f7fd fdb1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002f36:	497f      	ldr	r1, [pc, #508]	; (8003134 <OTM8009A_Init+0x3f0>)
 8002f38:	2000      	movs	r0, #0
 8002f3a:	f7fd fdad 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002f3e:	497e      	ldr	r1, [pc, #504]	; (8003138 <OTM8009A_Init+0x3f4>)
 8002f40:	200a      	movs	r0, #10
 8002f42:	f7fd fda9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002f46:	497d      	ldr	r1, [pc, #500]	; (800313c <OTM8009A_Init+0x3f8>)
 8002f48:	2000      	movs	r0, #0
 8002f4a:	f7fd fda5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002f4e:	497c      	ldr	r1, [pc, #496]	; (8003140 <OTM8009A_Init+0x3fc>)
 8002f50:	200a      	movs	r0, #10
 8002f52:	f7fd fda1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002f56:	4949      	ldr	r1, [pc, #292]	; (800307c <OTM8009A_Init+0x338>)
 8002f58:	2000      	movs	r0, #0
 8002f5a:	f7fd fd9d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002f5e:	4979      	ldr	r1, [pc, #484]	; (8003144 <OTM8009A_Init+0x400>)
 8002f60:	200a      	movs	r0, #10
 8002f62:	f7fd fd99 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002f66:	496d      	ldr	r1, [pc, #436]	; (800311c <OTM8009A_Init+0x3d8>)
 8002f68:	2000      	movs	r0, #0
 8002f6a:	f7fd fd95 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002f6e:	4976      	ldr	r1, [pc, #472]	; (8003148 <OTM8009A_Init+0x404>)
 8002f70:	200f      	movs	r0, #15
 8002f72:	f7fd fd91 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002f76:	4960      	ldr	r1, [pc, #384]	; (80030f8 <OTM8009A_Init+0x3b4>)
 8002f78:	2000      	movs	r0, #0
 8002f7a:	f7fd fd8d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002f7e:	4973      	ldr	r1, [pc, #460]	; (800314c <OTM8009A_Init+0x408>)
 8002f80:	200f      	movs	r0, #15
 8002f82:	f7fd fd89 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002f86:	495e      	ldr	r1, [pc, #376]	; (8003100 <OTM8009A_Init+0x3bc>)
 8002f88:	2000      	movs	r0, #0
 8002f8a:	f7fd fd85 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002f8e:	4970      	ldr	r1, [pc, #448]	; (8003150 <OTM8009A_Init+0x40c>)
 8002f90:	200a      	movs	r0, #10
 8002f92:	f7fd fd81 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002f96:	495c      	ldr	r1, [pc, #368]	; (8003108 <OTM8009A_Init+0x3c4>)
 8002f98:	2000      	movs	r0, #0
 8002f9a:	f7fd fd7d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002f9e:	496d      	ldr	r1, [pc, #436]	; (8003154 <OTM8009A_Init+0x410>)
 8002fa0:	200f      	movs	r0, #15
 8002fa2:	f7fd fd79 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002fa6:	495a      	ldr	r1, [pc, #360]	; (8003110 <OTM8009A_Init+0x3cc>)
 8002fa8:	2000      	movs	r0, #0
 8002faa:	f7fd fd75 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002fae:	496a      	ldr	r1, [pc, #424]	; (8003158 <OTM8009A_Init+0x414>)
 8002fb0:	200f      	movs	r0, #15
 8002fb2:	f7fd fd71 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002fb6:	493d      	ldr	r1, [pc, #244]	; (80030ac <OTM8009A_Init+0x368>)
 8002fb8:	2000      	movs	r0, #0
 8002fba:	f7fd fd6d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002fbe:	4967      	ldr	r1, [pc, #412]	; (800315c <OTM8009A_Init+0x418>)
 8002fc0:	2000      	movs	r0, #0
 8002fc2:	f7fd fd69 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002fc6:	4966      	ldr	r1, [pc, #408]	; (8003160 <OTM8009A_Init+0x41c>)
 8002fc8:	2000      	movs	r0, #0
 8002fca:	f7fd fd65 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002fce:	4965      	ldr	r1, [pc, #404]	; (8003164 <OTM8009A_Init+0x420>)
 8002fd0:	2000      	movs	r0, #0
 8002fd2:	f7fd fd61 	bl	8000a98 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002fd6:	4964      	ldr	r1, [pc, #400]	; (8003168 <OTM8009A_Init+0x424>)
 8002fd8:	2000      	movs	r0, #0
 8002fda:	f7fd fd5d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002fde:	4963      	ldr	r1, [pc, #396]	; (800316c <OTM8009A_Init+0x428>)
 8002fe0:	2000      	movs	r0, #0
 8002fe2:	f7fd fd59 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002fe6:	4923      	ldr	r1, [pc, #140]	; (8003074 <OTM8009A_Init+0x330>)
 8002fe8:	2000      	movs	r0, #0
 8002fea:	f7fd fd55 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002fee:	4960      	ldr	r1, [pc, #384]	; (8003170 <OTM8009A_Init+0x42c>)
 8002ff0:	2003      	movs	r0, #3
 8002ff2:	f7fd fd51 	bl	8000a98 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002ff6:	491f      	ldr	r1, [pc, #124]	; (8003074 <OTM8009A_Init+0x330>)
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	f7fd fd4d 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002ffe:	491d      	ldr	r1, [pc, #116]	; (8003074 <OTM8009A_Init+0x330>)
 8003000:	2000      	movs	r0, #0
 8003002:	f7fd fd49 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8003006:	495b      	ldr	r1, [pc, #364]	; (8003174 <OTM8009A_Init+0x430>)
 8003008:	2010      	movs	r0, #16
 800300a:	f7fd fd45 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800300e:	4919      	ldr	r1, [pc, #100]	; (8003074 <OTM8009A_Init+0x330>)
 8003010:	2000      	movs	r0, #0
 8003012:	f7fd fd41 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8003016:	4958      	ldr	r1, [pc, #352]	; (8003178 <OTM8009A_Init+0x434>)
 8003018:	2010      	movs	r0, #16
 800301a:	f7fd fd3d 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800301e:	2000      	movs	r0, #0
 8003020:	4956      	ldr	r1, [pc, #344]	; (800317c <OTM8009A_Init+0x438>)
 8003022:	f7fd fd39 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8003026:	2078      	movs	r0, #120	; 0x78
 8003028:	f000 f9d8 	bl	80033dc <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800302c:	2c00      	cmp	r4, #0
 800302e:	f000 80c7 	beq.w	80031c0 <OTM8009A_Init+0x47c>
 8003032:	2c02      	cmp	r4, #2
 8003034:	d103      	bne.n	800303e <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8003036:	4952      	ldr	r1, [pc, #328]	; (8003180 <OTM8009A_Init+0x43c>)
 8003038:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800303a:	f7fd fd2d 	bl	8000a98 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800303e:	2d01      	cmp	r5, #1
 8003040:	d10b      	bne.n	800305a <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8003042:	4950      	ldr	r1, [pc, #320]	; (8003184 <OTM8009A_Init+0x440>)
 8003044:	2000      	movs	r0, #0
 8003046:	f7fd fd27 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 800304a:	494f      	ldr	r1, [pc, #316]	; (8003188 <OTM8009A_Init+0x444>)
 800304c:	2004      	movs	r0, #4
 800304e:	f7fd fd23 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8003052:	494e      	ldr	r1, [pc, #312]	; (800318c <OTM8009A_Init+0x448>)
 8003054:	2004      	movs	r0, #4
 8003056:	f7fd fd1f 	bl	8000a98 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800305a:	494d      	ldr	r1, [pc, #308]	; (8003190 <OTM8009A_Init+0x44c>)
 800305c:	2000      	movs	r0, #0
 800305e:	f7fd fd1b 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8003062:	494c      	ldr	r1, [pc, #304]	; (8003194 <OTM8009A_Init+0x450>)
 8003064:	2000      	movs	r0, #0
 8003066:	f7fd fd17 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800306a:	494b      	ldr	r1, [pc, #300]	; (8003198 <OTM8009A_Init+0x454>)
 800306c:	2000      	movs	r0, #0
 800306e:	f7fd fd13 	bl	8000a98 <DSI_IO_WriteCmd>
 8003072:	e093      	b.n	800319c <OTM8009A_Init+0x458>
 8003074:	0801de4c 	.word	0x0801de4c
 8003078:	0801deb2 	.word	0x0801deb2
 800307c:	0801de62 	.word	0x0801de62
 8003080:	0801df38 	.word	0x0801df38
 8003084:	0801de78 	.word	0x0801de78
 8003088:	0801de8e 	.word	0x0801de8e
 800308c:	0801dea4 	.word	0x0801dea4
 8003090:	0801deaa 	.word	0x0801deaa
 8003094:	0801deac 	.word	0x0801deac
 8003098:	0801deae 	.word	0x0801deae
 800309c:	0801deb0 	.word	0x0801deb0
 80030a0:	0801de4e 	.word	0x0801de4e
 80030a4:	0801de50 	.word	0x0801de50
 80030a8:	0801de52 	.word	0x0801de52
 80030ac:	0801de54 	.word	0x0801de54
 80030b0:	0801de56 	.word	0x0801de56
 80030b4:	0801de58 	.word	0x0801de58
 80030b8:	0801de5a 	.word	0x0801de5a
 80030bc:	0801de5c 	.word	0x0801de5c
 80030c0:	0801de5e 	.word	0x0801de5e
 80030c4:	0801de60 	.word	0x0801de60
 80030c8:	0801dfb6 	.word	0x0801dfb6
 80030cc:	0801de64 	.word	0x0801de64
 80030d0:	0801de66 	.word	0x0801de66
 80030d4:	0801de68 	.word	0x0801de68
 80030d8:	0801de6a 	.word	0x0801de6a
 80030dc:	0801de6c 	.word	0x0801de6c
 80030e0:	0801de6e 	.word	0x0801de6e
 80030e4:	0801de70 	.word	0x0801de70
 80030e8:	0801de72 	.word	0x0801de72
 80030ec:	0801de74 	.word	0x0801de74
 80030f0:	0801dfb9 	.word	0x0801dfb9
 80030f4:	0801dfbc 	.word	0x0801dfbc
 80030f8:	0801de76 	.word	0x0801de76
 80030fc:	0801dfc3 	.word	0x0801dfc3
 8003100:	0801de7a 	.word	0x0801de7a
 8003104:	0801dfd2 	.word	0x0801dfd2
 8003108:	0801de7c 	.word	0x0801de7c
 800310c:	0801deb6 	.word	0x0801deb6
 8003110:	0801de7e 	.word	0x0801de7e
 8003114:	0801de9c 	.word	0x0801de9c
 8003118:	0801dec1 	.word	0x0801dec1
 800311c:	0801de80 	.word	0x0801de80
 8003120:	0801decc 	.word	0x0801decc
 8003124:	0801dedc 	.word	0x0801dedc
 8003128:	0801deec 	.word	0x0801deec
 800312c:	0801def7 	.word	0x0801def7
 8003130:	0801df07 	.word	0x0801df07
 8003134:	0801de82 	.word	0x0801de82
 8003138:	0801df17 	.word	0x0801df17
 800313c:	0801de84 	.word	0x0801de84
 8003140:	0801df22 	.word	0x0801df22
 8003144:	0801df2d 	.word	0x0801df2d
 8003148:	0801df3b 	.word	0x0801df3b
 800314c:	0801df4b 	.word	0x0801df4b
 8003150:	0801df5b 	.word	0x0801df5b
 8003154:	0801df66 	.word	0x0801df66
 8003158:	0801df76 	.word	0x0801df76
 800315c:	0801de9e 	.word	0x0801de9e
 8003160:	0801dea0 	.word	0x0801dea0
 8003164:	0801dea2 	.word	0x0801dea2
 8003168:	0801dea6 	.word	0x0801dea6
 800316c:	0801dea8 	.word	0x0801dea8
 8003170:	0801df86 	.word	0x0801df86
 8003174:	0801df94 	.word	0x0801df94
 8003178:	0801dfa5 	.word	0x0801dfa5
 800317c:	0801de86 	.word	0x0801de86
 8003180:	0801de88 	.word	0x0801de88
 8003184:	0801de8c 	.word	0x0801de8c
 8003188:	0801df8a 	.word	0x0801df8a
 800318c:	0801df8f 	.word	0x0801df8f
 8003190:	0801de90 	.word	0x0801de90
 8003194:	0801de92 	.word	0x0801de92
 8003198:	0801de94 	.word	0x0801de94

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800319c:	490a      	ldr	r1, [pc, #40]	; (80031c8 <OTM8009A_Init+0x484>)
 800319e:	2000      	movs	r0, #0
 80031a0:	f7fd fc7a 	bl	8000a98 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80031a4:	4909      	ldr	r1, [pc, #36]	; (80031cc <OTM8009A_Init+0x488>)
 80031a6:	2000      	movs	r0, #0
 80031a8:	f7fd fc76 	bl	8000a98 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80031ac:	4908      	ldr	r1, [pc, #32]	; (80031d0 <OTM8009A_Init+0x48c>)
 80031ae:	2000      	movs	r0, #0
 80031b0:	f7fd fc72 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80031b4:	4907      	ldr	r1, [pc, #28]	; (80031d4 <OTM8009A_Init+0x490>)
 80031b6:	2000      	movs	r0, #0
 80031b8:	f7fd fc6e 	bl	8000a98 <DSI_IO_WriteCmd>

  return 0;
}
 80031bc:	2000      	movs	r0, #0
 80031be:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80031c0:	4905      	ldr	r1, [pc, #20]	; (80031d8 <OTM8009A_Init+0x494>)
 80031c2:	4620      	mov	r0, r4
 80031c4:	e739      	b.n	800303a <OTM8009A_Init+0x2f6>
 80031c6:	bf00      	nop
 80031c8:	0801de96 	.word	0x0801de96
 80031cc:	0801de98 	.word	0x0801de98
 80031d0:	0801de4c 	.word	0x0801de4c
 80031d4:	0801de9a 	.word	0x0801de9a
 80031d8:	0801de8a 	.word	0x0801de8a

080031dc <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 80031dc:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80031de:	4d2f      	ldr	r5, [pc, #188]	; (800329c <I2C1_Init+0xc0>)
{
 80031e0:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80031e2:	4628      	mov	r0, r5
 80031e4:	f002 f964 	bl	80054b0 <HAL_I2C_GetState>
 80031e8:	4604      	mov	r4, r0
 80031ea:	2800      	cmp	r0, #0
 80031ec:	d154      	bne.n	8003298 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80031ee:	4a2c      	ldr	r2, [pc, #176]	; (80032a0 <I2C1_Init+0xc4>)
 80031f0:	4b2c      	ldr	r3, [pc, #176]	; (80032a4 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80031f2:	4e2d      	ldr	r6, [pc, #180]	; (80032a8 <I2C1_Init+0xcc>)
 80031f4:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80031f6:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 80031fa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 80031fe:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003202:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003206:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 800320a:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800320c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800320e:	f043 0302 	orr.w	r3, r3, #2
 8003212:	6333      	str	r3, [r6, #48]	; 0x30
 8003214:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8003216:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003218:	f003 0302 	and.w	r3, r3, #2
 800321c:	9301      	str	r3, [sp, #4]
 800321e:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003220:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003224:	2312      	movs	r3, #18
 8003226:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800322a:	2002      	movs	r0, #2
 800322c:	2304      	movs	r3, #4
 800322e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003232:	a903      	add	r1, sp, #12
 8003234:	481d      	ldr	r0, [pc, #116]	; (80032ac <I2C1_Init+0xd0>)
 8003236:	f001 fb69 	bl	800490c <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800323a:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800323e:	a903      	add	r1, sp, #12
 8003240:	481a      	ldr	r0, [pc, #104]	; (80032ac <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003242:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003244:	f001 fb62 	bl	800490c <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003248:	9402      	str	r4, [sp, #8]
 800324a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800324c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003250:	6433      	str	r3, [r6, #64]	; 0x40
 8003252:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003254:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003258:	9302      	str	r3, [sp, #8]
 800325a:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 800325c:	6a33      	ldr	r3, [r6, #32]
 800325e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003262:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8003264:	6a33      	ldr	r3, [r6, #32]
 8003266:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800326a:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 800326c:	4622      	mov	r2, r4
 800326e:	2105      	movs	r1, #5
 8003270:	201f      	movs	r0, #31
 8003272:	f000 fd15 	bl	8003ca0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8003276:	201f      	movs	r0, #31
 8003278:	f000 fd44 	bl	8003d04 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 800327c:	4622      	mov	r2, r4
 800327e:	2105      	movs	r1, #5
 8003280:	2020      	movs	r0, #32
 8003282:	f000 fd0d 	bl	8003ca0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8003286:	2020      	movs	r0, #32
 8003288:	f000 fd3c 	bl	8003d04 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 800328c:	4628      	mov	r0, r5
  }
}
 800328e:	b008      	add	sp, #32
 8003290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8003294:	f001 beb2 	b.w	8004ffc <HAL_I2C_Init>
}
 8003298:	b008      	add	sp, #32
 800329a:	bd70      	pop	{r4, r5, r6, pc}
 800329c:	200015f4 	.word	0x200015f4
 80032a0:	40005400 	.word	0x40005400
 80032a4:	00061a80 	.word	0x00061a80
 80032a8:	40023800 	.word	0x40023800
 80032ac:	40020400 	.word	0x40020400

080032b0 <BSP_PB_Init>:
{
 80032b0:	b510      	push	{r4, lr}
 80032b2:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80032b4:	4b19      	ldr	r3, [pc, #100]	; (800331c <BSP_PB_Init+0x6c>)
 80032b6:	2400      	movs	r4, #0
 80032b8:	9400      	str	r4, [sp, #0]
 80032ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80032bc:	f042 0201 	orr.w	r2, r2, #1
 80032c0:	631a      	str	r2, [r3, #48]	; 0x30
 80032c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032c4:	f003 0301 	and.w	r3, r3, #1
 80032c8:	9300      	str	r3, [sp, #0]
 80032ca:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80032cc:	b969      	cbnz	r1, 80032ea <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80032ce:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80032d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80032d4:	2302      	movs	r3, #2
 80032d6:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80032d8:	4b11      	ldr	r3, [pc, #68]	; (8003320 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 80032da:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80032dc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80032e0:	a901      	add	r1, sp, #4
 80032e2:	f001 fb13 	bl	800490c <HAL_GPIO_Init>
}
 80032e6:	b006      	add	sp, #24
 80032e8:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 80032ea:	2901      	cmp	r1, #1
 80032ec:	d1fb      	bne.n	80032e6 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80032ee:	2302      	movs	r3, #2
 80032f0:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 80032f2:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80032f6:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80032f8:	4b09      	ldr	r3, [pc, #36]	; (8003320 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80032fa:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80032fc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003300:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003302:	a901      	add	r1, sp, #4
 8003304:	f001 fb02 	bl	800490c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003308:	4622      	mov	r2, r4
 800330a:	210f      	movs	r1, #15
 800330c:	2006      	movs	r0, #6
 800330e:	f000 fcc7 	bl	8003ca0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8003312:	2006      	movs	r0, #6
 8003314:	f000 fcf6 	bl	8003d04 <HAL_NVIC_EnableIRQ>
}
 8003318:	e7e5      	b.n	80032e6 <BSP_PB_Init+0x36>
 800331a:	bf00      	nop
 800331c:	40023800 	.word	0x40023800
 8003320:	20000048 	.word	0x20000048

08003324 <BSP_PB_GetState>:
{
 8003324:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8003326:	4b03      	ldr	r3, [pc, #12]	; (8003334 <BSP_PB_GetState+0x10>)
 8003328:	2101      	movs	r1, #1
 800332a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800332e:	f001 fc75 	bl	8004c1c <HAL_GPIO_ReadPin>
}
 8003332:	bd08      	pop	{r3, pc}
 8003334:	20000048 	.word	0x20000048

08003338 <TS_IO_Init>:
 8003338:	f7ff bf50 	b.w	80031dc <I2C1_Init>

0800333c <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800333c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800333e:	2301      	movs	r3, #1
 8003340:	f88d 2017 	strb.w	r2, [sp, #23]
 8003344:	2264      	movs	r2, #100	; 0x64
 8003346:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800334a:	f10d 0217 	add.w	r2, sp, #23
 800334e:	9200      	str	r2, [sp, #0]
 8003350:	460a      	mov	r2, r1
 8003352:	4601      	mov	r1, r0
 8003354:	4805      	ldr	r0, [pc, #20]	; (800336c <TS_IO_Write+0x30>)
 8003356:	f001 ff13 	bl	8005180 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800335a:	b120      	cbz	r0, 8003366 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 800335c:	4803      	ldr	r0, [pc, #12]	; (800336c <TS_IO_Write+0x30>)
 800335e:	f001 fef5 	bl	800514c <HAL_I2C_DeInit>
  I2C1_Init();
 8003362:	f7ff ff3b 	bl	80031dc <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8003366:	b007      	add	sp, #28
 8003368:	f85d fb04 	ldr.w	pc, [sp], #4
 800336c:	200015f4 	.word	0x200015f4

08003370 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003370:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8003372:	2300      	movs	r3, #0
{
 8003374:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8003376:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800337a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800337e:	2301      	movs	r3, #1
 8003380:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003384:	f10d 0117 	add.w	r1, sp, #23
 8003388:	9100      	str	r1, [sp, #0]
 800338a:	4601      	mov	r1, r0
 800338c:	4806      	ldr	r0, [pc, #24]	; (80033a8 <TS_IO_Read+0x38>)
 800338e:	f001 ff87 	bl	80052a0 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003392:	b120      	cbz	r0, 800339e <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003394:	4804      	ldr	r0, [pc, #16]	; (80033a8 <TS_IO_Read+0x38>)
 8003396:	f001 fed9 	bl	800514c <HAL_I2C_DeInit>
  I2C1_Init();
 800339a:	f7ff ff1f 	bl	80031dc <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 800339e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80033a2:	b007      	add	sp, #28
 80033a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80033a8:	200015f4 	.word	0x200015f4

080033ac <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80033ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80033ae:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80033b2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80033b6:	9200      	str	r2, [sp, #0]
 80033b8:	2301      	movs	r3, #1
 80033ba:	460a      	mov	r2, r1
 80033bc:	4601      	mov	r1, r0
 80033be:	4806      	ldr	r0, [pc, #24]	; (80033d8 <TS_IO_ReadMultiple+0x2c>)
 80033c0:	f001 ff6e 	bl	80052a0 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80033c4:	4604      	mov	r4, r0
 80033c6:	b120      	cbz	r0, 80033d2 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 80033c8:	4803      	ldr	r0, [pc, #12]	; (80033d8 <TS_IO_ReadMultiple+0x2c>)
 80033ca:	f001 febf 	bl	800514c <HAL_I2C_DeInit>
  I2C1_Init();
 80033ce:	f7ff ff05 	bl	80031dc <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 80033d2:	b2a0      	uxth	r0, r4
 80033d4:	b004      	add	sp, #16
 80033d6:	bd10      	pop	{r4, pc}
 80033d8:	200015f4 	.word	0x200015f4

080033dc <OTM8009A_IO_Delay>:
 80033dc:	f000 bc3a 	b.w	8003c54 <HAL_Delay>

080033e0 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80033e0:	b500      	push	{lr}
 80033e2:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80033e4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80033e8:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80033ea:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80033ee:	2205      	movs	r2, #5
 80033f0:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80033f2:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80033f4:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80033f6:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 80033f8:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80033fc:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003400:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003404:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003406:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003408:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800340a:	2210      	movs	r2, #16
 800340c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800340e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003412:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003414:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003416:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003418:	a906      	add	r1, sp, #24
 800341a:	466a      	mov	r2, sp
 800341c:	4804      	ldr	r0, [pc, #16]	; (8003430 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800341e:	f002 fbc0 	bl	8005ba2 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003422:	3800      	subs	r0, #0
 8003424:	bf18      	it	ne
 8003426:	2001      	movne	r0, #1
 8003428:	b015      	add	sp, #84	; 0x54
 800342a:	f85d fb04 	ldr.w	pc, [sp], #4
 800342e:	bf00      	nop
 8003430:	20001648 	.word	0x20001648

08003434 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003434:	b500      	push	{lr}
 8003436:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003438:	f44f 7380 	mov.w	r3, #256	; 0x100
 800343c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800343e:	2306      	movs	r3, #6
 8003440:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003442:	4817      	ldr	r0, [pc, #92]	; (80034a0 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003444:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003446:	f241 3288 	movw	r2, #5000	; 0x1388
 800344a:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800344c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003450:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003454:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003456:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003458:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800345a:	f002 fb5e 	bl	8005b1a <HAL_QSPI_Command>
 800345e:	b9e0      	cbnz	r0, 800349a <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003460:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8003462:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003466:	2201      	movs	r2, #1
 8003468:	2310      	movs	r3, #16
 800346a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800346e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003472:	2305      	movs	r3, #5
 8003474:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003478:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800347c:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800347e:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003480:	4807      	ldr	r0, [pc, #28]	; (80034a0 <QSPI_WriteEnable.constprop.0+0x6c>)
 8003482:	f241 3388 	movw	r3, #5000	; 0x1388
 8003486:	466a      	mov	r2, sp
 8003488:	a906      	add	r1, sp, #24
 800348a:	f002 fb8a 	bl	8005ba2 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800348e:	3800      	subs	r0, #0
 8003490:	bf18      	it	ne
 8003492:	2001      	movne	r0, #1
}
 8003494:	b015      	add	sp, #84	; 0x54
 8003496:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800349a:	2001      	movs	r0, #1
 800349c:	e7fa      	b.n	8003494 <QSPI_WriteEnable.constprop.0+0x60>
 800349e:	bf00      	nop
 80034a0:	20001648 	.word	0x20001648

080034a4 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80034a4:	b500      	push	{lr}
 80034a6:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80034a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80034ac:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80034ae:	23eb      	movs	r3, #235	; 0xeb
 80034b0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80034b2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80034b6:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80034b8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80034bc:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80034be:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80034c2:	2300      	movs	r3, #0
 80034c4:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80034c8:	220a      	movs	r2, #10
 80034ca:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80034cc:	a902      	add	r1, sp, #8
 80034ce:	466a      	mov	r2, sp
 80034d0:	4806      	ldr	r0, [pc, #24]	; (80034ec <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80034d2:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80034d4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 80034d8:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80034da:	f002 fbb2 	bl	8005c42 <HAL_QSPI_MemoryMapped>
}
 80034de:	3800      	subs	r0, #0
 80034e0:	bf18      	it	ne
 80034e2:	2001      	movne	r0, #1
 80034e4:	b011      	add	sp, #68	; 0x44
 80034e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80034ea:	bf00      	nop
 80034ec:	20001648 	.word	0x20001648

080034f0 <BSP_QSPI_MspInit>:
{
 80034f0:	b570      	push	{r4, r5, r6, lr}
 80034f2:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 80034f4:	4b2c      	ldr	r3, [pc, #176]	; (80035a8 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80034f6:	482d      	ldr	r0, [pc, #180]	; (80035ac <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 80034f8:	2400      	movs	r4, #0
 80034fa:	9400      	str	r4, [sp, #0]
 80034fc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80034fe:	f042 0202 	orr.w	r2, r2, #2
 8003502:	639a      	str	r2, [r3, #56]	; 0x38
 8003504:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003506:	f002 0202 	and.w	r2, r2, #2
 800350a:	9200      	str	r2, [sp, #0]
 800350c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800350e:	699a      	ldr	r2, [r3, #24]
 8003510:	f042 0202 	orr.w	r2, r2, #2
 8003514:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003516:	699a      	ldr	r2, [r3, #24]
 8003518:	f022 0202 	bic.w	r2, r2, #2
 800351c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800351e:	9401      	str	r4, [sp, #4]
 8003520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003522:	f042 0202 	orr.w	r2, r2, #2
 8003526:	631a      	str	r2, [r3, #48]	; 0x30
 8003528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800352a:	f002 0202 	and.w	r2, r2, #2
 800352e:	9201      	str	r2, [sp, #4]
 8003530:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003532:	9402      	str	r4, [sp, #8]
 8003534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003536:	f042 0220 	orr.w	r2, r2, #32
 800353a:	631a      	str	r2, [r3, #48]	; 0x30
 800353c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800353e:	f003 0320 	and.w	r3, r3, #32
 8003542:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003544:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003546:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003548:	2302      	movs	r3, #2
 800354a:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800354e:	2101      	movs	r1, #1
 8003550:	2303      	movs	r3, #3
 8003552:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003556:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003558:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800355a:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800355c:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800355e:	f001 f9d5 	bl	800490c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003562:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003566:	a903      	add	r1, sp, #12
 8003568:	4811      	ldr	r0, [pc, #68]	; (80035b0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800356a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800356c:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800356e:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003570:	f001 f9cc 	bl	800490c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003574:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003578:	a903      	add	r1, sp, #12
 800357a:	480d      	ldr	r0, [pc, #52]	; (80035b0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800357c:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800357e:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003580:	f001 f9c4 	bl	800490c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003584:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003586:	a903      	add	r1, sp, #12
 8003588:	4809      	ldr	r0, [pc, #36]	; (80035b0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800358a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800358c:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800358e:	f001 f9bd 	bl	800490c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003592:	4622      	mov	r2, r4
 8003594:	210f      	movs	r1, #15
 8003596:	205b      	movs	r0, #91	; 0x5b
 8003598:	f000 fb82 	bl	8003ca0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800359c:	205b      	movs	r0, #91	; 0x5b
 800359e:	f000 fbb1 	bl	8003d04 <HAL_NVIC_EnableIRQ>
}
 80035a2:	b008      	add	sp, #32
 80035a4:	bd70      	pop	{r4, r5, r6, pc}
 80035a6:	bf00      	nop
 80035a8:	40023800 	.word	0x40023800
 80035ac:	40020400 	.word	0x40020400
 80035b0:	40021400 	.word	0x40021400

080035b4 <BSP_QSPI_Init>:
{
 80035b4:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80035b6:	4c48      	ldr	r4, [pc, #288]	; (80036d8 <BSP_QSPI_Init+0x124>)
 80035b8:	4b48      	ldr	r3, [pc, #288]	; (80036dc <BSP_QSPI_Init+0x128>)
 80035ba:	6023      	str	r3, [r4, #0]
{
 80035bc:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80035be:	4620      	mov	r0, r4
 80035c0:	f002 fa98 	bl	8005af4 <HAL_QSPI_DeInit>
 80035c4:	4605      	mov	r5, r0
 80035c6:	b110      	cbz	r0, 80035ce <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 80035c8:	2001      	movs	r0, #1
}
 80035ca:	b011      	add	sp, #68	; 0x44
 80035cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 80035ce:	4601      	mov	r1, r0
 80035d0:	4620      	mov	r0, r4
 80035d2:	f7ff ff8d 	bl	80034f0 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 80035d6:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80035d8:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 80035da:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80035de:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80035e0:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 80035e4:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 80035e8:	fab3 f383 	clz	r3, r3
 80035ec:	3b01      	subs	r3, #1
 80035ee:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80035f0:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80035f2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80035f6:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 80035fa:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80035fe:	f002 fa25 	bl	8005a4c <HAL_QSPI_Init>
 8003602:	2800      	cmp	r0, #0
 8003604:	d1e0      	bne.n	80035c8 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003606:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800360a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800360e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003612:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003614:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003616:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003618:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800361a:	f241 3288 	movw	r2, #5000	; 0x1388
 800361e:	a902      	add	r1, sp, #8
 8003620:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003622:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003624:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003626:	f002 fa78 	bl	8005b1a <HAL_QSPI_Command>
 800362a:	b108      	cbz	r0, 8003630 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800362c:	2004      	movs	r0, #4
 800362e:	e7cc      	b.n	80035ca <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003630:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003632:	f241 3288 	movw	r2, #5000	; 0x1388
 8003636:	a902      	add	r1, sp, #8
 8003638:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800363a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800363c:	f002 fa6d 	bl	8005b1a <HAL_QSPI_Command>
 8003640:	2800      	cmp	r0, #0
 8003642:	d1f3      	bne.n	800362c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003644:	f241 3088 	movw	r0, #5000	; 0x1388
 8003648:	f7ff feca 	bl	80033e0 <QSPI_AutoPollingMemReady.constprop.0>
 800364c:	2800      	cmp	r0, #0
 800364e:	d1ed      	bne.n	800362c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003650:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003654:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003658:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800365c:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800365e:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003660:	f241 3288 	movw	r2, #5000	; 0x1388
 8003664:	a902      	add	r1, sp, #8
 8003666:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003668:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800366a:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800366c:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800366e:	f002 fa54 	bl	8005b1a <HAL_QSPI_Command>
 8003672:	2800      	cmp	r0, #0
 8003674:	d1da      	bne.n	800362c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003676:	f241 3288 	movw	r2, #5000	; 0x1388
 800367a:	f10d 0107 	add.w	r1, sp, #7
 800367e:	4620      	mov	r0, r4
 8003680:	f002 fbc4 	bl	8005e0c <HAL_QSPI_Receive>
 8003684:	2800      	cmp	r0, #0
 8003686:	d1d1      	bne.n	800362c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003688:	f7ff fed4 	bl	8003434 <QSPI_WriteEnable.constprop.0>
 800368c:	2800      	cmp	r0, #0
 800368e:	d1cd      	bne.n	800362c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003690:	2381      	movs	r3, #129	; 0x81
 8003692:	9302      	str	r3, [sp, #8]
 8003694:	22f0      	movs	r2, #240	; 0xf0
 8003696:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800369a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800369e:	210a      	movs	r1, #10
 80036a0:	fab2 f282 	clz	r2, r2
 80036a4:	fa01 f202 	lsl.w	r2, r1, r2
 80036a8:	f003 030f 	and.w	r3, r3, #15
 80036ac:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036ae:	a902      	add	r1, sp, #8
 80036b0:	f241 3288 	movw	r2, #5000	; 0x1388
 80036b4:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80036b6:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036ba:	f002 fa2e 	bl	8005b1a <HAL_QSPI_Command>
 80036be:	2800      	cmp	r0, #0
 80036c0:	d1b4      	bne.n	800362c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80036c6:	f10d 0107 	add.w	r1, sp, #7
 80036ca:	4620      	mov	r0, r4
 80036cc:	f002 fb42 	bl	8005d54 <HAL_QSPI_Transmit>
 80036d0:	2800      	cmp	r0, #0
 80036d2:	f43f af7a 	beq.w	80035ca <BSP_QSPI_Init+0x16>
 80036d6:	e7a9      	b.n	800362c <BSP_QSPI_Init+0x78>
 80036d8:	20001648 	.word	0x20001648
 80036dc:	a0001000 	.word	0xa0001000

080036e0 <BSP_QSPI_MspDeInit>:
{
 80036e0:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 80036e2:	205b      	movs	r0, #91	; 0x5b
 80036e4:	f000 fb1c 	bl	8003d20 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 80036e8:	4814      	ldr	r0, [pc, #80]	; (800373c <BSP_QSPI_MspDeInit+0x5c>)
 80036ea:	2140      	movs	r1, #64	; 0x40
 80036ec:	f001 f9f4 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 80036f0:	4813      	ldr	r0, [pc, #76]	; (8003740 <BSP_QSPI_MspDeInit+0x60>)
 80036f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80036f6:	f001 f9ef 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 80036fa:	4811      	ldr	r0, [pc, #68]	; (8003740 <BSP_QSPI_MspDeInit+0x60>)
 80036fc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003700:	f001 f9ea 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003704:	480e      	ldr	r0, [pc, #56]	; (8003740 <BSP_QSPI_MspDeInit+0x60>)
 8003706:	f44f 7100 	mov.w	r1, #512	; 0x200
 800370a:	f001 f9e5 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800370e:	480c      	ldr	r0, [pc, #48]	; (8003740 <BSP_QSPI_MspDeInit+0x60>)
 8003710:	2180      	movs	r1, #128	; 0x80
 8003712:	f001 f9e1 	bl	8004ad8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003716:	480a      	ldr	r0, [pc, #40]	; (8003740 <BSP_QSPI_MspDeInit+0x60>)
 8003718:	2140      	movs	r1, #64	; 0x40
 800371a:	f001 f9dd 	bl	8004ad8 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800371e:	4b09      	ldr	r3, [pc, #36]	; (8003744 <BSP_QSPI_MspDeInit+0x64>)
 8003720:	699a      	ldr	r2, [r3, #24]
 8003722:	f042 0202 	orr.w	r2, r2, #2
 8003726:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003728:	699a      	ldr	r2, [r3, #24]
 800372a:	f022 0202 	bic.w	r2, r2, #2
 800372e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8003730:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003732:	f022 0202 	bic.w	r2, r2, #2
 8003736:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003738:	bd08      	pop	{r3, pc}
 800373a:	bf00      	nop
 800373c:	40020400 	.word	0x40020400
 8003740:	40021400 	.word	0x40021400
 8003744:	40023800 	.word	0x40023800

08003748 <BSP_QSPI_DeInit>:
{
 8003748:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800374a:	4d08      	ldr	r5, [pc, #32]	; (800376c <BSP_QSPI_DeInit+0x24>)
 800374c:	4b08      	ldr	r3, [pc, #32]	; (8003770 <BSP_QSPI_DeInit+0x28>)
 800374e:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003750:	4628      	mov	r0, r5
 8003752:	f002 f9cf 	bl	8005af4 <HAL_QSPI_DeInit>
 8003756:	4604      	mov	r4, r0
 8003758:	b928      	cbnz	r0, 8003766 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800375a:	4601      	mov	r1, r0
 800375c:	4628      	mov	r0, r5
 800375e:	f7ff ffbf 	bl	80036e0 <BSP_QSPI_MspDeInit>
}
 8003762:	4620      	mov	r0, r4
 8003764:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8003766:	2401      	movs	r4, #1
 8003768:	e7fb      	b.n	8003762 <BSP_QSPI_DeInit+0x1a>
 800376a:	bf00      	nop
 800376c:	20001648 	.word	0x20001648
 8003770:	a0001000 	.word	0xa0001000

08003774 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003774:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003778:	4c21      	ldr	r4, [pc, #132]	; (8003800 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800377a:	4d22      	ldr	r5, [pc, #136]	; (8003804 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800377c:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800377e:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003782:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003784:	4621      	mov	r1, r4
{
 8003786:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003788:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800378c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800378e:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003792:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8003796:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800379a:	f002 ffdb 	bl	8006754 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800379e:	4630      	mov	r0, r6
 80037a0:	f000 fa58 	bl	8003c54 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80037a4:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037a6:	4621      	mov	r1, r4
 80037a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80037ac:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80037ae:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80037b2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037b6:	f002 ffcd 	bl	8006754 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80037ba:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80037bc:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037c0:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80037c2:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80037c8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 80037ca:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037ce:	f002 ffc1 	bl	8006754 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 80037d2:	f44f 730c 	mov.w	r3, #560	; 0x230
 80037d6:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80037d8:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80037da:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037de:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 80037e0:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 80037e2:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80037e8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 80037ea:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80037ec:	f002 ffb2 	bl	8006754 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80037f0:	4649      	mov	r1, r9
 80037f2:	4628      	mov	r0, r5
}
 80037f4:	b003      	add	sp, #12
 80037f6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80037fa:	f002 bfc9 	b.w	8006790 <HAL_SDRAM_ProgramRefreshRate>
 80037fe:	bf00      	nop
 8003800:	20001694 	.word	0x20001694
 8003804:	20001780 	.word	0x20001780

08003808 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003808:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800380a:	4606      	mov	r6, r0
{
 800380c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800380e:	2800      	cmp	r0, #0
 8003810:	f000 80bd 	beq.w	800398e <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003814:	4b5f      	ldr	r3, [pc, #380]	; (8003994 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003816:	4860      	ldr	r0, [pc, #384]	; (8003998 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003818:	4c60      	ldr	r4, [pc, #384]	; (800399c <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800381a:	2500      	movs	r5, #0
 800381c:	9500      	str	r5, [sp, #0]
 800381e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003820:	f042 0201 	orr.w	r2, r2, #1
 8003824:	639a      	str	r2, [r3, #56]	; 0x38
 8003826:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003828:	f002 0201 	and.w	r2, r2, #1
 800382c:	9200      	str	r2, [sp, #0]
 800382e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8003830:	9501      	str	r5, [sp, #4]
 8003832:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003834:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003838:	631a      	str	r2, [r3, #48]	; 0x30
 800383a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800383c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8003840:	9201      	str	r2, [sp, #4]
 8003842:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003844:	9502      	str	r5, [sp, #8]
 8003846:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003848:	f042 0204 	orr.w	r2, r2, #4
 800384c:	631a      	str	r2, [r3, #48]	; 0x30
 800384e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003850:	f002 0204 	and.w	r2, r2, #4
 8003854:	9202      	str	r2, [sp, #8]
 8003856:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003858:	9503      	str	r5, [sp, #12]
 800385a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800385c:	f042 0208 	orr.w	r2, r2, #8
 8003860:	631a      	str	r2, [r3, #48]	; 0x30
 8003862:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003864:	f002 0208 	and.w	r2, r2, #8
 8003868:	9203      	str	r2, [sp, #12]
 800386a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800386c:	9504      	str	r5, [sp, #16]
 800386e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003870:	f042 0210 	orr.w	r2, r2, #16
 8003874:	631a      	str	r2, [r3, #48]	; 0x30
 8003876:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003878:	f002 0210 	and.w	r2, r2, #16
 800387c:	9204      	str	r2, [sp, #16]
 800387e:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003880:	9505      	str	r5, [sp, #20]
 8003882:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003884:	f042 0220 	orr.w	r2, r2, #32
 8003888:	631a      	str	r2, [r3, #48]	; 0x30
 800388a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800388c:	f002 0220 	and.w	r2, r2, #32
 8003890:	9205      	str	r2, [sp, #20]
 8003892:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003894:	9506      	str	r5, [sp, #24]
 8003896:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003898:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800389c:	631a      	str	r2, [r3, #48]	; 0x30
 800389e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038a0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80038a4:	9206      	str	r2, [sp, #24]
 80038a6:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80038a8:	9507      	str	r5, [sp, #28]
 80038aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038ac:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80038b0:	631a      	str	r2, [r3, #48]	; 0x30
 80038b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038b4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80038b8:	9207      	str	r2, [sp, #28]
 80038ba:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80038bc:	9508      	str	r5, [sp, #32]
 80038be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80038c4:	631a      	str	r2, [r3, #48]	; 0x30
 80038c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038cc:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80038ce:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80038d0:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 80038d2:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80038d4:	2301      	movs	r3, #1
 80038d6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80038da:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80038dc:	220c      	movs	r2, #12
 80038de:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 80038e0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80038e2:	f001 f813 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80038e6:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80038ea:	482d      	ldr	r0, [pc, #180]	; (80039a0 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80038ec:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80038ee:	a909      	add	r1, sp, #36	; 0x24
 80038f0:	f001 f80c 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80038f4:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80038f8:	482a      	ldr	r0, [pc, #168]	; (80039a4 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80038fa:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80038fc:	a909      	add	r1, sp, #36	; 0x24
 80038fe:	f001 f805 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003902:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003906:	4828      	ldr	r0, [pc, #160]	; (80039a8 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003908:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800390a:	a909      	add	r1, sp, #36	; 0x24
 800390c:	f000 fffe 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003910:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003914:	4825      	ldr	r0, [pc, #148]	; (80039ac <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003916:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003918:	a909      	add	r1, sp, #36	; 0x24
 800391a:	f000 fff7 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800391e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003922:	4823      	ldr	r0, [pc, #140]	; (80039b0 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003924:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003926:	a909      	add	r1, sp, #36	; 0x24
 8003928:	f000 fff0 	bl	800490c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800392c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003930:	4820      	ldr	r0, [pc, #128]	; (80039b4 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003932:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003934:	a909      	add	r1, sp, #36	; 0x24
 8003936:	f000 ffe9 	bl	800490c <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 800393a:	2280      	movs	r2, #128	; 0x80
 800393c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003940:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003944:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003948:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800394c:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003950:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003954:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003958:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 800395c:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003960:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8003962:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003966:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003968:	4b13      	ldr	r3, [pc, #76]	; (80039b8 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800396a:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 800396c:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800396e:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003970:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003972:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003974:	f000 fa8e 	bl	8003e94 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003978:	4620      	mov	r0, r4
 800397a:	f000 fa0b 	bl	8003d94 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800397e:	2038      	movs	r0, #56	; 0x38
 8003980:	462a      	mov	r2, r5
 8003982:	2105      	movs	r1, #5
 8003984:	f000 f98c 	bl	8003ca0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003988:	2038      	movs	r0, #56	; 0x38
 800398a:	f000 f9bb 	bl	8003d04 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800398e:	b00e      	add	sp, #56	; 0x38
 8003990:	bd70      	pop	{r4, r5, r6, pc}
 8003992:	bf00      	nop
 8003994:	40023800 	.word	0x40023800
 8003998:	40020800 	.word	0x40020800
 800399c:	20001720 	.word	0x20001720
 80039a0:	40020c00 	.word	0x40020c00
 80039a4:	40021000 	.word	0x40021000
 80039a8:	40021400 	.word	0x40021400
 80039ac:	40021800 	.word	0x40021800
 80039b0:	40021c00 	.word	0x40021c00
 80039b4:	40022000 	.word	0x40022000
 80039b8:	40026410 	.word	0x40026410

080039bc <BSP_SDRAM_Init>:
{
 80039bc:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80039be:	4c19      	ldr	r4, [pc, #100]	; (8003a24 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80039c0:	4d19      	ldr	r5, [pc, #100]	; (8003a28 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80039c2:	4b1a      	ldr	r3, [pc, #104]	; (8003a2c <BSP_SDRAM_Init+0x70>)
 80039c4:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 80039c6:	2107      	movs	r1, #7
 80039c8:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 80039ca:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 80039cc:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 80039d0:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 80039d4:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 80039d8:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 80039da:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80039dc:	2340      	movs	r3, #64	; 0x40
 80039de:	2220      	movs	r2, #32
 80039e0:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 80039e4:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80039e6:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80039ea:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 80039ee:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80039f2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80039f6:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80039fa:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80039fc:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003a00:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003a02:	f7ff ff01 	bl	8003808 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003a06:	4629      	mov	r1, r5
 8003a08:	4620      	mov	r0, r4
 8003a0a:	f002 fe75 	bl	80066f8 <HAL_SDRAM_Init>
 8003a0e:	4c08      	ldr	r4, [pc, #32]	; (8003a30 <BSP_SDRAM_Init+0x74>)
 8003a10:	3800      	subs	r0, #0
 8003a12:	bf18      	it	ne
 8003a14:	2001      	movne	r0, #1
 8003a16:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003a18:	f240 5069 	movw	r0, #1385	; 0x569
 8003a1c:	f7ff feaa 	bl	8003774 <BSP_SDRAM_Initialization_sequence>
}
 8003a20:	7820      	ldrb	r0, [r4, #0]
 8003a22:	bd38      	pop	{r3, r4, r5, pc}
 8003a24:	20001780 	.word	0x20001780
 8003a28:	200016a4 	.word	0x200016a4
 8003a2c:	a0000140 	.word	0xa0000140
 8003a30:	2000004d 	.word	0x2000004d

08003a34 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003a34:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003a36:	b148      	cbz	r0, 8003a4c <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003a38:	2038      	movs	r0, #56	; 0x38
 8003a3a:	f000 f971 	bl	8003d20 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003a3e:	4804      	ldr	r0, [pc, #16]	; (8003a50 <BSP_SDRAM_MspDeInit+0x1c>)
 8003a40:	4b04      	ldr	r3, [pc, #16]	; (8003a54 <BSP_SDRAM_MspDeInit+0x20>)
 8003a42:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003a44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003a48:	f000 ba24 	b.w	8003e94 <HAL_DMA_DeInit>
}
 8003a4c:	bd08      	pop	{r3, pc}
 8003a4e:	bf00      	nop
 8003a50:	200016c0 	.word	0x200016c0
 8003a54:	40026410 	.word	0x40026410

08003a58 <BSP_SDRAM_DeInit>:
{
 8003a58:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003a5a:	4c07      	ldr	r4, [pc, #28]	; (8003a78 <BSP_SDRAM_DeInit+0x20>)
 8003a5c:	4b07      	ldr	r3, [pc, #28]	; (8003a7c <BSP_SDRAM_DeInit+0x24>)
 8003a5e:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003a60:	4620      	mov	r0, r4
 8003a62:	f002 fe69 	bl	8006738 <HAL_SDRAM_DeInit>
 8003a66:	4d06      	ldr	r5, [pc, #24]	; (8003a80 <BSP_SDRAM_DeInit+0x28>)
 8003a68:	4601      	mov	r1, r0
 8003a6a:	b918      	cbnz	r0, 8003a74 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003a6c:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003a6e:	4620      	mov	r0, r4
 8003a70:	f7ff ffe0 	bl	8003a34 <BSP_SDRAM_MspDeInit>
}
 8003a74:	7828      	ldrb	r0, [r5, #0]
 8003a76:	bd38      	pop	{r3, r4, r5, pc}
 8003a78:	20001780 	.word	0x20001780
 8003a7c:	a0000140 	.word	0xa0000140
 8003a80:	2000004c 	.word	0x2000004c

08003a84 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003a88:	4d16      	ldr	r5, [pc, #88]	; (8003ae4 <BSP_TS_Init+0x60>)
 8003a8a:	4c17      	ldr	r4, [pc, #92]	; (8003ae8 <BSP_TS_Init+0x64>)
 8003a8c:	682b      	ldr	r3, [r5, #0]
{
 8003a8e:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003a90:	7820      	ldrb	r0, [r4, #0]
{
 8003a92:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003a94:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003a96:	686b      	ldr	r3, [r5, #4]
 8003a98:	2054      	movs	r0, #84	; 0x54
 8003a9a:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003a9c:	b2c0      	uxtb	r0, r0
 8003a9e:	2811      	cmp	r0, #17
 8003aa0:	d00a      	beq.n	8003ab8 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003aa2:	686b      	ldr	r3, [r5, #4]
 8003aa4:	2070      	movs	r0, #112	; 0x70
 8003aa6:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003aa8:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003aaa:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003aac:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003aae:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003ab0:	d004      	beq.n	8003abc <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003ab2:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003ab8:	2354      	movs	r3, #84	; 0x54
 8003aba:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003abc:	4b0b      	ldr	r3, [pc, #44]	; (8003aec <BSP_TS_Init+0x68>)
 8003abe:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003af0 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8003ac2:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003ac4:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003ac8:	42be      	cmp	r6, r7
 8003aca:	bf34      	ite	cc
 8003acc:	2601      	movcc	r6, #1
 8003ace:	260c      	movcs	r6, #12
 8003ad0:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003ad2:	68ab      	ldr	r3, [r5, #8]
 8003ad4:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003ad6:	f8d8 3000 	ldr.w	r3, [r8]
 8003ada:	7820      	ldrb	r0, [r4, #0]
 8003adc:	68db      	ldr	r3, [r3, #12]
 8003ade:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003ae0:	2000      	movs	r0, #0
 8003ae2:	e7e7      	b.n	8003ab4 <BSP_TS_Init+0x30>
 8003ae4:	20000020 	.word	0x20000020
 8003ae8:	200017b4 	.word	0x200017b4
 8003aec:	200017cc 	.word	0x200017cc
 8003af0:	200017c8 	.word	0x200017c8

08003af4 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003af8:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003bd8 <BSP_TS_GetState+0xe4>
 8003afc:	4a33      	ldr	r2, [pc, #204]	; (8003bcc <BSP_TS_GetState+0xd8>)
 8003afe:	f8db 3000 	ldr.w	r3, [fp]
{
 8003b02:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003b04:	691b      	ldr	r3, [r3, #16]
 8003b06:	7810      	ldrb	r0, [r2, #0]
{
 8003b08:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003b0a:	4798      	blx	r3
 8003b0c:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003b0e:	b158      	cbz	r0, 8003b28 <BSP_TS_GetState+0x34>
 8003b10:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003bdc <BSP_TS_GetState+0xe8>
 8003b14:	4f2e      	ldr	r7, [pc, #184]	; (8003bd0 <BSP_TS_GetState+0xdc>)
 8003b16:	f106 0a02 	add.w	sl, r6, #2
 8003b1a:	ad03      	add	r5, sp, #12
 8003b1c:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003b1e:	f04f 0900 	mov.w	r9, #0
 8003b22:	7833      	ldrb	r3, [r6, #0]
 8003b24:	454b      	cmp	r3, r9
 8003b26:	d803      	bhi.n	8003b30 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003b28:	2000      	movs	r0, #0
 8003b2a:	b005      	add	sp, #20
 8003b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003b30:	f8db 3000 	ldr.w	r3, [fp]
 8003b34:	4825      	ldr	r0, [pc, #148]	; (8003bcc <BSP_TS_GetState+0xd8>)
 8003b36:	695b      	ldr	r3, [r3, #20]
 8003b38:	7800      	ldrb	r0, [r0, #0]
 8003b3a:	9101      	str	r1, [sp, #4]
 8003b3c:	462a      	mov	r2, r5
 8003b3e:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003b40:	4b24      	ldr	r3, [pc, #144]	; (8003bd4 <BSP_TS_GetState+0xe0>)
 8003b42:	9901      	ldr	r1, [sp, #4]
 8003b44:	781b      	ldrb	r3, [r3, #0]
 8003b46:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003b4a:	bf1f      	itttt	ne
 8003b4c:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003b4e:	8828      	ldrhne	r0, [r5, #0]
 8003b50:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8003b52:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8003b54:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8003b56:	bf41      	itttt	mi
 8003b58:	880a      	ldrhmi	r2, [r1, #0]
 8003b5a:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003b5e:	3203      	addmi	r2, #3
 8003b60:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8003b62:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003b64:	bf48      	it	mi
 8003b66:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003b68:	f8d8 2000 	ldr.w	r2, [r8]
 8003b6c:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003b70:	bf42      	ittt	mi
 8003b72:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8003b76:	3301      	addmi	r3, #1
 8003b78:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003b7a:	b293      	uxth	r3, r2
 8003b7c:	4290      	cmp	r0, r2
 8003b7e:	bf8c      	ite	hi
 8003b80:	1ac3      	subhi	r3, r0, r3
 8003b82:	1a1b      	subls	r3, r3, r0
 8003b84:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b86:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003b8a:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b8c:	683b      	ldr	r3, [r7, #0]
 8003b8e:	b29c      	uxth	r4, r3
 8003b90:	429a      	cmp	r2, r3
 8003b92:	bf88      	it	hi
 8003b94:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003b96:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b98:	bf98      	it	ls
 8003b9a:	1aa4      	subls	r4, r4, r2
 8003b9c:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003b9e:	441c      	add	r4, r3
 8003ba0:	46c4      	mov	ip, r8
 8003ba2:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003ba4:	bfc8      	it	gt
 8003ba6:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003baa:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003bae:	bfc8      	it	gt
 8003bb0:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003bb2:	46be      	mov	lr, r7
 8003bb4:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8003bb8:	f8de 3000 	ldr.w	r3, [lr]
 8003bbc:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003bc0:	f108 0804 	add.w	r8, r8, #4
 8003bc4:	3704      	adds	r7, #4
 8003bc6:	f109 0901 	add.w	r9, r9, #1
 8003bca:	e7aa      	b.n	8003b22 <BSP_TS_GetState+0x2e>
 8003bcc:	200017b4 	.word	0x200017b4
 8003bd0:	200017c0 	.word	0x200017c0
 8003bd4:	200017cc 	.word	0x200017cc
 8003bd8:	200017c8 	.word	0x200017c8
 8003bdc:	200017b8 	.word	0x200017b8

08003be0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003be0:	4b05      	ldr	r3, [pc, #20]	; (8003bf8 <SystemInit+0x18>)
 8003be2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003be6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003bea:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003bee:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003bf2:	609a      	str	r2, [r3, #8]
#endif
}
 8003bf4:	4770      	bx	lr
 8003bf6:	bf00      	nop
 8003bf8:	e000ed00 	.word	0xe000ed00

08003bfc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003bfc:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003bfe:	4b0b      	ldr	r3, [pc, #44]	; (8003c2c <HAL_Init+0x30>)
 8003c00:	681a      	ldr	r2, [r3, #0]
 8003c02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003c06:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003c08:	681a      	ldr	r2, [r3, #0]
 8003c0a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003c0e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c10:	681a      	ldr	r2, [r3, #0]
 8003c12:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003c16:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c18:	2003      	movs	r0, #3
 8003c1a:	f000 f82f 	bl	8003c7c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003c1e:	2000      	movs	r0, #0
 8003c20:	f7fe f93a 	bl	8001e98 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003c24:	f7fd fedc 	bl	80019e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003c28:	2000      	movs	r0, #0
 8003c2a:	bd08      	pop	{r3, pc}
 8003c2c:	40023c00 	.word	0x40023c00

08003c30 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003c30:	4a03      	ldr	r2, [pc, #12]	; (8003c40 <HAL_IncTick+0x10>)
 8003c32:	4b04      	ldr	r3, [pc, #16]	; (8003c44 <HAL_IncTick+0x14>)
 8003c34:	6811      	ldr	r1, [r2, #0]
 8003c36:	781b      	ldrb	r3, [r3, #0]
 8003c38:	440b      	add	r3, r1
 8003c3a:	6013      	str	r3, [r2, #0]
}
 8003c3c:	4770      	bx	lr
 8003c3e:	bf00      	nop
 8003c40:	200017d0 	.word	0x200017d0
 8003c44:	20000054 	.word	0x20000054

08003c48 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003c48:	4b01      	ldr	r3, [pc, #4]	; (8003c50 <HAL_GetTick+0x8>)
 8003c4a:	6818      	ldr	r0, [r3, #0]
}
 8003c4c:	4770      	bx	lr
 8003c4e:	bf00      	nop
 8003c50:	200017d0 	.word	0x200017d0

08003c54 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003c54:	b538      	push	{r3, r4, r5, lr}
 8003c56:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003c58:	f7ff fff6 	bl	8003c48 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003c5c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003c5e:	bf1c      	itt	ne
 8003c60:	4b05      	ldrne	r3, [pc, #20]	; (8003c78 <HAL_Delay+0x24>)
 8003c62:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003c64:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003c66:	bf18      	it	ne
 8003c68:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003c6a:	f7ff ffed 	bl	8003c48 <HAL_GetTick>
 8003c6e:	1b43      	subs	r3, r0, r5
 8003c70:	42a3      	cmp	r3, r4
 8003c72:	d3fa      	bcc.n	8003c6a <HAL_Delay+0x16>
  {
  }
}
 8003c74:	bd38      	pop	{r3, r4, r5, pc}
 8003c76:	bf00      	nop
 8003c78:	20000054 	.word	0x20000054

08003c7c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003c7c:	4907      	ldr	r1, [pc, #28]	; (8003c9c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003c7e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c80:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c84:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c86:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c88:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c8c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003c8e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003c90:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003c94:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003c98:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003c9a:	4770      	bx	lr
 8003c9c:	e000ed00 	.word	0xe000ed00

08003ca0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003ca0:	4b16      	ldr	r3, [pc, #88]	; (8003cfc <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003ca2:	b530      	push	{r4, r5, lr}
 8003ca4:	68dc      	ldr	r4, [r3, #12]
 8003ca6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003caa:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003cae:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003cb0:	2d04      	cmp	r5, #4
 8003cb2:	bf28      	it	cs
 8003cb4:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003cb6:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cb8:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003cbc:	bf8c      	ite	hi
 8003cbe:	3c03      	subhi	r4, #3
 8003cc0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cc2:	fa03 f505 	lsl.w	r5, r3, r5
 8003cc6:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003cca:	40a3      	lsls	r3, r4
 8003ccc:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cd0:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003cd2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cd4:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003cd8:	bfac      	ite	ge
 8003cda:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003cde:	4a08      	ldrlt	r2, [pc, #32]	; (8003d00 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ce0:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ce4:	bfb8      	it	lt
 8003ce6:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003cea:	b2db      	uxtb	r3, r3
 8003cec:	bfaa      	itet	ge
 8003cee:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003cf2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003cf4:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003cf8:	bd30      	pop	{r4, r5, pc}
 8003cfa:	bf00      	nop
 8003cfc:	e000ed00 	.word	0xe000ed00
 8003d00:	e000ed14 	.word	0xe000ed14

08003d04 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003d04:	2800      	cmp	r0, #0
 8003d06:	db08      	blt.n	8003d1a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003d08:	0942      	lsrs	r2, r0, #5
 8003d0a:	2301      	movs	r3, #1
 8003d0c:	f000 001f 	and.w	r0, r0, #31
 8003d10:	fa03 f000 	lsl.w	r0, r3, r0
 8003d14:	4b01      	ldr	r3, [pc, #4]	; (8003d1c <HAL_NVIC_EnableIRQ+0x18>)
 8003d16:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003d1a:	4770      	bx	lr
 8003d1c:	e000e100 	.word	0xe000e100

08003d20 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003d20:	2800      	cmp	r0, #0
 8003d22:	db0d      	blt.n	8003d40 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003d24:	0943      	lsrs	r3, r0, #5
 8003d26:	2201      	movs	r2, #1
 8003d28:	f000 001f 	and.w	r0, r0, #31
 8003d2c:	fa02 f000 	lsl.w	r0, r2, r0
 8003d30:	3320      	adds	r3, #32
 8003d32:	4a04      	ldr	r2, [pc, #16]	; (8003d44 <HAL_NVIC_DisableIRQ+0x24>)
 8003d34:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003d38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003d3c:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003d40:	4770      	bx	lr
 8003d42:	bf00      	nop
 8003d44:	e000e100 	.word	0xe000e100

08003d48 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003d48:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003d4a:	4604      	mov	r4, r0
 8003d4c:	b150      	cbz	r0, 8003d64 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003d4e:	7943      	ldrb	r3, [r0, #5]
 8003d50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003d54:	b913      	cbnz	r3, 8003d5c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003d56:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003d58:	f7fd fe62 	bl	8001a20 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003d5c:	2301      	movs	r3, #1
 8003d5e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003d60:	2000      	movs	r0, #0
}
 8003d62:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003d64:	2001      	movs	r0, #1
 8003d66:	e7fc      	b.n	8003d62 <HAL_CRC_Init+0x1a>

08003d68 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003d68:	6803      	ldr	r3, [r0, #0]
{
 8003d6a:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003d6c:	4c08      	ldr	r4, [pc, #32]	; (8003d90 <DMA_CalcBaseAndBitshift+0x28>)
{
 8003d6e:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003d70:	b2d9      	uxtb	r1, r3
 8003d72:	3910      	subs	r1, #16
 8003d74:	2018      	movs	r0, #24
 8003d76:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003d7a:	5c20      	ldrb	r0, [r4, r0]
 8003d7c:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d7e:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003d82:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8003d86:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d88:	bf88      	it	hi
 8003d8a:	3004      	addhi	r0, #4
 8003d8c:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003d8e:	bd10      	pop	{r4, pc}
 8003d90:	0801dff9 	.word	0x0801dff9

08003d94 <HAL_DMA_Init>:
{
 8003d94:	b570      	push	{r4, r5, r6, lr}
 8003d96:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003d98:	f7ff ff56 	bl	8003c48 <HAL_GetTick>
 8003d9c:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003d9e:	2c00      	cmp	r4, #0
 8003da0:	d073      	beq.n	8003e8a <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003da2:	2302      	movs	r3, #2
 8003da4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003da8:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003daa:	2300      	movs	r3, #0
 8003dac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003db0:	6813      	ldr	r3, [r2, #0]
 8003db2:	f023 0301 	bic.w	r3, r3, #1
 8003db6:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003db8:	6821      	ldr	r1, [r4, #0]
 8003dba:	680b      	ldr	r3, [r1, #0]
 8003dbc:	07d8      	lsls	r0, r3, #31
 8003dbe:	d42f      	bmi.n	8003e20 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003dc0:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003dc2:	4d33      	ldr	r5, [pc, #204]	; (8003e90 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003dc4:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003dc6:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003dc8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003dcc:	4313      	orrs	r3, r2
 8003dce:	68e2      	ldr	r2, [r4, #12]
 8003dd0:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003dd2:	6922      	ldr	r2, [r4, #16]
 8003dd4:	4313      	orrs	r3, r2
 8003dd6:	6962      	ldr	r2, [r4, #20]
 8003dd8:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003dda:	69e2      	ldr	r2, [r4, #28]
 8003ddc:	4303      	orrs	r3, r0
 8003dde:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003de0:	6a22      	ldr	r2, [r4, #32]
 8003de2:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003de4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003de6:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003de8:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003dec:	bf02      	ittt	eq
 8003dee:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003df2:	4335      	orreq	r5, r6
 8003df4:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003df6:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003df8:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003dfa:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003dfc:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003e00:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e04:	d133      	bne.n	8003e6e <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003e06:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003e08:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003e0a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003e0c:	b37d      	cbz	r5, 8003e6e <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003e0e:	b990      	cbnz	r0, 8003e36 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003e10:	2a01      	cmp	r2, #1
 8003e12:	d021      	beq.n	8003e58 <HAL_DMA_Init+0xc4>
 8003e14:	f032 0202 	bics.w	r2, r2, #2
 8003e18:	d129      	bne.n	8003e6e <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003e1a:	01ea      	lsls	r2, r5, #7
 8003e1c:	d527      	bpl.n	8003e6e <HAL_DMA_Init+0xda>
 8003e1e:	e01e      	b.n	8003e5e <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003e20:	f7ff ff12 	bl	8003c48 <HAL_GetTick>
 8003e24:	1b40      	subs	r0, r0, r5
 8003e26:	2805      	cmp	r0, #5
 8003e28:	d9c6      	bls.n	8003db8 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003e2a:	2320      	movs	r3, #32
 8003e2c:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003e2e:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003e30:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003e34:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003e36:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003e3a:	d114      	bne.n	8003e66 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003e3c:	2a03      	cmp	r2, #3
 8003e3e:	d816      	bhi.n	8003e6e <HAL_DMA_Init+0xda>
 8003e40:	a001      	add	r0, pc, #4	; (adr r0, 8003e48 <HAL_DMA_Init+0xb4>)
 8003e42:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003e46:	bf00      	nop
 8003e48:	08003e5f 	.word	0x08003e5f
 8003e4c:	08003e1b 	.word	0x08003e1b
 8003e50:	08003e5f 	.word	0x08003e5f
 8003e54:	08003e59 	.word	0x08003e59
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003e58:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003e5c:	d107      	bne.n	8003e6e <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003e5e:	2340      	movs	r3, #64	; 0x40
 8003e60:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003e62:	2001      	movs	r0, #1
 8003e64:	e7e4      	b.n	8003e30 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003e66:	2a02      	cmp	r2, #2
 8003e68:	d9f9      	bls.n	8003e5e <HAL_DMA_Init+0xca>
 8003e6a:	2a03      	cmp	r2, #3
 8003e6c:	d0d5      	beq.n	8003e1a <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003e6e:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003e70:	4620      	mov	r0, r4
 8003e72:	f7ff ff79 	bl	8003d68 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003e76:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003e78:	233f      	movs	r3, #63	; 0x3f
 8003e7a:	4093      	lsls	r3, r2
 8003e7c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e7e:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003e80:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e82:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003e84:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003e88:	e7d4      	b.n	8003e34 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003e8a:	2001      	movs	r0, #1
 8003e8c:	e7d2      	b.n	8003e34 <HAL_DMA_Init+0xa0>
 8003e8e:	bf00      	nop
 8003e90:	f010803f 	.word	0xf010803f

08003e94 <HAL_DMA_DeInit>:
{
 8003e94:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003e96:	4605      	mov	r5, r0
 8003e98:	b320      	cbz	r0, 8003ee4 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003e9a:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003e9e:	2b02      	cmp	r3, #2
 8003ea0:	b2dc      	uxtb	r4, r3
 8003ea2:	d01d      	beq.n	8003ee0 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003ea4:	6803      	ldr	r3, [r0, #0]
 8003ea6:	681a      	ldr	r2, [r3, #0]
 8003ea8:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003eac:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003eae:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003eb0:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003eb2:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003eb4:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003eb6:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003eb8:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003eba:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003ebc:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003ebe:	f7ff ff53 	bl	8003d68 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003ec2:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003ec4:	233f      	movs	r3, #63	; 0x3f
 8003ec6:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003ec8:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003ecc:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003ed0:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003ed4:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003ed6:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003ed8:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003edc:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003ee4:	2401      	movs	r4, #1
 8003ee6:	e7fb      	b.n	8003ee0 <HAL_DMA_DeInit+0x4c>

08003ee8 <HAL_DMA_Abort>:
{
 8003ee8:	b570      	push	{r4, r5, r6, lr}
 8003eea:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003eec:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003eee:	f7ff feab 	bl	8003c48 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003ef2:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003ef6:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003ef8:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003efa:	d006      	beq.n	8003f0a <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003efc:	2380      	movs	r3, #128	; 0x80
 8003efe:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003f00:	2300      	movs	r3, #0
 8003f02:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003f06:	2001      	movs	r0, #1
}
 8003f08:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003f0a:	6823      	ldr	r3, [r4, #0]
 8003f0c:	681a      	ldr	r2, [r3, #0]
 8003f0e:	f022 0216 	bic.w	r2, r2, #22
 8003f12:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003f14:	695a      	ldr	r2, [r3, #20]
 8003f16:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003f1a:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003f1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003f1e:	b90a      	cbnz	r2, 8003f24 <HAL_DMA_Abort+0x3c>
 8003f20:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003f22:	b11a      	cbz	r2, 8003f2c <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	f022 0208 	bic.w	r2, r2, #8
 8003f2a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003f2c:	681a      	ldr	r2, [r3, #0]
 8003f2e:	f022 0201 	bic.w	r2, r2, #1
 8003f32:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003f34:	6823      	ldr	r3, [r4, #0]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	f013 0301 	ands.w	r3, r3, #1
 8003f3c:	d10a      	bne.n	8003f54 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003f3e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003f40:	223f      	movs	r2, #63	; 0x3f
 8003f42:	408a      	lsls	r2, r1
 8003f44:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003f46:	2201      	movs	r2, #1
 8003f48:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003f4c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003f50:	4618      	mov	r0, r3
 8003f52:	e7d9      	b.n	8003f08 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003f54:	f7ff fe78 	bl	8003c48 <HAL_GetTick>
 8003f58:	1b40      	subs	r0, r0, r5
 8003f5a:	2805      	cmp	r0, #5
 8003f5c:	d9ea      	bls.n	8003f34 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003f5e:	2320      	movs	r3, #32
 8003f60:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003f62:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003f64:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003f66:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003f6a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003f6e:	e7cb      	b.n	8003f08 <HAL_DMA_Abort+0x20>

08003f70 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003f70:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003f72:	4604      	mov	r4, r0
 8003f74:	b330      	cbz	r0, 8003fc4 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003f76:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003f7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003f7e:	b91b      	cbnz	r3, 8003f88 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003f80:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003f84:	f7fd fd64 	bl	8001a50 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003f88:	6822      	ldr	r2, [r4, #0]
 8003f8a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003f8c:	2302      	movs	r3, #2
 8003f8e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003f92:	6813      	ldr	r3, [r2, #0]
 8003f94:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003f98:	430b      	orrs	r3, r1
 8003f9a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003f9c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003f9e:	68a1      	ldr	r1, [r4, #8]
 8003fa0:	f023 0307 	bic.w	r3, r3, #7
 8003fa4:	430b      	orrs	r3, r1
 8003fa6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003fa8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003faa:	68e1      	ldr	r1, [r4, #12]
 8003fac:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003fb0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003fb4:	430b      	orrs	r3, r1
 8003fb6:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003fb8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003fba:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003fbc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003fbe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003fc2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003fc4:	2001      	movs	r0, #1
 8003fc6:	e7fc      	b.n	8003fc2 <HAL_DMA2D_Init+0x52>

08003fc8 <HAL_DMA2D_LineEventCallback>:
 8003fc8:	4770      	bx	lr

08003fca <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003fca:	4770      	bx	lr

08003fcc <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003fcc:	6803      	ldr	r3, [r0, #0]
{
 8003fce:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003fd0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003fd2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003fd4:	07f2      	lsls	r2, r6, #31
{
 8003fd6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003fd8:	d514      	bpl.n	8004004 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003fda:	05e9      	lsls	r1, r5, #23
 8003fdc:	d512      	bpl.n	8004004 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003fde:	681a      	ldr	r2, [r3, #0]
 8003fe0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003fe4:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003fe6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003fe8:	f042 0201 	orr.w	r2, r2, #1
 8003fec:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003fee:	2201      	movs	r2, #1
 8003ff0:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003ff2:	2304      	movs	r3, #4
 8003ff4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003ff8:	2300      	movs	r3, #0
 8003ffa:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003ffe:	6943      	ldr	r3, [r0, #20]
 8004000:	b103      	cbz	r3, 8004004 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004002:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004004:	06b2      	lsls	r2, r6, #26
 8004006:	d516      	bpl.n	8004036 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004008:	04ab      	lsls	r3, r5, #18
 800400a:	d514      	bpl.n	8004036 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800400c:	6823      	ldr	r3, [r4, #0]
 800400e:	681a      	ldr	r2, [r3, #0]
 8004010:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004014:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004016:	2220      	movs	r2, #32
 8004018:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800401a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800401c:	f043 0302 	orr.w	r3, r3, #2
 8004020:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004022:	2304      	movs	r3, #4
 8004024:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004028:	2300      	movs	r3, #0
 800402a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800402e:	6963      	ldr	r3, [r4, #20]
 8004030:	b10b      	cbz	r3, 8004036 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004032:	4620      	mov	r0, r4
 8004034:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004036:	0730      	lsls	r0, r6, #28
 8004038:	d516      	bpl.n	8004068 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800403a:	0529      	lsls	r1, r5, #20
 800403c:	d514      	bpl.n	8004068 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800403e:	6823      	ldr	r3, [r4, #0]
 8004040:	681a      	ldr	r2, [r3, #0]
 8004042:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004046:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004048:	2208      	movs	r2, #8
 800404a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800404c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800404e:	f043 0304 	orr.w	r3, r3, #4
 8004052:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004054:	2304      	movs	r3, #4
 8004056:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800405a:	2300      	movs	r3, #0
 800405c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004060:	6963      	ldr	r3, [r4, #20]
 8004062:	b10b      	cbz	r3, 8004068 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004064:	4620      	mov	r0, r4
 8004066:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004068:	0772      	lsls	r2, r6, #29
 800406a:	d50b      	bpl.n	8004084 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800406c:	056b      	lsls	r3, r5, #21
 800406e:	d509      	bpl.n	8004084 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004070:	6823      	ldr	r3, [r4, #0]
 8004072:	681a      	ldr	r2, [r3, #0]
 8004074:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004078:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800407a:	2204      	movs	r2, #4
 800407c:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800407e:	4620      	mov	r0, r4
 8004080:	f7ff ffa2 	bl	8003fc8 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004084:	07b0      	lsls	r0, r6, #30
 8004086:	d514      	bpl.n	80040b2 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004088:	05a9      	lsls	r1, r5, #22
 800408a:	d512      	bpl.n	80040b2 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800408c:	6823      	ldr	r3, [r4, #0]
 800408e:	681a      	ldr	r2, [r3, #0]
 8004090:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004094:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004096:	2202      	movs	r2, #2
 8004098:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800409a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800409c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800409e:	2301      	movs	r3, #1
 80040a0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80040a4:	2300      	movs	r3, #0
 80040a6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80040aa:	6923      	ldr	r3, [r4, #16]
 80040ac:	b10b      	cbz	r3, 80040b2 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80040ae:	4620      	mov	r0, r4
 80040b0:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80040b2:	06f2      	lsls	r2, r6, #27
 80040b4:	d513      	bpl.n	80040de <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80040b6:	04eb      	lsls	r3, r5, #19
 80040b8:	d511      	bpl.n	80040de <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80040ba:	6823      	ldr	r3, [r4, #0]
 80040bc:	681a      	ldr	r2, [r3, #0]
 80040be:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80040c2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80040c4:	2210      	movs	r2, #16
 80040c6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80040c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80040ca:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80040cc:	2301      	movs	r3, #1
 80040ce:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80040d2:	2300      	movs	r3, #0
 80040d4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80040d8:	4620      	mov	r0, r4
 80040da:	f7ff ff76 	bl	8003fca <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80040de:	bd70      	pop	{r4, r5, r6, pc}

080040e0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80040e0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80040e2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80040e6:	2b01      	cmp	r3, #1
 80040e8:	f04f 0302 	mov.w	r3, #2
 80040ec:	d02b      	beq.n	8004146 <HAL_DMA2D_ConfigLayer+0x66>
 80040ee:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80040f0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80040f4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80040f8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80040fc:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004100:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004102:	4f18      	ldr	r7, [pc, #96]	; (8004164 <HAL_DMA2D_ConfigLayer+0x84>)
 8004104:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004108:	3c09      	subs	r4, #9
 800410a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800410c:	bf9c      	itt	ls
 800410e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004112:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004114:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004118:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800411a:	bf88      	it	hi
 800411c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004120:	b999      	cbnz	r1, 800414a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004122:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004124:	4039      	ands	r1, r7
 8004126:	430a      	orrs	r2, r1
 8004128:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800412a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800412c:	6982      	ldr	r2, [r0, #24]
 800412e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004130:	d803      	bhi.n	800413a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004132:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004134:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004138:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800413a:	2301      	movs	r3, #1
 800413c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004140:	2300      	movs	r3, #0
 8004142:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004146:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004148:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800414a:	69d9      	ldr	r1, [r3, #28]
 800414c:	4039      	ands	r1, r7
 800414e:	430a      	orrs	r2, r1
 8004150:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004152:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004154:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004156:	6992      	ldr	r2, [r2, #24]
 8004158:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800415a:	bf9c      	itt	ls
 800415c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004160:	621d      	strls	r5, [r3, #32]
 8004162:	e7ea      	b.n	800413a <HAL_DMA2D_ConfigLayer+0x5a>
 8004164:	00fcfff0 	.word	0x00fcfff0

08004168 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8004168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800416c:	4607      	mov	r7, r0
 800416e:	460d      	mov	r5, r1
 8004170:	4614      	mov	r4, r2
 8004172:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004174:	f7ff fd68 	bl	8003c48 <HAL_GetTick>
 8004178:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800417a:	683b      	ldr	r3, [r7, #0]
 800417c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800417e:	07d2      	lsls	r2, r2, #31
 8004180:	d50a      	bpl.n	8004198 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004182:	9906      	ldr	r1, [sp, #24]
 8004184:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8004188:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800418c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004190:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8004192:	2000      	movs	r0, #0
}
 8004194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004198:	f7ff fd56 	bl	8003c48 <HAL_GetTick>
 800419c:	eba0 0008 	sub.w	r0, r0, r8
 80041a0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80041a4:	d9e9      	bls.n	800417a <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 80041a6:	2003      	movs	r0, #3
 80041a8:	e7f4      	b.n	8004194 <DSI_ShortWrite+0x2c>

080041aa <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80041aa:	7c03      	ldrb	r3, [r0, #16]
 80041ac:	2b01      	cmp	r3, #1
 80041ae:	d05d      	beq.n	800426c <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 80041b0:	6803      	ldr	r3, [r0, #0]
 80041b2:	2200      	movs	r2, #0
 80041b4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80041b8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80041bc:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80041be:	bf48      	it	mi
 80041c0:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 80041c4:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80041c6:	bf42      	ittt	mi
 80041c8:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 80041cc:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 80041d0:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 80041d4:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 80041d6:	bf42      	ittt	mi
 80041d8:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 80041dc:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 80041e0:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 80041e4:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 80041e6:	bf42      	ittt	mi
 80041e8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80041ec:	f042 0201 	orrmi.w	r2, r2, #1
 80041f0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80041f4:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80041f6:	bf42      	ittt	mi
 80041f8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80041fc:	f042 0202 	orrmi.w	r2, r2, #2
 8004200:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004204:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004206:	bf42      	ittt	mi
 8004208:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800420c:	f042 020c 	orrmi.w	r2, r2, #12
 8004210:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004214:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004216:	bf42      	ittt	mi
 8004218:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800421c:	f042 0210 	orrmi.w	r2, r2, #16
 8004220:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004224:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004226:	bf42      	ittt	mi
 8004228:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800422c:	f042 0220 	orrmi.w	r2, r2, #32
 8004230:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004234:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004236:	bf42      	ittt	mi
 8004238:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800423c:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004240:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004244:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004246:	bf42      	ittt	mi
 8004248:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800424c:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004250:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004254:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8004256:	bf42      	ittt	mi
 8004258:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800425c:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004260:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004264:	2300      	movs	r3, #0
 8004266:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004268:	4618      	mov	r0, r3
 800426a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800426c:	2002      	movs	r0, #2
}
 800426e:	4770      	bx	lr

08004270 <HAL_DSI_Init>:
{
 8004270:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004272:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004274:	4604      	mov	r4, r0
 8004276:	2800      	cmp	r0, #0
 8004278:	f000 80a9 	beq.w	80043ce <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800427c:	7c43      	ldrb	r3, [r0, #17]
 800427e:	b90b      	cbnz	r3, 8004284 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004280:	f7fd fc08 	bl	8001a94 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004284:	2303      	movs	r3, #3
 8004286:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8004288:	2300      	movs	r3, #0
 800428a:	9300      	str	r3, [sp, #0]
 800428c:	6823      	ldr	r3, [r4, #0]
 800428e:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8004292:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004296:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800429a:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800429e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80042a2:	9300      	str	r3, [sp, #0]
 80042a4:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80042a6:	f7ff fccf 	bl	8003c48 <HAL_GetTick>
 80042aa:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80042ac:	6822      	ldr	r2, [r4, #0]
 80042ae:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80042b2:	04d9      	lsls	r1, r3, #19
 80042b4:	d57a      	bpl.n	80043ac <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 80042b6:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80042ba:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80042be:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80042c2:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80042c6:	e9d5 0300 	ldrd	r0, r3, [r5]
 80042ca:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80042cc:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 80042d0:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80042d2:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80042d6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80042da:	430b      	orrs	r3, r1
 80042dc:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 80042e0:	2300      	movs	r3, #0
 80042e2:	9301      	str	r3, [sp, #4]
 80042e4:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80042e8:	f043 0301 	orr.w	r3, r3, #1
 80042ec:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80042f0:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80042f4:	f003 0301 	and.w	r3, r3, #1
 80042f8:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 80042fa:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 80042fc:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 80042fe:	f7ff fca9 	bl	8003c54 <HAL_Delay>
  tickstart = HAL_GetTick();
 8004302:	f7ff fca1 	bl	8003c48 <HAL_GetTick>
 8004306:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004308:	6823      	ldr	r3, [r4, #0]
 800430a:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800430e:	05d2      	lsls	r2, r2, #23
 8004310:	d556      	bpl.n	80043c0 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004312:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004316:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004318:	f042 0206 	orr.w	r2, r2, #6
 800431c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004320:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004324:	f022 0203 	bic.w	r2, r2, #3
 8004328:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800432c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004330:	430a      	orrs	r2, r1
 8004332:	f042 0201 	orr.w	r2, r2, #1
 8004336:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800433a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800433e:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004340:	f022 0203 	bic.w	r2, r2, #3
 8004344:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004348:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800434c:	430a      	orrs	r2, r1
 800434e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004352:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004354:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004356:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800435a:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800435c:	689a      	ldr	r2, [r3, #8]
 800435e:	430a      	orrs	r2, r1
 8004360:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004362:	686a      	ldr	r2, [r5, #4]
 8004364:	491b      	ldr	r1, [pc, #108]	; (80043d4 <HAL_DSI_Init+0x164>)
 8004366:	2a01      	cmp	r2, #1
 8004368:	bf38      	it	cc
 800436a:	2201      	movcc	r2, #1
 800436c:	434a      	muls	r2, r1
 800436e:	68a9      	ldr	r1, [r5, #8]
 8004370:	f001 0103 	and.w	r1, r1, #3
 8004374:	408a      	lsls	r2, r1
 8004376:	6829      	ldr	r1, [r5, #0]
 8004378:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800437c:	4341      	muls	r1, r0
 800437e:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004382:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8004386:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800438a:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800438e:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004392:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004394:	430a      	orrs	r2, r1
 8004396:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800439a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800439e:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80043a2:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80043a4:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80043a6:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 80043a8:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 80043aa:	e007      	b.n	80043bc <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80043ac:	f7ff fc4c 	bl	8003c48 <HAL_GetTick>
 80043b0:	1b80      	subs	r0, r0, r6
 80043b2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80043b6:	f67f af79 	bls.w	80042ac <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 80043ba:	2003      	movs	r0, #3
}
 80043bc:	b002      	add	sp, #8
 80043be:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80043c0:	f7ff fc42 	bl	8003c48 <HAL_GetTick>
 80043c4:	1b80      	subs	r0, r0, r6
 80043c6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80043ca:	d99d      	bls.n	8004308 <HAL_DSI_Init+0x98>
 80043cc:	e7f5      	b.n	80043ba <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 80043ce:	2001      	movs	r0, #1
 80043d0:	e7f4      	b.n	80043bc <HAL_DSI_Init+0x14c>
 80043d2:	bf00      	nop
 80043d4:	003d0900 	.word	0x003d0900

080043d8 <HAL_DSI_ErrorCallback>:
 80043d8:	4770      	bx	lr

080043da <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80043da:	6803      	ldr	r3, [r0, #0]
 80043dc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80043e0:	07d1      	lsls	r1, r2, #31
{
 80043e2:	b510      	push	{r4, lr}
 80043e4:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80043e6:	d508      	bpl.n	80043fa <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 80043e8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80043ec:	07d2      	lsls	r2, r2, #31
 80043ee:	d504      	bpl.n	80043fa <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80043f0:	2201      	movs	r2, #1
 80043f2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80043f6:	f7fc fba3 	bl	8000b40 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80043fa:	6823      	ldr	r3, [r4, #0]
 80043fc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004400:	0791      	lsls	r1, r2, #30
 8004402:	d509      	bpl.n	8004418 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004404:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004408:	0792      	lsls	r2, r2, #30
 800440a:	d505      	bpl.n	8004418 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800440c:	2202      	movs	r2, #2
 800440e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004412:	4620      	mov	r0, r4
 8004414:	f7fc fbc8 	bl	8000ba8 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004418:	69a3      	ldr	r3, [r4, #24]
 800441a:	2b00      	cmp	r3, #0
 800441c:	d04e      	beq.n	80044bc <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800441e:	6821      	ldr	r1, [r4, #0]
 8004420:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004424:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004428:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800442c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800442e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004432:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004434:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004436:	b119      	cbz	r1, 8004440 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004438:	6961      	ldr	r1, [r4, #20]
 800443a:	f041 0101 	orr.w	r1, r1, #1
 800443e:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004440:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004444:	bf1e      	ittt	ne
 8004446:	6962      	ldrne	r2, [r4, #20]
 8004448:	f042 0202 	orrne.w	r2, r2, #2
 800444c:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800444e:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004450:	bf42      	ittt	mi
 8004452:	6962      	ldrmi	r2, [r4, #20]
 8004454:	f042 0204 	orrmi.w	r2, r2, #4
 8004458:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800445a:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800445c:	bf42      	ittt	mi
 800445e:	6962      	ldrmi	r2, [r4, #20]
 8004460:	f042 0208 	orrmi.w	r2, r2, #8
 8004464:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8004466:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800446a:	bf1e      	ittt	ne
 800446c:	6962      	ldrne	r2, [r4, #20]
 800446e:	f042 0210 	orrne.w	r2, r2, #16
 8004472:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004474:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8004476:	bf42      	ittt	mi
 8004478:	6962      	ldrmi	r2, [r4, #20]
 800447a:	f042 0220 	orrmi.w	r2, r2, #32
 800447e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8004480:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8004482:	bf42      	ittt	mi
 8004484:	6962      	ldrmi	r2, [r4, #20]
 8004486:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800448a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800448c:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800448e:	bf42      	ittt	mi
 8004490:	6962      	ldrmi	r2, [r4, #20]
 8004492:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004496:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8004498:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800449a:	bf42      	ittt	mi
 800449c:	6962      	ldrmi	r2, [r4, #20]
 800449e:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 80044a2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80044a4:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 80044a8:	bf1e      	ittt	ne
 80044aa:	6963      	ldrne	r3, [r4, #20]
 80044ac:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 80044b0:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 80044b2:	6963      	ldr	r3, [r4, #20]
 80044b4:	b113      	cbz	r3, 80044bc <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 80044b6:	4620      	mov	r0, r4
 80044b8:	f7ff ff8e 	bl	80043d8 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 80044bc:	bd10      	pop	{r4, pc}

080044be <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80044be:	7c03      	ldrb	r3, [r0, #16]
 80044c0:	2b01      	cmp	r3, #1
 80044c2:	d00b      	beq.n	80044dc <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 80044c4:	6803      	ldr	r3, [r0, #0]
 80044c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80044c8:	f022 0203 	bic.w	r2, r2, #3
 80044cc:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 80044ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80044d0:	4311      	orrs	r1, r2
 80044d2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80044d4:	2300      	movs	r3, #0
 80044d6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80044d8:	4618      	mov	r0, r3
 80044da:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80044dc:	2002      	movs	r0, #2
}
 80044de:	4770      	bx	lr

080044e0 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 80044e0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80044e2:	7c03      	ldrb	r3, [r0, #16]
 80044e4:	2b01      	cmp	r3, #1
 80044e6:	d06a      	beq.n	80045be <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80044e8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80044ea:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80044ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044ee:	f042 0201 	orr.w	r2, r2, #1
 80044f2:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80044f4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80044f8:	f022 0201 	bic.w	r2, r2, #1
 80044fc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004500:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004504:	f042 0201 	orr.w	r2, r2, #1
 8004508:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800450c:	68da      	ldr	r2, [r3, #12]
 800450e:	f022 0203 	bic.w	r2, r2, #3
 8004512:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004514:	68da      	ldr	r2, [r3, #12]
 8004516:	4322      	orrs	r2, r4
 8004518:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800451a:	695a      	ldr	r2, [r3, #20]
 800451c:	f022 0207 	bic.w	r2, r2, #7
 8004520:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8004522:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8004526:	432a      	orrs	r2, r5
 8004528:	694d      	ldr	r5, [r1, #20]
 800452a:	695c      	ldr	r4, [r3, #20]
 800452c:	432a      	orrs	r2, r5
 800452e:	4322      	orrs	r2, r4
 8004530:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004532:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004534:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004536:	f022 020f 	bic.w	r2, r2, #15
 800453a:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800453c:	691c      	ldr	r4, [r3, #16]
 800453e:	432c      	orrs	r4, r5
 8004540:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004542:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004546:	f024 040e 	bic.w	r4, r4, #14
 800454a:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800454e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004552:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004554:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8004558:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800455c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800455e:	0c12      	lsrs	r2, r2, #16
 8004560:	0412      	lsls	r2, r2, #16
 8004562:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004564:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004566:	4322      	orrs	r2, r4
 8004568:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800456a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800456e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004572:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004576:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800457a:	432a      	orrs	r2, r5
 800457c:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800457e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004582:	432a      	orrs	r2, r5
 8004584:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004586:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004588:	432a      	orrs	r2, r5
 800458a:	4322      	orrs	r2, r4
 800458c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8004590:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004592:	f022 0201 	bic.w	r2, r2, #1
 8004596:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004598:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800459a:	430a      	orrs	r2, r1
 800459c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800459e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80045a2:	f042 0201 	orr.w	r2, r2, #1
 80045a6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80045aa:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80045ae:	f042 0202 	orr.w	r2, r2, #2
 80045b2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80045b6:	2300      	movs	r3, #0
 80045b8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80045ba:	4618      	mov	r0, r3
}
 80045bc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80045be:	2002      	movs	r0, #2
 80045c0:	e7fc      	b.n	80045bc <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

080045c4 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 80045c4:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80045c6:	7c03      	ldrb	r3, [r0, #16]
 80045c8:	2b01      	cmp	r3, #1
 80045ca:	d02a      	beq.n	8004622 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 80045cc:	6802      	ldr	r2, [r0, #0]
 80045ce:	4b16      	ldr	r3, [pc, #88]	; (8004628 <HAL_DSI_ConfigCommand+0x64>)
 80045d0:	6e94      	ldr	r4, [r2, #104]	; 0x68
 80045d2:	4023      	ands	r3, r4
 80045d4:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80045d6:	e9d1 3500 	ldrd	r3, r5, [r1]
 80045da:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 80045dc:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80045de:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 80045e0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 80045e2:	68cd      	ldr	r5, [r1, #12]
 80045e4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 80045e6:	690d      	ldr	r5, [r1, #16]
 80045e8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 80045ea:	694d      	ldr	r5, [r1, #20]
 80045ec:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80045ee:	698d      	ldr	r5, [r1, #24]
 80045f0:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80045f2:	69cd      	ldr	r5, [r1, #28]
 80045f4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80045f6:	6a0d      	ldr	r5, [r1, #32]
 80045f8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80045fa:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80045fc:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80045fe:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004600:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8004602:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004604:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8004606:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004608:	4323      	orrs	r3, r4
 800460a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800460c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800460e:	f023 0302 	bic.w	r3, r3, #2
 8004612:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004614:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004616:	430b      	orrs	r3, r1
 8004618:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800461a:	2300      	movs	r3, #0
 800461c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800461e:	4618      	mov	r0, r3
}
 8004620:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004622:	2002      	movs	r0, #2
 8004624:	e7fc      	b.n	8004620 <HAL_DSI_ConfigCommand+0x5c>
 8004626:	bf00      	nop
 8004628:	fef080ff 	.word	0xfef080ff

0800462c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800462c:	7c03      	ldrb	r3, [r0, #16]
 800462e:	2b01      	cmp	r3, #1
 8004630:	d00b      	beq.n	800464a <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8004632:	6803      	ldr	r3, [r0, #0]
 8004634:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004636:	f022 021f 	bic.w	r2, r2, #31
 800463a:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800463c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800463e:	4311      	orrs	r1, r2
 8004640:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004642:	2300      	movs	r3, #0
 8004644:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004646:	4618      	mov	r0, r3
 8004648:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800464a:	2002      	movs	r0, #2
}
 800464c:	4770      	bx	lr

0800464e <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800464e:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004650:	7c03      	ldrb	r3, [r0, #16]
 8004652:	2b01      	cmp	r3, #1
 8004654:	d035      	beq.n	80046c2 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004656:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800465a:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800465c:	4294      	cmp	r4, r2
 800465e:	bf38      	it	cc
 8004660:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004662:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004666:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800466a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800466e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004672:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004676:	4322      	orrs	r2, r4
 8004678:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800467c:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004680:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004684:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8004688:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800468c:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800468e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004692:	690d      	ldr	r5, [r1, #16]
 8004694:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004698:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800469a:	432a      	orrs	r2, r5
 800469c:	4322      	orrs	r2, r4
 800469e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80046a2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80046a6:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80046aa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80046ae:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80046b2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80046b6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80046ba:	2300      	movs	r3, #0
 80046bc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80046be:	4618      	mov	r0, r3
}
 80046c0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80046c2:	2002      	movs	r0, #2
 80046c4:	e7fc      	b.n	80046c0 <HAL_DSI_ConfigPhyTimer+0x72>
	...

080046c8 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 80046c8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80046ca:	7c03      	ldrb	r3, [r0, #16]
 80046cc:	2b01      	cmp	r3, #1
 80046ce:	d05c      	beq.n	800478a <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80046d0:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80046d2:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80046d4:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80046d6:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80046d8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80046dc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80046de:	689a      	ldr	r2, [r3, #8]
 80046e0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80046e4:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80046e6:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80046e8:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80046ea:	b292      	uxth	r2, r2
 80046ec:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80046ee:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80046f0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80046f4:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80046f6:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80046f8:	4a25      	ldr	r2, [pc, #148]	; (8004790 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80046fa:	4014      	ands	r4, r2
 80046fc:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80046fe:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004700:	432c      	orrs	r4, r5
 8004702:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004704:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004706:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004708:	4014      	ands	r4, r2
 800470a:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800470c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800470e:	432c      	orrs	r4, r5
 8004710:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004712:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004716:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004718:	4014      	ands	r4, r2
 800471a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800471e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8004722:	432c      	orrs	r4, r5
 8004724:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004728:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800472c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800472e:	4014      	ands	r4, r2
 8004730:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004734:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004738:	432c      	orrs	r4, r5
 800473a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800473e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004742:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8004746:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800474a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800474e:	698d      	ldr	r5, [r1, #24]
 8004750:	432c      	orrs	r4, r5
 8004752:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004756:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800475a:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800475c:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800475e:	4014      	ands	r4, r2
 8004760:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004764:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8004768:	432c      	orrs	r4, r5
 800476a:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800476e:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8004772:	4022      	ands	r2, r4
 8004774:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004778:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800477c:	430a      	orrs	r2, r1
 800477e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004782:	2300      	movs	r3, #0
 8004784:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004786:	4618      	mov	r0, r3
}
 8004788:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800478a:	2002      	movs	r0, #2
 800478c:	e7fc      	b.n	8004788 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800478e:	bf00      	nop
 8004790:	ffff0000 	.word	0xffff0000

08004794 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004794:	7c03      	ldrb	r3, [r0, #16]
 8004796:	2b01      	cmp	r3, #1
{
 8004798:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800479a:	d01c      	beq.n	80047d6 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800479c:	6802      	ldr	r2, [r0, #0]
 800479e:	2300      	movs	r3, #0
 80047a0:	9300      	str	r3, [sp, #0]
 80047a2:	6851      	ldr	r1, [r2, #4]
 80047a4:	f041 0101 	orr.w	r1, r1, #1
 80047a8:	6051      	str	r1, [r2, #4]
 80047aa:	6851      	ldr	r1, [r2, #4]
 80047ac:	f001 0101 	and.w	r1, r1, #1
 80047b0:	9100      	str	r1, [sp, #0]
 80047b2:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80047b4:	9301      	str	r3, [sp, #4]
 80047b6:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 80047ba:	f041 0108 	orr.w	r1, r1, #8
 80047be:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 80047c2:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047c6:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80047c8:	f002 0208 	and.w	r2, r2, #8
 80047cc:	9201      	str	r2, [sp, #4]
 80047ce:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 80047d0:	4618      	mov	r0, r3
}
 80047d2:	b002      	add	sp, #8
 80047d4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80047d6:	2002      	movs	r0, #2
 80047d8:	e7fb      	b.n	80047d2 <HAL_DSI_Start+0x3e>

080047da <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80047da:	7c03      	ldrb	r3, [r0, #16]
 80047dc:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 80047de:	bf1f      	itttt	ne
 80047e0:	6802      	ldrne	r2, [r0, #0]
 80047e2:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 80047e6:	f043 0304 	orrne.w	r3, r3, #4
 80047ea:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047ee:	bf1d      	ittte	ne
 80047f0:	2300      	movne	r3, #0
 80047f2:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80047f4:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80047f6:	2002      	moveq	r0, #2
}
 80047f8:	4770      	bx	lr

080047fa <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80047fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80047fc:	7c05      	ldrb	r5, [r0, #16]
 80047fe:	2d01      	cmp	r5, #1
{
 8004800:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004802:	d009      	beq.n	8004818 <HAL_DSI_ShortWrite+0x1e>
 8004804:	2501      	movs	r5, #1
 8004806:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004808:	9d06      	ldr	r5, [sp, #24]
 800480a:	9500      	str	r5, [sp, #0]
 800480c:	f7ff fcac 	bl	8004168 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004810:	2300      	movs	r3, #0
 8004812:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004814:	b003      	add	sp, #12
 8004816:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004818:	2002      	movs	r0, #2
 800481a:	e7fb      	b.n	8004814 <HAL_DSI_ShortWrite+0x1a>

0800481c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800481c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004820:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004822:	7c03      	ldrb	r3, [r0, #16]
 8004824:	2b01      	cmp	r3, #1
{
 8004826:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800482a:	4606      	mov	r6, r0
 800482c:	460f      	mov	r7, r1
 800482e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004830:	d053      	beq.n	80048da <HAL_DSI_LongWrite+0xbe>
 8004832:	2301      	movs	r3, #1
 8004834:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8004836:	f7ff fa07 	bl	8003c48 <HAL_GetTick>
 800483a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800483c:	6831      	ldr	r1, [r6, #0]
 800483e:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8004840:	f013 0a01 	ands.w	sl, r3, #1
 8004844:	d01a      	beq.n	800487c <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004846:	2c03      	cmp	r4, #3
 8004848:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800484a:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800484e:	bf28      	it	cs
 8004850:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8004852:	4282      	cmp	r2, r0
 8004854:	d11e      	bne.n	8004894 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004856:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8004858:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800485c:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800485e:	bb1b      	cbnz	r3, 80048a8 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004860:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004862:	0222      	lsls	r2, r4, #8
 8004864:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8004868:	b292      	uxth	r2, r2
 800486a:	0224      	lsls	r4, r4, #8
 800486c:	4315      	orrs	r5, r2
 800486e:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004872:	432c      	orrs	r4, r5
 8004874:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004876:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004878:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800487a:	e009      	b.n	8004890 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800487c:	f7ff f9e4 	bl	8003c48 <HAL_GetTick>
 8004880:	eba0 000b 	sub.w	r0, r0, fp
 8004884:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004888:	d9d8      	bls.n	800483c <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800488a:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800488e:	2003      	movs	r0, #3
}
 8004890:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004894:	f818 3002 	ldrb.w	r3, [r8, r2]
 8004898:	3201      	adds	r2, #1
 800489a:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800489e:	fa03 f30c 	lsl.w	r3, r3, ip
 80048a2:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80048a6:	e7d4      	b.n	8004852 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80048a8:	2b04      	cmp	r3, #4
    fifoword = 0U;
 80048aa:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80048ae:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 80048b0:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80048b2:	bf28      	it	cs
 80048b4:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80048b8:	f812 8000 	ldrb.w	r8, [r2, r0]
 80048bc:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 80048c0:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80048c2:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 80048c6:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80048c8:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 80048cc:	d1f4      	bne.n	80048b8 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 80048ce:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 80048d2:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 80048d6:	4472      	add	r2, lr
 80048d8:	e7c1      	b.n	800485e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 80048da:	2002      	movs	r0, #2
 80048dc:	e7d8      	b.n	8004890 <HAL_DSI_LongWrite+0x74>

080048de <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80048de:	7c03      	ldrb	r3, [r0, #16]
 80048e0:	2b01      	cmp	r3, #1
 80048e2:	d010      	beq.n	8004906 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 80048e4:	6803      	ldr	r3, [r0, #0]
 80048e6:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80048ea:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80048ee:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 80048f2:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80048f6:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 80048fa:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80048fe:	2300      	movs	r3, #0
 8004900:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004902:	4618      	mov	r0, r3
 8004904:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004906:	2002      	movs	r0, #2
}
 8004908:	4770      	bx	lr
	...

0800490c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800490c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004910:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004ad4 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004914:	4a6d      	ldr	r2, [pc, #436]	; (8004acc <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004916:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004918:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800491a:	2401      	movs	r4, #1
 800491c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800491e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004922:	43ac      	bics	r4, r5
 8004924:	f040 80b9 	bne.w	8004a9a <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004928:	684d      	ldr	r5, [r1, #4]
 800492a:	f005 0403 	and.w	r4, r5, #3
 800492e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004932:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004934:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004936:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800493a:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800493c:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004940:	d834      	bhi.n	80049ac <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004942:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004944:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004948:	68cf      	ldr	r7, [r1, #12]
 800494a:	fa07 f708 	lsl.w	r7, r7, r8
 800494e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004952:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004954:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004956:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800495a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800495e:	409f      	lsls	r7, r3
 8004960:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004964:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004966:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004968:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800496c:	688f      	ldr	r7, [r1, #8]
 800496e:	fa07 f708 	lsl.w	r7, r7, r8
 8004972:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004976:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004978:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800497a:	d119      	bne.n	80049b0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800497c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004980:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004984:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004988:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800498c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004990:	f04f 0e0f 	mov.w	lr, #15
 8004994:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004998:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800499c:	690f      	ldr	r7, [r1, #16]
 800499e:	fa07 f70b 	lsl.w	r7, r7, fp
 80049a2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80049a6:	f8ca 7020 	str.w	r7, [sl, #32]
 80049aa:	e001      	b.n	80049b0 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80049ac:	2c03      	cmp	r4, #3
 80049ae:	d1da      	bne.n	8004966 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80049b0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80049b2:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80049b6:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80049b8:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80049ba:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 80049be:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80049c0:	d06b      	beq.n	8004a9a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80049c2:	f04f 0a00 	mov.w	sl, #0
 80049c6:	f8cd a004 	str.w	sl, [sp, #4]
 80049ca:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80049ce:	4c40      	ldr	r4, [pc, #256]	; (8004ad0 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80049d0:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 80049d4:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 80049d8:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 80049dc:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 80049e0:	9601      	str	r6, [sp, #4]
 80049e2:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80049e4:	f023 0603 	bic.w	r6, r3, #3
 80049e8:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 80049ec:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80049f0:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80049f4:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80049f8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80049fc:	270f      	movs	r7, #15
 80049fe:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004a02:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004a04:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004a08:	d04e      	beq.n	8004aa8 <HAL_GPIO_Init+0x19c>
 8004a0a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a0e:	42a0      	cmp	r0, r4
 8004a10:	d04c      	beq.n	8004aac <HAL_GPIO_Init+0x1a0>
 8004a12:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a16:	42a0      	cmp	r0, r4
 8004a18:	d04a      	beq.n	8004ab0 <HAL_GPIO_Init+0x1a4>
 8004a1a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a1e:	42a0      	cmp	r0, r4
 8004a20:	d048      	beq.n	8004ab4 <HAL_GPIO_Init+0x1a8>
 8004a22:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a26:	42a0      	cmp	r0, r4
 8004a28:	d046      	beq.n	8004ab8 <HAL_GPIO_Init+0x1ac>
 8004a2a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a2e:	42a0      	cmp	r0, r4
 8004a30:	d044      	beq.n	8004abc <HAL_GPIO_Init+0x1b0>
 8004a32:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a36:	42a0      	cmp	r0, r4
 8004a38:	d042      	beq.n	8004ac0 <HAL_GPIO_Init+0x1b4>
 8004a3a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a3e:	42a0      	cmp	r0, r4
 8004a40:	d040      	beq.n	8004ac4 <HAL_GPIO_Init+0x1b8>
 8004a42:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a46:	42a0      	cmp	r0, r4
 8004a48:	d03e      	beq.n	8004ac8 <HAL_GPIO_Init+0x1bc>
 8004a4a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004a4e:	42a0      	cmp	r0, r4
 8004a50:	bf0c      	ite	eq
 8004a52:	2409      	moveq	r4, #9
 8004a54:	240a      	movne	r4, #10
 8004a56:	fa04 f40e 	lsl.w	r4, r4, lr
 8004a5a:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004a5c:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8004a5e:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004a60:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004a64:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8004a66:	bf54      	ite	pl
 8004a68:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004a6a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8004a6e:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004a70:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004a72:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8004a74:	bf54      	ite	pl
 8004a76:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004a78:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8004a7c:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004a7e:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004a80:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8004a82:	bf54      	ite	pl
 8004a84:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004a86:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8004a8a:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004a8c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004a8e:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004a90:	bf54      	ite	pl
 8004a92:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004a94:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004a98:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004a9a:	3301      	adds	r3, #1
 8004a9c:	2b10      	cmp	r3, #16
 8004a9e:	f47f af3b 	bne.w	8004918 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004aa2:	b003      	add	sp, #12
 8004aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004aa8:	4654      	mov	r4, sl
 8004aaa:	e7d4      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004aac:	2401      	movs	r4, #1
 8004aae:	e7d2      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ab0:	2402      	movs	r4, #2
 8004ab2:	e7d0      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ab4:	2403      	movs	r4, #3
 8004ab6:	e7ce      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ab8:	2404      	movs	r4, #4
 8004aba:	e7cc      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004abc:	2405      	movs	r4, #5
 8004abe:	e7ca      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ac0:	2406      	movs	r4, #6
 8004ac2:	e7c8      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ac4:	2407      	movs	r4, #7
 8004ac6:	e7c6      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004ac8:	2408      	movs	r4, #8
 8004aca:	e7c4      	b.n	8004a56 <HAL_GPIO_Init+0x14a>
 8004acc:	40013c00 	.word	0x40013c00
 8004ad0:	40020000 	.word	0x40020000
 8004ad4:	40023800 	.word	0x40023800

08004ad8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004adc:	4c4a      	ldr	r4, [pc, #296]	; (8004c08 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004ade:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004c10 <HAL_GPIO_DeInit+0x138>
 8004ae2:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004c14 <HAL_GPIO_DeInit+0x13c>
 8004ae6:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004c18 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004aea:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004aec:	2301      	movs	r3, #1
 8004aee:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004af2:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004af6:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004afa:	d16e      	bne.n	8004bda <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004afc:	f022 0503 	bic.w	r5, r2, #3
 8004b00:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004b04:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004b08:	4b40      	ldr	r3, [pc, #256]	; (8004c0c <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004b0a:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004b0e:	f002 0c03 	and.w	ip, r2, #3
 8004b12:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004b16:	260f      	movs	r6, #15
 8004b18:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004b1c:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004b1e:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004b22:	d05f      	beq.n	8004be4 <HAL_GPIO_DeInit+0x10c>
 8004b24:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b28:	4298      	cmp	r0, r3
 8004b2a:	d05d      	beq.n	8004be8 <HAL_GPIO_DeInit+0x110>
 8004b2c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b30:	4298      	cmp	r0, r3
 8004b32:	d05b      	beq.n	8004bec <HAL_GPIO_DeInit+0x114>
 8004b34:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b38:	4298      	cmp	r0, r3
 8004b3a:	d059      	beq.n	8004bf0 <HAL_GPIO_DeInit+0x118>
 8004b3c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b40:	4298      	cmp	r0, r3
 8004b42:	d057      	beq.n	8004bf4 <HAL_GPIO_DeInit+0x11c>
 8004b44:	4548      	cmp	r0, r9
 8004b46:	d057      	beq.n	8004bf8 <HAL_GPIO_DeInit+0x120>
 8004b48:	4550      	cmp	r0, sl
 8004b4a:	d057      	beq.n	8004bfc <HAL_GPIO_DeInit+0x124>
 8004b4c:	4558      	cmp	r0, fp
 8004b4e:	d057      	beq.n	8004c00 <HAL_GPIO_DeInit+0x128>
 8004b50:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004b54:	4298      	cmp	r0, r3
 8004b56:	d055      	beq.n	8004c04 <HAL_GPIO_DeInit+0x12c>
 8004b58:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b5c:	4298      	cmp	r0, r3
 8004b5e:	bf0c      	ite	eq
 8004b60:	2309      	moveq	r3, #9
 8004b62:	230a      	movne	r3, #10
 8004b64:	fa03 f30c 	lsl.w	r3, r3, ip
 8004b68:	4543      	cmp	r3, r8
 8004b6a:	d113      	bne.n	8004b94 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004b6c:	6823      	ldr	r3, [r4, #0]
 8004b6e:	ea23 0307 	bic.w	r3, r3, r7
 8004b72:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004b74:	6863      	ldr	r3, [r4, #4]
 8004b76:	ea23 0307 	bic.w	r3, r3, r7
 8004b7a:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004b7c:	68e3      	ldr	r3, [r4, #12]
 8004b7e:	ea23 0307 	bic.w	r3, r3, r7
 8004b82:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004b84:	68a3      	ldr	r3, [r4, #8]
 8004b86:	ea23 0307 	bic.w	r3, r3, r7
 8004b8a:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004b8c:	68ab      	ldr	r3, [r5, #8]
 8004b8e:	ea23 0306 	bic.w	r3, r3, r6
 8004b92:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004b94:	6805      	ldr	r5, [r0, #0]
 8004b96:	2603      	movs	r6, #3
 8004b98:	0053      	lsls	r3, r2, #1
 8004b9a:	fa06 f303 	lsl.w	r3, r6, r3
 8004b9e:	ea25 0503 	bic.w	r5, r5, r3
 8004ba2:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004ba4:	fa22 f506 	lsr.w	r5, r2, r6
 8004ba8:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004bac:	f002 0c07 	and.w	ip, r2, #7
 8004bb0:	6a2e      	ldr	r6, [r5, #32]
 8004bb2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004bb6:	270f      	movs	r7, #15
 8004bb8:	fa07 f70c 	lsl.w	r7, r7, ip
 8004bbc:	ea26 0707 	bic.w	r7, r6, r7
 8004bc0:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004bc2:	68c5      	ldr	r5, [r0, #12]
 8004bc4:	ea25 0503 	bic.w	r5, r5, r3
 8004bc8:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004bca:	6845      	ldr	r5, [r0, #4]
 8004bcc:	ea25 050e 	bic.w	r5, r5, lr
 8004bd0:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004bd2:	6885      	ldr	r5, [r0, #8]
 8004bd4:	ea25 0303 	bic.w	r3, r5, r3
 8004bd8:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004bda:	3201      	adds	r2, #1
 8004bdc:	2a10      	cmp	r2, #16
 8004bde:	d185      	bne.n	8004aec <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004be4:	2300      	movs	r3, #0
 8004be6:	e7bd      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004be8:	2301      	movs	r3, #1
 8004bea:	e7bb      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004bec:	2302      	movs	r3, #2
 8004bee:	e7b9      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004bf0:	2303      	movs	r3, #3
 8004bf2:	e7b7      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004bf4:	2304      	movs	r3, #4
 8004bf6:	e7b5      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004bf8:	2305      	movs	r3, #5
 8004bfa:	e7b3      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004bfc:	2306      	movs	r3, #6
 8004bfe:	e7b1      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004c00:	2307      	movs	r3, #7
 8004c02:	e7af      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004c04:	2308      	movs	r3, #8
 8004c06:	e7ad      	b.n	8004b64 <HAL_GPIO_DeInit+0x8c>
 8004c08:	40013c00 	.word	0x40013c00
 8004c0c:	40020000 	.word	0x40020000
 8004c10:	40021400 	.word	0x40021400
 8004c14:	40021800 	.word	0x40021800
 8004c18:	40021c00 	.word	0x40021c00

08004c1c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004c1c:	6903      	ldr	r3, [r0, #16]
 8004c1e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004c20:	bf14      	ite	ne
 8004c22:	2001      	movne	r0, #1
 8004c24:	2000      	moveq	r0, #0
 8004c26:	4770      	bx	lr

08004c28 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004c28:	b10a      	cbz	r2, 8004c2e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004c2a:	6181      	str	r1, [r0, #24]
  }
}
 8004c2c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004c2e:	0409      	lsls	r1, r1, #16
 8004c30:	e7fb      	b.n	8004c2a <HAL_GPIO_WritePin+0x2>

08004c32 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004c32:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004c34:	ea01 0203 	and.w	r2, r1, r3
 8004c38:	ea21 0103 	bic.w	r1, r1, r3
 8004c3c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004c40:	6181      	str	r1, [r0, #24]
}
 8004c42:	4770      	bx	lr

08004c44 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004c44:	6801      	ldr	r1, [r0, #0]
 8004c46:	694b      	ldr	r3, [r1, #20]
 8004c48:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004c4c:	f04f 0200 	mov.w	r2, #0
 8004c50:	d010      	beq.n	8004c74 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004c52:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004c56:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004c58:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004c5a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004c5c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c60:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004c64:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c66:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004c6a:	f043 0304 	orr.w	r3, r3, #4
 8004c6e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004c70:	2001      	movs	r0, #1
 8004c72:	4770      	bx	lr
  }
  return HAL_OK;
 8004c74:	4618      	mov	r0, r3
}
 8004c76:	4770      	bx	lr

08004c78 <I2C_WaitOnFlagUntilTimeout>:
{
 8004c78:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004c7c:	4606      	mov	r6, r0
 8004c7e:	460f      	mov	r7, r1
 8004c80:	4691      	mov	r9, r2
 8004c82:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004c84:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004c88:	6833      	ldr	r3, [r6, #0]
 8004c8a:	f1ba 0f01 	cmp.w	sl, #1
 8004c8e:	bf0c      	ite	eq
 8004c90:	695c      	ldreq	r4, [r3, #20]
 8004c92:	699c      	ldrne	r4, [r3, #24]
 8004c94:	ea27 0404 	bic.w	r4, r7, r4
 8004c98:	b2a4      	uxth	r4, r4
 8004c9a:	fab4 f484 	clz	r4, r4
 8004c9e:	0964      	lsrs	r4, r4, #5
 8004ca0:	45a1      	cmp	r9, r4
 8004ca2:	d001      	beq.n	8004ca8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004ca4:	2000      	movs	r0, #0
 8004ca6:	e017      	b.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004ca8:	1c6a      	adds	r2, r5, #1
 8004caa:	d0ee      	beq.n	8004c8a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cac:	f7fe ffcc 	bl	8003c48 <HAL_GetTick>
 8004cb0:	9b08      	ldr	r3, [sp, #32]
 8004cb2:	1ac0      	subs	r0, r0, r3
 8004cb4:	42a8      	cmp	r0, r5
 8004cb6:	d801      	bhi.n	8004cbc <I2C_WaitOnFlagUntilTimeout+0x44>
 8004cb8:	2d00      	cmp	r5, #0
 8004cba:	d1e5      	bne.n	8004c88 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004cbc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004cbe:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004cc0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004cc2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004cc6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004cca:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ccc:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004cd0:	f042 0220 	orr.w	r2, r2, #32
 8004cd4:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8004cd6:	2001      	movs	r0, #1
}
 8004cd8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004cdc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ce0:	4604      	mov	r4, r0
 8004ce2:	460f      	mov	r7, r1
 8004ce4:	4616      	mov	r6, r2
 8004ce6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004ce8:	6825      	ldr	r5, [r4, #0]
 8004cea:	6968      	ldr	r0, [r5, #20]
 8004cec:	ea27 0000 	bic.w	r0, r7, r0
 8004cf0:	b280      	uxth	r0, r0
 8004cf2:	b1b8      	cbz	r0, 8004d24 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004cf4:	696b      	ldr	r3, [r5, #20]
 8004cf6:	055a      	lsls	r2, r3, #21
 8004cf8:	d516      	bpl.n	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cfa:	682b      	ldr	r3, [r5, #0]
 8004cfc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004d00:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004d02:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004d06:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d08:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004d0a:	2300      	movs	r3, #0
 8004d0c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d0e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d12:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004d16:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004d18:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d1c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004d1e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004d22:	2001      	movs	r0, #1
}
 8004d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004d28:	1c73      	adds	r3, r6, #1
 8004d2a:	d0de      	beq.n	8004cea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d2c:	f7fe ff8c 	bl	8003c48 <HAL_GetTick>
 8004d30:	eba0 0008 	sub.w	r0, r0, r8
 8004d34:	42b0      	cmp	r0, r6
 8004d36:	d801      	bhi.n	8004d3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004d38:	2e00      	cmp	r6, #0
 8004d3a:	d1d5      	bne.n	8004ce8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004d3c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004d3e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004d40:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004d42:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d46:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d4a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004d4c:	f042 0220 	orr.w	r2, r2, #32
 8004d50:	e7e4      	b.n	8004d1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004d52 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004d52:	b570      	push	{r4, r5, r6, lr}
 8004d54:	4604      	mov	r4, r0
 8004d56:	460d      	mov	r5, r1
 8004d58:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004d5a:	6821      	ldr	r1, [r4, #0]
 8004d5c:	694b      	ldr	r3, [r1, #20]
 8004d5e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004d62:	d001      	beq.n	8004d68 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004d64:	2000      	movs	r0, #0
 8004d66:	e010      	b.n	8004d8a <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004d68:	694a      	ldr	r2, [r1, #20]
 8004d6a:	06d2      	lsls	r2, r2, #27
 8004d6c:	d50e      	bpl.n	8004d8c <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004d6e:	f06f 0210 	mvn.w	r2, #16
 8004d72:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d74:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004d76:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d78:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d7c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004d80:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d82:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8004d84:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8004d88:	2001      	movs	r0, #1
}
 8004d8a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d8c:	f7fe ff5c 	bl	8003c48 <HAL_GetTick>
 8004d90:	1b80      	subs	r0, r0, r6
 8004d92:	42a8      	cmp	r0, r5
 8004d94:	d801      	bhi.n	8004d9a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004d96:	2d00      	cmp	r5, #0
 8004d98:	d1df      	bne.n	8004d5a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004d9a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d9c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004d9e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004da0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004da4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004da8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004daa:	f042 0220 	orr.w	r2, r2, #32
 8004dae:	e7e8      	b.n	8004d82 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004db0 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004db0:	b570      	push	{r4, r5, r6, lr}
 8004db2:	4604      	mov	r4, r0
 8004db4:	460d      	mov	r5, r1
 8004db6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004db8:	6823      	ldr	r3, [r4, #0]
 8004dba:	695b      	ldr	r3, [r3, #20]
 8004dbc:	075b      	lsls	r3, r3, #29
 8004dbe:	d501      	bpl.n	8004dc4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004dc0:	2000      	movs	r0, #0
}
 8004dc2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004dc4:	4620      	mov	r0, r4
 8004dc6:	f7ff ff3d 	bl	8004c44 <I2C_IsAcknowledgeFailed>
 8004dca:	b9a8      	cbnz	r0, 8004df8 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004dcc:	1c6a      	adds	r2, r5, #1
 8004dce:	d0f3      	beq.n	8004db8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004dd0:	f7fe ff3a 	bl	8003c48 <HAL_GetTick>
 8004dd4:	1b80      	subs	r0, r0, r6
 8004dd6:	42a8      	cmp	r0, r5
 8004dd8:	d801      	bhi.n	8004dde <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004dda:	2d00      	cmp	r5, #0
 8004ddc:	d1ec      	bne.n	8004db8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004dde:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004de0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004de2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004de4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004de8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004dec:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004dee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004df2:	f042 0220 	orr.w	r2, r2, #32
 8004df6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004df8:	2001      	movs	r0, #1
 8004dfa:	e7e2      	b.n	8004dc2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004dfc <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004dfc:	b570      	push	{r4, r5, r6, lr}
 8004dfe:	4604      	mov	r4, r0
 8004e00:	460d      	mov	r5, r1
 8004e02:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004e04:	6823      	ldr	r3, [r4, #0]
 8004e06:	695b      	ldr	r3, [r3, #20]
 8004e08:	061b      	lsls	r3, r3, #24
 8004e0a:	d501      	bpl.n	8004e10 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004e0c:	2000      	movs	r0, #0
}
 8004e0e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004e10:	4620      	mov	r0, r4
 8004e12:	f7ff ff17 	bl	8004c44 <I2C_IsAcknowledgeFailed>
 8004e16:	b9a8      	cbnz	r0, 8004e44 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004e18:	1c6a      	adds	r2, r5, #1
 8004e1a:	d0f3      	beq.n	8004e04 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e1c:	f7fe ff14 	bl	8003c48 <HAL_GetTick>
 8004e20:	1b80      	subs	r0, r0, r6
 8004e22:	42a8      	cmp	r0, r5
 8004e24:	d801      	bhi.n	8004e2a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004e26:	2d00      	cmp	r5, #0
 8004e28:	d1ec      	bne.n	8004e04 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004e2a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004e2c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004e2e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004e30:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e34:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004e38:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004e3a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004e3e:	f042 0220 	orr.w	r2, r2, #32
 8004e42:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004e44:	2001      	movs	r0, #1
 8004e46:	e7e2      	b.n	8004e0e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004e48 <I2C_RequestMemoryWrite>:
{
 8004e48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004e4c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e4e:	6802      	ldr	r2, [r0, #0]
{
 8004e50:	b085      	sub	sp, #20
 8004e52:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8004e56:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e58:	6813      	ldr	r3, [r2, #0]
 8004e5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e5e:	6013      	str	r3, [r2, #0]
{
 8004e60:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e62:	463b      	mov	r3, r7
 8004e64:	f8cd 8000 	str.w	r8, [sp]
 8004e68:	2200      	movs	r2, #0
 8004e6a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004e6e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e70:	f7ff ff02 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 8004e74:	6823      	ldr	r3, [r4, #0]
 8004e76:	b138      	cbz	r0, 8004e88 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	05db      	lsls	r3, r3, #23
 8004e7c:	d502      	bpl.n	8004e84 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004e7e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004e82:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004e84:	2003      	movs	r0, #3
 8004e86:	e00a      	b.n	8004e9e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004e88:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004e8c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e8e:	4919      	ldr	r1, [pc, #100]	; (8004ef4 <I2C_RequestMemoryWrite+0xac>)
 8004e90:	4643      	mov	r3, r8
 8004e92:	463a      	mov	r2, r7
 8004e94:	4620      	mov	r0, r4
 8004e96:	f7ff ff21 	bl	8004cdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e9a:	b118      	cbz	r0, 8004ea4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8004e9c:	2001      	movs	r0, #1
}
 8004e9e:	b005      	add	sp, #20
 8004ea0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ea4:	6823      	ldr	r3, [r4, #0]
 8004ea6:	9003      	str	r0, [sp, #12]
 8004ea8:	695a      	ldr	r2, [r3, #20]
 8004eaa:	9203      	str	r2, [sp, #12]
 8004eac:	699b      	ldr	r3, [r3, #24]
 8004eae:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eb0:	4642      	mov	r2, r8
 8004eb2:	4639      	mov	r1, r7
 8004eb4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004eb6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004eb8:	f7ff ffa0 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 8004ebc:	b140      	cbz	r0, 8004ed0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ebe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004ec0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ec2:	bf01      	itttt	eq
 8004ec4:	6822      	ldreq	r2, [r4, #0]
 8004ec6:	6813      	ldreq	r3, [r2, #0]
 8004ec8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004ecc:	6013      	streq	r3, [r2, #0]
 8004ece:	e7e5      	b.n	8004e9c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ed0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ed4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ed6:	d102      	bne.n	8004ede <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ed8:	b2ed      	uxtb	r5, r5
 8004eda:	611d      	str	r5, [r3, #16]
 8004edc:	e7df      	b.n	8004e9e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004ede:	0a2a      	lsrs	r2, r5, #8
 8004ee0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ee2:	4639      	mov	r1, r7
 8004ee4:	4642      	mov	r2, r8
 8004ee6:	4620      	mov	r0, r4
 8004ee8:	f7ff ff88 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 8004eec:	2800      	cmp	r0, #0
 8004eee:	d1e6      	bne.n	8004ebe <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ef0:	6823      	ldr	r3, [r4, #0]
 8004ef2:	e7f1      	b.n	8004ed8 <I2C_RequestMemoryWrite+0x90>
 8004ef4:	00010002 	.word	0x00010002

08004ef8 <I2C_RequestMemoryRead>:
{
 8004ef8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004efc:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004efe:	6803      	ldr	r3, [r0, #0]
{
 8004f00:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004f02:	681a      	ldr	r2, [r3, #0]
 8004f04:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004f08:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004f0a:	681a      	ldr	r2, [r3, #0]
{
 8004f0c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004f10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004f14:	601a      	str	r2, [r3, #0]
{
 8004f16:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004f18:	463b      	mov	r3, r7
 8004f1a:	f8cd 8000 	str.w	r8, [sp]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004f24:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004f26:	f7ff fea7 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 8004f2a:	6823      	ldr	r3, [r4, #0]
 8004f2c:	b148      	cbz	r0, 8004f42 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004f2e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004f30:	05db      	lsls	r3, r3, #23
 8004f32:	d502      	bpl.n	8004f3a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004f34:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004f38:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004f3a:	2003      	movs	r0, #3
}
 8004f3c:	b004      	add	sp, #16
 8004f3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004f42:	fa5f f986 	uxtb.w	r9, r6
 8004f46:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004f4a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004f4c:	492a      	ldr	r1, [pc, #168]	; (8004ff8 <I2C_RequestMemoryRead+0x100>)
 8004f4e:	4643      	mov	r3, r8
 8004f50:	463a      	mov	r2, r7
 8004f52:	4620      	mov	r0, r4
 8004f54:	f7ff fec2 	bl	8004cdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004f58:	b108      	cbz	r0, 8004f5e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004f5a:	2001      	movs	r0, #1
 8004f5c:	e7ee      	b.n	8004f3c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004f5e:	6823      	ldr	r3, [r4, #0]
 8004f60:	9003      	str	r0, [sp, #12]
 8004f62:	695a      	ldr	r2, [r3, #20]
 8004f64:	9203      	str	r2, [sp, #12]
 8004f66:	699b      	ldr	r3, [r3, #24]
 8004f68:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f6a:	4642      	mov	r2, r8
 8004f6c:	4639      	mov	r1, r7
 8004f6e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004f70:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f72:	f7ff ff43 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 8004f76:	b140      	cbz	r0, 8004f8a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004f78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f7a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f7c:	bf01      	itttt	eq
 8004f7e:	6822      	ldreq	r2, [r4, #0]
 8004f80:	6813      	ldreq	r3, [r2, #0]
 8004f82:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004f86:	6013      	streq	r3, [r2, #0]
 8004f88:	e7e7      	b.n	8004f5a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f8a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f8e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f90:	d11a      	bne.n	8004fc8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004f92:	b2ed      	uxtb	r5, r5
 8004f94:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f96:	4642      	mov	r2, r8
 8004f98:	4639      	mov	r1, r7
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	f7ff ff2e 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 8004fa0:	2800      	cmp	r0, #0
 8004fa2:	d1e9      	bne.n	8004f78 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004fa4:	6822      	ldr	r2, [r4, #0]
 8004fa6:	6813      	ldr	r3, [r2, #0]
 8004fa8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004fac:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004fae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004fb2:	4602      	mov	r2, r0
 8004fb4:	f8cd 8000 	str.w	r8, [sp]
 8004fb8:	463b      	mov	r3, r7
 8004fba:	4620      	mov	r0, r4
 8004fbc:	f7ff fe5c 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 8004fc0:	6822      	ldr	r2, [r4, #0]
 8004fc2:	b160      	cbz	r0, 8004fde <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004fc4:	6813      	ldr	r3, [r2, #0]
 8004fc6:	e7b3      	b.n	8004f30 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004fc8:	0a2a      	lsrs	r2, r5, #8
 8004fca:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fcc:	4639      	mov	r1, r7
 8004fce:	4642      	mov	r2, r8
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	f7ff ff13 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 8004fd6:	2800      	cmp	r0, #0
 8004fd8:	d1ce      	bne.n	8004f78 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004fda:	6823      	ldr	r3, [r4, #0]
 8004fdc:	e7d9      	b.n	8004f92 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004fde:	f049 0301 	orr.w	r3, r9, #1
 8004fe2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004fe4:	4904      	ldr	r1, [pc, #16]	; (8004ff8 <I2C_RequestMemoryRead+0x100>)
 8004fe6:	4643      	mov	r3, r8
 8004fe8:	463a      	mov	r2, r7
 8004fea:	4620      	mov	r0, r4
 8004fec:	f7ff fe76 	bl	8004cdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004ff0:	3800      	subs	r0, #0
 8004ff2:	bf18      	it	ne
 8004ff4:	2001      	movne	r0, #1
 8004ff6:	e7a1      	b.n	8004f3c <I2C_RequestMemoryRead+0x44>
 8004ff8:	00010002 	.word	0x00010002

08004ffc <HAL_I2C_Init>:
{
 8004ffc:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004ffe:	4604      	mov	r4, r0
 8005000:	b908      	cbnz	r0, 8005006 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005002:	2001      	movs	r0, #1
}
 8005004:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005006:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800500a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800500e:	b91b      	cbnz	r3, 8005018 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005010:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005014:	f7fc fd7a 	bl	8001b0c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005018:	2324      	movs	r3, #36	; 0x24
 800501a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800501e:	6823      	ldr	r3, [r4, #0]
 8005020:	681a      	ldr	r2, [r3, #0]
 8005022:	f022 0201 	bic.w	r2, r2, #1
 8005026:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005028:	681a      	ldr	r2, [r3, #0]
 800502a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800502e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005030:	681a      	ldr	r2, [r3, #0]
 8005032:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005036:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005038:	f001 f814 	bl	8006064 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800503c:	4b3f      	ldr	r3, [pc, #252]	; (800513c <HAL_I2C_Init+0x140>)
 800503e:	6865      	ldr	r5, [r4, #4]
 8005040:	429d      	cmp	r5, r3
 8005042:	bf94      	ite	ls
 8005044:	4b3e      	ldrls	r3, [pc, #248]	; (8005140 <HAL_I2C_Init+0x144>)
 8005046:	4b3f      	ldrhi	r3, [pc, #252]	; (8005144 <HAL_I2C_Init+0x148>)
 8005048:	4298      	cmp	r0, r3
 800504a:	bf8c      	ite	hi
 800504c:	2300      	movhi	r3, #0
 800504e:	2301      	movls	r3, #1
 8005050:	2b00      	cmp	r3, #0
 8005052:	d1d6      	bne.n	8005002 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005054:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005056:	4e39      	ldr	r6, [pc, #228]	; (800513c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005058:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800505a:	493b      	ldr	r1, [pc, #236]	; (8005148 <HAL_I2C_Init+0x14c>)
 800505c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005060:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005064:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005066:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005068:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800506a:	bf88      	it	hi
 800506c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005070:	6a13      	ldr	r3, [r2, #32]
 8005072:	bf88      	it	hi
 8005074:	4371      	mulhi	r1, r6
 8005076:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800507a:	bf84      	itt	hi
 800507c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005080:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005084:	3101      	adds	r1, #1
 8005086:	4319      	orrs	r1, r3
 8005088:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800508a:	69d1      	ldr	r1, [r2, #28]
 800508c:	1e43      	subs	r3, r0, #1
 800508e:	482b      	ldr	r0, [pc, #172]	; (800513c <HAL_I2C_Init+0x140>)
 8005090:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005094:	4285      	cmp	r5, r0
 8005096:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800509a:	d832      	bhi.n	8005102 <HAL_I2C_Init+0x106>
 800509c:	006d      	lsls	r5, r5, #1
 800509e:	f640 70fc 	movw	r0, #4092	; 0xffc
 80050a2:	fbb3 f3f5 	udiv	r3, r3, r5
 80050a6:	3301      	adds	r3, #1
 80050a8:	4203      	tst	r3, r0
 80050aa:	d042      	beq.n	8005132 <HAL_I2C_Init+0x136>
 80050ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80050b0:	430b      	orrs	r3, r1
 80050b2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80050b4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80050b8:	6811      	ldr	r1, [r2, #0]
 80050ba:	4303      	orrs	r3, r0
 80050bc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80050c0:	430b      	orrs	r3, r1
 80050c2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80050c4:	6891      	ldr	r1, [r2, #8]
 80050c6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80050ca:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80050ce:	4303      	orrs	r3, r0
 80050d0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80050d4:	430b      	orrs	r3, r1
 80050d6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80050d8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80050dc:	68d1      	ldr	r1, [r2, #12]
 80050de:	4303      	orrs	r3, r0
 80050e0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80050e4:	430b      	orrs	r3, r1
 80050e6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80050e8:	6813      	ldr	r3, [r2, #0]
 80050ea:	f043 0301 	orr.w	r3, r3, #1
 80050ee:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050f0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80050f2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050f4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80050f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80050fa:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80050fc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005100:	e780      	b.n	8005004 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005102:	68a0      	ldr	r0, [r4, #8]
 8005104:	b950      	cbnz	r0, 800511c <HAL_I2C_Init+0x120>
 8005106:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800510a:	fbb3 f3f5 	udiv	r3, r3, r5
 800510e:	3301      	adds	r3, #1
 8005110:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005114:	b17b      	cbz	r3, 8005136 <HAL_I2C_Init+0x13a>
 8005116:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800511a:	e7c9      	b.n	80050b0 <HAL_I2C_Init+0xb4>
 800511c:	2019      	movs	r0, #25
 800511e:	4345      	muls	r5, r0
 8005120:	fbb3 f3f5 	udiv	r3, r3, r5
 8005124:	3301      	adds	r3, #1
 8005126:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800512a:	b123      	cbz	r3, 8005136 <HAL_I2C_Init+0x13a>
 800512c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005130:	e7be      	b.n	80050b0 <HAL_I2C_Init+0xb4>
 8005132:	2304      	movs	r3, #4
 8005134:	e7bc      	b.n	80050b0 <HAL_I2C_Init+0xb4>
 8005136:	2301      	movs	r3, #1
 8005138:	e7ba      	b.n	80050b0 <HAL_I2C_Init+0xb4>
 800513a:	bf00      	nop
 800513c:	000186a0 	.word	0x000186a0
 8005140:	001e847f 	.word	0x001e847f
 8005144:	003d08ff 	.word	0x003d08ff
 8005148:	000f4240 	.word	0x000f4240

0800514c <HAL_I2C_DeInit>:
{
 800514c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800514e:	4604      	mov	r4, r0
 8005150:	b198      	cbz	r0, 800517a <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005152:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005154:	2324      	movs	r3, #36	; 0x24
 8005156:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800515a:	6813      	ldr	r3, [r2, #0]
 800515c:	f023 0301 	bic.w	r3, r3, #1
 8005160:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005162:	f7fc fd17 	bl	8001b94 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8005166:	2000      	movs	r0, #0
 8005168:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800516a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800516e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005172:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8005174:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8005178:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800517a:	2001      	movs	r0, #1
 800517c:	e7fc      	b.n	8005178 <HAL_I2C_DeInit+0x2c>
	...

08005180 <HAL_I2C_Mem_Write>:
{
 8005180:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005184:	4604      	mov	r4, r0
 8005186:	4699      	mov	r9, r3
 8005188:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800518a:	460f      	mov	r7, r1
 800518c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800518e:	f7fe fd5b 	bl	8003c48 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005192:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005196:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005198:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800519a:	d003      	beq.n	80051a4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800519c:	2002      	movs	r0, #2
}
 800519e:	b003      	add	sp, #12
 80051a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80051a4:	9000      	str	r0, [sp, #0]
 80051a6:	493c      	ldr	r1, [pc, #240]	; (8005298 <HAL_I2C_Mem_Write+0x118>)
 80051a8:	2319      	movs	r3, #25
 80051aa:	2201      	movs	r2, #1
 80051ac:	4620      	mov	r0, r4
 80051ae:	f7ff fd63 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 80051b2:	2800      	cmp	r0, #0
 80051b4:	d1f2      	bne.n	800519c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80051b6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80051ba:	2b01      	cmp	r3, #1
 80051bc:	d0ee      	beq.n	800519c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80051be:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80051c0:	2301      	movs	r3, #1
 80051c2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80051ca:	bf5e      	ittt	pl
 80051cc:	6803      	ldrpl	r3, [r0, #0]
 80051ce:	f043 0301 	orrpl.w	r3, r3, #1
 80051d2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80051d4:	6803      	ldr	r3, [r0, #0]
 80051d6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80051da:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80051dc:	2321      	movs	r3, #33	; 0x21
 80051de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80051e2:	2340      	movs	r3, #64	; 0x40
 80051e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80051e8:	2300      	movs	r3, #0
 80051ea:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80051ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051ee:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80051f0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80051f4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80051f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80051f8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80051fa:	4b28      	ldr	r3, [pc, #160]	; (800529c <HAL_I2C_Mem_Write+0x11c>)
 80051fc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80051fe:	e9cd 6500 	strd	r6, r5, [sp]
 8005202:	464b      	mov	r3, r9
 8005204:	4642      	mov	r2, r8
 8005206:	4639      	mov	r1, r7
 8005208:	4620      	mov	r0, r4
 800520a:	f7ff fe1d 	bl	8004e48 <I2C_RequestMemoryWrite>
 800520e:	2800      	cmp	r0, #0
 8005210:	d02a      	beq.n	8005268 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005212:	2001      	movs	r0, #1
 8005214:	e7c3      	b.n	800519e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005216:	f7ff fdf1 	bl	8004dfc <I2C_WaitOnTXEFlagUntilTimeout>
 800521a:	b140      	cbz	r0, 800522e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800521c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800521e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005220:	bf01      	itttt	eq
 8005222:	6822      	ldreq	r2, [r4, #0]
 8005224:	6813      	ldreq	r3, [r2, #0]
 8005226:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800522a:	6013      	streq	r3, [r2, #0]
 800522c:	e7f1      	b.n	8005212 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800522e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005230:	6827      	ldr	r7, [r4, #0]
 8005232:	461a      	mov	r2, r3
 8005234:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005238:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800523a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800523c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800523e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005240:	3a01      	subs	r2, #1
 8005242:	b292      	uxth	r2, r2
 8005244:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005246:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005248:	1e48      	subs	r0, r1, #1
 800524a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800524c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800524e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005250:	d50a      	bpl.n	8005268 <HAL_I2C_Mem_Write+0xe8>
 8005252:	b148      	cbz	r0, 8005268 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005254:	785a      	ldrb	r2, [r3, #1]
 8005256:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005258:	3302      	adds	r3, #2
 800525a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800525c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800525e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005260:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005262:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005264:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005266:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005268:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800526a:	462a      	mov	r2, r5
 800526c:	4631      	mov	r1, r6
 800526e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005270:	2b00      	cmp	r3, #0
 8005272:	d1d0      	bne.n	8005216 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005274:	f7ff fd9c 	bl	8004db0 <I2C_WaitOnBTFFlagUntilTimeout>
 8005278:	2800      	cmp	r0, #0
 800527a:	d1cf      	bne.n	800521c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800527c:	6822      	ldr	r2, [r4, #0]
 800527e:	6813      	ldr	r3, [r2, #0]
 8005280:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005284:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005286:	2320      	movs	r3, #32
 8005288:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800528c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005290:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005294:	e783      	b.n	800519e <HAL_I2C_Mem_Write+0x1e>
 8005296:	bf00      	nop
 8005298:	00100002 	.word	0x00100002
 800529c:	ffff0000 	.word	0xffff0000

080052a0 <HAL_I2C_Mem_Read>:
{
 80052a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80052a4:	4604      	mov	r4, r0
 80052a6:	b087      	sub	sp, #28
 80052a8:	4699      	mov	r9, r3
 80052aa:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80052ac:	460d      	mov	r5, r1
 80052ae:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80052b0:	f7fe fcca 	bl	8003c48 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80052b4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80052b8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80052ba:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80052bc:	d004      	beq.n	80052c8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80052be:	2502      	movs	r5, #2
}
 80052c0:	4628      	mov	r0, r5
 80052c2:	b007      	add	sp, #28
 80052c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80052c8:	9000      	str	r0, [sp, #0]
 80052ca:	4976      	ldr	r1, [pc, #472]	; (80054a4 <HAL_I2C_Mem_Read+0x204>)
 80052cc:	2319      	movs	r3, #25
 80052ce:	2201      	movs	r2, #1
 80052d0:	4620      	mov	r0, r4
 80052d2:	f7ff fcd1 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 80052d6:	2800      	cmp	r0, #0
 80052d8:	d1f1      	bne.n	80052be <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80052da:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80052de:	2b01      	cmp	r3, #1
 80052e0:	d0ed      	beq.n	80052be <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80052e2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80052e4:	2301      	movs	r3, #1
 80052e6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80052ea:	6803      	ldr	r3, [r0, #0]
 80052ec:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80052ee:	bf5e      	ittt	pl
 80052f0:	6803      	ldrpl	r3, [r0, #0]
 80052f2:	f043 0301 	orrpl.w	r3, r3, #1
 80052f6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80052f8:	6803      	ldr	r3, [r0, #0]
 80052fa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80052fe:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005300:	2322      	movs	r3, #34	; 0x22
 8005302:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005306:	2340      	movs	r3, #64	; 0x40
 8005308:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800530c:	2300      	movs	r3, #0
 800530e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005310:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005312:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005314:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005318:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800531a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800531c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800531e:	4b62      	ldr	r3, [pc, #392]	; (80054a8 <HAL_I2C_Mem_Read+0x208>)
 8005320:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005322:	4629      	mov	r1, r5
 8005324:	e9cd 7600 	strd	r7, r6, [sp]
 8005328:	464b      	mov	r3, r9
 800532a:	4642      	mov	r2, r8
 800532c:	4620      	mov	r0, r4
 800532e:	f7ff fde3 	bl	8004ef8 <I2C_RequestMemoryRead>
 8005332:	4605      	mov	r5, r0
 8005334:	b108      	cbz	r0, 800533a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005336:	2501      	movs	r5, #1
 8005338:	e7c2      	b.n	80052c0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800533a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800533c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800533e:	b9b2      	cbnz	r2, 800536e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005340:	9002      	str	r0, [sp, #8]
 8005342:	695a      	ldr	r2, [r3, #20]
 8005344:	9202      	str	r2, [sp, #8]
 8005346:	699a      	ldr	r2, [r3, #24]
 8005348:	9202      	str	r2, [sp, #8]
 800534a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800534c:	681a      	ldr	r2, [r3, #0]
 800534e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005352:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005354:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80054ac <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005358:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800535a:	2b00      	cmp	r3, #0
 800535c:	d12c      	bne.n	80053b8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800535e:	2220      	movs	r2, #32
 8005360:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005364:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005368:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800536c:	e7a8      	b.n	80052c0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800536e:	2a01      	cmp	r2, #1
 8005370:	d10a      	bne.n	8005388 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005372:	681a      	ldr	r2, [r3, #0]
 8005374:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005378:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800537a:	9003      	str	r0, [sp, #12]
 800537c:	695a      	ldr	r2, [r3, #20]
 800537e:	9203      	str	r2, [sp, #12]
 8005380:	699a      	ldr	r2, [r3, #24]
 8005382:	9203      	str	r2, [sp, #12]
 8005384:	9a03      	ldr	r2, [sp, #12]
 8005386:	e7e1      	b.n	800534c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005388:	2a02      	cmp	r2, #2
 800538a:	d10e      	bne.n	80053aa <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800538c:	681a      	ldr	r2, [r3, #0]
 800538e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005392:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005394:	681a      	ldr	r2, [r3, #0]
 8005396:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800539a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800539c:	9004      	str	r0, [sp, #16]
 800539e:	695a      	ldr	r2, [r3, #20]
 80053a0:	9204      	str	r2, [sp, #16]
 80053a2:	699b      	ldr	r3, [r3, #24]
 80053a4:	9304      	str	r3, [sp, #16]
 80053a6:	9b04      	ldr	r3, [sp, #16]
 80053a8:	e7d4      	b.n	8005354 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053aa:	9005      	str	r0, [sp, #20]
 80053ac:	695a      	ldr	r2, [r3, #20]
 80053ae:	9205      	str	r2, [sp, #20]
 80053b0:	699b      	ldr	r3, [r3, #24]
 80053b2:	9305      	str	r3, [sp, #20]
 80053b4:	9b05      	ldr	r3, [sp, #20]
 80053b6:	e7cd      	b.n	8005354 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80053b8:	2b03      	cmp	r3, #3
 80053ba:	d856      	bhi.n	800546a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80053bc:	2b01      	cmp	r3, #1
 80053be:	d115      	bne.n	80053ec <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053c0:	4632      	mov	r2, r6
 80053c2:	4639      	mov	r1, r7
 80053c4:	4620      	mov	r0, r4
 80053c6:	f7ff fcc4 	bl	8004d52 <I2C_WaitOnRXNEFlagUntilTimeout>
 80053ca:	2800      	cmp	r0, #0
 80053cc:	d1b3      	bne.n	8005336 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80053ce:	6823      	ldr	r3, [r4, #0]
 80053d0:	691a      	ldr	r2, [r3, #16]
 80053d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053d4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80053d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053d8:	3301      	adds	r3, #1
 80053da:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80053dc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80053de:	3b01      	subs	r3, #1
 80053e0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80053e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80053e4:	3b01      	subs	r3, #1
 80053e6:	b29b      	uxth	r3, r3
 80053e8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80053ea:	e7b5      	b.n	8005358 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80053ec:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80053ee:	9600      	str	r6, [sp, #0]
 80053f0:	463b      	mov	r3, r7
 80053f2:	f04f 0200 	mov.w	r2, #0
 80053f6:	4641      	mov	r1, r8
 80053f8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80053fa:	d119      	bne.n	8005430 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80053fc:	f7ff fc3c 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 8005400:	2800      	cmp	r0, #0
 8005402:	d198      	bne.n	8005336 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005404:	6823      	ldr	r3, [r4, #0]
 8005406:	681a      	ldr	r2, [r3, #0]
 8005408:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800540c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800540e:	691a      	ldr	r2, [r3, #16]
 8005410:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005412:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005414:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005416:	1c53      	adds	r3, r2, #1
 8005418:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800541a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800541c:	3b01      	subs	r3, #1
 800541e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005420:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005422:	3b01      	subs	r3, #1
 8005424:	b29b      	uxth	r3, r3
 8005426:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005428:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800542a:	691b      	ldr	r3, [r3, #16]
 800542c:	7053      	strb	r3, [r2, #1]
 800542e:	e7d2      	b.n	80053d6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005430:	f7ff fc22 	bl	8004c78 <I2C_WaitOnFlagUntilTimeout>
 8005434:	2800      	cmp	r0, #0
 8005436:	f47f af7e 	bne.w	8005336 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800543a:	6823      	ldr	r3, [r4, #0]
 800543c:	681a      	ldr	r2, [r3, #0]
 800543e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005442:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005444:	691a      	ldr	r2, [r3, #16]
 8005446:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005448:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800544a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800544c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800544e:	3301      	adds	r3, #1
 8005450:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005452:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005454:	3b01      	subs	r3, #1
 8005456:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005458:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800545a:	3b01      	subs	r3, #1
 800545c:	b29b      	uxth	r3, r3
 800545e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005460:	4602      	mov	r2, r0
 8005462:	463b      	mov	r3, r7
 8005464:	4641      	mov	r1, r8
 8005466:	4620      	mov	r0, r4
 8005468:	e7c8      	b.n	80053fc <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800546a:	4632      	mov	r2, r6
 800546c:	4639      	mov	r1, r7
 800546e:	4620      	mov	r0, r4
 8005470:	f7ff fc6f 	bl	8004d52 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005474:	2800      	cmp	r0, #0
 8005476:	f47f af5e 	bne.w	8005336 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800547a:	6823      	ldr	r3, [r4, #0]
 800547c:	691a      	ldr	r2, [r3, #16]
 800547e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005480:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005482:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005484:	1c53      	adds	r3, r2, #1
 8005486:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005488:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800548a:	3b01      	subs	r3, #1
 800548c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800548e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005490:	3b01      	subs	r3, #1
 8005492:	b29b      	uxth	r3, r3
 8005494:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005496:	6823      	ldr	r3, [r4, #0]
 8005498:	6959      	ldr	r1, [r3, #20]
 800549a:	0749      	lsls	r1, r1, #29
 800549c:	f57f af5c 	bpl.w	8005358 <HAL_I2C_Mem_Read+0xb8>
 80054a0:	e7c3      	b.n	800542a <HAL_I2C_Mem_Read+0x18a>
 80054a2:	bf00      	nop
 80054a4:	00100002 	.word	0x00100002
 80054a8:	ffff0000 	.word	0xffff0000
 80054ac:	00010004 	.word	0x00010004

080054b0 <HAL_I2C_GetState>:
  return hi2c->State;
 80054b0:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 80054b4:	4770      	bx	lr

080054b6 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80054b6:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80054b8:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80054bc:	01d2      	lsls	r2, r2, #7
 80054be:	3284      	adds	r2, #132	; 0x84
 80054c0:	1883      	adds	r3, r0, r2
{
 80054c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80054c6:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80054c8:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80054ca:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80054cc:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80054d0:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80054d4:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80054d6:	68c5      	ldr	r5, [r0, #12]
 80054d8:	f10c 0701 	add.w	r7, ip, #1
 80054dc:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80054e0:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80054e4:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80054e6:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80054e8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80054ec:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80054ee:	68c5      	ldr	r5, [r0, #12]
 80054f0:	68ce      	ldr	r6, [r1, #12]
 80054f2:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80054f6:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80054f8:	689d      	ldr	r5, [r3, #8]
 80054fa:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80054fe:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005500:	68c7      	ldr	r7, [r0, #12]
 8005502:	688d      	ldr	r5, [r1, #8]
 8005504:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005508:	3501      	adds	r5, #1
 800550a:	443d      	add	r5, r7
 800550c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005510:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005512:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005514:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005516:	f025 0507 	bic.w	r5, r5, #7
 800551a:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800551c:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005520:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005522:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005524:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005528:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800552c:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005530:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005534:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005538:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800553c:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005540:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005542:	695d      	ldr	r5, [r3, #20]
 8005544:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005548:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800554a:	694d      	ldr	r5, [r1, #20]
 800554c:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800554e:	69dd      	ldr	r5, [r3, #28]
 8005550:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005554:	f025 0507 	bic.w	r5, r5, #7
 8005558:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800555a:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800555e:	433d      	orrs	r5, r7
 8005560:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005562:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005564:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005566:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800556a:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800556c:	b31e      	cbz	r6, 80055b6 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800556e:	2e01      	cmp	r6, #1
 8005570:	d023      	beq.n	80055ba <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005572:	1eb5      	subs	r5, r6, #2
 8005574:	2d02      	cmp	r5, #2
 8005576:	d922      	bls.n	80055be <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005578:	2e07      	cmp	r6, #7
 800557a:	bf0c      	ite	eq
 800557c:	2502      	moveq	r5, #2
 800557e:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005580:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005582:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005586:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005588:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800558c:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800558e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005590:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005592:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005594:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005596:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800559a:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800559c:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800559e:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80055a2:	f024 0407 	bic.w	r4, r4, #7
 80055a6:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80055a8:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80055aa:	5883      	ldr	r3, [r0, r2]
 80055ac:	f043 0301 	orr.w	r3, r3, #1
 80055b0:	5083      	str	r3, [r0, r2]
}
 80055b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80055b6:	2504      	movs	r5, #4
 80055b8:	e7e2      	b.n	8005580 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80055ba:	2503      	movs	r5, #3
 80055bc:	e7e0      	b.n	8005580 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80055be:	2502      	movs	r5, #2
 80055c0:	e7de      	b.n	8005580 <LTDC_SetConfig+0xca>
	...

080055c4 <HAL_LTDC_Init>:
{
 80055c4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80055c6:	4604      	mov	r4, r0
 80055c8:	2800      	cmp	r0, #0
 80055ca:	d063      	beq.n	8005694 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80055cc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80055d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80055d4:	b91b      	cbnz	r3, 80055de <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80055d6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80055da:	f7fc faf9 	bl	8001bd0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80055de:	2302      	movs	r3, #2
 80055e0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80055e4:	6823      	ldr	r3, [r4, #0]
 80055e6:	699a      	ldr	r2, [r3, #24]
 80055e8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80055ec:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80055ee:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80055f2:	4302      	orrs	r2, r0
 80055f4:	68e0      	ldr	r0, [r4, #12]
 80055f6:	6999      	ldr	r1, [r3, #24]
 80055f8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80055fa:	6920      	ldr	r0, [r4, #16]
 80055fc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80055fe:	430a      	orrs	r2, r1
 8005600:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005602:	689a      	ldr	r2, [r3, #8]
 8005604:	4924      	ldr	r1, [pc, #144]	; (8005698 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005606:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005608:	400a      	ands	r2, r1
 800560a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800560c:	689a      	ldr	r2, [r3, #8]
 800560e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005612:	69a0      	ldr	r0, [r4, #24]
 8005614:	4302      	orrs	r2, r0
 8005616:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005618:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800561a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800561c:	400a      	ands	r2, r1
 800561e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005620:	68da      	ldr	r2, [r3, #12]
 8005622:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005626:	6a20      	ldr	r0, [r4, #32]
 8005628:	4302      	orrs	r2, r0
 800562a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800562c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800562e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005630:	400a      	ands	r2, r1
 8005632:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005634:	691a      	ldr	r2, [r3, #16]
 8005636:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800563a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800563c:	4302      	orrs	r2, r0
 800563e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005640:	695a      	ldr	r2, [r3, #20]
 8005642:	4011      	ands	r1, r2
 8005644:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005646:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005648:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800564a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800564e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005650:	430a      	orrs	r2, r1
 8005652:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005654:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005656:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800565a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800565e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005662:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005664:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005666:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800566a:	430a      	orrs	r2, r1
 800566c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005670:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005674:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005676:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005678:	f042 0206 	orr.w	r2, r2, #6
 800567c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800567e:	699a      	ldr	r2, [r3, #24]
 8005680:	f042 0201 	orr.w	r2, r2, #1
 8005684:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005686:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005688:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800568a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800568e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005692:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005694:	2001      	movs	r0, #1
 8005696:	e7fc      	b.n	8005692 <HAL_LTDC_Init+0xce>
 8005698:	f000f800 	.word	0xf000f800

0800569c <HAL_LTDC_ErrorCallback>:
 800569c:	4770      	bx	lr

0800569e <HAL_LTDC_LineEventCallback>:
 800569e:	4770      	bx	lr

080056a0 <HAL_LTDC_ReloadEventCallback>:
 80056a0:	4770      	bx	lr

080056a2 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80056a2:	6803      	ldr	r3, [r0, #0]
{
 80056a4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80056a6:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80056a8:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80056aa:	0772      	lsls	r2, r6, #29
{
 80056ac:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80056ae:	d514      	bpl.n	80056da <HAL_LTDC_IRQHandler+0x38>
 80056b0:	0769      	lsls	r1, r5, #29
 80056b2:	d512      	bpl.n	80056da <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80056b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80056b6:	f022 0204 	bic.w	r2, r2, #4
 80056ba:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80056bc:	2204      	movs	r2, #4
 80056be:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80056c0:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80056c4:	f043 0301 	orr.w	r3, r3, #1
 80056c8:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80056cc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80056ce:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80056d2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80056d6:	f7ff ffe1 	bl	800569c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80056da:	07b2      	lsls	r2, r6, #30
 80056dc:	d516      	bpl.n	800570c <HAL_LTDC_IRQHandler+0x6a>
 80056de:	07ab      	lsls	r3, r5, #30
 80056e0:	d514      	bpl.n	800570c <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80056e2:	6823      	ldr	r3, [r4, #0]
 80056e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80056e6:	f022 0202 	bic.w	r2, r2, #2
 80056ea:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80056ec:	2202      	movs	r2, #2
 80056ee:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80056f0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80056f4:	4313      	orrs	r3, r2
 80056f6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80056fa:	2304      	movs	r3, #4
 80056fc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005700:	2300      	movs	r3, #0
 8005702:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005706:	4620      	mov	r0, r4
 8005708:	f7ff ffc8 	bl	800569c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800570c:	07f0      	lsls	r0, r6, #31
 800570e:	d510      	bpl.n	8005732 <HAL_LTDC_IRQHandler+0x90>
 8005710:	07e9      	lsls	r1, r5, #31
 8005712:	d50e      	bpl.n	8005732 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005714:	6823      	ldr	r3, [r4, #0]
 8005716:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005718:	f022 0201 	bic.w	r2, r2, #1
 800571c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800571e:	2201      	movs	r2, #1
 8005720:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005722:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005724:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005728:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800572c:	4620      	mov	r0, r4
 800572e:	f7ff ffb6 	bl	800569e <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005732:	0732      	lsls	r2, r6, #28
 8005734:	d511      	bpl.n	800575a <HAL_LTDC_IRQHandler+0xb8>
 8005736:	072b      	lsls	r3, r5, #28
 8005738:	d50f      	bpl.n	800575a <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800573a:	6823      	ldr	r3, [r4, #0]
 800573c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800573e:	f022 0208 	bic.w	r2, r2, #8
 8005742:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005744:	2208      	movs	r2, #8
 8005746:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005748:	2301      	movs	r3, #1
 800574a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800574e:	2300      	movs	r3, #0
 8005750:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005754:	4620      	mov	r0, r4
 8005756:	f7ff ffa3 	bl	80056a0 <HAL_LTDC_ReloadEventCallback>
}
 800575a:	bd70      	pop	{r4, r5, r6, pc}

0800575c <HAL_LTDC_ConfigLayer>:
{
 800575c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005760:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005764:	2b01      	cmp	r3, #1
{
 8005766:	4606      	mov	r6, r0
 8005768:	460f      	mov	r7, r1
 800576a:	4694      	mov	ip, r2
 800576c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005770:	d01f      	beq.n	80057b2 <HAL_LTDC_ConfigLayer+0x56>
 8005772:	f04f 0801 	mov.w	r8, #1
 8005776:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800577a:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800577e:	2434      	movs	r4, #52	; 0x34
 8005780:	460d      	mov	r5, r1
 8005782:	fb04 6402 	mla	r4, r4, r2, r6
 8005786:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005788:	3438      	adds	r4, #56	; 0x38
 800578a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800578c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800578e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005790:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005792:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005794:	682b      	ldr	r3, [r5, #0]
 8005796:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005798:	4630      	mov	r0, r6
 800579a:	4662      	mov	r2, ip
 800579c:	4639      	mov	r1, r7
 800579e:	f7ff fe8a 	bl	80054b6 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80057a2:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80057a4:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80057a6:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80057aa:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80057ae:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80057b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080057b8 <HAL_LTDC_SetPitch>:
{
 80057b8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 80057ba:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80057be:	2b01      	cmp	r3, #1
 80057c0:	f04f 0302 	mov.w	r3, #2
 80057c4:	d02c      	beq.n	8005820 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80057c6:	2434      	movs	r4, #52	; 0x34
 80057c8:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80057cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80057d0:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80057d2:	b33c      	cbz	r4, 8005824 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80057d4:	2c01      	cmp	r4, #1
 80057d6:	d027      	beq.n	8005828 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80057d8:	1ea5      	subs	r5, r4, #2
 80057da:	429d      	cmp	r5, r3
 80057dc:	d902      	bls.n	80057e4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 80057de:	2c07      	cmp	r4, #7
 80057e0:	bf18      	it	ne
 80057e2:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80057e4:	6804      	ldr	r4, [r0, #0]
 80057e6:	01d2      	lsls	r2, r2, #7
 80057e8:	3284      	adds	r2, #132	; 0x84
 80057ea:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80057ec:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80057ee:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80057f0:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80057f4:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80057f8:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80057fa:	4c0c      	ldr	r4, [pc, #48]	; (800582c <HAL_LTDC_SetPitch+0x74>)
 80057fc:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80057fe:	f045 0501 	orr.w	r5, r5, #1
 8005802:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005804:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005806:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800580a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800580c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800580e:	f043 0301 	orr.w	r3, r3, #1
 8005812:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005814:	2301      	movs	r3, #1
 8005816:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800581a:	2300      	movs	r3, #0
 800581c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005820:	4618      	mov	r0, r3
 8005822:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005824:	2304      	movs	r3, #4
 8005826:	e7dd      	b.n	80057e4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005828:	2303      	movs	r3, #3
 800582a:	e7db      	b.n	80057e4 <HAL_LTDC_SetPitch+0x2c>
 800582c:	40016800 	.word	0x40016800

08005830 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005830:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005832:	2300      	movs	r3, #0
 8005834:	9301      	str	r3, [sp, #4]
 8005836:	4b18      	ldr	r3, [pc, #96]	; (8005898 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005838:	4d18      	ldr	r5, [pc, #96]	; (800589c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800583a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800583c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005840:	641a      	str	r2, [r3, #64]	; 0x40
 8005842:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005844:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005848:	9301      	str	r3, [sp, #4]
 800584a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800584c:	4b14      	ldr	r3, [pc, #80]	; (80058a0 <HAL_PWREx_EnableOverDrive+0x70>)
 800584e:	2201      	movs	r2, #1
 8005850:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 8005852:	f7fe f9f9 	bl	8003c48 <HAL_GetTick>
 8005856:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005858:	686b      	ldr	r3, [r5, #4]
 800585a:	03da      	lsls	r2, r3, #15
 800585c:	d50b      	bpl.n	8005876 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800585e:	4b10      	ldr	r3, [pc, #64]	; (80058a0 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005860:	4d0e      	ldr	r5, [pc, #56]	; (800589c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005862:	2201      	movs	r2, #1
 8005864:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8005866:	f7fe f9ef 	bl	8003c48 <HAL_GetTick>
 800586a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800586c:	686b      	ldr	r3, [r5, #4]
 800586e:	039b      	lsls	r3, r3, #14
 8005870:	d50a      	bpl.n	8005888 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005872:	2000      	movs	r0, #0
 8005874:	e006      	b.n	8005884 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005876:	f7fe f9e7 	bl	8003c48 <HAL_GetTick>
 800587a:	1b00      	subs	r0, r0, r4
 800587c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005880:	d9ea      	bls.n	8005858 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005882:	2003      	movs	r0, #3
}
 8005884:	b003      	add	sp, #12
 8005886:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005888:	f7fe f9de 	bl	8003c48 <HAL_GetTick>
 800588c:	1b00      	subs	r0, r0, r4
 800588e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005892:	d9eb      	bls.n	800586c <HAL_PWREx_EnableOverDrive+0x3c>
 8005894:	e7f5      	b.n	8005882 <HAL_PWREx_EnableOverDrive+0x52>
 8005896:	bf00      	nop
 8005898:	40023800 	.word	0x40023800
 800589c:	40007000 	.word	0x40007000
 80058a0:	420e0000 	.word	0x420e0000

080058a4 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80058a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80058a8:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 80058aa:	b13e      	cbz	r6, 80058bc <QSPI_Config+0x18>
 80058ac:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80058b0:	bf1f      	itttt	ne
 80058b2:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 80058b4:	6804      	ldrne	r4, [r0, #0]
 80058b6:	f103 33ff 	addne.w	r3, r3, #4294967295
 80058ba:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 80058bc:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80058c0:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 80058c4:	f1b9 0f00 	cmp.w	r9, #0
 80058c8:	d04f      	beq.n	800596a <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80058ca:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80058cc:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80058ce:	f8d1 a000 	ldr.w	sl, [r1]
 80058d2:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 80058d6:	ea46 0909 	orr.w	r9, r6, r9
 80058da:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 80058de:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 80058e2:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80058e6:	b335      	cbz	r5, 8005936 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80058e8:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80058ea:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80058ec:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80058ee:	ea49 0505 	orr.w	r5, r9, r5
 80058f2:	b19f      	cbz	r7, 800591c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80058f4:	ea4a 0307 	orr.w	r3, sl, r7
 80058f8:	4323      	orrs	r3, r4
 80058fa:	ea43 0308 	orr.w	r3, r3, r8
 80058fe:	68cc      	ldr	r4, [r1, #12]
 8005900:	ea43 030e 	orr.w	r3, r3, lr
 8005904:	4333      	orrs	r3, r6
 8005906:	4323      	orrs	r3, r4
 8005908:	ea43 030c 	orr.w	r3, r3, ip
 800590c:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800590e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005912:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005914:	d00d      	beq.n	8005932 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005916:	684b      	ldr	r3, [r1, #4]
 8005918:	6183      	str	r3, [r0, #24]
 800591a:	e00a      	b.n	8005932 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800591c:	ea4a 0304 	orr.w	r3, sl, r4
 8005920:	ea43 0308 	orr.w	r3, r3, r8
 8005924:	ea43 030e 	orr.w	r3, r3, lr
 8005928:	4333      	orrs	r3, r6
 800592a:	ea43 030c 	orr.w	r3, r3, ip
 800592e:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005930:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005932:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005936:	b16f      	cbz	r7, 8005954 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005938:	ea4a 0307 	orr.w	r3, sl, r7
 800593c:	4323      	orrs	r3, r4
 800593e:	ea43 0308 	orr.w	r3, r3, r8
 8005942:	68cc      	ldr	r4, [r1, #12]
 8005944:	ea43 030e 	orr.w	r3, r3, lr
 8005948:	4323      	orrs	r3, r4
 800594a:	ea43 030c 	orr.w	r3, r3, ip
 800594e:	ea43 0309 	orr.w	r3, r3, r9
 8005952:	e7dc      	b.n	800590e <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005954:	ea4a 0304 	orr.w	r3, sl, r4
 8005958:	ea43 0308 	orr.w	r3, r3, r8
 800595c:	ea43 030e 	orr.w	r3, r3, lr
 8005960:	ea43 030c 	orr.w	r3, r3, ip
 8005964:	ea43 0309 	orr.w	r3, r3, r9
 8005968:	e7e2      	b.n	8005930 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800596a:	b345      	cbz	r5, 80059be <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800596c:	6804      	ldr	r4, [r0, #0]
 800596e:	688b      	ldr	r3, [r1, #8]
 8005970:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005972:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005976:	694e      	ldr	r6, [r1, #20]
 8005978:	6908      	ldr	r0, [r1, #16]
 800597a:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800597e:	ea43 0502 	orr.w	r5, r3, r2
 8005982:	04b6      	lsls	r6, r6, #18
 8005984:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005988:	b187      	cbz	r7, 80059ac <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800598a:	4338      	orrs	r0, r7
 800598c:	ea40 0008 	orr.w	r0, r0, r8
 8005990:	4303      	orrs	r3, r0
 8005992:	68c8      	ldr	r0, [r1, #12]
 8005994:	ea43 030c 	orr.w	r3, r3, ip
 8005998:	4303      	orrs	r3, r0
 800599a:	4333      	orrs	r3, r6
 800599c:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800599e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059a2:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80059a4:	d0c5      	beq.n	8005932 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80059a6:	684b      	ldr	r3, [r1, #4]
 80059a8:	61a3      	str	r3, [r4, #24]
 80059aa:	e7c2      	b.n	8005932 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059ac:	ea40 0008 	orr.w	r0, r0, r8
 80059b0:	4303      	orrs	r3, r0
 80059b2:	ea43 030c 	orr.w	r3, r3, ip
 80059b6:	4333      	orrs	r3, r6
 80059b8:	432b      	orrs	r3, r5
 80059ba:	6163      	str	r3, [r4, #20]
 80059bc:	e7b9      	b.n	8005932 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80059be:	b17f      	cbz	r7, 80059e0 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059c0:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 80059c2:	6800      	ldr	r0, [r0, #0]
 80059c4:	ea46 0307 	orr.w	r3, r6, r7
 80059c8:	4313      	orrs	r3, r2
 80059ca:	4323      	orrs	r3, r4
 80059cc:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80059ce:	4323      	orrs	r3, r4
 80059d0:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80059d2:	4323      	orrs	r3, r4
 80059d4:	68cc      	ldr	r4, [r1, #12]
 80059d6:	4323      	orrs	r3, r4
 80059d8:	694c      	ldr	r4, [r1, #20]
 80059da:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80059de:	e796      	b.n	800590e <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80059e0:	2e00      	cmp	r6, #0
 80059e2:	d0a6      	beq.n	8005932 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80059e4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80059e6:	6800      	ldr	r0, [r0, #0]
 80059e8:	4333      	orrs	r3, r6
 80059ea:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 80059ec:	431a      	orrs	r2, r3
 80059ee:	4332      	orrs	r2, r6
 80059f0:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 80059f2:	694b      	ldr	r3, [r1, #20]
 80059f4:	4332      	orrs	r2, r6
 80059f6:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 80059fa:	6142      	str	r2, [r0, #20]
}
 80059fc:	e799      	b.n	8005932 <QSPI_Config+0x8e>

080059fe <QSPI_WaitFlagStateUntilTimeout>:
{
 80059fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a02:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005a06:	4604      	mov	r4, r0
 8005a08:	460e      	mov	r6, r1
 8005a0a:	4615      	mov	r5, r2
 8005a0c:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005a0e:	6822      	ldr	r2, [r4, #0]
 8005a10:	6893      	ldr	r3, [r2, #8]
 8005a12:	4233      	tst	r3, r6
 8005a14:	bf14      	ite	ne
 8005a16:	2301      	movne	r3, #1
 8005a18:	2300      	moveq	r3, #0
 8005a1a:	42ab      	cmp	r3, r5
 8005a1c:	d101      	bne.n	8005a22 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005a1e:	2000      	movs	r0, #0
 8005a20:	e012      	b.n	8005a48 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005a22:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005a26:	d0f3      	beq.n	8005a10 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005a28:	f7fe f90e 	bl	8003c48 <HAL_GetTick>
 8005a2c:	1bc0      	subs	r0, r0, r7
 8005a2e:	4540      	cmp	r0, r8
 8005a30:	d802      	bhi.n	8005a38 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005a32:	f1b8 0f00 	cmp.w	r8, #0
 8005a36:	d1ea      	bne.n	8005a0e <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005a38:	2304      	movs	r3, #4
 8005a3a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005a3e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005a40:	f043 0301 	orr.w	r3, r3, #1
 8005a44:	6463      	str	r3, [r4, #68]	; 0x44
 8005a46:	2001      	movs	r0, #1
}
 8005a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005a4c <HAL_QSPI_Init>:
{
 8005a4c:	b530      	push	{r4, r5, lr}
 8005a4e:	b085      	sub	sp, #20
 8005a50:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005a52:	f7fe f8f9 	bl	8003c48 <HAL_GetTick>
 8005a56:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005a58:	2c00      	cmp	r4, #0
 8005a5a:	d047      	beq.n	8005aec <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005a5c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005a60:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8005a64:	b94a      	cbnz	r2, 8005a7a <HAL_QSPI_Init+0x2e>
 8005a66:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005a68:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	f7fc f8e1 	bl	8001c34 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005a72:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a76:	9b03      	ldr	r3, [sp, #12]
 8005a78:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005a7a:	6820      	ldr	r0, [r4, #0]
 8005a7c:	68a1      	ldr	r1, [r4, #8]
 8005a7e:	6802      	ldr	r2, [r0, #0]
 8005a80:	3901      	subs	r1, #1
 8005a82:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8005a86:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005a8a:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005a8c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005a8e:	9200      	str	r2, [sp, #0]
 8005a90:	2120      	movs	r1, #32
 8005a92:	2200      	movs	r2, #0
 8005a94:	4620      	mov	r0, r4
 8005a96:	f7ff ffb2 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005a9a:	bb10      	cbnz	r0, 8005ae2 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005a9c:	69e5      	ldr	r5, [r4, #28]
 8005a9e:	68e3      	ldr	r3, [r4, #12]
 8005aa0:	6822      	ldr	r2, [r4, #0]
 8005aa2:	432b      	orrs	r3, r5
 8005aa4:	6a25      	ldr	r5, [r4, #32]
 8005aa6:	6811      	ldr	r1, [r2, #0]
 8005aa8:	432b      	orrs	r3, r5
 8005aaa:	6865      	ldr	r5, [r4, #4]
 8005aac:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005ab0:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005ab4:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005ab8:	430b      	orrs	r3, r1
 8005aba:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005abc:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005ac0:	430b      	orrs	r3, r1
 8005ac2:	6921      	ldr	r1, [r4, #16]
 8005ac4:	6855      	ldr	r5, [r2, #4]
 8005ac6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005aca:	4909      	ldr	r1, [pc, #36]	; (8005af0 <HAL_QSPI_Init+0xa4>)
 8005acc:	4029      	ands	r1, r5
 8005ace:	430b      	orrs	r3, r1
 8005ad0:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005ad2:	6813      	ldr	r3, [r2, #0]
 8005ad4:	f043 0301 	orr.w	r3, r3, #1
 8005ad8:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005ada:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005adc:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005ade:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005ae2:	2300      	movs	r3, #0
 8005ae4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005ae8:	b005      	add	sp, #20
 8005aea:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005aec:	2001      	movs	r0, #1
 8005aee:	e7fb      	b.n	8005ae8 <HAL_QSPI_Init+0x9c>
 8005af0:	ffe0f8fe 	.word	0xffe0f8fe

08005af4 <HAL_QSPI_DeInit>:
{
 8005af4:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005af6:	4604      	mov	r4, r0
 8005af8:	b168      	cbz	r0, 8005b16 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005afa:	6802      	ldr	r2, [r0, #0]
 8005afc:	6813      	ldr	r3, [r2, #0]
 8005afe:	f023 0301 	bic.w	r3, r3, #1
 8005b02:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005b04:	f7fc f8f0 	bl	8001ce8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b08:	2000      	movs	r0, #0
 8005b0a:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005b0c:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005b10:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005b14:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005b16:	2001      	movs	r0, #1
 8005b18:	e7fc      	b.n	8005b14 <HAL_QSPI_DeInit+0x20>

08005b1a <HAL_QSPI_Command>:
{
 8005b1a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005b1e:	4604      	mov	r4, r0
 8005b20:	b085      	sub	sp, #20
 8005b22:	4617      	mov	r7, r2
 8005b24:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005b26:	f7fe f88f 	bl	8003c48 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005b2a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005b2e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005b30:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005b32:	d034      	beq.n	8005b9e <HAL_QSPI_Command+0x84>
 8005b34:	2201      	movs	r2, #1
 8005b36:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005b3a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005b3e:	2a01      	cmp	r2, #1
 8005b40:	fa5f f882 	uxtb.w	r8, r2
 8005b44:	f04f 0602 	mov.w	r6, #2
 8005b48:	d127      	bne.n	8005b9a <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b4a:	2200      	movs	r2, #0
 8005b4c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005b4e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005b50:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005b54:	9700      	str	r7, [sp, #0]
 8005b56:	2120      	movs	r1, #32
 8005b58:	4620      	mov	r0, r4
 8005b5a:	f7ff ff50 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005b5e:	4605      	mov	r5, r0
 8005b60:	b9a0      	cbnz	r0, 8005b8c <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005b62:	4602      	mov	r2, r0
 8005b64:	4649      	mov	r1, r9
 8005b66:	4620      	mov	r0, r4
 8005b68:	f7ff fe9c 	bl	80058a4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005b6c:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005b70:	9b03      	ldr	r3, [sp, #12]
 8005b72:	b94a      	cbnz	r2, 8005b88 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005b74:	9700      	str	r7, [sp, #0]
 8005b76:	4642      	mov	r2, r8
 8005b78:	4631      	mov	r1, r6
 8005b7a:	4620      	mov	r0, r4
 8005b7c:	f7ff ff3f 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005b80:	4605      	mov	r5, r0
 8005b82:	b918      	cbnz	r0, 8005b8c <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005b84:	6823      	ldr	r3, [r4, #0]
 8005b86:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005b88:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005b8c:	2300      	movs	r3, #0
 8005b8e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005b92:	4628      	mov	r0, r5
 8005b94:	b005      	add	sp, #20
 8005b96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005b9a:	4635      	mov	r5, r6
 8005b9c:	e7f6      	b.n	8005b8c <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005b9e:	2502      	movs	r5, #2
 8005ba0:	e7f7      	b.n	8005b92 <HAL_QSPI_Command+0x78>

08005ba2 <HAL_QSPI_AutoPolling>:
{
 8005ba2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005ba6:	4604      	mov	r4, r0
 8005ba8:	4615      	mov	r5, r2
 8005baa:	461e      	mov	r6, r3
 8005bac:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005bae:	f7fe f84b 	bl	8003c48 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005bb2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005bb6:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005bb8:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005bba:	d040      	beq.n	8005c3e <HAL_QSPI_AutoPolling+0x9c>
 8005bbc:	2201      	movs	r2, #1
 8005bbe:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005bc2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005bc6:	2a01      	cmp	r2, #1
 8005bc8:	b2d7      	uxtb	r7, r2
 8005bca:	d136      	bne.n	8005c3a <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005bcc:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005bce:	2200      	movs	r2, #0
 8005bd0:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005bd2:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005bd4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005bd8:	9600      	str	r6, [sp, #0]
 8005bda:	2120      	movs	r1, #32
 8005bdc:	4620      	mov	r0, r4
 8005bde:	f7ff ff0e 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005be2:	bb20      	cbnz	r0, 8005c2e <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005be4:	6821      	ldr	r1, [r4, #0]
 8005be6:	682a      	ldr	r2, [r5, #0]
 8005be8:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005bea:	686a      	ldr	r2, [r5, #4]
 8005bec:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005bee:	68aa      	ldr	r2, [r5, #8]
 8005bf0:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005bf2:	680a      	ldr	r2, [r1, #0]
 8005bf4:	6928      	ldr	r0, [r5, #16]
 8005bf6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005bfa:	4302      	orrs	r2, r0
 8005bfc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005c00:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005c02:	68ea      	ldr	r2, [r5, #12]
 8005c04:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005c08:	4641      	mov	r1, r8
 8005c0a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005c0e:	4620      	mov	r0, r4
 8005c10:	f7ff fe48 	bl	80058a4 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005c14:	9b03      	ldr	r3, [sp, #12]
 8005c16:	9600      	str	r6, [sp, #0]
 8005c18:	463a      	mov	r2, r7
 8005c1a:	2108      	movs	r1, #8
 8005c1c:	4620      	mov	r0, r4
 8005c1e:	f7ff feee 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005c22:	b920      	cbnz	r0, 8005c2e <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005c24:	6823      	ldr	r3, [r4, #0]
 8005c26:	2208      	movs	r2, #8
 8005c28:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005c2a:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005c2e:	2300      	movs	r3, #0
 8005c30:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005c34:	b004      	add	sp, #16
 8005c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005c3a:	2002      	movs	r0, #2
 8005c3c:	e7f7      	b.n	8005c2e <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005c3e:	2002      	movs	r0, #2
 8005c40:	e7f8      	b.n	8005c34 <HAL_QSPI_AutoPolling+0x92>

08005c42 <HAL_QSPI_MemoryMapped>:
{
 8005c42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005c44:	4604      	mov	r4, r0
 8005c46:	4616      	mov	r6, r2
 8005c48:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005c4a:	f7fd fffd 	bl	8003c48 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005c4e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005c52:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005c54:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005c56:	d032      	beq.n	8005cbe <HAL_QSPI_MemoryMapped+0x7c>
 8005c58:	2201      	movs	r2, #1
 8005c5a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005c5e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005c62:	2a01      	cmp	r2, #1
 8005c64:	d129      	bne.n	8005cba <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c66:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005c68:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c6a:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005c6c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005c70:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005c72:	9100      	str	r1, [sp, #0]
 8005c74:	4620      	mov	r0, r4
 8005c76:	2120      	movs	r1, #32
 8005c78:	f7ff fec1 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005c7c:	4605      	mov	r5, r0
 8005c7e:	b9b0      	cbnz	r0, 8005cae <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005c80:	6823      	ldr	r3, [r4, #0]
 8005c82:	6872      	ldr	r2, [r6, #4]
 8005c84:	6818      	ldr	r0, [r3, #0]
 8005c86:	f020 0008 	bic.w	r0, r0, #8
 8005c8a:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005c8c:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005c8e:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005c90:	d107      	bne.n	8005ca2 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005c92:	6832      	ldr	r2, [r6, #0]
 8005c94:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005c96:	2210      	movs	r2, #16
 8005c98:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005c9a:	681a      	ldr	r2, [r3, #0]
 8005c9c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005ca0:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005ca2:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005ca6:	4639      	mov	r1, r7
 8005ca8:	4620      	mov	r0, r4
 8005caa:	f7ff fdfb 	bl	80058a4 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005cae:	2300      	movs	r3, #0
 8005cb0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005cb4:	4628      	mov	r0, r5
 8005cb6:	b003      	add	sp, #12
 8005cb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005cba:	2502      	movs	r5, #2
 8005cbc:	e7f7      	b.n	8005cae <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005cbe:	2502      	movs	r5, #2
 8005cc0:	e7f8      	b.n	8005cb4 <HAL_QSPI_MemoryMapped+0x72>

08005cc2 <HAL_QSPI_Abort>:
{
 8005cc2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005cc4:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005cc6:	f7fd ffbf 	bl	8003c48 <HAL_GetTick>
 8005cca:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005ccc:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8005cd0:	f010 0002 	ands.w	r0, r0, #2
 8005cd4:	d03a      	beq.n	8005d4c <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8005cd6:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005cd8:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8005cda:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005cde:	680a      	ldr	r2, [r1, #0]
 8005ce0:	f012 0204 	ands.w	r2, r2, #4
 8005ce4:	d034      	beq.n	8005d50 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005ce6:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005ce8:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005cea:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005cec:	f022 0204 	bic.w	r2, r2, #4
 8005cf0:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005cf2:	f7fe f8f9 	bl	8003ee8 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005cf6:	9b03      	ldr	r3, [sp, #12]
 8005cf8:	b118      	cbz	r0, 8005d02 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005cfa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005cfc:	f042 0204 	orr.w	r2, r2, #4
 8005d00:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005d02:	6822      	ldr	r2, [r4, #0]
 8005d04:	6891      	ldr	r1, [r2, #8]
 8005d06:	0689      	lsls	r1, r1, #26
 8005d08:	d51d      	bpl.n	8005d46 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005d0a:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005d0c:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005d0e:	f041 0102 	orr.w	r1, r1, #2
 8005d12:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005d14:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005d16:	9200      	str	r2, [sp, #0]
 8005d18:	2102      	movs	r1, #2
 8005d1a:	2201      	movs	r2, #1
 8005d1c:	4620      	mov	r0, r4
 8005d1e:	f7ff fe6e 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005d22:	9b03      	ldr	r3, [sp, #12]
 8005d24:	b990      	cbnz	r0, 8005d4c <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005d26:	6822      	ldr	r2, [r4, #0]
 8005d28:	2102      	movs	r1, #2
 8005d2a:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005d2c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005d2e:	9200      	str	r2, [sp, #0]
 8005d30:	2120      	movs	r1, #32
 8005d32:	4602      	mov	r2, r0
 8005d34:	4620      	mov	r0, r4
 8005d36:	f7ff fe62 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005d3a:	b938      	cbnz	r0, 8005d4c <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005d3c:	6822      	ldr	r2, [r4, #0]
 8005d3e:	6953      	ldr	r3, [r2, #20]
 8005d40:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005d44:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005d46:	2301      	movs	r3, #1
 8005d48:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005d4c:	b004      	add	sp, #16
 8005d4e:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8005d50:	4610      	mov	r0, r2
 8005d52:	e7d6      	b.n	8005d02 <HAL_QSPI_Abort+0x40>

08005d54 <HAL_QSPI_Transmit>:
{
 8005d54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d56:	4604      	mov	r4, r0
 8005d58:	b085      	sub	sp, #20
 8005d5a:	4616      	mov	r6, r2
 8005d5c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005d5e:	f7fd ff73 	bl	8003c48 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005d62:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005d66:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005d68:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005d6a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005d6c:	d04c      	beq.n	8005e08 <HAL_QSPI_Transmit+0xb4>
 8005d6e:	2201      	movs	r2, #1
 8005d70:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005d74:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005d78:	2a01      	cmp	r2, #1
 8005d7a:	b2d0      	uxtb	r0, r2
 8005d7c:	d142      	bne.n	8005e04 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005d7e:	2200      	movs	r2, #0
 8005d80:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005d82:	2f00      	cmp	r7, #0
 8005d84:	d039      	beq.n	8005dfa <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005d86:	2212      	movs	r2, #18
 8005d88:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005d8c:	692a      	ldr	r2, [r5, #16]
 8005d8e:	3201      	adds	r2, #1
 8005d90:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005d92:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005d94:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005d96:	3201      	adds	r2, #1
 8005d98:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005d9a:	696a      	ldr	r2, [r5, #20]
 8005d9c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005da0:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005da2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005da4:	b9a2      	cbnz	r2, 8005dd0 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005da6:	9600      	str	r6, [sp, #0]
 8005da8:	2201      	movs	r2, #1
 8005daa:	2102      	movs	r1, #2
 8005dac:	4620      	mov	r0, r4
 8005dae:	f7ff fe26 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005db2:	b928      	cbnz	r0, 8005dc0 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005db4:	6823      	ldr	r3, [r4, #0]
 8005db6:	2202      	movs	r2, #2
 8005db8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005dba:	4620      	mov	r0, r4
 8005dbc:	f7ff ff81 	bl	8005cc2 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005dc0:	2301      	movs	r3, #1
 8005dc2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005dcc:	b005      	add	sp, #20
 8005dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005dd0:	9600      	str	r6, [sp, #0]
 8005dd2:	2201      	movs	r2, #1
 8005dd4:	2104      	movs	r1, #4
 8005dd6:	4620      	mov	r0, r4
 8005dd8:	9303      	str	r3, [sp, #12]
 8005dda:	f7ff fe10 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005dde:	2800      	cmp	r0, #0
 8005de0:	d1ee      	bne.n	8005dc0 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005de2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005de4:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005de6:	7812      	ldrb	r2, [r2, #0]
 8005de8:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005dec:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005dee:	3201      	adds	r2, #1
 8005df0:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005df2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005df4:	3a01      	subs	r2, #1
 8005df6:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005df8:	e7d3      	b.n	8005da2 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005dfa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005dfc:	f043 0308 	orr.w	r3, r3, #8
 8005e00:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005e02:	e7e0      	b.n	8005dc6 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005e04:	2002      	movs	r0, #2
 8005e06:	e7de      	b.n	8005dc6 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005e08:	2002      	movs	r0, #2
 8005e0a:	e7df      	b.n	8005dcc <HAL_QSPI_Transmit+0x78>

08005e0c <HAL_QSPI_Receive>:
{
 8005e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e0e:	4604      	mov	r4, r0
 8005e10:	b085      	sub	sp, #20
 8005e12:	4616      	mov	r6, r2
 8005e14:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005e16:	f7fd ff17 	bl	8003c48 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005e1a:	6825      	ldr	r5, [r4, #0]
 8005e1c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005e20:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005e24:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005e26:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005e28:	d050      	beq.n	8005ecc <HAL_QSPI_Receive+0xc0>
 8005e2a:	2201      	movs	r2, #1
 8005e2c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005e30:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005e34:	2a01      	cmp	r2, #1
 8005e36:	b2d0      	uxtb	r0, r2
 8005e38:	d146      	bne.n	8005ec8 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e3a:	2200      	movs	r2, #0
 8005e3c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005e3e:	2f00      	cmp	r7, #0
 8005e40:	d03d      	beq.n	8005ebe <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005e42:	2222      	movs	r2, #34	; 0x22
 8005e44:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e48:	692a      	ldr	r2, [r5, #16]
 8005e4a:	3201      	adds	r2, #1
 8005e4c:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e4e:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005e50:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005e52:	3201      	adds	r2, #1
 8005e54:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005e56:	6969      	ldr	r1, [r5, #20]
 8005e58:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005e5c:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8005e60:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005e62:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005e66:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005e68:	b9a2      	cbnz	r2, 8005e94 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005e6a:	9600      	str	r6, [sp, #0]
 8005e6c:	2201      	movs	r2, #1
 8005e6e:	2102      	movs	r1, #2
 8005e70:	4620      	mov	r0, r4
 8005e72:	f7ff fdc4 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005e76:	b928      	cbnz	r0, 8005e84 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005e78:	6823      	ldr	r3, [r4, #0]
 8005e7a:	2202      	movs	r2, #2
 8005e7c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005e7e:	4620      	mov	r0, r4
 8005e80:	f7ff ff1f 	bl	8005cc2 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005e84:	2301      	movs	r3, #1
 8005e86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005e90:	b005      	add	sp, #20
 8005e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005e94:	9600      	str	r6, [sp, #0]
 8005e96:	2201      	movs	r2, #1
 8005e98:	2106      	movs	r1, #6
 8005e9a:	4620      	mov	r0, r4
 8005e9c:	9303      	str	r3, [sp, #12]
 8005e9e:	f7ff fdae 	bl	80059fe <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	d1ee      	bne.n	8005e84 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005ea6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005ea8:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005eac:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005eae:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005eb0:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005eb2:	3201      	adds	r2, #1
 8005eb4:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005eb6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005eb8:	3a01      	subs	r2, #1
 8005eba:	63a2      	str	r2, [r4, #56]	; 0x38
 8005ebc:	e7d3      	b.n	8005e66 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005ebe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005ec0:	f043 0308 	orr.w	r3, r3, #8
 8005ec4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005ec6:	e7e0      	b.n	8005e8a <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005ec8:	2002      	movs	r0, #2
 8005eca:	e7de      	b.n	8005e8a <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005ecc:	2002      	movs	r0, #2
 8005ece:	e7df      	b.n	8005e90 <HAL_QSPI_Receive+0x84>

08005ed0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ed0:	4913      	ldr	r1, [pc, #76]	; (8005f20 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005ed2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ed4:	688b      	ldr	r3, [r1, #8]
 8005ed6:	f003 030c 	and.w	r3, r3, #12
 8005eda:	2b04      	cmp	r3, #4
 8005edc:	d01c      	beq.n	8005f18 <HAL_RCC_GetSysClockFreq+0x48>
 8005ede:	2b08      	cmp	r3, #8
 8005ee0:	d11c      	bne.n	8005f1c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005ee2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005ee4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ee6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005ee8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005eec:	bf14      	ite	ne
 8005eee:	480d      	ldrne	r0, [pc, #52]	; (8005f24 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ef0:	480d      	ldreq	r0, [pc, #52]	; (8005f28 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ef2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005ef6:	bf18      	it	ne
 8005ef8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005efa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005efe:	fba1 0100 	umull	r0, r1, r1, r0
 8005f02:	f7fa f9cd 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005f06:	4b06      	ldr	r3, [pc, #24]	; (8005f20 <HAL_RCC_GetSysClockFreq+0x50>)
 8005f08:	685b      	ldr	r3, [r3, #4]
 8005f0a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005f0e:	3301      	adds	r3, #1
 8005f10:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005f12:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005f16:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f18:	4802      	ldr	r0, [pc, #8]	; (8005f24 <HAL_RCC_GetSysClockFreq+0x54>)
 8005f1a:	e7fc      	b.n	8005f16 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005f1c:	4802      	ldr	r0, [pc, #8]	; (8005f28 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005f1e:	e7fa      	b.n	8005f16 <HAL_RCC_GetSysClockFreq+0x46>
 8005f20:	40023800 	.word	0x40023800
 8005f24:	007a1200 	.word	0x007a1200
 8005f28:	00f42400 	.word	0x00f42400

08005f2c <HAL_RCC_ClockConfig>:
{
 8005f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f30:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005f32:	4604      	mov	r4, r0
 8005f34:	b910      	cbnz	r0, 8005f3c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005f36:	2001      	movs	r0, #1
}
 8005f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005f3c:	4b44      	ldr	r3, [pc, #272]	; (8006050 <HAL_RCC_ClockConfig+0x124>)
 8005f3e:	681a      	ldr	r2, [r3, #0]
 8005f40:	f002 020f 	and.w	r2, r2, #15
 8005f44:	428a      	cmp	r2, r1
 8005f46:	d328      	bcc.n	8005f9a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005f48:	6822      	ldr	r2, [r4, #0]
 8005f4a:	0797      	lsls	r7, r2, #30
 8005f4c:	d42d      	bmi.n	8005faa <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005f4e:	07d0      	lsls	r0, r2, #31
 8005f50:	d441      	bmi.n	8005fd6 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005f52:	4b3f      	ldr	r3, [pc, #252]	; (8006050 <HAL_RCC_ClockConfig+0x124>)
 8005f54:	681a      	ldr	r2, [r3, #0]
 8005f56:	f002 020f 	and.w	r2, r2, #15
 8005f5a:	42aa      	cmp	r2, r5
 8005f5c:	d866      	bhi.n	800602c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005f5e:	6822      	ldr	r2, [r4, #0]
 8005f60:	0751      	lsls	r1, r2, #29
 8005f62:	d46c      	bmi.n	800603e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005f64:	0713      	lsls	r3, r2, #28
 8005f66:	d507      	bpl.n	8005f78 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005f68:	4a3a      	ldr	r2, [pc, #232]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005f6a:	6921      	ldr	r1, [r4, #16]
 8005f6c:	6893      	ldr	r3, [r2, #8]
 8005f6e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005f72:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005f76:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005f78:	f7ff ffaa 	bl	8005ed0 <HAL_RCC_GetSysClockFreq>
 8005f7c:	4b35      	ldr	r3, [pc, #212]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005f7e:	4a36      	ldr	r2, [pc, #216]	; (8006058 <HAL_RCC_ClockConfig+0x12c>)
 8005f80:	689b      	ldr	r3, [r3, #8]
 8005f82:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005f86:	5cd3      	ldrb	r3, [r2, r3]
 8005f88:	40d8      	lsrs	r0, r3
 8005f8a:	4b34      	ldr	r3, [pc, #208]	; (800605c <HAL_RCC_ClockConfig+0x130>)
 8005f8c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005f8e:	4b34      	ldr	r3, [pc, #208]	; (8006060 <HAL_RCC_ClockConfig+0x134>)
 8005f90:	6818      	ldr	r0, [r3, #0]
 8005f92:	f7fb ff81 	bl	8001e98 <HAL_InitTick>
  return HAL_OK;
 8005f96:	2000      	movs	r0, #0
 8005f98:	e7ce      	b.n	8005f38 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f9a:	b2ca      	uxtb	r2, r1
 8005f9c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f9e:	681b      	ldr	r3, [r3, #0]
 8005fa0:	f003 030f 	and.w	r3, r3, #15
 8005fa4:	428b      	cmp	r3, r1
 8005fa6:	d1c6      	bne.n	8005f36 <HAL_RCC_ClockConfig+0xa>
 8005fa8:	e7ce      	b.n	8005f48 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005faa:	4b2a      	ldr	r3, [pc, #168]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005fac:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005fb0:	bf1e      	ittt	ne
 8005fb2:	6899      	ldrne	r1, [r3, #8]
 8005fb4:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005fb8:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005fba:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005fbc:	bf42      	ittt	mi
 8005fbe:	6899      	ldrmi	r1, [r3, #8]
 8005fc0:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005fc4:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005fc6:	4923      	ldr	r1, [pc, #140]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005fc8:	68a0      	ldr	r0, [r4, #8]
 8005fca:	688b      	ldr	r3, [r1, #8]
 8005fcc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005fd0:	4303      	orrs	r3, r0
 8005fd2:	608b      	str	r3, [r1, #8]
 8005fd4:	e7bb      	b.n	8005f4e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005fd6:	6862      	ldr	r2, [r4, #4]
 8005fd8:	4b1e      	ldr	r3, [pc, #120]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005fda:	2a01      	cmp	r2, #1
 8005fdc:	d11c      	bne.n	8006018 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005fde:	681b      	ldr	r3, [r3, #0]
 8005fe0:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005fe4:	d0a7      	beq.n	8005f36 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005fe6:	4e1b      	ldr	r6, [pc, #108]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8005fe8:	68b3      	ldr	r3, [r6, #8]
 8005fea:	f023 0303 	bic.w	r3, r3, #3
 8005fee:	4313      	orrs	r3, r2
 8005ff0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005ff2:	f7fd fe29 	bl	8003c48 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005ff6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005ffa:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005ffc:	68b3      	ldr	r3, [r6, #8]
 8005ffe:	6862      	ldr	r2, [r4, #4]
 8006000:	f003 030c 	and.w	r3, r3, #12
 8006004:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006008:	d0a3      	beq.n	8005f52 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800600a:	f7fd fe1d 	bl	8003c48 <HAL_GetTick>
 800600e:	1bc0      	subs	r0, r0, r7
 8006010:	4540      	cmp	r0, r8
 8006012:	d9f3      	bls.n	8005ffc <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006014:	2003      	movs	r0, #3
 8006016:	e78f      	b.n	8005f38 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006018:	1e91      	subs	r1, r2, #2
 800601a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800601c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800601e:	d802      	bhi.n	8006026 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006020:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006024:	e7de      	b.n	8005fe4 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006026:	f013 0f02 	tst.w	r3, #2
 800602a:	e7db      	b.n	8005fe4 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800602c:	b2ea      	uxtb	r2, r5
 800602e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	f003 030f 	and.w	r3, r3, #15
 8006036:	42ab      	cmp	r3, r5
 8006038:	f47f af7d 	bne.w	8005f36 <HAL_RCC_ClockConfig+0xa>
 800603c:	e78f      	b.n	8005f5e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800603e:	4905      	ldr	r1, [pc, #20]	; (8006054 <HAL_RCC_ClockConfig+0x128>)
 8006040:	68e0      	ldr	r0, [r4, #12]
 8006042:	688b      	ldr	r3, [r1, #8]
 8006044:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006048:	4303      	orrs	r3, r0
 800604a:	608b      	str	r3, [r1, #8]
 800604c:	e78a      	b.n	8005f64 <HAL_RCC_ClockConfig+0x38>
 800604e:	bf00      	nop
 8006050:	40023c00 	.word	0x40023c00
 8006054:	40023800 	.word	0x40023800
 8006058:	0801dfe1 	.word	0x0801dfe1
 800605c:	20000050 	.word	0x20000050
 8006060:	20000058 	.word	0x20000058

08006064 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006064:	4b04      	ldr	r3, [pc, #16]	; (8006078 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006066:	4a05      	ldr	r2, [pc, #20]	; (800607c <HAL_RCC_GetPCLK1Freq+0x18>)
 8006068:	689b      	ldr	r3, [r3, #8]
 800606a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800606e:	5cd3      	ldrb	r3, [r2, r3]
 8006070:	4a03      	ldr	r2, [pc, #12]	; (8006080 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006072:	6810      	ldr	r0, [r2, #0]
}
 8006074:	40d8      	lsrs	r0, r3
 8006076:	4770      	bx	lr
 8006078:	40023800 	.word	0x40023800
 800607c:	0801dff1 	.word	0x0801dff1
 8006080:	20000050 	.word	0x20000050

08006084 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006084:	230f      	movs	r3, #15
 8006086:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006088:	4b0b      	ldr	r3, [pc, #44]	; (80060b8 <HAL_RCC_GetClockConfig+0x34>)
 800608a:	689a      	ldr	r2, [r3, #8]
 800608c:	f002 0203 	and.w	r2, r2, #3
 8006090:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006092:	689a      	ldr	r2, [r3, #8]
 8006094:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006098:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800609a:	689a      	ldr	r2, [r3, #8]
 800609c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80060a0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80060a2:	689b      	ldr	r3, [r3, #8]
 80060a4:	08db      	lsrs	r3, r3, #3
 80060a6:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80060aa:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80060ac:	4b03      	ldr	r3, [pc, #12]	; (80060bc <HAL_RCC_GetClockConfig+0x38>)
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	f003 030f 	and.w	r3, r3, #15
 80060b4:	600b      	str	r3, [r1, #0]
}
 80060b6:	4770      	bx	lr
 80060b8:	40023800 	.word	0x40023800
 80060bc:	40023c00 	.word	0x40023c00

080060c0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80060c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80060c2:	6802      	ldr	r2, [r0, #0]
{
 80060c4:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80060c6:	0610      	lsls	r0, r2, #24
 80060c8:	d508      	bpl.n	80060dc <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 80060ca:	49aa      	ldr	r1, [pc, #680]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80060cc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80060ce:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80060d2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80060d6:	4303      	orrs	r3, r0
 80060d8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 80060dc:	05d1      	lsls	r1, r2, #23
 80060de:	d508      	bpl.n	80060f2 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 80060e0:	49a4      	ldr	r1, [pc, #656]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80060e2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80060e4:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80060e8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80060ec:	4303      	orrs	r3, r0
 80060ee:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80060f2:	f012 0f43 	tst.w	r2, #67	; 0x43
 80060f6:	d173      	bne.n	80061e0 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80060f8:	6823      	ldr	r3, [r4, #0]
 80060fa:	f013 0f0c 	tst.w	r3, #12
 80060fe:	f000 80c1 	beq.w	8006284 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006102:	4b9d      	ldr	r3, [pc, #628]	; (8006378 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006104:	4d9b      	ldr	r5, [pc, #620]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006106:	2200      	movs	r2, #0
 8006108:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800610a:	f7fd fd9d 	bl	8003c48 <HAL_GetTick>
 800610e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006110:	682b      	ldr	r3, [r5, #0]
 8006112:	009b      	lsls	r3, r3, #2
 8006114:	f100 80fc 	bmi.w	8006310 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006118:	6821      	ldr	r1, [r4, #0]
 800611a:	074f      	lsls	r7, r1, #29
 800611c:	d51a      	bpl.n	8006154 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800611e:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006122:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006126:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800612a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800612e:	4313      	orrs	r3, r2
 8006130:	6922      	ldr	r2, [r4, #16]
 8006132:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006136:	69a2      	ldr	r2, [r4, #24]
 8006138:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800613c:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006140:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006144:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006146:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800614a:	3a01      	subs	r2, #1
 800614c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006150:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006154:	070e      	lsls	r6, r1, #28
 8006156:	d519      	bpl.n	800618c <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006158:	4a86      	ldr	r2, [pc, #536]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800615a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800615e:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8006162:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006166:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800616a:	4303      	orrs	r3, r0
 800616c:	6920      	ldr	r0, [r4, #16]
 800616e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006172:	69e0      	ldr	r0, [r4, #28]
 8006174:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8006178:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800617c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006180:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006182:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006186:	4303      	orrs	r3, r0
 8006188:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800618c:	060d      	lsls	r5, r1, #24
 800618e:	d517      	bpl.n	80061c0 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8006190:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006192:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006196:	d113      	bne.n	80061c0 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006198:	4976      	ldr	r1, [pc, #472]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800619a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800619e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 80061a2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80061a6:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80061aa:	4313      	orrs	r3, r2
 80061ac:	6922      	ldr	r2, [r4, #16]
 80061ae:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80061b2:	6962      	ldr	r2, [r4, #20]
 80061b4:	0852      	lsrs	r2, r2, #1
 80061b6:	3a01      	subs	r2, #1
 80061b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80061bc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80061c0:	4b6d      	ldr	r3, [pc, #436]	; (8006378 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061c2:	4e6c      	ldr	r6, [pc, #432]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 80061c4:	2201      	movs	r2, #1
 80061c6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80061c8:	f7fd fd3e 	bl	8003c48 <HAL_GetTick>
 80061cc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061ce:	6833      	ldr	r3, [r6, #0]
 80061d0:	0098      	lsls	r0, r3, #2
 80061d2:	d459      	bmi.n	8006288 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80061d4:	f7fd fd38 	bl	8003c48 <HAL_GetTick>
 80061d8:	1b40      	subs	r0, r0, r5
 80061da:	2802      	cmp	r0, #2
 80061dc:	d9f7      	bls.n	80061ce <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80061de:	e04e      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80061e0:	4b65      	ldr	r3, [pc, #404]	; (8006378 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80061e2:	4e64      	ldr	r6, [pc, #400]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 80061e4:	2200      	movs	r2, #0
 80061e6:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80061e8:	f7fd fd2e 	bl	8003c48 <HAL_GetTick>
 80061ec:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80061ee:	6833      	ldr	r3, [r6, #0]
 80061f0:	011b      	lsls	r3, r3, #4
 80061f2:	d43f      	bmi.n	8006274 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80061f4:	6821      	ldr	r1, [r4, #0]
 80061f6:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80061f8:	bf41      	itttt	mi
 80061fa:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80061fe:	071b      	lslmi	r3, r3, #28
 8006200:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006204:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006208:	078e      	lsls	r6, r1, #30
 800620a:	d515      	bpl.n	8006238 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800620c:	4a59      	ldr	r2, [pc, #356]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800620e:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006210:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006214:	6865      	ldr	r5, [r4, #4]
 8006216:	061b      	lsls	r3, r3, #24
 8006218:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800621c:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006220:	4303      	orrs	r3, r0
 8006222:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006226:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800622a:	6a23      	ldr	r3, [r4, #32]
 800622c:	f020 001f 	bic.w	r0, r0, #31
 8006230:	3b01      	subs	r3, #1
 8006232:	4303      	orrs	r3, r0
 8006234:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006238:	064d      	lsls	r5, r1, #25
 800623a:	d50a      	bpl.n	8006252 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800623c:	68e3      	ldr	r3, [r4, #12]
 800623e:	6862      	ldr	r2, [r4, #4]
 8006240:	061b      	lsls	r3, r3, #24
 8006242:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006246:	68a2      	ldr	r2, [r4, #8]
 8006248:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800624c:	4a49      	ldr	r2, [pc, #292]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800624e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006252:	4b49      	ldr	r3, [pc, #292]	; (8006378 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006254:	4e47      	ldr	r6, [pc, #284]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006256:	2201      	movs	r2, #1
 8006258:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800625a:	f7fd fcf5 	bl	8003c48 <HAL_GetTick>
 800625e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006260:	6833      	ldr	r3, [r6, #0]
 8006262:	0118      	lsls	r0, r3, #4
 8006264:	f53f af48 	bmi.w	80060f8 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006268:	f7fd fcee 	bl	8003c48 <HAL_GetTick>
 800626c:	1b40      	subs	r0, r0, r5
 800626e:	2802      	cmp	r0, #2
 8006270:	d9f6      	bls.n	8006260 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006272:	e004      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006274:	f7fd fce8 	bl	8003c48 <HAL_GetTick>
 8006278:	1b40      	subs	r0, r0, r5
 800627a:	2802      	cmp	r0, #2
 800627c:	d9b7      	bls.n	80061ee <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800627e:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006280:	b003      	add	sp, #12
 8006282:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8006284:	0619      	lsls	r1, r3, #24
 8006286:	d43e      	bmi.n	8006306 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006288:	6823      	ldr	r3, [r4, #0]
 800628a:	069a      	lsls	r2, r3, #26
 800628c:	d530      	bpl.n	80062f0 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800628e:	2300      	movs	r3, #0
 8006290:	9301      	str	r3, [sp, #4]
 8006292:	4b38      	ldr	r3, [pc, #224]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8006294:	4d39      	ldr	r5, [pc, #228]	; (800637c <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006296:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006298:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800629c:	641a      	str	r2, [r3, #64]	; 0x40
 800629e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80062a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80062a4:	9301      	str	r3, [sp, #4]
 80062a6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80062a8:	682b      	ldr	r3, [r5, #0]
 80062aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80062ae:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80062b0:	f7fd fcca 	bl	8003c48 <HAL_GetTick>
 80062b4:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80062b6:	682b      	ldr	r3, [r5, #0]
 80062b8:	05d9      	lsls	r1, r3, #23
 80062ba:	d530      	bpl.n	800631e <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80062bc:	4d2d      	ldr	r5, [pc, #180]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80062be:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80062c0:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80062c4:	d131      	bne.n	800632a <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80062c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80062c8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80062cc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80062d0:	4a28      	ldr	r2, [pc, #160]	; (8006374 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80062d2:	d14b      	bne.n	800636c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 80062d4:	6891      	ldr	r1, [r2, #8]
 80062d6:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80062da:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80062de:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80062e2:	4301      	orrs	r1, r0
 80062e4:	6091      	str	r1, [r2, #8]
 80062e6:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80062e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80062ec:	430b      	orrs	r3, r1
 80062ee:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80062f0:	6820      	ldr	r0, [r4, #0]
 80062f2:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80062f6:	bf1f      	itttt	ne
 80062f8:	4b21      	ldrne	r3, [pc, #132]	; (8006380 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80062fa:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 80062fe:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8006302:	2000      	movne	r0, #0
 8006304:	e7bc      	b.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8006306:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006308:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800630c:	d1bc      	bne.n	8006288 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800630e:	e6f8      	b.n	8006102 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006310:	f7fd fc9a 	bl	8003c48 <HAL_GetTick>
 8006314:	1b80      	subs	r0, r0, r6
 8006316:	2802      	cmp	r0, #2
 8006318:	f67f aefa 	bls.w	8006110 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800631c:	e7af      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800631e:	f7fd fc93 	bl	8003c48 <HAL_GetTick>
 8006322:	1b80      	subs	r0, r0, r6
 8006324:	2802      	cmp	r0, #2
 8006326:	d9c6      	bls.n	80062b6 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8006328:	e7a9      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800632a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800632c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006330:	4293      	cmp	r3, r2
 8006332:	d0c8      	beq.n	80062c6 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006334:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006336:	4a10      	ldr	r2, [pc, #64]	; (8006378 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8006338:	2101      	movs	r1, #1
 800633a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800633e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006342:	2100      	movs	r1, #0
 8006344:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006348:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800634a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800634c:	07da      	lsls	r2, r3, #31
 800634e:	d5ba      	bpl.n	80062c6 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006350:	f7fd fc7a 	bl	8003c48 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006354:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006358:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800635a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800635c:	079b      	lsls	r3, r3, #30
 800635e:	d4b2      	bmi.n	80062c6 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006360:	f7fd fc72 	bl	8003c48 <HAL_GetTick>
 8006364:	1b80      	subs	r0, r0, r6
 8006366:	42b8      	cmp	r0, r7
 8006368:	d9f7      	bls.n	800635a <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800636a:	e788      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800636c:	6891      	ldr	r1, [r2, #8]
 800636e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006372:	e7b7      	b.n	80062e4 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006374:	40023800 	.word	0x40023800
 8006378:	42470000 	.word	0x42470000
 800637c:	40007000 	.word	0x40007000
 8006380:	42471000 	.word	0x42471000

08006384 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006384:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006388:	4604      	mov	r4, r0
 800638a:	b340      	cbz	r0, 80063de <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800638c:	6803      	ldr	r3, [r0, #0]
 800638e:	07dd      	lsls	r5, r3, #31
 8006390:	d410      	bmi.n	80063b4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006392:	6823      	ldr	r3, [r4, #0]
 8006394:	0798      	lsls	r0, r3, #30
 8006396:	d45e      	bmi.n	8006456 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006398:	6823      	ldr	r3, [r4, #0]
 800639a:	071a      	lsls	r2, r3, #28
 800639c:	f100 80a0 	bmi.w	80064e0 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	075b      	lsls	r3, r3, #29
 80063a4:	f100 80c0 	bmi.w	8006528 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80063a8:	69a0      	ldr	r0, [r4, #24]
 80063aa:	2800      	cmp	r0, #0
 80063ac:	f040 8128 	bne.w	8006600 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80063b0:	2000      	movs	r0, #0
 80063b2:	e02b      	b.n	800640c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80063b4:	4b8f      	ldr	r3, [pc, #572]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 80063b6:	689a      	ldr	r2, [r3, #8]
 80063b8:	f002 020c 	and.w	r2, r2, #12
 80063bc:	2a04      	cmp	r2, #4
 80063be:	d007      	beq.n	80063d0 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80063c0:	689a      	ldr	r2, [r3, #8]
 80063c2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80063c6:	2a08      	cmp	r2, #8
 80063c8:	d10b      	bne.n	80063e2 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80063ca:	685a      	ldr	r2, [r3, #4]
 80063cc:	0251      	lsls	r1, r2, #9
 80063ce:	d508      	bpl.n	80063e2 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80063d0:	4b88      	ldr	r3, [pc, #544]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	039a      	lsls	r2, r3, #14
 80063d6:	d5dc      	bpl.n	8006392 <HAL_RCC_OscConfig+0xe>
 80063d8:	6863      	ldr	r3, [r4, #4]
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d1d9      	bne.n	8006392 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80063de:	2001      	movs	r0, #1
 80063e0:	e014      	b.n	800640c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80063e2:	6862      	ldr	r2, [r4, #4]
 80063e4:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80063e8:	d113      	bne.n	8006412 <HAL_RCC_OscConfig+0x8e>
 80063ea:	681a      	ldr	r2, [r3, #0]
 80063ec:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80063f0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80063f2:	f7fd fc29 	bl	8003c48 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063f6:	4e7f      	ldr	r6, [pc, #508]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80063f8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80063fa:	6833      	ldr	r3, [r6, #0]
 80063fc:	039b      	lsls	r3, r3, #14
 80063fe:	d4c8      	bmi.n	8006392 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006400:	f7fd fc22 	bl	8003c48 <HAL_GetTick>
 8006404:	1b40      	subs	r0, r0, r5
 8006406:	2864      	cmp	r0, #100	; 0x64
 8006408:	d9f7      	bls.n	80063fa <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800640a:	2003      	movs	r0, #3
}
 800640c:	b002      	add	sp, #8
 800640e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006412:	4d78      	ldr	r5, [pc, #480]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 8006414:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006418:	682b      	ldr	r3, [r5, #0]
 800641a:	d107      	bne.n	800642c <HAL_RCC_OscConfig+0xa8>
 800641c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006420:	602b      	str	r3, [r5, #0]
 8006422:	682b      	ldr	r3, [r5, #0]
 8006424:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006428:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800642a:	e7e2      	b.n	80063f2 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800642c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006430:	602b      	str	r3, [r5, #0]
 8006432:	682b      	ldr	r3, [r5, #0]
 8006434:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006438:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800643a:	2a00      	cmp	r2, #0
 800643c:	d1d9      	bne.n	80063f2 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800643e:	f7fd fc03 	bl	8003c48 <HAL_GetTick>
 8006442:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006444:	682b      	ldr	r3, [r5, #0]
 8006446:	039f      	lsls	r7, r3, #14
 8006448:	d5a3      	bpl.n	8006392 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800644a:	f7fd fbfd 	bl	8003c48 <HAL_GetTick>
 800644e:	1b80      	subs	r0, r0, r6
 8006450:	2864      	cmp	r0, #100	; 0x64
 8006452:	d9f7      	bls.n	8006444 <HAL_RCC_OscConfig+0xc0>
 8006454:	e7d9      	b.n	800640a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006456:	4b67      	ldr	r3, [pc, #412]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 8006458:	689a      	ldr	r2, [r3, #8]
 800645a:	f012 0f0c 	tst.w	r2, #12
 800645e:	d007      	beq.n	8006470 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006460:	689a      	ldr	r2, [r3, #8]
 8006462:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006466:	2a08      	cmp	r2, #8
 8006468:	d111      	bne.n	800648e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800646a:	685b      	ldr	r3, [r3, #4]
 800646c:	025e      	lsls	r6, r3, #9
 800646e:	d40e      	bmi.n	800648e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006470:	4a60      	ldr	r2, [pc, #384]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 8006472:	6813      	ldr	r3, [r2, #0]
 8006474:	079d      	lsls	r5, r3, #30
 8006476:	d502      	bpl.n	800647e <HAL_RCC_OscConfig+0xfa>
 8006478:	68e3      	ldr	r3, [r4, #12]
 800647a:	2b01      	cmp	r3, #1
 800647c:	d1af      	bne.n	80063de <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800647e:	6813      	ldr	r3, [r2, #0]
 8006480:	6921      	ldr	r1, [r4, #16]
 8006482:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006486:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800648a:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800648c:	e784      	b.n	8006398 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800648e:	68e2      	ldr	r2, [r4, #12]
 8006490:	4b59      	ldr	r3, [pc, #356]	; (80065f8 <HAL_RCC_OscConfig+0x274>)
 8006492:	b1b2      	cbz	r2, 80064c2 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006494:	2201      	movs	r2, #1
 8006496:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006498:	f7fd fbd6 	bl	8003c48 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800649c:	4d55      	ldr	r5, [pc, #340]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800649e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80064a0:	682b      	ldr	r3, [r5, #0]
 80064a2:	0798      	lsls	r0, r3, #30
 80064a4:	d507      	bpl.n	80064b6 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80064a6:	682b      	ldr	r3, [r5, #0]
 80064a8:	6922      	ldr	r2, [r4, #16]
 80064aa:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80064ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80064b2:	602b      	str	r3, [r5, #0]
 80064b4:	e770      	b.n	8006398 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80064b6:	f7fd fbc7 	bl	8003c48 <HAL_GetTick>
 80064ba:	1b80      	subs	r0, r0, r6
 80064bc:	2802      	cmp	r0, #2
 80064be:	d9ef      	bls.n	80064a0 <HAL_RCC_OscConfig+0x11c>
 80064c0:	e7a3      	b.n	800640a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80064c2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80064c4:	f7fd fbc0 	bl	8003c48 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80064c8:	4e4a      	ldr	r6, [pc, #296]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80064ca:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80064cc:	6833      	ldr	r3, [r6, #0]
 80064ce:	0799      	lsls	r1, r3, #30
 80064d0:	f57f af62 	bpl.w	8006398 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80064d4:	f7fd fbb8 	bl	8003c48 <HAL_GetTick>
 80064d8:	1b40      	subs	r0, r0, r5
 80064da:	2802      	cmp	r0, #2
 80064dc:	d9f6      	bls.n	80064cc <HAL_RCC_OscConfig+0x148>
 80064de:	e794      	b.n	800640a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80064e0:	6962      	ldr	r2, [r4, #20]
 80064e2:	4b45      	ldr	r3, [pc, #276]	; (80065f8 <HAL_RCC_OscConfig+0x274>)
 80064e4:	b182      	cbz	r2, 8006508 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80064e6:	2201      	movs	r2, #1
 80064e8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80064ec:	f7fd fbac 	bl	8003c48 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80064f0:	4e40      	ldr	r6, [pc, #256]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80064f2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80064f4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80064f6:	079f      	lsls	r7, r3, #30
 80064f8:	f53f af52 	bmi.w	80063a0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80064fc:	f7fd fba4 	bl	8003c48 <HAL_GetTick>
 8006500:	1b40      	subs	r0, r0, r5
 8006502:	2802      	cmp	r0, #2
 8006504:	d9f6      	bls.n	80064f4 <HAL_RCC_OscConfig+0x170>
 8006506:	e780      	b.n	800640a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006508:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800650c:	f7fd fb9c 	bl	8003c48 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006510:	4e38      	ldr	r6, [pc, #224]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006512:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006514:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006516:	0798      	lsls	r0, r3, #30
 8006518:	f57f af42 	bpl.w	80063a0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800651c:	f7fd fb94 	bl	8003c48 <HAL_GetTick>
 8006520:	1b40      	subs	r0, r0, r5
 8006522:	2802      	cmp	r0, #2
 8006524:	d9f6      	bls.n	8006514 <HAL_RCC_OscConfig+0x190>
 8006526:	e770      	b.n	800640a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006528:	4b32      	ldr	r3, [pc, #200]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 800652a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800652c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006530:	d128      	bne.n	8006584 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006532:	9201      	str	r2, [sp, #4]
 8006534:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006536:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800653a:	641a      	str	r2, [r3, #64]	; 0x40
 800653c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800653e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006542:	9301      	str	r3, [sp, #4]
 8006544:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006546:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006548:	4d2c      	ldr	r5, [pc, #176]	; (80065fc <HAL_RCC_OscConfig+0x278>)
 800654a:	682b      	ldr	r3, [r5, #0]
 800654c:	05d9      	lsls	r1, r3, #23
 800654e:	d51b      	bpl.n	8006588 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006550:	68a3      	ldr	r3, [r4, #8]
 8006552:	4d28      	ldr	r5, [pc, #160]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 8006554:	2b01      	cmp	r3, #1
 8006556:	d127      	bne.n	80065a8 <HAL_RCC_OscConfig+0x224>
 8006558:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800655a:	f043 0301 	orr.w	r3, r3, #1
 800655e:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006560:	f7fd fb72 	bl	8003c48 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006564:	4e23      	ldr	r6, [pc, #140]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006566:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006568:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800656c:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800656e:	079b      	lsls	r3, r3, #30
 8006570:	d539      	bpl.n	80065e6 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8006572:	2f00      	cmp	r7, #0
 8006574:	f43f af18 	beq.w	80063a8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006578:	4a1e      	ldr	r2, [pc, #120]	; (80065f4 <HAL_RCC_OscConfig+0x270>)
 800657a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800657c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006580:	6413      	str	r3, [r2, #64]	; 0x40
 8006582:	e711      	b.n	80063a8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006584:	2700      	movs	r7, #0
 8006586:	e7df      	b.n	8006548 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006588:	682b      	ldr	r3, [r5, #0]
 800658a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800658e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006590:	f7fd fb5a 	bl	8003c48 <HAL_GetTick>
 8006594:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006596:	682b      	ldr	r3, [r5, #0]
 8006598:	05da      	lsls	r2, r3, #23
 800659a:	d4d9      	bmi.n	8006550 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800659c:	f7fd fb54 	bl	8003c48 <HAL_GetTick>
 80065a0:	1b80      	subs	r0, r0, r6
 80065a2:	2802      	cmp	r0, #2
 80065a4:	d9f7      	bls.n	8006596 <HAL_RCC_OscConfig+0x212>
 80065a6:	e730      	b.n	800640a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80065a8:	2b05      	cmp	r3, #5
 80065aa:	d104      	bne.n	80065b6 <HAL_RCC_OscConfig+0x232>
 80065ac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80065ae:	f043 0304 	orr.w	r3, r3, #4
 80065b2:	672b      	str	r3, [r5, #112]	; 0x70
 80065b4:	e7d0      	b.n	8006558 <HAL_RCC_OscConfig+0x1d4>
 80065b6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80065b8:	f022 0201 	bic.w	r2, r2, #1
 80065bc:	672a      	str	r2, [r5, #112]	; 0x70
 80065be:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80065c0:	f022 0204 	bic.w	r2, r2, #4
 80065c4:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d1ca      	bne.n	8006560 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80065ca:	f7fd fb3d 	bl	8003c48 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80065ce:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80065d2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80065d4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80065d6:	0798      	lsls	r0, r3, #30
 80065d8:	d5cb      	bpl.n	8006572 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80065da:	f7fd fb35 	bl	8003c48 <HAL_GetTick>
 80065de:	1b80      	subs	r0, r0, r6
 80065e0:	4540      	cmp	r0, r8
 80065e2:	d9f7      	bls.n	80065d4 <HAL_RCC_OscConfig+0x250>
 80065e4:	e711      	b.n	800640a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80065e6:	f7fd fb2f 	bl	8003c48 <HAL_GetTick>
 80065ea:	1b40      	subs	r0, r0, r5
 80065ec:	4540      	cmp	r0, r8
 80065ee:	d9bd      	bls.n	800656c <HAL_RCC_OscConfig+0x1e8>
 80065f0:	e70b      	b.n	800640a <HAL_RCC_OscConfig+0x86>
 80065f2:	bf00      	nop
 80065f4:	40023800 	.word	0x40023800
 80065f8:	42470000 	.word	0x42470000
 80065fc:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006600:	4d3b      	ldr	r5, [pc, #236]	; (80066f0 <HAL_RCC_OscConfig+0x36c>)
 8006602:	68ab      	ldr	r3, [r5, #8]
 8006604:	f003 030c 	and.w	r3, r3, #12
 8006608:	2b08      	cmp	r3, #8
 800660a:	d040      	beq.n	800668e <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800660c:	4b39      	ldr	r3, [pc, #228]	; (80066f4 <HAL_RCC_OscConfig+0x370>)
 800660e:	2200      	movs	r2, #0
 8006610:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006612:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006614:	d12e      	bne.n	8006674 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006616:	f7fd fb17 	bl	8003c48 <HAL_GetTick>
 800661a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800661c:	682b      	ldr	r3, [r5, #0]
 800661e:	0199      	lsls	r1, r3, #6
 8006620:	d422      	bmi.n	8006668 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006622:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006626:	4313      	orrs	r3, r2
 8006628:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800662a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800662e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006630:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006634:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006636:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800663a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800663c:	0852      	lsrs	r2, r2, #1
 800663e:	3a01      	subs	r2, #1
 8006640:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006644:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006646:	4b2b      	ldr	r3, [pc, #172]	; (80066f4 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006648:	4d29      	ldr	r5, [pc, #164]	; (80066f0 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800664a:	2201      	movs	r2, #1
 800664c:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800664e:	f7fd fafb 	bl	8003c48 <HAL_GetTick>
 8006652:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006654:	682b      	ldr	r3, [r5, #0]
 8006656:	019a      	lsls	r2, r3, #6
 8006658:	f53f aeaa 	bmi.w	80063b0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800665c:	f7fd faf4 	bl	8003c48 <HAL_GetTick>
 8006660:	1b00      	subs	r0, r0, r4
 8006662:	2802      	cmp	r0, #2
 8006664:	d9f6      	bls.n	8006654 <HAL_RCC_OscConfig+0x2d0>
 8006666:	e6d0      	b.n	800640a <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006668:	f7fd faee 	bl	8003c48 <HAL_GetTick>
 800666c:	1b80      	subs	r0, r0, r6
 800666e:	2802      	cmp	r0, #2
 8006670:	d9d4      	bls.n	800661c <HAL_RCC_OscConfig+0x298>
 8006672:	e6ca      	b.n	800640a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006674:	f7fd fae8 	bl	8003c48 <HAL_GetTick>
 8006678:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800667a:	682b      	ldr	r3, [r5, #0]
 800667c:	019b      	lsls	r3, r3, #6
 800667e:	f57f ae97 	bpl.w	80063b0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006682:	f7fd fae1 	bl	8003c48 <HAL_GetTick>
 8006686:	1b00      	subs	r0, r0, r4
 8006688:	2802      	cmp	r0, #2
 800668a:	d9f6      	bls.n	800667a <HAL_RCC_OscConfig+0x2f6>
 800668c:	e6bd      	b.n	800640a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800668e:	2801      	cmp	r0, #1
 8006690:	f43f aebc 	beq.w	800640c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006694:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006696:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006698:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800669c:	4291      	cmp	r1, r2
 800669e:	f47f ae9e 	bne.w	80063de <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80066a2:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80066a4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80066a8:	428a      	cmp	r2, r1
 80066aa:	f47f ae98 	bne.w	80063de <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80066ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80066b0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80066b4:	401a      	ands	r2, r3
 80066b6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80066ba:	f47f ae90 	bne.w	80063de <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80066be:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80066c0:	0852      	lsrs	r2, r2, #1
 80066c2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80066c6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80066c8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80066cc:	f47f ae87 	bne.w	80063de <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80066d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80066d2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80066d6:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 80066da:	f47f ae80 	bne.w	80063de <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80066de:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80066e0:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80066e4:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 80066e8:	f43f ae62 	beq.w	80063b0 <HAL_RCC_OscConfig+0x2c>
 80066ec:	e677      	b.n	80063de <HAL_RCC_OscConfig+0x5a>
 80066ee:	bf00      	nop
 80066f0:	40023800 	.word	0x40023800
 80066f4:	42470000 	.word	0x42470000

080066f8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80066f8:	b538      	push	{r3, r4, r5, lr}
 80066fa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80066fc:	4604      	mov	r4, r0
 80066fe:	b1c8      	cbz	r0, 8006734 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006700:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006704:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006708:	b91b      	cbnz	r3, 8006712 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800670a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800670e:	f7fb fb09 	bl	8001d24 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006712:	2302      	movs	r3, #2
 8006714:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006718:	1d21      	adds	r1, r4, #4
 800671a:	6820      	ldr	r0, [r4, #0]
 800671c:	f000 f9c6 	bl	8006aac <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006720:	6862      	ldr	r2, [r4, #4]
 8006722:	6820      	ldr	r0, [r4, #0]
 8006724:	4629      	mov	r1, r5
 8006726:	f000 f9fc 	bl	8006b22 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800672a:	2301      	movs	r3, #1
 800672c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8006730:	2000      	movs	r0, #0
}
 8006732:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006734:	2001      	movs	r0, #1
 8006736:	e7fc      	b.n	8006732 <HAL_SDRAM_Init+0x3a>

08006738 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006738:	b510      	push	{r4, lr}
 800673a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800673c:	f7fb fb6a 	bl	8001e14 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006740:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006744:	f000 fa23 	bl	8006b8e <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006748:	2000      	movs	r0, #0
 800674a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800674e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006752:	bd10      	pop	{r4, pc}

08006754 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006754:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006756:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800675a:	2b02      	cmp	r3, #2
{
 800675c:	4605      	mov	r5, r0
 800675e:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006760:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006762:	d012      	beq.n	800678a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006764:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8006768:	2c01      	cmp	r4, #1
 800676a:	d10f      	bne.n	800678c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800676c:	2302      	movs	r3, #2
 800676e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006772:	6828      	ldr	r0, [r5, #0]
 8006774:	f000 fa1a 	bl	8006bac <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006778:	6833      	ldr	r3, [r6, #0]
 800677a:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800677c:	bf06      	itte	eq
 800677e:	2305      	moveq	r3, #5
 8006780:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006784:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006788:	2000      	movs	r0, #0
}
 800678a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800678c:	2001      	movs	r0, #1
 800678e:	e7fc      	b.n	800678a <HAL_SDRAM_SendCommand+0x36>

08006790 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006790:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006792:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006796:	2b02      	cmp	r3, #2
{
 8006798:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800679a:	b2d8      	uxtb	r0, r3
 800679c:	d00d      	beq.n	80067ba <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800679e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80067a2:	2b01      	cmp	r3, #1
 80067a4:	b2dd      	uxtb	r5, r3
 80067a6:	d109      	bne.n	80067bc <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80067a8:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80067aa:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80067ac:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80067b0:	f000 fa22 	bl	8006bf8 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 80067b4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80067b8:	2000      	movs	r0, #0
}
 80067ba:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80067bc:	2001      	movs	r0, #1
 80067be:	e7fc      	b.n	80067ba <HAL_SDRAM_ProgramRefreshRate+0x2a>

080067c0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80067c0:	4770      	bx	lr
	...

080067c4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80067c4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80067c8:	2b01      	cmp	r3, #1
 80067ca:	d130      	bne.n	800682e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80067cc:	2302      	movs	r3, #2
 80067ce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80067d2:	6803      	ldr	r3, [r0, #0]
 80067d4:	68da      	ldr	r2, [r3, #12]
 80067d6:	f042 0201 	orr.w	r2, r2, #1
 80067da:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80067dc:	4a15      	ldr	r2, [pc, #84]	; (8006834 <HAL_TIM_Base_Start_IT+0x70>)
 80067de:	4293      	cmp	r3, r2
 80067e0:	d01a      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 80067e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80067e6:	d017      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 80067e8:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80067ec:	4293      	cmp	r3, r2
 80067ee:	d013      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 80067f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067f4:	4293      	cmp	r3, r2
 80067f6:	d00f      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 80067f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067fc:	4293      	cmp	r3, r2
 80067fe:	d00b      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 8006800:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006804:	4293      	cmp	r3, r2
 8006806:	d007      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 8006808:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800680c:	4293      	cmp	r3, r2
 800680e:	d003      	beq.n	8006818 <HAL_TIM_Base_Start_IT+0x54>
 8006810:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006814:	4293      	cmp	r3, r2
 8006816:	d104      	bne.n	8006822 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006818:	689a      	ldr	r2, [r3, #8]
 800681a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800681e:	2a06      	cmp	r2, #6
 8006820:	d003      	beq.n	800682a <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006822:	681a      	ldr	r2, [r3, #0]
 8006824:	f042 0201 	orr.w	r2, r2, #1
 8006828:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800682a:	2000      	movs	r0, #0
}
 800682c:	4770      	bx	lr
    return HAL_ERROR;
 800682e:	2001      	movs	r0, #1
 8006830:	4770      	bx	lr
 8006832:	bf00      	nop
 8006834:	40010000 	.word	0x40010000

08006838 <HAL_TIM_OC_DelayElapsedCallback>:
 8006838:	4770      	bx	lr

0800683a <HAL_TIM_IC_CaptureCallback>:
 800683a:	4770      	bx	lr

0800683c <HAL_TIM_PWM_PulseFinishedCallback>:
 800683c:	4770      	bx	lr

0800683e <HAL_TIM_TriggerCallback>:
 800683e:	4770      	bx	lr

08006840 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006840:	6803      	ldr	r3, [r0, #0]
 8006842:	691a      	ldr	r2, [r3, #16]
 8006844:	0791      	lsls	r1, r2, #30
{
 8006846:	b510      	push	{r4, lr}
 8006848:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800684a:	d50e      	bpl.n	800686a <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800684c:	68da      	ldr	r2, [r3, #12]
 800684e:	0792      	lsls	r2, r2, #30
 8006850:	d50b      	bpl.n	800686a <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006852:	f06f 0202 	mvn.w	r2, #2
 8006856:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006858:	2201      	movs	r2, #1
 800685a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800685c:	699b      	ldr	r3, [r3, #24]
 800685e:	079b      	lsls	r3, r3, #30
 8006860:	d077      	beq.n	8006952 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006862:	f7ff ffea 	bl	800683a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006866:	2300      	movs	r3, #0
 8006868:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800686a:	6823      	ldr	r3, [r4, #0]
 800686c:	691a      	ldr	r2, [r3, #16]
 800686e:	0750      	lsls	r0, r2, #29
 8006870:	d510      	bpl.n	8006894 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006872:	68da      	ldr	r2, [r3, #12]
 8006874:	0751      	lsls	r1, r2, #29
 8006876:	d50d      	bpl.n	8006894 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006878:	f06f 0204 	mvn.w	r2, #4
 800687c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800687e:	2202      	movs	r2, #2
 8006880:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006882:	699b      	ldr	r3, [r3, #24]
 8006884:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006888:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800688a:	d068      	beq.n	800695e <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800688c:	f7ff ffd5 	bl	800683a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006890:	2300      	movs	r3, #0
 8006892:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006894:	6823      	ldr	r3, [r4, #0]
 8006896:	691a      	ldr	r2, [r3, #16]
 8006898:	0712      	lsls	r2, r2, #28
 800689a:	d50f      	bpl.n	80068bc <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800689c:	68da      	ldr	r2, [r3, #12]
 800689e:	0710      	lsls	r0, r2, #28
 80068a0:	d50c      	bpl.n	80068bc <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80068a2:	f06f 0208 	mvn.w	r2, #8
 80068a6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80068a8:	2204      	movs	r2, #4
 80068aa:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80068ac:	69db      	ldr	r3, [r3, #28]
 80068ae:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80068b0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80068b2:	d05a      	beq.n	800696a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80068b4:	f7ff ffc1 	bl	800683a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80068b8:	2300      	movs	r3, #0
 80068ba:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80068bc:	6823      	ldr	r3, [r4, #0]
 80068be:	691a      	ldr	r2, [r3, #16]
 80068c0:	06d2      	lsls	r2, r2, #27
 80068c2:	d510      	bpl.n	80068e6 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80068c4:	68da      	ldr	r2, [r3, #12]
 80068c6:	06d0      	lsls	r0, r2, #27
 80068c8:	d50d      	bpl.n	80068e6 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80068ca:	f06f 0210 	mvn.w	r2, #16
 80068ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80068d0:	2208      	movs	r2, #8
 80068d2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80068d4:	69db      	ldr	r3, [r3, #28]
 80068d6:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80068da:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80068dc:	d04b      	beq.n	8006976 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80068de:	f7ff ffac 	bl	800683a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80068e2:	2300      	movs	r3, #0
 80068e4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80068e6:	6823      	ldr	r3, [r4, #0]
 80068e8:	691a      	ldr	r2, [r3, #16]
 80068ea:	07d1      	lsls	r1, r2, #31
 80068ec:	d508      	bpl.n	8006900 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80068ee:	68da      	ldr	r2, [r3, #12]
 80068f0:	07d2      	lsls	r2, r2, #31
 80068f2:	d505      	bpl.n	8006900 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80068f4:	f06f 0201 	mvn.w	r2, #1
 80068f8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80068fa:	4620      	mov	r0, r4
 80068fc:	f7fb f864 	bl	80019c8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006900:	6823      	ldr	r3, [r4, #0]
 8006902:	691a      	ldr	r2, [r3, #16]
 8006904:	0610      	lsls	r0, r2, #24
 8006906:	d508      	bpl.n	800691a <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006908:	68da      	ldr	r2, [r3, #12]
 800690a:	0611      	lsls	r1, r2, #24
 800690c:	d505      	bpl.n	800691a <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800690e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006912:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006914:	4620      	mov	r0, r4
 8006916:	f000 f8c8 	bl	8006aaa <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800691a:	6823      	ldr	r3, [r4, #0]
 800691c:	691a      	ldr	r2, [r3, #16]
 800691e:	0652      	lsls	r2, r2, #25
 8006920:	d508      	bpl.n	8006934 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006922:	68da      	ldr	r2, [r3, #12]
 8006924:	0650      	lsls	r0, r2, #25
 8006926:	d505      	bpl.n	8006934 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006928:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800692c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800692e:	4620      	mov	r0, r4
 8006930:	f7ff ff85 	bl	800683e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006934:	6823      	ldr	r3, [r4, #0]
 8006936:	691a      	ldr	r2, [r3, #16]
 8006938:	0691      	lsls	r1, r2, #26
 800693a:	d522      	bpl.n	8006982 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800693c:	68da      	ldr	r2, [r3, #12]
 800693e:	0692      	lsls	r2, r2, #26
 8006940:	d51f      	bpl.n	8006982 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006942:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006946:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006948:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800694a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800694e:	f000 b8ab 	b.w	8006aa8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006952:	f7ff ff71 	bl	8006838 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006956:	4620      	mov	r0, r4
 8006958:	f7ff ff70 	bl	800683c <HAL_TIM_PWM_PulseFinishedCallback>
 800695c:	e783      	b.n	8006866 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800695e:	f7ff ff6b 	bl	8006838 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006962:	4620      	mov	r0, r4
 8006964:	f7ff ff6a 	bl	800683c <HAL_TIM_PWM_PulseFinishedCallback>
 8006968:	e792      	b.n	8006890 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800696a:	f7ff ff65 	bl	8006838 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800696e:	4620      	mov	r0, r4
 8006970:	f7ff ff64 	bl	800683c <HAL_TIM_PWM_PulseFinishedCallback>
 8006974:	e7a0      	b.n	80068b8 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006976:	f7ff ff5f 	bl	8006838 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800697a:	4620      	mov	r0, r4
 800697c:	f7ff ff5e 	bl	800683c <HAL_TIM_PWM_PulseFinishedCallback>
 8006980:	e7af      	b.n	80068e2 <HAL_TIM_IRQHandler+0xa2>
}
 8006982:	bd10      	pop	{r4, pc}

08006984 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006984:	4a30      	ldr	r2, [pc, #192]	; (8006a48 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006986:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006988:	4290      	cmp	r0, r2
 800698a:	d012      	beq.n	80069b2 <TIM_Base_SetConfig+0x2e>
 800698c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006990:	d00f      	beq.n	80069b2 <TIM_Base_SetConfig+0x2e>
 8006992:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006996:	4290      	cmp	r0, r2
 8006998:	d00b      	beq.n	80069b2 <TIM_Base_SetConfig+0x2e>
 800699a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800699e:	4290      	cmp	r0, r2
 80069a0:	d007      	beq.n	80069b2 <TIM_Base_SetConfig+0x2e>
 80069a2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069a6:	4290      	cmp	r0, r2
 80069a8:	d003      	beq.n	80069b2 <TIM_Base_SetConfig+0x2e>
 80069aa:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80069ae:	4290      	cmp	r0, r2
 80069b0:	d119      	bne.n	80069e6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80069b2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80069b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80069b8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80069ba:	4a23      	ldr	r2, [pc, #140]	; (8006a48 <TIM_Base_SetConfig+0xc4>)
 80069bc:	4290      	cmp	r0, r2
 80069be:	d029      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069c0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80069c4:	d026      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069c6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80069ca:	4290      	cmp	r0, r2
 80069cc:	d022      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069ce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069d2:	4290      	cmp	r0, r2
 80069d4:	d01e      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069d6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069da:	4290      	cmp	r0, r2
 80069dc:	d01a      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069de:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80069e2:	4290      	cmp	r0, r2
 80069e4:	d016      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069e6:	4a19      	ldr	r2, [pc, #100]	; (8006a4c <TIM_Base_SetConfig+0xc8>)
 80069e8:	4290      	cmp	r0, r2
 80069ea:	d013      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069f0:	4290      	cmp	r0, r2
 80069f2:	d00f      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069f4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069f8:	4290      	cmp	r0, r2
 80069fa:	d00b      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 80069fc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006a00:	4290      	cmp	r0, r2
 8006a02:	d007      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 8006a04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a08:	4290      	cmp	r0, r2
 8006a0a:	d003      	beq.n	8006a14 <TIM_Base_SetConfig+0x90>
 8006a0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a10:	4290      	cmp	r0, r2
 8006a12:	d103      	bne.n	8006a1c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006a14:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006a16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006a1a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006a1c:	694a      	ldr	r2, [r1, #20]
 8006a1e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006a22:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006a24:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006a26:	688b      	ldr	r3, [r1, #8]
 8006a28:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006a2a:	680b      	ldr	r3, [r1, #0]
 8006a2c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006a2e:	4b06      	ldr	r3, [pc, #24]	; (8006a48 <TIM_Base_SetConfig+0xc4>)
 8006a30:	4298      	cmp	r0, r3
 8006a32:	d003      	beq.n	8006a3c <TIM_Base_SetConfig+0xb8>
 8006a34:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006a38:	4298      	cmp	r0, r3
 8006a3a:	d101      	bne.n	8006a40 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006a3c:	690b      	ldr	r3, [r1, #16]
 8006a3e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006a40:	2301      	movs	r3, #1
 8006a42:	6143      	str	r3, [r0, #20]
}
 8006a44:	4770      	bx	lr
 8006a46:	bf00      	nop
 8006a48:	40010000 	.word	0x40010000
 8006a4c:	40014000 	.word	0x40014000

08006a50 <HAL_TIM_Base_Init>:
{
 8006a50:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006a52:	4604      	mov	r4, r0
 8006a54:	b330      	cbz	r0, 8006aa4 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006a56:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006a5a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a5e:	b91b      	cbnz	r3, 8006a68 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006a60:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006a64:	f7ff feac 	bl	80067c0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006a68:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006a6a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006a6c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006a70:	1d21      	adds	r1, r4, #4
 8006a72:	f7ff ff87 	bl	8006984 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006a76:	2301      	movs	r3, #1
 8006a78:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006a7c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006a7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006a82:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006a86:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006a8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006a8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006a92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006a96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006a9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006a9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006aa2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006aa4:	2001      	movs	r0, #1
 8006aa6:	e7fc      	b.n	8006aa2 <HAL_TIM_Base_Init+0x52>

08006aa8 <HAL_TIMEx_CommutCallback>:
 8006aa8:	4770      	bx	lr

08006aaa <HAL_TIMEx_BreakCallback>:
 8006aaa:	4770      	bx	lr

08006aac <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006aac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006ab0:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006ab4:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006ab6:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8006aba:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006abe:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006ac2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8006ac6:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006ac8:	b9a2      	cbnz	r2, 8006af4 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006aca:	ea43 0209 	orr.w	r2, r3, r9
 8006ace:	432a      	orrs	r2, r5
 8006ad0:	ea42 0308 	orr.w	r3, r2, r8
 8006ad4:	6801      	ldr	r1, [r0, #0]
 8006ad6:	ea43 030e 	orr.w	r3, r3, lr
 8006ada:	ea43 030c 	orr.w	r3, r3, ip
 8006ade:	433b      	orrs	r3, r7
 8006ae0:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8006ae4:	4333      	orrs	r3, r6
 8006ae6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8006aea:	430b      	orrs	r3, r1
 8006aec:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006aee:	2000      	movs	r0, #0
 8006af0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006af4:	6802      	ldr	r2, [r0, #0]
 8006af6:	ea43 0309 	orr.w	r3, r3, r9
 8006afa:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006afe:	4313      	orrs	r3, r2
 8006b00:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006b02:	ea45 0308 	orr.w	r3, r5, r8
 8006b06:	6842      	ldr	r2, [r0, #4]
 8006b08:	ea43 030e 	orr.w	r3, r3, lr
 8006b0c:	ea43 030c 	orr.w	r3, r3, ip
 8006b10:	433b      	orrs	r3, r7
 8006b12:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8006b16:	4333      	orrs	r3, r6
 8006b18:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8006b1c:	4313      	orrs	r3, r2
 8006b1e:	6043      	str	r3, [r0, #4]
 8006b20:	e7e5      	b.n	8006aee <FMC_SDRAM_Init+0x42>

08006b22 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006b22:	68cb      	ldr	r3, [r1, #12]
 8006b24:	f103 3cff 	add.w	ip, r3, #4294967295
 8006b28:	694b      	ldr	r3, [r1, #20]
{
 8006b2a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006b2c:	680f      	ldr	r7, [r1, #0]
 8006b2e:	684c      	ldr	r4, [r1, #4]
 8006b30:	688e      	ldr	r6, [r1, #8]
 8006b32:	690d      	ldr	r5, [r1, #16]
 8006b34:	6989      	ldr	r1, [r1, #24]
 8006b36:	3b01      	subs	r3, #1
 8006b38:	051b      	lsls	r3, r3, #20
 8006b3a:	3c01      	subs	r4, #1
 8006b3c:	3e01      	subs	r6, #1
 8006b3e:	3d01      	subs	r5, #1
 8006b40:	3901      	subs	r1, #1
 8006b42:	3f01      	subs	r7, #1
 8006b44:	0124      	lsls	r4, r4, #4
 8006b46:	0236      	lsls	r6, r6, #8
 8006b48:	042d      	lsls	r5, r5, #16
 8006b4a:	0609      	lsls	r1, r1, #24
 8006b4c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006b50:	b95a      	cbnz	r2, 8006b6a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006b52:	433b      	orrs	r3, r7
 8006b54:	4323      	orrs	r3, r4
 8006b56:	6882      	ldr	r2, [r0, #8]
 8006b58:	4333      	orrs	r3, r6
 8006b5a:	432b      	orrs	r3, r5
 8006b5c:	430b      	orrs	r3, r1
 8006b5e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8006b62:	4313      	orrs	r3, r2
 8006b64:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006b66:	2000      	movs	r0, #0
 8006b68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006b6a:	6882      	ldr	r2, [r0, #8]
 8006b6c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006b70:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8006b74:	431a      	orrs	r2, r3
 8006b76:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006b78:	ea44 0306 	orr.w	r3, r4, r6
 8006b7c:	68c2      	ldr	r2, [r0, #12]
 8006b7e:	433b      	orrs	r3, r7
 8006b80:	432b      	orrs	r3, r5
 8006b82:	430b      	orrs	r3, r1
 8006b84:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8006b88:	4313      	orrs	r3, r2
 8006b8a:	60c3      	str	r3, [r0, #12]
 8006b8c:	e7eb      	b.n	8006b66 <FMC_SDRAM_Timing_Init+0x44>

08006b8e <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006b8e:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006b92:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006b96:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8006b9a:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006b9e:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006ba0:	2300      	movs	r3, #0
 8006ba2:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006ba4:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006ba6:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006ba8:	4618      	mov	r0, r3
 8006baa:	4770      	bx	lr

08006bac <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006bac:	b570      	push	{r4, r5, r6, lr}
 8006bae:	4604      	mov	r4, r0
 8006bb0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006bb2:	6902      	ldr	r2, [r0, #16]
 8006bb4:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006bb8:	4303      	orrs	r3, r0
 8006bba:	68c8      	ldr	r0, [r1, #12]
 8006bbc:	0d92      	lsrs	r2, r2, #22
 8006bbe:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8006bc2:	0592      	lsls	r2, r2, #22
 8006bc4:	4313      	orrs	r3, r2
 8006bc6:	688a      	ldr	r2, [r1, #8]
 8006bc8:	3a01      	subs	r2, #1
 8006bca:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006bce:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006bd0:	f7fd f83a 	bl	8003c48 <HAL_GetTick>
 8006bd4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006bd6:	69a3      	ldr	r3, [r4, #24]
 8006bd8:	f013 0320 	ands.w	r3, r3, #32
 8006bdc:	d101      	bne.n	8006be2 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8006bde:	4618      	mov	r0, r3
 8006be0:	e003      	b.n	8006bea <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8006be2:	1c6b      	adds	r3, r5, #1
 8006be4:	d0f7      	beq.n	8006bd6 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006be6:	b90d      	cbnz	r5, 8006bec <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8006be8:	2003      	movs	r0, #3
}
 8006bea:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006bec:	f7fd f82c 	bl	8003c48 <HAL_GetTick>
 8006bf0:	1b80      	subs	r0, r0, r6
 8006bf2:	42a8      	cmp	r0, r5
 8006bf4:	d9ef      	bls.n	8006bd6 <FMC_SDRAM_SendCommand+0x2a>
 8006bf6:	e7f7      	b.n	8006be8 <FMC_SDRAM_SendCommand+0x3c>

08006bf8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006bf8:	6943      	ldr	r3, [r0, #20]
 8006bfa:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006bfe:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8006c02:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006c06:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8006c08:	2000      	movs	r0, #0
 8006c0a:	4770      	bx	lr

08006c0c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006c0c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006c0e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006c12:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006c14:	f001 fe3e 	bl	8008894 <xTaskGetSchedulerState>
 8006c18:	2801      	cmp	r0, #1
 8006c1a:	d003      	beq.n	8006c24 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006c1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006c20:	f000 bbe0 	b.w	80073e4 <xPortSysTickHandler>
}
 8006c24:	bd08      	pop	{r3, pc}
	...

08006c28 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006c28:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006c2c:	b92b      	cbnz	r3, 8006c3a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006c2e:	4b06      	ldr	r3, [pc, #24]	; (8006c48 <osKernelInitialize+0x20>)
 8006c30:	6818      	ldr	r0, [r3, #0]
 8006c32:	b928      	cbnz	r0, 8006c40 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006c34:	2201      	movs	r2, #1
 8006c36:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006c38:	4770      	bx	lr
    stat = osErrorISR;
 8006c3a:	f06f 0005 	mvn.w	r0, #5
 8006c3e:	4770      	bx	lr
    } else {
      stat = osError;
 8006c40:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006c44:	4770      	bx	lr
 8006c46:	bf00      	nop
 8006c48:	20001a34 	.word	0x20001a34

08006c4c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006c4c:	b510      	push	{r4, lr}
 8006c4e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006c52:	b95c      	cbnz	r4, 8006c6c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006c54:	4b08      	ldr	r3, [pc, #32]	; (8006c78 <osKernelStart+0x2c>)
 8006c56:	681a      	ldr	r2, [r3, #0]
 8006c58:	2a01      	cmp	r2, #1
 8006c5a:	d10a      	bne.n	8006c72 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006c5c:	4a07      	ldr	r2, [pc, #28]	; (8006c7c <osKernelStart+0x30>)
 8006c5e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006c60:	2202      	movs	r2, #2
 8006c62:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006c64:	f001 fcba 	bl	80085dc <vTaskStartScheduler>
      stat = osOK;
 8006c68:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006c6a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006c6c:	f06f 0005 	mvn.w	r0, #5
 8006c70:	e7fb      	b.n	8006c6a <osKernelStart+0x1e>
      stat = osError;
 8006c72:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006c76:	e7f8      	b.n	8006c6a <osKernelStart+0x1e>
 8006c78:	20001a34 	.word	0x20001a34
 8006c7c:	e000ed00 	.word	0xe000ed00

08006c80 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c82:	b087      	sub	sp, #28
 8006c84:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006c86:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006c88:	460b      	mov	r3, r1
  hTask = NULL;
 8006c8a:	9205      	str	r2, [sp, #20]
 8006c8c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006c90:	b9d2      	cbnz	r2, 8006cc8 <osThreadNew+0x48>
 8006c92:	b1c8      	cbz	r0, 8006cc8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006c94:	2c00      	cmp	r4, #0
 8006c96:	d02f      	beq.n	8006cf8 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006c98:	69a5      	ldr	r5, [r4, #24]
 8006c9a:	2d00      	cmp	r5, #0
 8006c9c:	bf08      	it	eq
 8006c9e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006ca0:	1e69      	subs	r1, r5, #1
 8006ca2:	2937      	cmp	r1, #55	; 0x37
 8006ca4:	46ac      	mov	ip, r5
 8006ca6:	d82b      	bhi.n	8006d00 <osThreadNew+0x80>
 8006ca8:	6861      	ldr	r1, [r4, #4]
 8006caa:	07c9      	lsls	r1, r1, #31
 8006cac:	d428      	bmi.n	8006d00 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006cae:	6966      	ldr	r6, [r4, #20]
 8006cb0:	b16e      	cbz	r6, 8006cce <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006cb2:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006cb4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006cb8:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006cba:	b157      	cbz	r7, 8006cd2 <osThreadNew+0x52>
 8006cbc:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006cc0:	d902      	bls.n	8006cc8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006cc2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006cc4:	b104      	cbz	r4, 8006cc8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006cc6:	b9ee      	cbnz	r6, 8006d04 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006cc8:	9805      	ldr	r0, [sp, #20]
}
 8006cca:	b007      	add	sp, #28
 8006ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006cce:	2280      	movs	r2, #128	; 0x80
 8006cd0:	e7f0      	b.n	8006cb4 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006cd2:	f1be 0f00 	cmp.w	lr, #0
 8006cd6:	d1f7      	bne.n	8006cc8 <osThreadNew+0x48>
      if (mem == 0) {
 8006cd8:	6924      	ldr	r4, [r4, #16]
 8006cda:	2c00      	cmp	r4, #0
 8006cdc:	d1f4      	bne.n	8006cc8 <osThreadNew+0x48>
 8006cde:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006ce0:	a905      	add	r1, sp, #20
 8006ce2:	e9cd c100 	strd	ip, r1, [sp]
 8006ce6:	b292      	uxth	r2, r2
 8006ce8:	4621      	mov	r1, r4
 8006cea:	f001 faf2 	bl	80082d2 <xTaskCreate>
 8006cee:	2801      	cmp	r0, #1
            hTask = NULL;
 8006cf0:	bf1c      	itt	ne
 8006cf2:	2300      	movne	r3, #0
 8006cf4:	9305      	strne	r3, [sp, #20]
 8006cf6:	e7e7      	b.n	8006cc8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006cf8:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006cfc:	2280      	movs	r2, #128	; 0x80
 8006cfe:	e7ef      	b.n	8006ce0 <osThreadNew+0x60>
        return (NULL);
 8006d00:	4610      	mov	r0, r2
 8006d02:	e7e2      	b.n	8006cca <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006d04:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006d08:	9500      	str	r5, [sp, #0]
 8006d0a:	f001 faaa 	bl	8008262 <xTaskCreateStatic>
 8006d0e:	9005      	str	r0, [sp, #20]
 8006d10:	e7da      	b.n	8006cc8 <osThreadNew+0x48>

08006d12 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006d12:	b510      	push	{r4, lr}
 8006d14:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006d18:	b924      	cbnz	r4, 8006d24 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006d1a:	b110      	cbz	r0, 8006d22 <osDelay+0x10>
      vTaskDelay(ticks);
 8006d1c:	f001 fc1e 	bl	800855c <vTaskDelay>
    stat = osOK;
 8006d20:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006d22:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006d24:	f06f 0005 	mvn.w	r0, #5
 8006d28:	e7fb      	b.n	8006d22 <osDelay+0x10>

08006d2a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006d2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006d2c:	4604      	mov	r4, r0
 8006d2e:	460e      	mov	r6, r1
 8006d30:	4615      	mov	r5, r2
 8006d32:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006d36:	b11a      	cbz	r2, 8006d40 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006d38:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006d3a:	4620      	mov	r0, r4
 8006d3c:	b003      	add	sp, #12
 8006d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006d40:	2800      	cmp	r0, #0
 8006d42:	d0f9      	beq.n	8006d38 <osSemaphoreNew+0xe>
 8006d44:	4288      	cmp	r0, r1
 8006d46:	d3f7      	bcc.n	8006d38 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006d48:	b1e5      	cbz	r5, 8006d84 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006d4a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006d4e:	b1bb      	cbz	r3, 8006d80 <osSemaphoreNew+0x56>
 8006d50:	2f4f      	cmp	r7, #79	; 0x4f
 8006d52:	d9f1      	bls.n	8006d38 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006d54:	2801      	cmp	r0, #1
 8006d56:	d12a      	bne.n	8006dae <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006d58:	2103      	movs	r1, #3
 8006d5a:	9100      	str	r1, [sp, #0]
 8006d5c:	4611      	mov	r1, r2
 8006d5e:	f000 fcea 	bl	8007736 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006d62:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006d64:	2800      	cmp	r0, #0
 8006d66:	d0e7      	beq.n	8006d38 <osSemaphoreNew+0xe>
 8006d68:	b1de      	cbz	r6, 8006da2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006d6a:	2300      	movs	r3, #0
 8006d6c:	461a      	mov	r2, r3
 8006d6e:	4619      	mov	r1, r3
 8006d70:	f000 fd96 	bl	80078a0 <xQueueGenericSend>
 8006d74:	2801      	cmp	r0, #1
 8006d76:	d014      	beq.n	8006da2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006d78:	4620      	mov	r0, r4
 8006d7a:	f001 f8d1 	bl	8007f20 <vQueueDelete>
 8006d7e:	e7db      	b.n	8006d38 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006d80:	2f00      	cmp	r7, #0
 8006d82:	d1d9      	bne.n	8006d38 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006d84:	2c01      	cmp	r4, #1
 8006d86:	d105      	bne.n	8006d94 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006d88:	2203      	movs	r2, #3
 8006d8a:	2100      	movs	r1, #0
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f000 fd20 	bl	80077d2 <xQueueGenericCreate>
 8006d92:	e7e6      	b.n	8006d62 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006d94:	4620      	mov	r0, r4
 8006d96:	4631      	mov	r1, r6
 8006d98:	f000 fd64 	bl	8007864 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006d9c:	4604      	mov	r4, r0
 8006d9e:	2800      	cmp	r0, #0
 8006da0:	d0ca      	beq.n	8006d38 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006da2:	b955      	cbnz	r5, 8006dba <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006da4:	4629      	mov	r1, r5
 8006da6:	4620      	mov	r0, r4
 8006da8:	f001 f894 	bl	8007ed4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006dac:	e7c5      	b.n	8006d3a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006dae:	461a      	mov	r2, r3
 8006db0:	f000 fd36 	bl	8007820 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006db4:	4604      	mov	r4, r0
 8006db6:	2800      	cmp	r0, #0
 8006db8:	d0be      	beq.n	8006d38 <osSemaphoreNew+0xe>
          name = attr->name;
 8006dba:	682d      	ldr	r5, [r5, #0]
 8006dbc:	e7f2      	b.n	8006da4 <osSemaphoreNew+0x7a>

08006dbe <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006dbe:	b513      	push	{r0, r1, r4, lr}
 8006dc0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006dc2:	b308      	cbz	r0, 8006e08 <osSemaphoreAcquire+0x4a>
 8006dc4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006dc8:	b1b3      	cbz	r3, 8006df8 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8006dca:	b9e9      	cbnz	r1, 8006e08 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006dcc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006dce:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006dd0:	f001 f831 	bl	8007e36 <xQueueReceiveFromISR>
 8006dd4:	2801      	cmp	r0, #1
 8006dd6:	d114      	bne.n	8006e02 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006dd8:	9b01      	ldr	r3, [sp, #4]
 8006dda:	b913      	cbnz	r3, 8006de2 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006ddc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006dde:	b002      	add	sp, #8
 8006de0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006de2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006de6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006dea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006dee:	f3bf 8f4f 	dsb	sy
 8006df2:	f3bf 8f6f 	isb	sy
 8006df6:	e7f1      	b.n	8006ddc <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006df8:	f000 ff5a 	bl	8007cb0 <xQueueSemaphoreTake>
 8006dfc:	2801      	cmp	r0, #1
 8006dfe:	d0ed      	beq.n	8006ddc <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006e00:	b92c      	cbnz	r4, 8006e0e <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8006e02:	f06f 0002 	mvn.w	r0, #2
 8006e06:	e7ea      	b.n	8006dde <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006e08:	f06f 0003 	mvn.w	r0, #3
 8006e0c:	e7e7      	b.n	8006dde <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006e0e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006e12:	e7e4      	b.n	8006dde <osSemaphoreAcquire+0x20>

08006e14 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006e14:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006e16:	b310      	cbz	r0, 8006e5e <osSemaphoreRelease+0x4a>
 8006e18:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006e1c:	b1b3      	cbz	r3, 8006e4c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8006e1e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006e20:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006e22:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006e24:	f000 fe51 	bl	8007aca <xQueueGiveFromISR>
 8006e28:	2801      	cmp	r0, #1
 8006e2a:	d115      	bne.n	8006e58 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006e2c:	9b01      	ldr	r3, [sp, #4]
 8006e2e:	b913      	cbnz	r3, 8006e36 <osSemaphoreRelease+0x22>
  stat = osOK;
 8006e30:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006e32:	b002      	add	sp, #8
 8006e34:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006e36:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006e3a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006e42:	f3bf 8f4f 	dsb	sy
 8006e46:	f3bf 8f6f 	isb	sy
 8006e4a:	e7f1      	b.n	8006e30 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006e4c:	461a      	mov	r2, r3
 8006e4e:	4619      	mov	r1, r3
 8006e50:	f000 fd26 	bl	80078a0 <xQueueGenericSend>
 8006e54:	2801      	cmp	r0, #1
 8006e56:	d0eb      	beq.n	8006e30 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006e58:	f06f 0002 	mvn.w	r0, #2
 8006e5c:	e7e9      	b.n	8006e32 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006e5e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006e62:	e7e6      	b.n	8006e32 <osSemaphoreRelease+0x1e>

08006e64 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006e64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e66:	4605      	mov	r5, r0
 8006e68:	460e      	mov	r6, r1
 8006e6a:	4614      	mov	r4, r2
 8006e6c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006e70:	b11f      	cbz	r7, 8006e7a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006e72:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006e74:	4628      	mov	r0, r5
 8006e76:	b003      	add	sp, #12
 8006e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006e7a:	2800      	cmp	r0, #0
 8006e7c:	d0f9      	beq.n	8006e72 <osMessageQueueNew+0xe>
 8006e7e:	2900      	cmp	r1, #0
 8006e80:	d0f7      	beq.n	8006e72 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006e82:	b1da      	cbz	r2, 8006ebc <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006e84:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006e88:	b183      	cbz	r3, 8006eac <osMessageQueueNew+0x48>
 8006e8a:	2a4f      	cmp	r2, #79	; 0x4f
 8006e8c:	d9f1      	bls.n	8006e72 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006e8e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006e90:	2a00      	cmp	r2, #0
 8006e92:	d0ee      	beq.n	8006e72 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006e94:	6966      	ldr	r6, [r4, #20]
 8006e96:	434d      	muls	r5, r1
 8006e98:	42ae      	cmp	r6, r5
 8006e9a:	d3ea      	bcc.n	8006e72 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006e9c:	9700      	str	r7, [sp, #0]
 8006e9e:	f000 fc4a 	bl	8007736 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006ea2:	4605      	mov	r5, r0
 8006ea4:	2800      	cmp	r0, #0
 8006ea6:	d0e4      	beq.n	8006e72 <osMessageQueueNew+0xe>
        name = attr->name;
 8006ea8:	6824      	ldr	r4, [r4, #0]
 8006eaa:	e011      	b.n	8006ed0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006eac:	2a00      	cmp	r2, #0
 8006eae:	d1e0      	bne.n	8006e72 <osMessageQueueNew+0xe>
 8006eb0:	6923      	ldr	r3, [r4, #16]
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	d1dd      	bne.n	8006e72 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006eb6:	6963      	ldr	r3, [r4, #20]
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d1da      	bne.n	8006e72 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006ebc:	4628      	mov	r0, r5
 8006ebe:	2200      	movs	r2, #0
 8006ec0:	4631      	mov	r1, r6
 8006ec2:	f000 fc86 	bl	80077d2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006ec6:	4605      	mov	r5, r0
 8006ec8:	2800      	cmp	r0, #0
 8006eca:	d0d2      	beq.n	8006e72 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006ecc:	2c00      	cmp	r4, #0
 8006ece:	d1eb      	bne.n	8006ea8 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006ed0:	4621      	mov	r1, r4
 8006ed2:	4628      	mov	r0, r5
 8006ed4:	f000 fffe 	bl	8007ed4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006ed8:	e7cc      	b.n	8006e74 <osMessageQueueNew+0x10>

08006eda <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006eda:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006edc:	461c      	mov	r4, r3
 8006ede:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006ee2:	b1c6      	cbz	r6, 8006f16 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006ee4:	b318      	cbz	r0, 8006f2e <osMessageQueuePut+0x54>
 8006ee6:	b311      	cbz	r1, 8006f2e <osMessageQueuePut+0x54>
 8006ee8:	bb0b      	cbnz	r3, 8006f2e <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006eea:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006eec:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006eee:	f000 fd8a 	bl	8007a06 <xQueueGenericSendFromISR>
 8006ef2:	2801      	cmp	r0, #1
 8006ef4:	d118      	bne.n	8006f28 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006ef6:	9b01      	ldr	r3, [sp, #4]
 8006ef8:	b913      	cbnz	r3, 8006f00 <osMessageQueuePut+0x26>
  stat = osOK;
 8006efa:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006efc:	b002      	add	sp, #8
 8006efe:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006f00:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f04:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f08:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006f0c:	f3bf 8f4f 	dsb	sy
 8006f10:	f3bf 8f6f 	isb	sy
 8006f14:	e7f1      	b.n	8006efa <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006f16:	b150      	cbz	r0, 8006f2e <osMessageQueuePut+0x54>
 8006f18:	b149      	cbz	r1, 8006f2e <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006f1a:	4633      	mov	r3, r6
 8006f1c:	4622      	mov	r2, r4
 8006f1e:	f000 fcbf 	bl	80078a0 <xQueueGenericSend>
 8006f22:	2801      	cmp	r0, #1
 8006f24:	d0e9      	beq.n	8006efa <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006f26:	b92c      	cbnz	r4, 8006f34 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8006f28:	f06f 0002 	mvn.w	r0, #2
 8006f2c:	e7e6      	b.n	8006efc <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006f2e:	f06f 0003 	mvn.w	r0, #3
 8006f32:	e7e3      	b.n	8006efc <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006f34:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006f38:	e7e0      	b.n	8006efc <osMessageQueuePut+0x22>

08006f3a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006f3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006f3c:	461c      	mov	r4, r3
 8006f3e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006f42:	b1c3      	cbz	r3, 8006f76 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006f44:	b310      	cbz	r0, 8006f8c <osMessageQueueGet+0x52>
 8006f46:	b309      	cbz	r1, 8006f8c <osMessageQueueGet+0x52>
 8006f48:	bb04      	cbnz	r4, 8006f8c <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006f4a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006f4c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006f4e:	f000 ff72 	bl	8007e36 <xQueueReceiveFromISR>
 8006f52:	2801      	cmp	r0, #1
 8006f54:	d117      	bne.n	8006f86 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006f56:	9b01      	ldr	r3, [sp, #4]
 8006f58:	b913      	cbnz	r3, 8006f60 <osMessageQueueGet+0x26>
  stat = osOK;
 8006f5a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006f5c:	b003      	add	sp, #12
 8006f5e:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006f60:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f64:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f68:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006f6c:	f3bf 8f4f 	dsb	sy
 8006f70:	f3bf 8f6f 	isb	sy
 8006f74:	e7f1      	b.n	8006f5a <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006f76:	b148      	cbz	r0, 8006f8c <osMessageQueueGet+0x52>
 8006f78:	b141      	cbz	r1, 8006f8c <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006f7a:	4622      	mov	r2, r4
 8006f7c:	f000 fdf9 	bl	8007b72 <xQueueReceive>
 8006f80:	2801      	cmp	r0, #1
 8006f82:	d0ea      	beq.n	8006f5a <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006f84:	b92c      	cbnz	r4, 8006f92 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8006f86:	f06f 0002 	mvn.w	r0, #2
 8006f8a:	e7e7      	b.n	8006f5c <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8006f8c:	f06f 0003 	mvn.w	r0, #3
 8006f90:	e7e4      	b.n	8006f5c <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006f92:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006f96:	e7e1      	b.n	8006f5c <osMessageQueueGet+0x22>

08006f98 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006f98:	4b03      	ldr	r3, [pc, #12]	; (8006fa8 <vApplicationGetIdleTaskMemory+0x10>)
 8006f9a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006f9c:	4b03      	ldr	r3, [pc, #12]	; (8006fac <vApplicationGetIdleTaskMemory+0x14>)
 8006f9e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006fa0:	2380      	movs	r3, #128	; 0x80
 8006fa2:	6013      	str	r3, [r2, #0]
}
 8006fa4:	4770      	bx	lr
 8006fa6:	bf00      	nop
 8006fa8:	200019d4 	.word	0x200019d4
 8006fac:	200017d4 	.word	0x200017d4

08006fb0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006fb0:	4b03      	ldr	r3, [pc, #12]	; (8006fc0 <vApplicationGetTimerTaskMemory+0x10>)
 8006fb2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006fb4:	4b03      	ldr	r3, [pc, #12]	; (8006fc4 <vApplicationGetTimerTaskMemory+0x14>)
 8006fb6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006fb8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006fbc:	6013      	str	r3, [r2, #0]
}
 8006fbe:	4770      	bx	lr
 8006fc0:	20001e38 	.word	0x20001e38
 8006fc4:	20001a38 	.word	0x20001a38

08006fc8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006fc8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006fca:	4b0f      	ldr	r3, [pc, #60]	; (8007008 <prvInsertBlockIntoFreeList+0x40>)
 8006fcc:	461a      	mov	r2, r3
 8006fce:	681b      	ldr	r3, [r3, #0]
 8006fd0:	4283      	cmp	r3, r0
 8006fd2:	d3fb      	bcc.n	8006fcc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006fd4:	6854      	ldr	r4, [r2, #4]
 8006fd6:	1911      	adds	r1, r2, r4
 8006fd8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006fda:	bf01      	itttt	eq
 8006fdc:	6841      	ldreq	r1, [r0, #4]
 8006fde:	4610      	moveq	r0, r2
 8006fe0:	1909      	addeq	r1, r1, r4
 8006fe2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006fe4:	6844      	ldr	r4, [r0, #4]
 8006fe6:	1901      	adds	r1, r0, r4
 8006fe8:	428b      	cmp	r3, r1
 8006fea:	d107      	bne.n	8006ffc <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006fec:	4907      	ldr	r1, [pc, #28]	; (800700c <prvInsertBlockIntoFreeList+0x44>)
 8006fee:	6809      	ldr	r1, [r1, #0]
 8006ff0:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006ff2:	bf1f      	itttt	ne
 8006ff4:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006ff6:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006ff8:	1909      	addne	r1, r1, r4
 8006ffa:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006ffc:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006ffe:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007000:	bf18      	it	ne
 8007002:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007004:	bd10      	pop	{r4, pc}
 8007006:	bf00      	nop
 8007008:	20009eb0 	.word	0x20009eb0
 800700c:	20001e98 	.word	0x20001e98

08007010 <pvPortMalloc>:
{
 8007010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007014:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007016:	f001 f989 	bl	800832c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800701a:	4842      	ldr	r0, [pc, #264]	; (8007124 <pvPortMalloc+0x114>)
 800701c:	4d42      	ldr	r5, [pc, #264]	; (8007128 <pvPortMalloc+0x118>)
 800701e:	6803      	ldr	r3, [r0, #0]
 8007020:	bb0b      	cbnz	r3, 8007066 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007022:	4942      	ldr	r1, [pc, #264]	; (800712c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007024:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007026:	bf1f      	itttt	ne
 8007028:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800702a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800702e:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8007032:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007034:	bf14      	ite	ne
 8007036:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007038:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800703c:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800703e:	4e3c      	ldr	r6, [pc, #240]	; (8007130 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8007040:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007042:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007046:	2300      	movs	r3, #0
 8007048:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800704a:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800704c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007050:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007052:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8007056:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007058:	4a36      	ldr	r2, [pc, #216]	; (8007134 <pvPortMalloc+0x124>)
 800705a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800705c:	4a36      	ldr	r2, [pc, #216]	; (8007138 <pvPortMalloc+0x128>)
 800705e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007060:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007064:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007066:	682f      	ldr	r7, [r5, #0]
 8007068:	4227      	tst	r7, r4
 800706a:	d155      	bne.n	8007118 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800706c:	2c00      	cmp	r4, #0
 800706e:	d046      	beq.n	80070fe <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007070:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007074:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007076:	bf1c      	itt	ne
 8007078:	f023 0307 	bicne.w	r3, r3, #7
 800707c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800707e:	2b00      	cmp	r3, #0
 8007080:	d04a      	beq.n	8007118 <pvPortMalloc+0x108>
 8007082:	4c2d      	ldr	r4, [pc, #180]	; (8007138 <pvPortMalloc+0x128>)
 8007084:	6826      	ldr	r6, [r4, #0]
 8007086:	429e      	cmp	r6, r3
 8007088:	d346      	bcc.n	8007118 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800708a:	4a29      	ldr	r2, [pc, #164]	; (8007130 <pvPortMalloc+0x120>)
 800708c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800708e:	6869      	ldr	r1, [r5, #4]
 8007090:	4299      	cmp	r1, r3
 8007092:	d204      	bcs.n	800709e <pvPortMalloc+0x8e>
 8007094:	f8d5 c000 	ldr.w	ip, [r5]
 8007098:	f1bc 0f00 	cmp.w	ip, #0
 800709c:	d115      	bne.n	80070ca <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800709e:	6800      	ldr	r0, [r0, #0]
 80070a0:	42a8      	cmp	r0, r5
 80070a2:	d039      	beq.n	8007118 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80070a4:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80070a6:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80070a8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80070ac:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80070ae:	2910      	cmp	r1, #16
 80070b0:	d912      	bls.n	80070d8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80070b2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80070b4:	0742      	lsls	r2, r0, #29
 80070b6:	d00b      	beq.n	80070d0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80070b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070bc:	f383 8811 	msr	BASEPRI, r3
 80070c0:	f3bf 8f6f 	isb	sy
 80070c4:	f3bf 8f4f 	dsb	sy
 80070c8:	e7fe      	b.n	80070c8 <pvPortMalloc+0xb8>
 80070ca:	462a      	mov	r2, r5
 80070cc:	4665      	mov	r5, ip
 80070ce:	e7de      	b.n	800708e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80070d0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80070d2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80070d4:	f7ff ff78 	bl	8006fc8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80070d8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80070da:	4916      	ldr	r1, [pc, #88]	; (8007134 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 80070dc:	4a17      	ldr	r2, [pc, #92]	; (800713c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80070de:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80070e0:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80070e2:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80070e4:	2300      	movs	r3, #0
 80070e6:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80070e8:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80070ea:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80070ec:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80070ee:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80070f2:	bf38      	it	cc
 80070f4:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80070f6:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80070fa:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80070fc:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80070fe:	f001 f9b9 	bl	8008474 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007102:	0763      	lsls	r3, r4, #29
 8007104:	d00a      	beq.n	800711c <pvPortMalloc+0x10c>
 8007106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800710a:	f383 8811 	msr	BASEPRI, r3
 800710e:	f3bf 8f6f 	isb	sy
 8007112:	f3bf 8f4f 	dsb	sy
 8007116:	e7fe      	b.n	8007116 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007118:	2400      	movs	r4, #0
 800711a:	e7f0      	b.n	80070fe <pvPortMalloc+0xee>
}
 800711c:	4620      	mov	r0, r4
 800711e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007122:	bf00      	nop
 8007124:	20001e98 	.word	0x20001e98
 8007128:	20009e9c 	.word	0x20009e9c
 800712c:	20001e9c 	.word	0x20001e9c
 8007130:	20009eb0 	.word	0x20009eb0
 8007134:	20009ea4 	.word	0x20009ea4
 8007138:	20009ea0 	.word	0x20009ea0
 800713c:	20009ea8 	.word	0x20009ea8

08007140 <vPortFree>:
{
 8007140:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007142:	4604      	mov	r4, r0
 8007144:	b390      	cbz	r0, 80071ac <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007146:	4a1a      	ldr	r2, [pc, #104]	; (80071b0 <vPortFree+0x70>)
 8007148:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800714c:	6812      	ldr	r2, [r2, #0]
 800714e:	4213      	tst	r3, r2
 8007150:	d108      	bne.n	8007164 <vPortFree+0x24>
 8007152:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007156:	f383 8811 	msr	BASEPRI, r3
 800715a:	f3bf 8f6f 	isb	sy
 800715e:	f3bf 8f4f 	dsb	sy
 8007162:	e7fe      	b.n	8007162 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007164:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007168:	b141      	cbz	r1, 800717c <vPortFree+0x3c>
 800716a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800716e:	f383 8811 	msr	BASEPRI, r3
 8007172:	f3bf 8f6f 	isb	sy
 8007176:	f3bf 8f4f 	dsb	sy
 800717a:	e7fe      	b.n	800717a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800717c:	ea23 0302 	bic.w	r3, r3, r2
 8007180:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007184:	f001 f8d2 	bl	800832c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007188:	4a0a      	ldr	r2, [pc, #40]	; (80071b4 <vPortFree+0x74>)
 800718a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800718e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007190:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007194:	440b      	add	r3, r1
 8007196:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007198:	f7ff ff16 	bl	8006fc8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800719c:	4a06      	ldr	r2, [pc, #24]	; (80071b8 <vPortFree+0x78>)
 800719e:	6813      	ldr	r3, [r2, #0]
}
 80071a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80071a4:	3301      	adds	r3, #1
 80071a6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80071a8:	f001 b964 	b.w	8008474 <xTaskResumeAll>
}
 80071ac:	bd10      	pop	{r4, pc}
 80071ae:	bf00      	nop
 80071b0:	20009e9c 	.word	0x20009e9c
 80071b4:	20009ea0 	.word	0x20009ea0
 80071b8:	20009eac 	.word	0x20009eac

080071bc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80071bc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80071c0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80071c4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80071c8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80071ca:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80071cc:	2300      	movs	r3, #0
 80071ce:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80071d0:	4770      	bx	lr

080071d2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80071d2:	2300      	movs	r3, #0
 80071d4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80071d6:	4770      	bx	lr

080071d8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80071d8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80071da:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80071dc:	689a      	ldr	r2, [r3, #8]
 80071de:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80071e0:	689a      	ldr	r2, [r3, #8]
 80071e2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80071e4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80071e6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80071e8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80071ea:	3301      	adds	r3, #1
 80071ec:	6003      	str	r3, [r0, #0]
}
 80071ee:	4770      	bx	lr

080071f0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80071f0:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80071f2:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80071f4:	1c63      	adds	r3, r4, #1
 80071f6:	d10a      	bne.n	800720e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80071f8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80071fa:	685a      	ldr	r2, [r3, #4]
 80071fc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80071fe:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007200:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007202:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007204:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007206:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007208:	3301      	adds	r3, #1
 800720a:	6003      	str	r3, [r0, #0]
}
 800720c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800720e:	f100 0208 	add.w	r2, r0, #8
 8007212:	4613      	mov	r3, r2
 8007214:	6852      	ldr	r2, [r2, #4]
 8007216:	6815      	ldr	r5, [r2, #0]
 8007218:	42a5      	cmp	r5, r4
 800721a:	d9fa      	bls.n	8007212 <vListInsert+0x22>
 800721c:	e7ed      	b.n	80071fa <vListInsert+0xa>

0800721e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800721e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007222:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007224:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007226:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007228:	6859      	ldr	r1, [r3, #4]
 800722a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800722c:	bf08      	it	eq
 800722e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007230:	2200      	movs	r2, #0
 8007232:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007234:	681a      	ldr	r2, [r3, #0]
 8007236:	3a01      	subs	r2, #1
 8007238:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800723a:	6818      	ldr	r0, [r3, #0]
}
 800723c:	4770      	bx	lr
	...

08007240 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007240:	4808      	ldr	r0, [pc, #32]	; (8007264 <prvPortStartFirstTask+0x24>)
 8007242:	6800      	ldr	r0, [r0, #0]
 8007244:	6800      	ldr	r0, [r0, #0]
 8007246:	f380 8808 	msr	MSP, r0
 800724a:	f04f 0000 	mov.w	r0, #0
 800724e:	f380 8814 	msr	CONTROL, r0
 8007252:	b662      	cpsie	i
 8007254:	b661      	cpsie	f
 8007256:	f3bf 8f4f 	dsb	sy
 800725a:	f3bf 8f6f 	isb	sy
 800725e:	df00      	svc	0
 8007260:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007262:	0000      	.short	0x0000
 8007264:	e000ed08 	.word	0xe000ed08

08007268 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007268:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007278 <vPortEnableVFP+0x10>
 800726c:	6801      	ldr	r1, [r0, #0]
 800726e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007272:	6001      	str	r1, [r0, #0]
 8007274:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007276:	0000      	.short	0x0000
 8007278:	e000ed88 	.word	0xe000ed88

0800727c <prvTaskExitError>:
{
 800727c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800727e:	2300      	movs	r3, #0
 8007280:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007282:	4b0d      	ldr	r3, [pc, #52]	; (80072b8 <prvTaskExitError+0x3c>)
 8007284:	681b      	ldr	r3, [r3, #0]
 8007286:	3301      	adds	r3, #1
 8007288:	d008      	beq.n	800729c <prvTaskExitError+0x20>
 800728a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800728e:	f383 8811 	msr	BASEPRI, r3
 8007292:	f3bf 8f6f 	isb	sy
 8007296:	f3bf 8f4f 	dsb	sy
 800729a:	e7fe      	b.n	800729a <prvTaskExitError+0x1e>
 800729c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072a0:	f383 8811 	msr	BASEPRI, r3
 80072a4:	f3bf 8f6f 	isb	sy
 80072a8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80072ac:	9b01      	ldr	r3, [sp, #4]
 80072ae:	2b00      	cmp	r3, #0
 80072b0:	d0fc      	beq.n	80072ac <prvTaskExitError+0x30>
}
 80072b2:	b002      	add	sp, #8
 80072b4:	4770      	bx	lr
 80072b6:	bf00      	nop
 80072b8:	2000005c 	.word	0x2000005c

080072bc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80072bc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80072c0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80072c4:	4b07      	ldr	r3, [pc, #28]	; (80072e4 <pxPortInitialiseStack+0x28>)
 80072c6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80072ca:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80072ce:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80072d2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80072d6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80072da:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80072de:	3844      	subs	r0, #68	; 0x44
 80072e0:	4770      	bx	lr
 80072e2:	bf00      	nop
 80072e4:	0800727d 	.word	0x0800727d
	...

080072f0 <SVC_Handler>:
	__asm volatile (
 80072f0:	4b07      	ldr	r3, [pc, #28]	; (8007310 <pxCurrentTCBConst2>)
 80072f2:	6819      	ldr	r1, [r3, #0]
 80072f4:	6808      	ldr	r0, [r1, #0]
 80072f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072fa:	f380 8809 	msr	PSP, r0
 80072fe:	f3bf 8f6f 	isb	sy
 8007302:	f04f 0000 	mov.w	r0, #0
 8007306:	f380 8811 	msr	BASEPRI, r0
 800730a:	4770      	bx	lr
 800730c:	f3af 8000 	nop.w

08007310 <pxCurrentTCBConst2>:
 8007310:	20009f00 	.word	0x20009f00

08007314 <vPortEnterCritical>:
 8007314:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007318:	f383 8811 	msr	BASEPRI, r3
 800731c:	f3bf 8f6f 	isb	sy
 8007320:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007324:	4a0a      	ldr	r2, [pc, #40]	; (8007350 <vPortEnterCritical+0x3c>)
 8007326:	6813      	ldr	r3, [r2, #0]
 8007328:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800732a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800732c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800732e:	d10e      	bne.n	800734e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007330:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007334:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007338:	b2db      	uxtb	r3, r3
 800733a:	b143      	cbz	r3, 800734e <vPortEnterCritical+0x3a>
 800733c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007340:	f383 8811 	msr	BASEPRI, r3
 8007344:	f3bf 8f6f 	isb	sy
 8007348:	f3bf 8f4f 	dsb	sy
 800734c:	e7fe      	b.n	800734c <vPortEnterCritical+0x38>
}
 800734e:	4770      	bx	lr
 8007350:	2000005c 	.word	0x2000005c

08007354 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007354:	4a08      	ldr	r2, [pc, #32]	; (8007378 <vPortExitCritical+0x24>)
 8007356:	6813      	ldr	r3, [r2, #0]
 8007358:	b943      	cbnz	r3, 800736c <vPortExitCritical+0x18>
 800735a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800735e:	f383 8811 	msr	BASEPRI, r3
 8007362:	f3bf 8f6f 	isb	sy
 8007366:	f3bf 8f4f 	dsb	sy
 800736a:	e7fe      	b.n	800736a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800736c:	3b01      	subs	r3, #1
 800736e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007370:	b90b      	cbnz	r3, 8007376 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007372:	f383 8811 	msr	BASEPRI, r3
}
 8007376:	4770      	bx	lr
 8007378:	2000005c 	.word	0x2000005c
 800737c:	00000000 	.word	0x00000000

08007380 <PendSV_Handler>:
	__asm volatile
 8007380:	f3ef 8009 	mrs	r0, PSP
 8007384:	f3bf 8f6f 	isb	sy
 8007388:	4b15      	ldr	r3, [pc, #84]	; (80073e0 <pxCurrentTCBConst>)
 800738a:	681a      	ldr	r2, [r3, #0]
 800738c:	f01e 0f10 	tst.w	lr, #16
 8007390:	bf08      	it	eq
 8007392:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007396:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800739a:	6010      	str	r0, [r2, #0]
 800739c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80073a0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80073a4:	f380 8811 	msr	BASEPRI, r0
 80073a8:	f3bf 8f4f 	dsb	sy
 80073ac:	f3bf 8f6f 	isb	sy
 80073b0:	f001 f962 	bl	8008678 <vTaskSwitchContext>
 80073b4:	f04f 0000 	mov.w	r0, #0
 80073b8:	f380 8811 	msr	BASEPRI, r0
 80073bc:	bc09      	pop	{r0, r3}
 80073be:	6819      	ldr	r1, [r3, #0]
 80073c0:	6808      	ldr	r0, [r1, #0]
 80073c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073c6:	f01e 0f10 	tst.w	lr, #16
 80073ca:	bf08      	it	eq
 80073cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80073d0:	f380 8809 	msr	PSP, r0
 80073d4:	f3bf 8f6f 	isb	sy
 80073d8:	4770      	bx	lr
 80073da:	bf00      	nop
 80073dc:	f3af 8000 	nop.w

080073e0 <pxCurrentTCBConst>:
 80073e0:	20009f00 	.word	0x20009f00

080073e4 <xPortSysTickHandler>:
{
 80073e4:	b508      	push	{r3, lr}
	__asm volatile
 80073e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ea:	f383 8811 	msr	BASEPRI, r3
 80073ee:	f3bf 8f6f 	isb	sy
 80073f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80073f6:	f000 ffa7 	bl	8008348 <xTaskIncrementTick>
 80073fa:	b128      	cbz	r0, 8007408 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80073fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007400:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007404:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007408:	2300      	movs	r3, #0
 800740a:	f383 8811 	msr	BASEPRI, r3
}
 800740e:	bd08      	pop	{r3, pc}

08007410 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007410:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007414:	2300      	movs	r3, #0
 8007416:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007418:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800741a:	4b05      	ldr	r3, [pc, #20]	; (8007430 <vPortSetupTimerInterrupt+0x20>)
 800741c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007420:	681b      	ldr	r3, [r3, #0]
 8007422:	fbb3 f3f1 	udiv	r3, r3, r1
 8007426:	3b01      	subs	r3, #1
 8007428:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800742a:	2307      	movs	r3, #7
 800742c:	6113      	str	r3, [r2, #16]
}
 800742e:	4770      	bx	lr
 8007430:	20000050 	.word	0x20000050

08007434 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007434:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007438:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800743a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800743e:	4a3a      	ldr	r2, [pc, #232]	; (8007528 <xPortStartScheduler+0xf4>)
 8007440:	4291      	cmp	r1, r2
 8007442:	d108      	bne.n	8007456 <xPortStartScheduler+0x22>
	__asm volatile
 8007444:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007448:	f383 8811 	msr	BASEPRI, r3
 800744c:	f3bf 8f6f 	isb	sy
 8007450:	f3bf 8f4f 	dsb	sy
 8007454:	e7fe      	b.n	8007454 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007456:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800745a:	4b34      	ldr	r3, [pc, #208]	; (800752c <xPortStartScheduler+0xf8>)
 800745c:	429a      	cmp	r2, r3
 800745e:	d108      	bne.n	8007472 <xPortStartScheduler+0x3e>
 8007460:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007464:	f383 8811 	msr	BASEPRI, r3
 8007468:	f3bf 8f6f 	isb	sy
 800746c:	f3bf 8f4f 	dsb	sy
 8007470:	e7fe      	b.n	8007470 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007472:	4b2f      	ldr	r3, [pc, #188]	; (8007530 <xPortStartScheduler+0xfc>)
 8007474:	781a      	ldrb	r2, [r3, #0]
 8007476:	b2d2      	uxtb	r2, r2
 8007478:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800747a:	22ff      	movs	r2, #255	; 0xff
 800747c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800747e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007480:	4a2c      	ldr	r2, [pc, #176]	; (8007534 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007482:	b2db      	uxtb	r3, r3
 8007484:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007488:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800748c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007490:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007492:	4a29      	ldr	r2, [pc, #164]	; (8007538 <xPortStartScheduler+0x104>)
 8007494:	2307      	movs	r3, #7
 8007496:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007498:	2100      	movs	r1, #0
 800749a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800749e:	0600      	lsls	r0, r0, #24
 80074a0:	f103 34ff 	add.w	r4, r3, #4294967295
 80074a4:	d40c      	bmi.n	80074c0 <xPortStartScheduler+0x8c>
 80074a6:	b111      	cbz	r1, 80074ae <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80074a8:	2b03      	cmp	r3, #3
 80074aa:	6013      	str	r3, [r2, #0]
 80074ac:	d011      	beq.n	80074d2 <xPortStartScheduler+0x9e>
 80074ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074b2:	f383 8811 	msr	BASEPRI, r3
 80074b6:	f3bf 8f6f 	isb	sy
 80074ba:	f3bf 8f4f 	dsb	sy
 80074be:	e7fe      	b.n	80074be <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80074c0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80074c4:	005b      	lsls	r3, r3, #1
 80074c6:	b2db      	uxtb	r3, r3
 80074c8:	f88d 3003 	strb.w	r3, [sp, #3]
 80074cc:	2101      	movs	r1, #1
 80074ce:	4623      	mov	r3, r4
 80074d0:	e7e3      	b.n	800749a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80074d2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80074d6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80074d8:	9b01      	ldr	r3, [sp, #4]
 80074da:	4a15      	ldr	r2, [pc, #84]	; (8007530 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80074dc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80074e0:	b2db      	uxtb	r3, r3
 80074e2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80074e4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80074e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80074ec:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80074f0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80074f4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80074f8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 80074fc:	f7ff ff88 	bl	8007410 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007500:	4b0e      	ldr	r3, [pc, #56]	; (800753c <xPortStartScheduler+0x108>)
 8007502:	2500      	movs	r5, #0
 8007504:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007506:	f7ff feaf 	bl	8007268 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800750a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800750e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007512:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007516:	f7ff fe93 	bl	8007240 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800751a:	f001 f8ad 	bl	8008678 <vTaskSwitchContext>
	prvTaskExitError();
 800751e:	f7ff fead 	bl	800727c <prvTaskExitError>
}
 8007522:	4628      	mov	r0, r5
 8007524:	b003      	add	sp, #12
 8007526:	bd30      	pop	{r4, r5, pc}
 8007528:	410fc271 	.word	0x410fc271
 800752c:	410fc270 	.word	0x410fc270
 8007530:	e000e400 	.word	0xe000e400
 8007534:	20009eb8 	.word	0x20009eb8
 8007538:	20009ebc 	.word	0x20009ebc
 800753c:	2000005c 	.word	0x2000005c

08007540 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007540:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007544:	2b0f      	cmp	r3, #15
 8007546:	d90e      	bls.n	8007566 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007548:	4a11      	ldr	r2, [pc, #68]	; (8007590 <vPortValidateInterruptPriority+0x50>)
 800754a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800754c:	4a11      	ldr	r2, [pc, #68]	; (8007594 <vPortValidateInterruptPriority+0x54>)
 800754e:	7812      	ldrb	r2, [r2, #0]
 8007550:	429a      	cmp	r2, r3
 8007552:	d908      	bls.n	8007566 <vPortValidateInterruptPriority+0x26>
 8007554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007558:	f383 8811 	msr	BASEPRI, r3
 800755c:	f3bf 8f6f 	isb	sy
 8007560:	f3bf 8f4f 	dsb	sy
 8007564:	e7fe      	b.n	8007564 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007566:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800756a:	4a0b      	ldr	r2, [pc, #44]	; (8007598 <vPortValidateInterruptPriority+0x58>)
 800756c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007570:	6812      	ldr	r2, [r2, #0]
 8007572:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007576:	4293      	cmp	r3, r2
 8007578:	d908      	bls.n	800758c <vPortValidateInterruptPriority+0x4c>
 800757a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800757e:	f383 8811 	msr	BASEPRI, r3
 8007582:	f3bf 8f6f 	isb	sy
 8007586:	f3bf 8f4f 	dsb	sy
 800758a:	e7fe      	b.n	800758a <vPortValidateInterruptPriority+0x4a>
	}
 800758c:	4770      	bx	lr
 800758e:	bf00      	nop
 8007590:	e000e3f0 	.word	0xe000e3f0
 8007594:	20009eb8 	.word	0x20009eb8
 8007598:	20009ebc 	.word	0x20009ebc

0800759c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800759c:	b510      	push	{r4, lr}
 800759e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80075a0:	f7ff feb8 	bl	8007314 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80075a4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80075a6:	f7ff fed5 	bl	8007354 <vPortExitCritical>

	return xReturn;
}
 80075aa:	fab4 f084 	clz	r0, r4
 80075ae:	0940      	lsrs	r0, r0, #5
 80075b0:	bd10      	pop	{r4, pc}

080075b2 <prvCopyDataToQueue>:
{
 80075b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075b4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80075b6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80075b8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80075ba:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80075bc:	b952      	cbnz	r2, 80075d4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80075be:	6807      	ldr	r7, [r0, #0]
 80075c0:	bb47      	cbnz	r7, 8007614 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80075c2:	6880      	ldr	r0, [r0, #8]
 80075c4:	f001 f9b8 	bl	8008938 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80075c8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80075ca:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80075cc:	3601      	adds	r6, #1
 80075ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80075d0:	4628      	mov	r0, r5
 80075d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80075d4:	b965      	cbnz	r5, 80075f0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80075d6:	6840      	ldr	r0, [r0, #4]
 80075d8:	f014 fbda 	bl	801bd90 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80075dc:	6863      	ldr	r3, [r4, #4]
 80075de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80075e0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80075e2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80075e4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80075e6:	4293      	cmp	r3, r2
 80075e8:	d3f0      	bcc.n	80075cc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80075ea:	6823      	ldr	r3, [r4, #0]
 80075ec:	6063      	str	r3, [r4, #4]
 80075ee:	e7ed      	b.n	80075cc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80075f0:	68c0      	ldr	r0, [r0, #12]
 80075f2:	f014 fbcd 	bl	801bd90 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80075f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80075f8:	68e3      	ldr	r3, [r4, #12]
 80075fa:	4251      	negs	r1, r2
 80075fc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80075fe:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007600:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007602:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007604:	bf3e      	ittt	cc
 8007606:	68a3      	ldrcc	r3, [r4, #8]
 8007608:	185b      	addcc	r3, r3, r1
 800760a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800760c:	2d02      	cmp	r5, #2
 800760e:	d101      	bne.n	8007614 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007610:	b116      	cbz	r6, 8007618 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007612:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007614:	2500      	movs	r5, #0
 8007616:	e7d9      	b.n	80075cc <prvCopyDataToQueue+0x1a>
 8007618:	4635      	mov	r5, r6
 800761a:	e7d7      	b.n	80075cc <prvCopyDataToQueue+0x1a>

0800761c <prvCopyDataFromQueue>:
{
 800761c:	4603      	mov	r3, r0
 800761e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007620:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007622:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007624:	b16a      	cbz	r2, 8007642 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007626:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007628:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800762a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800762c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800762e:	bf28      	it	cs
 8007630:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007632:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007634:	bf28      	it	cs
 8007636:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007638:	68d9      	ldr	r1, [r3, #12]
}
 800763a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800763e:	f014 bba7 	b.w	801bd90 <memcpy>
}
 8007642:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007646:	4770      	bx	lr

08007648 <prvUnlockQueue>:
{
 8007648:	b570      	push	{r4, r5, r6, lr}
 800764a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800764c:	f7ff fe62 	bl	8007314 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007650:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007654:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007658:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800765a:	2d00      	cmp	r5, #0
 800765c:	dc14      	bgt.n	8007688 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800765e:	23ff      	movs	r3, #255	; 0xff
 8007660:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007664:	f7ff fe76 	bl	8007354 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007668:	f7ff fe54 	bl	8007314 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800766c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007670:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007674:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007676:	2d00      	cmp	r5, #0
 8007678:	dc12      	bgt.n	80076a0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800767a:	23ff      	movs	r3, #255	; 0xff
 800767c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007684:	f7ff be66 	b.w	8007354 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007688:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800768a:	2b00      	cmp	r3, #0
 800768c:	d0e7      	beq.n	800765e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800768e:	4630      	mov	r0, r6
 8007690:	f001 f86e 	bl	8008770 <xTaskRemoveFromEventList>
 8007694:	b108      	cbz	r0, 800769a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007696:	f001 f8f7 	bl	8008888 <vTaskMissedYield>
			--cTxLock;
 800769a:	3d01      	subs	r5, #1
 800769c:	b26d      	sxtb	r5, r5
 800769e:	e7dc      	b.n	800765a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80076a0:	6923      	ldr	r3, [r4, #16]
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	d0e9      	beq.n	800767a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80076a6:	4630      	mov	r0, r6
 80076a8:	f001 f862 	bl	8008770 <xTaskRemoveFromEventList>
 80076ac:	b108      	cbz	r0, 80076b2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80076ae:	f001 f8eb 	bl	8008888 <vTaskMissedYield>
				--cRxLock;
 80076b2:	3d01      	subs	r5, #1
 80076b4:	b26d      	sxtb	r5, r5
 80076b6:	e7de      	b.n	8007676 <prvUnlockQueue+0x2e>

080076b8 <xQueueGenericReset>:
{
 80076b8:	b538      	push	{r3, r4, r5, lr}
 80076ba:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80076bc:	4604      	mov	r4, r0
 80076be:	b940      	cbnz	r0, 80076d2 <xQueueGenericReset+0x1a>
 80076c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c4:	f383 8811 	msr	BASEPRI, r3
 80076c8:	f3bf 8f6f 	isb	sy
 80076cc:	f3bf 8f4f 	dsb	sy
 80076d0:	e7fe      	b.n	80076d0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80076d2:	f7ff fe1f 	bl	8007314 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80076d6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80076da:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80076dc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80076de:	434b      	muls	r3, r1
 80076e0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80076e2:	1a5b      	subs	r3, r3, r1
 80076e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80076e6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80076e8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80076ea:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80076ec:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80076ee:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80076f0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80076f4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80076f8:	b9a5      	cbnz	r5, 8007724 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80076fa:	6923      	ldr	r3, [r4, #16]
 80076fc:	b173      	cbz	r3, 800771c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80076fe:	f104 0010 	add.w	r0, r4, #16
 8007702:	f001 f835 	bl	8008770 <xTaskRemoveFromEventList>
 8007706:	b148      	cbz	r0, 800771c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007708:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800770c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007710:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007714:	f3bf 8f4f 	dsb	sy
 8007718:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800771c:	f7ff fe1a 	bl	8007354 <vPortExitCritical>
}
 8007720:	2001      	movs	r0, #1
 8007722:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007724:	f104 0010 	add.w	r0, r4, #16
 8007728:	f7ff fd48 	bl	80071bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800772c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007730:	f7ff fd44 	bl	80071bc <vListInitialise>
 8007734:	e7f2      	b.n	800771c <xQueueGenericReset+0x64>

08007736 <xQueueGenericCreateStatic>:
	{
 8007736:	b513      	push	{r0, r1, r4, lr}
 8007738:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800773a:	b940      	cbnz	r0, 800774e <xQueueGenericCreateStatic+0x18>
 800773c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007740:	f383 8811 	msr	BASEPRI, r3
 8007744:	f3bf 8f6f 	isb	sy
 8007748:	f3bf 8f4f 	dsb	sy
 800774c:	e7fe      	b.n	800774c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800774e:	b943      	cbnz	r3, 8007762 <xQueueGenericCreateStatic+0x2c>
 8007750:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007754:	f383 8811 	msr	BASEPRI, r3
 8007758:	f3bf 8f6f 	isb	sy
 800775c:	f3bf 8f4f 	dsb	sy
 8007760:	e7fe      	b.n	8007760 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007762:	b14a      	cbz	r2, 8007778 <xQueueGenericCreateStatic+0x42>
 8007764:	b991      	cbnz	r1, 800778c <xQueueGenericCreateStatic+0x56>
 8007766:	f04f 0350 	mov.w	r3, #80	; 0x50
 800776a:	f383 8811 	msr	BASEPRI, r3
 800776e:	f3bf 8f6f 	isb	sy
 8007772:	f3bf 8f4f 	dsb	sy
 8007776:	e7fe      	b.n	8007776 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007778:	b141      	cbz	r1, 800778c <xQueueGenericCreateStatic+0x56>
 800777a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800777e:	f383 8811 	msr	BASEPRI, r3
 8007782:	f3bf 8f6f 	isb	sy
 8007786:	f3bf 8f4f 	dsb	sy
 800778a:	e7fe      	b.n	800778a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800778c:	2350      	movs	r3, #80	; 0x50
 800778e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007790:	9b01      	ldr	r3, [sp, #4]
 8007792:	2b50      	cmp	r3, #80	; 0x50
 8007794:	d008      	beq.n	80077a8 <xQueueGenericCreateStatic+0x72>
 8007796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800779a:	f383 8811 	msr	BASEPRI, r3
 800779e:	f3bf 8f6f 	isb	sy
 80077a2:	f3bf 8f4f 	dsb	sy
 80077a6:	e7fe      	b.n	80077a6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80077a8:	2900      	cmp	r1, #0
 80077aa:	bf08      	it	eq
 80077ac:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80077ae:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80077b0:	6022      	str	r2, [r4, #0]
 80077b2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80077b4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80077b8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80077bc:	4619      	mov	r1, r3
 80077be:	4620      	mov	r0, r4
 80077c0:	f7ff ff7a 	bl	80076b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80077c4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80077c8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80077cc:	4620      	mov	r0, r4
 80077ce:	b002      	add	sp, #8
 80077d0:	bd10      	pop	{r4, pc}

080077d2 <xQueueGenericCreate>:
	{
 80077d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80077d4:	460d      	mov	r5, r1
 80077d6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80077d8:	4606      	mov	r6, r0
 80077da:	b940      	cbnz	r0, 80077ee <xQueueGenericCreate+0x1c>
 80077dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077e0:	f383 8811 	msr	BASEPRI, r3
 80077e4:	f3bf 8f6f 	isb	sy
 80077e8:	f3bf 8f4f 	dsb	sy
 80077ec:	e7fe      	b.n	80077ec <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80077ee:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80077f0:	3050      	adds	r0, #80	; 0x50
 80077f2:	f7ff fc0d 	bl	8007010 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80077f6:	4604      	mov	r4, r0
 80077f8:	b170      	cbz	r0, 8007818 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80077fa:	2300      	movs	r3, #0
 80077fc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007800:	b165      	cbz	r5, 800781c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007802:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007806:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800780a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800780c:	2101      	movs	r1, #1
 800780e:	4620      	mov	r0, r4
 8007810:	f7ff ff52 	bl	80076b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007814:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007818:	4620      	mov	r0, r4
 800781a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800781c:	4603      	mov	r3, r0
 800781e:	e7f2      	b.n	8007806 <xQueueGenericCreate+0x34>

08007820 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007820:	b513      	push	{r0, r1, r4, lr}
 8007822:	4613      	mov	r3, r2
 8007824:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007826:	b940      	cbnz	r0, 800783a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007828:	f04f 0350 	mov.w	r3, #80	; 0x50
 800782c:	f383 8811 	msr	BASEPRI, r3
 8007830:	f3bf 8f6f 	isb	sy
 8007834:	f3bf 8f4f 	dsb	sy
 8007838:	e7fe      	b.n	8007838 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800783a:	4288      	cmp	r0, r1
 800783c:	d208      	bcs.n	8007850 <xQueueCreateCountingSemaphoreStatic+0x30>
 800783e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007842:	f383 8811 	msr	BASEPRI, r3
 8007846:	f3bf 8f6f 	isb	sy
 800784a:	f3bf 8f4f 	dsb	sy
 800784e:	e7fe      	b.n	800784e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007850:	2202      	movs	r2, #2
 8007852:	9200      	str	r2, [sp, #0]
 8007854:	2200      	movs	r2, #0
 8007856:	4611      	mov	r1, r2
 8007858:	f7ff ff6d 	bl	8007736 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800785c:	b100      	cbz	r0, 8007860 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800785e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007860:	b002      	add	sp, #8
 8007862:	bd10      	pop	{r4, pc}

08007864 <xQueueCreateCountingSemaphore>:
	{
 8007864:	b510      	push	{r4, lr}
 8007866:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007868:	b940      	cbnz	r0, 800787c <xQueueCreateCountingSemaphore+0x18>
 800786a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800786e:	f383 8811 	msr	BASEPRI, r3
 8007872:	f3bf 8f6f 	isb	sy
 8007876:	f3bf 8f4f 	dsb	sy
 800787a:	e7fe      	b.n	800787a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800787c:	4288      	cmp	r0, r1
 800787e:	d208      	bcs.n	8007892 <xQueueCreateCountingSemaphore+0x2e>
 8007880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007884:	f383 8811 	msr	BASEPRI, r3
 8007888:	f3bf 8f6f 	isb	sy
 800788c:	f3bf 8f4f 	dsb	sy
 8007890:	e7fe      	b.n	8007890 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007892:	2202      	movs	r2, #2
 8007894:	2100      	movs	r1, #0
 8007896:	f7ff ff9c 	bl	80077d2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800789a:	b100      	cbz	r0, 800789e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800789c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800789e:	bd10      	pop	{r4, pc}

080078a0 <xQueueGenericSend>:
{
 80078a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80078a4:	b085      	sub	sp, #20
 80078a6:	4688      	mov	r8, r1
 80078a8:	9201      	str	r2, [sp, #4]
 80078aa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80078ac:	4604      	mov	r4, r0
 80078ae:	b940      	cbnz	r0, 80078c2 <xQueueGenericSend+0x22>
 80078b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078b4:	f383 8811 	msr	BASEPRI, r3
 80078b8:	f3bf 8f6f 	isb	sy
 80078bc:	f3bf 8f4f 	dsb	sy
 80078c0:	e7fe      	b.n	80078c0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80078c2:	b951      	cbnz	r1, 80078da <xQueueGenericSend+0x3a>
 80078c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80078c6:	b143      	cbz	r3, 80078da <xQueueGenericSend+0x3a>
 80078c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078cc:	f383 8811 	msr	BASEPRI, r3
 80078d0:	f3bf 8f6f 	isb	sy
 80078d4:	f3bf 8f4f 	dsb	sy
 80078d8:	e7fe      	b.n	80078d8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80078da:	2f02      	cmp	r7, #2
 80078dc:	d10b      	bne.n	80078f6 <xQueueGenericSend+0x56>
 80078de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80078e0:	2b01      	cmp	r3, #1
 80078e2:	d008      	beq.n	80078f6 <xQueueGenericSend+0x56>
 80078e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078e8:	f383 8811 	msr	BASEPRI, r3
 80078ec:	f3bf 8f6f 	isb	sy
 80078f0:	f3bf 8f4f 	dsb	sy
 80078f4:	e7fe      	b.n	80078f4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80078f6:	f000 ffcd 	bl	8008894 <xTaskGetSchedulerState>
 80078fa:	4606      	mov	r6, r0
 80078fc:	b950      	cbnz	r0, 8007914 <xQueueGenericSend+0x74>
 80078fe:	9b01      	ldr	r3, [sp, #4]
 8007900:	b14b      	cbz	r3, 8007916 <xQueueGenericSend+0x76>
 8007902:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007906:	f383 8811 	msr	BASEPRI, r3
 800790a:	f3bf 8f6f 	isb	sy
 800790e:	f3bf 8f4f 	dsb	sy
 8007912:	e7fe      	b.n	8007912 <xQueueGenericSend+0x72>
 8007914:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007916:	f04f 0900 	mov.w	r9, #0
 800791a:	e037      	b.n	800798c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800791c:	9d01      	ldr	r5, [sp, #4]
 800791e:	b91d      	cbnz	r5, 8007928 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007920:	f7ff fd18 	bl	8007354 <vPortExitCritical>
			return errQUEUE_FULL;
 8007924:	2000      	movs	r0, #0
 8007926:	e052      	b.n	80079ce <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007928:	b916      	cbnz	r6, 8007930 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800792a:	a802      	add	r0, sp, #8
 800792c:	f000 ff64 	bl	80087f8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007930:	f7ff fd10 	bl	8007354 <vPortExitCritical>
		vTaskSuspendAll();
 8007934:	f000 fcfa 	bl	800832c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007938:	f7ff fcec 	bl	8007314 <vPortEnterCritical>
 800793c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007940:	2bff      	cmp	r3, #255	; 0xff
 8007942:	bf08      	it	eq
 8007944:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007948:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800794c:	2bff      	cmp	r3, #255	; 0xff
 800794e:	bf08      	it	eq
 8007950:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007954:	f7ff fcfe 	bl	8007354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007958:	a901      	add	r1, sp, #4
 800795a:	a802      	add	r0, sp, #8
 800795c:	f000 ff58 	bl	8008810 <xTaskCheckForTimeOut>
 8007960:	2800      	cmp	r0, #0
 8007962:	d14a      	bne.n	80079fa <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007964:	f7ff fcd6 	bl	8007314 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007968:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800796a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800796c:	429a      	cmp	r2, r3
 800796e:	d131      	bne.n	80079d4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007970:	f7ff fcf0 	bl	8007354 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007974:	9901      	ldr	r1, [sp, #4]
 8007976:	f104 0010 	add.w	r0, r4, #16
 800797a:	f000 fec1 	bl	8008700 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800797e:	4620      	mov	r0, r4
 8007980:	f7ff fe62 	bl	8007648 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007984:	f000 fd76 	bl	8008474 <xTaskResumeAll>
 8007988:	b360      	cbz	r0, 80079e4 <xQueueGenericSend+0x144>
 800798a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800798c:	f7ff fcc2 	bl	8007314 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007990:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007992:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007994:	429a      	cmp	r2, r3
 8007996:	d301      	bcc.n	800799c <xQueueGenericSend+0xfc>
 8007998:	2f02      	cmp	r7, #2
 800799a:	d1bf      	bne.n	800791c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800799c:	463a      	mov	r2, r7
 800799e:	4641      	mov	r1, r8
 80079a0:	4620      	mov	r0, r4
 80079a2:	f7ff fe06 	bl	80075b2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80079a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80079a8:	b11b      	cbz	r3, 80079b2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80079aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80079ae:	f000 fedf 	bl	8008770 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80079b2:	b148      	cbz	r0, 80079c8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80079b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80079b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80079bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80079c0:	f3bf 8f4f 	dsb	sy
 80079c4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80079c8:	f7ff fcc4 	bl	8007354 <vPortExitCritical>
				return pdPASS;
 80079cc:	2001      	movs	r0, #1
}
 80079ce:	b005      	add	sp, #20
 80079d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80079d4:	f7ff fcbe 	bl	8007354 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80079d8:	4620      	mov	r0, r4
 80079da:	f7ff fe35 	bl	8007648 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80079de:	f000 fd49 	bl	8008474 <xTaskResumeAll>
 80079e2:	e7d2      	b.n	800798a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80079e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80079e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80079ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80079f0:	f3bf 8f4f 	dsb	sy
 80079f4:	f3bf 8f6f 	isb	sy
 80079f8:	e7c7      	b.n	800798a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80079fa:	4620      	mov	r0, r4
 80079fc:	f7ff fe24 	bl	8007648 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007a00:	f000 fd38 	bl	8008474 <xTaskResumeAll>
 8007a04:	e78e      	b.n	8007924 <xQueueGenericSend+0x84>

08007a06 <xQueueGenericSendFromISR>:
{
 8007a06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007a0a:	4689      	mov	r9, r1
 8007a0c:	4690      	mov	r8, r2
 8007a0e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007a10:	4604      	mov	r4, r0
 8007a12:	b940      	cbnz	r0, 8007a26 <xQueueGenericSendFromISR+0x20>
 8007a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a18:	f383 8811 	msr	BASEPRI, r3
 8007a1c:	f3bf 8f6f 	isb	sy
 8007a20:	f3bf 8f4f 	dsb	sy
 8007a24:	e7fe      	b.n	8007a24 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007a26:	b951      	cbnz	r1, 8007a3e <xQueueGenericSendFromISR+0x38>
 8007a28:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007a2a:	b143      	cbz	r3, 8007a3e <xQueueGenericSendFromISR+0x38>
 8007a2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a30:	f383 8811 	msr	BASEPRI, r3
 8007a34:	f3bf 8f6f 	isb	sy
 8007a38:	f3bf 8f4f 	dsb	sy
 8007a3c:	e7fe      	b.n	8007a3c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007a3e:	2f02      	cmp	r7, #2
 8007a40:	d10b      	bne.n	8007a5a <xQueueGenericSendFromISR+0x54>
 8007a42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a44:	2b01      	cmp	r3, #1
 8007a46:	d008      	beq.n	8007a5a <xQueueGenericSendFromISR+0x54>
 8007a48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a4c:	f383 8811 	msr	BASEPRI, r3
 8007a50:	f3bf 8f6f 	isb	sy
 8007a54:	f3bf 8f4f 	dsb	sy
 8007a58:	e7fe      	b.n	8007a58 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007a5a:	f7ff fd71 	bl	8007540 <vPortValidateInterruptPriority>
	__asm volatile
 8007a5e:	f3ef 8611 	mrs	r6, BASEPRI
 8007a62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a66:	f383 8811 	msr	BASEPRI, r3
 8007a6a:	f3bf 8f6f 	isb	sy
 8007a6e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007a72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007a74:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a76:	429a      	cmp	r2, r3
 8007a78:	d301      	bcc.n	8007a7e <xQueueGenericSendFromISR+0x78>
 8007a7a:	2f02      	cmp	r7, #2
 8007a7c:	d123      	bne.n	8007ac6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a7e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a84:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007a86:	463a      	mov	r2, r7
 8007a88:	4649      	mov	r1, r9
 8007a8a:	4620      	mov	r0, r4
 8007a8c:	f7ff fd91 	bl	80075b2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007a90:	1c6b      	adds	r3, r5, #1
 8007a92:	d113      	bne.n	8007abc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007a94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007a96:	b90b      	cbnz	r3, 8007a9c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007a98:	2001      	movs	r0, #1
 8007a9a:	e00b      	b.n	8007ab4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007a9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007aa0:	f000 fe66 	bl	8008770 <xTaskRemoveFromEventList>
 8007aa4:	2800      	cmp	r0, #0
 8007aa6:	d0f7      	beq.n	8007a98 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007aa8:	f1b8 0f00 	cmp.w	r8, #0
 8007aac:	d0f4      	beq.n	8007a98 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007aae:	2001      	movs	r0, #1
 8007ab0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007ab4:	f386 8811 	msr	BASEPRI, r6
}
 8007ab8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007abc:	3501      	adds	r5, #1
 8007abe:	b26d      	sxtb	r5, r5
 8007ac0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007ac4:	e7e8      	b.n	8007a98 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007ac6:	2000      	movs	r0, #0
 8007ac8:	e7f4      	b.n	8007ab4 <xQueueGenericSendFromISR+0xae>

08007aca <xQueueGiveFromISR>:
{
 8007aca:	b570      	push	{r4, r5, r6, lr}
 8007acc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007ace:	4604      	mov	r4, r0
 8007ad0:	b940      	cbnz	r0, 8007ae4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007ad2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ad6:	f383 8811 	msr	BASEPRI, r3
 8007ada:	f3bf 8f6f 	isb	sy
 8007ade:	f3bf 8f4f 	dsb	sy
 8007ae2:	e7fe      	b.n	8007ae2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007ae4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007ae6:	b143      	cbz	r3, 8007afa <xQueueGiveFromISR+0x30>
 8007ae8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007aec:	f383 8811 	msr	BASEPRI, r3
 8007af0:	f3bf 8f6f 	isb	sy
 8007af4:	f3bf 8f4f 	dsb	sy
 8007af8:	e7fe      	b.n	8007af8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007afa:	6803      	ldr	r3, [r0, #0]
 8007afc:	b953      	cbnz	r3, 8007b14 <xQueueGiveFromISR+0x4a>
 8007afe:	6883      	ldr	r3, [r0, #8]
 8007b00:	b143      	cbz	r3, 8007b14 <xQueueGiveFromISR+0x4a>
 8007b02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b06:	f383 8811 	msr	BASEPRI, r3
 8007b0a:	f3bf 8f6f 	isb	sy
 8007b0e:	f3bf 8f4f 	dsb	sy
 8007b12:	e7fe      	b.n	8007b12 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b14:	f7ff fd14 	bl	8007540 <vPortValidateInterruptPriority>
	__asm volatile
 8007b18:	f3ef 8611 	mrs	r6, BASEPRI
 8007b1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b20:	f383 8811 	msr	BASEPRI, r3
 8007b24:	f3bf 8f6f 	isb	sy
 8007b28:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007b2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007b2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b30:	4293      	cmp	r3, r2
 8007b32:	d91c      	bls.n	8007b6e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007b34:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007b38:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007b3a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007b3c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007b3e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007b40:	d110      	bne.n	8007b64 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b44:	b90b      	cbnz	r3, 8007b4a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007b46:	2001      	movs	r0, #1
 8007b48:	e009      	b.n	8007b5e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b4a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b4e:	f000 fe0f 	bl	8008770 <xTaskRemoveFromEventList>
 8007b52:	2800      	cmp	r0, #0
 8007b54:	d0f7      	beq.n	8007b46 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007b56:	2d00      	cmp	r5, #0
 8007b58:	d0f5      	beq.n	8007b46 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007b5a:	2001      	movs	r0, #1
 8007b5c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007b5e:	f386 8811 	msr	BASEPRI, r6
}
 8007b62:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007b64:	3301      	adds	r3, #1
 8007b66:	b25b      	sxtb	r3, r3
 8007b68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007b6c:	e7eb      	b.n	8007b46 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007b6e:	2000      	movs	r0, #0
 8007b70:	e7f5      	b.n	8007b5e <xQueueGiveFromISR+0x94>

08007b72 <xQueueReceive>:
{
 8007b72:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007b76:	460f      	mov	r7, r1
 8007b78:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007b7a:	4604      	mov	r4, r0
 8007b7c:	b940      	cbnz	r0, 8007b90 <xQueueReceive+0x1e>
	__asm volatile
 8007b7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b82:	f383 8811 	msr	BASEPRI, r3
 8007b86:	f3bf 8f6f 	isb	sy
 8007b8a:	f3bf 8f4f 	dsb	sy
 8007b8e:	e7fe      	b.n	8007b8e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b90:	b951      	cbnz	r1, 8007ba8 <xQueueReceive+0x36>
 8007b92:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007b94:	b143      	cbz	r3, 8007ba8 <xQueueReceive+0x36>
 8007b96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b9a:	f383 8811 	msr	BASEPRI, r3
 8007b9e:	f3bf 8f6f 	isb	sy
 8007ba2:	f3bf 8f4f 	dsb	sy
 8007ba6:	e7fe      	b.n	8007ba6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ba8:	f000 fe74 	bl	8008894 <xTaskGetSchedulerState>
 8007bac:	4606      	mov	r6, r0
 8007bae:	b950      	cbnz	r0, 8007bc6 <xQueueReceive+0x54>
 8007bb0:	9b01      	ldr	r3, [sp, #4]
 8007bb2:	b14b      	cbz	r3, 8007bc8 <xQueueReceive+0x56>
 8007bb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bb8:	f383 8811 	msr	BASEPRI, r3
 8007bbc:	f3bf 8f6f 	isb	sy
 8007bc0:	f3bf 8f4f 	dsb	sy
 8007bc4:	e7fe      	b.n	8007bc4 <xQueueReceive+0x52>
 8007bc6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007bc8:	f04f 0800 	mov.w	r8, #0
 8007bcc:	e03d      	b.n	8007c4a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007bce:	9d01      	ldr	r5, [sp, #4]
 8007bd0:	b91d      	cbnz	r5, 8007bda <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8007bd2:	f7ff fbbf 	bl	8007354 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007bd6:	2000      	movs	r0, #0
 8007bd8:	e056      	b.n	8007c88 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8007bda:	b916      	cbnz	r6, 8007be2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007bdc:	a802      	add	r0, sp, #8
 8007bde:	f000 fe0b 	bl	80087f8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007be2:	f7ff fbb7 	bl	8007354 <vPortExitCritical>
		vTaskSuspendAll();
 8007be6:	f000 fba1 	bl	800832c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007bea:	f7ff fb93 	bl	8007314 <vPortEnterCritical>
 8007bee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007bf2:	2bff      	cmp	r3, #255	; 0xff
 8007bf4:	bf08      	it	eq
 8007bf6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007bfa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007bfe:	2bff      	cmp	r3, #255	; 0xff
 8007c00:	bf08      	it	eq
 8007c02:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007c06:	f7ff fba5 	bl	8007354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007c0a:	a901      	add	r1, sp, #4
 8007c0c:	a802      	add	r0, sp, #8
 8007c0e:	f000 fdff 	bl	8008810 <xTaskCheckForTimeOut>
 8007c12:	2800      	cmp	r0, #0
 8007c14:	d141      	bne.n	8007c9a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007c16:	4620      	mov	r0, r4
 8007c18:	f7ff fcc0 	bl	800759c <prvIsQueueEmpty>
 8007c1c:	b3b8      	cbz	r0, 8007c8e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007c1e:	9901      	ldr	r1, [sp, #4]
 8007c20:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c24:	f000 fd6c 	bl	8008700 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007c28:	4620      	mov	r0, r4
 8007c2a:	f7ff fd0d 	bl	8007648 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007c2e:	f000 fc21 	bl	8008474 <xTaskResumeAll>
 8007c32:	b948      	cbnz	r0, 8007c48 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007c34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007c38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007c40:	f3bf 8f4f 	dsb	sy
 8007c44:	f3bf 8f6f 	isb	sy
 8007c48:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007c4a:	f7ff fb63 	bl	8007314 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c4e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007c50:	2d00      	cmp	r5, #0
 8007c52:	d0bc      	beq.n	8007bce <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c54:	4639      	mov	r1, r7
 8007c56:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007c58:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c5a:	f7ff fcdf 	bl	800761c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007c5e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c60:	6923      	ldr	r3, [r4, #16]
 8007c62:	b173      	cbz	r3, 8007c82 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c64:	f104 0010 	add.w	r0, r4, #16
 8007c68:	f000 fd82 	bl	8008770 <xTaskRemoveFromEventList>
 8007c6c:	b148      	cbz	r0, 8007c82 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8007c6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007c72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c76:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007c7a:	f3bf 8f4f 	dsb	sy
 8007c7e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007c82:	f7ff fb67 	bl	8007354 <vPortExitCritical>
				return pdPASS;
 8007c86:	2001      	movs	r0, #1
}
 8007c88:	b004      	add	sp, #16
 8007c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007c8e:	4620      	mov	r0, r4
 8007c90:	f7ff fcda 	bl	8007648 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007c94:	f000 fbee 	bl	8008474 <xTaskResumeAll>
 8007c98:	e7d6      	b.n	8007c48 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007c9a:	4620      	mov	r0, r4
 8007c9c:	f7ff fcd4 	bl	8007648 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ca0:	f000 fbe8 	bl	8008474 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007ca4:	4620      	mov	r0, r4
 8007ca6:	f7ff fc79 	bl	800759c <prvIsQueueEmpty>
 8007caa:	2800      	cmp	r0, #0
 8007cac:	d0cc      	beq.n	8007c48 <xQueueReceive+0xd6>
 8007cae:	e792      	b.n	8007bd6 <xQueueReceive+0x64>

08007cb0 <xQueueSemaphoreTake>:
{
 8007cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007cb2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007cb4:	4604      	mov	r4, r0
{
 8007cb6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007cb8:	b940      	cbnz	r0, 8007ccc <xQueueSemaphoreTake+0x1c>
 8007cba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cbe:	f383 8811 	msr	BASEPRI, r3
 8007cc2:	f3bf 8f6f 	isb	sy
 8007cc6:	f3bf 8f4f 	dsb	sy
 8007cca:	e7fe      	b.n	8007cca <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007ccc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007cce:	b145      	cbz	r5, 8007ce2 <xQueueSemaphoreTake+0x32>
 8007cd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cd4:	f383 8811 	msr	BASEPRI, r3
 8007cd8:	f3bf 8f6f 	isb	sy
 8007cdc:	f3bf 8f4f 	dsb	sy
 8007ce0:	e7fe      	b.n	8007ce0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ce2:	f000 fdd7 	bl	8008894 <xTaskGetSchedulerState>
 8007ce6:	4606      	mov	r6, r0
 8007ce8:	b950      	cbnz	r0, 8007d00 <xQueueSemaphoreTake+0x50>
 8007cea:	9b01      	ldr	r3, [sp, #4]
 8007cec:	b15b      	cbz	r3, 8007d06 <xQueueSemaphoreTake+0x56>
 8007cee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cf2:	f383 8811 	msr	BASEPRI, r3
 8007cf6:	f3bf 8f6f 	isb	sy
 8007cfa:	f3bf 8f4f 	dsb	sy
 8007cfe:	e7fe      	b.n	8007cfe <xQueueSemaphoreTake+0x4e>
 8007d00:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007d02:	2700      	movs	r7, #0
 8007d04:	e053      	b.n	8007dae <xQueueSemaphoreTake+0xfe>
 8007d06:	4605      	mov	r5, r0
 8007d08:	e7fb      	b.n	8007d02 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007d0a:	9b01      	ldr	r3, [sp, #4]
 8007d0c:	b963      	cbnz	r3, 8007d28 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007d0e:	b145      	cbz	r5, 8007d22 <xQueueSemaphoreTake+0x72>
 8007d10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d14:	f383 8811 	msr	BASEPRI, r3
 8007d18:	f3bf 8f6f 	isb	sy
 8007d1c:	f3bf 8f4f 	dsb	sy
 8007d20:	e7fe      	b.n	8007d20 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007d22:	f7ff fb17 	bl	8007354 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007d26:	e062      	b.n	8007dee <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007d28:	b916      	cbnz	r6, 8007d30 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007d2a:	a802      	add	r0, sp, #8
 8007d2c:	f000 fd64 	bl	80087f8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d30:	f7ff fb10 	bl	8007354 <vPortExitCritical>
		vTaskSuspendAll();
 8007d34:	f000 fafa 	bl	800832c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d38:	f7ff faec 	bl	8007314 <vPortEnterCritical>
 8007d3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d40:	2bff      	cmp	r3, #255	; 0xff
 8007d42:	bf08      	it	eq
 8007d44:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007d48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d4c:	2bff      	cmp	r3, #255	; 0xff
 8007d4e:	bf08      	it	eq
 8007d50:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007d54:	f7ff fafe 	bl	8007354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007d58:	a901      	add	r1, sp, #4
 8007d5a:	a802      	add	r0, sp, #8
 8007d5c:	f000 fd58 	bl	8008810 <xTaskCheckForTimeOut>
 8007d60:	2800      	cmp	r0, #0
 8007d62:	d14d      	bne.n	8007e00 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d64:	4620      	mov	r0, r4
 8007d66:	f7ff fc19 	bl	800759c <prvIsQueueEmpty>
 8007d6a:	2800      	cmp	r0, #0
 8007d6c:	d042      	beq.n	8007df4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007d6e:	6823      	ldr	r3, [r4, #0]
 8007d70:	b93b      	cbnz	r3, 8007d82 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8007d72:	f7ff facf 	bl	8007314 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007d76:	68a0      	ldr	r0, [r4, #8]
 8007d78:	f000 fd9c 	bl	80088b4 <xTaskPriorityInherit>
 8007d7c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007d7e:	f7ff fae9 	bl	8007354 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007d82:	9901      	ldr	r1, [sp, #4]
 8007d84:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d88:	f000 fcba 	bl	8008700 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007d8c:	4620      	mov	r0, r4
 8007d8e:	f7ff fc5b 	bl	8007648 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007d92:	f000 fb6f 	bl	8008474 <xTaskResumeAll>
 8007d96:	b948      	cbnz	r0, 8007dac <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007d98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007d9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007da0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007da4:	f3bf 8f4f 	dsb	sy
 8007da8:	f3bf 8f6f 	isb	sy
 8007dac:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007dae:	f7ff fab1 	bl	8007314 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007db2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007db4:	2b00      	cmp	r3, #0
 8007db6:	d0a8      	beq.n	8007d0a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007db8:	3b01      	subs	r3, #1
 8007dba:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007dbc:	6823      	ldr	r3, [r4, #0]
 8007dbe:	b913      	cbnz	r3, 8007dc6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007dc0:	f000 fe50 	bl	8008a64 <pvTaskIncrementMutexHeldCount>
 8007dc4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dc6:	6923      	ldr	r3, [r4, #16]
 8007dc8:	b173      	cbz	r3, 8007de8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007dca:	f104 0010 	add.w	r0, r4, #16
 8007dce:	f000 fccf 	bl	8008770 <xTaskRemoveFromEventList>
 8007dd2:	b148      	cbz	r0, 8007de8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007dd4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007dd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ddc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007de0:	f3bf 8f4f 	dsb	sy
 8007de4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007de8:	f7ff fab4 	bl	8007354 <vPortExitCritical>
				return pdPASS;
 8007dec:	2501      	movs	r5, #1
}
 8007dee:	4628      	mov	r0, r5
 8007df0:	b005      	add	sp, #20
 8007df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007df4:	4620      	mov	r0, r4
 8007df6:	f7ff fc27 	bl	8007648 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007dfa:	f000 fb3b 	bl	8008474 <xTaskResumeAll>
 8007dfe:	e7d5      	b.n	8007dac <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007e00:	4620      	mov	r0, r4
 8007e02:	f7ff fc21 	bl	8007648 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007e06:	f000 fb35 	bl	8008474 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007e0a:	4620      	mov	r0, r4
 8007e0c:	f7ff fbc6 	bl	800759c <prvIsQueueEmpty>
 8007e10:	2800      	cmp	r0, #0
 8007e12:	d0cb      	beq.n	8007dac <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007e14:	2d00      	cmp	r5, #0
 8007e16:	d0ea      	beq.n	8007dee <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007e18:	f7ff fa7c 	bl	8007314 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007e1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007e1e:	b119      	cbz	r1, 8007e28 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007e20:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e22:	6819      	ldr	r1, [r3, #0]
 8007e24:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007e28:	68a0      	ldr	r0, [r4, #8]
 8007e2a:	f000 fdc9 	bl	80089c0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007e2e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007e30:	f7ff fa90 	bl	8007354 <vPortExitCritical>
 8007e34:	e7db      	b.n	8007dee <xQueueSemaphoreTake+0x13e>

08007e36 <xQueueReceiveFromISR>:
{
 8007e36:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007e3a:	4689      	mov	r9, r1
 8007e3c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007e3e:	4605      	mov	r5, r0
 8007e40:	b940      	cbnz	r0, 8007e54 <xQueueReceiveFromISR+0x1e>
 8007e42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e46:	f383 8811 	msr	BASEPRI, r3
 8007e4a:	f3bf 8f6f 	isb	sy
 8007e4e:	f3bf 8f4f 	dsb	sy
 8007e52:	e7fe      	b.n	8007e52 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007e54:	b951      	cbnz	r1, 8007e6c <xQueueReceiveFromISR+0x36>
 8007e56:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007e58:	b143      	cbz	r3, 8007e6c <xQueueReceiveFromISR+0x36>
 8007e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e5e:	f383 8811 	msr	BASEPRI, r3
 8007e62:	f3bf 8f6f 	isb	sy
 8007e66:	f3bf 8f4f 	dsb	sy
 8007e6a:	e7fe      	b.n	8007e6a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007e6c:	f7ff fb68 	bl	8007540 <vPortValidateInterruptPriority>
	__asm volatile
 8007e70:	f3ef 8711 	mrs	r7, BASEPRI
 8007e74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e78:	f383 8811 	msr	BASEPRI, r3
 8007e7c:	f3bf 8f6f 	isb	sy
 8007e80:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007e84:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007e86:	b31c      	cbz	r4, 8007ed0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007e88:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e8c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007e8e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e90:	4628      	mov	r0, r5
 8007e92:	f7ff fbc3 	bl	800761c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e96:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007e98:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e9a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007e9c:	d113      	bne.n	8007ec6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e9e:	692b      	ldr	r3, [r5, #16]
 8007ea0:	b90b      	cbnz	r3, 8007ea6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007ea2:	2001      	movs	r0, #1
 8007ea4:	e00b      	b.n	8007ebe <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007ea6:	f105 0010 	add.w	r0, r5, #16
 8007eaa:	f000 fc61 	bl	8008770 <xTaskRemoveFromEventList>
 8007eae:	2800      	cmp	r0, #0
 8007eb0:	d0f7      	beq.n	8007ea2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007eb2:	f1b8 0f00 	cmp.w	r8, #0
 8007eb6:	d0f4      	beq.n	8007ea2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007eb8:	2001      	movs	r0, #1
 8007eba:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007ebe:	f387 8811 	msr	BASEPRI, r7
}
 8007ec2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007ec6:	3601      	adds	r6, #1
 8007ec8:	b276      	sxtb	r6, r6
 8007eca:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007ece:	e7e8      	b.n	8007ea2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007ed0:	4620      	mov	r0, r4
 8007ed2:	e7f4      	b.n	8007ebe <xQueueReceiveFromISR+0x88>

08007ed4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007ed4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007ed6:	4a07      	ldr	r2, [pc, #28]	; (8007ef4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007ed8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007eda:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8007ede:	b92c      	cbnz	r4, 8007eec <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007ee0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007ee4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8007ee8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007eea:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007eec:	3301      	adds	r3, #1
 8007eee:	2b08      	cmp	r3, #8
 8007ef0:	d1f3      	bne.n	8007eda <vQueueAddToRegistry+0x6>
 8007ef2:	e7fa      	b.n	8007eea <vQueueAddToRegistry+0x16>
 8007ef4:	20009ec0 	.word	0x20009ec0

08007ef8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007ef8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007efa:	4a08      	ldr	r2, [pc, #32]	; (8007f1c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007efc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007efe:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007f02:	684c      	ldr	r4, [r1, #4]
 8007f04:	4284      	cmp	r4, r0
 8007f06:	d104      	bne.n	8007f12 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007f08:	2000      	movs	r0, #0
 8007f0a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007f0e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007f10:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007f12:	3301      	adds	r3, #1
 8007f14:	2b08      	cmp	r3, #8
 8007f16:	d1f2      	bne.n	8007efe <vQueueUnregisterQueue+0x6>
 8007f18:	e7fa      	b.n	8007f10 <vQueueUnregisterQueue+0x18>
 8007f1a:	bf00      	nop
 8007f1c:	20009ec0 	.word	0x20009ec0

08007f20 <vQueueDelete>:
{
 8007f20:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007f22:	4604      	mov	r4, r0
 8007f24:	b940      	cbnz	r0, 8007f38 <vQueueDelete+0x18>
	__asm volatile
 8007f26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f2a:	f383 8811 	msr	BASEPRI, r3
 8007f2e:	f3bf 8f6f 	isb	sy
 8007f32:	f3bf 8f4f 	dsb	sy
 8007f36:	e7fe      	b.n	8007f36 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007f38:	f7ff ffde 	bl	8007ef8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007f3c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007f40:	b923      	cbnz	r3, 8007f4c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007f42:	4620      	mov	r0, r4
}
 8007f44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007f48:	f7ff b8fa 	b.w	8007140 <vPortFree>
}
 8007f4c:	bd10      	pop	{r4, pc}

08007f4e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007f4e:	b570      	push	{r4, r5, r6, lr}
 8007f50:	4604      	mov	r4, r0
 8007f52:	460d      	mov	r5, r1
 8007f54:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007f56:	f7ff f9dd 	bl	8007314 <vPortEnterCritical>
 8007f5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007f5e:	2bff      	cmp	r3, #255	; 0xff
 8007f60:	bf04      	itt	eq
 8007f62:	2300      	moveq	r3, #0
 8007f64:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007f68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007f6c:	2bff      	cmp	r3, #255	; 0xff
 8007f6e:	bf04      	itt	eq
 8007f70:	2300      	moveq	r3, #0
 8007f72:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007f76:	f7ff f9ed 	bl	8007354 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007f7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007f7c:	b92b      	cbnz	r3, 8007f8a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007f7e:	4632      	mov	r2, r6
 8007f80:	4629      	mov	r1, r5
 8007f82:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007f86:	f000 fbd5 	bl	8008734 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007f8a:	4620      	mov	r0, r4
	}
 8007f8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007f90:	f7ff bb5a 	b.w	8007648 <prvUnlockQueue>

08007f94 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f98:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007f9a:	f7ff f9bb 	bl	8007314 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007f9e:	4b30      	ldr	r3, [pc, #192]	; (8008060 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8007fa0:	4e30      	ldr	r6, [pc, #192]	; (8008064 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8007fa2:	681a      	ldr	r2, [r3, #0]
 8007fa4:	4f30      	ldr	r7, [pc, #192]	; (8008068 <prvAddNewTaskToReadyList+0xd4>)
 8007fa6:	3201      	adds	r2, #1
 8007fa8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007faa:	6835      	ldr	r5, [r6, #0]
 8007fac:	2d00      	cmp	r5, #0
 8007fae:	d14b      	bne.n	8008048 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007fb0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007fb2:	681b      	ldr	r3, [r3, #0]
 8007fb4:	2b01      	cmp	r3, #1
 8007fb6:	d11f      	bne.n	8007ff8 <prvAddNewTaskToReadyList+0x64>
 8007fb8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007fba:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007fbc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007fbe:	f7ff f8fd 	bl	80071bc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007fc2:	2d38      	cmp	r5, #56	; 0x38
 8007fc4:	f108 0814 	add.w	r8, r8, #20
 8007fc8:	d1f7      	bne.n	8007fba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007fca:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008090 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007fce:	4d27      	ldr	r5, [pc, #156]	; (800806c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8007fd0:	4640      	mov	r0, r8
 8007fd2:	f7ff f8f3 	bl	80071bc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007fd6:	4628      	mov	r0, r5
 8007fd8:	f7ff f8f0 	bl	80071bc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007fdc:	4824      	ldr	r0, [pc, #144]	; (8008070 <prvAddNewTaskToReadyList+0xdc>)
 8007fde:	f7ff f8ed 	bl	80071bc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007fe2:	4824      	ldr	r0, [pc, #144]	; (8008074 <prvAddNewTaskToReadyList+0xe0>)
 8007fe4:	f7ff f8ea 	bl	80071bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007fe8:	4823      	ldr	r0, [pc, #140]	; (8008078 <prvAddNewTaskToReadyList+0xe4>)
 8007fea:	f7ff f8e7 	bl	80071bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007fee:	4b23      	ldr	r3, [pc, #140]	; (800807c <prvAddNewTaskToReadyList+0xe8>)
 8007ff0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007ff4:	4b22      	ldr	r3, [pc, #136]	; (8008080 <prvAddNewTaskToReadyList+0xec>)
 8007ff6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8007ff8:	4a22      	ldr	r2, [pc, #136]	; (8008084 <prvAddNewTaskToReadyList+0xf0>)
 8007ffa:	6813      	ldr	r3, [r2, #0]
 8007ffc:	3301      	adds	r3, #1
 8007ffe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008000:	4a21      	ldr	r2, [pc, #132]	; (8008088 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008002:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008004:	6811      	ldr	r1, [r2, #0]
 8008006:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008008:	2014      	movs	r0, #20
 800800a:	428b      	cmp	r3, r1
 800800c:	fb00 7003 	mla	r0, r0, r3, r7
 8008010:	f104 0104 	add.w	r1, r4, #4
 8008014:	bf88      	it	hi
 8008016:	6013      	strhi	r3, [r2, #0]
 8008018:	f7ff f8de 	bl	80071d8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800801c:	f7ff f99a 	bl	8007354 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008020:	4b1a      	ldr	r3, [pc, #104]	; (800808c <prvAddNewTaskToReadyList+0xf8>)
 8008022:	681b      	ldr	r3, [r3, #0]
 8008024:	b173      	cbz	r3, 8008044 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008026:	6833      	ldr	r3, [r6, #0]
 8008028:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800802a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800802c:	429a      	cmp	r2, r3
 800802e:	d209      	bcs.n	8008044 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008030:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008034:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008038:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800803c:	f3bf 8f4f 	dsb	sy
 8008040:	f3bf 8f6f 	isb	sy
}
 8008044:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008048:	4b10      	ldr	r3, [pc, #64]	; (800808c <prvAddNewTaskToReadyList+0xf8>)
 800804a:	681b      	ldr	r3, [r3, #0]
 800804c:	2b00      	cmp	r3, #0
 800804e:	d1d3      	bne.n	8007ff8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008050:	6833      	ldr	r3, [r6, #0]
 8008052:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008054:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008056:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008058:	bf98      	it	ls
 800805a:	6034      	strls	r4, [r6, #0]
 800805c:	e7cc      	b.n	8007ff8 <prvAddNewTaskToReadyList+0x64>
 800805e:	bf00      	nop
 8008060:	2000a36c 	.word	0x2000a36c
 8008064:	20009f00 	.word	0x20009f00
 8008068:	20009f0c 	.word	0x20009f0c
 800806c:	2000a394 	.word	0x2000a394
 8008070:	2000a3b4 	.word	0x2000a3b4
 8008074:	2000a3e0 	.word	0x2000a3e0
 8008078:	2000a3cc 	.word	0x2000a3cc
 800807c:	20009f04 	.word	0x20009f04
 8008080:	20009f08 	.word	0x20009f08
 8008084:	2000a378 	.word	0x2000a378
 8008088:	2000a37c 	.word	0x2000a37c
 800808c:	2000a3c8 	.word	0x2000a3c8
 8008090:	2000a380 	.word	0x2000a380

08008094 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008096:	4b15      	ldr	r3, [pc, #84]	; (80080ec <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008098:	4e15      	ldr	r6, [pc, #84]	; (80080f0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800809a:	681d      	ldr	r5, [r3, #0]
{
 800809c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800809e:	6830      	ldr	r0, [r6, #0]
 80080a0:	3004      	adds	r0, #4
{
 80080a2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80080a4:	f7ff f8bb 	bl	800721e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80080a8:	1c63      	adds	r3, r4, #1
 80080aa:	d107      	bne.n	80080bc <prvAddCurrentTaskToDelayedList+0x28>
 80080ac:	b137      	cbz	r7, 80080bc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080ae:	6831      	ldr	r1, [r6, #0]
 80080b0:	4810      	ldr	r0, [pc, #64]	; (80080f4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80080b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080b6:	3104      	adds	r1, #4
 80080b8:	f7ff b88e 	b.w	80071d8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80080bc:	6833      	ldr	r3, [r6, #0]
 80080be:	192c      	adds	r4, r5, r4
 80080c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80080c2:	d307      	bcc.n	80080d4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080c4:	4b0c      	ldr	r3, [pc, #48]	; (80080f8 <prvAddCurrentTaskToDelayedList+0x64>)
 80080c6:	6818      	ldr	r0, [r3, #0]
 80080c8:	6831      	ldr	r1, [r6, #0]
}
 80080ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080ce:	3104      	adds	r1, #4
 80080d0:	f7ff b88e 	b.w	80071f0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080d4:	4b09      	ldr	r3, [pc, #36]	; (80080fc <prvAddCurrentTaskToDelayedList+0x68>)
 80080d6:	6818      	ldr	r0, [r3, #0]
 80080d8:	6831      	ldr	r1, [r6, #0]
 80080da:	3104      	adds	r1, #4
 80080dc:	f7ff f888 	bl	80071f0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80080e0:	4b07      	ldr	r3, [pc, #28]	; (8008100 <prvAddCurrentTaskToDelayedList+0x6c>)
 80080e2:	681a      	ldr	r2, [r3, #0]
 80080e4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80080e6:	bf88      	it	hi
 80080e8:	601c      	strhi	r4, [r3, #0]
}
 80080ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080ec:	2000a3f4 	.word	0x2000a3f4
 80080f0:	20009f00 	.word	0x20009f00
 80080f4:	2000a3cc 	.word	0x2000a3cc
 80080f8:	20009f08 	.word	0x20009f08
 80080fc:	20009f04 	.word	0x20009f04
 8008100:	2000a3a8 	.word	0x2000a3a8

08008104 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008104:	4a06      	ldr	r2, [pc, #24]	; (8008120 <prvResetNextTaskUnblockTime+0x1c>)
 8008106:	6813      	ldr	r3, [r2, #0]
 8008108:	6819      	ldr	r1, [r3, #0]
 800810a:	4b06      	ldr	r3, [pc, #24]	; (8008124 <prvResetNextTaskUnblockTime+0x20>)
 800810c:	b919      	cbnz	r1, 8008116 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800810e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008112:	601a      	str	r2, [r3, #0]
}
 8008114:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008116:	6812      	ldr	r2, [r2, #0]
 8008118:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800811a:	68d2      	ldr	r2, [r2, #12]
 800811c:	6852      	ldr	r2, [r2, #4]
 800811e:	e7f8      	b.n	8008112 <prvResetNextTaskUnblockTime+0xe>
 8008120:	20009f04 	.word	0x20009f04
 8008124:	2000a3a8 	.word	0x2000a3a8

08008128 <prvDeleteTCB>:
	{
 8008128:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800812a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800812e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008130:	b93b      	cbnz	r3, 8008142 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008132:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008134:	f7ff f804 	bl	8007140 <vPortFree>
				vPortFree( pxTCB );
 8008138:	4620      	mov	r0, r4
	}
 800813a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800813e:	f7fe bfff 	b.w	8007140 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008142:	2b01      	cmp	r3, #1
 8008144:	d0f9      	beq.n	800813a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008146:	2b02      	cmp	r3, #2
 8008148:	d008      	beq.n	800815c <prvDeleteTCB+0x34>
 800814a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800814e:	f383 8811 	msr	BASEPRI, r3
 8008152:	f3bf 8f6f 	isb	sy
 8008156:	f3bf 8f4f 	dsb	sy
 800815a:	e7fe      	b.n	800815a <prvDeleteTCB+0x32>
	}
 800815c:	bd10      	pop	{r4, pc}
	...

08008160 <prvIdleTask>:
{
 8008160:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008162:	4c14      	ldr	r4, [pc, #80]	; (80081b4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008164:	4f14      	ldr	r7, [pc, #80]	; (80081b8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8008166:	4d15      	ldr	r5, [pc, #84]	; (80081bc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008168:	6823      	ldr	r3, [r4, #0]
 800816a:	b983      	cbnz	r3, 800818e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800816c:	4b14      	ldr	r3, [pc, #80]	; (80081c0 <prvIdleTask+0x60>)
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	2b01      	cmp	r3, #1
 8008172:	d909      	bls.n	8008188 <prvIdleTask+0x28>
				taskYIELD();
 8008174:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008178:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800817c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008180:	f3bf 8f4f 	dsb	sy
 8008184:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008188:	f7f9 f948 	bl	800141c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800818c:	e7eb      	b.n	8008166 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800818e:	f7ff f8c1 	bl	8007314 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008192:	68fb      	ldr	r3, [r7, #12]
 8008194:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008196:	1d30      	adds	r0, r6, #4
 8008198:	f7ff f841 	bl	800721e <uxListRemove>
				--uxCurrentNumberOfTasks;
 800819c:	682b      	ldr	r3, [r5, #0]
 800819e:	3b01      	subs	r3, #1
 80081a0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80081a2:	6823      	ldr	r3, [r4, #0]
 80081a4:	3b01      	subs	r3, #1
 80081a6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80081a8:	f7ff f8d4 	bl	8007354 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80081ac:	4630      	mov	r0, r6
 80081ae:	f7ff ffbb 	bl	8008128 <prvDeleteTCB>
 80081b2:	e7d9      	b.n	8008168 <prvIdleTask+0x8>
 80081b4:	2000a370 	.word	0x2000a370
 80081b8:	2000a3e0 	.word	0x2000a3e0
 80081bc:	2000a36c 	.word	0x2000a36c
 80081c0:	20009f0c 	.word	0x20009f0c

080081c4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80081c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80081c8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80081cc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80081d0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80081d2:	4606      	mov	r6, r0
 80081d4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80081d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80081d8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80081da:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80081dc:	f013 fde6 	bl	801bdac <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80081e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80081e2:	f1a9 0904 	sub.w	r9, r9, #4
 80081e6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80081e8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80081ec:	b3b5      	cbz	r5, 800825c <prvInitialiseNewTask.constprop.0+0x98>
 80081ee:	1e6b      	subs	r3, r5, #1
 80081f0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80081f4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80081f6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80081fa:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80081fe:	b108      	cbz	r0, 8008204 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008200:	42ab      	cmp	r3, r5
 8008202:	d1f8      	bne.n	80081f6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008204:	2300      	movs	r3, #0
 8008206:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800820a:	9d08      	ldr	r5, [sp, #32]
 800820c:	2d37      	cmp	r5, #55	; 0x37
 800820e:	bf28      	it	cs
 8008210:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008212:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008216:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008218:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800821a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800821c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008220:	f7fe ffd7 	bl	80071d2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008224:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008228:	f104 0018 	add.w	r0, r4, #24
 800822c:	f7fe ffd1 	bl	80071d2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008230:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008234:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008236:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008238:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800823a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800823e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008242:	463a      	mov	r2, r7
 8008244:	4631      	mov	r1, r6
 8008246:	4648      	mov	r0, r9
 8008248:	f7ff f838 	bl	80072bc <pxPortInitialiseStack>
 800824c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800824e:	f1b8 0f00 	cmp.w	r8, #0
 8008252:	d001      	beq.n	8008258 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008254:	f8c8 4000 	str.w	r4, [r8]
}
 8008258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800825c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008260:	e7d3      	b.n	800820a <prvInitialiseNewTask.constprop.0+0x46>

08008262 <xTaskCreateStatic>:
	{
 8008262:	b570      	push	{r4, r5, r6, lr}
 8008264:	b086      	sub	sp, #24
 8008266:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800826a:	b945      	cbnz	r5, 800827e <xTaskCreateStatic+0x1c>
 800826c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008270:	f383 8811 	msr	BASEPRI, r3
 8008274:	f3bf 8f6f 	isb	sy
 8008278:	f3bf 8f4f 	dsb	sy
 800827c:	e7fe      	b.n	800827c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800827e:	b944      	cbnz	r4, 8008292 <xTaskCreateStatic+0x30>
 8008280:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008284:	f383 8811 	msr	BASEPRI, r3
 8008288:	f3bf 8f6f 	isb	sy
 800828c:	f3bf 8f4f 	dsb	sy
 8008290:	e7fe      	b.n	8008290 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008292:	2660      	movs	r6, #96	; 0x60
 8008294:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008296:	9e05      	ldr	r6, [sp, #20]
 8008298:	2e60      	cmp	r6, #96	; 0x60
 800829a:	d008      	beq.n	80082ae <xTaskCreateStatic+0x4c>
 800829c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082a0:	f383 8811 	msr	BASEPRI, r3
 80082a4:	f3bf 8f6f 	isb	sy
 80082a8:	f3bf 8f4f 	dsb	sy
 80082ac:	e7fe      	b.n	80082ac <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80082ae:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80082b0:	2502      	movs	r5, #2
 80082b2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80082b6:	ad04      	add	r5, sp, #16
 80082b8:	9501      	str	r5, [sp, #4]
 80082ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80082bc:	9402      	str	r4, [sp, #8]
 80082be:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80082c0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80082c2:	f7ff ff7f 	bl	80081c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80082c6:	4620      	mov	r0, r4
 80082c8:	f7ff fe64 	bl	8007f94 <prvAddNewTaskToReadyList>
	}
 80082cc:	9804      	ldr	r0, [sp, #16]
 80082ce:	b006      	add	sp, #24
 80082d0:	bd70      	pop	{r4, r5, r6, pc}

080082d2 <xTaskCreate>:
	{
 80082d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80082d6:	4607      	mov	r7, r0
 80082d8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80082da:	0090      	lsls	r0, r2, #2
	{
 80082dc:	4688      	mov	r8, r1
 80082de:	4616      	mov	r6, r2
 80082e0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80082e2:	f7fe fe95 	bl	8007010 <pvPortMalloc>
			if( pxStack != NULL )
 80082e6:	4605      	mov	r5, r0
 80082e8:	b1e8      	cbz	r0, 8008326 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80082ea:	2060      	movs	r0, #96	; 0x60
 80082ec:	f7fe fe90 	bl	8007010 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80082f0:	4604      	mov	r4, r0
 80082f2:	b1a8      	cbz	r0, 8008320 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80082f4:	2300      	movs	r3, #0
 80082f6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80082fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80082fc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80082fe:	9301      	str	r3, [sp, #4]
 8008300:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008302:	9002      	str	r0, [sp, #8]
 8008304:	9300      	str	r3, [sp, #0]
 8008306:	4632      	mov	r2, r6
 8008308:	464b      	mov	r3, r9
 800830a:	4641      	mov	r1, r8
 800830c:	4638      	mov	r0, r7
 800830e:	f7ff ff59 	bl	80081c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008312:	4620      	mov	r0, r4
 8008314:	f7ff fe3e 	bl	8007f94 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008318:	2001      	movs	r0, #1
	}
 800831a:	b005      	add	sp, #20
 800831c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008320:	4628      	mov	r0, r5
 8008322:	f7fe ff0d 	bl	8007140 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008326:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800832a:	e7f6      	b.n	800831a <xTaskCreate+0x48>

0800832c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800832c:	4a02      	ldr	r2, [pc, #8]	; (8008338 <vTaskSuspendAll+0xc>)
 800832e:	6813      	ldr	r3, [r2, #0]
 8008330:	3301      	adds	r3, #1
 8008332:	6013      	str	r3, [r2, #0]
}
 8008334:	4770      	bx	lr
 8008336:	bf00      	nop
 8008338:	2000a374 	.word	0x2000a374

0800833c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800833c:	4b01      	ldr	r3, [pc, #4]	; (8008344 <xTaskGetTickCount+0x8>)
 800833e:	6818      	ldr	r0, [r3, #0]
}
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	2000a3f4 	.word	0x2000a3f4

08008348 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008348:	4b3f      	ldr	r3, [pc, #252]	; (8008448 <xTaskIncrementTick+0x100>)
 800834a:	681b      	ldr	r3, [r3, #0]
{
 800834c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008350:	2b00      	cmp	r3, #0
 8008352:	d173      	bne.n	800843c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008354:	4b3d      	ldr	r3, [pc, #244]	; (800844c <xTaskIncrementTick+0x104>)
 8008356:	681d      	ldr	r5, [r3, #0]
 8008358:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800835a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800835c:	b9bd      	cbnz	r5, 800838e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800835e:	4b3c      	ldr	r3, [pc, #240]	; (8008450 <xTaskIncrementTick+0x108>)
 8008360:	681a      	ldr	r2, [r3, #0]
 8008362:	6812      	ldr	r2, [r2, #0]
 8008364:	b142      	cbz	r2, 8008378 <xTaskIncrementTick+0x30>
 8008366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800836a:	f383 8811 	msr	BASEPRI, r3
 800836e:	f3bf 8f6f 	isb	sy
 8008372:	f3bf 8f4f 	dsb	sy
 8008376:	e7fe      	b.n	8008376 <xTaskIncrementTick+0x2e>
 8008378:	4a36      	ldr	r2, [pc, #216]	; (8008454 <xTaskIncrementTick+0x10c>)
 800837a:	6819      	ldr	r1, [r3, #0]
 800837c:	6810      	ldr	r0, [r2, #0]
 800837e:	6018      	str	r0, [r3, #0]
 8008380:	6011      	str	r1, [r2, #0]
 8008382:	4a35      	ldr	r2, [pc, #212]	; (8008458 <xTaskIncrementTick+0x110>)
 8008384:	6813      	ldr	r3, [r2, #0]
 8008386:	3301      	adds	r3, #1
 8008388:	6013      	str	r3, [r2, #0]
 800838a:	f7ff febb 	bl	8008104 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800838e:	4e33      	ldr	r6, [pc, #204]	; (800845c <xTaskIncrementTick+0x114>)
 8008390:	4f33      	ldr	r7, [pc, #204]	; (8008460 <xTaskIncrementTick+0x118>)
 8008392:	6833      	ldr	r3, [r6, #0]
 8008394:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800846c <xTaskIncrementTick+0x124>
 8008398:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800839a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800839e:	d211      	bcs.n	80083c4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80083a0:	f8d8 3000 	ldr.w	r3, [r8]
 80083a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083a6:	2214      	movs	r2, #20
 80083a8:	4353      	muls	r3, r2
 80083aa:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80083ac:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80083ae:	4b2d      	ldr	r3, [pc, #180]	; (8008464 <xTaskIncrementTick+0x11c>)
 80083b0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80083b2:	bf28      	it	cs
 80083b4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	bf18      	it	ne
 80083ba:	2401      	movne	r4, #1
}
 80083bc:	4620      	mov	r0, r4
 80083be:	b003      	add	sp, #12
 80083c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083c4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008450 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80083c8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008470 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083cc:	f8d9 3000 	ldr.w	r3, [r9]
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	b91b      	cbnz	r3, 80083dc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083d4:	f04f 33ff 	mov.w	r3, #4294967295
 80083d8:	6033      	str	r3, [r6, #0]
					break;
 80083da:	e7e1      	b.n	80083a0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083dc:	f8d9 3000 	ldr.w	r3, [r9]
 80083e0:	68db      	ldr	r3, [r3, #12]
 80083e2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80083e6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80083ea:	4295      	cmp	r5, r2
 80083ec:	d201      	bcs.n	80083f2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80083ee:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80083f0:	e7d6      	b.n	80083a0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80083f2:	f10b 0104 	add.w	r1, fp, #4
 80083f6:	4608      	mov	r0, r1
 80083f8:	9101      	str	r1, [sp, #4]
 80083fa:	f7fe ff10 	bl	800721e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80083fe:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008402:	9901      	ldr	r1, [sp, #4]
 8008404:	b122      	cbz	r2, 8008410 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008406:	f10b 0018 	add.w	r0, fp, #24
 800840a:	f7fe ff08 	bl	800721e <uxListRemove>
 800840e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008410:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008414:	f8da 2000 	ldr.w	r2, [sl]
 8008418:	2314      	movs	r3, #20
 800841a:	4290      	cmp	r0, r2
 800841c:	bf88      	it	hi
 800841e:	f8ca 0000 	strhi.w	r0, [sl]
 8008422:	fb03 7000 	mla	r0, r3, r0, r7
 8008426:	f7fe fed7 	bl	80071d8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800842a:	f8d8 1000 	ldr.w	r1, [r8]
 800842e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008432:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008434:	429a      	cmp	r2, r3
 8008436:	bf28      	it	cs
 8008438:	2401      	movcs	r4, #1
 800843a:	e7c7      	b.n	80083cc <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800843c:	4a0a      	ldr	r2, [pc, #40]	; (8008468 <xTaskIncrementTick+0x120>)
 800843e:	6813      	ldr	r3, [r2, #0]
 8008440:	3301      	adds	r3, #1
 8008442:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008444:	2400      	movs	r4, #0
	return xSwitchRequired;
 8008446:	e7b9      	b.n	80083bc <xTaskIncrementTick+0x74>
 8008448:	2000a374 	.word	0x2000a374
 800844c:	2000a3f4 	.word	0x2000a3f4
 8008450:	20009f04 	.word	0x20009f04
 8008454:	20009f08 	.word	0x20009f08
 8008458:	2000a3ac 	.word	0x2000a3ac
 800845c:	2000a3a8 	.word	0x2000a3a8
 8008460:	20009f0c 	.word	0x20009f0c
 8008464:	2000a3f8 	.word	0x2000a3f8
 8008468:	2000a3b0 	.word	0x2000a3b0
 800846c:	20009f00 	.word	0x20009f00
 8008470:	2000a37c 	.word	0x2000a37c

08008474 <xTaskResumeAll>:
{
 8008474:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008476:	4c31      	ldr	r4, [pc, #196]	; (800853c <xTaskResumeAll+0xc8>)
 8008478:	6823      	ldr	r3, [r4, #0]
 800847a:	b943      	cbnz	r3, 800848e <xTaskResumeAll+0x1a>
 800847c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008480:	f383 8811 	msr	BASEPRI, r3
 8008484:	f3bf 8f6f 	isb	sy
 8008488:	f3bf 8f4f 	dsb	sy
 800848c:	e7fe      	b.n	800848c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800848e:	f7fe ff41 	bl	8007314 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008492:	6823      	ldr	r3, [r4, #0]
 8008494:	3b01      	subs	r3, #1
 8008496:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008498:	6824      	ldr	r4, [r4, #0]
 800849a:	b12c      	cbz	r4, 80084a8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800849c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800849e:	f7fe ff59 	bl	8007354 <vPortExitCritical>
}
 80084a2:	4620      	mov	r0, r4
 80084a4:	b003      	add	sp, #12
 80084a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80084a8:	4b25      	ldr	r3, [pc, #148]	; (8008540 <xTaskResumeAll+0xcc>)
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	2b00      	cmp	r3, #0
 80084ae:	d0f5      	beq.n	800849c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80084b0:	4d24      	ldr	r5, [pc, #144]	; (8008544 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80084b2:	4e25      	ldr	r6, [pc, #148]	; (8008548 <xTaskResumeAll+0xd4>)
 80084b4:	4f25      	ldr	r7, [pc, #148]	; (800854c <xTaskResumeAll+0xd8>)
 80084b6:	e01e      	b.n	80084f6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084b8:	68eb      	ldr	r3, [r5, #12]
 80084ba:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80084bc:	f104 0018 	add.w	r0, r4, #24
 80084c0:	f7fe fead 	bl	800721e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80084c4:	1d21      	adds	r1, r4, #4
 80084c6:	4608      	mov	r0, r1
 80084c8:	9101      	str	r1, [sp, #4]
 80084ca:	f7fe fea8 	bl	800721e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80084ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80084d0:	6832      	ldr	r2, [r6, #0]
 80084d2:	9901      	ldr	r1, [sp, #4]
 80084d4:	2014      	movs	r0, #20
 80084d6:	4293      	cmp	r3, r2
 80084d8:	fb00 7003 	mla	r0, r0, r3, r7
 80084dc:	bf88      	it	hi
 80084de:	6033      	strhi	r3, [r6, #0]
 80084e0:	f7fe fe7a 	bl	80071d8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80084e4:	4b1a      	ldr	r3, [pc, #104]	; (8008550 <xTaskResumeAll+0xdc>)
 80084e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80084e8:	681b      	ldr	r3, [r3, #0]
 80084ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084ec:	429a      	cmp	r2, r3
 80084ee:	d302      	bcc.n	80084f6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80084f0:	4b18      	ldr	r3, [pc, #96]	; (8008554 <xTaskResumeAll+0xe0>)
 80084f2:	2201      	movs	r2, #1
 80084f4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80084f6:	682b      	ldr	r3, [r5, #0]
 80084f8:	2b00      	cmp	r3, #0
 80084fa:	d1dd      	bne.n	80084b8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80084fc:	b10c      	cbz	r4, 8008502 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80084fe:	f7ff fe01 	bl	8008104 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008502:	4d15      	ldr	r5, [pc, #84]	; (8008558 <xTaskResumeAll+0xe4>)
 8008504:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008506:	b144      	cbz	r4, 800851a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008508:	4e12      	ldr	r6, [pc, #72]	; (8008554 <xTaskResumeAll+0xe0>)
 800850a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800850c:	f7ff ff1c 	bl	8008348 <xTaskIncrementTick>
 8008510:	b100      	cbz	r0, 8008514 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008512:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008514:	3c01      	subs	r4, #1
 8008516:	d1f9      	bne.n	800850c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008518:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800851a:	4b0e      	ldr	r3, [pc, #56]	; (8008554 <xTaskResumeAll+0xe0>)
 800851c:	681b      	ldr	r3, [r3, #0]
 800851e:	2b00      	cmp	r3, #0
 8008520:	d0bc      	beq.n	800849c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008522:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008526:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800852a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800852e:	f3bf 8f4f 	dsb	sy
 8008532:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008536:	2401      	movs	r4, #1
 8008538:	e7b1      	b.n	800849e <xTaskResumeAll+0x2a>
 800853a:	bf00      	nop
 800853c:	2000a374 	.word	0x2000a374
 8008540:	2000a36c 	.word	0x2000a36c
 8008544:	2000a3b4 	.word	0x2000a3b4
 8008548:	2000a37c 	.word	0x2000a37c
 800854c:	20009f0c 	.word	0x20009f0c
 8008550:	20009f00 	.word	0x20009f00
 8008554:	2000a3f8 	.word	0x2000a3f8
 8008558:	2000a3b0 	.word	0x2000a3b0

0800855c <vTaskDelay>:
	{
 800855c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800855e:	b950      	cbnz	r0, 8008576 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008560:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008564:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008568:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800856c:	f3bf 8f4f 	dsb	sy
 8008570:	f3bf 8f6f 	isb	sy
	}
 8008574:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008576:	4b0a      	ldr	r3, [pc, #40]	; (80085a0 <vTaskDelay+0x44>)
 8008578:	6819      	ldr	r1, [r3, #0]
 800857a:	b141      	cbz	r1, 800858e <vTaskDelay+0x32>
 800857c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008580:	f383 8811 	msr	BASEPRI, r3
 8008584:	f3bf 8f6f 	isb	sy
 8008588:	f3bf 8f4f 	dsb	sy
 800858c:	e7fe      	b.n	800858c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800858e:	f7ff fecd 	bl	800832c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008592:	f7ff fd7f 	bl	8008094 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008596:	f7ff ff6d 	bl	8008474 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800859a:	2800      	cmp	r0, #0
 800859c:	d0e0      	beq.n	8008560 <vTaskDelay+0x4>
 800859e:	e7e9      	b.n	8008574 <vTaskDelay+0x18>
 80085a0:	2000a374 	.word	0x2000a374

080085a4 <vTaskSetApplicationTaskTag>:
	{
 80085a4:	b538      	push	{r3, r4, r5, lr}
 80085a6:	460d      	mov	r5, r1
		if( xTask == NULL )
 80085a8:	4604      	mov	r4, r0
 80085aa:	b908      	cbnz	r0, 80085b0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80085ac:	4b04      	ldr	r3, [pc, #16]	; (80085c0 <vTaskSetApplicationTaskTag+0x1c>)
 80085ae:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80085b0:	f7fe feb0 	bl	8007314 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80085b4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80085b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80085ba:	f7fe becb 	b.w	8007354 <vPortExitCritical>
 80085be:	bf00      	nop
 80085c0:	20009f00 	.word	0x20009f00

080085c4 <xTaskCallApplicationTaskHook>:
	{
 80085c4:	4603      	mov	r3, r0
 80085c6:	4608      	mov	r0, r1
		if( xTask == NULL )
 80085c8:	b90b      	cbnz	r3, 80085ce <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80085ca:	4b03      	ldr	r3, [pc, #12]	; (80085d8 <xTaskCallApplicationTaskHook+0x14>)
 80085cc:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80085ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80085d0:	b103      	cbz	r3, 80085d4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80085d2:	4718      	bx	r3
	}
 80085d4:	4618      	mov	r0, r3
 80085d6:	4770      	bx	lr
 80085d8:	20009f00 	.word	0x20009f00

080085dc <vTaskStartScheduler>:
{
 80085dc:	b510      	push	{r4, lr}
 80085de:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80085e0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80085e2:	aa07      	add	r2, sp, #28
 80085e4:	a906      	add	r1, sp, #24
 80085e6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80085e8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80085ec:	f7fe fcd4 	bl	8006f98 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80085f0:	9b05      	ldr	r3, [sp, #20]
 80085f2:	9302      	str	r3, [sp, #8]
 80085f4:	9b06      	ldr	r3, [sp, #24]
 80085f6:	9a07      	ldr	r2, [sp, #28]
 80085f8:	4919      	ldr	r1, [pc, #100]	; (8008660 <vTaskStartScheduler+0x84>)
 80085fa:	481a      	ldr	r0, [pc, #104]	; (8008664 <vTaskStartScheduler+0x88>)
 80085fc:	e9cd 4300 	strd	r4, r3, [sp]
 8008600:	4623      	mov	r3, r4
 8008602:	f7ff fe2e 	bl	8008262 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008606:	b340      	cbz	r0, 800865a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008608:	f000 fa8a 	bl	8008b20 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800860c:	2801      	cmp	r0, #1
 800860e:	d119      	bne.n	8008644 <vTaskStartScheduler+0x68>
 8008610:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008614:	f383 8811 	msr	BASEPRI, r3
 8008618:	f3bf 8f6f 	isb	sy
 800861c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008620:	4b11      	ldr	r3, [pc, #68]	; (8008668 <vTaskStartScheduler+0x8c>)
 8008622:	f04f 32ff 	mov.w	r2, #4294967295
 8008626:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008628:	4b10      	ldr	r3, [pc, #64]	; (800866c <vTaskStartScheduler+0x90>)
 800862a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800862c:	4b10      	ldr	r3, [pc, #64]	; (8008670 <vTaskStartScheduler+0x94>)
 800862e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008630:	4b10      	ldr	r3, [pc, #64]	; (8008674 <vTaskStartScheduler+0x98>)
 8008632:	4621      	mov	r1, r4
 8008634:	6818      	ldr	r0, [r3, #0]
 8008636:	f7ff ffc5 	bl	80085c4 <xTaskCallApplicationTaskHook>
}
 800863a:	b008      	add	sp, #32
 800863c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008640:	f7fe bef8 	b.w	8007434 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008644:	3001      	adds	r0, #1
 8008646:	d108      	bne.n	800865a <vTaskStartScheduler+0x7e>
 8008648:	f04f 0350 	mov.w	r3, #80	; 0x50
 800864c:	f383 8811 	msr	BASEPRI, r3
 8008650:	f3bf 8f6f 	isb	sy
 8008654:	f3bf 8f4f 	dsb	sy
 8008658:	e7fe      	b.n	8008658 <vTaskStartScheduler+0x7c>
}
 800865a:	b008      	add	sp, #32
 800865c:	bd10      	pop	{r4, pc}
 800865e:	bf00      	nop
 8008660:	0801e001 	.word	0x0801e001
 8008664:	08008161 	.word	0x08008161
 8008668:	2000a3a8 	.word	0x2000a3a8
 800866c:	2000a3c8 	.word	0x2000a3c8
 8008670:	2000a3f4 	.word	0x2000a3f4
 8008674:	20009f00 	.word	0x20009f00

08008678 <vTaskSwitchContext>:
{
 8008678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800867a:	4b1c      	ldr	r3, [pc, #112]	; (80086ec <vTaskSwitchContext+0x74>)
 800867c:	681a      	ldr	r2, [r3, #0]
 800867e:	4b1c      	ldr	r3, [pc, #112]	; (80086f0 <vTaskSwitchContext+0x78>)
 8008680:	b112      	cbz	r2, 8008688 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008682:	2201      	movs	r2, #1
 8008684:	601a      	str	r2, [r3, #0]
}
 8008686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008688:	4c1a      	ldr	r4, [pc, #104]	; (80086f4 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800868a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800868c:	4e1a      	ldr	r6, [pc, #104]	; (80086f8 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800868e:	6820      	ldr	r0, [r4, #0]
 8008690:	2101      	movs	r1, #1
 8008692:	f7ff ff97 	bl	80085c4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008696:	6832      	ldr	r2, [r6, #0]
 8008698:	4918      	ldr	r1, [pc, #96]	; (80086fc <vTaskSwitchContext+0x84>)
 800869a:	2714      	movs	r7, #20
 800869c:	fb07 f302 	mul.w	r3, r7, r2
 80086a0:	18c8      	adds	r0, r1, r3
 80086a2:	58cd      	ldr	r5, [r1, r3]
 80086a4:	b1ad      	cbz	r5, 80086d2 <vTaskSwitchContext+0x5a>
 80086a6:	6845      	ldr	r5, [r0, #4]
 80086a8:	3308      	adds	r3, #8
 80086aa:	686d      	ldr	r5, [r5, #4]
 80086ac:	6045      	str	r5, [r0, #4]
 80086ae:	440b      	add	r3, r1
 80086b0:	429d      	cmp	r5, r3
 80086b2:	bf04      	itt	eq
 80086b4:	686b      	ldreq	r3, [r5, #4]
 80086b6:	6043      	streq	r3, [r0, #4]
 80086b8:	2314      	movs	r3, #20
 80086ba:	fb03 1102 	mla	r1, r3, r2, r1
 80086be:	684b      	ldr	r3, [r1, #4]
 80086c0:	68db      	ldr	r3, [r3, #12]
 80086c2:	6023      	str	r3, [r4, #0]
 80086c4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 80086c6:	6820      	ldr	r0, [r4, #0]
 80086c8:	2100      	movs	r1, #0
}
 80086ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 80086ce:	f7ff bf79 	b.w	80085c4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086d2:	b942      	cbnz	r2, 80086e6 <vTaskSwitchContext+0x6e>
 80086d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086d8:	f383 8811 	msr	BASEPRI, r3
 80086dc:	f3bf 8f6f 	isb	sy
 80086e0:	f3bf 8f4f 	dsb	sy
 80086e4:	e7fe      	b.n	80086e4 <vTaskSwitchContext+0x6c>
 80086e6:	3a01      	subs	r2, #1
 80086e8:	e7d8      	b.n	800869c <vTaskSwitchContext+0x24>
 80086ea:	bf00      	nop
 80086ec:	2000a374 	.word	0x2000a374
 80086f0:	2000a3f8 	.word	0x2000a3f8
 80086f4:	20009f00 	.word	0x20009f00
 80086f8:	2000a37c 	.word	0x2000a37c
 80086fc:	20009f0c 	.word	0x20009f0c

08008700 <vTaskPlaceOnEventList>:
{
 8008700:	b510      	push	{r4, lr}
 8008702:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008704:	b940      	cbnz	r0, 8008718 <vTaskPlaceOnEventList+0x18>
 8008706:	f04f 0350 	mov.w	r3, #80	; 0x50
 800870a:	f383 8811 	msr	BASEPRI, r3
 800870e:	f3bf 8f6f 	isb	sy
 8008712:	f3bf 8f4f 	dsb	sy
 8008716:	e7fe      	b.n	8008716 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008718:	4b05      	ldr	r3, [pc, #20]	; (8008730 <vTaskPlaceOnEventList+0x30>)
 800871a:	6819      	ldr	r1, [r3, #0]
 800871c:	3118      	adds	r1, #24
 800871e:	f7fe fd67 	bl	80071f0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008722:	4620      	mov	r0, r4
 8008724:	2101      	movs	r1, #1
}
 8008726:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800872a:	f7ff bcb3 	b.w	8008094 <prvAddCurrentTaskToDelayedList>
 800872e:	bf00      	nop
 8008730:	20009f00 	.word	0x20009f00

08008734 <vTaskPlaceOnEventListRestricted>:
	{
 8008734:	b538      	push	{r3, r4, r5, lr}
 8008736:	460d      	mov	r5, r1
 8008738:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800873a:	b940      	cbnz	r0, 800874e <vTaskPlaceOnEventListRestricted+0x1a>
 800873c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008740:	f383 8811 	msr	BASEPRI, r3
 8008744:	f3bf 8f6f 	isb	sy
 8008748:	f3bf 8f4f 	dsb	sy
 800874c:	e7fe      	b.n	800874c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800874e:	4b07      	ldr	r3, [pc, #28]	; (800876c <vTaskPlaceOnEventListRestricted+0x38>)
 8008750:	6819      	ldr	r1, [r3, #0]
 8008752:	3118      	adds	r1, #24
 8008754:	f7fe fd40 	bl	80071d8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008758:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800875a:	4621      	mov	r1, r4
 800875c:	bf0c      	ite	eq
 800875e:	4628      	moveq	r0, r5
 8008760:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008764:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008768:	f7ff bc94 	b.w	8008094 <prvAddCurrentTaskToDelayedList>
 800876c:	20009f00 	.word	0x20009f00

08008770 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008770:	68c3      	ldr	r3, [r0, #12]
{
 8008772:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008774:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008776:	b944      	cbnz	r4, 800878a <xTaskRemoveFromEventList+0x1a>
 8008778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800877c:	f383 8811 	msr	BASEPRI, r3
 8008780:	f3bf 8f6f 	isb	sy
 8008784:	f3bf 8f4f 	dsb	sy
 8008788:	e7fe      	b.n	8008788 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800878a:	f104 0118 	add.w	r1, r4, #24
 800878e:	4608      	mov	r0, r1
 8008790:	9101      	str	r1, [sp, #4]
 8008792:	f7fe fd44 	bl	800721e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008796:	4b12      	ldr	r3, [pc, #72]	; (80087e0 <xTaskRemoveFromEventList+0x70>)
 8008798:	9901      	ldr	r1, [sp, #4]
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	b9eb      	cbnz	r3, 80087da <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800879e:	1d21      	adds	r1, r4, #4
 80087a0:	4608      	mov	r0, r1
 80087a2:	9101      	str	r1, [sp, #4]
 80087a4:	f7fe fd3b 	bl	800721e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80087a8:	4a0e      	ldr	r2, [pc, #56]	; (80087e4 <xTaskRemoveFromEventList+0x74>)
 80087aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80087ac:	6810      	ldr	r0, [r2, #0]
 80087ae:	9901      	ldr	r1, [sp, #4]
 80087b0:	4283      	cmp	r3, r0
 80087b2:	bf88      	it	hi
 80087b4:	6013      	strhi	r3, [r2, #0]
 80087b6:	4a0c      	ldr	r2, [pc, #48]	; (80087e8 <xTaskRemoveFromEventList+0x78>)
 80087b8:	2014      	movs	r0, #20
 80087ba:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80087be:	f7fe fd0b 	bl	80071d8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80087c2:	4b0a      	ldr	r3, [pc, #40]	; (80087ec <xTaskRemoveFromEventList+0x7c>)
 80087c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80087ca:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80087cc:	bf85      	ittet	hi
 80087ce:	4b08      	ldrhi	r3, [pc, #32]	; (80087f0 <xTaskRemoveFromEventList+0x80>)
 80087d0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80087d2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80087d4:	6018      	strhi	r0, [r3, #0]
}
 80087d6:	b002      	add	sp, #8
 80087d8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80087da:	4806      	ldr	r0, [pc, #24]	; (80087f4 <xTaskRemoveFromEventList+0x84>)
 80087dc:	e7ef      	b.n	80087be <xTaskRemoveFromEventList+0x4e>
 80087de:	bf00      	nop
 80087e0:	2000a374 	.word	0x2000a374
 80087e4:	2000a37c 	.word	0x2000a37c
 80087e8:	20009f0c 	.word	0x20009f0c
 80087ec:	20009f00 	.word	0x20009f00
 80087f0:	2000a3f8 	.word	0x2000a3f8
 80087f4:	2000a3b4 	.word	0x2000a3b4

080087f8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80087f8:	4b03      	ldr	r3, [pc, #12]	; (8008808 <vTaskInternalSetTimeOutState+0x10>)
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80087fe:	4b03      	ldr	r3, [pc, #12]	; (800880c <vTaskInternalSetTimeOutState+0x14>)
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	6043      	str	r3, [r0, #4]
}
 8008804:	4770      	bx	lr
 8008806:	bf00      	nop
 8008808:	2000a3ac 	.word	0x2000a3ac
 800880c:	2000a3f4 	.word	0x2000a3f4

08008810 <xTaskCheckForTimeOut>:
{
 8008810:	b570      	push	{r4, r5, r6, lr}
 8008812:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008814:	4605      	mov	r5, r0
 8008816:	b940      	cbnz	r0, 800882a <xTaskCheckForTimeOut+0x1a>
 8008818:	f04f 0350 	mov.w	r3, #80	; 0x50
 800881c:	f383 8811 	msr	BASEPRI, r3
 8008820:	f3bf 8f6f 	isb	sy
 8008824:	f3bf 8f4f 	dsb	sy
 8008828:	e7fe      	b.n	8008828 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800882a:	b941      	cbnz	r1, 800883e <xTaskCheckForTimeOut+0x2e>
 800882c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008830:	f383 8811 	msr	BASEPRI, r3
 8008834:	f3bf 8f6f 	isb	sy
 8008838:	f3bf 8f4f 	dsb	sy
 800883c:	e7fe      	b.n	800883c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800883e:	f7fe fd69 	bl	8007314 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008842:	4b0f      	ldr	r3, [pc, #60]	; (8008880 <xTaskCheckForTimeOut+0x70>)
 8008844:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008846:	6823      	ldr	r3, [r4, #0]
 8008848:	1c5a      	adds	r2, r3, #1
 800884a:	d010      	beq.n	800886e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800884c:	480d      	ldr	r0, [pc, #52]	; (8008884 <xTaskCheckForTimeOut+0x74>)
 800884e:	682e      	ldr	r6, [r5, #0]
 8008850:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008852:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008854:	4286      	cmp	r6, r0
 8008856:	d001      	beq.n	800885c <xTaskCheckForTimeOut+0x4c>
 8008858:	428a      	cmp	r2, r1
 800885a:	d90f      	bls.n	800887c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800885c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800885e:	4283      	cmp	r3, r0
 8008860:	d90a      	bls.n	8008878 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008862:	1a5b      	subs	r3, r3, r1
 8008864:	4413      	add	r3, r2
 8008866:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008868:	4628      	mov	r0, r5
 800886a:	f7ff ffc5 	bl	80087f8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800886e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008870:	f7fe fd70 	bl	8007354 <vPortExitCritical>
}
 8008874:	4620      	mov	r0, r4
 8008876:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008878:	2300      	movs	r3, #0
 800887a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800887c:	2401      	movs	r4, #1
 800887e:	e7f7      	b.n	8008870 <xTaskCheckForTimeOut+0x60>
 8008880:	2000a3f4 	.word	0x2000a3f4
 8008884:	2000a3ac 	.word	0x2000a3ac

08008888 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008888:	4b01      	ldr	r3, [pc, #4]	; (8008890 <vTaskMissedYield+0x8>)
 800888a:	2201      	movs	r2, #1
 800888c:	601a      	str	r2, [r3, #0]
}
 800888e:	4770      	bx	lr
 8008890:	2000a3f8 	.word	0x2000a3f8

08008894 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008894:	4b05      	ldr	r3, [pc, #20]	; (80088ac <xTaskGetSchedulerState+0x18>)
 8008896:	681b      	ldr	r3, [r3, #0]
 8008898:	b133      	cbz	r3, 80088a8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800889a:	4b05      	ldr	r3, [pc, #20]	; (80088b0 <xTaskGetSchedulerState+0x1c>)
 800889c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800889e:	2b00      	cmp	r3, #0
 80088a0:	bf0c      	ite	eq
 80088a2:	2002      	moveq	r0, #2
 80088a4:	2000      	movne	r0, #0
 80088a6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80088a8:	2001      	movs	r0, #1
	}
 80088aa:	4770      	bx	lr
 80088ac:	2000a3c8 	.word	0x2000a3c8
 80088b0:	2000a374 	.word	0x2000a374

080088b4 <xTaskPriorityInherit>:
	{
 80088b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80088b6:	4604      	mov	r4, r0
 80088b8:	b348      	cbz	r0, 800890e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80088ba:	4d1c      	ldr	r5, [pc, #112]	; (800892c <xTaskPriorityInherit+0x78>)
 80088bc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80088be:	682a      	ldr	r2, [r5, #0]
 80088c0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80088c2:	4293      	cmp	r3, r2
 80088c4:	d229      	bcs.n	800891a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80088c6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80088c8:	4e19      	ldr	r6, [pc, #100]	; (8008930 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80088ca:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088cc:	bfa1      	itttt	ge
 80088ce:	682a      	ldrge	r2, [r5, #0]
 80088d0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80088d2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80088d6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80088d8:	2214      	movs	r2, #20
 80088da:	fb02 6303 	mla	r3, r2, r3, r6
 80088de:	6942      	ldr	r2, [r0, #20]
 80088e0:	429a      	cmp	r2, r3
 80088e2:	d116      	bne.n	8008912 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80088e4:	1d01      	adds	r1, r0, #4
 80088e6:	4608      	mov	r0, r1
 80088e8:	9101      	str	r1, [sp, #4]
 80088ea:	f7fe fc98 	bl	800721e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80088ee:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80088f0:	4a10      	ldr	r2, [pc, #64]	; (8008934 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80088f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80088f4:	6810      	ldr	r0, [r2, #0]
 80088f6:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80088f8:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80088fa:	4283      	cmp	r3, r0
 80088fc:	f04f 0014 	mov.w	r0, #20
 8008900:	fb00 6003 	mla	r0, r0, r3, r6
 8008904:	bf88      	it	hi
 8008906:	6013      	strhi	r3, [r2, #0]
 8008908:	f7fe fc66 	bl	80071d8 <vListInsertEnd>
				xReturn = pdTRUE;
 800890c:	2001      	movs	r0, #1
	}
 800890e:	b002      	add	sp, #8
 8008910:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008912:	682b      	ldr	r3, [r5, #0]
 8008914:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008916:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008918:	e7f8      	b.n	800890c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800891a:	682b      	ldr	r3, [r5, #0]
 800891c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800891e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008920:	42a0      	cmp	r0, r4
 8008922:	bf2c      	ite	cs
 8008924:	2000      	movcs	r0, #0
 8008926:	2001      	movcc	r0, #1
 8008928:	e7f1      	b.n	800890e <xTaskPriorityInherit+0x5a>
 800892a:	bf00      	nop
 800892c:	20009f00 	.word	0x20009f00
 8008930:	20009f0c 	.word	0x20009f0c
 8008934:	2000a37c 	.word	0x2000a37c

08008938 <xTaskPriorityDisinherit>:
	{
 8008938:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800893a:	b910      	cbnz	r0, 8008942 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800893c:	2000      	movs	r0, #0
	}
 800893e:	b002      	add	sp, #8
 8008940:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008942:	4b1c      	ldr	r3, [pc, #112]	; (80089b4 <xTaskPriorityDisinherit+0x7c>)
 8008944:	681c      	ldr	r4, [r3, #0]
 8008946:	4284      	cmp	r4, r0
 8008948:	d008      	beq.n	800895c <xTaskPriorityDisinherit+0x24>
 800894a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800894e:	f383 8811 	msr	BASEPRI, r3
 8008952:	f3bf 8f6f 	isb	sy
 8008956:	f3bf 8f4f 	dsb	sy
 800895a:	e7fe      	b.n	800895a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800895c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800895e:	b943      	cbnz	r3, 8008972 <xTaskPriorityDisinherit+0x3a>
 8008960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008964:	f383 8811 	msr	BASEPRI, r3
 8008968:	f3bf 8f6f 	isb	sy
 800896c:	f3bf 8f4f 	dsb	sy
 8008970:	e7fe      	b.n	8008970 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008972:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008974:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008976:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008978:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800897a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800897c:	d0de      	beq.n	800893c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800897e:	2b00      	cmp	r3, #0
 8008980:	d1dc      	bne.n	800893c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008982:	1d21      	adds	r1, r4, #4
 8008984:	4608      	mov	r0, r1
 8008986:	9101      	str	r1, [sp, #4]
 8008988:	f7fe fc49 	bl	800721e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800898c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800898e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008990:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008992:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008996:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008998:	4a07      	ldr	r2, [pc, #28]	; (80089b8 <xTaskPriorityDisinherit+0x80>)
 800899a:	6810      	ldr	r0, [r2, #0]
 800899c:	4283      	cmp	r3, r0
 800899e:	bf88      	it	hi
 80089a0:	6013      	strhi	r3, [r2, #0]
 80089a2:	4a06      	ldr	r2, [pc, #24]	; (80089bc <xTaskPriorityDisinherit+0x84>)
 80089a4:	2014      	movs	r0, #20
 80089a6:	fb00 2003 	mla	r0, r0, r3, r2
 80089aa:	f7fe fc15 	bl	80071d8 <vListInsertEnd>
					xReturn = pdTRUE;
 80089ae:	2001      	movs	r0, #1
		return xReturn;
 80089b0:	e7c5      	b.n	800893e <xTaskPriorityDisinherit+0x6>
 80089b2:	bf00      	nop
 80089b4:	20009f00 	.word	0x20009f00
 80089b8:	2000a37c 	.word	0x2000a37c
 80089bc:	20009f0c 	.word	0x20009f0c

080089c0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80089c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80089c2:	4604      	mov	r4, r0
 80089c4:	2800      	cmp	r0, #0
 80089c6:	d044      	beq.n	8008a52 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 80089c8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80089ca:	b942      	cbnz	r2, 80089de <vTaskPriorityDisinheritAfterTimeout+0x1e>
 80089cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089d0:	f383 8811 	msr	BASEPRI, r3
 80089d4:	f3bf 8f6f 	isb	sy
 80089d8:	f3bf 8f4f 	dsb	sy
 80089dc:	e7fe      	b.n	80089dc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80089de:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80089e0:	4299      	cmp	r1, r3
 80089e2:	bf38      	it	cc
 80089e4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80089e6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80089e8:	428b      	cmp	r3, r1
 80089ea:	d032      	beq.n	8008a52 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80089ec:	2a01      	cmp	r2, #1
 80089ee:	d130      	bne.n	8008a52 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 80089f0:	4a19      	ldr	r2, [pc, #100]	; (8008a58 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80089f2:	6812      	ldr	r2, [r2, #0]
 80089f4:	4282      	cmp	r2, r0
 80089f6:	d108      	bne.n	8008a0a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80089f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089fc:	f383 8811 	msr	BASEPRI, r3
 8008a00:	f3bf 8f6f 	isb	sy
 8008a04:	f3bf 8f4f 	dsb	sy
 8008a08:	e7fe      	b.n	8008a08 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a0a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a0c:	4d13      	ldr	r5, [pc, #76]	; (8008a5c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008a0e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a10:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a12:	f04f 0214 	mov.w	r2, #20
 8008a16:	fb02 5303 	mla	r3, r2, r3, r5
 8008a1a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a1c:	bfa4      	itt	ge
 8008a1e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008a22:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a24:	429a      	cmp	r2, r3
 8008a26:	d114      	bne.n	8008a52 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a28:	1d01      	adds	r1, r0, #4
 8008a2a:	4608      	mov	r0, r1
 8008a2c:	9101      	str	r1, [sp, #4]
 8008a2e:	f7fe fbf6 	bl	800721e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008a32:	4a0b      	ldr	r2, [pc, #44]	; (8008a60 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008a34:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a36:	6810      	ldr	r0, [r2, #0]
 8008a38:	9901      	ldr	r1, [sp, #4]
 8008a3a:	4283      	cmp	r3, r0
 8008a3c:	f04f 0014 	mov.w	r0, #20
 8008a40:	fb00 5003 	mla	r0, r0, r3, r5
 8008a44:	bf88      	it	hi
 8008a46:	6013      	strhi	r3, [r2, #0]
	}
 8008a48:	b003      	add	sp, #12
 8008a4a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008a4e:	f7fe bbc3 	b.w	80071d8 <vListInsertEnd>
	}
 8008a52:	b003      	add	sp, #12
 8008a54:	bd30      	pop	{r4, r5, pc}
 8008a56:	bf00      	nop
 8008a58:	20009f00 	.word	0x20009f00
 8008a5c:	20009f0c 	.word	0x20009f0c
 8008a60:	2000a37c 	.word	0x2000a37c

08008a64 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008a64:	4b04      	ldr	r3, [pc, #16]	; (8008a78 <pvTaskIncrementMutexHeldCount+0x14>)
 8008a66:	681a      	ldr	r2, [r3, #0]
 8008a68:	b11a      	cbz	r2, 8008a72 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008a6a:	6819      	ldr	r1, [r3, #0]
 8008a6c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008a6e:	3201      	adds	r2, #1
 8008a70:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008a72:	6818      	ldr	r0, [r3, #0]
	}
 8008a74:	4770      	bx	lr
 8008a76:	bf00      	nop
 8008a78:	20009f00 	.word	0x20009f00

08008a7c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008a7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008a7e:	4c11      	ldr	r4, [pc, #68]	; (8008ac4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008a80:	f7fe fc48 	bl	8007314 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008a84:	6825      	ldr	r5, [r4, #0]
 8008a86:	b9bd      	cbnz	r5, 8008ab8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008a88:	4f0f      	ldr	r7, [pc, #60]	; (8008ac8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008a8a:	4e10      	ldr	r6, [pc, #64]	; (8008acc <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008a8c:	4638      	mov	r0, r7
 8008a8e:	f7fe fb95 	bl	80071bc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008a92:	4630      	mov	r0, r6
 8008a94:	f7fe fb92 	bl	80071bc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008a98:	4b0d      	ldr	r3, [pc, #52]	; (8008ad0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008a9a:	4a0e      	ldr	r2, [pc, #56]	; (8008ad4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008a9c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008a9e:	4b0e      	ldr	r3, [pc, #56]	; (8008ad8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008aa0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008aa2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008aa4:	200a      	movs	r0, #10
 8008aa6:	4b0d      	ldr	r3, [pc, #52]	; (8008adc <prvCheckForValidListAndQueue+0x60>)
 8008aa8:	9500      	str	r5, [sp, #0]
 8008aaa:	f7fe fe44 	bl	8007736 <xQueueGenericCreateStatic>
 8008aae:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008ab0:	b110      	cbz	r0, 8008ab8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008ab2:	490b      	ldr	r1, [pc, #44]	; (8008ae0 <prvCheckForValidListAndQueue+0x64>)
 8008ab4:	f7ff fa0e 	bl	8007ed4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008ab8:	b003      	add	sp, #12
 8008aba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008abe:	f7fe bc49 	b.w	8007354 <vPortExitCritical>
 8008ac2:	bf00      	nop
 8008ac4:	2000a520 	.word	0x2000a520
 8008ac8:	2000a4a4 	.word	0x2000a4a4
 8008acc:	2000a4b8 	.word	0x2000a4b8
 8008ad0:	2000a3fc 	.word	0x2000a3fc
 8008ad4:	2000a404 	.word	0x2000a404
 8008ad8:	2000a400 	.word	0x2000a400
 8008adc:	2000a4d0 	.word	0x2000a4d0
 8008ae0:	0801e006 	.word	0x0801e006

08008ae4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008ae4:	4291      	cmp	r1, r2
{
 8008ae6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008ae8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008aea:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008aec:	d80a      	bhi.n	8008b04 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008aee:	1ad2      	subs	r2, r2, r3
 8008af0:	6983      	ldr	r3, [r0, #24]
 8008af2:	429a      	cmp	r2, r3
 8008af4:	d20d      	bcs.n	8008b12 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008af6:	4b08      	ldr	r3, [pc, #32]	; (8008b18 <prvInsertTimerInActiveList+0x34>)
 8008af8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008afa:	6818      	ldr	r0, [r3, #0]
 8008afc:	f7fe fb78 	bl	80071f0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008b00:	2000      	movs	r0, #0
}
 8008b02:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008b04:	429a      	cmp	r2, r3
 8008b06:	d201      	bcs.n	8008b0c <prvInsertTimerInActiveList+0x28>
 8008b08:	4299      	cmp	r1, r3
 8008b0a:	d202      	bcs.n	8008b12 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008b0c:	4b03      	ldr	r3, [pc, #12]	; (8008b1c <prvInsertTimerInActiveList+0x38>)
 8008b0e:	1d01      	adds	r1, r0, #4
 8008b10:	e7f3      	b.n	8008afa <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008b12:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008b14:	e7f5      	b.n	8008b02 <prvInsertTimerInActiveList+0x1e>
 8008b16:	bf00      	nop
 8008b18:	2000a400 	.word	0x2000a400
 8008b1c:	2000a3fc 	.word	0x2000a3fc

08008b20 <xTimerCreateTimerTask>:
{
 8008b20:	b510      	push	{r4, lr}
 8008b22:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008b24:	f7ff ffaa 	bl	8008a7c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008b28:	4b12      	ldr	r3, [pc, #72]	; (8008b74 <xTimerCreateTimerTask+0x54>)
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	b1b3      	cbz	r3, 8008b5c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008b2e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b30:	aa07      	add	r2, sp, #28
 8008b32:	a906      	add	r1, sp, #24
 8008b34:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008b36:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b3a:	f7fe fa39 	bl	8006fb0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008b3e:	9b05      	ldr	r3, [sp, #20]
 8008b40:	9302      	str	r3, [sp, #8]
 8008b42:	9b06      	ldr	r3, [sp, #24]
 8008b44:	9301      	str	r3, [sp, #4]
 8008b46:	2302      	movs	r3, #2
 8008b48:	9300      	str	r3, [sp, #0]
 8008b4a:	9a07      	ldr	r2, [sp, #28]
 8008b4c:	490a      	ldr	r1, [pc, #40]	; (8008b78 <xTimerCreateTimerTask+0x58>)
 8008b4e:	480b      	ldr	r0, [pc, #44]	; (8008b7c <xTimerCreateTimerTask+0x5c>)
 8008b50:	4623      	mov	r3, r4
 8008b52:	f7ff fb86 	bl	8008262 <xTaskCreateStatic>
 8008b56:	4b0a      	ldr	r3, [pc, #40]	; (8008b80 <xTimerCreateTimerTask+0x60>)
 8008b58:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008b5a:	b940      	cbnz	r0, 8008b6e <xTimerCreateTimerTask+0x4e>
 8008b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b60:	f383 8811 	msr	BASEPRI, r3
 8008b64:	f3bf 8f6f 	isb	sy
 8008b68:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008b6c:	e7fe      	b.n	8008b6c <xTimerCreateTimerTask+0x4c>
}
 8008b6e:	2001      	movs	r0, #1
 8008b70:	b008      	add	sp, #32
 8008b72:	bd10      	pop	{r4, pc}
 8008b74:	2000a520 	.word	0x2000a520
 8008b78:	0801e00b 	.word	0x0801e00b
 8008b7c:	08008c89 	.word	0x08008c89
 8008b80:	2000a524 	.word	0x2000a524

08008b84 <xTimerGenericCommand>:
{
 8008b84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008b86:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008b88:	4604      	mov	r4, r0
{
 8008b8a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008b8c:	b940      	cbnz	r0, 8008ba0 <xTimerGenericCommand+0x1c>
 8008b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b92:	f383 8811 	msr	BASEPRI, r3
 8008b96:	f3bf 8f6f 	isb	sy
 8008b9a:	f3bf 8f4f 	dsb	sy
 8008b9e:	e7fe      	b.n	8008b9e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008ba0:	4d0d      	ldr	r5, [pc, #52]	; (8008bd8 <xTimerGenericCommand+0x54>)
 8008ba2:	6828      	ldr	r0, [r5, #0]
 8008ba4:	b180      	cbz	r0, 8008bc8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008ba6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008ba8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008bac:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008bae:	dc0d      	bgt.n	8008bcc <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008bb0:	f7ff fe70 	bl	8008894 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008bb4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008bb6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008bb8:	bf08      	it	eq
 8008bba:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008bbc:	6828      	ldr	r0, [r5, #0]
 8008bbe:	bf18      	it	ne
 8008bc0:	461a      	movne	r2, r3
 8008bc2:	4669      	mov	r1, sp
 8008bc4:	f7fe fe6c 	bl	80078a0 <xQueueGenericSend>
}
 8008bc8:	b004      	add	sp, #16
 8008bca:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008bcc:	2300      	movs	r3, #0
 8008bce:	4669      	mov	r1, sp
 8008bd0:	f7fe ff19 	bl	8007a06 <xQueueGenericSendFromISR>
 8008bd4:	e7f8      	b.n	8008bc8 <xTimerGenericCommand+0x44>
 8008bd6:	bf00      	nop
 8008bd8:	2000a520 	.word	0x2000a520

08008bdc <prvSampleTimeNow>:
{
 8008bdc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008be0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8008c84 <prvSampleTimeNow+0xa8>
{
 8008be4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008be6:	f7ff fba9 	bl	800833c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008bea:	f8d8 3000 	ldr.w	r3, [r8]
 8008bee:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008bf0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008bf2:	d940      	bls.n	8008c76 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008bf4:	4f21      	ldr	r7, [pc, #132]	; (8008c7c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008bf6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008bfa:	683b      	ldr	r3, [r7, #0]
 8008bfc:	681a      	ldr	r2, [r3, #0]
 8008bfe:	b95a      	cbnz	r2, 8008c18 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008c00:	4a1f      	ldr	r2, [pc, #124]	; (8008c80 <prvSampleTimeNow+0xa4>)
 8008c02:	6811      	ldr	r1, [r2, #0]
 8008c04:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008c06:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008c08:	2301      	movs	r3, #1
}
 8008c0a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8008c0c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008c0e:	f8c8 5000 	str.w	r5, [r8]
}
 8008c12:	b004      	add	sp, #16
 8008c14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c18:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c1a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c1c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008c20:	1d21      	adds	r1, r4, #4
 8008c22:	4608      	mov	r0, r1
 8008c24:	9103      	str	r1, [sp, #12]
 8008c26:	f7fe fafa 	bl	800721e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008c2a:	6a23      	ldr	r3, [r4, #32]
 8008c2c:	4620      	mov	r0, r4
 8008c2e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008c30:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008c34:	9903      	ldr	r1, [sp, #12]
 8008c36:	f013 0f04 	tst.w	r3, #4
 8008c3a:	d0de      	beq.n	8008bfa <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008c3c:	69a3      	ldr	r3, [r4, #24]
 8008c3e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8008c40:	459a      	cmp	sl, r3
 8008c42:	d205      	bcs.n	8008c50 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008c44:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008c46:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008c48:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008c4a:	f7fe fad1 	bl	80071f0 <vListInsert>
 8008c4e:	e7d4      	b.n	8008bfa <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008c50:	2300      	movs	r3, #0
 8008c52:	f8cd 9000 	str.w	r9, [sp]
 8008c56:	4652      	mov	r2, sl
 8008c58:	4619      	mov	r1, r3
 8008c5a:	4620      	mov	r0, r4
 8008c5c:	f7ff ff92 	bl	8008b84 <xTimerGenericCommand>
				configASSERT( xResult );
 8008c60:	2800      	cmp	r0, #0
 8008c62:	d1ca      	bne.n	8008bfa <prvSampleTimeNow+0x1e>
 8008c64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c68:	f383 8811 	msr	BASEPRI, r3
 8008c6c:	f3bf 8f6f 	isb	sy
 8008c70:	f3bf 8f4f 	dsb	sy
 8008c74:	e7fe      	b.n	8008c74 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8008c76:	2300      	movs	r3, #0
 8008c78:	e7c7      	b.n	8008c0a <prvSampleTimeNow+0x2e>
 8008c7a:	bf00      	nop
 8008c7c:	2000a3fc 	.word	0x2000a3fc
 8008c80:	2000a400 	.word	0x2000a400
 8008c84:	2000a4cc 	.word	0x2000a4cc

08008c88 <prvTimerTask>:
{
 8008c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008c8c:	4d6e      	ldr	r5, [pc, #440]	; (8008e48 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008c8e:	4e6f      	ldr	r6, [pc, #444]	; (8008e4c <prvTimerTask+0x1c4>)
{
 8008c90:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008c92:	682b      	ldr	r3, [r5, #0]
 8008c94:	f8d3 8000 	ldr.w	r8, [r3]
 8008c98:	f1b8 0f00 	cmp.w	r8, #0
 8008c9c:	d035      	beq.n	8008d0a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c9e:	68db      	ldr	r3, [r3, #12]
 8008ca0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008ca4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008ca6:	f7ff fb41 	bl	800832c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008caa:	a804      	add	r0, sp, #16
 8008cac:	f7ff ff96 	bl	8008bdc <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008cb0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008cb2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008cb4:	2b00      	cmp	r3, #0
 8008cb6:	d169      	bne.n	8008d8c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008cb8:	2c00      	cmp	r4, #0
 8008cba:	d14c      	bne.n	8008d56 <prvTimerTask+0xce>
 8008cbc:	4540      	cmp	r0, r8
 8008cbe:	d350      	bcc.n	8008d62 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008cc0:	f7ff fbd8 	bl	8008474 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008cc4:	682b      	ldr	r3, [r5, #0]
 8008cc6:	68db      	ldr	r3, [r3, #12]
 8008cc8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008cca:	1d38      	adds	r0, r7, #4
 8008ccc:	f7fe faa7 	bl	800721e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008cd0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008cd4:	0758      	lsls	r0, r3, #29
 8008cd6:	d51a      	bpl.n	8008d0e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008cd8:	69b9      	ldr	r1, [r7, #24]
 8008cda:	4643      	mov	r3, r8
 8008cdc:	464a      	mov	r2, r9
 8008cde:	4441      	add	r1, r8
 8008ce0:	4638      	mov	r0, r7
 8008ce2:	f7ff feff 	bl	8008ae4 <prvInsertTimerInActiveList>
 8008ce6:	b1b0      	cbz	r0, 8008d16 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008ce8:	9400      	str	r4, [sp, #0]
 8008cea:	4623      	mov	r3, r4
 8008cec:	4642      	mov	r2, r8
 8008cee:	4621      	mov	r1, r4
 8008cf0:	4638      	mov	r0, r7
 8008cf2:	f7ff ff47 	bl	8008b84 <xTimerGenericCommand>
			configASSERT( xResult );
 8008cf6:	b970      	cbnz	r0, 8008d16 <prvTimerTask+0x8e>
 8008cf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cfc:	f383 8811 	msr	BASEPRI, r3
 8008d00:	f3bf 8f6f 	isb	sy
 8008d04:	f3bf 8f4f 	dsb	sy
 8008d08:	e7fe      	b.n	8008d08 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d0a:	2401      	movs	r4, #1
 8008d0c:	e7cb      	b.n	8008ca6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008d0e:	f023 0301 	bic.w	r3, r3, #1
 8008d12:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008d16:	6a3b      	ldr	r3, [r7, #32]
 8008d18:	4638      	mov	r0, r7
 8008d1a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008d1c:	6830      	ldr	r0, [r6, #0]
 8008d1e:	2200      	movs	r2, #0
 8008d20:	a904      	add	r1, sp, #16
 8008d22:	f7fe ff26 	bl	8007b72 <xQueueReceive>
 8008d26:	2800      	cmp	r0, #0
 8008d28:	d0b3      	beq.n	8008c92 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008d2a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008d2c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008d2e:	2b00      	cmp	r3, #0
 8008d30:	db2f      	blt.n	8008d92 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008d32:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008d34:	6963      	ldr	r3, [r4, #20]
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d132      	bne.n	8008da0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008d3a:	a803      	add	r0, sp, #12
 8008d3c:	f7ff ff4e 	bl	8008bdc <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008d40:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008d42:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008d44:	2b09      	cmp	r3, #9
 8008d46:	d8e9      	bhi.n	8008d1c <prvTimerTask+0x94>
 8008d48:	e8df f003 	tbb	[pc, r3]
 8008d4c:	572e2e2e 	.word	0x572e2e2e
 8008d50:	2e2e765e 	.word	0x2e2e765e
 8008d54:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008d56:	4b3e      	ldr	r3, [pc, #248]	; (8008e50 <prvTimerTask+0x1c8>)
 8008d58:	681b      	ldr	r3, [r3, #0]
 8008d5a:	681c      	ldr	r4, [r3, #0]
 8008d5c:	fab4 f484 	clz	r4, r4
 8008d60:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008d62:	6830      	ldr	r0, [r6, #0]
 8008d64:	4622      	mov	r2, r4
 8008d66:	eba8 0109 	sub.w	r1, r8, r9
 8008d6a:	f7ff f8f0 	bl	8007f4e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008d6e:	f7ff fb81 	bl	8008474 <xTaskResumeAll>
 8008d72:	2800      	cmp	r0, #0
 8008d74:	d1d2      	bne.n	8008d1c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008d76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d82:	f3bf 8f4f 	dsb	sy
 8008d86:	f3bf 8f6f 	isb	sy
 8008d8a:	e7c7      	b.n	8008d1c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008d8c:	f7ff fb72 	bl	8008474 <xTaskResumeAll>
}
 8008d90:	e7c4      	b.n	8008d1c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008d92:	9b05      	ldr	r3, [sp, #20]
 8008d94:	9907      	ldr	r1, [sp, #28]
 8008d96:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008d98:	9b04      	ldr	r3, [sp, #16]
 8008d9a:	2b00      	cmp	r3, #0
 8008d9c:	dbbe      	blt.n	8008d1c <prvTimerTask+0x94>
 8008d9e:	e7c8      	b.n	8008d32 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008da0:	1d20      	adds	r0, r4, #4
 8008da2:	f7fe fa3c 	bl	800721e <uxListRemove>
 8008da6:	e7c8      	b.n	8008d3a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008da8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008dac:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008dae:	f043 0301 	orr.w	r3, r3, #1
 8008db2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008db6:	9b05      	ldr	r3, [sp, #20]
 8008db8:	4620      	mov	r0, r4
 8008dba:	4419      	add	r1, r3
 8008dbc:	f7ff fe92 	bl	8008ae4 <prvInsertTimerInActiveList>
 8008dc0:	2800      	cmp	r0, #0
 8008dc2:	d0ab      	beq.n	8008d1c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008dc4:	6a23      	ldr	r3, [r4, #32]
 8008dc6:	4620      	mov	r0, r4
 8008dc8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008dca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008dce:	0759      	lsls	r1, r3, #29
 8008dd0:	d5a4      	bpl.n	8008d1c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008dd2:	69a2      	ldr	r2, [r4, #24]
 8008dd4:	9905      	ldr	r1, [sp, #20]
 8008dd6:	2300      	movs	r3, #0
 8008dd8:	440a      	add	r2, r1
 8008dda:	9300      	str	r3, [sp, #0]
 8008ddc:	4619      	mov	r1, r3
 8008dde:	4620      	mov	r0, r4
 8008de0:	f7ff fed0 	bl	8008b84 <xTimerGenericCommand>
							configASSERT( xResult );
 8008de4:	2800      	cmp	r0, #0
 8008de6:	d199      	bne.n	8008d1c <prvTimerTask+0x94>
 8008de8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dec:	f383 8811 	msr	BASEPRI, r3
 8008df0:	f3bf 8f6f 	isb	sy
 8008df4:	f3bf 8f4f 	dsb	sy
 8008df8:	e7fe      	b.n	8008df8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008dfa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008dfe:	f023 0301 	bic.w	r3, r3, #1
 8008e02:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008e06:	e789      	b.n	8008d1c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008e08:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008e0c:	f043 0301 	orr.w	r3, r3, #1
 8008e10:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008e14:	9905      	ldr	r1, [sp, #20]
 8008e16:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008e18:	b941      	cbnz	r1, 8008e2c <prvTimerTask+0x1a4>
 8008e1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e1e:	f383 8811 	msr	BASEPRI, r3
 8008e22:	f3bf 8f6f 	isb	sy
 8008e26:	f3bf 8f4f 	dsb	sy
 8008e2a:	e7fe      	b.n	8008e2a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008e2c:	4603      	mov	r3, r0
 8008e2e:	4401      	add	r1, r0
 8008e30:	4620      	mov	r0, r4
 8008e32:	f7ff fe57 	bl	8008ae4 <prvInsertTimerInActiveList>
					break;
 8008e36:	e771      	b.n	8008d1c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008e38:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008e3c:	079a      	lsls	r2, r3, #30
 8008e3e:	d4de      	bmi.n	8008dfe <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008e40:	4620      	mov	r0, r4
 8008e42:	f7fe f97d 	bl	8007140 <vPortFree>
 8008e46:	e769      	b.n	8008d1c <prvTimerTask+0x94>
 8008e48:	2000a3fc 	.word	0x2000a3fc
 8008e4c:	2000a520 	.word	0x2000a520
 8008e50:	2000a400 	.word	0x2000a400

08008e54 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008e54:	8880      	ldrh	r0, [r0, #4]
 8008e56:	4770      	bx	lr

08008e58 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008e58:	2300      	movs	r3, #0
 8008e5a:	8083      	strh	r3, [r0, #4]
 8008e5c:	4770      	bx	lr
	...

08008e60 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e62:	6803      	ldr	r3, [r0, #0]
 8008e64:	4605      	mov	r5, r0
 8008e66:	460e      	mov	r6, r1
 8008e68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008e6a:	2100      	movs	r1, #0
 8008e6c:	4798      	blx	r3
 8008e6e:	682b      	ldr	r3, [r5, #0]
 8008e70:	4604      	mov	r4, r0
 8008e72:	6a1b      	ldr	r3, [r3, #32]
 8008e74:	4628      	mov	r0, r5
 8008e76:	4798      	blx	r3
 8008e78:	88ab      	ldrh	r3, [r5, #4]
 8008e7a:	1b34      	subs	r4, r6, r4
 8008e7c:	b2a4      	uxth	r4, r4
 8008e7e:	fbb4 f4f0 	udiv	r4, r4, r0
 8008e82:	42a3      	cmp	r3, r4
 8008e84:	d805      	bhi.n	8008e92 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008e86:	4b0e      	ldr	r3, [pc, #56]	; (8008ec0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008e88:	4a0e      	ldr	r2, [pc, #56]	; (8008ec4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008e8a:	211d      	movs	r1, #29
 8008e8c:	480e      	ldr	r0, [pc, #56]	; (8008ec8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008e8e:	f012 ff01 	bl	801bc94 <__assert_func>
 8008e92:	682b      	ldr	r3, [r5, #0]
 8008e94:	2100      	movs	r1, #0
 8008e96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008e98:	4628      	mov	r0, r5
 8008e9a:	4798      	blx	r3
 8008e9c:	682b      	ldr	r3, [r5, #0]
 8008e9e:	4607      	mov	r7, r0
 8008ea0:	6a1b      	ldr	r3, [r3, #32]
 8008ea2:	4628      	mov	r0, r5
 8008ea4:	4798      	blx	r3
 8008ea6:	1bf3      	subs	r3, r6, r7
 8008ea8:	b29b      	uxth	r3, r3
 8008eaa:	fbb3 f2f0 	udiv	r2, r3, r0
 8008eae:	fb02 3010 	mls	r0, r2, r0, r3
 8008eb2:	b118      	cbz	r0, 8008ebc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008eb4:	4b05      	ldr	r3, [pc, #20]	; (8008ecc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008eb6:	4a03      	ldr	r2, [pc, #12]	; (8008ec4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008eb8:	211e      	movs	r1, #30
 8008eba:	e7e7      	b.n	8008e8c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008ebc:	4620      	mov	r0, r4
 8008ebe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008ec0:	0801e013 	.word	0x0801e013
 8008ec4:	0801e17e 	.word	0x0801e17e
 8008ec8:	0801e028 	.word	0x0801e028
 8008ecc:	0801e056 	.word	0x0801e056

08008ed0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008ed0:	b538      	push	{r3, r4, r5, lr}
 8008ed2:	6803      	ldr	r3, [r0, #0]
 8008ed4:	6a1b      	ldr	r3, [r3, #32]
 8008ed6:	460d      	mov	r5, r1
 8008ed8:	4604      	mov	r4, r0
 8008eda:	4798      	blx	r3
 8008edc:	4285      	cmp	r5, r0
 8008ede:	d905      	bls.n	8008eec <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008ee0:	4b0c      	ldr	r3, [pc, #48]	; (8008f14 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008ee2:	4a0d      	ldr	r2, [pc, #52]	; (8008f18 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008ee4:	212f      	movs	r1, #47	; 0x2f
 8008ee6:	480d      	ldr	r0, [pc, #52]	; (8008f1c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008ee8:	f012 fed4 	bl	801bc94 <__assert_func>
 8008eec:	6823      	ldr	r3, [r4, #0]
 8008eee:	88a5      	ldrh	r5, [r4, #4]
 8008ef0:	69db      	ldr	r3, [r3, #28]
 8008ef2:	4620      	mov	r0, r4
 8008ef4:	4798      	blx	r3
 8008ef6:	4285      	cmp	r5, r0
 8008ef8:	d303      	bcc.n	8008f02 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008efa:	4b09      	ldr	r3, [pc, #36]	; (8008f20 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008efc:	4a06      	ldr	r2, [pc, #24]	; (8008f18 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008efe:	2130      	movs	r1, #48	; 0x30
 8008f00:	e7f1      	b.n	8008ee6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008f02:	6823      	ldr	r3, [r4, #0]
 8008f04:	88a1      	ldrh	r1, [r4, #4]
 8008f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f08:	4620      	mov	r0, r4
 8008f0a:	4798      	blx	r3
 8008f0c:	88a3      	ldrh	r3, [r4, #4]
 8008f0e:	3301      	adds	r3, #1
 8008f10:	80a3      	strh	r3, [r4, #4]
 8008f12:	bd38      	pop	{r3, r4, r5, pc}
 8008f14:	0801e0d0 	.word	0x0801e0d0
 8008f18:	0801e1c1 	.word	0x0801e1c1
 8008f1c:	0801e028 	.word	0x0801e028
 8008f20:	0801e0e7 	.word	0x0801e0e7

08008f24 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008f24:	b570      	push	{r4, r5, r6, lr}
 8008f26:	6803      	ldr	r3, [r0, #0]
 8008f28:	6a1b      	ldr	r3, [r3, #32]
 8008f2a:	4616      	mov	r6, r2
 8008f2c:	4604      	mov	r4, r0
 8008f2e:	460d      	mov	r5, r1
 8008f30:	4798      	blx	r3
 8008f32:	4286      	cmp	r6, r0
 8008f34:	d905      	bls.n	8008f42 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008f36:	4b06      	ldr	r3, [pc, #24]	; (8008f50 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008f38:	4a06      	ldr	r2, [pc, #24]	; (8008f54 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008f3a:	4807      	ldr	r0, [pc, #28]	; (8008f58 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008f3c:	2139      	movs	r1, #57	; 0x39
 8008f3e:	f012 fea9 	bl	801bc94 <__assert_func>
 8008f42:	6823      	ldr	r3, [r4, #0]
 8008f44:	4629      	mov	r1, r5
 8008f46:	4620      	mov	r0, r4
 8008f48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f4e:	4718      	bx	r3
 8008f50:	0801e0d0 	.word	0x0801e0d0
 8008f54:	0801e134 	.word	0x0801e134
 8008f58:	0801e028 	.word	0x0801e028

08008f5c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008f5c:	4770      	bx	lr
	...

08008f60 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008f60:	4a02      	ldr	r2, [pc, #8]	; (8008f6c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008f62:	6002      	str	r2, [r0, #0]
 8008f64:	2200      	movs	r2, #0
 8008f66:	8082      	strh	r2, [r0, #4]
 8008f68:	4770      	bx	lr
 8008f6a:	bf00      	nop
 8008f6c:	0801e108 	.word	0x0801e108

08008f70 <_ZN8touchgfx9Container13getFirstChildEv>:
 8008f70:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008f72:	4770      	bx	lr

08008f74 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008f74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008f76:	2000      	movs	r0, #0
 8008f78:	b12b      	cbz	r3, 8008f86 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008f7a:	b920      	cbnz	r0, 8008f86 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008f7c:	1a5a      	subs	r2, r3, r1
 8008f7e:	4250      	negs	r0, r2
 8008f80:	4150      	adcs	r0, r2
 8008f82:	699b      	ldr	r3, [r3, #24]
 8008f84:	e7f8      	b.n	8008f78 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008f86:	4770      	bx	lr

08008f88 <_ZN8touchgfx9Container9removeAllEv>:
 8008f88:	2200      	movs	r2, #0
 8008f8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008f8c:	b123      	cbz	r3, 8008f98 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008f8e:	6999      	ldr	r1, [r3, #24]
 8008f90:	6281      	str	r1, [r0, #40]	; 0x28
 8008f92:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008f96:	e7f8      	b.n	8008f8a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008f98:	4770      	bx	lr

08008f9a <_ZN8touchgfx9Container6unlinkEv>:
 8008f9a:	2300      	movs	r3, #0
 8008f9c:	6283      	str	r3, [r0, #40]	; 0x28
 8008f9e:	4770      	bx	lr

08008fa0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008fa0:	2200      	movs	r2, #0
 8008fa2:	8002      	strh	r2, [r0, #0]
 8008fa4:	8042      	strh	r2, [r0, #2]
 8008fa6:	8082      	strh	r2, [r0, #4]
 8008fa8:	80c2      	strh	r2, [r0, #6]
 8008faa:	4770      	bx	lr

08008fac <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008fac:	b570      	push	{r4, r5, r6, lr}
 8008fae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008fb0:	460d      	mov	r5, r1
 8008fb2:	4616      	mov	r6, r2
 8008fb4:	b13c      	cbz	r4, 8008fc6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008fb6:	6823      	ldr	r3, [r4, #0]
 8008fb8:	4620      	mov	r0, r4
 8008fba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fbc:	4632      	mov	r2, r6
 8008fbe:	4629      	mov	r1, r5
 8008fc0:	4798      	blx	r3
 8008fc2:	69a4      	ldr	r4, [r4, #24]
 8008fc4:	e7f6      	b.n	8008fb4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008fc6:	bd70      	pop	{r4, r5, r6, pc}

08008fc8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008fc8:	b538      	push	{r3, r4, r5, lr}
 8008fca:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008fcc:	460d      	mov	r5, r1
 8008fce:	b134      	cbz	r4, 8008fde <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008fd0:	682b      	ldr	r3, [r5, #0]
 8008fd2:	4621      	mov	r1, r4
 8008fd4:	689b      	ldr	r3, [r3, #8]
 8008fd6:	4628      	mov	r0, r5
 8008fd8:	4798      	blx	r3
 8008fda:	69a4      	ldr	r4, [r4, #24]
 8008fdc:	e7f7      	b.n	8008fce <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008fde:	bd38      	pop	{r3, r4, r5, pc}

08008fe0 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8008fe0:	b510      	push	{r4, lr}
 8008fe2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008fe4:	b12c      	cbz	r4, 8008ff2 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8008fe6:	6823      	ldr	r3, [r4, #0]
 8008fe8:	4620      	mov	r0, r4
 8008fea:	699b      	ldr	r3, [r3, #24]
 8008fec:	4798      	blx	r3
 8008fee:	69a4      	ldr	r4, [r4, #24]
 8008ff0:	e7f8      	b.n	8008fe4 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8008ff2:	bd10      	pop	{r4, pc}

08008ff4 <_ZN8touchgfx9ContainerD1Ev>:
 8008ff4:	4770      	bx	lr

08008ff6 <_ZN8touchgfx9ContainerD0Ev>:
 8008ff6:	b510      	push	{r4, lr}
 8008ff8:	212c      	movs	r1, #44	; 0x2c
 8008ffa:	4604      	mov	r4, r0
 8008ffc:	f012 fe1c 	bl	801bc38 <_ZdlPvj>
 8009000:	4620      	mov	r0, r4
 8009002:	bd10      	pop	{r4, pc}

08009004 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009004:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009006:	b19b      	cbz	r3, 8009030 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009008:	428b      	cmp	r3, r1
 800900a:	d109      	bne.n	8009020 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800900c:	699a      	ldr	r2, [r3, #24]
 800900e:	2100      	movs	r1, #0
 8009010:	6159      	str	r1, [r3, #20]
 8009012:	6282      	str	r2, [r0, #40]	; 0x28
 8009014:	b902      	cbnz	r2, 8009018 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009016:	4770      	bx	lr
 8009018:	6199      	str	r1, [r3, #24]
 800901a:	4770      	bx	lr
 800901c:	4613      	mov	r3, r2
 800901e:	b13a      	cbz	r2, 8009030 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009020:	699a      	ldr	r2, [r3, #24]
 8009022:	428a      	cmp	r2, r1
 8009024:	d1fa      	bne.n	800901c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009026:	698a      	ldr	r2, [r1, #24]
 8009028:	619a      	str	r2, [r3, #24]
 800902a:	2300      	movs	r3, #0
 800902c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009030:	4770      	bx	lr

08009032 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009032:	b410      	push	{r4}
 8009034:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009036:	4604      	mov	r4, r0
 8009038:	b92b      	cbnz	r3, 8009046 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800903a:	6803      	ldr	r3, [r0, #0]
 800903c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009040:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009042:	4611      	mov	r1, r2
 8009044:	4718      	bx	r3
 8009046:	b941      	cbnz	r1, 800905a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009048:	6193      	str	r3, [r2, #24]
 800904a:	6282      	str	r2, [r0, #40]	; 0x28
 800904c:	6154      	str	r4, [r2, #20]
 800904e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009052:	4770      	bx	lr
 8009054:	4603      	mov	r3, r0
 8009056:	2800      	cmp	r0, #0
 8009058:	d0f9      	beq.n	800904e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800905a:	4299      	cmp	r1, r3
 800905c:	6998      	ldr	r0, [r3, #24]
 800905e:	d1f9      	bne.n	8009054 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009060:	6190      	str	r0, [r2, #24]
 8009062:	618a      	str	r2, [r1, #24]
 8009064:	e7f2      	b.n	800904c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009068 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009068:	4288      	cmp	r0, r1
 800906a:	b508      	push	{r3, lr}
 800906c:	d105      	bne.n	800907a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800906e:	4b11      	ldr	r3, [pc, #68]	; (80090b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009070:	4a11      	ldr	r2, [pc, #68]	; (80090b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009072:	2120      	movs	r1, #32
 8009074:	4811      	ldr	r0, [pc, #68]	; (80090bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8009076:	f012 fe0d 	bl	801bc94 <__assert_func>
 800907a:	694b      	ldr	r3, [r1, #20]
 800907c:	b11b      	cbz	r3, 8009086 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800907e:	4b10      	ldr	r3, [pc, #64]	; (80090c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009080:	4a0d      	ldr	r2, [pc, #52]	; (80090b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009082:	2121      	movs	r1, #33	; 0x21
 8009084:	e7f6      	b.n	8009074 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009086:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800908a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800908c:	b913      	cbnz	r3, 8009094 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800908e:	6281      	str	r1, [r0, #40]	; 0x28
 8009090:	bd08      	pop	{r3, pc}
 8009092:	4613      	mov	r3, r2
 8009094:	699a      	ldr	r2, [r3, #24]
 8009096:	b12a      	cbz	r2, 80090a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009098:	428b      	cmp	r3, r1
 800909a:	d1fa      	bne.n	8009092 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800909c:	4b09      	ldr	r3, [pc, #36]	; (80090c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800909e:	4a06      	ldr	r2, [pc, #24]	; (80090b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80090a0:	2132      	movs	r1, #50	; 0x32
 80090a2:	e7e7      	b.n	8009074 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80090a4:	428b      	cmp	r3, r1
 80090a6:	d103      	bne.n	80090b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80090a8:	4b06      	ldr	r3, [pc, #24]	; (80090c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80090aa:	4a03      	ldr	r2, [pc, #12]	; (80090b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80090ac:	2135      	movs	r1, #53	; 0x35
 80090ae:	e7e1      	b.n	8009074 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80090b0:	6199      	str	r1, [r3, #24]
 80090b2:	e7ed      	b.n	8009090 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80090b4:	0801e1ff 	.word	0x0801e1ff
 80090b8:	0801e358 	.word	0x0801e358
 80090bc:	0801e22b 	.word	0x0801e22b
 80090c0:	0801e25e 	.word	0x0801e25e
 80090c4:	0801e294 	.word	0x0801e294

080090c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80090c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80090cc:	461f      	mov	r7, r3
 80090ce:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80090d2:	460d      	mov	r5, r1
 80090d4:	4616      	mov	r6, r2
 80090d6:	b103      	cbz	r3, 80090da <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80090d8:	6038      	str	r0, [r7, #0]
 80090da:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80090dc:	b314      	cbz	r4, 8009124 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80090de:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80090e2:	b1eb      	cbz	r3, 8009120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090e4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80090e8:	428d      	cmp	r5, r1
 80090ea:	db19      	blt.n	8009120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090ec:	8923      	ldrh	r3, [r4, #8]
 80090ee:	b289      	uxth	r1, r1
 80090f0:	440b      	add	r3, r1
 80090f2:	b21b      	sxth	r3, r3
 80090f4:	429d      	cmp	r5, r3
 80090f6:	da13      	bge.n	8009120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090f8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80090fc:	4296      	cmp	r6, r2
 80090fe:	db0f      	blt.n	8009120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009100:	8963      	ldrh	r3, [r4, #10]
 8009102:	b292      	uxth	r2, r2
 8009104:	4413      	add	r3, r2
 8009106:	b21b      	sxth	r3, r3
 8009108:	429e      	cmp	r6, r3
 800910a:	da09      	bge.n	8009120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800910c:	6823      	ldr	r3, [r4, #0]
 800910e:	1ab2      	subs	r2, r6, r2
 8009110:	1a69      	subs	r1, r5, r1
 8009112:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8009116:	b212      	sxth	r2, r2
 8009118:	463b      	mov	r3, r7
 800911a:	b209      	sxth	r1, r1
 800911c:	4620      	mov	r0, r4
 800911e:	47c0      	blx	r8
 8009120:	69a4      	ldr	r4, [r4, #24]
 8009122:	e7db      	b.n	80090dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009128 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800912c:	4c6e      	ldr	r4, [pc, #440]	; (80092e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800912e:	b0a1      	sub	sp, #132	; 0x84
 8009130:	6824      	ldr	r4, [r4, #0]
 8009132:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8009134:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8009138:	9303      	str	r3, [sp, #12]
 800913a:	2400      	movs	r4, #0
 800913c:	802c      	strh	r4, [r5, #0]
 800913e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8009140:	802c      	strh	r4, [r5, #0]
 8009142:	601c      	str	r4, [r3, #0]
 8009144:	4606      	mov	r6, r0
 8009146:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800914a:	f7ff ffbd 	bl	80090c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800914e:	f1b9 0f03 	cmp.w	r9, #3
 8009152:	f340 80c2 	ble.w	80092da <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009156:	4631      	mov	r1, r6
 8009158:	a80c      	add	r0, sp, #48	; 0x30
 800915a:	f004 fc51 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800915e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009162:	9306      	str	r3, [sp, #24]
 8009164:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009168:	9307      	str	r3, [sp, #28]
 800916a:	9b03      	ldr	r3, [sp, #12]
 800916c:	f8d3 a000 	ldr.w	sl, [r3]
 8009170:	f1ba 0f00 	cmp.w	sl, #0
 8009174:	f000 80b4 	beq.w	80092e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009178:	4651      	mov	r1, sl
 800917a:	a810      	add	r0, sp, #64	; 0x40
 800917c:	f004 fc40 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009180:	9b01      	ldr	r3, [sp, #4]
 8009182:	9a06      	ldr	r2, [sp, #24]
 8009184:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009188:	189d      	adds	r5, r3, r2
 800918a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800918e:	9a07      	ldr	r2, [sp, #28]
 8009190:	2002      	movs	r0, #2
 8009192:	fb91 f1f0 	sdiv	r1, r1, r0
 8009196:	4419      	add	r1, r3
 8009198:	1a6d      	subs	r5, r5, r1
 800919a:	9b02      	ldr	r3, [sp, #8]
 800919c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80091a0:	4413      	add	r3, r2
 80091a2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80091a6:	fb92 f2f0 	sdiv	r2, r2, r0
 80091aa:	440a      	add	r2, r1
 80091ac:	1a9b      	subs	r3, r3, r2
 80091ae:	435b      	muls	r3, r3
 80091b0:	fb05 3505 	mla	r5, r5, r5, r3
 80091b4:	4f4d      	ldr	r7, [pc, #308]	; (80092ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80091b6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80091b8:	ac10      	add	r4, sp, #64	; 0x40
 80091ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80091be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091c0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80091c2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091c4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80091c8:	f1b9 0f0c 	cmp.w	r9, #12
 80091cc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80091d0:	f04f 0303 	mov.w	r3, #3
 80091d4:	bfc8      	it	gt
 80091d6:	4698      	movgt	r8, r3
 80091d8:	f8cd 9000 	str.w	r9, [sp]
 80091dc:	f04f 0400 	mov.w	r4, #0
 80091e0:	bfdc      	itt	le
 80091e2:	f109 32ff 	addle.w	r2, r9, #4294967295
 80091e6:	fb92 f8f3 	sdivle	r8, r2, r3
 80091ea:	1c63      	adds	r3, r4, #1
 80091ec:	aa10      	add	r2, sp, #64	; 0x40
 80091ee:	f004 0401 	and.w	r4, r4, #1
 80091f2:	9308      	str	r3, [sp, #32]
 80091f4:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80091f8:	9b00      	ldr	r3, [sp, #0]
 80091fa:	fb93 f3f8 	sdiv	r3, r3, r8
 80091fe:	b29b      	uxth	r3, r3
 8009200:	3404      	adds	r4, #4
 8009202:	f04f 0b00 	mov.w	fp, #0
 8009206:	9304      	str	r3, [sp, #16]
 8009208:	9a04      	ldr	r2, [sp, #16]
 800920a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800920e:	fb13 f302 	smulbb	r3, r3, r2
 8009212:	9a01      	ldr	r2, [sp, #4]
 8009214:	b29b      	uxth	r3, r3
 8009216:	1899      	adds	r1, r3, r2
 8009218:	9305      	str	r3, [sp, #20]
 800921a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800921e:	b209      	sxth	r1, r1
 8009220:	4299      	cmp	r1, r3
 8009222:	db4d      	blt.n	80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009224:	8932      	ldrh	r2, [r6, #8]
 8009226:	4413      	add	r3, r2
 8009228:	b21b      	sxth	r3, r3
 800922a:	4299      	cmp	r1, r3
 800922c:	da48      	bge.n	80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800922e:	9b04      	ldr	r3, [sp, #16]
 8009230:	6827      	ldr	r7, [r4, #0]
 8009232:	fb17 f703 	smulbb	r7, r7, r3
 8009236:	9b02      	ldr	r3, [sp, #8]
 8009238:	b2bf      	uxth	r7, r7
 800923a:	18fa      	adds	r2, r7, r3
 800923c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009240:	b212      	sxth	r2, r2
 8009242:	429a      	cmp	r2, r3
 8009244:	db3c      	blt.n	80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009246:	8970      	ldrh	r0, [r6, #10]
 8009248:	4403      	add	r3, r0
 800924a:	b21b      	sxth	r3, r3
 800924c:	429a      	cmp	r2, r3
 800924e:	da37      	bge.n	80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009250:	2300      	movs	r3, #0
 8009252:	930b      	str	r3, [sp, #44]	; 0x2c
 8009254:	4630      	mov	r0, r6
 8009256:	ab0b      	add	r3, sp, #44	; 0x2c
 8009258:	f7ff ff36 	bl	80090c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800925c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800925e:	b37a      	cbz	r2, 80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009260:	4552      	cmp	r2, sl
 8009262:	d02d      	beq.n	80092c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009264:	4611      	mov	r1, r2
 8009266:	a80e      	add	r0, sp, #56	; 0x38
 8009268:	9209      	str	r2, [sp, #36]	; 0x24
 800926a:	f004 fbc9 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800926e:	9a06      	ldr	r2, [sp, #24]
 8009270:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009274:	9b01      	ldr	r3, [sp, #4]
 8009276:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800927a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800927e:	4413      	add	r3, r2
 8009280:	f04f 0e02 	mov.w	lr, #2
 8009284:	fb91 f1fe 	sdiv	r1, r1, lr
 8009288:	4401      	add	r1, r0
 800928a:	1a58      	subs	r0, r3, r1
 800928c:	9a07      	ldr	r2, [sp, #28]
 800928e:	9b02      	ldr	r3, [sp, #8]
 8009290:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009294:	fb9c fcfe 	sdiv	ip, ip, lr
 8009298:	4413      	add	r3, r2
 800929a:	448c      	add	ip, r1
 800929c:	eba3 030c 	sub.w	r3, r3, ip
 80092a0:	435b      	muls	r3, r3
 80092a2:	fb00 3300 	mla	r3, r0, r0, r3
 80092a6:	42ab      	cmp	r3, r5
 80092a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80092aa:	d208      	bcs.n	80092be <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80092ac:	9803      	ldr	r0, [sp, #12]
 80092ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80092b0:	6001      	str	r1, [r0, #0]
 80092b2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80092b4:	9805      	ldr	r0, [sp, #20]
 80092b6:	8008      	strh	r0, [r1, #0]
 80092b8:	992b      	ldr	r1, [sp, #172]	; 0xac
 80092ba:	461d      	mov	r5, r3
 80092bc:	800f      	strh	r7, [r1, #0]
 80092be:	4692      	mov	sl, r2
 80092c0:	f10b 0b01 	add.w	fp, fp, #1
 80092c4:	f1bb 0f04 	cmp.w	fp, #4
 80092c8:	f104 0408 	add.w	r4, r4, #8
 80092cc:	d19c      	bne.n	8009208 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80092ce:	9b00      	ldr	r3, [sp, #0]
 80092d0:	9c08      	ldr	r4, [sp, #32]
 80092d2:	444b      	add	r3, r9
 80092d4:	4544      	cmp	r4, r8
 80092d6:	9300      	str	r3, [sp, #0]
 80092d8:	d187      	bne.n	80091ea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80092da:	b021      	add	sp, #132	; 0x84
 80092dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80092e0:	f04f 35ff 	mov.w	r5, #4294967295
 80092e4:	e766      	b.n	80091b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80092e6:	bf00      	nop
 80092e8:	2000a534 	.word	0x2000a534
 80092ec:	0801ce0c 	.word	0x0801ce0c

080092f0 <_ZN8touchgfx4RectaNERKS0_>:
 80092f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092f4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80092f8:	888c      	ldrh	r4, [r1, #4]
 80092fa:	f9b0 9000 	ldrsh.w	r9, [r0]
 80092fe:	443c      	add	r4, r7
 8009300:	b2a4      	uxth	r4, r4
 8009302:	fa0f f884 	sxth.w	r8, r4
 8009306:	45c1      	cmp	r9, r8
 8009308:	da2f      	bge.n	800936a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800930a:	8882      	ldrh	r2, [r0, #4]
 800930c:	444a      	add	r2, r9
 800930e:	b292      	uxth	r2, r2
 8009310:	fa0f fe82 	sxth.w	lr, r2
 8009314:	4577      	cmp	r7, lr
 8009316:	da28      	bge.n	800936a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009318:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800931c:	88cb      	ldrh	r3, [r1, #6]
 800931e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009322:	442b      	add	r3, r5
 8009324:	b21b      	sxth	r3, r3
 8009326:	429e      	cmp	r6, r3
 8009328:	da1f      	bge.n	800936a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800932a:	88c3      	ldrh	r3, [r0, #6]
 800932c:	4433      	add	r3, r6
 800932e:	b29b      	uxth	r3, r3
 8009330:	fa0f fc83 	sxth.w	ip, r3
 8009334:	4565      	cmp	r5, ip
 8009336:	da18      	bge.n	800936a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009338:	454f      	cmp	r7, r9
 800933a:	bfb8      	it	lt
 800933c:	464f      	movlt	r7, r9
 800933e:	42b5      	cmp	r5, r6
 8009340:	bfb8      	it	lt
 8009342:	4635      	movlt	r5, r6
 8009344:	45f0      	cmp	r8, lr
 8009346:	bfd8      	it	le
 8009348:	4622      	movle	r2, r4
 800934a:	1bd2      	subs	r2, r2, r7
 800934c:	8082      	strh	r2, [r0, #4]
 800934e:	884a      	ldrh	r2, [r1, #2]
 8009350:	88c9      	ldrh	r1, [r1, #6]
 8009352:	8007      	strh	r7, [r0, #0]
 8009354:	440a      	add	r2, r1
 8009356:	b292      	uxth	r2, r2
 8009358:	b211      	sxth	r1, r2
 800935a:	458c      	cmp	ip, r1
 800935c:	bfa8      	it	ge
 800935e:	4613      	movge	r3, r2
 8009360:	1b5b      	subs	r3, r3, r5
 8009362:	80c3      	strh	r3, [r0, #6]
 8009364:	8045      	strh	r5, [r0, #2]
 8009366:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800936a:	2300      	movs	r3, #0
 800936c:	8003      	strh	r3, [r0, #0]
 800936e:	8043      	strh	r3, [r0, #2]
 8009370:	8083      	strh	r3, [r0, #4]
 8009372:	80c3      	strh	r3, [r0, #6]
 8009374:	e7f7      	b.n	8009366 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009376 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009376:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800937a:	2b00      	cmp	r3, #0
 800937c:	dd06      	ble.n	800938c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800937e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009382:	2800      	cmp	r0, #0
 8009384:	bfcc      	ite	gt
 8009386:	2000      	movgt	r0, #0
 8009388:	2001      	movle	r0, #1
 800938a:	4770      	bx	lr
 800938c:	2001      	movs	r0, #1
 800938e:	4770      	bx	lr

08009390 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009394:	2300      	movs	r3, #0
 8009396:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009398:	8003      	strh	r3, [r0, #0]
 800939a:	4604      	mov	r4, r0
 800939c:	8043      	strh	r3, [r0, #2]
 800939e:	8083      	strh	r3, [r0, #4]
 80093a0:	80c3      	strh	r3, [r0, #6]
 80093a2:	2d00      	cmp	r5, #0
 80093a4:	d040      	beq.n	8009428 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80093a6:	1d28      	adds	r0, r5, #4
 80093a8:	f7ff ffe5 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 80093ac:	b988      	cbnz	r0, 80093d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80093ae:	4620      	mov	r0, r4
 80093b0:	f7ff ffe1 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 80093b4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80093b8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80093bc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80093c0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80093c4:	b138      	cbz	r0, 80093d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80093c6:	8022      	strh	r2, [r4, #0]
 80093c8:	8063      	strh	r3, [r4, #2]
 80093ca:	f8a4 e004 	strh.w	lr, [r4, #4]
 80093ce:	f8a4 c006 	strh.w	ip, [r4, #6]
 80093d2:	69ad      	ldr	r5, [r5, #24]
 80093d4:	e7e5      	b.n	80093a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80093d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80093da:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80093de:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80093e2:	4290      	cmp	r0, r2
 80093e4:	4607      	mov	r7, r0
 80093e6:	bfa8      	it	ge
 80093e8:	4617      	movge	r7, r2
 80093ea:	4472      	add	r2, lr
 80093ec:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80093f0:	8027      	strh	r7, [r4, #0]
 80093f2:	4299      	cmp	r1, r3
 80093f4:	460e      	mov	r6, r1
 80093f6:	4440      	add	r0, r8
 80093f8:	bfa8      	it	ge
 80093fa:	461e      	movge	r6, r3
 80093fc:	4471      	add	r1, lr
 80093fe:	4463      	add	r3, ip
 8009400:	b200      	sxth	r0, r0
 8009402:	b212      	sxth	r2, r2
 8009404:	b209      	sxth	r1, r1
 8009406:	b21b      	sxth	r3, r3
 8009408:	4290      	cmp	r0, r2
 800940a:	bfac      	ite	ge
 800940c:	ebc7 0200 	rsbge	r2, r7, r0
 8009410:	ebc7 0202 	rsblt	r2, r7, r2
 8009414:	4299      	cmp	r1, r3
 8009416:	bfac      	ite	ge
 8009418:	ebc6 0301 	rsbge	r3, r6, r1
 800941c:	ebc6 0303 	rsblt	r3, r6, r3
 8009420:	8066      	strh	r6, [r4, #2]
 8009422:	80a2      	strh	r2, [r4, #4]
 8009424:	80e3      	strh	r3, [r4, #6]
 8009426:	e7d4      	b.n	80093d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009428:	4620      	mov	r0, r4
 800942a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800942e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800942e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009432:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009436:	b383      	cbz	r3, 800949a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009438:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800943a:	b374      	cbz	r4, 800949a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800943c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009440:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009444:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009448:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800944c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009450:	b303      	cbz	r3, 8009494 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009452:	4668      	mov	r0, sp
 8009454:	1d21      	adds	r1, r4, #4
 8009456:	f8ad 5000 	strh.w	r5, [sp]
 800945a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800945e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009462:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009466:	f7ff ff43 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800946a:	4668      	mov	r0, sp
 800946c:	f7ff ff83 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009470:	b980      	cbnz	r0, 8009494 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009472:	f8bd 3000 	ldrh.w	r3, [sp]
 8009476:	88a2      	ldrh	r2, [r4, #4]
 8009478:	1a9b      	subs	r3, r3, r2
 800947a:	f8ad 3000 	strh.w	r3, [sp]
 800947e:	88e2      	ldrh	r2, [r4, #6]
 8009480:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009484:	1a9b      	subs	r3, r3, r2
 8009486:	f8ad 3002 	strh.w	r3, [sp, #2]
 800948a:	6823      	ldr	r3, [r4, #0]
 800948c:	4669      	mov	r1, sp
 800948e:	689b      	ldr	r3, [r3, #8]
 8009490:	4620      	mov	r0, r4
 8009492:	4798      	blx	r3
 8009494:	69a4      	ldr	r4, [r4, #24]
 8009496:	2c00      	cmp	r4, #0
 8009498:	d1d8      	bne.n	800944c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800949a:	b002      	add	sp, #8
 800949c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080094a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80094a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80094a2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80094a6:	460d      	mov	r5, r1
 80094a8:	4616      	mov	r6, r2
 80094aa:	b323      	cbz	r3, 80094f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80094ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80094ae:	b314      	cbz	r4, 80094f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80094b0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80094b4:	b1eb      	cbz	r3, 80094f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80094b6:	6828      	ldr	r0, [r5, #0]
 80094b8:	6869      	ldr	r1, [r5, #4]
 80094ba:	466b      	mov	r3, sp
 80094bc:	c303      	stmia	r3!, {r0, r1}
 80094be:	4668      	mov	r0, sp
 80094c0:	1d21      	adds	r1, r4, #4
 80094c2:	f7ff ff15 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 80094c6:	4668      	mov	r0, sp
 80094c8:	f7ff ff55 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 80094cc:	b988      	cbnz	r0, 80094f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80094ce:	f8bd 3000 	ldrh.w	r3, [sp]
 80094d2:	88a2      	ldrh	r2, [r4, #4]
 80094d4:	1a9b      	subs	r3, r3, r2
 80094d6:	f8ad 3000 	strh.w	r3, [sp]
 80094da:	88e2      	ldrh	r2, [r4, #6]
 80094dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80094e0:	1a9b      	subs	r3, r3, r2
 80094e2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80094e6:	6823      	ldr	r3, [r4, #0]
 80094e8:	4632      	mov	r2, r6
 80094ea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80094ec:	4669      	mov	r1, sp
 80094ee:	4620      	mov	r0, r4
 80094f0:	4798      	blx	r3
 80094f2:	69a4      	ldr	r4, [r4, #24]
 80094f4:	e7db      	b.n	80094ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80094f6:	b002      	add	sp, #8
 80094f8:	bd70      	pop	{r4, r5, r6, pc}

080094fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80094fa:	b513      	push	{r0, r1, r4, lr}
 80094fc:	6803      	ldr	r3, [r0, #0]
 80094fe:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009502:	2300      	movs	r3, #0
 8009504:	e9cd 3300 	strd	r3, r3, [sp]
 8009508:	466b      	mov	r3, sp
 800950a:	47a0      	blx	r4
 800950c:	b002      	add	sp, #8
 800950e:	bd10      	pop	{r4, pc}

08009510 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009510:	2301      	movs	r3, #1
 8009512:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009516:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800951a:	4770      	bx	lr

0800951c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800951c:	2301      	movs	r3, #1
 800951e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009522:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009526:	4770      	bx	lr

08009528 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009528:	6843      	ldr	r3, [r0, #4]
 800952a:	2201      	movs	r2, #1
 800952c:	725a      	strb	r2, [r3, #9]
 800952e:	6840      	ldr	r0, [r0, #4]
 8009530:	6803      	ldr	r3, [r0, #0]
 8009532:	691b      	ldr	r3, [r3, #16]
 8009534:	4718      	bx	r3

08009536 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009536:	6840      	ldr	r0, [r0, #4]
 8009538:	6803      	ldr	r3, [r0, #0]
 800953a:	689b      	ldr	r3, [r3, #8]
 800953c:	4718      	bx	r3

0800953e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800953e:	b530      	push	{r4, r5, lr}
 8009540:	b08b      	sub	sp, #44	; 0x2c
 8009542:	6804      	ldr	r4, [r0, #0]
 8009544:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009548:	9509      	str	r5, [sp, #36]	; 0x24
 800954a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800954e:	9508      	str	r5, [sp, #32]
 8009550:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009554:	9507      	str	r5, [sp, #28]
 8009556:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800955a:	9506      	str	r5, [sp, #24]
 800955c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009560:	9505      	str	r5, [sp, #20]
 8009562:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009566:	9504      	str	r5, [sp, #16]
 8009568:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800956c:	9503      	str	r5, [sp, #12]
 800956e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009572:	9502      	str	r5, [sp, #8]
 8009574:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009578:	e9cd 3500 	strd	r3, r5, [sp]
 800957c:	4613      	mov	r3, r2
 800957e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009580:	2200      	movs	r2, #0
 8009582:	47a0      	blx	r4
 8009584:	b00b      	add	sp, #44	; 0x2c
 8009586:	bd30      	pop	{r4, r5, pc}

08009588 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009588:	4b04      	ldr	r3, [pc, #16]	; (800959c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800958a:	781b      	ldrb	r3, [r3, #0]
 800958c:	b123      	cbz	r3, 8009598 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800958e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009592:	f080 0001 	eor.w	r0, r0, #1
 8009596:	4770      	bx	lr
 8009598:	2001      	movs	r0, #1
 800959a:	4770      	bx	lr
 800959c:	2000a532 	.word	0x2000a532

080095a0 <_ZN8touchgfx3HAL8endFrameEv>:
 80095a0:	b510      	push	{r4, lr}
 80095a2:	4604      	mov	r4, r0
 80095a4:	6840      	ldr	r0, [r0, #4]
 80095a6:	6803      	ldr	r3, [r0, #0]
 80095a8:	689b      	ldr	r3, [r3, #8]
 80095aa:	4798      	blx	r3
 80095ac:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 80095b0:	b113      	cbz	r3, 80095b8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80095b2:	2301      	movs	r3, #1
 80095b4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80095b8:	bd10      	pop	{r4, pc}

080095ba <_ZN8touchgfx3HAL10initializeEv>:
 80095ba:	b510      	push	{r4, lr}
 80095bc:	4604      	mov	r4, r0
 80095be:	f7f7 fb8f 	bl	8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80095c2:	6860      	ldr	r0, [r4, #4]
 80095c4:	6803      	ldr	r3, [r0, #0]
 80095c6:	68db      	ldr	r3, [r3, #12]
 80095c8:	4798      	blx	r3
 80095ca:	68e0      	ldr	r0, [r4, #12]
 80095cc:	6803      	ldr	r3, [r0, #0]
 80095ce:	689b      	ldr	r3, [r3, #8]
 80095d0:	4798      	blx	r3
 80095d2:	6823      	ldr	r3, [r4, #0]
 80095d4:	4620      	mov	r0, r4
 80095d6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80095d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095dc:	4718      	bx	r3
	...

080095e0 <_ZN8touchgfx3HAL4tickEv>:
 80095e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80095e2:	6803      	ldr	r3, [r0, #0]
 80095e4:	4d5b      	ldr	r5, [pc, #364]	; (8009754 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80095e6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80095ea:	4604      	mov	r4, r0
 80095ec:	4798      	blx	r3
 80095ee:	2800      	cmp	r0, #0
 80095f0:	f000 8095 	beq.w	800971e <_ZN8touchgfx3HAL4tickEv+0x13e>
 80095f4:	2001      	movs	r0, #1
 80095f6:	f7f7 f8b3 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80095fa:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80095fe:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009602:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009606:	2600      	movs	r6, #0
 8009608:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800960c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009610:	b133      	cbz	r3, 8009620 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009612:	6823      	ldr	r3, [r4, #0]
 8009614:	4620      	mov	r0, r4
 8009616:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800961a:	4798      	blx	r3
 800961c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009620:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009624:	6862      	ldr	r2, [r4, #4]
 8009626:	f083 0301 	eor.w	r3, r3, #1
 800962a:	7253      	strb	r3, [r2, #9]
 800962c:	2601      	movs	r6, #1
 800962e:	702e      	strb	r6, [r5, #0]
 8009630:	f003 f9be 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 8009634:	6803      	ldr	r3, [r0, #0]
 8009636:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009638:	4798      	blx	r3
 800963a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800963e:	b90b      	cbnz	r3, 8009644 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009640:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009644:	f003 f9b4 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 8009648:	6803      	ldr	r3, [r0, #0]
 800964a:	695b      	ldr	r3, [r3, #20]
 800964c:	4798      	blx	r3
 800964e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009650:	6803      	ldr	r3, [r0, #0]
 8009652:	691b      	ldr	r3, [r3, #16]
 8009654:	4798      	blx	r3
 8009656:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800965a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800965e:	3b01      	subs	r3, #1
 8009660:	b2db      	uxtb	r3, r3
 8009662:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009666:	b10a      	cbz	r2, 800966c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009668:	2b00      	cmp	r3, #0
 800966a:	d1eb      	bne.n	8009644 <_ZN8touchgfx3HAL4tickEv+0x64>
 800966c:	4a3a      	ldr	r2, [pc, #232]	; (8009758 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800966e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009672:	7813      	ldrb	r3, [r2, #0]
 8009674:	3301      	adds	r3, #1
 8009676:	b25b      	sxtb	r3, r3
 8009678:	4299      	cmp	r1, r3
 800967a:	7013      	strb	r3, [r2, #0]
 800967c:	dc10      	bgt.n	80096a0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800967e:	68e0      	ldr	r0, [r4, #12]
 8009680:	2300      	movs	r3, #0
 8009682:	7013      	strb	r3, [r2, #0]
 8009684:	6803      	ldr	r3, [r0, #0]
 8009686:	aa03      	add	r2, sp, #12
 8009688:	68db      	ldr	r3, [r3, #12]
 800968a:	a902      	add	r1, sp, #8
 800968c:	4798      	blx	r3
 800968e:	6823      	ldr	r3, [r4, #0]
 8009690:	2800      	cmp	r0, #0
 8009692:	d050      	beq.n	8009736 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009694:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009698:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800969c:	4620      	mov	r0, r4
 800969e:	4798      	blx	r3
 80096a0:	6960      	ldr	r0, [r4, #20]
 80096a2:	2300      	movs	r3, #0
 80096a4:	f88d 3007 	strb.w	r3, [sp, #7]
 80096a8:	b158      	cbz	r0, 80096c2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80096aa:	6803      	ldr	r3, [r0, #0]
 80096ac:	f10d 0107 	add.w	r1, sp, #7
 80096b0:	68db      	ldr	r3, [r3, #12]
 80096b2:	4798      	blx	r3
 80096b4:	b128      	cbz	r0, 80096c2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80096b6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80096b8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80096bc:	6803      	ldr	r3, [r0, #0]
 80096be:	68db      	ldr	r3, [r3, #12]
 80096c0:	4798      	blx	r3
 80096c2:	f104 001c 	add.w	r0, r4, #28
 80096c6:	f012 f9e3 	bl	801ba90 <_ZN8touchgfx8Gestures4tickEv>
 80096ca:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80096ce:	b30b      	cbz	r3, 8009714 <_ZN8touchgfx3HAL4tickEv+0x134>
 80096d0:	6920      	ldr	r0, [r4, #16]
 80096d2:	6803      	ldr	r3, [r0, #0]
 80096d4:	691b      	ldr	r3, [r3, #16]
 80096d6:	4798      	blx	r3
 80096d8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80096da:	4606      	mov	r6, r0
 80096dc:	b903      	cbnz	r3, 80096e0 <_ZN8touchgfx3HAL4tickEv+0x100>
 80096de:	6720      	str	r0, [r4, #112]	; 0x70
 80096e0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80096e2:	4a1e      	ldr	r2, [pc, #120]	; (800975c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80096e4:	1af3      	subs	r3, r6, r3
 80096e6:	4293      	cmp	r3, r2
 80096e8:	d914      	bls.n	8009714 <_ZN8touchgfx3HAL4tickEv+0x134>
 80096ea:	6920      	ldr	r0, [r4, #16]
 80096ec:	6803      	ldr	r3, [r0, #0]
 80096ee:	699b      	ldr	r3, [r3, #24]
 80096f0:	4798      	blx	r3
 80096f2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80096f4:	2264      	movs	r2, #100	; 0x64
 80096f6:	1af3      	subs	r3, r6, r3
 80096f8:	fbb3 f3f2 	udiv	r3, r3, r2
 80096fc:	fbb0 f0f3 	udiv	r0, r0, r3
 8009700:	2800      	cmp	r0, #0
 8009702:	dc1d      	bgt.n	8009740 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009704:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009708:	6920      	ldr	r0, [r4, #16]
 800970a:	6803      	ldr	r3, [r0, #0]
 800970c:	2100      	movs	r1, #0
 800970e:	69db      	ldr	r3, [r3, #28]
 8009710:	4798      	blx	r3
 8009712:	6726      	str	r6, [r4, #112]	; 0x70
 8009714:	f003 f94c 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 8009718:	6803      	ldr	r3, [r0, #0]
 800971a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800971c:	4798      	blx	r3
 800971e:	6823      	ldr	r3, [r4, #0]
 8009720:	4620      	mov	r0, r4
 8009722:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009726:	4798      	blx	r3
 8009728:	2001      	movs	r0, #1
 800972a:	f7f7 f83f 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800972e:	2300      	movs	r3, #0
 8009730:	702b      	strb	r3, [r5, #0]
 8009732:	b004      	add	sp, #16
 8009734:	bd70      	pop	{r4, r5, r6, pc}
 8009736:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800973a:	4620      	mov	r0, r4
 800973c:	4798      	blx	r3
 800973e:	e7af      	b.n	80096a0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009740:	2863      	cmp	r0, #99	; 0x63
 8009742:	bfcb      	itete	gt
 8009744:	2300      	movgt	r3, #0
 8009746:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800974a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800974e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009752:	e7d9      	b.n	8009708 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009754:	2000a538 	.word	0x2000a538
 8009758:	2000a539 	.word	0x2000a539
 800975c:	05f5e100 	.word	0x05f5e100

08009760 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009760:	f7f7 baee 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009764 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009764:	6581      	str	r1, [r0, #88]	; 0x58
 8009766:	301c      	adds	r0, #28
 8009768:	f012 b990 	b.w	801ba8c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800976c <_ZN8touchgfx3HAL5touchEll>:
 800976c:	b530      	push	{r4, r5, lr}
 800976e:	b087      	sub	sp, #28
 8009770:	4604      	mov	r4, r0
 8009772:	a804      	add	r0, sp, #16
 8009774:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009778:	f002 fe78 	bl	800c46c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800977c:	9b04      	ldr	r3, [sp, #16]
 800977e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009782:	a906      	add	r1, sp, #24
 8009784:	9b05      	ldr	r3, [sp, #20]
 8009786:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800978a:	a803      	add	r0, sp, #12
 800978c:	f002 fec0 	bl	800c510 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009790:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009794:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009798:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800979c:	f104 001c 	add.w	r0, r4, #28
 80097a0:	b189      	cbz	r1, 80097c6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80097a2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80097a6:	9300      	str	r3, [sp, #0]
 80097a8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80097ac:	4613      	mov	r3, r2
 80097ae:	462a      	mov	r2, r5
 80097b0:	f012 f97c 	bl	801baac <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80097b4:	b128      	cbz	r0, 80097c2 <_ZN8touchgfx3HAL5touchEll+0x56>
 80097b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80097ba:	65e3      	str	r3, [r4, #92]	; 0x5c
 80097bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80097c0:	6623      	str	r3, [r4, #96]	; 0x60
 80097c2:	b007      	add	sp, #28
 80097c4:	bd30      	pop	{r4, r5, pc}
 80097c6:	f012 f9b1 	bl	801bb2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80097ca:	2301      	movs	r3, #1
 80097cc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80097d0:	e7f1      	b.n	80097b6 <_ZN8touchgfx3HAL5touchEll+0x4a>

080097d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80097d2:	b510      	push	{r4, lr}
 80097d4:	2b00      	cmp	r3, #0
 80097d6:	d046      	beq.n	8009866 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80097d8:	ea81 0002 	eor.w	r0, r1, r2
 80097dc:	07c4      	lsls	r4, r0, #31
 80097de:	d508      	bpl.n	80097f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80097e0:	440b      	add	r3, r1
 80097e2:	3a01      	subs	r2, #1
 80097e4:	428b      	cmp	r3, r1
 80097e6:	d93e      	bls.n	8009866 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80097e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80097ec:	f801 0b01 	strb.w	r0, [r1], #1
 80097f0:	e7f8      	b.n	80097e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80097f2:	07d0      	lsls	r0, r2, #31
 80097f4:	bf42      	ittt	mi
 80097f6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80097fa:	f801 0b01 	strbmi.w	r0, [r1], #1
 80097fe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009802:	2b01      	cmp	r3, #1
 8009804:	d911      	bls.n	800982a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009806:	ea81 0402 	eor.w	r4, r1, r2
 800980a:	07a4      	lsls	r4, r4, #30
 800980c:	4610      	mov	r0, r2
 800980e:	d022      	beq.n	8009856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009810:	f023 0401 	bic.w	r4, r3, #1
 8009814:	440c      	add	r4, r1
 8009816:	428c      	cmp	r4, r1
 8009818:	4602      	mov	r2, r0
 800981a:	d904      	bls.n	8009826 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800981c:	8812      	ldrh	r2, [r2, #0]
 800981e:	f821 2b02 	strh.w	r2, [r1], #2
 8009822:	3002      	adds	r0, #2
 8009824:	e7f7      	b.n	8009816 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009826:	f003 0301 	and.w	r3, r3, #1
 800982a:	f023 0003 	bic.w	r0, r3, #3
 800982e:	4408      	add	r0, r1
 8009830:	4288      	cmp	r0, r1
 8009832:	4614      	mov	r4, r2
 8009834:	d904      	bls.n	8009840 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009836:	6824      	ldr	r4, [r4, #0]
 8009838:	f841 4b04 	str.w	r4, [r1], #4
 800983c:	3204      	adds	r2, #4
 800983e:	e7f7      	b.n	8009830 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009840:	f003 0303 	and.w	r3, r3, #3
 8009844:	440b      	add	r3, r1
 8009846:	3a01      	subs	r2, #1
 8009848:	428b      	cmp	r3, r1
 800984a:	d90c      	bls.n	8009866 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800984c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009850:	f801 0b01 	strb.w	r0, [r1], #1
 8009854:	e7f8      	b.n	8009848 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009856:	0790      	lsls	r0, r2, #30
 8009858:	d0e7      	beq.n	800982a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800985a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800985e:	f821 0b02 	strh.w	r0, [r1], #2
 8009862:	3b02      	subs	r3, #2
 8009864:	e7e1      	b.n	800982a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009866:	2001      	movs	r0, #1
 8009868:	bd10      	pop	{r4, pc}

0800986a <_ZN8touchgfx3HAL7noTouchEv>:
 800986a:	b510      	push	{r4, lr}
 800986c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009870:	4604      	mov	r4, r0
 8009872:	b153      	cbz	r3, 800988a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009874:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009878:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800987c:	2101      	movs	r1, #1
 800987e:	301c      	adds	r0, #28
 8009880:	f012 f954 	bl	801bb2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009884:	2300      	movs	r3, #0
 8009886:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800988a:	bd10      	pop	{r4, pc}

0800988c <_ZN8touchgfx3HAL3lcdEv>:
 800988c:	4b04      	ldr	r3, [pc, #16]	; (80098a0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009894:	b10a      	cbz	r2, 800989a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009896:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009898:	b900      	cbnz	r0, 800989c <_ZN8touchgfx3HAL3lcdEv+0x10>
 800989a:	6898      	ldr	r0, [r3, #8]
 800989c:	4770      	bx	lr
 800989e:	bf00      	nop
 80098a0:	2000a534 	.word	0x2000a534

080098a4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80098a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098a8:	4604      	mov	r4, r0
 80098aa:	6980      	ldr	r0, [r0, #24]
 80098ac:	b085      	sub	sp, #20
 80098ae:	460f      	mov	r7, r1
 80098b0:	4690      	mov	r8, r2
 80098b2:	4699      	mov	r9, r3
 80098b4:	b930      	cbnz	r0, 80098c4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80098b6:	4b1c      	ldr	r3, [pc, #112]	; (8009928 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80098b8:	4a1c      	ldr	r2, [pc, #112]	; (800992c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80098ba:	f44f 719f 	mov.w	r1, #318	; 0x13e
 80098be:	481c      	ldr	r0, [pc, #112]	; (8009930 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80098c0:	f012 f9e8 	bl	801bc94 <__assert_func>
 80098c4:	ad04      	add	r5, sp, #16
 80098c6:	2600      	movs	r6, #0
 80098c8:	f845 6d04 	str.w	r6, [r5, #-4]!
 80098cc:	6806      	ldr	r6, [r0, #0]
 80098ce:	9501      	str	r5, [sp, #4]
 80098d0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80098d4:	9500      	str	r5, [sp, #0]
 80098d6:	6835      	ldr	r5, [r6, #0]
 80098d8:	47a8      	blx	r5
 80098da:	4d16      	ldr	r5, [pc, #88]	; (8009934 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80098dc:	4606      	mov	r6, r0
 80098de:	f8a5 9000 	strh.w	r9, [r5]
 80098e2:	f7ff ffd3 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 80098e6:	6803      	ldr	r3, [r0, #0]
 80098e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80098ea:	4798      	blx	r3
 80098ec:	2801      	cmp	r0, #1
 80098ee:	d012      	beq.n	8009916 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80098f0:	d306      	bcc.n	8009900 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80098f2:	280d      	cmp	r0, #13
 80098f4:	d80b      	bhi.n	800990e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80098f6:	4b10      	ldr	r3, [pc, #64]	; (8009938 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80098f8:	4a0c      	ldr	r2, [pc, #48]	; (800992c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80098fa:	f240 115b 	movw	r1, #347	; 0x15b
 80098fe:	e7de      	b.n	80098be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009900:	882b      	ldrh	r3, [r5, #0]
 8009902:	fb08 7203 	mla	r2, r8, r3, r7
 8009906:	9b03      	ldr	r3, [sp, #12]
 8009908:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800990c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800990e:	4630      	mov	r0, r6
 8009910:	b005      	add	sp, #20
 8009912:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009916:	882a      	ldrh	r2, [r5, #0]
 8009918:	9b03      	ldr	r3, [sp, #12]
 800991a:	fb08 7202 	mla	r2, r8, r2, r7
 800991e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009922:	1a9a      	subs	r2, r3, r2
 8009924:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009926:	e7f2      	b.n	800990e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009928:	0801e4f9 	.word	0x0801e4f9
 800992c:	0801e7b7 	.word	0x0801e7b7
 8009930:	0801e53e 	.word	0x0801e53e
 8009934:	2000a52e 	.word	0x2000a52e
 8009938:	0801e564 	.word	0x0801e564

0800993c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800993c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800993e:	b08b      	sub	sp, #44	; 0x2c
 8009940:	4617      	mov	r7, r2
 8009942:	4604      	mov	r4, r0
 8009944:	460e      	mov	r6, r1
 8009946:	461d      	mov	r5, r3
 8009948:	f7ff ffa0 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 800994c:	6803      	ldr	r3, [r0, #0]
 800994e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009950:	4798      	blx	r3
 8009952:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009956:	9007      	str	r0, [sp, #28]
 8009958:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800995c:	4b0d      	ldr	r3, [pc, #52]	; (8009994 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800995e:	6822      	ldr	r2, [r4, #0]
 8009960:	881b      	ldrh	r3, [r3, #0]
 8009962:	9306      	str	r3, [sp, #24]
 8009964:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009968:	9305      	str	r3, [sp, #20]
 800996a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800996e:	9304      	str	r3, [sp, #16]
 8009970:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009974:	9303      	str	r3, [sp, #12]
 8009976:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800997a:	9302      	str	r3, [sp, #8]
 800997c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009980:	e9cd 5300 	strd	r5, r3, [sp]
 8009984:	4631      	mov	r1, r6
 8009986:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009988:	463b      	mov	r3, r7
 800998a:	2200      	movs	r2, #0
 800998c:	4620      	mov	r0, r4
 800998e:	47a8      	blx	r5
 8009990:	b00b      	add	sp, #44	; 0x2c
 8009992:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009994:	2000a52e 	.word	0x2000a52e

08009998 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009998:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800999c:	4698      	mov	r8, r3
 800999e:	6803      	ldr	r3, [r0, #0]
 80099a0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80099a2:	4b15      	ldr	r3, [pc, #84]	; (80099f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80099a4:	b08b      	sub	sp, #44	; 0x2c
 80099a6:	4617      	mov	r7, r2
 80099a8:	f8b3 9000 	ldrh.w	r9, [r3]
 80099ac:	460e      	mov	r6, r1
 80099ae:	4604      	mov	r4, r0
 80099b0:	f7ff ff6c 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 80099b4:	6803      	ldr	r3, [r0, #0]
 80099b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099b8:	4798      	blx	r3
 80099ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80099be:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80099c2:	2302      	movs	r3, #2
 80099c4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80099c8:	2301      	movs	r3, #1
 80099ca:	9305      	str	r3, [sp, #20]
 80099cc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80099d0:	9304      	str	r3, [sp, #16]
 80099d2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80099d6:	9303      	str	r3, [sp, #12]
 80099d8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80099dc:	9302      	str	r3, [sp, #8]
 80099de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80099e2:	2200      	movs	r2, #0
 80099e4:	e9cd 8300 	strd	r8, r3, [sp]
 80099e8:	4631      	mov	r1, r6
 80099ea:	463b      	mov	r3, r7
 80099ec:	4620      	mov	r0, r4
 80099ee:	47a8      	blx	r5
 80099f0:	b00b      	add	sp, #44	; 0x2c
 80099f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80099f6:	bf00      	nop
 80099f8:	2000a52e 	.word	0x2000a52e

080099fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80099fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a00:	4698      	mov	r8, r3
 8009a02:	6803      	ldr	r3, [r0, #0]
 8009a04:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009a06:	4b11      	ldr	r3, [pc, #68]	; (8009a4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009a08:	b087      	sub	sp, #28
 8009a0a:	f8b3 9000 	ldrh.w	r9, [r3]
 8009a0e:	460e      	mov	r6, r1
 8009a10:	4617      	mov	r7, r2
 8009a12:	4604      	mov	r4, r0
 8009a14:	f7ff ff3a 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 8009a18:	6803      	ldr	r3, [r0, #0]
 8009a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a1c:	4798      	blx	r3
 8009a1e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009a22:	f8cd 900c 	str.w	r9, [sp, #12]
 8009a26:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009a2a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009a2e:	9302      	str	r3, [sp, #8]
 8009a30:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009a34:	9301      	str	r3, [sp, #4]
 8009a36:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009a3a:	9300      	str	r3, [sp, #0]
 8009a3c:	463a      	mov	r2, r7
 8009a3e:	4643      	mov	r3, r8
 8009a40:	4631      	mov	r1, r6
 8009a42:	4620      	mov	r0, r4
 8009a44:	47a8      	blx	r5
 8009a46:	b007      	add	sp, #28
 8009a48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009a4c:	2000a52e 	.word	0x2000a52e

08009a50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a54:	4604      	mov	r4, r0
 8009a56:	b08f      	sub	sp, #60	; 0x3c
 8009a58:	4610      	mov	r0, r2
 8009a5a:	460d      	mov	r5, r1
 8009a5c:	4691      	mov	r9, r2
 8009a5e:	461e      	mov	r6, r3
 8009a60:	f005 ff06 	bl	800f870 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009a64:	2800      	cmp	r0, #0
 8009a66:	f000 809c 	beq.w	8009ba2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8009a6a:	6823      	ldr	r3, [r4, #0]
 8009a6c:	f8df b194 	ldr.w	fp, [pc, #404]	; 8009c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009a70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009a72:	f8df a194 	ldr.w	sl, [pc, #404]	; 8009c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009a76:	4f60      	ldr	r7, [pc, #384]	; (8009bf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009a78:	4620      	mov	r0, r4
 8009a7a:	4798      	blx	r3
 8009a7c:	6823      	ldr	r3, [r4, #0]
 8009a7e:	4620      	mov	r0, r4
 8009a80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a82:	4798      	blx	r3
 8009a84:	f8bb 3000 	ldrh.w	r3, [fp]
 8009a88:	9301      	str	r3, [sp, #4]
 8009a8a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009a8e:	f8ba 3000 	ldrh.w	r3, [sl]
 8009a92:	9302      	str	r3, [sp, #8]
 8009a94:	883b      	ldrh	r3, [r7, #0]
 8009a96:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009a9a:	9303      	str	r3, [sp, #12]
 8009a9c:	4b57      	ldr	r3, [pc, #348]	; (8009bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009a9e:	9305      	str	r3, [sp, #20]
 8009aa0:	881a      	ldrh	r2, [r3, #0]
 8009aa2:	9204      	str	r2, [sp, #16]
 8009aa4:	4640      	mov	r0, r8
 8009aa6:	f005 ff93 	bl	800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009aaa:	8038      	strh	r0, [r7, #0]
 8009aac:	4640      	mov	r0, r8
 8009aae:	f005 ffd3 	bl	800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009ab2:	9b05      	ldr	r3, [sp, #20]
 8009ab4:	8018      	strh	r0, [r3, #0]
 8009ab6:	4b52      	ldr	r3, [pc, #328]	; (8009c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009ab8:	781b      	ldrb	r3, [r3, #0]
 8009aba:	2b00      	cmp	r3, #0
 8009abc:	d174      	bne.n	8009ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009abe:	883b      	ldrh	r3, [r7, #0]
 8009ac0:	f8ab 3000 	strh.w	r3, [fp]
 8009ac4:	f8aa 0000 	strh.w	r0, [sl]
 8009ac8:	4648      	mov	r0, r9
 8009aca:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009ace:	f005 fecf 	bl	800f870 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009ad2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009ad6:	2200      	movs	r2, #0
 8009ad8:	4611      	mov	r1, r2
 8009ada:	4628      	mov	r0, r5
 8009adc:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009ae0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009ae4:	f7f8 fd79 	bl	80025da <_ZN8touchgfx8Drawable5setXYEss>
 8009ae8:	2301      	movs	r3, #1
 8009aea:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009aee:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009af2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009af6:	2b00      	cmp	r3, #0
 8009af8:	dd5c      	ble.n	8009bb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009afa:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009afe:	2b00      	cmp	r3, #0
 8009b00:	dd58      	ble.n	8009bb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009b02:	462a      	mov	r2, r5
 8009b04:	ab0a      	add	r3, sp, #40	; 0x28
 8009b06:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009b0a:	6851      	ldr	r1, [r2, #4]
 8009b0c:	c303      	stmia	r3!, {r0, r1}
 8009b0e:	4631      	mov	r1, r6
 8009b10:	a80a      	add	r0, sp, #40	; 0x28
 8009b12:	f7ff fbed 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 8009b16:	4b38      	ldr	r3, [pc, #224]	; (8009bf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009b18:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009b1c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009b20:	2100      	movs	r1, #0
 8009b22:	aa0a      	add	r2, sp, #40	; 0x28
 8009b24:	4b35      	ldr	r3, [pc, #212]	; (8009bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009b26:	910c      	str	r1, [sp, #48]	; 0x30
 8009b28:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009b2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009b30:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009b34:	ab08      	add	r3, sp, #32
 8009b36:	e883 0003 	stmia.w	r3, {r0, r1}
 8009b3a:	4618      	mov	r0, r3
 8009b3c:	a90c      	add	r1, sp, #48	; 0x30
 8009b3e:	f7ff fbd7 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 8009b42:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	d13c      	bne.n	8009bc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8009b48:	2000      	movs	r0, #0
 8009b4a:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009b4e:	2600      	movs	r6, #0
 8009b50:	682a      	ldr	r2, [r5, #0]
 8009b52:	696b      	ldr	r3, [r5, #20]
 8009b54:	616e      	str	r6, [r5, #20]
 8009b56:	9305      	str	r3, [sp, #20]
 8009b58:	6892      	ldr	r2, [r2, #8]
 8009b5a:	a908      	add	r1, sp, #32
 8009b5c:	4628      	mov	r0, r5
 8009b5e:	4790      	blx	r2
 8009b60:	9b05      	ldr	r3, [sp, #20]
 8009b62:	616b      	str	r3, [r5, #20]
 8009b64:	4652      	mov	r2, sl
 8009b66:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009b6a:	4649      	mov	r1, r9
 8009b6c:	4628      	mov	r0, r5
 8009b6e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009b72:	f7f8 fd32 	bl	80025da <_ZN8touchgfx8Drawable5setXYEss>
 8009b76:	4b23      	ldr	r3, [pc, #140]	; (8009c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009b78:	9a01      	ldr	r2, [sp, #4]
 8009b7a:	801a      	strh	r2, [r3, #0]
 8009b7c:	4b22      	ldr	r3, [pc, #136]	; (8009c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8009b7e:	9a02      	ldr	r2, [sp, #8]
 8009b80:	801a      	strh	r2, [r3, #0]
 8009b82:	4b1d      	ldr	r3, [pc, #116]	; (8009bf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009b84:	9a03      	ldr	r2, [sp, #12]
 8009b86:	801a      	strh	r2, [r3, #0]
 8009b88:	4b1c      	ldr	r3, [pc, #112]	; (8009bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009b8a:	9a04      	ldr	r2, [sp, #16]
 8009b8c:	801a      	strh	r2, [r3, #0]
 8009b8e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8009b92:	6823      	ldr	r3, [r4, #0]
 8009b94:	4620      	mov	r0, r4
 8009b96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009b98:	4798      	blx	r3
 8009b9a:	6823      	ldr	r3, [r4, #0]
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ba0:	4798      	blx	r3
 8009ba2:	b00f      	add	sp, #60	; 0x3c
 8009ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ba8:	883b      	ldrh	r3, [r7, #0]
 8009baa:	f8ab 0000 	strh.w	r0, [fp]
 8009bae:	f8aa 3000 	strh.w	r3, [sl]
 8009bb2:	e789      	b.n	8009ac8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 8009bb4:	462a      	mov	r2, r5
 8009bb6:	ab0a      	add	r3, sp, #40	; 0x28
 8009bb8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009bbc:	6851      	ldr	r1, [r2, #4]
 8009bbe:	c303      	stmia	r3!, {r0, r1}
 8009bc0:	e7a9      	b.n	8009b16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 8009bc2:	a807      	add	r0, sp, #28
 8009bc4:	f006 f8aa 	bl	800fd1c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009bc8:	4606      	mov	r6, r0
 8009bca:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009bcc:	6803      	ldr	r3, [r0, #0]
 8009bce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bd0:	4798      	blx	r3
 8009bd2:	4286      	cmp	r6, r0
 8009bd4:	d1b8      	bne.n	8009b48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8009bd6:	f7ff fe59 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 8009bda:	6803      	ldr	r3, [r0, #0]
 8009bdc:	4606      	mov	r6, r0
 8009bde:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009be0:	9305      	str	r3, [sp, #20]
 8009be2:	a807      	add	r0, sp, #28
 8009be4:	f006 f89a 	bl	800fd1c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009be8:	9b05      	ldr	r3, [sp, #20]
 8009bea:	4601      	mov	r1, r0
 8009bec:	4630      	mov	r0, r6
 8009bee:	4798      	blx	r3
 8009bf0:	f080 0001 	eor.w	r0, r0, #1
 8009bf4:	b2c0      	uxtb	r0, r0
 8009bf6:	e7a8      	b.n	8009b4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009bf8:	2000a528 	.word	0x2000a528
 8009bfc:	2000a52a 	.word	0x2000a52a
 8009c00:	2000a52c 	.word	0x2000a52c
 8009c04:	2000a52e 	.word	0x2000a52e
 8009c08:	2000a530 	.word	0x2000a530

08009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009c0c:	b510      	push	{r4, lr}
 8009c0e:	4b07      	ldr	r3, [pc, #28]	; (8009c2c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009c10:	781b      	ldrb	r3, [r3, #0]
 8009c12:	4604      	mov	r4, r0
 8009c14:	b13b      	cbz	r3, 8009c26 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009c16:	6803      	ldr	r3, [r0, #0]
 8009c18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c1a:	4798      	blx	r3
 8009c1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009c1e:	4283      	cmp	r3, r0
 8009c20:	d101      	bne.n	8009c26 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009c22:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009c24:	bd10      	pop	{r4, pc}
 8009c26:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009c28:	e7fc      	b.n	8009c24 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009c2a:	bf00      	nop
 8009c2c:	2000a532 	.word	0x2000a532

08009c30 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009c30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009c34:	b08a      	sub	sp, #40	; 0x28
 8009c36:	461d      	mov	r5, r3
 8009c38:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009c3c:	2400      	movs	r4, #0
 8009c3e:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009c42:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009c46:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8009c4a:	9404      	str	r4, [sp, #16]
 8009c4c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009c50:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c54:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009c58:	4692      	mov	sl, r2
 8009c5a:	4606      	mov	r6, r0
 8009c5c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009c60:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009c64:	f88d 4020 	strb.w	r4, [sp, #32]
 8009c68:	f7ff ffd0 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009c6c:	fb09 a505 	mla	r5, r9, r5, sl
 8009c70:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009c74:	9505      	str	r5, [sp, #20]
 8009c76:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009c7a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009c7e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8009c82:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009c86:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009c8a:	f1b8 0f00 	cmp.w	r8, #0
 8009c8e:	d000      	beq.n	8009c92 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009c90:	b937      	cbnz	r7, 8009ca0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8009c92:	4b0d      	ldr	r3, [pc, #52]	; (8009cc8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009c94:	4a0d      	ldr	r2, [pc, #52]	; (8009ccc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009c96:	f240 2102 	movw	r1, #514	; 0x202
 8009c9a:	480d      	ldr	r0, [pc, #52]	; (8009cd0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8009c9c:	f011 fffa 	bl	801bc94 <__assert_func>
 8009ca0:	6833      	ldr	r3, [r6, #0]
 8009ca2:	9c01      	ldr	r4, [sp, #4]
 8009ca4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ca6:	4630      	mov	r0, r6
 8009ca8:	4798      	blx	r3
 8009caa:	4220      	tst	r0, r4
 8009cac:	d104      	bne.n	8009cb8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8009cae:	4b09      	ldr	r3, [pc, #36]	; (8009cd4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8009cb0:	4a06      	ldr	r2, [pc, #24]	; (8009ccc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009cb2:	f240 2103 	movw	r1, #515	; 0x203
 8009cb6:	e7f0      	b.n	8009c9a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8009cb8:	6870      	ldr	r0, [r6, #4]
 8009cba:	6803      	ldr	r3, [r0, #0]
 8009cbc:	a901      	add	r1, sp, #4
 8009cbe:	685b      	ldr	r3, [r3, #4]
 8009cc0:	4798      	blx	r3
 8009cc2:	b00a      	add	sp, #40	; 0x28
 8009cc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009cc8:	0801e393 	.word	0x0801e393
 8009ccc:	0801e5ec 	.word	0x0801e5ec
 8009cd0:	0801e53e 	.word	0x0801e53e
 8009cd4:	0801e3cb 	.word	0x0801e3cb

08009cd8 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009cdc:	b08b      	sub	sp, #44	; 0x2c
 8009cde:	2400      	movs	r4, #0
 8009ce0:	461d      	mov	r5, r3
 8009ce2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009ce6:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8009cea:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8009cee:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009cf2:	9404      	str	r4, [sp, #16]
 8009cf4:	468a      	mov	sl, r1
 8009cf6:	4693      	mov	fp, r2
 8009cf8:	4606      	mov	r6, r0
 8009cfa:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009cfe:	f7ff ff85 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d02:	fb09 b505 	mla	r5, r9, r5, fp
 8009d06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009d0a:	9505      	str	r5, [sp, #20]
 8009d0c:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009d10:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009d14:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009d18:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009d1c:	f8cd a010 	str.w	sl, [sp, #16]
 8009d20:	f8ad 4020 	strh.w	r4, [sp, #32]
 8009d24:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009d28:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009d2c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009d30:	f1b8 0f00 	cmp.w	r8, #0
 8009d34:	d000      	beq.n	8009d38 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8009d36:	b937      	cbnz	r7, 8009d46 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8009d38:	4b0d      	ldr	r3, [pc, #52]	; (8009d70 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009d3a:	4a0e      	ldr	r2, [pc, #56]	; (8009d74 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009d3c:	f240 2119 	movw	r1, #537	; 0x219
 8009d40:	480d      	ldr	r0, [pc, #52]	; (8009d78 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8009d42:	f011 ffa7 	bl	801bc94 <__assert_func>
 8009d46:	6833      	ldr	r3, [r6, #0]
 8009d48:	9c01      	ldr	r4, [sp, #4]
 8009d4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009d4c:	4630      	mov	r0, r6
 8009d4e:	4798      	blx	r3
 8009d50:	4220      	tst	r0, r4
 8009d52:	d104      	bne.n	8009d5e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8009d54:	4b09      	ldr	r3, [pc, #36]	; (8009d7c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8009d56:	4a07      	ldr	r2, [pc, #28]	; (8009d74 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009d58:	f240 211a 	movw	r1, #538	; 0x21a
 8009d5c:	e7f0      	b.n	8009d40 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8009d5e:	6870      	ldr	r0, [r6, #4]
 8009d60:	6803      	ldr	r3, [r0, #0]
 8009d62:	a901      	add	r1, sp, #4
 8009d64:	685b      	ldr	r3, [r3, #4]
 8009d66:	4798      	blx	r3
 8009d68:	b00b      	add	sp, #44	; 0x2c
 8009d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d6e:	bf00      	nop
 8009d70:	0801e410 	.word	0x0801e410
 8009d74:	0801e662 	.word	0x0801e662
 8009d78:	0801e53e 	.word	0x0801e53e
 8009d7c:	0801e448 	.word	0x0801e448

08009d80 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009d80:	b508      	push	{r3, lr}
 8009d82:	290d      	cmp	r1, #13
 8009d84:	d817      	bhi.n	8009db6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009d86:	e8df f001 	tbb	[pc, r1]
 8009d8a:	090b      	.short	0x090b
 8009d8c:	0d0d0d07 	.word	0x0d0d0d07
 8009d90:	1414140d 	.word	0x1414140d
 8009d94:	0d0d1414 	.word	0x0d0d1414
 8009d98:	2020      	movs	r0, #32
 8009d9a:	bd08      	pop	{r3, pc}
 8009d9c:	2018      	movs	r0, #24
 8009d9e:	e7fc      	b.n	8009d9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009da0:	2010      	movs	r0, #16
 8009da2:	e7fa      	b.n	8009d9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009da4:	4b05      	ldr	r3, [pc, #20]	; (8009dbc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009da6:	4a06      	ldr	r2, [pc, #24]	; (8009dc0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009da8:	4806      	ldr	r0, [pc, #24]	; (8009dc4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009daa:	f240 2183 	movw	r1, #643	; 0x283
 8009dae:	f011 ff71 	bl	801bc94 <__assert_func>
 8009db2:	2008      	movs	r0, #8
 8009db4:	e7f1      	b.n	8009d9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009db6:	2000      	movs	r0, #0
 8009db8:	e7ef      	b.n	8009d9a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009dba:	bf00      	nop
 8009dbc:	0801e5ba 	.word	0x0801e5ba
 8009dc0:	0801e98d 	.word	0x0801e98d
 8009dc4:	0801e53e 	.word	0x0801e53e

08009dc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009dc8:	b570      	push	{r4, r5, r6, lr}
 8009dca:	460d      	mov	r5, r1
 8009dcc:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009dd0:	4616      	mov	r6, r2
 8009dd2:	461c      	mov	r4, r3
 8009dd4:	f7ff ffd4 	bl	8009d80 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009dd8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009ddc:	10c0      	asrs	r0, r0, #3
 8009dde:	fb06 5101 	mla	r1, r6, r1, r5
 8009de2:	fb00 4001 	mla	r0, r0, r1, r4
 8009de6:	bd70      	pop	{r4, r5, r6, pc}

08009de8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009de8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009dec:	b08c      	sub	sp, #48	; 0x30
 8009dee:	f04f 0c00 	mov.w	ip, #0
 8009df2:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8009df6:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009dfa:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8009dfe:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8009e02:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8009e06:	f8cd c018 	str.w	ip, [sp, #24]
 8009e0a:	2d0b      	cmp	r5, #11
 8009e0c:	4604      	mov	r4, r0
 8009e0e:	469a      	mov	sl, r3
 8009e10:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8009e14:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009e18:	d130      	bne.n	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8009e1a:	2080      	movs	r0, #128	; 0x80
 8009e1c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8009e20:	9205      	str	r2, [sp, #20]
 8009e22:	4620      	mov	r0, r4
 8009e24:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8009e28:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8009e2c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009e30:	f8ad 7020 	strh.w	r7, [sp, #32]
 8009e34:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8009e38:	f7ff fee8 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e3c:	e9cd 9800 	strd	r9, r8, [sp]
 8009e40:	4603      	mov	r3, r0
 8009e42:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8009e46:	4651      	mov	r1, sl
 8009e48:	4620      	mov	r0, r4
 8009e4a:	f7ff ffbd 	bl	8009dc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009e4e:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8009e52:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009e56:	2300      	movs	r3, #0
 8009e58:	9007      	str	r0, [sp, #28]
 8009e5a:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8009e5e:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8009e62:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8009e66:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8009e6a:	b107      	cbz	r7, 8009e6e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8009e6c:	b9d6      	cbnz	r6, 8009ea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8009e6e:	4b17      	ldr	r3, [pc, #92]	; (8009ecc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8009e70:	4a17      	ldr	r2, [pc, #92]	; (8009ed0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009e72:	f240 11c9 	movw	r1, #457	; 0x1c9
 8009e76:	4817      	ldr	r0, [pc, #92]	; (8009ed4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8009e78:	f011 ff0c 	bl	801bc94 <__assert_func>
 8009e7c:	2d02      	cmp	r5, #2
 8009e7e:	d108      	bne.n	8009e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8009e80:	2bff      	cmp	r3, #255	; 0xff
 8009e82:	d104      	bne.n	8009e8e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8009e84:	2800      	cmp	r0, #0
 8009e86:	bf14      	ite	ne
 8009e88:	2040      	movne	r0, #64	; 0x40
 8009e8a:	2020      	moveq	r0, #32
 8009e8c:	e7c6      	b.n	8009e1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009e8e:	2040      	movs	r0, #64	; 0x40
 8009e90:	e7c4      	b.n	8009e1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009e92:	2bff      	cmp	r3, #255	; 0xff
 8009e94:	d104      	bne.n	8009ea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8009e96:	2800      	cmp	r0, #0
 8009e98:	bf14      	ite	ne
 8009e9a:	2004      	movne	r0, #4
 8009e9c:	2001      	moveq	r0, #1
 8009e9e:	e7bd      	b.n	8009e1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009ea0:	2004      	movs	r0, #4
 8009ea2:	e7bb      	b.n	8009e1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009ea4:	6823      	ldr	r3, [r4, #0]
 8009ea6:	9d03      	ldr	r5, [sp, #12]
 8009ea8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009eaa:	4620      	mov	r0, r4
 8009eac:	4798      	blx	r3
 8009eae:	4228      	tst	r0, r5
 8009eb0:	d104      	bne.n	8009ebc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8009eb2:	4b09      	ldr	r3, [pc, #36]	; (8009ed8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8009eb4:	4a06      	ldr	r2, [pc, #24]	; (8009ed0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009eb6:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8009eba:	e7dc      	b.n	8009e76 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8009ebc:	6860      	ldr	r0, [r4, #4]
 8009ebe:	6803      	ldr	r3, [r0, #0]
 8009ec0:	a903      	add	r1, sp, #12
 8009ec2:	685b      	ldr	r3, [r3, #4]
 8009ec4:	4798      	blx	r3
 8009ec6:	b00c      	add	sp, #48	; 0x30
 8009ec8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ecc:	0801e393 	.word	0x0801e393
 8009ed0:	0801e81b 	.word	0x0801e81b
 8009ed4:	0801e53e 	.word	0x0801e53e
 8009ed8:	0801e3cb 	.word	0x0801e3cb

08009edc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8009edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ee0:	b08d      	sub	sp, #52	; 0x34
 8009ee2:	469b      	mov	fp, r3
 8009ee4:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8009ee8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8009eec:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8009ef0:	2fff      	cmp	r7, #255	; 0xff
 8009ef2:	bf14      	ite	ne
 8009ef4:	2308      	movne	r3, #8
 8009ef6:	2302      	moveq	r3, #2
 8009ef8:	2500      	movs	r5, #0
 8009efa:	4604      	mov	r4, r0
 8009efc:	4689      	mov	r9, r1
 8009efe:	4692      	mov	sl, r2
 8009f00:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8009f04:	9506      	str	r5, [sp, #24]
 8009f06:	f7ff fe81 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f0a:	465a      	mov	r2, fp
 8009f0c:	4603      	mov	r3, r0
 8009f0e:	4651      	mov	r1, sl
 8009f10:	e9cd 8600 	strd	r8, r6, [sp]
 8009f14:	4620      	mov	r0, r4
 8009f16:	f7ff ff57 	bl	8009dc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009f1a:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8009f1e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009f22:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009f26:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009f2a:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8009f2e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009f32:	6823      	ldr	r3, [r4, #0]
 8009f34:	9007      	str	r0, [sp, #28]
 8009f36:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8009f3a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009f3e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 8009f42:	f8cd 9018 	str.w	r9, [sp, #24]
 8009f46:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8009f4a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8009f4e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 8009f52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f54:	9d03      	ldr	r5, [sp, #12]
 8009f56:	4620      	mov	r0, r4
 8009f58:	4798      	blx	r3
 8009f5a:	4228      	tst	r0, r5
 8009f5c:	d106      	bne.n	8009f6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8009f5e:	4b07      	ldr	r3, [pc, #28]	; (8009f7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8009f60:	4a07      	ldr	r2, [pc, #28]	; (8009f80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8009f62:	4808      	ldr	r0, [pc, #32]	; (8009f84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 8009f64:	f44f 710c 	mov.w	r1, #560	; 0x230
 8009f68:	f011 fe94 	bl	801bc94 <__assert_func>
 8009f6c:	6860      	ldr	r0, [r4, #4]
 8009f6e:	6803      	ldr	r3, [r0, #0]
 8009f70:	a903      	add	r1, sp, #12
 8009f72:	685b      	ldr	r3, [r3, #4]
 8009f74:	4798      	blx	r3
 8009f76:	b00d      	add	sp, #52	; 0x34
 8009f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f7c:	0801e3cb 	.word	0x0801e3cb
 8009f80:	0801e8f2 	.word	0x0801e8f2
 8009f84:	0801e53e 	.word	0x0801e53e

08009f88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009f88:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009f8c:	461f      	mov	r7, r3
 8009f8e:	4b0b      	ldr	r3, [pc, #44]	; (8009fbc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009f90:	460d      	mov	r5, r1
 8009f92:	f8b3 8000 	ldrh.w	r8, [r3]
 8009f96:	4616      	mov	r6, r2
 8009f98:	4604      	mov	r4, r0
 8009f9a:	f7ff fc77 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 8009f9e:	6803      	ldr	r3, [r0, #0]
 8009fa0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fa2:	4798      	blx	r3
 8009fa4:	463b      	mov	r3, r7
 8009fa6:	e9cd 8000 	strd	r8, r0, [sp]
 8009faa:	4632      	mov	r2, r6
 8009fac:	4629      	mov	r1, r5
 8009fae:	4620      	mov	r0, r4
 8009fb0:	f7ff ff0a 	bl	8009dc8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009fb4:	b002      	add	sp, #8
 8009fb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009fba:	bf00      	nop
 8009fbc:	2000a52e 	.word	0x2000a52e

08009fc0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8009fc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009fc4:	b08b      	sub	sp, #44	; 0x2c
 8009fc6:	4699      	mov	r9, r3
 8009fc8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009fcc:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8009fd0:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009fd4:	f8ad 7018 	strh.w	r7, [sp, #24]
 8009fd8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009fdc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009fe0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009fe4:	2500      	movs	r5, #0
 8009fe6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009fea:	f88d 3020 	strb.w	r3, [sp, #32]
 8009fee:	4690      	mov	r8, r2
 8009ff0:	4604      	mov	r4, r0
 8009ff2:	9504      	str	r5, [sp, #16]
 8009ff4:	f8ad 601a 	strh.w	r6, [sp, #26]
 8009ff8:	f7ff fe08 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ffc:	464a      	mov	r2, r9
 8009ffe:	4603      	mov	r3, r0
 800a000:	4641      	mov	r1, r8
 800a002:	4620      	mov	r0, r4
 800a004:	f7ff ffc0 	bl	8009f88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a008:	4b19      	ldr	r3, [pc, #100]	; (800a070 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800a00a:	9005      	str	r0, [sp, #20]
 800a00c:	881b      	ldrh	r3, [r3, #0]
 800a00e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a012:	f7ff fc3b 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 800a016:	6803      	ldr	r3, [r0, #0]
 800a018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a01a:	4798      	blx	r3
 800a01c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a020:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a024:	b107      	cbz	r7, 800a028 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800a026:	b936      	cbnz	r6, 800a036 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800a028:	4b12      	ldr	r3, [pc, #72]	; (800a074 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a02a:	4a13      	ldr	r2, [pc, #76]	; (800a078 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a02c:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800a030:	4812      	ldr	r0, [pc, #72]	; (800a07c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800a032:	f011 fe2f 	bl	801bc94 <__assert_func>
 800a036:	6823      	ldr	r3, [r4, #0]
 800a038:	9e01      	ldr	r6, [sp, #4]
 800a03a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a03c:	4620      	mov	r0, r4
 800a03e:	4798      	blx	r3
 800a040:	4230      	tst	r0, r6
 800a042:	d104      	bne.n	800a04e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800a044:	4b0e      	ldr	r3, [pc, #56]	; (800a080 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800a046:	4a0c      	ldr	r2, [pc, #48]	; (800a078 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a048:	f240 11e7 	movw	r1, #487	; 0x1e7
 800a04c:	e7f0      	b.n	800a030 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800a04e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a050:	9304      	str	r3, [sp, #16]
 800a052:	6860      	ldr	r0, [r4, #4]
 800a054:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800a058:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a05c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a060:	6803      	ldr	r3, [r0, #0]
 800a062:	a901      	add	r1, sp, #4
 800a064:	685b      	ldr	r3, [r3, #4]
 800a066:	4798      	blx	r3
 800a068:	b00b      	add	sp, #44	; 0x2c
 800a06a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a06e:	bf00      	nop
 800a070:	2000a52e 	.word	0x2000a52e
 800a074:	0801e393 	.word	0x0801e393
 800a078:	0801e6c7 	.word	0x0801e6c7
 800a07c:	0801e53e 	.word	0x0801e53e
 800a080:	0801e3cb 	.word	0x0801e3cb

0800a084 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a084:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a086:	b08d      	sub	sp, #52	; 0x34
 800a088:	466b      	mov	r3, sp
 800a08a:	e883 0006 	stmia.w	r3, {r1, r2}
 800a08e:	4b22      	ldr	r3, [pc, #136]	; (800a118 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a090:	781b      	ldrb	r3, [r3, #0]
 800a092:	4604      	mov	r4, r0
 800a094:	b933      	cbnz	r3, 800a0a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a096:	4b21      	ldr	r3, [pc, #132]	; (800a11c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a098:	4a21      	ldr	r2, [pc, #132]	; (800a120 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a09a:	4822      	ldr	r0, [pc, #136]	; (800a124 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800a09c:	f240 2141 	movw	r1, #577	; 0x241
 800a0a0:	f011 fdf8 	bl	801bc94 <__assert_func>
 800a0a4:	2300      	movs	r3, #0
 800a0a6:	9306      	str	r3, [sp, #24]
 800a0a8:	6803      	ldr	r3, [r0, #0]
 800a0aa:	f8bd 6000 	ldrh.w	r6, [sp]
 800a0ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0b0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a0b4:	2501      	movs	r5, #1
 800a0b6:	9503      	str	r5, [sp, #12]
 800a0b8:	4798      	blx	r3
 800a0ba:	463a      	mov	r2, r7
 800a0bc:	4631      	mov	r1, r6
 800a0be:	4603      	mov	r3, r0
 800a0c0:	4620      	mov	r0, r4
 800a0c2:	f7ff ff61 	bl	8009f88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a0c6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a0c8:	9307      	str	r3, [sp, #28]
 800a0ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a0ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a0d2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a0d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a0da:	4b13      	ldr	r3, [pc, #76]	; (800a128 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800a0dc:	9004      	str	r0, [sp, #16]
 800a0de:	881b      	ldrh	r3, [r3, #0]
 800a0e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a0e4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a0e8:	f7ff fbd0 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 800a0ec:	6803      	ldr	r3, [r0, #0]
 800a0ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0f0:	4798      	blx	r3
 800a0f2:	23ff      	movs	r3, #255	; 0xff
 800a0f4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a0f8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a0fc:	6860      	ldr	r0, [r4, #4]
 800a0fe:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a102:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a106:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a10a:	6803      	ldr	r3, [r0, #0]
 800a10c:	a903      	add	r1, sp, #12
 800a10e:	685b      	ldr	r3, [r3, #4]
 800a110:	4798      	blx	r3
 800a112:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a114:	b00d      	add	sp, #52	; 0x34
 800a116:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a118:	2000a533 	.word	0x2000a533
 800a11c:	0801e492 	.word	0x0801e492
 800a120:	0801e771 	.word	0x0801e771
 800a124:	0801e53e 	.word	0x0801e53e
 800a128:	2000a52e 	.word	0x2000a52e

0800a12c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a12c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a130:	b08c      	sub	sp, #48	; 0x30
 800a132:	461e      	mov	r6, r3
 800a134:	466d      	mov	r5, sp
 800a136:	2300      	movs	r3, #0
 800a138:	e885 0006 	stmia.w	r5, {r1, r2}
 800a13c:	9306      	str	r3, [sp, #24]
 800a13e:	6803      	ldr	r3, [r0, #0]
 800a140:	f8bd 7000 	ldrh.w	r7, [sp]
 800a144:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a146:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a14a:	2501      	movs	r5, #1
 800a14c:	9503      	str	r5, [sp, #12]
 800a14e:	4604      	mov	r4, r0
 800a150:	4798      	blx	r3
 800a152:	4642      	mov	r2, r8
 800a154:	4639      	mov	r1, r7
 800a156:	4603      	mov	r3, r0
 800a158:	4620      	mov	r0, r4
 800a15a:	f7ff ff15 	bl	8009f88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a15e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a162:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a166:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a16a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a16e:	4b11      	ldr	r3, [pc, #68]	; (800a1b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a170:	9004      	str	r0, [sp, #16]
 800a172:	881b      	ldrh	r3, [r3, #0]
 800a174:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a178:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a17a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a17e:	9607      	str	r6, [sp, #28]
 800a180:	f7ff fb84 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 800a184:	6803      	ldr	r3, [r0, #0]
 800a186:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a188:	4798      	blx	r3
 800a18a:	23ff      	movs	r3, #255	; 0xff
 800a18c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a190:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a194:	6860      	ldr	r0, [r4, #4]
 800a196:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a19a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a19e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a1a2:	6803      	ldr	r3, [r0, #0]
 800a1a4:	a903      	add	r1, sp, #12
 800a1a6:	685b      	ldr	r3, [r3, #4]
 800a1a8:	4798      	blx	r3
 800a1aa:	4630      	mov	r0, r6
 800a1ac:	b00c      	add	sp, #48	; 0x30
 800a1ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1b2:	bf00      	nop
 800a1b4:	2000a52e 	.word	0x2000a52e

0800a1b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a1b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1ba:	b085      	sub	sp, #20
 800a1bc:	ac02      	add	r4, sp, #8
 800a1be:	e884 0006 	stmia.w	r4, {r1, r2}
 800a1c2:	4605      	mov	r5, r0
 800a1c4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a1c8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a1cc:	f7ff fd1e 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1d0:	463a      	mov	r2, r7
 800a1d2:	4603      	mov	r3, r0
 800a1d4:	4631      	mov	r1, r6
 800a1d6:	4628      	mov	r0, r5
 800a1d8:	f7ff fed6 	bl	8009f88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a1dc:	4a05      	ldr	r2, [pc, #20]	; (800a1f4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a1de:	682b      	ldr	r3, [r5, #0]
 800a1e0:	8812      	ldrh	r2, [r2, #0]
 800a1e2:	9200      	str	r2, [sp, #0]
 800a1e4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a1e6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a1ea:	4603      	mov	r3, r0
 800a1ec:	4628      	mov	r0, r5
 800a1ee:	47b0      	blx	r6
 800a1f0:	b005      	add	sp, #20
 800a1f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1f4:	2000a52e 	.word	0x2000a52e

0800a1f8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a1f8:	b570      	push	{r4, r5, r6, lr}
 800a1fa:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a1fe:	4604      	mov	r4, r0
 800a200:	b19b      	cbz	r3, 800a22a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a202:	2002      	movs	r0, #2
 800a204:	f7f6 faf8 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a208:	2300      	movs	r3, #0
 800a20a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a20e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a212:	6823      	ldr	r3, [r4, #0]
 800a214:	4620      	mov	r0, r4
 800a216:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a21a:	f7ff fcf7 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a21e:	462b      	mov	r3, r5
 800a220:	4601      	mov	r1, r0
 800a222:	4620      	mov	r0, r4
 800a224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a228:	4718      	bx	r3
 800a22a:	bd70      	pop	{r4, r5, r6, pc}

0800a22c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a22c:	b570      	push	{r4, r5, r6, lr}
 800a22e:	4605      	mov	r5, r0
 800a230:	460c      	mov	r4, r1
 800a232:	2003      	movs	r0, #3
 800a234:	b149      	cbz	r1, 800a24a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a236:	f7f6 fa93 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a23a:	6928      	ldr	r0, [r5, #16]
 800a23c:	b168      	cbz	r0, 800a25a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a23e:	6803      	ldr	r3, [r0, #0]
 800a240:	695b      	ldr	r3, [r3, #20]
 800a242:	2101      	movs	r1, #1
 800a244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a248:	4718      	bx	r3
 800a24a:	f7f6 faaf 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a24e:	6928      	ldr	r0, [r5, #16]
 800a250:	b118      	cbz	r0, 800a25a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a252:	6803      	ldr	r3, [r0, #0]
 800a254:	4621      	mov	r1, r4
 800a256:	695b      	ldr	r3, [r3, #20]
 800a258:	e7f4      	b.n	800a244 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a25a:	bd70      	pop	{r4, r5, r6, pc}

0800a25c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a25c:	b538      	push	{r3, r4, r5, lr}
 800a25e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a262:	428b      	cmp	r3, r1
 800a264:	4604      	mov	r4, r0
 800a266:	460d      	mov	r5, r1
 800a268:	d006      	beq.n	800a278 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a26a:	6803      	ldr	r3, [r0, #0]
 800a26c:	b929      	cbnz	r1, 800a27a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a26e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a272:	4798      	blx	r3
 800a274:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a278:	bd38      	pop	{r3, r4, r5, pc}
 800a27a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a27e:	e7f8      	b.n	800a272 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a280 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a280:	b510      	push	{r4, lr}
 800a282:	4b0d      	ldr	r3, [pc, #52]	; (800a2b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a284:	781b      	ldrb	r3, [r3, #0]
 800a286:	4604      	mov	r4, r0
 800a288:	b95b      	cbnz	r3, 800a2a2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a28a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a28e:	2b02      	cmp	r3, #2
 800a290:	d007      	beq.n	800a2a2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a292:	6840      	ldr	r0, [r0, #4]
 800a294:	f000 f93c 	bl	800a510 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a298:	b118      	cbz	r0, 800a2a2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a29a:	6862      	ldr	r2, [r4, #4]
 800a29c:	7a53      	ldrb	r3, [r2, #9]
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	d0fc      	beq.n	800a29c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a2a2:	f7f6 fd45 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a2a6:	4620      	mov	r0, r4
 800a2a8:	2100      	movs	r1, #0
 800a2aa:	f7ff ffd7 	bl	800a25c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a2ae:	4620      	mov	r0, r4
 800a2b0:	f7ff fcac 	bl	8009c0c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2b4:	bd10      	pop	{r4, pc}
 800a2b6:	bf00      	nop
 800a2b8:	2000a532 	.word	0x2000a532

0800a2bc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a2bc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a2c0:	1a13      	subs	r3, r2, r0
 800a2c2:	4258      	negs	r0, r3
 800a2c4:	4158      	adcs	r0, r3
 800a2c6:	4770      	bx	lr

0800a2c8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a2c8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a2cc:	1a9b      	subs	r3, r3, r2
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	bfdc      	itt	le
 800a2d2:	6882      	ldrle	r2, [r0, #8]
 800a2d4:	189b      	addle	r3, r3, r2
 800a2d6:	2b01      	cmp	r3, #1
 800a2d8:	bfcc      	ite	gt
 800a2da:	2000      	movgt	r0, #0
 800a2dc:	2001      	movle	r0, #1
 800a2de:	4770      	bx	lr

0800a2e0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a2e0:	6902      	ldr	r2, [r0, #16]
 800a2e2:	6843      	ldr	r3, [r0, #4]
 800a2e4:	2024      	movs	r0, #36	; 0x24
 800a2e6:	fb00 3002 	mla	r0, r0, r2, r3
 800a2ea:	4770      	bx	lr

0800a2ec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a2ec:	6803      	ldr	r3, [r0, #0]
 800a2ee:	691b      	ldr	r3, [r3, #16]
 800a2f0:	4718      	bx	r3

0800a2f2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a2f2:	4770      	bx	lr

0800a2f4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a2f4:	4770      	bx	lr

0800a2f6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a2f6:	4770      	bx	lr

0800a2f8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a2f8:	b570      	push	{r4, r5, r6, lr}
 800a2fa:	2301      	movs	r3, #1
 800a2fc:	7203      	strb	r3, [r0, #8]
 800a2fe:	4604      	mov	r4, r0
 800a300:	6840      	ldr	r0, [r0, #4]
 800a302:	6803      	ldr	r3, [r0, #0]
 800a304:	699b      	ldr	r3, [r3, #24]
 800a306:	4798      	blx	r3
 800a308:	6803      	ldr	r3, [r0, #0]
 800a30a:	2b40      	cmp	r3, #64	; 0x40
 800a30c:	4605      	mov	r5, r0
 800a30e:	d039      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a310:	d815      	bhi.n	800a33e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a312:	2b04      	cmp	r3, #4
 800a314:	d022      	beq.n	800a35c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a316:	d808      	bhi.n	800a32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a318:	2b01      	cmp	r3, #1
 800a31a:	d033      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a31c:	2b02      	cmp	r3, #2
 800a31e:	d108      	bne.n	800a332 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a320:	6823      	ldr	r3, [r4, #0]
 800a322:	4620      	mov	r0, r4
 800a324:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a326:	4798      	blx	r3
 800a328:	e025      	b.n	800a376 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a32a:	2b08      	cmp	r3, #8
 800a32c:	d01e      	beq.n	800a36c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a32e:	2b20      	cmp	r3, #32
 800a330:	d028      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a332:	4b17      	ldr	r3, [pc, #92]	; (800a390 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a334:	4a17      	ldr	r2, [pc, #92]	; (800a394 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a336:	4818      	ldr	r0, [pc, #96]	; (800a398 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a338:	2188      	movs	r1, #136	; 0x88
 800a33a:	f011 fcab 	bl	801bc94 <__assert_func>
 800a33e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a342:	d01f      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a344:	d804      	bhi.n	800a350 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a346:	2b80      	cmp	r3, #128	; 0x80
 800a348:	d01c      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a34a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a34e:	e7ef      	b.n	800a330 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a350:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a354:	d016      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a356:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a35a:	e7e0      	b.n	800a31e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a35c:	6823      	ldr	r3, [r4, #0]
 800a35e:	7f01      	ldrb	r1, [r0, #28]
 800a360:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a362:	4620      	mov	r0, r4
 800a364:	4798      	blx	r3
 800a366:	6823      	ldr	r3, [r4, #0]
 800a368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a36a:	e006      	b.n	800a37a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a36c:	6823      	ldr	r3, [r4, #0]
 800a36e:	7f01      	ldrb	r1, [r0, #28]
 800a370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a372:	4620      	mov	r0, r4
 800a374:	4798      	blx	r3
 800a376:	6823      	ldr	r3, [r4, #0]
 800a378:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a37a:	4629      	mov	r1, r5
 800a37c:	4620      	mov	r0, r4
 800a37e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a382:	4718      	bx	r3
 800a384:	6823      	ldr	r3, [r4, #0]
 800a386:	4620      	mov	r0, r4
 800a388:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a38a:	4798      	blx	r3
 800a38c:	e7eb      	b.n	800a366 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a38e:	bf00      	nop
 800a390:	0801e9d6 	.word	0x0801e9d6
 800a394:	0801ea98 	.word	0x0801ea98
 800a398:	0801e9fb 	.word	0x0801e9fb

0800a39c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a39c:	b570      	push	{r4, r5, r6, lr}
 800a39e:	4604      	mov	r4, r0
 800a3a0:	460e      	mov	r6, r1
 800a3a2:	6860      	ldr	r0, [r4, #4]
 800a3a4:	6803      	ldr	r3, [r0, #0]
 800a3a6:	685b      	ldr	r3, [r3, #4]
 800a3a8:	4798      	blx	r3
 800a3aa:	2800      	cmp	r0, #0
 800a3ac:	d1f9      	bne.n	800a3a2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a3ae:	4d0d      	ldr	r5, [pc, #52]	; (800a3e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a3b0:	6828      	ldr	r0, [r5, #0]
 800a3b2:	6803      	ldr	r3, [r0, #0]
 800a3b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a3b6:	4798      	blx	r3
 800a3b8:	f7f6 fcc8 	bl	8000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a3bc:	6828      	ldr	r0, [r5, #0]
 800a3be:	2101      	movs	r1, #1
 800a3c0:	f7ff ff4c 	bl	800a25c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a3c4:	6860      	ldr	r0, [r4, #4]
 800a3c6:	6803      	ldr	r3, [r0, #0]
 800a3c8:	4631      	mov	r1, r6
 800a3ca:	689b      	ldr	r3, [r3, #8]
 800a3cc:	4798      	blx	r3
 800a3ce:	6823      	ldr	r3, [r4, #0]
 800a3d0:	4620      	mov	r0, r4
 800a3d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3d4:	4798      	blx	r3
 800a3d6:	6828      	ldr	r0, [r5, #0]
 800a3d8:	6803      	ldr	r3, [r0, #0]
 800a3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3de:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a3e0:	4718      	bx	r3
 800a3e2:	bf00      	nop
 800a3e4:	2000a534 	.word	0x2000a534

0800a3e8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a3e8:	b508      	push	{r3, lr}
 800a3ea:	f7f6 fca1 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a3ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a3f2:	f7f6 bca5 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a3f6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a3f6:	b510      	push	{r4, lr}
 800a3f8:	2114      	movs	r1, #20
 800a3fa:	4604      	mov	r4, r0
 800a3fc:	f011 fc1c 	bl	801bc38 <_ZdlPvj>
 800a400:	4620      	mov	r0, r4
 800a402:	bd10      	pop	{r4, pc}

0800a404 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a404:	b510      	push	{r4, lr}
 800a406:	4604      	mov	r4, r0
 800a408:	6840      	ldr	r0, [r0, #4]
 800a40a:	6803      	ldr	r3, [r0, #0]
 800a40c:	681b      	ldr	r3, [r3, #0]
 800a40e:	4798      	blx	r3
 800a410:	b948      	cbnz	r0, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a412:	7a63      	ldrb	r3, [r4, #9]
 800a414:	b13b      	cbz	r3, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a416:	7a23      	ldrb	r3, [r4, #8]
 800a418:	b92b      	cbnz	r3, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a41a:	6823      	ldr	r3, [r4, #0]
 800a41c:	4620      	mov	r0, r4
 800a41e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a420:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a424:	4718      	bx	r3
 800a426:	bd10      	pop	{r4, pc}

0800a428 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a428:	b510      	push	{r4, lr}
 800a42a:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a42e:	1ad2      	subs	r2, r2, r3
 800a430:	2a00      	cmp	r2, #0
 800a432:	bfdc      	itt	le
 800a434:	6884      	ldrle	r4, [r0, #8]
 800a436:	1912      	addle	r2, r2, r4
 800a438:	2a01      	cmp	r2, #1
 800a43a:	dd17      	ble.n	800a46c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800a43c:	6842      	ldr	r2, [r0, #4]
 800a43e:	2424      	movs	r4, #36	; 0x24
 800a440:	fb04 2303 	mla	r3, r4, r3, r2
 800a444:	f101 0220 	add.w	r2, r1, #32
 800a448:	f851 4b04 	ldr.w	r4, [r1], #4
 800a44c:	f843 4b04 	str.w	r4, [r3], #4
 800a450:	4291      	cmp	r1, r2
 800a452:	d1f9      	bne.n	800a448 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a454:	780a      	ldrb	r2, [r1, #0]
 800a456:	701a      	strb	r2, [r3, #0]
 800a458:	68c3      	ldr	r3, [r0, #12]
 800a45a:	6882      	ldr	r2, [r0, #8]
 800a45c:	f3bf 8f5b 	dmb	ish
 800a460:	3301      	adds	r3, #1
 800a462:	429a      	cmp	r2, r3
 800a464:	bfd8      	it	le
 800a466:	1a9b      	suble	r3, r3, r2
 800a468:	60c3      	str	r3, [r0, #12]
 800a46a:	bd10      	pop	{r4, pc}
 800a46c:	4b02      	ldr	r3, [pc, #8]	; (800a478 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a46e:	4a03      	ldr	r2, [pc, #12]	; (800a47c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a470:	4803      	ldr	r0, [pc, #12]	; (800a480 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a472:	2136      	movs	r1, #54	; 0x36
 800a474:	f011 fc0e 	bl	801bc94 <__assert_func>
 800a478:	0801ea21 	.word	0x0801ea21
 800a47c:	0801eac8 	.word	0x0801eac8
 800a480:	0801e9fb 	.word	0x0801e9fb

0800a484 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a484:	b510      	push	{r4, lr}
 800a486:	6803      	ldr	r3, [r0, #0]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	4604      	mov	r4, r0
 800a48c:	4798      	blx	r3
 800a48e:	b128      	cbz	r0, 800a49c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a490:	4b07      	ldr	r3, [pc, #28]	; (800a4b0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a492:	4a08      	ldr	r2, [pc, #32]	; (800a4b4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a494:	4808      	ldr	r0, [pc, #32]	; (800a4b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a496:	213c      	movs	r1, #60	; 0x3c
 800a498:	f011 fbfc 	bl	801bc94 <__assert_func>
 800a49c:	6923      	ldr	r3, [r4, #16]
 800a49e:	68a2      	ldr	r2, [r4, #8]
 800a4a0:	f3bf 8f5b 	dmb	ish
 800a4a4:	3301      	adds	r3, #1
 800a4a6:	429a      	cmp	r2, r3
 800a4a8:	bfd8      	it	le
 800a4aa:	1a9b      	suble	r3, r3, r2
 800a4ac:	6123      	str	r3, [r4, #16]
 800a4ae:	bd10      	pop	{r4, pc}
 800a4b0:	0801ea44 	.word	0x0801ea44
 800a4b4:	0801eb16 	.word	0x0801eb16
 800a4b8:	0801e9fb 	.word	0x0801e9fb

0800a4bc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a4bc:	b570      	push	{r4, r5, r6, lr}
 800a4be:	4604      	mov	r4, r0
 800a4c0:	6840      	ldr	r0, [r0, #4]
 800a4c2:	6803      	ldr	r3, [r0, #0]
 800a4c4:	681b      	ldr	r3, [r3, #0]
 800a4c6:	4798      	blx	r3
 800a4c8:	4605      	mov	r5, r0
 800a4ca:	b930      	cbnz	r0, 800a4da <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a4cc:	7a23      	ldrb	r3, [r4, #8]
 800a4ce:	b123      	cbz	r3, 800a4da <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a4d0:	6860      	ldr	r0, [r4, #4]
 800a4d2:	6803      	ldr	r3, [r0, #0]
 800a4d4:	695b      	ldr	r3, [r3, #20]
 800a4d6:	4798      	blx	r3
 800a4d8:	7225      	strb	r5, [r4, #8]
 800a4da:	6860      	ldr	r0, [r4, #4]
 800a4dc:	6803      	ldr	r3, [r0, #0]
 800a4de:	681b      	ldr	r3, [r3, #0]
 800a4e0:	4798      	blx	r3
 800a4e2:	b928      	cbnz	r0, 800a4f0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a4e4:	6823      	ldr	r3, [r4, #0]
 800a4e6:	4620      	mov	r0, r4
 800a4e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a4ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4ee:	4718      	bx	r3
 800a4f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4f4:	f7f6 bc32 	b.w	8000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a4f8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a4f8:	b510      	push	{r4, lr}
 800a4fa:	4c04      	ldr	r4, [pc, #16]	; (800a50c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a4fc:	6082      	str	r2, [r0, #8]
 800a4fe:	2200      	movs	r2, #0
 800a500:	e9c0 4100 	strd	r4, r1, [r0]
 800a504:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a508:	bd10      	pop	{r4, pc}
 800a50a:	bf00      	nop
 800a50c:	0801ea7c 	.word	0x0801ea7c

0800a510 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a510:	6840      	ldr	r0, [r0, #4]
 800a512:	6803      	ldr	r3, [r0, #0]
 800a514:	681b      	ldr	r3, [r3, #0]
 800a516:	4718      	bx	r3

0800a518 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a518:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a51c:	4b1a      	ldr	r3, [pc, #104]	; (800a588 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a51e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a520:	881b      	ldrh	r3, [r3, #0]
 800a522:	428b      	cmp	r3, r1
 800a524:	4604      	mov	r4, r0
 800a526:	d92d      	bls.n	800a584 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800a528:	4b18      	ldr	r3, [pc, #96]	; (800a58c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a52a:	681b      	ldr	r3, [r3, #0]
 800a52c:	b92b      	cbnz	r3, 800a53a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800a52e:	4b18      	ldr	r3, [pc, #96]	; (800a590 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a530:	4a18      	ldr	r2, [pc, #96]	; (800a594 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a532:	4819      	ldr	r0, [pc, #100]	; (800a598 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a534:	21ae      	movs	r1, #174	; 0xae
 800a536:	f011 fbad 	bl	801bc94 <__assert_func>
 800a53a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a53e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a542:	4b16      	ldr	r3, [pc, #88]	; (800a59c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800a544:	7855      	ldrb	r5, [r2, #1]
 800a546:	681b      	ldr	r3, [r3, #0]
 800a548:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800a54c:	6833      	ldr	r3, [r6, #0]
 800a54e:	69df      	ldr	r7, [r3, #28]
 800a550:	4b13      	ldr	r3, [pc, #76]	; (800a5a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800a552:	6818      	ldr	r0, [r3, #0]
 800a554:	f7f8 fae6 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800a558:	6823      	ldr	r3, [r4, #0]
 800a55a:	4680      	mov	r8, r0
 800a55c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a55e:	4620      	mov	r0, r4
 800a560:	4798      	blx	r3
 800a562:	6823      	ldr	r3, [r4, #0]
 800a564:	4681      	mov	r9, r0
 800a566:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a56a:	4620      	mov	r0, r4
 800a56c:	4798      	blx	r3
 800a56e:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800a572:	9000      	str	r0, [sp, #0]
 800a574:	464b      	mov	r3, r9
 800a576:	4642      	mov	r2, r8
 800a578:	4629      	mov	r1, r5
 800a57a:	4630      	mov	r0, r6
 800a57c:	47b8      	blx	r7
 800a57e:	b003      	add	sp, #12
 800a580:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a584:	2000      	movs	r0, #0
 800a586:	e7fa      	b.n	800a57e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800a588:	2000a588 	.word	0x2000a588
 800a58c:	2000a584 	.word	0x2000a584
 800a590:	0801d97c 	.word	0x0801d97c
 800a594:	0801eb46 	.word	0x0801eb46
 800a598:	0801da0a 	.word	0x0801da0a
 800a59c:	2000a58c 	.word	0x2000a58c
 800a5a0:	2000a590 	.word	0x2000a590

0800a5a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a5a4:	b40e      	push	{r1, r2, r3}
 800a5a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5aa:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800a69c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800a5ae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a5b0:	f8b9 3000 	ldrh.w	r3, [r9]
 800a5b4:	4293      	cmp	r3, r2
 800a5b6:	b09c      	sub	sp, #112	; 0x70
 800a5b8:	4604      	mov	r4, r0
 800a5ba:	d965      	bls.n	800a688 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800a5bc:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800a6a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800a5c0:	ab26      	add	r3, sp, #152	; 0x98
 800a5c2:	9302      	str	r3, [sp, #8]
 800a5c4:	f8da 3000 	ldr.w	r3, [sl]
 800a5c8:	b92b      	cbnz	r3, 800a5d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800a5ca:	4b30      	ldr	r3, [pc, #192]	; (800a68c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a5cc:	4a30      	ldr	r2, [pc, #192]	; (800a690 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a5ce:	21ae      	movs	r1, #174	; 0xae
 800a5d0:	4830      	ldr	r0, [pc, #192]	; (800a694 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a5d2:	f011 fb5f 	bl	801bc94 <__assert_func>
 800a5d6:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800a6a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a5da:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a5de:	f8d8 3000 	ldr.w	r3, [r8]
 800a5e2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a5e6:	682b      	ldr	r3, [r5, #0]
 800a5e8:	4628      	mov	r0, r5
 800a5ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5ec:	4798      	blx	r3
 800a5ee:	4606      	mov	r6, r0
 800a5f0:	b207      	sxth	r7, r0
 800a5f2:	a803      	add	r0, sp, #12
 800a5f4:	f003 fdbc 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800a5f8:	682b      	ldr	r3, [r5, #0]
 800a5fa:	4628      	mov	r0, r5
 800a5fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a5fe:	4798      	blx	r3
 800a600:	682b      	ldr	r3, [r5, #0]
 800a602:	4683      	mov	fp, r0
 800a604:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a606:	4628      	mov	r0, r5
 800a608:	4798      	blx	r3
 800a60a:	465b      	mov	r3, fp
 800a60c:	9000      	str	r0, [sp, #0]
 800a60e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a610:	9a02      	ldr	r2, [sp, #8]
 800a612:	a803      	add	r0, sp, #12
 800a614:	f003 fe18 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a618:	f8da 3000 	ldr.w	r3, [sl]
 800a61c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a620:	2b00      	cmp	r3, #0
 800a622:	d0d2      	beq.n	800a5ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800a624:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a626:	f8b9 0000 	ldrh.w	r0, [r9]
 800a62a:	4290      	cmp	r0, r2
 800a62c:	d926      	bls.n	800a67c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a62e:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800a632:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a636:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800a63a:	786a      	ldrb	r2, [r5, #1]
 800a63c:	8925      	ldrh	r5, [r4, #8]
 800a63e:	f8d8 3000 	ldr.w	r3, [r8]
 800a642:	eba5 050c 	sub.w	r5, r5, ip
 800a646:	b22d      	sxth	r5, r5
 800a648:	9500      	str	r5, [sp, #0]
 800a64a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a64e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a652:	a803      	add	r0, sp, #12
 800a654:	f001 fca9 	bl	800bfaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a658:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a65c:	18b9      	adds	r1, r7, r2
 800a65e:	2900      	cmp	r1, #0
 800a660:	b203      	sxth	r3, r0
 800a662:	dd0f      	ble.n	800a684 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800a664:	3b01      	subs	r3, #1
 800a666:	fb13 f302 	smulbb	r3, r3, r2
 800a66a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a66e:	b21f      	sxth	r7, r3
 800a670:	4638      	mov	r0, r7
 800a672:	b01c      	add	sp, #112	; 0x70
 800a674:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a678:	b003      	add	sp, #12
 800a67a:	4770      	bx	lr
 800a67c:	4b06      	ldr	r3, [pc, #24]	; (800a698 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a67e:	4a04      	ldr	r2, [pc, #16]	; (800a690 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a680:	21af      	movs	r1, #175	; 0xaf
 800a682:	e7a5      	b.n	800a5d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800a684:	2b00      	cmp	r3, #0
 800a686:	dcf3      	bgt.n	800a670 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a688:	2700      	movs	r7, #0
 800a68a:	e7f1      	b.n	800a670 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a68c:	0801d97c 	.word	0x0801d97c
 800a690:	0801eb46 	.word	0x0801eb46
 800a694:	0801da0a 	.word	0x0801da0a
 800a698:	0801da33 	.word	0x0801da33
 800a69c:	2000a588 	.word	0x2000a588
 800a6a0:	2000a584 	.word	0x2000a584
 800a6a4:	2000a58c 	.word	0x2000a58c

0800a6a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800a6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6ac:	4b6d      	ldr	r3, [pc, #436]	; (800a864 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800a6ae:	460c      	mov	r4, r1
 800a6b0:	881a      	ldrh	r2, [r3, #0]
 800a6b2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800a6b4:	b0b9      	sub	sp, #228	; 0xe4
 800a6b6:	428a      	cmp	r2, r1
 800a6b8:	4681      	mov	r9, r0
 800a6ba:	9302      	str	r3, [sp, #8]
 800a6bc:	d809      	bhi.n	800a6d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800a6be:	2300      	movs	r3, #0
 800a6c0:	f04f 32ff 	mov.w	r2, #4294967295
 800a6c4:	e9c0 3200 	strd	r3, r2, [r0]
 800a6c8:	6083      	str	r3, [r0, #8]
 800a6ca:	4648      	mov	r0, r9
 800a6cc:	b039      	add	sp, #228	; 0xe4
 800a6ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6d2:	4a65      	ldr	r2, [pc, #404]	; (800a868 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800a6d4:	6813      	ldr	r3, [r2, #0]
 800a6d6:	4692      	mov	sl, r2
 800a6d8:	b92b      	cbnz	r3, 800a6e6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800a6da:	4b64      	ldr	r3, [pc, #400]	; (800a86c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800a6dc:	4a64      	ldr	r2, [pc, #400]	; (800a870 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800a6de:	21ae      	movs	r1, #174	; 0xae
 800a6e0:	4864      	ldr	r0, [pc, #400]	; (800a874 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800a6e2:	f011 fad7 	bl	801bc94 <__assert_func>
 800a6e6:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800a6ea:	4b63      	ldr	r3, [pc, #396]	; (800a878 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800a6ec:	f8df b190 	ldr.w	fp, [pc, #400]	; 800a880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800a6f0:	681b      	ldr	r3, [r3, #0]
 800a6f2:	f8db 0000 	ldr.w	r0, [fp]
 800a6f6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a6fa:	f7f8 fa13 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800a6fe:	682b      	ldr	r3, [r5, #0]
 800a700:	4680      	mov	r8, r0
 800a702:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a704:	4628      	mov	r0, r5
 800a706:	4798      	blx	r3
 800a708:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800a70a:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800a70e:	f8cd b00c 	str.w	fp, [sp, #12]
 800a712:	4406      	add	r6, r0
 800a714:	b2b6      	uxth	r6, r6
 800a716:	2f00      	cmp	r7, #0
 800a718:	f040 80b4 	bne.w	800a884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 800a71c:	a806      	add	r0, sp, #24
 800a71e:	f003 fd27 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800a722:	682b      	ldr	r3, [r5, #0]
 800a724:	4628      	mov	r0, r5
 800a726:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a728:	4798      	blx	r3
 800a72a:	682b      	ldr	r3, [r5, #0]
 800a72c:	4683      	mov	fp, r0
 800a72e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a730:	4628      	mov	r0, r5
 800a732:	4798      	blx	r3
 800a734:	6822      	ldr	r2, [r4, #0]
 800a736:	9005      	str	r0, [sp, #20]
 800a738:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800a73a:	4620      	mov	r0, r4
 800a73c:	4790      	blx	r2
 800a73e:	6821      	ldr	r1, [r4, #0]
 800a740:	9004      	str	r0, [sp, #16]
 800a742:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800a746:	4620      	mov	r0, r4
 800a748:	4788      	blx	r1
 800a74a:	9a04      	ldr	r2, [sp, #16]
 800a74c:	9001      	str	r0, [sp, #4]
 800a74e:	9200      	str	r2, [sp, #0]
 800a750:	4641      	mov	r1, r8
 800a752:	9b05      	ldr	r3, [sp, #20]
 800a754:	465a      	mov	r2, fp
 800a756:	a806      	add	r0, sp, #24
 800a758:	f003 fd8b 	bl	800e272 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800a75c:	46b8      	mov	r8, r7
 800a75e:	f8da 3000 	ldr.w	r3, [sl]
 800a762:	2b00      	cmp	r3, #0
 800a764:	d0b9      	beq.n	800a6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800a766:	9902      	ldr	r1, [sp, #8]
 800a768:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a76a:	8809      	ldrh	r1, [r1, #0]
 800a76c:	4291      	cmp	r1, r2
 800a76e:	d803      	bhi.n	800a778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800a770:	4b42      	ldr	r3, [pc, #264]	; (800a87c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 800a772:	4a3f      	ldr	r2, [pc, #252]	; (800a870 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800a774:	21af      	movs	r1, #175	; 0xaf
 800a776:	e7b3      	b.n	800a6e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800a778:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800a77c:	4629      	mov	r1, r5
 800a77e:	785b      	ldrb	r3, [r3, #1]
 800a780:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800a784:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a788:	a806      	add	r0, sp, #24
 800a78a:	f001 f963 	bl	800ba54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800a78e:	4580      	cmp	r8, r0
 800a790:	bfb8      	it	lt
 800a792:	fa0f f880 	sxthlt.w	r8, r0
 800a796:	3701      	adds	r7, #1
 800a798:	a806      	add	r0, sp, #24
 800a79a:	b2bf      	uxth	r7, r7
 800a79c:	f003 fd10 	bl	800e1c0 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800a7a0:	2800      	cmp	r0, #0
 800a7a2:	d0dc      	beq.n	800a75e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800a7a4:	fb16 f607 	smulbb	r6, r6, r7
 800a7a8:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800a7aa:	1bf6      	subs	r6, r6, r7
 800a7ac:	b2b6      	uxth	r6, r6
 800a7ae:	fa0f fb86 	sxth.w	fp, r6
 800a7b2:	f1bb 0f00 	cmp.w	fp, #0
 800a7b6:	dd06      	ble.n	800a7c6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800a7b8:	682b      	ldr	r3, [r5, #0]
 800a7ba:	4628      	mov	r0, r5
 800a7bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a7be:	4798      	blx	r3
 800a7c0:	4430      	add	r0, r6
 800a7c2:	fa0f fb80 	sxth.w	fp, r0
 800a7c6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a7ca:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a7ce:	6823      	ldr	r3, [r4, #0]
 800a7d0:	bf08      	it	eq
 800a7d2:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800a7d6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a7d8:	bf18      	it	ne
 800a7da:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800a7de:	4620      	mov	r0, r4
 800a7e0:	4798      	blx	r3
 800a7e2:	2801      	cmp	r0, #1
 800a7e4:	fa1f f288 	uxth.w	r2, r8
 800a7e8:	f000 80f7 	beq.w	800a9da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800a7ec:	2802      	cmp	r0, #2
 800a7ee:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800a7f2:	f000 80f9 	beq.w	800a9e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 800a7f6:	7a29      	ldrb	r1, [r5, #8]
 800a7f8:	7a68      	ldrb	r0, [r5, #9]
 800a7fa:	b21b      	sxth	r3, r3
 800a7fc:	1a5b      	subs	r3, r3, r1
 800a7fe:	4401      	add	r1, r0
 800a800:	440a      	add	r2, r1
 800a802:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800a806:	b29b      	uxth	r3, r3
 800a808:	b292      	uxth	r2, r2
 800a80a:	2902      	cmp	r1, #2
 800a80c:	b21e      	sxth	r6, r3
 800a80e:	b217      	sxth	r7, r2
 800a810:	f000 80ed 	beq.w	800a9ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 800a814:	2903      	cmp	r1, #3
 800a816:	f000 80f3 	beq.w	800aa00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 800a81a:	2901      	cmp	r1, #1
 800a81c:	f040 80f9 	bne.w	800aa12 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 800a820:	8923      	ldrh	r3, [r4, #8]
 800a822:	463a      	mov	r2, r7
 800a824:	eba3 030b 	sub.w	r3, r3, fp
 800a828:	465f      	mov	r7, fp
 800a82a:	4635      	mov	r5, r6
 800a82c:	4693      	mov	fp, r2
 800a82e:	b21e      	sxth	r6, r3
 800a830:	f8da 3000 	ldr.w	r3, [sl]
 800a834:	2b00      	cmp	r3, #0
 800a836:	f43f af50 	beq.w	800a6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800a83a:	9b02      	ldr	r3, [sp, #8]
 800a83c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a83e:	881b      	ldrh	r3, [r3, #0]
 800a840:	428b      	cmp	r3, r1
 800a842:	d995      	bls.n	800a770 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800a844:	9b03      	ldr	r3, [sp, #12]
 800a846:	6818      	ldr	r0, [r3, #0]
 800a848:	f7f8 f96c 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800a84c:	f8a9 6000 	strh.w	r6, [r9]
 800a850:	f8a9 5002 	strh.w	r5, [r9, #2]
 800a854:	f8a9 7004 	strh.w	r7, [r9, #4]
 800a858:	f8a9 b006 	strh.w	fp, [r9, #6]
 800a85c:	f8c9 0008 	str.w	r0, [r9, #8]
 800a860:	e733      	b.n	800a6ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800a862:	bf00      	nop
 800a864:	2000a588 	.word	0x2000a588
 800a868:	2000a584 	.word	0x2000a584
 800a86c:	0801d97c 	.word	0x0801d97c
 800a870:	0801eb46 	.word	0x0801eb46
 800a874:	0801da0a 	.word	0x0801da0a
 800a878:	2000a58c 	.word	0x2000a58c
 800a87c:	0801da33 	.word	0x0801da33
 800a880:	2000a590 	.word	0x2000a590
 800a884:	af1f      	add	r7, sp, #124	; 0x7c
 800a886:	4638      	mov	r0, r7
 800a888:	f003 fc72 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800a88c:	682b      	ldr	r3, [r5, #0]
 800a88e:	4628      	mov	r0, r5
 800a890:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a892:	4798      	blx	r3
 800a894:	682b      	ldr	r3, [r5, #0]
 800a896:	4683      	mov	fp, r0
 800a898:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a89a:	4628      	mov	r0, r5
 800a89c:	4798      	blx	r3
 800a89e:	6822      	ldr	r2, [r4, #0]
 800a8a0:	9005      	str	r0, [sp, #20]
 800a8a2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800a8a4:	4620      	mov	r0, r4
 800a8a6:	4790      	blx	r2
 800a8a8:	6821      	ldr	r1, [r4, #0]
 800a8aa:	9004      	str	r0, [sp, #16]
 800a8ac:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800a8b0:	4620      	mov	r0, r4
 800a8b2:	4788      	blx	r1
 800a8b4:	9a04      	ldr	r2, [sp, #16]
 800a8b6:	9001      	str	r0, [sp, #4]
 800a8b8:	9200      	str	r2, [sp, #0]
 800a8ba:	9b05      	ldr	r3, [sp, #20]
 800a8bc:	465a      	mov	r2, fp
 800a8be:	4641      	mov	r1, r8
 800a8c0:	4638      	mov	r0, r7
 800a8c2:	f003 fcd6 	bl	800e272 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800a8c6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a8ca:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a8ce:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800a8d2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a8d6:	bf0a      	itet	eq
 800a8d8:	465b      	moveq	r3, fp
 800a8da:	4613      	movne	r3, r2
 800a8dc:	4693      	moveq	fp, r2
 800a8de:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800a8e2:	1a9b      	subs	r3, r3, r2
 800a8e4:	b29a      	uxth	r2, r3
 800a8e6:	f8da 3000 	ldr.w	r3, [sl]
 800a8ea:	2b00      	cmp	r3, #0
 800a8ec:	f43f aef5 	beq.w	800a6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800a8f0:	9802      	ldr	r0, [sp, #8]
 800a8f2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a8f4:	8800      	ldrh	r0, [r0, #0]
 800a8f6:	4288      	cmp	r0, r1
 800a8f8:	f67f af3a 	bls.w	800a770 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800a8fc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800a900:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800a904:	7859      	ldrb	r1, [r3, #1]
 800a906:	9707      	str	r7, [sp, #28]
 800a908:	2300      	movs	r3, #0
 800a90a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800a90e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a912:	f88d 1020 	strb.w	r1, [sp, #32]
 800a916:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a91a:	9509      	str	r5, [sp, #36]	; 0x24
 800a91c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800a920:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800a924:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a928:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800a92c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800a930:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800a934:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800a938:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800a93c:	b350      	cbz	r0, 800a994 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800a93e:	682b      	ldr	r3, [r5, #0]
 800a940:	4628      	mov	r0, r5
 800a942:	695b      	ldr	r3, [r3, #20]
 800a944:	4798      	blx	r3
 800a946:	4680      	mov	r8, r0
 800a948:	b320      	cbz	r0, 800a994 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800a94a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a94c:	6803      	ldr	r3, [r0, #0]
 800a94e:	4641      	mov	r1, r8
 800a950:	68db      	ldr	r3, [r3, #12]
 800a952:	4798      	blx	r3
 800a954:	4607      	mov	r7, r0
 800a956:	b1e8      	cbz	r0, 800a994 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800a958:	7b43      	ldrb	r3, [r0, #13]
 800a95a:	7a82      	ldrb	r2, [r0, #10]
 800a95c:	005b      	lsls	r3, r3, #1
 800a95e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a962:	4313      	orrs	r3, r2
 800a964:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800a968:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800a96c:	2b04      	cmp	r3, #4
 800a96e:	d111      	bne.n	800a994 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800a970:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a972:	6803      	ldr	r3, [r0, #0]
 800a974:	463a      	mov	r2, r7
 800a976:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a978:	4641      	mov	r1, r8
 800a97a:	4798      	blx	r3
 800a97c:	7b7b      	ldrb	r3, [r7, #13]
 800a97e:	005b      	lsls	r3, r3, #1
 800a980:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800a984:	7abb      	ldrb	r3, [r7, #10]
 800a986:	4313      	orrs	r3, r2
 800a988:	4418      	add	r0, r3
 800a98a:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800a98e:	4418      	add	r0, r3
 800a990:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800a994:	b233      	sxth	r3, r6
 800a996:	2700      	movs	r7, #0
 800a998:	005a      	lsls	r2, r3, #1
 800a99a:	46b8      	mov	r8, r7
 800a99c:	455a      	cmp	r2, fp
 800a99e:	bfd4      	ite	le
 800a9a0:	2100      	movle	r1, #0
 800a9a2:	2101      	movgt	r1, #1
 800a9a4:	a806      	add	r0, sp, #24
 800a9a6:	9305      	str	r3, [sp, #20]
 800a9a8:	9204      	str	r2, [sp, #16]
 800a9aa:	f001 fa2f 	bl	800be0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800a9ae:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800a9b2:	4588      	cmp	r8, r1
 800a9b4:	bfb8      	it	lt
 800a9b6:	fa0f f881 	sxthlt.w	r8, r1
 800a9ba:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800a9be:	3701      	adds	r7, #1
 800a9c0:	ebab 0b06 	sub.w	fp, fp, r6
 800a9c4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a9c8:	b2bf      	uxth	r7, r7
 800a9ca:	fa0f fb8b 	sxth.w	fp, fp
 800a9ce:	2900      	cmp	r1, #0
 800a9d0:	f43f aee8 	beq.w	800a7a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800a9d4:	455b      	cmp	r3, fp
 800a9d6:	dbe1      	blt.n	800a99c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 800a9d8:	e6e4      	b.n	800a7a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800a9da:	eba6 0308 	sub.w	r3, r6, r8
 800a9de:	f04f 0802 	mov.w	r8, #2
 800a9e2:	fb93 f3f8 	sdiv	r3, r3, r8
 800a9e6:	e706      	b.n	800a7f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800a9e8:	4413      	add	r3, r2
 800a9ea:	1af3      	subs	r3, r6, r3
 800a9ec:	e703      	b.n	800a7f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800a9ee:	8926      	ldrh	r6, [r4, #8]
 800a9f0:	8965      	ldrh	r5, [r4, #10]
 800a9f2:	1ab2      	subs	r2, r6, r2
 800a9f4:	1ad3      	subs	r3, r2, r3
 800a9f6:	eba5 050b 	sub.w	r5, r5, fp
 800a9fa:	b21e      	sxth	r6, r3
 800a9fc:	b22d      	sxth	r5, r5
 800a9fe:	e717      	b.n	800a830 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800aa00:	8965      	ldrh	r5, [r4, #10]
 800aa02:	1aaa      	subs	r2, r5, r2
 800aa04:	1ad3      	subs	r3, r2, r3
 800aa06:	b21d      	sxth	r5, r3
 800aa08:	463b      	mov	r3, r7
 800aa0a:	2600      	movs	r6, #0
 800aa0c:	465f      	mov	r7, fp
 800aa0e:	469b      	mov	fp, r3
 800aa10:	e70e      	b.n	800a830 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800aa12:	2500      	movs	r5, #0
 800aa14:	e70c      	b.n	800a830 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800aa16:	bf00      	nop

0800aa18 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800aa18:	b508      	push	{r3, lr}
 800aa1a:	4b0b      	ldr	r3, [pc, #44]	; (800aa48 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800aa1c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aa1e:	881b      	ldrh	r3, [r3, #0]
 800aa20:	4293      	cmp	r3, r2
 800aa22:	d90e      	bls.n	800aa42 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800aa24:	4b09      	ldr	r3, [pc, #36]	; (800aa4c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800aa26:	681b      	ldr	r3, [r3, #0]
 800aa28:	b92b      	cbnz	r3, 800aa36 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800aa2a:	4b09      	ldr	r3, [pc, #36]	; (800aa50 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800aa2c:	4a09      	ldr	r2, [pc, #36]	; (800aa54 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800aa2e:	480a      	ldr	r0, [pc, #40]	; (800aa58 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800aa30:	21ae      	movs	r1, #174	; 0xae
 800aa32:	f011 f92f 	bl	801bc94 <__assert_func>
 800aa36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800aa3a:	7858      	ldrb	r0, [r3, #1]
 800aa3c:	f000 0003 	and.w	r0, r0, #3
 800aa40:	bd08      	pop	{r3, pc}
 800aa42:	2000      	movs	r0, #0
 800aa44:	e7fc      	b.n	800aa40 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800aa46:	bf00      	nop
 800aa48:	2000a588 	.word	0x2000a588
 800aa4c:	2000a584 	.word	0x2000a584
 800aa50:	0801d97c 	.word	0x0801d97c
 800aa54:	0801eb46 	.word	0x0801eb46
 800aa58:	0801da0a 	.word	0x0801da0a

0800aa5c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800aa5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa60:	4b15      	ldr	r3, [pc, #84]	; (800aab8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800aa62:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aa64:	881b      	ldrh	r3, [r3, #0]
 800aa66:	428b      	cmp	r3, r1
 800aa68:	4604      	mov	r4, r0
 800aa6a:	d921      	bls.n	800aab0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800aa6c:	6803      	ldr	r3, [r0, #0]
 800aa6e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800aa70:	4b12      	ldr	r3, [pc, #72]	; (800aabc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	b92b      	cbnz	r3, 800aa82 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800aa76:	4b12      	ldr	r3, [pc, #72]	; (800aac0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800aa78:	4a12      	ldr	r2, [pc, #72]	; (800aac4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800aa7a:	4813      	ldr	r0, [pc, #76]	; (800aac8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800aa7c:	21ae      	movs	r1, #174	; 0xae
 800aa7e:	f011 f909 	bl	801bc94 <__assert_func>
 800aa82:	4b12      	ldr	r3, [pc, #72]	; (800aacc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800aa84:	6818      	ldr	r0, [r3, #0]
 800aa86:	f7f8 f84d 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800aa8a:	6823      	ldr	r3, [r4, #0]
 800aa8c:	4606      	mov	r6, r0
 800aa8e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800aa90:	4620      	mov	r0, r4
 800aa92:	4798      	blx	r3
 800aa94:	6823      	ldr	r3, [r4, #0]
 800aa96:	4607      	mov	r7, r0
 800aa98:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800aa9c:	4620      	mov	r0, r4
 800aa9e:	4798      	blx	r3
 800aaa0:	463a      	mov	r2, r7
 800aaa2:	4603      	mov	r3, r0
 800aaa4:	4631      	mov	r1, r6
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	46ac      	mov	ip, r5
 800aaaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800aaae:	4760      	bx	ip
 800aab0:	2000      	movs	r0, #0
 800aab2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aab6:	bf00      	nop
 800aab8:	2000a588 	.word	0x2000a588
 800aabc:	2000a584 	.word	0x2000a584
 800aac0:	0801d97c 	.word	0x0801d97c
 800aac4:	0801eb46 	.word	0x0801eb46
 800aac8:	0801da0a 	.word	0x0801da0a
 800aacc:	2000a590 	.word	0x2000a590

0800aad0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800aad0:	b570      	push	{r4, r5, r6, lr}
 800aad2:	6803      	ldr	r3, [r0, #0]
 800aad4:	4604      	mov	r4, r0
 800aad6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aad8:	4615      	mov	r5, r2
 800aada:	4798      	blx	r3
 800aadc:	6823      	ldr	r3, [r4, #0]
 800aade:	4629      	mov	r1, r5
 800aae0:	4620      	mov	r0, r4
 800aae2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aae4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aae8:	4718      	bx	r3
	...

0800aaec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aaec:	b538      	push	{r3, r4, r5, lr}
 800aaee:	4b0e      	ldr	r3, [pc, #56]	; (800ab28 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800aaf0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aaf2:	881b      	ldrh	r3, [r3, #0]
 800aaf4:	429a      	cmp	r2, r3
 800aaf6:	4604      	mov	r4, r0
 800aaf8:	d214      	bcs.n	800ab24 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800aafa:	6803      	ldr	r3, [r0, #0]
 800aafc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800aafe:	4798      	blx	r3
 800ab00:	6823      	ldr	r3, [r4, #0]
 800ab02:	4605      	mov	r5, r0
 800ab04:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ab06:	4620      	mov	r0, r4
 800ab08:	4798      	blx	r3
 800ab0a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ab0e:	b22d      	sxth	r5, r5
 800ab10:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ab14:	4601      	mov	r1, r0
 800ab16:	bf06      	itte	eq
 800ab18:	4602      	moveq	r2, r0
 800ab1a:	4629      	moveq	r1, r5
 800ab1c:	462a      	movne	r2, r5
 800ab1e:	4620      	mov	r0, r4
 800ab20:	f7ff ffd6 	bl	800aad0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ab24:	bd38      	pop	{r3, r4, r5, pc}
 800ab26:	bf00      	nop
 800ab28:	2000a588 	.word	0x2000a588

0800ab2c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ab2c:	b530      	push	{r4, r5, lr}
 800ab2e:	888b      	ldrh	r3, [r1, #4]
 800ab30:	8583      	strh	r3, [r0, #44]	; 0x2c
 800ab32:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ab36:	b085      	sub	sp, #20
 800ab38:	4604      	mov	r4, r0
 800ab3a:	b923      	cbnz	r3, 800ab46 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ab3c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ab40:	b90b      	cbnz	r3, 800ab46 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ab42:	f7ff ffd3 	bl	800aaec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ab46:	6823      	ldr	r3, [r4, #0]
 800ab48:	466d      	mov	r5, sp
 800ab4a:	4621      	mov	r1, r4
 800ab4c:	4628      	mov	r0, r5
 800ab4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ab52:	4798      	blx	r3
 800ab54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800ab58:	343c      	adds	r4, #60	; 0x3c
 800ab5a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800ab5e:	b005      	add	sp, #20
 800ab60:	bd30      	pop	{r4, r5, pc}

0800ab62 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ab62:	2300      	movs	r3, #0
 800ab64:	8083      	strh	r3, [r0, #4]
 800ab66:	80c3      	strh	r3, [r0, #6]
 800ab68:	8003      	strh	r3, [r0, #0]
 800ab6a:	8043      	strh	r3, [r0, #2]
 800ab6c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ab70:	2bff      	cmp	r3, #255	; 0xff
 800ab72:	bf01      	itttt	eq
 800ab74:	890b      	ldrheq	r3, [r1, #8]
 800ab76:	8083      	strheq	r3, [r0, #4]
 800ab78:	894b      	ldrheq	r3, [r1, #10]
 800ab7a:	80c3      	strheq	r3, [r0, #6]
 800ab7c:	4770      	bx	lr
	...

0800ab80 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ab80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ab82:	4604      	mov	r4, r0
 800ab84:	6808      	ldr	r0, [r1, #0]
 800ab86:	6849      	ldr	r1, [r1, #4]
 800ab88:	466b      	mov	r3, sp
 800ab8a:	c303      	stmia	r3!, {r0, r1}
 800ab8c:	6823      	ldr	r3, [r4, #0]
 800ab8e:	4669      	mov	r1, sp
 800ab90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab92:	4620      	mov	r0, r4
 800ab94:	4798      	blx	r3
 800ab96:	4b08      	ldr	r3, [pc, #32]	; (800abb8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ab98:	681b      	ldr	r3, [r3, #0]
 800ab9a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ab9e:	b10a      	cbz	r2, 800aba4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800aba0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800aba2:	b900      	cbnz	r0, 800aba6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800aba4:	6898      	ldr	r0, [r3, #8]
 800aba6:	6803      	ldr	r3, [r0, #0]
 800aba8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800abaa:	6a1d      	ldr	r5, [r3, #32]
 800abac:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800abb0:	4669      	mov	r1, sp
 800abb2:	47a8      	blx	r5
 800abb4:	b003      	add	sp, #12
 800abb6:	bd30      	pop	{r4, r5, pc}
 800abb8:	2000a534 	.word	0x2000a534

0800abbc <_ZN8touchgfx3BoxD1Ev>:
 800abbc:	4770      	bx	lr

0800abbe <_ZN8touchgfx3BoxD0Ev>:
 800abbe:	b510      	push	{r4, lr}
 800abc0:	212c      	movs	r1, #44	; 0x2c
 800abc2:	4604      	mov	r4, r0
 800abc4:	f011 f838 	bl	801bc38 <_ZdlPvj>
 800abc8:	4620      	mov	r0, r4
 800abca:	bd10      	pop	{r4, pc}

0800abcc <_ZNK8touchgfx3Box17invalidateContentEv>:
 800abcc:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800abd0:	b12a      	cbz	r2, 800abde <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800abd2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800abd6:	b112      	cbz	r2, 800abde <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800abd8:	6803      	ldr	r3, [r0, #0]
 800abda:	695b      	ldr	r3, [r3, #20]
 800abdc:	4718      	bx	r3
 800abde:	4770      	bx	lr

0800abe0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800abe0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800abe4:	4770      	bx	lr

0800abe6 <_ZN8touchgfx6ButtonD1Ev>:
 800abe6:	4770      	bx	lr

0800abe8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800abe8:	b570      	push	{r4, r5, r6, lr}
 800abea:	880b      	ldrh	r3, [r1, #0]
 800abec:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800abee:	4605      	mov	r5, r0
 800abf0:	8813      	ldrh	r3, [r2, #0]
 800abf2:	f825 3f30 	strh.w	r3, [r5, #48]!
 800abf6:	4604      	mov	r4, r0
 800abf8:	4628      	mov	r0, r5
 800abfa:	f004 fee9 	bl	800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abfe:	4606      	mov	r6, r0
 800ac00:	4628      	mov	r0, r5
 800ac02:	f004 ff29 	bl	800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ac06:	6823      	ldr	r3, [r4, #0]
 800ac08:	4605      	mov	r5, r0
 800ac0a:	b231      	sxth	r1, r6
 800ac0c:	4620      	mov	r0, r4
 800ac0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ac10:	4798      	blx	r3
 800ac12:	6823      	ldr	r3, [r4, #0]
 800ac14:	b229      	sxth	r1, r5
 800ac16:	4620      	mov	r0, r4
 800ac18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ac1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac1e:	4718      	bx	r3

0800ac20 <_ZN8touchgfx6ButtonD0Ev>:
 800ac20:	b510      	push	{r4, lr}
 800ac22:	2134      	movs	r1, #52	; 0x34
 800ac24:	4604      	mov	r4, r0
 800ac26:	f011 f807 	bl	801bc38 <_ZdlPvj>
 800ac2a:	4620      	mov	r0, r4
 800ac2c:	bd10      	pop	{r4, pc}

0800ac2e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800ac2e:	b510      	push	{r4, lr}
 800ac30:	4604      	mov	r4, r0
 800ac32:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ac34:	b150      	cbz	r0, 800ac4c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ac36:	6803      	ldr	r3, [r0, #0]
 800ac38:	68db      	ldr	r3, [r3, #12]
 800ac3a:	4798      	blx	r3
 800ac3c:	b130      	cbz	r0, 800ac4c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ac3e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ac40:	6803      	ldr	r3, [r0, #0]
 800ac42:	4621      	mov	r1, r4
 800ac44:	689b      	ldr	r3, [r3, #8]
 800ac46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ac4a:	4718      	bx	r3
 800ac4c:	bd10      	pop	{r4, pc}

0800ac4e <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ac4e:	b510      	push	{r4, lr}
 800ac50:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ac54:	2bff      	cmp	r3, #255	; 0xff
 800ac56:	4604      	mov	r4, r0
 800ac58:	d006      	beq.n	800ac68 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ac5a:	2300      	movs	r3, #0
 800ac5c:	8003      	strh	r3, [r0, #0]
 800ac5e:	8043      	strh	r3, [r0, #2]
 800ac60:	8083      	strh	r3, [r0, #4]
 800ac62:	80c3      	strh	r3, [r0, #6]
 800ac64:	4620      	mov	r0, r4
 800ac66:	bd10      	pop	{r4, pc}
 800ac68:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800ac6c:	b11b      	cbz	r3, 800ac76 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800ac6e:	3130      	adds	r1, #48	; 0x30
 800ac70:	f004 ff36 	bl	800fae0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ac74:	e7f6      	b.n	800ac64 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ac76:	312e      	adds	r1, #46	; 0x2e
 800ac78:	e7fa      	b.n	800ac70 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800ac7c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ac7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac80:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ac84:	b08a      	sub	sp, #40	; 0x28
 800ac86:	4604      	mov	r4, r0
 800ac88:	4688      	mov	r8, r1
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d044      	beq.n	800ad18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800ac8e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ac90:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ac94:	a805      	add	r0, sp, #20
 800ac96:	f004 fe9b 	bl	800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ac9a:	4605      	mov	r5, r0
 800ac9c:	b206      	sxth	r6, r0
 800ac9e:	a805      	add	r0, sp, #20
 800aca0:	f004 feda 	bl	800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aca4:	f9b8 2000 	ldrsh.w	r2, [r8]
 800aca8:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800acac:	4417      	add	r7, r2
 800acae:	b2bf      	uxth	r7, r7
 800acb0:	2300      	movs	r3, #0
 800acb2:	fa0f fe87 	sxth.w	lr, r7
 800acb6:	459e      	cmp	lr, r3
 800acb8:	fa0f fc80 	sxth.w	ip, r0
 800acbc:	9306      	str	r3, [sp, #24]
 800acbe:	dd2d      	ble.n	800ad1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800acc0:	4296      	cmp	r6, r2
 800acc2:	dd2b      	ble.n	800ad1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800acc4:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800acc8:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800accc:	4419      	add	r1, r3
 800acce:	b289      	uxth	r1, r1
 800acd0:	fa0f f881 	sxth.w	r8, r1
 800acd4:	f1b8 0f00 	cmp.w	r8, #0
 800acd8:	dd20      	ble.n	800ad1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800acda:	459c      	cmp	ip, r3
 800acdc:	dd1e      	ble.n	800ad1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800acde:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800ace2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ace6:	4576      	cmp	r6, lr
 800ace8:	bfa8      	it	ge
 800acea:	463d      	movge	r5, r7
 800acec:	45c4      	cmp	ip, r8
 800acee:	bfa8      	it	ge
 800acf0:	4608      	movge	r0, r1
 800acf2:	1aad      	subs	r5, r5, r2
 800acf4:	1ac0      	subs	r0, r0, r3
 800acf6:	f8ad 501c 	strh.w	r5, [sp, #28]
 800acfa:	f8ad 001e 	strh.w	r0, [sp, #30]
 800acfe:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ad02:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad06:	4b1f      	ldr	r3, [pc, #124]	; (800ad84 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800ad08:	681b      	ldr	r3, [r3, #0]
 800ad0a:	b953      	cbnz	r3, 800ad22 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800ad0c:	4b1e      	ldr	r3, [pc, #120]	; (800ad88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800ad0e:	4a1f      	ldr	r2, [pc, #124]	; (800ad8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800ad10:	481f      	ldr	r0, [pc, #124]	; (800ad90 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800ad12:	2187      	movs	r1, #135	; 0x87
 800ad14:	f010 ffbe 	bl	801bc94 <__assert_func>
 800ad18:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ad1a:	e7b9      	b.n	800ac90 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800ad1c:	2300      	movs	r3, #0
 800ad1e:	9307      	str	r3, [sp, #28]
 800ad20:	e7f1      	b.n	800ad06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800ad22:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ad26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ad2a:	429a      	cmp	r2, r3
 800ad2c:	d026      	beq.n	800ad7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ad2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ad32:	2b00      	cmp	r3, #0
 800ad34:	dd22      	ble.n	800ad7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ad36:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	dd1e      	ble.n	800ad7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ad3e:	2300      	movs	r3, #0
 800ad40:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ad44:	6823      	ldr	r3, [r4, #0]
 800ad46:	a908      	add	r1, sp, #32
 800ad48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad4a:	4620      	mov	r0, r4
 800ad4c:	4798      	blx	r3
 800ad4e:	4b11      	ldr	r3, [pc, #68]	; (800ad94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ad56:	b10a      	cbz	r2, 800ad5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ad58:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ad5a:	b900      	cbnz	r0, 800ad5e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800ad5c:	6898      	ldr	r0, [r3, #8]
 800ad5e:	6801      	ldr	r1, [r0, #0]
 800ad60:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ad64:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ad68:	2501      	movs	r5, #1
 800ad6a:	9502      	str	r5, [sp, #8]
 800ad6c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800ad70:	9401      	str	r4, [sp, #4]
 800ad72:	ac06      	add	r4, sp, #24
 800ad74:	9400      	str	r4, [sp, #0]
 800ad76:	688c      	ldr	r4, [r1, #8]
 800ad78:	a905      	add	r1, sp, #20
 800ad7a:	47a0      	blx	r4
 800ad7c:	b00a      	add	sp, #40	; 0x28
 800ad7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad82:	bf00      	nop
 800ad84:	2000a5bc 	.word	0x2000a5bc
 800ad88:	0801ebdc 	.word	0x0801ebdc
 800ad8c:	0801ecb4 	.word	0x0801ecb4
 800ad90:	0801ec18 	.word	0x0801ec18
 800ad94:	2000a534 	.word	0x2000a534

0800ad98 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800ad98:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800ad9c:	b12a      	cbz	r2, 800adaa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800ad9e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ada2:	b112      	cbz	r2, 800adaa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800ada4:	6803      	ldr	r3, [r0, #0]
 800ada6:	695b      	ldr	r3, [r3, #20]
 800ada8:	4718      	bx	r3
 800adaa:	4770      	bx	lr

0800adac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800adac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800adb0:	4d38      	ldr	r5, [pc, #224]	; (800ae94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 800adb2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800adb4:	882b      	ldrh	r3, [r5, #0]
 800adb6:	4293      	cmp	r3, r2
 800adb8:	b08c      	sub	sp, #48	; 0x30
 800adba:	4604      	mov	r4, r0
 800adbc:	4689      	mov	r9, r1
 800adbe:	d965      	bls.n	800ae8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800adc0:	4e35      	ldr	r6, [pc, #212]	; (800ae98 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 800adc2:	6833      	ldr	r3, [r6, #0]
 800adc4:	b92b      	cbnz	r3, 800add2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 800adc6:	4b35      	ldr	r3, [pc, #212]	; (800ae9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 800adc8:	4a35      	ldr	r2, [pc, #212]	; (800aea0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800adca:	21ae      	movs	r1, #174	; 0xae
 800adcc:	4835      	ldr	r0, [pc, #212]	; (800aea4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 800adce:	f010 ff61 	bl	801bc94 <__assert_func>
 800add2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800add6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800adda:	4b33      	ldr	r3, [pc, #204]	; (800aea8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 800addc:	681b      	ldr	r3, [r3, #0]
 800adde:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ade2:	2a00      	cmp	r2, #0
 800ade4:	d052      	beq.n	800ae8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800ade6:	784b      	ldrb	r3, [r1, #1]
 800ade8:	9207      	str	r2, [sp, #28]
 800adea:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800adee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800adf2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800adf6:	4b2d      	ldr	r3, [pc, #180]	; (800aeac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 800adf8:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800adfc:	681b      	ldr	r3, [r3, #0]
 800adfe:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800ae02:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ae06:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 800ae0a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800ae0e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ae12:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ae14:	f88d a020 	strb.w	sl, [sp, #32]
 800ae18:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 800ae1c:	9009      	str	r0, [sp, #36]	; 0x24
 800ae1e:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800ae22:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800ae26:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800ae2a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800ae2e:	b10a      	cbz	r2, 800ae34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 800ae30:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800ae32:	b907      	cbnz	r7, 800ae36 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 800ae34:	689f      	ldr	r7, [r3, #8]
 800ae36:	f10d 0814 	add.w	r8, sp, #20
 800ae3a:	4621      	mov	r1, r4
 800ae3c:	4640      	mov	r0, r8
 800ae3e:	f002 fddf 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae42:	6833      	ldr	r3, [r6, #0]
 800ae44:	2b00      	cmp	r3, #0
 800ae46:	d0be      	beq.n	800adc6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 800ae48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ae4a:	882b      	ldrh	r3, [r5, #0]
 800ae4c:	428b      	cmp	r3, r1
 800ae4e:	d803      	bhi.n	800ae58 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 800ae50:	4b17      	ldr	r3, [pc, #92]	; (800aeb0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 800ae52:	4a13      	ldr	r2, [pc, #76]	; (800aea0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800ae54:	21af      	movs	r1, #175	; 0xaf
 800ae56:	e7b9      	b.n	800adcc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 800ae58:	4b16      	ldr	r3, [pc, #88]	; (800aeb4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 800ae5a:	6818      	ldr	r0, [r3, #0]
 800ae5c:	f7f7 fe62 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800ae60:	6823      	ldr	r3, [r4, #0]
 800ae62:	4605      	mov	r5, r0
 800ae64:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ae66:	4620      	mov	r0, r4
 800ae68:	4798      	blx	r3
 800ae6a:	6823      	ldr	r3, [r4, #0]
 800ae6c:	4606      	mov	r6, r0
 800ae6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ae72:	4620      	mov	r0, r4
 800ae74:	4798      	blx	r3
 800ae76:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800ae7a:	ab07      	add	r3, sp, #28
 800ae7c:	9300      	str	r3, [sp, #0]
 800ae7e:	9501      	str	r5, [sp, #4]
 800ae80:	464b      	mov	r3, r9
 800ae82:	e898 0006 	ldmia.w	r8, {r1, r2}
 800ae86:	4638      	mov	r0, r7
 800ae88:	f7f7 fdfe 	bl	8002a88 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ae8c:	b00c      	add	sp, #48	; 0x30
 800ae8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ae92:	bf00      	nop
 800ae94:	2000a588 	.word	0x2000a588
 800ae98:	2000a584 	.word	0x2000a584
 800ae9c:	0801d97c 	.word	0x0801d97c
 800aea0:	0801ece7 	.word	0x0801ece7
 800aea4:	0801da0a 	.word	0x0801da0a
 800aea8:	2000a58c 	.word	0x2000a58c
 800aeac:	2000a534 	.word	0x2000a534
 800aeb0:	0801da33 	.word	0x0801da33
 800aeb4:	2000a590 	.word	0x2000a590

0800aeb8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800aeb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aebc:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800aec0:	b0a0      	sub	sp, #128	; 0x80
 800aec2:	4604      	mov	r4, r0
 800aec4:	b193      	cbz	r3, 800aeec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800aec6:	4b33      	ldr	r3, [pc, #204]	; (800af94 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800aec8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aeca:	881b      	ldrh	r3, [r3, #0]
 800aecc:	428b      	cmp	r3, r1
 800aece:	d90d      	bls.n	800aeec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800aed0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800aed4:	2b00      	cmp	r3, #0
 800aed6:	dd09      	ble.n	800aeec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800aed8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800aedc:	2b00      	cmp	r3, #0
 800aede:	dd05      	ble.n	800aeec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800aee0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800aee4:	b12b      	cbz	r3, 800aef2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800aee6:	6803      	ldr	r3, [r0, #0]
 800aee8:	695b      	ldr	r3, [r3, #20]
 800aeea:	4798      	blx	r3
 800aeec:	b020      	add	sp, #128	; 0x80
 800aeee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aef2:	4b29      	ldr	r3, [pc, #164]	; (800af98 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 800aef4:	681b      	ldr	r3, [r3, #0]
 800aef6:	b92b      	cbnz	r3, 800af04 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 800aef8:	4b28      	ldr	r3, [pc, #160]	; (800af9c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 800aefa:	4a29      	ldr	r2, [pc, #164]	; (800afa0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 800aefc:	4829      	ldr	r0, [pc, #164]	; (800afa4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 800aefe:	21ae      	movs	r1, #174	; 0xae
 800af00:	f010 fec8 	bl	801bc94 <__assert_func>
 800af04:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800af08:	4b27      	ldr	r3, [pc, #156]	; (800afa8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 800af0a:	681b      	ldr	r3, [r3, #0]
 800af0c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800af10:	4b26      	ldr	r3, [pc, #152]	; (800afac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 800af12:	6818      	ldr	r0, [r3, #0]
 800af14:	f7f7 fe06 	bl	8002b24 <_ZNK8touchgfx5Texts7getTextEt>
 800af18:	4606      	mov	r6, r0
 800af1a:	a807      	add	r0, sp, #28
 800af1c:	f003 f928 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800af20:	682b      	ldr	r3, [r5, #0]
 800af22:	4628      	mov	r0, r5
 800af24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800af26:	4798      	blx	r3
 800af28:	682b      	ldr	r3, [r5, #0]
 800af2a:	4607      	mov	r7, r0
 800af2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800af2e:	4628      	mov	r0, r5
 800af30:	4798      	blx	r3
 800af32:	6823      	ldr	r3, [r4, #0]
 800af34:	4605      	mov	r5, r0
 800af36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af38:	4620      	mov	r0, r4
 800af3a:	4798      	blx	r3
 800af3c:	6823      	ldr	r3, [r4, #0]
 800af3e:	4680      	mov	r8, r0
 800af40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800af44:	4620      	mov	r0, r4
 800af46:	4798      	blx	r3
 800af48:	462b      	mov	r3, r5
 800af4a:	e9cd 8000 	strd	r8, r0, [sp]
 800af4e:	463a      	mov	r2, r7
 800af50:	a807      	add	r0, sp, #28
 800af52:	4631      	mov	r1, r6
 800af54:	f003 f98d 	bl	800e272 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800af58:	a807      	add	r0, sp, #28
 800af5a:	f003 fd7f 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af5e:	280a      	cmp	r0, #10
 800af60:	d103      	bne.n	800af6a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 800af62:	6823      	ldr	r3, [r4, #0]
 800af64:	4620      	mov	r0, r4
 800af66:	695b      	ldr	r3, [r3, #20]
 800af68:	e7bf      	b.n	800aeea <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800af6a:	a807      	add	r0, sp, #28
 800af6c:	f003 fd76 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af70:	2800      	cmp	r0, #0
 800af72:	d1f4      	bne.n	800af5e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 800af74:	ad04      	add	r5, sp, #16
 800af76:	4621      	mov	r1, r4
 800af78:	4628      	mov	r0, r5
 800af7a:	f7ff fb95 	bl	800a6a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800af7e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800af82:	6822      	ldr	r2, [r4, #0]
 800af84:	ab02      	add	r3, sp, #8
 800af86:	e883 0003 	stmia.w	r3, {r0, r1}
 800af8a:	6912      	ldr	r2, [r2, #16]
 800af8c:	4619      	mov	r1, r3
 800af8e:	4620      	mov	r0, r4
 800af90:	4790      	blx	r2
 800af92:	e7ab      	b.n	800aeec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800af94:	2000a588 	.word	0x2000a588
 800af98:	2000a584 	.word	0x2000a584
 800af9c:	0801d97c 	.word	0x0801d97c
 800afa0:	0801ece7 	.word	0x0801ece7
 800afa4:	0801da0a 	.word	0x0801da0a
 800afa8:	2000a58c 	.word	0x2000a58c
 800afac:	2000a590 	.word	0x2000a590

0800afb0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800afb0:	b510      	push	{r4, lr}
 800afb2:	6803      	ldr	r3, [r0, #0]
 800afb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afb6:	460c      	mov	r4, r1
 800afb8:	4798      	blx	r3
 800afba:	1b03      	subs	r3, r0, r4
 800afbc:	4258      	negs	r0, r3
 800afbe:	4158      	adcs	r0, r3
 800afc0:	bd10      	pop	{r4, pc}
	...

0800afc4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800afc4:	4b01      	ldr	r3, [pc, #4]	; (800afcc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800afc6:	6019      	str	r1, [r3, #0]
 800afc8:	4770      	bx	lr
 800afca:	bf00      	nop
 800afcc:	2000a53c 	.word	0x2000a53c

0800afd0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800afd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800afd4:	4696      	mov	lr, r2
 800afd6:	4605      	mov	r5, r0
 800afd8:	4614      	mov	r4, r2
 800afda:	460e      	mov	r6, r1
 800afdc:	461f      	mov	r7, r3
 800afde:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800afe2:	b097      	sub	sp, #92	; 0x5c
 800afe4:	f10d 0c1c 	add.w	ip, sp, #28
 800afe8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800afec:	f8de 3000 	ldr.w	r3, [lr]
 800aff0:	f8cc 3000 	str.w	r3, [ip]
 800aff4:	f104 0e14 	add.w	lr, r4, #20
 800aff8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800affc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b000:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b004:	f8de 3000 	ldr.w	r3, [lr]
 800b008:	f8cc 3000 	str.w	r3, [ip]
 800b00c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b010:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b014:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b018:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b01c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b020:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b024:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b028:	f8de 3000 	ldr.w	r3, [lr]
 800b02c:	f8cc 3000 	str.w	r3, [ip]
 800b030:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b032:	682b      	ldr	r3, [r5, #0]
 800b034:	9201      	str	r2, [sp, #4]
 800b036:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b03a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b03c:	9200      	str	r2, [sp, #0]
 800b03e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b042:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800b046:	aa07      	add	r2, sp, #28
 800b048:	463b      	mov	r3, r7
 800b04a:	4631      	mov	r1, r6
 800b04c:	4628      	mov	r0, r5
 800b04e:	47d8      	blx	fp
 800b050:	46a6      	mov	lr, r4
 800b052:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b056:	f10d 0c1c 	add.w	ip, sp, #28
 800b05a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b05e:	f8de 3000 	ldr.w	r3, [lr]
 800b062:	f8cc 3000 	str.w	r3, [ip]
 800b066:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b06a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b06e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b072:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b076:	343c      	adds	r4, #60	; 0x3c
 800b078:	f8de 3000 	ldr.w	r3, [lr]
 800b07c:	f8cc 3000 	str.w	r3, [ip]
 800b080:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b082:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b086:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b08a:	6823      	ldr	r3, [r4, #0]
 800b08c:	f8cc 3000 	str.w	r3, [ip]
 800b090:	682b      	ldr	r3, [r5, #0]
 800b092:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b096:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b098:	9201      	str	r2, [sp, #4]
 800b09a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b09c:	9200      	str	r2, [sp, #0]
 800b09e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b0a2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800b0a4:	aa07      	add	r2, sp, #28
 800b0a6:	463b      	mov	r3, r7
 800b0a8:	4631      	mov	r1, r6
 800b0aa:	4628      	mov	r0, r5
 800b0ac:	47a0      	blx	r4
 800b0ae:	b017      	add	sp, #92	; 0x5c
 800b0b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b0b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0b8:	b08d      	sub	sp, #52	; 0x34
 800b0ba:	4688      	mov	r8, r1
 800b0bc:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b0be:	f8d3 c000 	ldr.w	ip, [r3]
 800b0c2:	680f      	ldr	r7, [r1, #0]
 800b0c4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b0c8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b0cc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b0d0:	edd3 6a07 	vldr	s13, [r3, #28]
 800b0d4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b0d6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b0da:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b0de:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b0e2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b0e6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b0ea:	eba7 070c 	sub.w	r7, r7, ip
 800b0ee:	42bc      	cmp	r4, r7
 800b0f0:	bfa8      	it	ge
 800b0f2:	463c      	movge	r4, r7
 800b0f4:	ee07 4a90 	vmov	s15, r4
 800b0f8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b0fc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b100:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b104:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b108:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b10c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b110:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b114:	eb09 0e0c 	add.w	lr, r9, ip
 800b118:	4571      	cmp	r1, lr
 800b11a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b11e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b122:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b126:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b12a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b12e:	f340 808d 	ble.w	800b24c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b132:	eba1 060e 	sub.w	r6, r1, lr
 800b136:	fb96 f5f4 	sdiv	r5, r6, r4
 800b13a:	ee07 5a10 	vmov	s14, r5
 800b13e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b142:	2d00      	cmp	r5, #0
 800b144:	fb04 6615 	mls	r6, r4, r5, r6
 800b148:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b14c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b150:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b154:	dd13      	ble.n	800b17e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b156:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b15a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b15e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b166:	bf18      	it	ne
 800b168:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b16c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b170:	bf08      	it	eq
 800b172:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b176:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b17a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b17e:	fb05 f204 	mul.w	r2, r5, r4
 800b182:	1abf      	subs	r7, r7, r2
 800b184:	4494      	add	ip, r2
 800b186:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b18a:	4411      	add	r1, r2
 800b18c:	eb09 020c 	add.w	r2, r9, ip
 800b190:	443a      	add	r2, r7
 800b192:	b209      	sxth	r1, r1
 800b194:	428a      	cmp	r2, r1
 800b196:	bfc4      	itt	gt
 800b198:	eba1 0209 	subgt.w	r2, r1, r9
 800b19c:	eba2 070c 	subgt.w	r7, r2, ip
 800b1a0:	2f00      	cmp	r7, #0
 800b1a2:	dd50      	ble.n	800b246 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b1a4:	fb97 f1f4 	sdiv	r1, r7, r4
 800b1a8:	fb04 7211 	mls	r2, r4, r1, r7
 800b1ac:	b90a      	cbnz	r2, 800b1b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b1ae:	3901      	subs	r1, #1
 800b1b0:	4622      	mov	r2, r4
 800b1b2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b1b6:	6840      	ldr	r0, [r0, #4]
 800b1b8:	900b      	str	r0, [sp, #44]	; 0x2c
 800b1ba:	f8d0 a000 	ldr.w	sl, [r0]
 800b1be:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b1c0:	9008      	str	r0, [sp, #32]
 800b1c2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b1c6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b1c8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b1cc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b1d0:	695b      	ldr	r3, [r3, #20]
 800b1d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b1d4:	445b      	add	r3, fp
 800b1d6:	eef0 6a42 	vmov.f32	s13, s4
 800b1da:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b1de:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b1e2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b1e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b1ea:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b1ee:	9307      	str	r3, [sp, #28]
 800b1f0:	ee17 7a90 	vmov	r7, s15
 800b1f4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b1f8:	eeb0 7a61 	vmov.f32	s14, s3
 800b1fc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b200:	ee16 3a90 	vmov	r3, s13
 800b204:	fb97 f7f4 	sdiv	r7, r7, r4
 800b208:	ee17 ca90 	vmov	ip, s15
 800b20c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b210:	fb9c fcf4 	sdiv	ip, ip, r4
 800b214:	fb0c 3306 	mla	r3, ip, r6, r3
 800b218:	9302      	str	r3, [sp, #8]
 800b21a:	ee17 3a10 	vmov	r3, s14
 800b21e:	44b6      	add	lr, r6
 800b220:	fb04 e505 	mla	r5, r4, r5, lr
 800b224:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b228:	fb07 3706 	mla	r7, r7, r6, r3
 800b22c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b230:	e9cd 4700 	strd	r4, r7, [sp]
 800b234:	2900      	cmp	r1, #0
 800b236:	bfcc      	ite	gt
 800b238:	46a1      	movgt	r9, r4
 800b23a:	4691      	movle	r9, r2
 800b23c:	eba9 0306 	sub.w	r3, r9, r6
 800b240:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b244:	47a0      	blx	r4
 800b246:	b00d      	add	sp, #52	; 0x34
 800b248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b24c:	2500      	movs	r5, #0
 800b24e:	462e      	mov	r6, r5
 800b250:	e799      	b.n	800b186 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b258:	b0db      	sub	sp, #364	; 0x16c
 800b25a:	461d      	mov	r5, r3
 800b25c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b260:	930a      	str	r3, [sp, #40]	; 0x28
 800b262:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b266:	930b      	str	r3, [sp, #44]	; 0x2c
 800b268:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b26c:	9310      	str	r3, [sp, #64]	; 0x40
 800b26e:	6803      	ldr	r3, [r0, #0]
 800b270:	910f      	str	r1, [sp, #60]	; 0x3c
 800b272:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800b274:	9009      	str	r0, [sp, #36]	; 0x24
 800b276:	4614      	mov	r4, r2
 800b278:	4629      	mov	r1, r5
 800b27a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b27e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b282:	47b8      	blx	r7
 800b284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b286:	6058      	str	r0, [r3, #4]
 800b288:	2800      	cmp	r0, #0
 800b28a:	f000 83a1 	beq.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b28e:	682b      	ldr	r3, [r5, #0]
 800b290:	9314      	str	r3, [sp, #80]	; 0x50
 800b292:	686b      	ldr	r3, [r5, #4]
 800b294:	9315      	str	r3, [sp, #84]	; 0x54
 800b296:	4bc4      	ldr	r3, [pc, #784]	; (800b5a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b298:	ed94 7a02 	vldr	s14, [r4, #8]
 800b29c:	7819      	ldrb	r1, [r3, #0]
 800b29e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b2a2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b2a6:	2900      	cmp	r1, #0
 800b2a8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2ac:	bf16      	itet	ne
 800b2ae:	4619      	movne	r1, r3
 800b2b0:	4611      	moveq	r1, r2
 800b2b2:	4613      	movne	r3, r2
 800b2b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2b8:	9116      	str	r1, [sp, #88]	; 0x58
 800b2ba:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b2be:	f240 8387 	bls.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b2c2:	ed94 7a07 	vldr	s14, [r4, #28]
 800b2c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2ce:	f240 837f 	bls.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b2d2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b2d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2de:	f240 8377 	bls.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b2e2:	6822      	ldr	r2, [r4, #0]
 800b2e4:	4bb1      	ldr	r3, [pc, #708]	; (800b5ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b2e6:	429a      	cmp	r2, r3
 800b2e8:	f2c0 8372 	blt.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b2ec:	49b0      	ldr	r1, [pc, #704]	; (800b5b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b2ee:	6963      	ldr	r3, [r4, #20]
 800b2f0:	428a      	cmp	r2, r1
 800b2f2:	f300 836d 	bgt.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b2f6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b2fa:	48ae      	ldr	r0, [pc, #696]	; (800b5b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b2fc:	33ff      	adds	r3, #255	; 0xff
 800b2fe:	4283      	cmp	r3, r0
 800b300:	f200 8366 	bhi.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b304:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b306:	4dac      	ldr	r5, [pc, #688]	; (800b5b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b308:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b30c:	33ff      	adds	r3, #255	; 0xff
 800b30e:	42ab      	cmp	r3, r5
 800b310:	f200 835e 	bhi.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b314:	6862      	ldr	r2, [r4, #4]
 800b316:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b31a:	33ff      	adds	r3, #255	; 0xff
 800b31c:	4283      	cmp	r3, r0
 800b31e:	f200 8357 	bhi.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b322:	69a1      	ldr	r1, [r4, #24]
 800b324:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b328:	33ff      	adds	r3, #255	; 0xff
 800b32a:	4283      	cmp	r3, r0
 800b32c:	f200 8350 	bhi.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b330:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b332:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b336:	30ff      	adds	r0, #255	; 0xff
 800b338:	42a8      	cmp	r0, r5
 800b33a:	f200 8349 	bhi.w	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b33e:	428a      	cmp	r2, r1
 800b340:	f280 8110 	bge.w	800b564 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b344:	429a      	cmp	r2, r3
 800b346:	f300 8119 	bgt.w	800b57c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b34a:	4299      	cmp	r1, r3
 800b34c:	f280 811d 	bge.w	800b58a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b350:	2502      	movs	r5, #2
 800b352:	2701      	movs	r7, #1
 800b354:	46a9      	mov	r9, r5
 800b356:	46b8      	mov	r8, r7
 800b358:	f04f 0a00 	mov.w	sl, #0
 800b35c:	4621      	mov	r1, r4
 800b35e:	a849      	add	r0, sp, #292	; 0x124
 800b360:	f003 fcc6 	bl	800ecf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b364:	4622      	mov	r2, r4
 800b366:	4653      	mov	r3, sl
 800b368:	a949      	add	r1, sp, #292	; 0x124
 800b36a:	f8cd 9000 	str.w	r9, [sp]
 800b36e:	a819      	add	r0, sp, #100	; 0x64
 800b370:	f003 fdee 	bl	800ef50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b374:	4622      	mov	r2, r4
 800b376:	4653      	mov	r3, sl
 800b378:	a949      	add	r1, sp, #292	; 0x124
 800b37a:	f8cd 8000 	str.w	r8, [sp]
 800b37e:	a829      	add	r0, sp, #164	; 0xa4
 800b380:	f003 fde6 	bl	800ef50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b384:	4643      	mov	r3, r8
 800b386:	4622      	mov	r2, r4
 800b388:	a949      	add	r1, sp, #292	; 0x124
 800b38a:	f8cd 9000 	str.w	r9, [sp]
 800b38e:	a839      	add	r0, sp, #228	; 0xe4
 800b390:	f003 fdde 	bl	800ef50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b394:	42af      	cmp	r7, r5
 800b396:	bfb5      	itete	lt
 800b398:	2300      	movlt	r3, #0
 800b39a:	2301      	movge	r3, #1
 800b39c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b39e:	930e      	strge	r3, [sp, #56]	; 0x38
 800b3a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b3a2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b3a6:	af12      	add	r7, sp, #72	; 0x48
 800b3a8:	bfb9      	ittee	lt
 800b3aa:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b3ac:	ac19      	addlt	r4, sp, #100	; 0x64
 800b3ae:	ad19      	addge	r5, sp, #100	; 0x64
 800b3b0:	ac29      	addge	r4, sp, #164	; 0xa4
 800b3b2:	e887 0003 	stmia.w	r7, {r0, r1}
 800b3b6:	b928      	cbnz	r0, 800b3c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b3b8:	4b80      	ldr	r3, [pc, #512]	; (800b5bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b3ba:	6818      	ldr	r0, [r3, #0]
 800b3bc:	6803      	ldr	r3, [r0, #0]
 800b3be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3c0:	4798      	blx	r3
 800b3c2:	6038      	str	r0, [r7, #0]
 800b3c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b3c6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b3ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b3ce:	930c      	str	r3, [sp, #48]	; 0x30
 800b3d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b3d2:	6963      	ldr	r3, [r4, #20]
 800b3d4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b3d6:	440b      	add	r3, r1
 800b3d8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b3dc:	4408      	add	r0, r1
 800b3de:	b200      	sxth	r0, r0
 800b3e0:	4283      	cmp	r3, r0
 800b3e2:	900d      	str	r0, [sp, #52]	; 0x34
 800b3e4:	f280 80dd 	bge.w	800b5a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b3e8:	428b      	cmp	r3, r1
 800b3ea:	da08      	bge.n	800b3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b3ec:	2a00      	cmp	r2, #0
 800b3ee:	dd06      	ble.n	800b3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b3f0:	1acb      	subs	r3, r1, r3
 800b3f2:	429a      	cmp	r2, r3
 800b3f4:	f2c0 80e4 	blt.w	800b5c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b3f8:	2b00      	cmp	r3, #0
 800b3fa:	f300 80e2 	bgt.w	800b5c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b3fe:	6967      	ldr	r7, [r4, #20]
 800b400:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b402:	443b      	add	r3, r7
 800b404:	461f      	mov	r7, r3
 800b406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b408:	1bdf      	subs	r7, r3, r7
 800b40a:	4297      	cmp	r7, r2
 800b40c:	bfa8      	it	ge
 800b40e:	4617      	movge	r7, r2
 800b410:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b414:	2f00      	cmp	r7, #0
 800b416:	f340 8166 	ble.w	800b6e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b41a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b41c:	6829      	ldr	r1, [r5, #0]
 800b41e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b422:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b426:	6820      	ldr	r0, [r4, #0]
 800b428:	4411      	add	r1, r2
 800b42a:	4299      	cmp	r1, r3
 800b42c:	dd1a      	ble.n	800b464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b42e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b432:	440b      	add	r3, r1
 800b434:	4402      	add	r2, r0
 800b436:	b21b      	sxth	r3, r3
 800b438:	429a      	cmp	r2, r3
 800b43a:	dc13      	bgt.n	800b464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b43c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b43e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b440:	681b      	ldr	r3, [r3, #0]
 800b442:	9206      	str	r2, [sp, #24]
 800b444:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b446:	9205      	str	r2, [sp, #20]
 800b448:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b44a:	9500      	str	r5, [sp, #0]
 800b44c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b450:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b452:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b454:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b458:	a912      	add	r1, sp, #72	; 0x48
 800b45a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800b45e:	aa49      	add	r2, sp, #292	; 0x124
 800b460:	4623      	mov	r3, r4
 800b462:	47c8      	blx	r9
 800b464:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b468:	441a      	add	r2, r3
 800b46a:	6963      	ldr	r3, [r4, #20]
 800b46c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b470:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b474:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b478:	68a1      	ldr	r1, [r4, #8]
 800b47a:	ed94 6a08 	vldr	s12, [r4, #32]
 800b47e:	6022      	str	r2, [r4, #0]
 800b480:	3301      	adds	r3, #1
 800b482:	6163      	str	r3, [r4, #20]
 800b484:	69a3      	ldr	r3, [r4, #24]
 800b486:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b48a:	3b01      	subs	r3, #1
 800b48c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b490:	61a3      	str	r3, [r4, #24]
 800b492:	6923      	ldr	r3, [r4, #16]
 800b494:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b498:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b49c:	edd4 6a07 	vldr	s13, [r4, #28]
 800b4a0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b4a4:	440b      	add	r3, r1
 800b4a6:	68e1      	ldr	r1, [r4, #12]
 800b4a8:	6123      	str	r3, [r4, #16]
 800b4aa:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b4ae:	428b      	cmp	r3, r1
 800b4b0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b4b4:	db15      	blt.n	800b4e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b4b6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b4ba:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b4be:	3201      	adds	r2, #1
 800b4c0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b4c4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b4c8:	6022      	str	r2, [r4, #0]
 800b4ca:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b4ce:	1a5b      	subs	r3, r3, r1
 800b4d0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b4d4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b4d8:	6123      	str	r3, [r4, #16]
 800b4da:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b4de:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b4e2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b4e6:	441a      	add	r2, r3
 800b4e8:	696b      	ldr	r3, [r5, #20]
 800b4ea:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b4ee:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b4f2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b4f6:	68a9      	ldr	r1, [r5, #8]
 800b4f8:	ed95 6a08 	vldr	s12, [r5, #32]
 800b4fc:	602a      	str	r2, [r5, #0]
 800b4fe:	3301      	adds	r3, #1
 800b500:	616b      	str	r3, [r5, #20]
 800b502:	69ab      	ldr	r3, [r5, #24]
 800b504:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b508:	3b01      	subs	r3, #1
 800b50a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b50e:	61ab      	str	r3, [r5, #24]
 800b510:	692b      	ldr	r3, [r5, #16]
 800b512:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b516:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b51a:	edd5 6a07 	vldr	s13, [r5, #28]
 800b51e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b522:	440b      	add	r3, r1
 800b524:	68e9      	ldr	r1, [r5, #12]
 800b526:	612b      	str	r3, [r5, #16]
 800b528:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b52c:	428b      	cmp	r3, r1
 800b52e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b532:	db15      	blt.n	800b560 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b534:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b538:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b53c:	3201      	adds	r2, #1
 800b53e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b542:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b546:	602a      	str	r2, [r5, #0]
 800b548:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b54c:	1a5b      	subs	r3, r3, r1
 800b54e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b552:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b556:	612b      	str	r3, [r5, #16]
 800b558:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b55c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b560:	3f01      	subs	r7, #1
 800b562:	e757      	b.n	800b414 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b564:	4299      	cmp	r1, r3
 800b566:	dc13      	bgt.n	800b590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b568:	429a      	cmp	r2, r3
 800b56a:	da14      	bge.n	800b596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b56c:	2502      	movs	r5, #2
 800b56e:	2703      	movs	r7, #3
 800b570:	46a9      	mov	r9, r5
 800b572:	f04f 0800 	mov.w	r8, #0
 800b576:	f04f 0a01 	mov.w	sl, #1
 800b57a:	e6ef      	b.n	800b35c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b57c:	2501      	movs	r5, #1
 800b57e:	2700      	movs	r7, #0
 800b580:	46a9      	mov	r9, r5
 800b582:	46b8      	mov	r8, r7
 800b584:	f04f 0a02 	mov.w	sl, #2
 800b588:	e6e8      	b.n	800b35c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b58a:	2501      	movs	r5, #1
 800b58c:	2702      	movs	r7, #2
 800b58e:	e6e1      	b.n	800b354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b590:	2500      	movs	r5, #0
 800b592:	2701      	movs	r7, #1
 800b594:	e7f4      	b.n	800b580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b596:	2702      	movs	r7, #2
 800b598:	2503      	movs	r5, #3
 800b59a:	f04f 0900 	mov.w	r9, #0
 800b59e:	46b8      	mov	r8, r7
 800b5a0:	e7e9      	b.n	800b576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b5a2:	4613      	mov	r3, r2
 800b5a4:	e728      	b.n	800b3f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b5a6:	bf00      	nop
 800b5a8:	2000a52c 	.word	0x2000a52c
 800b5ac:	fffd8f01 	.word	0xfffd8f01
 800b5b0:	00027100 	.word	0x00027100
 800b5b4:	0004e1ff 	.word	0x0004e1ff
 800b5b8:	0004e1fe 	.word	0x0004e1fe
 800b5bc:	2000a534 	.word	0x2000a534
 800b5c0:	4613      	mov	r3, r2
 800b5c2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b5c4:	9111      	str	r1, [sp, #68]	; 0x44
 800b5c6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b5ca:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b5ce:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b5d0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b5d4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b5d8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b5dc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b5e0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b5e4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b5e8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b5ec:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b5f0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b5f4:	469e      	mov	lr, r3
 800b5f6:	469c      	mov	ip, r3
 800b5f8:	f04f 0900 	mov.w	r9, #0
 800b5fc:	f1bc 0f00 	cmp.w	ip, #0
 800b600:	d147      	bne.n	800b692 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b602:	eb03 0c07 	add.w	ip, r3, r7
 800b606:	1ad7      	subs	r7, r2, r3
 800b608:	f1b9 0f00 	cmp.w	r9, #0
 800b60c:	d009      	beq.n	800b622 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b60e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b612:	9029      	str	r0, [sp, #164]	; 0xa4
 800b614:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b618:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b61c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b620:	912d      	str	r1, [sp, #180]	; 0xb4
 800b622:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b624:	9111      	str	r1, [sp, #68]	; 0x44
 800b626:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b62a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b62e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b632:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b636:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b63a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b63e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b642:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b646:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b64a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b64e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b652:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b656:	f04f 0800 	mov.w	r8, #0
 800b65a:	f1be 0f00 	cmp.w	lr, #0
 800b65e:	d031      	beq.n	800b6c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b660:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b662:	4431      	add	r1, r6
 800b664:	4549      	cmp	r1, r9
 800b666:	4450      	add	r0, sl
 800b668:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b66c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b670:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b674:	db08      	blt.n	800b688 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b676:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b67a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b67e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b682:	3001      	adds	r0, #1
 800b684:	eba1 0109 	sub.w	r1, r1, r9
 800b688:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b68c:	f04f 0801 	mov.w	r8, #1
 800b690:	e7e3      	b.n	800b65a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b692:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b694:	4431      	add	r1, r6
 800b696:	4541      	cmp	r1, r8
 800b698:	4450      	add	r0, sl
 800b69a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b69e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b6a2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b6a6:	db08      	blt.n	800b6ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b6a8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b6ac:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b6b0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b6b4:	3001      	adds	r0, #1
 800b6b6:	eba1 0108 	sub.w	r1, r1, r8
 800b6ba:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b6be:	f04f 0901 	mov.w	r9, #1
 800b6c2:	e79b      	b.n	800b5fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b6c4:	449c      	add	ip, r3
 800b6c6:	1aff      	subs	r7, r7, r3
 800b6c8:	f1b8 0f00 	cmp.w	r8, #0
 800b6cc:	d009      	beq.n	800b6e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b6ce:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b6d2:	9019      	str	r0, [sp, #100]	; 0x64
 800b6d4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b6d8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b6dc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b6e0:	911d      	str	r1, [sp, #116]	; 0x74
 800b6e2:	1ad2      	subs	r2, r2, r3
 800b6e4:	e68b      	b.n	800b3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b6e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b6e8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b6ea:	2b00      	cmp	r3, #0
 800b6ec:	f000 80d1 	beq.w	800b892 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b6f0:	ad19      	add	r5, sp, #100	; 0x64
 800b6f2:	ac39      	add	r4, sp, #228	; 0xe4
 800b6f4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b6f6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b6fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b6fe:	930c      	str	r3, [sp, #48]	; 0x30
 800b700:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b702:	6963      	ldr	r3, [r4, #20]
 800b704:	440b      	add	r3, r1
 800b706:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b70a:	4408      	add	r0, r1
 800b70c:	b200      	sxth	r0, r0
 800b70e:	4283      	cmp	r3, r0
 800b710:	900d      	str	r0, [sp, #52]	; 0x34
 800b712:	f280 80c1 	bge.w	800b898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b716:	428b      	cmp	r3, r1
 800b718:	da08      	bge.n	800b72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b71a:	2a00      	cmp	r2, #0
 800b71c:	dd06      	ble.n	800b72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b71e:	1acb      	subs	r3, r1, r3
 800b720:	429a      	cmp	r2, r3
 800b722:	f2c0 80bb 	blt.w	800b89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b726:	2b00      	cmp	r3, #0
 800b728:	f300 80b9 	bgt.w	800b89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b72c:	6967      	ldr	r7, [r4, #20]
 800b72e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b730:	443b      	add	r3, r7
 800b732:	461f      	mov	r7, r3
 800b734:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b736:	1bdf      	subs	r7, r3, r7
 800b738:	4297      	cmp	r7, r2
 800b73a:	bfa8      	it	ge
 800b73c:	4617      	movge	r7, r2
 800b73e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b742:	2f00      	cmp	r7, #0
 800b744:	f340 813c 	ble.w	800b9c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b748:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b74a:	6829      	ldr	r1, [r5, #0]
 800b74c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b750:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b754:	6820      	ldr	r0, [r4, #0]
 800b756:	4411      	add	r1, r2
 800b758:	4299      	cmp	r1, r3
 800b75a:	dd1a      	ble.n	800b792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b75c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b760:	440b      	add	r3, r1
 800b762:	4402      	add	r2, r0
 800b764:	b21b      	sxth	r3, r3
 800b766:	429a      	cmp	r2, r3
 800b768:	dc13      	bgt.n	800b792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b76a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b76c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b76e:	681b      	ldr	r3, [r3, #0]
 800b770:	9206      	str	r2, [sp, #24]
 800b772:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b774:	9205      	str	r2, [sp, #20]
 800b776:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b778:	9500      	str	r5, [sp, #0]
 800b77a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b77e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b780:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b782:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b786:	a912      	add	r1, sp, #72	; 0x48
 800b788:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800b78c:	aa49      	add	r2, sp, #292	; 0x124
 800b78e:	4623      	mov	r3, r4
 800b790:	47c8      	blx	r9
 800b792:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b796:	441a      	add	r2, r3
 800b798:	6963      	ldr	r3, [r4, #20]
 800b79a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b79e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b7a2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b7a6:	68a1      	ldr	r1, [r4, #8]
 800b7a8:	ed94 6a08 	vldr	s12, [r4, #32]
 800b7ac:	6022      	str	r2, [r4, #0]
 800b7ae:	3301      	adds	r3, #1
 800b7b0:	6163      	str	r3, [r4, #20]
 800b7b2:	69a3      	ldr	r3, [r4, #24]
 800b7b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b7b8:	3b01      	subs	r3, #1
 800b7ba:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b7be:	61a3      	str	r3, [r4, #24]
 800b7c0:	6923      	ldr	r3, [r4, #16]
 800b7c2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b7c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b7ca:	edd4 6a07 	vldr	s13, [r4, #28]
 800b7ce:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b7d2:	440b      	add	r3, r1
 800b7d4:	68e1      	ldr	r1, [r4, #12]
 800b7d6:	6123      	str	r3, [r4, #16]
 800b7d8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b7dc:	428b      	cmp	r3, r1
 800b7de:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7e2:	db15      	blt.n	800b810 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b7e4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b7e8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b7ec:	3201      	adds	r2, #1
 800b7ee:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7f2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b7f6:	6022      	str	r2, [r4, #0]
 800b7f8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b7fc:	1a5b      	subs	r3, r3, r1
 800b7fe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b802:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b806:	6123      	str	r3, [r4, #16]
 800b808:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b80c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b810:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b814:	441a      	add	r2, r3
 800b816:	696b      	ldr	r3, [r5, #20]
 800b818:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b81c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b820:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b824:	68a9      	ldr	r1, [r5, #8]
 800b826:	ed95 6a08 	vldr	s12, [r5, #32]
 800b82a:	602a      	str	r2, [r5, #0]
 800b82c:	3301      	adds	r3, #1
 800b82e:	616b      	str	r3, [r5, #20]
 800b830:	69ab      	ldr	r3, [r5, #24]
 800b832:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b836:	3b01      	subs	r3, #1
 800b838:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b83c:	61ab      	str	r3, [r5, #24]
 800b83e:	692b      	ldr	r3, [r5, #16]
 800b840:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b844:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b848:	edd5 6a07 	vldr	s13, [r5, #28]
 800b84c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b850:	440b      	add	r3, r1
 800b852:	68e9      	ldr	r1, [r5, #12]
 800b854:	612b      	str	r3, [r5, #16]
 800b856:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b85a:	428b      	cmp	r3, r1
 800b85c:	edc5 6a07 	vstr	s13, [r5, #28]
 800b860:	db15      	blt.n	800b88e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b862:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b866:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b86a:	3201      	adds	r2, #1
 800b86c:	edc5 6a07 	vstr	s13, [r5, #28]
 800b870:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b874:	602a      	str	r2, [r5, #0]
 800b876:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b87a:	1a5b      	subs	r3, r3, r1
 800b87c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b880:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b884:	612b      	str	r3, [r5, #16]
 800b886:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b88a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b88e:	3f01      	subs	r7, #1
 800b890:	e757      	b.n	800b742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b892:	ad39      	add	r5, sp, #228	; 0xe4
 800b894:	ac19      	add	r4, sp, #100	; 0x64
 800b896:	e72d      	b.n	800b6f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b898:	4613      	mov	r3, r2
 800b89a:	e744      	b.n	800b726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b89c:	4613      	mov	r3, r2
 800b89e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b8a2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b8a4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b8a8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b8ac:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b8b0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b8b4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b8b8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b8bc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b8c0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b8c2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b8c6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b8ca:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b8ce:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b8d2:	960e      	str	r6, [sp, #56]	; 0x38
 800b8d4:	469e      	mov	lr, r3
 800b8d6:	461f      	mov	r7, r3
 800b8d8:	f04f 0900 	mov.w	r9, #0
 800b8dc:	2f00      	cmp	r7, #0
 800b8de:	d146      	bne.n	800b96e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b8e0:	449c      	add	ip, r3
 800b8e2:	1ad7      	subs	r7, r2, r3
 800b8e4:	f1b9 0f00 	cmp.w	r9, #0
 800b8e8:	d009      	beq.n	800b8fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b8ea:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b8ee:	9039      	str	r0, [sp, #228]	; 0xe4
 800b8f0:	913d      	str	r1, [sp, #244]	; 0xf4
 800b8f2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b8f6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b8fa:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b8fe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b900:	910e      	str	r1, [sp, #56]	; 0x38
 800b902:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b906:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b90a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b90e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b912:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b916:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b91a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b91e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b922:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b926:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b92a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b92e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b932:	f04f 0800 	mov.w	r8, #0
 800b936:	f1be 0f00 	cmp.w	lr, #0
 800b93a:	d030      	beq.n	800b99e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b93c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b93e:	4431      	add	r1, r6
 800b940:	4549      	cmp	r1, r9
 800b942:	4450      	add	r0, sl
 800b944:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b948:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b94c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b950:	db08      	blt.n	800b964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b952:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b956:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b95a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b95e:	3001      	adds	r0, #1
 800b960:	eba1 0109 	sub.w	r1, r1, r9
 800b964:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b968:	f04f 0801 	mov.w	r8, #1
 800b96c:	e7e3      	b.n	800b936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b96e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b970:	4431      	add	r1, r6
 800b972:	4541      	cmp	r1, r8
 800b974:	4450      	add	r0, sl
 800b976:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b97a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b97e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b982:	db08      	blt.n	800b996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b984:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b988:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b98c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b990:	3001      	adds	r0, #1
 800b992:	eba1 0108 	sub.w	r1, r1, r8
 800b996:	3f01      	subs	r7, #1
 800b998:	f04f 0901 	mov.w	r9, #1
 800b99c:	e79e      	b.n	800b8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b99e:	449c      	add	ip, r3
 800b9a0:	1aff      	subs	r7, r7, r3
 800b9a2:	f1b8 0f00 	cmp.w	r8, #0
 800b9a6:	d009      	beq.n	800b9bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b9a8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b9ac:	9019      	str	r0, [sp, #100]	; 0x64
 800b9ae:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b9b2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b9b6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b9ba:	911d      	str	r1, [sp, #116]	; 0x74
 800b9bc:	1ad2      	subs	r2, r2, r3
 800b9be:	e6b5      	b.n	800b72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b9c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b9c2:	681b      	ldr	r3, [r3, #0]
 800b9c4:	b923      	cbnz	r3, 800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b9c6:	4b04      	ldr	r3, [pc, #16]	; (800b9d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b9c8:	6818      	ldr	r0, [r3, #0]
 800b9ca:	6803      	ldr	r3, [r0, #0]
 800b9cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9ce:	4798      	blx	r3
 800b9d0:	b05b      	add	sp, #364	; 0x16c
 800b9d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9d6:	bf00      	nop
 800b9d8:	2000a534 	.word	0x2000a534

0800b9dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800b9dc:	b570      	push	{r4, r5, r6, lr}
 800b9de:	4604      	mov	r4, r0
 800b9e0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800b9e4:	9804      	ldr	r0, [sp, #16]
 800b9e6:	6061      	str	r1, [r4, #4]
 800b9e8:	2500      	movs	r5, #0
 800b9ea:	8025      	strh	r5, [r4, #0]
 800b9ec:	7223      	strb	r3, [r4, #8]
 800b9ee:	7266      	strb	r6, [r4, #9]
 800b9f0:	60e0      	str	r0, [r4, #12]
 800b9f2:	8222      	strh	r2, [r4, #16]
 800b9f4:	8265      	strh	r5, [r4, #18]
 800b9f6:	82a5      	strh	r5, [r4, #20]
 800b9f8:	82e5      	strh	r5, [r4, #22]
 800b9fa:	8325      	strh	r5, [r4, #24]
 800b9fc:	8365      	strh	r5, [r4, #26]
 800b9fe:	83a5      	strh	r5, [r4, #28]
 800ba00:	77a5      	strb	r5, [r4, #30]
 800ba02:	b32e      	cbz	r6, 800ba50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ba04:	6803      	ldr	r3, [r0, #0]
 800ba06:	695b      	ldr	r3, [r3, #20]
 800ba08:	4798      	blx	r3
 800ba0a:	4606      	mov	r6, r0
 800ba0c:	b300      	cbz	r0, 800ba50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ba0e:	68e0      	ldr	r0, [r4, #12]
 800ba10:	6803      	ldr	r3, [r0, #0]
 800ba12:	4631      	mov	r1, r6
 800ba14:	68db      	ldr	r3, [r3, #12]
 800ba16:	4798      	blx	r3
 800ba18:	4605      	mov	r5, r0
 800ba1a:	b1c8      	cbz	r0, 800ba50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ba1c:	7b43      	ldrb	r3, [r0, #13]
 800ba1e:	7a82      	ldrb	r2, [r0, #10]
 800ba20:	005b      	lsls	r3, r3, #1
 800ba22:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ba26:	4313      	orrs	r3, r2
 800ba28:	83a3      	strh	r3, [r4, #28]
 800ba2a:	7a63      	ldrb	r3, [r4, #9]
 800ba2c:	2b04      	cmp	r3, #4
 800ba2e:	d10f      	bne.n	800ba50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ba30:	68e0      	ldr	r0, [r4, #12]
 800ba32:	6803      	ldr	r3, [r0, #0]
 800ba34:	462a      	mov	r2, r5
 800ba36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ba38:	4631      	mov	r1, r6
 800ba3a:	4798      	blx	r3
 800ba3c:	7b6b      	ldrb	r3, [r5, #13]
 800ba3e:	005b      	lsls	r3, r3, #1
 800ba40:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ba44:	7aab      	ldrb	r3, [r5, #10]
 800ba46:	4313      	orrs	r3, r2
 800ba48:	4418      	add	r0, r3
 800ba4a:	8ba3      	ldrh	r3, [r4, #28]
 800ba4c:	4418      	add	r0, r3
 800ba4e:	83a0      	strh	r0, [r4, #28]
 800ba50:	4620      	mov	r0, r4
 800ba52:	bd70      	pop	{r4, r5, r6, pc}

0800ba54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ba54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba58:	2400      	movs	r4, #0
 800ba5a:	b085      	sub	sp, #20
 800ba5c:	4681      	mov	r9, r0
 800ba5e:	4688      	mov	r8, r1
 800ba60:	4692      	mov	sl, r2
 800ba62:	469b      	mov	fp, r3
 800ba64:	4627      	mov	r7, r4
 800ba66:	4625      	mov	r5, r4
 800ba68:	4626      	mov	r6, r4
 800ba6a:	4554      	cmp	r4, sl
 800ba6c:	da2a      	bge.n	800bac4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ba6e:	2300      	movs	r3, #0
 800ba70:	9303      	str	r3, [sp, #12]
 800ba72:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ba76:	429d      	cmp	r5, r3
 800ba78:	d004      	beq.n	800ba84 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800ba7a:	f242 030b 	movw	r3, #8203	; 0x200b
 800ba7e:	429d      	cmp	r5, r3
 800ba80:	bf18      	it	ne
 800ba82:	462f      	movne	r7, r5
 800ba84:	ab03      	add	r3, sp, #12
 800ba86:	4642      	mov	r2, r8
 800ba88:	4659      	mov	r1, fp
 800ba8a:	4648      	mov	r0, r9
 800ba8c:	f002 feec 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ba90:	4605      	mov	r5, r0
 800ba92:	b1b8      	cbz	r0, 800bac4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ba94:	280a      	cmp	r0, #10
 800ba96:	d015      	beq.n	800bac4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ba98:	9a03      	ldr	r2, [sp, #12]
 800ba9a:	b18a      	cbz	r2, 800bac0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ba9c:	7b50      	ldrb	r0, [r2, #13]
 800ba9e:	7a93      	ldrb	r3, [r2, #10]
 800baa0:	8895      	ldrh	r5, [r2, #4]
 800baa2:	0040      	lsls	r0, r0, #1
 800baa4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800baa8:	4303      	orrs	r3, r0
 800baaa:	9301      	str	r3, [sp, #4]
 800baac:	f8d8 3000 	ldr.w	r3, [r8]
 800bab0:	4639      	mov	r1, r7
 800bab2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bab4:	4640      	mov	r0, r8
 800bab6:	4798      	blx	r3
 800bab8:	9b01      	ldr	r3, [sp, #4]
 800baba:	4418      	add	r0, r3
 800babc:	4406      	add	r6, r0
 800babe:	b2b6      	uxth	r6, r6
 800bac0:	3401      	adds	r4, #1
 800bac2:	e7d2      	b.n	800ba6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bac4:	4630      	mov	r0, r6
 800bac6:	b005      	add	sp, #20
 800bac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bacc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bacc:	2a02      	cmp	r2, #2
 800bace:	b530      	push	{r4, r5, lr}
 800bad0:	d011      	beq.n	800baf6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bad2:	2a03      	cmp	r2, #3
 800bad4:	d01c      	beq.n	800bb10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bad6:	2a01      	cmp	r2, #1
 800bad8:	d10c      	bne.n	800baf4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bada:	888b      	ldrh	r3, [r1, #4]
 800badc:	8801      	ldrh	r1, [r0, #0]
 800bade:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bae2:	8844      	ldrh	r4, [r0, #2]
 800bae4:	8004      	strh	r4, [r0, #0]
 800bae6:	1a5b      	subs	r3, r3, r1
 800bae8:	1a9b      	subs	r3, r3, r2
 800baea:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800baee:	8043      	strh	r3, [r0, #2]
 800baf0:	8081      	strh	r1, [r0, #4]
 800baf2:	80c2      	strh	r2, [r0, #6]
 800baf4:	bd30      	pop	{r4, r5, pc}
 800baf6:	88cb      	ldrh	r3, [r1, #6]
 800baf8:	8842      	ldrh	r2, [r0, #2]
 800bafa:	1a9b      	subs	r3, r3, r2
 800bafc:	88c2      	ldrh	r2, [r0, #6]
 800bafe:	1a9b      	subs	r3, r3, r2
 800bb00:	888a      	ldrh	r2, [r1, #4]
 800bb02:	8801      	ldrh	r1, [r0, #0]
 800bb04:	8043      	strh	r3, [r0, #2]
 800bb06:	1a52      	subs	r2, r2, r1
 800bb08:	8881      	ldrh	r1, [r0, #4]
 800bb0a:	1a52      	subs	r2, r2, r1
 800bb0c:	8002      	strh	r2, [r0, #0]
 800bb0e:	e7f1      	b.n	800baf4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bb10:	88cb      	ldrh	r3, [r1, #6]
 800bb12:	8841      	ldrh	r1, [r0, #2]
 800bb14:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bb18:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bb1c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bb20:	8045      	strh	r5, [r0, #2]
 800bb22:	1a5b      	subs	r3, r3, r1
 800bb24:	1a9b      	subs	r3, r3, r2
 800bb26:	8003      	strh	r3, [r0, #0]
 800bb28:	8082      	strh	r2, [r0, #4]
 800bb2a:	80c4      	strh	r4, [r0, #6]
 800bb2c:	e7e2      	b.n	800baf4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800bb2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800bb2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb32:	b09f      	sub	sp, #124	; 0x7c
 800bb34:	9116      	str	r1, [sp, #88]	; 0x58
 800bb36:	9317      	str	r3, [sp, #92]	; 0x5c
 800bb38:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bb3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bb3c:	8809      	ldrh	r1, [r1, #0]
 800bb3e:	889b      	ldrh	r3, [r3, #4]
 800bb40:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bb44:	9212      	str	r2, [sp, #72]	; 0x48
 800bb46:	440b      	add	r3, r1
 800bb48:	b21b      	sxth	r3, r3
 800bb4a:	9310      	str	r3, [sp, #64]	; 0x40
 800bb4c:	f8d8 3000 	ldr.w	r3, [r8]
 800bb50:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800bb54:	7a59      	ldrb	r1, [r3, #9]
 800bb56:	7a1b      	ldrb	r3, [r3, #8]
 800bb58:	9011      	str	r0, [sp, #68]	; 0x44
 800bb5a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bb5e:	9114      	str	r1, [sp, #80]	; 0x50
 800bb60:	9315      	str	r3, [sp, #84]	; 0x54
 800bb62:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800bb66:	2a00      	cmp	r2, #0
 800bb68:	d067      	beq.n	800bc3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800bb6a:	f898 3010 	ldrb.w	r3, [r8, #16]
 800bb6e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800bb70:	2b04      	cmp	r3, #4
 800bb72:	bf14      	ite	ne
 800bb74:	2301      	movne	r3, #1
 800bb76:	2302      	moveq	r3, #2
 800bb78:	4413      	add	r3, r2
 800bb7a:	f04f 0900 	mov.w	r9, #0
 800bb7e:	930f      	str	r3, [sp, #60]	; 0x3c
 800bb80:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bb84:	464c      	mov	r4, r9
 800bb86:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800bb8a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bb8e:	4293      	cmp	r3, r2
 800bb90:	f280 808c 	bge.w	800bcac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800bb94:	2300      	movs	r3, #0
 800bb96:	931c      	str	r3, [sp, #112]	; 0x70
 800bb98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bb9c:	429c      	cmp	r4, r3
 800bb9e:	d006      	beq.n	800bbae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800bba0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bba2:	f242 020b 	movw	r2, #8203	; 0x200b
 800bba6:	4294      	cmp	r4, r2
 800bba8:	bf18      	it	ne
 800bbaa:	4623      	movne	r3, r4
 800bbac:	930d      	str	r3, [sp, #52]	; 0x34
 800bbae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bbb0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bbb2:	f8d8 2000 	ldr.w	r2, [r8]
 800bbb6:	428b      	cmp	r3, r1
 800bbb8:	db41      	blt.n	800bc3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800bbba:	6813      	ldr	r3, [r2, #0]
 800bbbc:	4610      	mov	r0, r2
 800bbbe:	695b      	ldr	r3, [r3, #20]
 800bbc0:	4798      	blx	r3
 800bbc2:	4604      	mov	r4, r0
 800bbc4:	f8d8 0000 	ldr.w	r0, [r8]
 800bbc8:	6803      	ldr	r3, [r0, #0]
 800bbca:	aa1d      	add	r2, sp, #116	; 0x74
 800bbcc:	689e      	ldr	r6, [r3, #8]
 800bbce:	4621      	mov	r1, r4
 800bbd0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bbd4:	47b0      	blx	r6
 800bbd6:	901c      	str	r0, [sp, #112]	; 0x70
 800bbd8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bbdc:	429c      	cmp	r4, r3
 800bbde:	f000 80e9 	beq.w	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bbe2:	f242 030b 	movw	r3, #8203	; 0x200b
 800bbe6:	429c      	cmp	r4, r3
 800bbe8:	f000 80e4 	beq.w	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bbec:	2c00      	cmp	r4, #0
 800bbee:	f000 80f6 	beq.w	800bdde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800bbf2:	2c0a      	cmp	r4, #10
 800bbf4:	d060      	beq.n	800bcb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800bbf6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bbf8:	b36a      	cbz	r2, 800bc56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800bbfa:	8894      	ldrh	r4, [r2, #4]
 800bbfc:	f1bb 0f00 	cmp.w	fp, #0
 800bc00:	d03b      	beq.n	800bc7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800bc02:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bc06:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bc0a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bc0e:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bc12:	f1bb 0f01 	cmp.w	fp, #1
 800bc16:	ea49 0903 	orr.w	r9, r9, r3
 800bc1a:	d134      	bne.n	800bc86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800bc1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc1e:	eba5 0509 	sub.w	r5, r5, r9
 800bc22:	2b00      	cmp	r3, #0
 800bc24:	d14f      	bne.n	800bcc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800bc26:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bc28:	eb09 0305 	add.w	r3, r9, r5
 800bc2c:	4413      	add	r3, r2
 800bc2e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bc30:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bc34:	4293      	cmp	r3, r2
 800bc36:	da51      	bge.n	800bcdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800bc38:	e038      	b.n	800bcac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800bc3a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bc3c:	e79d      	b.n	800bb7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800bc3e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bc42:	9301      	str	r3, [sp, #4]
 800bc44:	ab1d      	add	r3, sp, #116	; 0x74
 800bc46:	9300      	str	r3, [sp, #0]
 800bc48:	4659      	mov	r1, fp
 800bc4a:	ab1c      	add	r3, sp, #112	; 0x70
 800bc4c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bc4e:	f002 fe63 	bl	800e918 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bc52:	4604      	mov	r4, r0
 800bc54:	e7c0      	b.n	800bbd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800bc56:	f8d8 0000 	ldr.w	r0, [r8]
 800bc5a:	6803      	ldr	r3, [r0, #0]
 800bc5c:	691b      	ldr	r3, [r3, #16]
 800bc5e:	4798      	blx	r3
 800bc60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bc64:	4298      	cmp	r0, r3
 800bc66:	f000 80a5 	beq.w	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bc6a:	f242 030b 	movw	r3, #8203	; 0x200b
 800bc6e:	4298      	cmp	r0, r3
 800bc70:	f000 80a0 	beq.w	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bc74:	f1bb 0f00 	cmp.w	fp, #0
 800bc78:	d100      	bne.n	800bc7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800bc7a:	444d      	add	r5, r9
 800bc7c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bc7e:	2a00      	cmp	r2, #0
 800bc80:	d1bf      	bne.n	800bc02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800bc82:	4691      	mov	r9, r2
 800bc84:	e096      	b.n	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bc86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	f000 80aa 	beq.w	800bde2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800bc8e:	f1bb 0f00 	cmp.w	fp, #0
 800bc92:	d118      	bne.n	800bcc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800bc94:	f8d8 0000 	ldr.w	r0, [r8]
 800bc98:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bc9a:	6803      	ldr	r3, [r0, #0]
 800bc9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc9e:	4798      	blx	r3
 800bca0:	4405      	add	r5, r0
 800bca2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bca4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bca6:	1aeb      	subs	r3, r5, r3
 800bca8:	4293      	cmp	r3, r2
 800bcaa:	dd17      	ble.n	800bcdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800bcac:	2c00      	cmp	r4, #0
 800bcae:	f000 8096 	beq.w	800bdde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800bcb2:	2c0a      	cmp	r4, #10
 800bcb4:	f040 8084 	bne.w	800bdc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800bcb8:	240a      	movs	r4, #10
 800bcba:	fab4 f084 	clz	r0, r4
 800bcbe:	0940      	lsrs	r0, r0, #5
 800bcc0:	b01f      	add	sp, #124	; 0x7c
 800bcc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcc6:	f8d8 0000 	ldr.w	r0, [r8]
 800bcca:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bccc:	6803      	ldr	r3, [r0, #0]
 800bcce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bcd0:	4798      	blx	r3
 800bcd2:	f1bb 0f01 	cmp.w	fp, #1
 800bcd6:	eba5 0500 	sub.w	r5, r5, r0
 800bcda:	d0a4      	beq.n	800bc26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800bcdc:	981c      	ldr	r0, [sp, #112]	; 0x70
 800bcde:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bce0:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800bce4:	f9b3 6000 	ldrsh.w	r6, [r3]
 800bce8:	7b43      	ldrb	r3, [r0, #13]
 800bcea:	015b      	lsls	r3, r3, #5
 800bcec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bcf0:	7983      	ldrb	r3, [r0, #6]
 800bcf2:	4429      	add	r1, r5
 800bcf4:	4313      	orrs	r3, r2
 800bcf6:	440b      	add	r3, r1
 800bcf8:	42b3      	cmp	r3, r6
 800bcfa:	db5b      	blt.n	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bcfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bcfe:	4299      	cmp	r1, r3
 800bd00:	da58      	bge.n	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bd02:	f8d8 0000 	ldr.w	r0, [r8]
 800bd06:	6803      	ldr	r3, [r0, #0]
 800bd08:	42ae      	cmp	r6, r5
 800bd0a:	bfc8      	it	gt
 800bd0c:	1b76      	subgt	r6, r6, r5
 800bd0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd10:	bfcc      	ite	gt
 800bd12:	b2b6      	uxthgt	r6, r6
 800bd14:	2600      	movle	r6, #0
 800bd16:	4798      	blx	r3
 800bd18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800bd1a:	7b5a      	ldrb	r2, [r3, #13]
 800bd1c:	00d1      	lsls	r1, r2, #3
 800bd1e:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800bd22:	7a19      	ldrb	r1, [r3, #8]
 800bd24:	4339      	orrs	r1, r7
 800bd26:	0657      	lsls	r7, r2, #25
 800bd28:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800bd2a:	bf44      	itt	mi
 800bd2c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800bd30:	b209      	sxthmi	r1, r1
 800bd32:	19c7      	adds	r7, r0, r7
 800bd34:	1a7f      	subs	r7, r7, r1
 800bd36:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bd38:	b2bf      	uxth	r7, r7
 800bd3a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800bd3e:	fa0f fa87 	sxth.w	sl, r7
 800bd42:	4551      	cmp	r1, sl
 800bd44:	dd3a      	ble.n	800bdbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800bd46:	0112      	lsls	r2, r2, #4
 800bd48:	79d8      	ldrb	r0, [r3, #7]
 800bd4a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800bd4e:	4302      	orrs	r2, r0
 800bd50:	4492      	add	sl, r2
 800bd52:	4551      	cmp	r1, sl
 800bd54:	dc2e      	bgt.n	800bdb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800bd56:	1bcf      	subs	r7, r1, r7
 800bd58:	b2bf      	uxth	r7, r7
 800bd5a:	468a      	mov	sl, r1
 800bd5c:	9319      	str	r3, [sp, #100]	; 0x64
 800bd5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bd60:	f8d8 0000 	ldr.w	r0, [r8]
 800bd64:	681a      	ldr	r2, [r3, #0]
 800bd66:	6801      	ldr	r1, [r0, #0]
 800bd68:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800bd6a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800bd6c:	9313      	str	r3, [sp, #76]	; 0x4c
 800bd6e:	9218      	str	r2, [sp, #96]	; 0x60
 800bd70:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800bd72:	4788      	blx	r1
 800bd74:	f898 1006 	ldrb.w	r1, [r8, #6]
 800bd78:	910b      	str	r1, [sp, #44]	; 0x2c
 800bd7a:	f898 100e 	ldrb.w	r1, [r8, #14]
 800bd7e:	910a      	str	r1, [sp, #40]	; 0x28
 800bd80:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800bd84:	9109      	str	r1, [sp, #36]	; 0x24
 800bd86:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bd88:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800bd8c:	9305      	str	r3, [sp, #20]
 800bd8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bd90:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800bd92:	9206      	str	r2, [sp, #24]
 800bd94:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800bd98:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800bd9c:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bda0:	442e      	add	r6, r5
 800bda2:	b236      	sxth	r6, r6
 800bda4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bda6:	9600      	str	r6, [sp, #0]
 800bda8:	681a      	ldr	r2, [r3, #0]
 800bdaa:	9916      	ldr	r1, [sp, #88]	; 0x58
 800bdac:	685b      	ldr	r3, [r3, #4]
 800bdae:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bdb0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800bdb2:	47b0      	blx	r6
 800bdb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bdb6:	3301      	adds	r3, #1
 800bdb8:	930e      	str	r3, [sp, #56]	; 0x38
 800bdba:	e6e6      	b.n	800bb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800bdbc:	2700      	movs	r7, #0
 800bdbe:	e7cd      	b.n	800bd5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800bdc0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800bdc2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bdc4:	3501      	adds	r5, #1
 800bdc6:	429d      	cmp	r5, r3
 800bdc8:	f6bf af77 	bge.w	800bcba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bdcc:	4659      	mov	r1, fp
 800bdce:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bdd0:	f7f6 fe16 	bl	8002a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bdd4:	4604      	mov	r4, r0
 800bdd6:	b110      	cbz	r0, 800bdde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800bdd8:	280a      	cmp	r0, #10
 800bdda:	d1f2      	bne.n	800bdc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800bddc:	e76c      	b.n	800bcb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800bdde:	2400      	movs	r4, #0
 800bde0:	e76b      	b.n	800bcba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bde2:	f1bb 0f00 	cmp.w	fp, #0
 800bde6:	f43f af5c 	beq.w	800bca2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800bdea:	e777      	b.n	800bcdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800bdec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800bdec:	b530      	push	{r4, r5, lr}
 800bdee:	8a44      	ldrh	r4, [r0, #18]
 800bdf0:	8ac5      	ldrh	r5, [r0, #22]
 800bdf2:	82c3      	strh	r3, [r0, #22]
 800bdf4:	442c      	add	r4, r5
 800bdf6:	1ae4      	subs	r4, r4, r3
 800bdf8:	8244      	strh	r4, [r0, #18]
 800bdfa:	8b03      	ldrh	r3, [r0, #24]
 800bdfc:	8a84      	ldrh	r4, [r0, #20]
 800bdfe:	4422      	add	r2, r4
 800be00:	440c      	add	r4, r1
 800be02:	1a59      	subs	r1, r3, r1
 800be04:	8342      	strh	r2, [r0, #26]
 800be06:	8284      	strh	r4, [r0, #20]
 800be08:	8301      	strh	r1, [r0, #24]
 800be0a:	bd30      	pop	{r4, r5, pc}

0800be0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800be0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be10:	7a43      	ldrb	r3, [r0, #9]
 800be12:	1eda      	subs	r2, r3, #3
 800be14:	b087      	sub	sp, #28
 800be16:	4604      	mov	r4, r0
 800be18:	b2d2      	uxtb	r2, r2
 800be1a:	460f      	mov	r7, r1
 800be1c:	2900      	cmp	r1, #0
 800be1e:	d036      	beq.n	800be8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800be20:	2a01      	cmp	r2, #1
 800be22:	d932      	bls.n	800be8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800be24:	1e58      	subs	r0, r3, #1
 800be26:	f1d0 0b00 	rsbs	fp, r0, #0
 800be2a:	eb4b 0b00 	adc.w	fp, fp, r0
 800be2e:	1e99      	subs	r1, r3, #2
 800be30:	424b      	negs	r3, r1
 800be32:	414b      	adcs	r3, r1
 800be34:	9303      	str	r3, [sp, #12]
 800be36:	2300      	movs	r3, #0
 800be38:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800be3c:	2500      	movs	r5, #0
 800be3e:	8265      	strh	r5, [r4, #18]
 800be40:	82a5      	strh	r5, [r4, #20]
 800be42:	46a9      	mov	r9, r5
 800be44:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800be48:	2300      	movs	r3, #0
 800be4a:	9305      	str	r3, [sp, #20]
 800be4c:	8823      	ldrh	r3, [r4, #0]
 800be4e:	2b20      	cmp	r3, #32
 800be50:	d02b      	beq.n	800beaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800be52:	eba3 020a 	sub.w	r2, r3, sl
 800be56:	4256      	negs	r6, r2
 800be58:	4156      	adcs	r6, r2
 800be5a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800be5e:	4293      	cmp	r3, r2
 800be60:	d004      	beq.n	800be6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800be62:	4553      	cmp	r3, sl
 800be64:	bf16      	itet	ne
 800be66:	4699      	movne	r9, r3
 800be68:	2601      	moveq	r6, #1
 800be6a:	2600      	movne	r6, #0
 800be6c:	ab05      	add	r3, sp, #20
 800be6e:	68e2      	ldr	r2, [r4, #12]
 800be70:	7a21      	ldrb	r1, [r4, #8]
 800be72:	6860      	ldr	r0, [r4, #4]
 800be74:	f002 fcf8 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800be78:	8020      	strh	r0, [r4, #0]
 800be7a:	b9c8      	cbnz	r0, 800beb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800be7c:	8b22      	ldrh	r2, [r4, #24]
 800be7e:	2300      	movs	r3, #0
 800be80:	4611      	mov	r1, r2
 800be82:	4620      	mov	r0, r4
 800be84:	f7ff ffb2 	bl	800bdec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800be88:	e066      	b.n	800bf58 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800be8a:	468b      	mov	fp, r1
 800be8c:	e7cf      	b.n	800be2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800be8e:	3b01      	subs	r3, #1
 800be90:	2a01      	cmp	r2, #1
 800be92:	bf8c      	ite	hi
 800be94:	2200      	movhi	r2, #0
 800be96:	2201      	movls	r2, #1
 800be98:	2b01      	cmp	r3, #1
 800be9a:	bf8c      	ite	hi
 800be9c:	2300      	movhi	r3, #0
 800be9e:	2301      	movls	r3, #1
 800bea0:	9202      	str	r2, [sp, #8]
 800bea2:	9301      	str	r3, [sp, #4]
 800bea4:	9103      	str	r1, [sp, #12]
 800bea6:	468b      	mov	fp, r1
 800bea8:	e7c8      	b.n	800be3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800beaa:	4699      	mov	r9, r3
 800beac:	2601      	movs	r6, #1
 800beae:	e7dd      	b.n	800be6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800beb0:	8ae3      	ldrh	r3, [r4, #22]
 800beb2:	280a      	cmp	r0, #10
 800beb4:	f103 0301 	add.w	r3, r3, #1
 800beb8:	82e3      	strh	r3, [r4, #22]
 800beba:	d0df      	beq.n	800be7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800bebc:	9a05      	ldr	r2, [sp, #20]
 800bebe:	bb42      	cbnz	r2, 800bf12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800bec0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bec4:	4298      	cmp	r0, r3
 800bec6:	d001      	beq.n	800becc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bec8:	4550      	cmp	r0, sl
 800beca:	d1bd      	bne.n	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800becc:	8823      	ldrh	r3, [r4, #0]
 800bece:	8b21      	ldrh	r1, [r4, #24]
 800bed0:	2b20      	cmp	r3, #32
 800bed2:	d001      	beq.n	800bed8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800bed4:	4553      	cmp	r3, sl
 800bed6:	d131      	bne.n	800bf3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800bed8:	2e00      	cmp	r6, #0
 800beda:	bf0a      	itet	eq
 800bedc:	460d      	moveq	r5, r1
 800bede:	4630      	movne	r0, r6
 800bee0:	2001      	moveq	r0, #1
 800bee2:	440a      	add	r2, r1
 800bee4:	8aa3      	ldrh	r3, [r4, #20]
 800bee6:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800beea:	b292      	uxth	r2, r2
 800beec:	8322      	strh	r2, [r4, #24]
 800beee:	4413      	add	r3, r2
 800bef0:	2f00      	cmp	r7, #0
 800bef2:	d03a      	beq.n	800bf6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800bef4:	f1bb 0f00 	cmp.w	fp, #0
 800bef8:	d102      	bne.n	800bf00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800befa:	9903      	ldr	r1, [sp, #12]
 800befc:	b301      	cbz	r1, 800bf40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800befe:	b1f8      	cbz	r0, 800bf40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bf00:	8ba1      	ldrh	r1, [r4, #28]
 800bf02:	4419      	add	r1, r3
 800bf04:	458c      	cmp	ip, r1
 800bf06:	da2a      	bge.n	800bf5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bf08:	8a61      	ldrh	r1, [r4, #18]
 800bf0a:	b341      	cbz	r1, 800bf5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bf0c:	4563      	cmp	r3, ip
 800bf0e:	dd9b      	ble.n	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf10:	e01c      	b.n	800bf4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800bf12:	8893      	ldrh	r3, [r2, #4]
 800bf14:	8023      	strh	r3, [r4, #0]
 800bf16:	f892 800d 	ldrb.w	r8, [r2, #13]
 800bf1a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800bf1e:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800bf22:	f892 800a 	ldrb.w	r8, [r2, #10]
 800bf26:	ea48 0800 	orr.w	r8, r8, r0
 800bf2a:	68e0      	ldr	r0, [r4, #12]
 800bf2c:	6803      	ldr	r3, [r0, #0]
 800bf2e:	4649      	mov	r1, r9
 800bf30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf32:	4798      	blx	r3
 800bf34:	eb08 0200 	add.w	r2, r8, r0
 800bf38:	b292      	uxth	r2, r2
 800bf3a:	e7c7      	b.n	800becc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bf3c:	2000      	movs	r0, #0
 800bf3e:	e7d0      	b.n	800bee2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800bf40:	4563      	cmp	r3, ip
 800bf42:	dd81      	ble.n	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf44:	8a63      	ldrh	r3, [r4, #18]
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	f43f af7e 	beq.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf4c:	2301      	movs	r3, #1
 800bf4e:	77a3      	strb	r3, [r4, #30]
 800bf50:	8ba2      	ldrh	r2, [r4, #28]
 800bf52:	8b63      	ldrh	r3, [r4, #26]
 800bf54:	4413      	add	r3, r2
 800bf56:	8363      	strh	r3, [r4, #26]
 800bf58:	b007      	add	sp, #28
 800bf5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf5e:	2300      	movs	r3, #0
 800bf60:	4611      	mov	r1, r2
 800bf62:	4620      	mov	r0, r4
 800bf64:	f7ff ff42 	bl	800bdec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bf68:	e76e      	b.n	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf6a:	4563      	cmp	r3, ip
 800bf6c:	dd14      	ble.n	800bf98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800bf6e:	9b02      	ldr	r3, [sp, #8]
 800bf70:	b113      	cbz	r3, 800bf78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800bf72:	2301      	movs	r3, #1
 800bf74:	460a      	mov	r2, r1
 800bf76:	e783      	b.n	800be80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800bf78:	9b01      	ldr	r3, [sp, #4]
 800bf7a:	2b00      	cmp	r3, #0
 800bf7c:	f43f af64 	beq.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf80:	2800      	cmp	r0, #0
 800bf82:	f47f af61 	bne.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf86:	b116      	cbz	r6, 800bf8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800bf88:	2301      	movs	r3, #1
 800bf8a:	462a      	mov	r2, r5
 800bf8c:	e779      	b.n	800be82 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800bf8e:	8a63      	ldrh	r3, [r4, #18]
 800bf90:	2b00      	cmp	r3, #0
 800bf92:	f43f af59 	beq.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf96:	e7df      	b.n	800bf58 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bf98:	2800      	cmp	r0, #0
 800bf9a:	f47f af55 	bne.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf9e:	2e00      	cmp	r6, #0
 800bfa0:	f43f af52 	beq.w	800be48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bfa4:	2301      	movs	r3, #1
 800bfa6:	462a      	mov	r2, r5
 800bfa8:	e7db      	b.n	800bf62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800bfaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800bfaa:	b530      	push	{r4, r5, lr}
 800bfac:	4605      	mov	r5, r0
 800bfae:	b08b      	sub	sp, #44	; 0x2c
 800bfb0:	b191      	cbz	r1, 800bfd8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800bfb2:	e9cd 3100 	strd	r3, r1, [sp]
 800bfb6:	4613      	mov	r3, r2
 800bfb8:	4601      	mov	r1, r0
 800bfba:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800bfbe:	a802      	add	r0, sp, #8
 800bfc0:	f7ff fd0c 	bl	800b9dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800bfc4:	2401      	movs	r4, #1
 800bfc6:	2100      	movs	r1, #0
 800bfc8:	a802      	add	r0, sp, #8
 800bfca:	f7ff ff1f 	bl	800be0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bfce:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800bfd2:	b163      	cbz	r3, 800bfee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800bfd4:	3401      	adds	r4, #1
 800bfd6:	e7f6      	b.n	800bfc6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800bfd8:	f002 fd40 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bfdc:	2401      	movs	r4, #1
 800bfde:	280a      	cmp	r0, #10
 800bfe0:	4628      	mov	r0, r5
 800bfe2:	bf08      	it	eq
 800bfe4:	3401      	addeq	r4, #1
 800bfe6:	f002 fd39 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bfea:	2800      	cmp	r0, #0
 800bfec:	d1f7      	bne.n	800bfde <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800bfee:	b2a0      	uxth	r0, r4
 800bff0:	b00b      	add	sp, #44	; 0x2c
 800bff2:	bd30      	pop	{r4, r5, pc}

0800bff4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800bff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bff8:	b0e5      	sub	sp, #404	; 0x194
 800bffa:	4689      	mov	r9, r1
 800bffc:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800c000:	900a      	str	r0, [sp, #40]	; 0x28
 800c002:	461c      	mov	r4, r3
 800c004:	f1ba 0f00 	cmp.w	sl, #0
 800c008:	f000 80b4 	beq.w	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c00c:	681b      	ldr	r3, [r3, #0]
 800c00e:	2b00      	cmp	r3, #0
 800c010:	f000 80b0 	beq.w	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c014:	7ba3      	ldrb	r3, [r4, #14]
 800c016:	2b00      	cmp	r3, #0
 800c018:	f000 80ac 	beq.w	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c01c:	6810      	ldr	r0, [r2, #0]
 800c01e:	6851      	ldr	r1, [r2, #4]
 800c020:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c024:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800c028:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800c02c:	4643      	mov	r3, r8
 800c02e:	c303      	stmia	r3!, {r0, r1}
 800c030:	2500      	movs	r5, #0
 800c032:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c036:	79a2      	ldrb	r2, [r4, #6]
 800c038:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c03c:	a90f      	add	r1, sp, #60	; 0x3c
 800c03e:	4640      	mov	r0, r8
 800c040:	950f      	str	r5, [sp, #60]	; 0x3c
 800c042:	f7ff fd43 	bl	800bacc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c046:	a90f      	add	r1, sp, #60	; 0x3c
 800c048:	4608      	mov	r0, r1
 800c04a:	79a2      	ldrb	r2, [r4, #6]
 800c04c:	af19      	add	r7, sp, #100	; 0x64
 800c04e:	f7ff fd3d 	bl	800bacc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c052:	4638      	mov	r0, r7
 800c054:	f002 f88c 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800c058:	6820      	ldr	r0, [r4, #0]
 800c05a:	6803      	ldr	r3, [r0, #0]
 800c05c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c05e:	4798      	blx	r3
 800c060:	4606      	mov	r6, r0
 800c062:	6820      	ldr	r0, [r4, #0]
 800c064:	6803      	ldr	r3, [r0, #0]
 800c066:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c068:	4798      	blx	r3
 800c06a:	4633      	mov	r3, r6
 800c06c:	9000      	str	r0, [sp, #0]
 800c06e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c070:	4651      	mov	r1, sl
 800c072:	4638      	mov	r0, r7
 800c074:	f002 f8e8 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c078:	6820      	ldr	r0, [r4, #0]
 800c07a:	7923      	ldrb	r3, [r4, #4]
 800c07c:	9308      	str	r3, [sp, #32]
 800c07e:	6803      	ldr	r3, [r0, #0]
 800c080:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c082:	4798      	blx	r3
 800c084:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c088:	181e      	adds	r6, r3, r0
 800c08a:	42ae      	cmp	r6, r5
 800c08c:	dd06      	ble.n	800c09c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800c08e:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c092:	4282      	cmp	r2, r0
 800c094:	bfa4      	itt	ge
 800c096:	189d      	addge	r5, r3, r2
 800c098:	fb95 f5f6 	sdivge	r5, r5, r6
 800c09c:	a832      	add	r0, sp, #200	; 0xc8
 800c09e:	f002 f867 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800c0a2:	7c23      	ldrb	r3, [r4, #16]
 800c0a4:	b17b      	cbz	r3, 800c0c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800c0a6:	6820      	ldr	r0, [r4, #0]
 800c0a8:	6803      	ldr	r3, [r0, #0]
 800c0aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c0ac:	4798      	blx	r3
 800c0ae:	4683      	mov	fp, r0
 800c0b0:	6820      	ldr	r0, [r4, #0]
 800c0b2:	6803      	ldr	r3, [r0, #0]
 800c0b4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c0b6:	4798      	blx	r3
 800c0b8:	465b      	mov	r3, fp
 800c0ba:	9000      	str	r0, [sp, #0]
 800c0bc:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c0be:	4651      	mov	r1, sl
 800c0c0:	a832      	add	r0, sp, #200	; 0xc8
 800c0c2:	f002 f8c1 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c0c6:	7be1      	ldrb	r1, [r4, #15]
 800c0c8:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c0cc:	7963      	ldrb	r3, [r4, #5]
 800c0ce:	1a52      	subs	r2, r2, r1
 800c0d0:	7c21      	ldrb	r1, [r4, #16]
 800c0d2:	9101      	str	r1, [sp, #4]
 800c0d4:	6821      	ldr	r1, [r4, #0]
 800c0d6:	9100      	str	r1, [sp, #0]
 800c0d8:	b292      	uxth	r2, r2
 800c0da:	a932      	add	r1, sp, #200	; 0xc8
 800c0dc:	a811      	add	r0, sp, #68	; 0x44
 800c0de:	f7ff fc7d 	bl	800b9dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c0e2:	7c23      	ldrb	r3, [r4, #16]
 800c0e4:	b9bb      	cbnz	r3, 800c116 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800c0e6:	fa1f fa86 	uxth.w	sl, r6
 800c0ea:	2d00      	cmp	r5, #0
 800c0ec:	dd45      	ble.n	800c17a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c0ee:	4638      	mov	r0, r7
 800c0f0:	f002 fcb4 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c0f4:	2800      	cmp	r0, #0
 800c0f6:	d03d      	beq.n	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c0f8:	280a      	cmp	r0, #10
 800c0fa:	d1f6      	bne.n	800c0ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c0fc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c100:	4453      	add	r3, sl
 800c102:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c106:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c10a:	eba3 030a 	sub.w	r3, r3, sl
 800c10e:	3d01      	subs	r5, #1
 800c110:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c114:	e7e9      	b.n	800c0ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c116:	0073      	lsls	r3, r6, #1
 800c118:	9309      	str	r3, [sp, #36]	; 0x24
 800c11a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c11e:	fa1f fa86 	uxth.w	sl, r6
 800c122:	2d00      	cmp	r5, #0
 800c124:	dd29      	ble.n	800c17a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c126:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c12a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c12c:	428b      	cmp	r3, r1
 800c12e:	bfd4      	ite	le
 800c130:	2100      	movle	r1, #0
 800c132:	2101      	movgt	r1, #1
 800c134:	a811      	add	r0, sp, #68	; 0x44
 800c136:	f7ff fe69 	bl	800be0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c13a:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800c13e:	3b01      	subs	r3, #1
 800c140:	b29b      	uxth	r3, r3
 800c142:	455b      	cmp	r3, fp
 800c144:	930b      	str	r3, [sp, #44]	; 0x2c
 800c146:	d005      	beq.n	800c154 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800c148:	7961      	ldrb	r1, [r4, #5]
 800c14a:	4638      	mov	r0, r7
 800c14c:	f7f6 fc58 	bl	8002a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c150:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c152:	e7f4      	b.n	800c13e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800c154:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c158:	4453      	add	r3, sl
 800c15a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c15e:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c162:	eba3 030a 	sub.w	r3, r3, sl
 800c166:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c16a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c16e:	3d01      	subs	r5, #1
 800c170:	2b00      	cmp	r3, #0
 800c172:	d1d6      	bne.n	800c122 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800c174:	b065      	add	sp, #404	; 0x194
 800c176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c17a:	0075      	lsls	r5, r6, #1
 800c17c:	f04f 0a00 	mov.w	sl, #0
 800c180:	7c23      	ldrb	r3, [r4, #16]
 800c182:	2b00      	cmp	r3, #0
 800c184:	d066      	beq.n	800c254 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800c186:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c18a:	428d      	cmp	r5, r1
 800c18c:	bfd4      	ite	le
 800c18e:	2100      	movle	r1, #0
 800c190:	2101      	movgt	r1, #1
 800c192:	a811      	add	r0, sp, #68	; 0x44
 800c194:	f7ff fe3a 	bl	800be0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c198:	9b08      	ldr	r3, [sp, #32]
 800c19a:	2b00      	cmp	r3, #0
 800c19c:	d055      	beq.n	800c24a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c19e:	f894 b010 	ldrb.w	fp, [r4, #16]
 800c1a2:	2264      	movs	r2, #100	; 0x64
 800c1a4:	4639      	mov	r1, r7
 800c1a6:	a84b      	add	r0, sp, #300	; 0x12c
 800c1a8:	f00f fdf2 	bl	801bd90 <memcpy>
 800c1ac:	f1bb 0f00 	cmp.w	fp, #0
 800c1b0:	d058      	beq.n	800c264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800c1b2:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800c1b6:	7922      	ldrb	r2, [r4, #4]
 800c1b8:	2a01      	cmp	r2, #1
 800c1ba:	d13c      	bne.n	800c236 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800c1bc:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800c1c0:	1ac0      	subs	r0, r0, r3
 800c1c2:	2302      	movs	r3, #2
 800c1c4:	fb90 f0f3 	sdiv	r0, r0, r3
 800c1c8:	b200      	sxth	r0, r0
 800c1ca:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c1ce:	4418      	add	r0, r3
 800c1d0:	7c23      	ldrb	r3, [r4, #16]
 800c1d2:	b200      	sxth	r0, r0
 800c1d4:	2b00      	cmp	r3, #0
 800c1d6:	d03a      	beq.n	800c24e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800c1d8:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800c1dc:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800c1e0:	9000      	str	r0, [sp, #0]
 800c1e2:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c1e6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800c1ea:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c1ec:	e9cd a703 	strd	sl, r7, [sp, #12]
 800c1f0:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c1f4:	464a      	mov	r2, r9
 800c1f6:	2100      	movs	r1, #0
 800c1f8:	f7ff fc99 	bl	800bb2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c1fc:	2800      	cmp	r0, #0
 800c1fe:	d1b9      	bne.n	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c200:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c204:	b2b2      	uxth	r2, r6
 800c206:	4611      	mov	r1, r2
 800c208:	4413      	add	r3, r2
 800c20a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800c20e:	1a52      	subs	r2, r2, r1
 800c210:	7c21      	ldrb	r1, [r4, #16]
 800c212:	b21b      	sxth	r3, r3
 800c214:	b212      	sxth	r2, r2
 800c216:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c21a:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800c21e:	b109      	cbz	r1, 800c224 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800c220:	42b2      	cmp	r2, r6
 800c222:	dba7      	blt.n	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c224:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c228:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c22c:	440a      	add	r2, r1
 800c22e:	b212      	sxth	r2, r2
 800c230:	4293      	cmp	r3, r2
 800c232:	dda5      	ble.n	800c180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800c234:	e79e      	b.n	800c174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c236:	2a02      	cmp	r2, #2
 800c238:	d105      	bne.n	800c246 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c23a:	7be2      	ldrb	r2, [r4, #15]
 800c23c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800c240:	1a80      	subs	r0, r0, r2
 800c242:	1ac0      	subs	r0, r0, r3
 800c244:	e7c0      	b.n	800c1c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800c246:	2000      	movs	r0, #0
 800c248:	e7bf      	b.n	800c1ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800c24a:	7be0      	ldrb	r0, [r4, #15]
 800c24c:	e7bd      	b.n	800c1ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800c24e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c252:	e7c3      	b.n	800c1dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800c254:	9b08      	ldr	r3, [sp, #32]
 800c256:	2b00      	cmp	r3, #0
 800c258:	d0f7      	beq.n	800c24a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c25a:	2264      	movs	r2, #100	; 0x64
 800c25c:	4639      	mov	r1, r7
 800c25e:	a84b      	add	r0, sp, #300	; 0x12c
 800c260:	f00f fd96 	bl	801bd90 <memcpy>
 800c264:	2300      	movs	r3, #0
 800c266:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c26a:	6821      	ldr	r1, [r4, #0]
 800c26c:	a84b      	add	r0, sp, #300	; 0x12c
 800c26e:	f7ff fbf1 	bl	800ba54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c272:	b203      	sxth	r3, r0
 800c274:	e79f      	b.n	800c1b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800c276 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c276:	b510      	push	{r4, lr}
 800c278:	2b02      	cmp	r3, #2
 800c27a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c27e:	d00b      	beq.n	800c298 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c280:	2b03      	cmp	r3, #3
 800c282:	d00e      	beq.n	800c2a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c284:	2b01      	cmp	r3, #1
 800c286:	d001      	beq.n	800c28c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c288:	1860      	adds	r0, r4, r1
 800c28a:	bd10      	pop	{r4, pc}
 800c28c:	8880      	ldrh	r0, [r0, #4]
 800c28e:	4420      	add	r0, r4
 800c290:	b200      	sxth	r0, r0
 800c292:	1a80      	subs	r0, r0, r2
 800c294:	3801      	subs	r0, #1
 800c296:	e7f8      	b.n	800c28a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c298:	8880      	ldrh	r0, [r0, #4]
 800c29a:	4420      	add	r0, r4
 800c29c:	b200      	sxth	r0, r0
 800c29e:	1a40      	subs	r0, r0, r1
 800c2a0:	e7f8      	b.n	800c294 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c2a2:	18a0      	adds	r0, r4, r2
 800c2a4:	e7f1      	b.n	800c28a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c2a6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c2a6:	b510      	push	{r4, lr}
 800c2a8:	2b02      	cmp	r3, #2
 800c2aa:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c2ae:	d006      	beq.n	800c2be <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c2b0:	2b03      	cmp	r3, #3
 800c2b2:	d00a      	beq.n	800c2ca <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c2b4:	2b01      	cmp	r3, #1
 800c2b6:	bf14      	ite	ne
 800c2b8:	18a0      	addne	r0, r4, r2
 800c2ba:	1860      	addeq	r0, r4, r1
 800c2bc:	bd10      	pop	{r4, pc}
 800c2be:	88c0      	ldrh	r0, [r0, #6]
 800c2c0:	4420      	add	r0, r4
 800c2c2:	b200      	sxth	r0, r0
 800c2c4:	1a80      	subs	r0, r0, r2
 800c2c6:	3801      	subs	r0, #1
 800c2c8:	e7f8      	b.n	800c2bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c2ca:	88c0      	ldrh	r0, [r0, #6]
 800c2cc:	4420      	add	r0, r4
 800c2ce:	b200      	sxth	r0, r0
 800c2d0:	1a40      	subs	r0, r0, r1
 800c2d2:	e7f8      	b.n	800c2c6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800c2d4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c2d4:	4b01      	ldr	r3, [pc, #4]	; (800c2dc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c2d6:	2200      	movs	r2, #0
 800c2d8:	601a      	str	r2, [r3, #0]
 800c2da:	4770      	bx	lr
 800c2dc:	2000a53c 	.word	0x2000a53c

0800c2e0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c2e0:	4603      	mov	r3, r0
 800c2e2:	b1c8      	cbz	r0, 800c318 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c2e4:	0c02      	lsrs	r2, r0, #16
 800c2e6:	0412      	lsls	r2, r2, #16
 800c2e8:	b9a2      	cbnz	r2, 800c314 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c2ea:	0403      	lsls	r3, r0, #16
 800c2ec:	2010      	movs	r0, #16
 800c2ee:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c2f2:	bf04      	itt	eq
 800c2f4:	021b      	lsleq	r3, r3, #8
 800c2f6:	3008      	addeq	r0, #8
 800c2f8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c2fc:	bf04      	itt	eq
 800c2fe:	011b      	lsleq	r3, r3, #4
 800c300:	3004      	addeq	r0, #4
 800c302:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c306:	bf04      	itt	eq
 800c308:	009b      	lsleq	r3, r3, #2
 800c30a:	3002      	addeq	r0, #2
 800c30c:	2b00      	cmp	r3, #0
 800c30e:	db04      	blt.n	800c31a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c310:	3001      	adds	r0, #1
 800c312:	4770      	bx	lr
 800c314:	2000      	movs	r0, #0
 800c316:	e7ea      	b.n	800c2ee <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c318:	2020      	movs	r0, #32
 800c31a:	4770      	bx	lr

0800c31c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c320:	b087      	sub	sp, #28
 800c322:	4681      	mov	r9, r0
 800c324:	4698      	mov	r8, r3
 800c326:	4610      	mov	r0, r2
 800c328:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c32c:	460d      	mov	r5, r1
 800c32e:	b981      	cbnz	r1, 800c352 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c330:	b14b      	cbz	r3, 800c346 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c332:	460b      	mov	r3, r1
 800c334:	e9cd 4700 	strd	r4, r7, [sp]
 800c338:	464a      	mov	r2, r9
 800c33a:	4641      	mov	r1, r8
 800c33c:	f7ff ffee 	bl	800c31c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c340:	b007      	add	sp, #28
 800c342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c346:	f04f 33ff 	mov.w	r3, #4294967295
 800c34a:	603b      	str	r3, [r7, #0]
 800c34c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c350:	e7f6      	b.n	800c340 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c352:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c356:	d107      	bne.n	800c368 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c358:	fb09 f602 	mul.w	r6, r9, r2
 800c35c:	fbb6 f0f4 	udiv	r0, r6, r4
 800c360:	fb04 6610 	mls	r6, r4, r0, r6
 800c364:	603e      	str	r6, [r7, #0]
 800c366:	e7eb      	b.n	800c340 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c368:	2601      	movs	r6, #1
 800c36a:	408e      	lsls	r6, r1
 800c36c:	3e01      	subs	r6, #1
 800c36e:	4016      	ands	r6, r2
 800c370:	fa09 fb01 	lsl.w	fp, r9, r1
 800c374:	4630      	mov	r0, r6
 800c376:	fbbb f3f4 	udiv	r3, fp, r4
 800c37a:	9302      	str	r3, [sp, #8]
 800c37c:	fb0a f303 	mul.w	r3, sl, r3
 800c380:	9303      	str	r3, [sp, #12]
 800c382:	f7ff ffad 	bl	800c2e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c386:	464a      	mov	r2, r9
 800c388:	460b      	mov	r3, r1
 800c38a:	e9cd 4700 	strd	r4, r7, [sp]
 800c38e:	4601      	mov	r1, r0
 800c390:	4630      	mov	r0, r6
 800c392:	f7ff ffc3 	bl	800c31c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c396:	9b02      	ldr	r3, [sp, #8]
 800c398:	fb04 bb13 	mls	fp, r4, r3, fp
 800c39c:	4606      	mov	r6, r0
 800c39e:	4658      	mov	r0, fp
 800c3a0:	eb05 0108 	add.w	r1, r5, r8
 800c3a4:	f7ff ff9c 	bl	800c2e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c3a8:	ab05      	add	r3, sp, #20
 800c3aa:	e9cd 4300 	strd	r4, r3, [sp]
 800c3ae:	465a      	mov	r2, fp
 800c3b0:	4603      	mov	r3, r0
 800c3b2:	4650      	mov	r0, sl
 800c3b4:	f7ff ffb2 	bl	800c31c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c3b8:	6839      	ldr	r1, [r7, #0]
 800c3ba:	9a05      	ldr	r2, [sp, #20]
 800c3bc:	9b03      	ldr	r3, [sp, #12]
 800c3be:	4411      	add	r1, r2
 800c3c0:	fbb1 f2f4 	udiv	r2, r1, r4
 800c3c4:	18d3      	adds	r3, r2, r3
 800c3c6:	441e      	add	r6, r3
 800c3c8:	fb04 1412 	mls	r4, r4, r2, r1
 800c3cc:	4430      	add	r0, r6
 800c3ce:	603c      	str	r4, [r7, #0]
 800c3d0:	e7b6      	b.n	800c340 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c3d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c3d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c3d6:	b085      	sub	sp, #20
 800c3d8:	f1b0 0900 	subs.w	r9, r0, #0
 800c3dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c3de:	461d      	mov	r5, r3
 800c3e0:	bfbf      	itttt	lt
 800c3e2:	6823      	ldrlt	r3, [r4, #0]
 800c3e4:	425b      	neglt	r3, r3
 800c3e6:	f1c9 0900 	rsblt	r9, r9, #0
 800c3ea:	6023      	strlt	r3, [r4, #0]
 800c3ec:	bfb4      	ite	lt
 800c3ee:	f04f 36ff 	movlt.w	r6, #4294967295
 800c3f2:	2601      	movge	r6, #1
 800c3f4:	2a00      	cmp	r2, #0
 800c3f6:	4617      	mov	r7, r2
 800c3f8:	da04      	bge.n	800c404 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c3fa:	6823      	ldr	r3, [r4, #0]
 800c3fc:	425b      	negs	r3, r3
 800c3fe:	4257      	negs	r7, r2
 800c400:	4276      	negs	r6, r6
 800c402:	6023      	str	r3, [r4, #0]
 800c404:	2d00      	cmp	r5, #0
 800c406:	4638      	mov	r0, r7
 800c408:	bfba      	itte	lt
 800c40a:	426d      	neglt	r5, r5
 800c40c:	f04f 38ff 	movlt.w	r8, #4294967295
 800c410:	f04f 0801 	movge.w	r8, #1
 800c414:	f7ff ff64 	bl	800c2e0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c418:	ab03      	add	r3, sp, #12
 800c41a:	e9cd 5300 	strd	r5, r3, [sp]
 800c41e:	463a      	mov	r2, r7
 800c420:	4603      	mov	r3, r0
 800c422:	4648      	mov	r0, r9
 800c424:	f7ff ff7a 	bl	800c31c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c428:	6823      	ldr	r3, [r4, #0]
 800c42a:	9a03      	ldr	r2, [sp, #12]
 800c42c:	4546      	cmp	r6, r8
 800c42e:	441a      	add	r2, r3
 800c430:	fb92 f3f5 	sdiv	r3, r2, r5
 800c434:	4418      	add	r0, r3
 800c436:	bf18      	it	ne
 800c438:	4240      	negne	r0, r0
 800c43a:	fb05 2313 	mls	r3, r5, r3, r2
 800c43e:	1c72      	adds	r2, r6, #1
 800c440:	6023      	str	r3, [r4, #0]
 800c442:	d105      	bne.n	800c450 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c444:	2b00      	cmp	r3, #0
 800c446:	f1c3 0200 	rsb	r2, r3, #0
 800c44a:	db0b      	blt.n	800c464 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c44c:	6022      	str	r2, [r4, #0]
 800c44e:	e006      	b.n	800c45e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c450:	2e01      	cmp	r6, #1
 800c452:	d104      	bne.n	800c45e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c454:	2b00      	cmp	r3, #0
 800c456:	da02      	bge.n	800c45e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c458:	442b      	add	r3, r5
 800c45a:	3801      	subs	r0, #1
 800c45c:	6023      	str	r3, [r4, #0]
 800c45e:	b005      	add	sp, #20
 800c460:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c464:	3801      	subs	r0, #1
 800c466:	1b52      	subs	r2, r2, r5
 800c468:	e7f0      	b.n	800c44c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c46c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c46c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c470:	4c1c      	ldr	r4, [pc, #112]	; (800c4e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c472:	6807      	ldr	r7, [r0, #0]
 800c474:	69a3      	ldr	r3, [r4, #24]
 800c476:	4605      	mov	r5, r0
 800c478:	b92b      	cbnz	r3, 800c486 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c47a:	6840      	ldr	r0, [r0, #4]
 800c47c:	e9c5 7000 	strd	r7, r0, [r5]
 800c480:	b004      	add	sp, #16
 800c482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c486:	68a2      	ldr	r2, [r4, #8]
 800c488:	6820      	ldr	r0, [r4, #0]
 800c48a:	ae04      	add	r6, sp, #16
 800c48c:	f04f 0802 	mov.w	r8, #2
 800c490:	fb93 f1f8 	sdiv	r1, r3, r8
 800c494:	440a      	add	r2, r1
 800c496:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c49a:	69e1      	ldr	r1, [r4, #28]
 800c49c:	9600      	str	r6, [sp, #0]
 800c49e:	463a      	mov	r2, r7
 800c4a0:	f7ff ff97 	bl	800c3d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c4a4:	69a3      	ldr	r3, [r4, #24]
 800c4a6:	686a      	ldr	r2, [r5, #4]
 800c4a8:	6a21      	ldr	r1, [r4, #32]
 800c4aa:	9600      	str	r6, [sp, #0]
 800c4ac:	4607      	mov	r7, r0
 800c4ae:	6860      	ldr	r0, [r4, #4]
 800c4b0:	f7ff ff8f 	bl	800c3d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c4b4:	6962      	ldr	r2, [r4, #20]
 800c4b6:	69a3      	ldr	r3, [r4, #24]
 800c4b8:	fb93 f8f8 	sdiv	r8, r3, r8
 800c4bc:	4442      	add	r2, r8
 800c4be:	9203      	str	r2, [sp, #12]
 800c4c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4c2:	682a      	ldr	r2, [r5, #0]
 800c4c4:	9600      	str	r6, [sp, #0]
 800c4c6:	4407      	add	r7, r0
 800c4c8:	68e0      	ldr	r0, [r4, #12]
 800c4ca:	f7ff ff82 	bl	800c3d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c4ce:	9600      	str	r6, [sp, #0]
 800c4d0:	4680      	mov	r8, r0
 800c4d2:	69a3      	ldr	r3, [r4, #24]
 800c4d4:	686a      	ldr	r2, [r5, #4]
 800c4d6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c4d8:	6920      	ldr	r0, [r4, #16]
 800c4da:	f7ff ff7a 	bl	800c3d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c4de:	4440      	add	r0, r8
 800c4e0:	e7cc      	b.n	800c47c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c4e2:	bf00      	nop
 800c4e4:	2000a540 	.word	0x2000a540

0800c4e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c4e8:	4b07      	ldr	r3, [pc, #28]	; (800c508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c4ea:	781b      	ldrb	r3, [r3, #0]
 800c4ec:	2b01      	cmp	r3, #1
 800c4ee:	d109      	bne.n	800c504 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c4f0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c4f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c4f8:	8003      	strh	r3, [r0, #0]
 800c4fa:	4b04      	ldr	r3, [pc, #16]	; (800c50c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c4fc:	881b      	ldrh	r3, [r3, #0]
 800c4fe:	3b01      	subs	r3, #1
 800c500:	1a9b      	subs	r3, r3, r2
 800c502:	800b      	strh	r3, [r1, #0]
 800c504:	4770      	bx	lr
 800c506:	bf00      	nop
 800c508:	2000a52c 	.word	0x2000a52c
 800c50c:	2000a528 	.word	0x2000a528

0800c510 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c510:	b510      	push	{r4, lr}
 800c512:	4b07      	ldr	r3, [pc, #28]	; (800c530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c514:	781b      	ldrb	r3, [r3, #0]
 800c516:	2b01      	cmp	r3, #1
 800c518:	d108      	bne.n	800c52c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c51a:	4b06      	ldr	r3, [pc, #24]	; (800c534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c51c:	880c      	ldrh	r4, [r1, #0]
 800c51e:	881b      	ldrh	r3, [r3, #0]
 800c520:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c524:	3b01      	subs	r3, #1
 800c526:	1b1b      	subs	r3, r3, r4
 800c528:	8003      	strh	r3, [r0, #0]
 800c52a:	800a      	strh	r2, [r1, #0]
 800c52c:	bd10      	pop	{r4, pc}
 800c52e:	bf00      	nop
 800c530:	2000a52c 	.word	0x2000a52c
 800c534:	2000a528 	.word	0x2000a528

0800c538 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c538:	b510      	push	{r4, lr}
 800c53a:	4b0a      	ldr	r3, [pc, #40]	; (800c564 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c53c:	781b      	ldrb	r3, [r3, #0]
 800c53e:	2b01      	cmp	r3, #1
 800c540:	d10e      	bne.n	800c560 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c542:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c546:	8843      	ldrh	r3, [r0, #2]
 800c548:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c54c:	8044      	strh	r4, [r0, #2]
 800c54e:	18ca      	adds	r2, r1, r3
 800c550:	4b05      	ldr	r3, [pc, #20]	; (800c568 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c552:	881b      	ldrh	r3, [r3, #0]
 800c554:	1a9b      	subs	r3, r3, r2
 800c556:	8003      	strh	r3, [r0, #0]
 800c558:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c55c:	80c3      	strh	r3, [r0, #6]
 800c55e:	8081      	strh	r1, [r0, #4]
 800c560:	bd10      	pop	{r4, pc}
 800c562:	bf00      	nop
 800c564:	2000a52c 	.word	0x2000a52c
 800c568:	2000a528 	.word	0x2000a528

0800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c56c:	4b08      	ldr	r3, [pc, #32]	; (800c590 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c56e:	781b      	ldrb	r3, [r3, #0]
 800c570:	2b01      	cmp	r3, #1
 800c572:	d10c      	bne.n	800c58e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c574:	8803      	ldrh	r3, [r0, #0]
 800c576:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c57a:	8842      	ldrh	r2, [r0, #2]
 800c57c:	8002      	strh	r2, [r0, #0]
 800c57e:	185a      	adds	r2, r3, r1
 800c580:	4b04      	ldr	r3, [pc, #16]	; (800c594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c582:	881b      	ldrh	r3, [r3, #0]
 800c584:	1a9b      	subs	r3, r3, r2
 800c586:	8043      	strh	r3, [r0, #2]
 800c588:	88c3      	ldrh	r3, [r0, #6]
 800c58a:	8083      	strh	r3, [r0, #4]
 800c58c:	80c1      	strh	r1, [r0, #6]
 800c58e:	4770      	bx	lr
 800c590:	2000a52c 	.word	0x2000a52c
 800c594:	2000a528 	.word	0x2000a528

0800c598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c598:	b510      	push	{r4, lr}
 800c59a:	4b07      	ldr	r3, [pc, #28]	; (800c5b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c59c:	781b      	ldrb	r3, [r3, #0]
 800c59e:	2b01      	cmp	r3, #1
 800c5a0:	d108      	bne.n	800c5b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c5a2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c5a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c5aa:	8003      	strh	r3, [r0, #0]
 800c5ac:	8893      	ldrh	r3, [r2, #4]
 800c5ae:	3b01      	subs	r3, #1
 800c5b0:	1b1b      	subs	r3, r3, r4
 800c5b2:	800b      	strh	r3, [r1, #0]
 800c5b4:	bd10      	pop	{r4, pc}
 800c5b6:	bf00      	nop
 800c5b8:	2000a52c 	.word	0x2000a52c

0800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c5bc:	b510      	push	{r4, lr}
 800c5be:	4b0a      	ldr	r3, [pc, #40]	; (800c5e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c5c0:	781b      	ldrb	r3, [r3, #0]
 800c5c2:	2b01      	cmp	r3, #1
 800c5c4:	460a      	mov	r2, r1
 800c5c6:	d10d      	bne.n	800c5e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c5c8:	8881      	ldrh	r1, [r0, #4]
 800c5ca:	8803      	ldrh	r3, [r0, #0]
 800c5cc:	440b      	add	r3, r1
 800c5ce:	4601      	mov	r1, r0
 800c5d0:	3b01      	subs	r3, #1
 800c5d2:	f821 3b02 	strh.w	r3, [r1], #2
 800c5d6:	f7ff ffdf 	bl	800c598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c5da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c5de:	88c2      	ldrh	r2, [r0, #6]
 800c5e0:	8082      	strh	r2, [r0, #4]
 800c5e2:	80c3      	strh	r3, [r0, #6]
 800c5e4:	bd10      	pop	{r4, pc}
 800c5e6:	bf00      	nop
 800c5e8:	2000a52c 	.word	0x2000a52c

0800c5ec <_ZN8touchgfx11Application13requestRedrawEv>:
 800c5ec:	4b06      	ldr	r3, [pc, #24]	; (800c608 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c5ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c5f2:	4b06      	ldr	r3, [pc, #24]	; (800c60c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c5f4:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c5f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c5fc:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c600:	2100      	movs	r1, #0
 800c602:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c606:	4770      	bx	lr
 800c608:	2000a528 	.word	0x2000a528
 800c60c:	2000a52a 	.word	0x2000a52a

0800c610 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c610:	4b03      	ldr	r3, [pc, #12]	; (800c620 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c612:	6818      	ldr	r0, [r3, #0]
 800c614:	b110      	cbz	r0, 800c61c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c616:	6803      	ldr	r3, [r0, #0]
 800c618:	699b      	ldr	r3, [r3, #24]
 800c61a:	4718      	bx	r3
 800c61c:	4770      	bx	lr
 800c61e:	bf00      	nop
 800c620:	2000a570 	.word	0x2000a570

0800c624 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c624:	4770      	bx	lr
	...

0800c628 <_ZN8touchgfx11Application4drawEv>:
 800c628:	b507      	push	{r0, r1, r2, lr}
 800c62a:	4b09      	ldr	r3, [pc, #36]	; (800c650 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c62c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c630:	4b08      	ldr	r3, [pc, #32]	; (800c654 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c632:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c636:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c63a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c63e:	6803      	ldr	r3, [r0, #0]
 800c640:	2100      	movs	r1, #0
 800c642:	9100      	str	r1, [sp, #0]
 800c644:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c646:	4669      	mov	r1, sp
 800c648:	4798      	blx	r3
 800c64a:	b003      	add	sp, #12
 800c64c:	f85d fb04 	ldr.w	pc, [sp], #4
 800c650:	2000a528 	.word	0x2000a528
 800c654:	2000a52a 	.word	0x2000a52a

0800c658 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c658:	4b03      	ldr	r3, [pc, #12]	; (800c668 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c65a:	6818      	ldr	r0, [r3, #0]
 800c65c:	b110      	cbz	r0, 800c664 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c65e:	6803      	ldr	r3, [r0, #0]
 800c660:	69db      	ldr	r3, [r3, #28]
 800c662:	4718      	bx	r3
 800c664:	4770      	bx	lr
 800c666:	bf00      	nop
 800c668:	2000a570 	.word	0x2000a570

0800c66c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c66c:	4b03      	ldr	r3, [pc, #12]	; (800c67c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c66e:	6818      	ldr	r0, [r3, #0]
 800c670:	b110      	cbz	r0, 800c678 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c672:	6803      	ldr	r3, [r0, #0]
 800c674:	6a1b      	ldr	r3, [r3, #32]
 800c676:	4718      	bx	r3
 800c678:	4770      	bx	lr
 800c67a:	bf00      	nop
 800c67c:	2000a570 	.word	0x2000a570

0800c680 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800c680:	2300      	movs	r3, #0
 800c682:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800c686:	4770      	bx	lr

0800c688 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c688:	4b03      	ldr	r3, [pc, #12]	; (800c698 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c68a:	6818      	ldr	r0, [r3, #0]
 800c68c:	b110      	cbz	r0, 800c694 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c68e:	6803      	ldr	r3, [r0, #0]
 800c690:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c692:	4718      	bx	r3
 800c694:	4770      	bx	lr
 800c696:	bf00      	nop
 800c698:	2000a570 	.word	0x2000a570

0800c69c <_ZN8touchgfx11ApplicationD1Ev>:
 800c69c:	4770      	bx	lr

0800c69e <_ZN8touchgfx11ApplicationD0Ev>:
 800c69e:	b510      	push	{r4, lr}
 800c6a0:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c6a4:	4604      	mov	r4, r0
 800c6a6:	f00f fac7 	bl	801bc38 <_ZdlPvj>
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	bd10      	pop	{r4, pc}
	...

0800c6b0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800c6b0:	b570      	push	{r4, r5, r6, lr}
 800c6b2:	4d38      	ldr	r5, [pc, #224]	; (800c794 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800c6b4:	4604      	mov	r4, r0
 800c6b6:	6828      	ldr	r0, [r5, #0]
 800c6b8:	b140      	cbz	r0, 800c6cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c6ba:	7a03      	ldrb	r3, [r0, #8]
 800c6bc:	b933      	cbnz	r3, 800c6cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c6be:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800c6c2:	6803      	ldr	r3, [r0, #0]
 800c6c4:	689b      	ldr	r3, [r3, #8]
 800c6c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c6ca:	4718      	bx	r3
 800c6cc:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800c6d0:	b97b      	cbnz	r3, 800c6f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c6d2:	b170      	cbz	r0, 800c6f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c6d4:	7a03      	ldrb	r3, [r0, #8]
 800c6d6:	b163      	cbz	r3, 800c6f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c6d8:	4b2f      	ldr	r3, [pc, #188]	; (800c798 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c6da:	6818      	ldr	r0, [r3, #0]
 800c6dc:	b110      	cbz	r0, 800c6e4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c6de:	6803      	ldr	r3, [r0, #0]
 800c6e0:	691b      	ldr	r3, [r3, #16]
 800c6e2:	4798      	blx	r3
 800c6e4:	6828      	ldr	r0, [r5, #0]
 800c6e6:	6803      	ldr	r3, [r0, #0]
 800c6e8:	68db      	ldr	r3, [r3, #12]
 800c6ea:	4798      	blx	r3
 800c6ec:	2301      	movs	r3, #1
 800c6ee:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800c6f2:	2500      	movs	r5, #0
 800c6f4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c6f8:	42a8      	cmp	r0, r5
 800c6fa:	dd0c      	ble.n	800c716 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c6fc:	1963      	adds	r3, r4, r5
 800c6fe:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c702:	b132      	cbz	r2, 800c712 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c704:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c708:	4413      	add	r3, r2
 800c70a:	6858      	ldr	r0, [r3, #4]
 800c70c:	6803      	ldr	r3, [r0, #0]
 800c70e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c710:	4798      	blx	r3
 800c712:	3501      	adds	r5, #1
 800c714:	e7ee      	b.n	800c6f4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c716:	2300      	movs	r3, #0
 800c718:	461a      	mov	r2, r3
 800c71a:	4298      	cmp	r0, r3
 800c71c:	d10f      	bne.n	800c73e <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800c71e:	1d25      	adds	r5, r4, #4
 800c720:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c724:	4291      	cmp	r1, r2
 800c726:	dd2d      	ble.n	800c784 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800c728:	1e48      	subs	r0, r1, #1
 800c72a:	b280      	uxth	r0, r0
 800c72c:	4288      	cmp	r0, r1
 800c72e:	d31a      	bcc.n	800c766 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800c730:	4b1a      	ldr	r3, [pc, #104]	; (800c79c <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800c732:	4a1b      	ldr	r2, [pc, #108]	; (800c7a0 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800c734:	481b      	ldr	r0, [pc, #108]	; (800c7a4 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800c736:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800c73a:	f00f faab 	bl	801bc94 <__assert_func>
 800c73e:	18e1      	adds	r1, r4, r3
 800c740:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c744:	b16d      	cbz	r5, 800c762 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800c746:	429a      	cmp	r2, r3
 800c748:	d00a      	beq.n	800c760 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800c74a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c74e:	4431      	add	r1, r6
 800c750:	684e      	ldr	r6, [r1, #4]
 800c752:	b291      	uxth	r1, r2
 800c754:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c758:	604e      	str	r6, [r1, #4]
 800c75a:	18a1      	adds	r1, r4, r2
 800c75c:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c760:	3201      	adds	r2, #1
 800c762:	3301      	adds	r3, #1
 800c764:	e7d9      	b.n	800c71a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c766:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c76a:	3304      	adds	r3, #4
 800c76c:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c770:	428b      	cmp	r3, r1
 800c772:	d004      	beq.n	800c77e <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800c774:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c778:	f843 6c04 	str.w	r6, [r3, #-4]
 800c77c:	e7f8      	b.n	800c770 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c77e:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c782:	e7cd      	b.n	800c720 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c784:	4b04      	ldr	r3, [pc, #16]	; (800c798 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c786:	6818      	ldr	r0, [r3, #0]
 800c788:	b110      	cbz	r0, 800c790 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800c78a:	6803      	ldr	r3, [r0, #0]
 800c78c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c78e:	e79a      	b.n	800c6c6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c790:	bd70      	pop	{r4, r5, r6, pc}
 800c792:	bf00      	nop
 800c794:	2000a574 	.word	0x2000a574
 800c798:	2000a570 	.word	0x2000a570
 800c79c:	0801ed49 	.word	0x0801ed49
 800c7a0:	0801ef3c 	.word	0x0801ef3c
 800c7a4:	0801ed57 	.word	0x0801ed57

0800c7a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c7a8:	b570      	push	{r4, r5, r6, lr}
 800c7aa:	4606      	mov	r6, r0
 800c7ac:	460c      	mov	r4, r1
 800c7ae:	b929      	cbnz	r1, 800c7bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c7b0:	4b0c      	ldr	r3, [pc, #48]	; (800c7e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c7b2:	4a0d      	ldr	r2, [pc, #52]	; (800c7e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c7b4:	480d      	ldr	r0, [pc, #52]	; (800c7ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c7b6:	215e      	movs	r1, #94	; 0x5e
 800c7b8:	f00f fa6c 	bl	801bc94 <__assert_func>
 800c7bc:	4d0c      	ldr	r5, [pc, #48]	; (800c7f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c7be:	2300      	movs	r3, #0
 800c7c0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c7c4:	6828      	ldr	r0, [r5, #0]
 800c7c6:	b110      	cbz	r0, 800c7ce <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c7c8:	6803      	ldr	r3, [r0, #0]
 800c7ca:	695b      	ldr	r3, [r3, #20]
 800c7cc:	4798      	blx	r3
 800c7ce:	602c      	str	r4, [r5, #0]
 800c7d0:	6823      	ldr	r3, [r4, #0]
 800c7d2:	4620      	mov	r0, r4
 800c7d4:	68db      	ldr	r3, [r3, #12]
 800c7d6:	4798      	blx	r3
 800c7d8:	6833      	ldr	r3, [r6, #0]
 800c7da:	4630      	mov	r0, r6
 800c7dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c7de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7e2:	4718      	bx	r3
 800c7e4:	0801ed15 	.word	0x0801ed15
 800c7e8:	0801edfc 	.word	0x0801edfc
 800c7ec:	0801ed1f 	.word	0x0801ed1f
 800c7f0:	2000a570 	.word	0x2000a570

0800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c7f4:	b510      	push	{r4, lr}
 800c7f6:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c7fa:	888a      	ldrh	r2, [r1, #4]
 800c7fc:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c800:	4422      	add	r2, r4
 800c802:	b212      	sxth	r2, r2
 800c804:	4293      	cmp	r3, r2
 800c806:	da15      	bge.n	800c834 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c808:	8882      	ldrh	r2, [r0, #4]
 800c80a:	4413      	add	r3, r2
 800c80c:	b21b      	sxth	r3, r3
 800c80e:	429c      	cmp	r4, r3
 800c810:	da10      	bge.n	800c834 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c812:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c816:	88c9      	ldrh	r1, [r1, #6]
 800c818:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c81c:	4419      	add	r1, r3
 800c81e:	b209      	sxth	r1, r1
 800c820:	428a      	cmp	r2, r1
 800c822:	da07      	bge.n	800c834 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c824:	88c0      	ldrh	r0, [r0, #6]
 800c826:	4410      	add	r0, r2
 800c828:	b200      	sxth	r0, r0
 800c82a:	4283      	cmp	r3, r0
 800c82c:	bfac      	ite	ge
 800c82e:	2000      	movge	r0, #0
 800c830:	2001      	movlt	r0, #1
 800c832:	bd10      	pop	{r4, pc}
 800c834:	2000      	movs	r0, #0
 800c836:	e7fc      	b.n	800c832 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c838 <_ZN8touchgfx4Rect10restrictToEss>:
 800c838:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c83c:	2b00      	cmp	r3, #0
 800c83e:	b510      	push	{r4, lr}
 800c840:	da04      	bge.n	800c84c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800c842:	8884      	ldrh	r4, [r0, #4]
 800c844:	4423      	add	r3, r4
 800c846:	8083      	strh	r3, [r0, #4]
 800c848:	2300      	movs	r3, #0
 800c84a:	8003      	strh	r3, [r0, #0]
 800c84c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c850:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c854:	1b09      	subs	r1, r1, r4
 800c856:	428b      	cmp	r3, r1
 800c858:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c85c:	bfc8      	it	gt
 800c85e:	8081      	strhgt	r1, [r0, #4]
 800c860:	2b00      	cmp	r3, #0
 800c862:	da04      	bge.n	800c86e <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800c864:	88c1      	ldrh	r1, [r0, #6]
 800c866:	440b      	add	r3, r1
 800c868:	80c3      	strh	r3, [r0, #6]
 800c86a:	2300      	movs	r3, #0
 800c86c:	8043      	strh	r3, [r0, #2]
 800c86e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c872:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800c876:	1a52      	subs	r2, r2, r1
 800c878:	4293      	cmp	r3, r2
 800c87a:	bfc8      	it	gt
 800c87c:	80c2      	strhgt	r2, [r0, #6]
 800c87e:	bd10      	pop	{r4, pc}

0800c880 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c880:	b510      	push	{r4, lr}
 800c882:	4b10      	ldr	r3, [pc, #64]	; (800c8c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800c884:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c888:	4b0f      	ldr	r3, [pc, #60]	; (800c8c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800c88a:	460c      	mov	r4, r1
 800c88c:	4620      	mov	r0, r4
 800c88e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c892:	f7ff ffd1 	bl	800c838 <_ZN8touchgfx4Rect10restrictToEss>
 800c896:	4b0d      	ldr	r3, [pc, #52]	; (800c8cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800c898:	6818      	ldr	r0, [r3, #0]
 800c89a:	b190      	cbz	r0, 800c8c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800c89c:	6803      	ldr	r3, [r0, #0]
 800c89e:	4621      	mov	r1, r4
 800c8a0:	689b      	ldr	r3, [r3, #8]
 800c8a2:	4798      	blx	r3
 800c8a4:	4b0a      	ldr	r3, [pc, #40]	; (800c8d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800c8a6:	6818      	ldr	r0, [r3, #0]
 800c8a8:	b118      	cbz	r0, 800c8b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800c8aa:	6803      	ldr	r3, [r0, #0]
 800c8ac:	4621      	mov	r1, r4
 800c8ae:	689b      	ldr	r3, [r3, #8]
 800c8b0:	4798      	blx	r3
 800c8b2:	4b08      	ldr	r3, [pc, #32]	; (800c8d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800c8b4:	6818      	ldr	r0, [r3, #0]
 800c8b6:	6803      	ldr	r3, [r0, #0]
 800c8b8:	4621      	mov	r1, r4
 800c8ba:	69db      	ldr	r3, [r3, #28]
 800c8bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8c0:	4718      	bx	r3
 800c8c2:	bd10      	pop	{r4, pc}
 800c8c4:	2000a52a 	.word	0x2000a52a
 800c8c8:	2000a528 	.word	0x2000a528
 800c8cc:	2000a570 	.word	0x2000a570
 800c8d0:	2000a56c 	.word	0x2000a56c
 800c8d4:	2000a534 	.word	0x2000a534

0800c8d8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c8d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c8da:	4606      	mov	r6, r0
 800c8dc:	4608      	mov	r0, r1
 800c8de:	460f      	mov	r7, r1
 800c8e0:	f7fc fd49 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c8e4:	b9e8      	cbnz	r0, 800c922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c8e6:	f9b7 5000 	ldrsh.w	r5, [r7]
 800c8ea:	f9b6 4000 	ldrsh.w	r4, [r6]
 800c8ee:	42a5      	cmp	r5, r4
 800c8f0:	db17      	blt.n	800c922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c8f2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c8f6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800c8fa:	429a      	cmp	r2, r3
 800c8fc:	db11      	blt.n	800c922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c8fe:	88b9      	ldrh	r1, [r7, #4]
 800c900:	440d      	add	r5, r1
 800c902:	88b1      	ldrh	r1, [r6, #4]
 800c904:	440c      	add	r4, r1
 800c906:	b22d      	sxth	r5, r5
 800c908:	b224      	sxth	r4, r4
 800c90a:	42a5      	cmp	r5, r4
 800c90c:	dc09      	bgt.n	800c922 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c90e:	88f8      	ldrh	r0, [r7, #6]
 800c910:	4410      	add	r0, r2
 800c912:	88f2      	ldrh	r2, [r6, #6]
 800c914:	4413      	add	r3, r2
 800c916:	b200      	sxth	r0, r0
 800c918:	b21b      	sxth	r3, r3
 800c91a:	4298      	cmp	r0, r3
 800c91c:	bfcc      	ite	gt
 800c91e:	2000      	movgt	r0, #0
 800c920:	2001      	movle	r0, #1
 800c922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c924 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c926:	4604      	mov	r4, r0
 800c928:	4608      	mov	r0, r1
 800c92a:	460d      	mov	r5, r1
 800c92c:	f7fc fd23 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c930:	b978      	cbnz	r0, 800c952 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c932:	4620      	mov	r0, r4
 800c934:	f7fc fd1f 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c938:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c93c:	b150      	cbz	r0, 800c954 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c93e:	8026      	strh	r6, [r4, #0]
 800c940:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c944:	8063      	strh	r3, [r4, #2]
 800c946:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c94a:	80a3      	strh	r3, [r4, #4]
 800c94c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c950:	80e3      	strh	r3, [r4, #6]
 800c952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c954:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c958:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c95c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c960:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c964:	88ed      	ldrh	r5, [r5, #6]
 800c966:	42b1      	cmp	r1, r6
 800c968:	460f      	mov	r7, r1
 800c96a:	bfa8      	it	ge
 800c96c:	4637      	movge	r7, r6
 800c96e:	4293      	cmp	r3, r2
 800c970:	4618      	mov	r0, r3
 800c972:	4466      	add	r6, ip
 800c974:	bfa8      	it	ge
 800c976:	4610      	movge	r0, r2
 800c978:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c97c:	8027      	strh	r7, [r4, #0]
 800c97e:	442a      	add	r2, r5
 800c980:	88e5      	ldrh	r5, [r4, #6]
 800c982:	8060      	strh	r0, [r4, #2]
 800c984:	4461      	add	r1, ip
 800c986:	442b      	add	r3, r5
 800c988:	b236      	sxth	r6, r6
 800c98a:	b209      	sxth	r1, r1
 800c98c:	b212      	sxth	r2, r2
 800c98e:	b21b      	sxth	r3, r3
 800c990:	428e      	cmp	r6, r1
 800c992:	bfac      	ite	ge
 800c994:	ebc7 0106 	rsbge	r1, r7, r6
 800c998:	ebc7 0101 	rsblt	r1, r7, r1
 800c99c:	429a      	cmp	r2, r3
 800c99e:	bfac      	ite	ge
 800c9a0:	ebc0 0202 	rsbge	r2, r0, r2
 800c9a4:	ebc0 0203 	rsblt	r2, r0, r3
 800c9a8:	80a1      	strh	r1, [r4, #4]
 800c9aa:	80e2      	strh	r2, [r4, #6]
 800c9ac:	e7d1      	b.n	800c952 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c9b0 <_ZN8touchgfx11Application11getInstanceEv>:
 800c9b0:	4b01      	ldr	r3, [pc, #4]	; (800c9b8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c9b2:	6818      	ldr	r0, [r3, #0]
 800c9b4:	4770      	bx	lr
 800c9b6:	bf00      	nop
 800c9b8:	2000a580 	.word	0x2000a580

0800c9bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800c9bc:	2300      	movs	r3, #0
 800c9be:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c9c2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800c9c6:	30a8      	adds	r0, #168	; 0xa8
 800c9c8:	f802 3b01 	strb.w	r3, [r2], #1
 800c9cc:	4282      	cmp	r2, r0
 800c9ce:	d1fb      	bne.n	800c9c8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800c9d0:	4770      	bx	lr

0800c9d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c9d2:	4603      	mov	r3, r0
 800c9d4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800c9d8:	2200      	movs	r2, #0
 800c9da:	801a      	strh	r2, [r3, #0]
 800c9dc:	805a      	strh	r2, [r3, #2]
 800c9de:	809a      	strh	r2, [r3, #4]
 800c9e0:	80da      	strh	r2, [r3, #6]
 800c9e2:	3308      	adds	r3, #8
 800c9e4:	428b      	cmp	r3, r1
 800c9e6:	d1f8      	bne.n	800c9da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c9e8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c9ec:	4770      	bx	lr
	...

0800c9f0 <_ZN8touchgfx11ApplicationC1Ev>:
 800c9f0:	b570      	push	{r4, r5, r6, lr}
 800c9f2:	4b19      	ldr	r3, [pc, #100]	; (800ca58 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800c9f4:	6003      	str	r3, [r0, #0]
 800c9f6:	2500      	movs	r5, #0
 800c9f8:	4604      	mov	r4, r0
 800c9fa:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800c9fe:	30a8      	adds	r0, #168	; 0xa8
 800ca00:	f7ff ffe7 	bl	800c9d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ca04:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ca08:	f7ff ffe3 	bl	800c9d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ca0c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ca10:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ca14:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ca18:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ca1c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ca20:	490e      	ldr	r1, [pc, #56]	; (800ca5c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ca22:	480f      	ldr	r0, [pc, #60]	; (800ca60 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ca24:	4e0f      	ldr	r6, [pc, #60]	; (800ca64 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ca26:	f00e ffdf 	bl	801b9e8 <CRC_Lock>
 800ca2a:	4b0f      	ldr	r3, [pc, #60]	; (800ca68 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ca2c:	b158      	cbz	r0, 800ca46 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800ca2e:	801d      	strh	r5, [r3, #0]
 800ca30:	4a0e      	ldr	r2, [pc, #56]	; (800ca6c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ca32:	2300      	movs	r3, #0
 800ca34:	6013      	str	r3, [r2, #0]
 800ca36:	4a0e      	ldr	r2, [pc, #56]	; (800ca70 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ca38:	6033      	str	r3, [r6, #0]
 800ca3a:	4620      	mov	r0, r4
 800ca3c:	6013      	str	r3, [r2, #0]
 800ca3e:	f7ff ffbd 	bl	800c9bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ca42:	4620      	mov	r0, r4
 800ca44:	bd70      	pop	{r4, r5, r6, pc}
 800ca46:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ca4a:	2002      	movs	r0, #2
 800ca4c:	801a      	strh	r2, [r3, #0]
 800ca4e:	6030      	str	r0, [r6, #0]
 800ca50:	f001 fa14 	bl	800de7c <_ZN8touchgfx6Screen4drawEv>
 800ca54:	e7ec      	b.n	800ca30 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800ca56:	bf00      	nop
 800ca58:	0801edb8 	.word	0x0801edb8
 800ca5c:	b5e8b5cd 	.word	0xb5e8b5cd
 800ca60:	f407a5c2 	.word	0xf407a5c2
 800ca64:	2000a570 	.word	0x2000a570
 800ca68:	20000060 	.word	0x20000060
 800ca6c:	2000a580 	.word	0x2000a580
 800ca70:	2000a574 	.word	0x2000a574

0800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ca74:	b510      	push	{r4, lr}
 800ca76:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ca7a:	428b      	cmp	r3, r1
 800ca7c:	d806      	bhi.n	800ca8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800ca7e:	4b0b      	ldr	r3, [pc, #44]	; (800caac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800ca80:	4a0b      	ldr	r2, [pc, #44]	; (800cab0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800ca82:	480c      	ldr	r0, [pc, #48]	; (800cab4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800ca84:	f240 11dd 	movw	r1, #477	; 0x1dd
 800ca88:	f00f f904 	bl	801bc94 <__assert_func>
 800ca8c:	3b01      	subs	r3, #1
 800ca8e:	b29b      	uxth	r3, r3
 800ca90:	428b      	cmp	r3, r1
 800ca92:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ca96:	d908      	bls.n	800caaa <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800ca98:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ca9c:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800caa0:	681a      	ldr	r2, [r3, #0]
 800caa2:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800caa6:	685a      	ldr	r2, [r3, #4]
 800caa8:	6062      	str	r2, [r4, #4]
 800caaa:	bd10      	pop	{r4, pc}
 800caac:	0801ed49 	.word	0x0801ed49
 800cab0:	0801ee40 	.word	0x0801ee40
 800cab4:	0801ed57 	.word	0x0801ed57

0800cab8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800cab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800caba:	466b      	mov	r3, sp
 800cabc:	e883 0006 	stmia.w	r3, {r1, r2}
 800cac0:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800cac4:	2a07      	cmp	r2, #7
 800cac6:	4604      	mov	r4, r0
 800cac8:	d906      	bls.n	800cad8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800caca:	4b09      	ldr	r3, [pc, #36]	; (800caf0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800cacc:	4a09      	ldr	r2, [pc, #36]	; (800caf4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800cace:	480a      	ldr	r0, [pc, #40]	; (800caf8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800cad0:	f240 11a3 	movw	r1, #419	; 0x1a3
 800cad4:	f00f f8de 	bl	801bc94 <__assert_func>
 800cad8:	1c51      	adds	r1, r2, #1
 800cada:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cade:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800cae2:	cb03      	ldmia	r3!, {r0, r1}
 800cae4:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800cae8:	6069      	str	r1, [r5, #4]
 800caea:	b003      	add	sp, #12
 800caec:	bd30      	pop	{r4, r5, pc}
 800caee:	bf00      	nop
 800caf0:	0801ed80 	.word	0x0801ed80
 800caf4:	0801eed6 	.word	0x0801eed6
 800caf8:	0801ed57 	.word	0x0801ed57

0800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb00:	4b94      	ldr	r3, [pc, #592]	; (800cd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800cb02:	b08d      	sub	sp, #52	; 0x34
 800cb04:	ac08      	add	r4, sp, #32
 800cb06:	e884 0006 	stmia.w	r4, {r1, r2}
 800cb0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb0e:	4b92      	ldr	r3, [pc, #584]	; (800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800cb10:	4683      	mov	fp, r0
 800cb12:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cb16:	4620      	mov	r0, r4
 800cb18:	f7ff fe8e 	bl	800c838 <_ZN8touchgfx4Rect10restrictToEss>
 800cb1c:	4620      	mov	r0, r4
 800cb1e:	f7fc fc2a 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb22:	2800      	cmp	r0, #0
 800cb24:	d16a      	bne.n	800cbfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cb26:	9402      	str	r4, [sp, #8]
 800cb28:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cb2c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cb30:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800cb34:	2400      	movs	r4, #0
 800cb36:	9301      	str	r3, [sp, #4]
 800cb38:	36a0      	adds	r6, #160	; 0xa0
 800cb3a:	42a5      	cmp	r5, r4
 800cb3c:	d00d      	beq.n	800cb5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800cb3e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800cb42:	9802      	ldr	r0, [sp, #8]
 800cb44:	f7ff fec8 	bl	800c8d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cb48:	b128      	cbz	r0, 800cb56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800cb4a:	1e69      	subs	r1, r5, #1
 800cb4c:	1b09      	subs	r1, r1, r4
 800cb4e:	b289      	uxth	r1, r1
 800cb50:	9801      	ldr	r0, [sp, #4]
 800cb52:	f7ff ff8f 	bl	800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cb56:	3401      	adds	r4, #1
 800cb58:	e7ef      	b.n	800cb3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800cb5a:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cb5e:	9703      	str	r7, [sp, #12]
 800cb60:	1e7b      	subs	r3, r7, #1
 800cb62:	9300      	str	r3, [sp, #0]
 800cb64:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800cb68:	2400      	movs	r4, #0
 800cb6a:	4655      	mov	r5, sl
 800cb6c:	9704      	str	r7, [sp, #16]
 800cb6e:	4626      	mov	r6, r4
 800cb70:	9b04      	ldr	r3, [sp, #16]
 800cb72:	2b00      	cmp	r3, #0
 800cb74:	d078      	beq.n	800cc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800cb76:	9902      	ldr	r1, [sp, #8]
 800cb78:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cb7c:	f7ff fe3a 	bl	800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cb80:	b360      	cbz	r0, 800cbdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cb82:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800cb86:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800cb8a:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800cb8e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800cb92:	45e6      	cmp	lr, ip
 800cb94:	db35      	blt.n	800cc02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cb96:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cb9a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cb9e:	4472      	add	r2, lr
 800cba0:	4463      	add	r3, ip
 800cba2:	b212      	sxth	r2, r2
 800cba4:	b21b      	sxth	r3, r3
 800cba6:	429a      	cmp	r2, r3
 800cba8:	dc2b      	bgt.n	800cc02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cbaa:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cbae:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cbb2:	fa1f f288 	uxth.w	r2, r8
 800cbb6:	4413      	add	r3, r2
 800cbb8:	b29b      	uxth	r3, r3
 800cbba:	45c1      	cmp	r9, r8
 800cbbc:	fa0f fe83 	sxth.w	lr, r3
 800cbc0:	fa1f fc89 	uxth.w	ip, r9
 800cbc4:	db0f      	blt.n	800cbe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cbc6:	eba3 030c 	sub.w	r3, r3, ip
 800cbca:	1ac9      	subs	r1, r1, r3
 800cbcc:	b209      	sxth	r1, r1
 800cbce:	2900      	cmp	r1, #0
 800cbd0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cbd4:	dd12      	ble.n	800cbfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cbd6:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800cbda:	4604      	mov	r4, r0
 800cbdc:	9b04      	ldr	r3, [sp, #16]
 800cbde:	3b01      	subs	r3, #1
 800cbe0:	9304      	str	r3, [sp, #16]
 800cbe2:	3d08      	subs	r5, #8
 800cbe4:	e7c4      	b.n	800cb70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800cbe6:	4461      	add	r1, ip
 800cbe8:	b209      	sxth	r1, r1
 800cbea:	4571      	cmp	r1, lr
 800cbec:	dc3a      	bgt.n	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cbee:	eba2 020c 	sub.w	r2, r2, ip
 800cbf2:	b212      	sxth	r2, r2
 800cbf4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cbf8:	2a00      	cmp	r2, #0
 800cbfa:	dcee      	bgt.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800cbfc:	b00d      	add	sp, #52	; 0x34
 800cbfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc02:	45c1      	cmp	r9, r8
 800cc04:	db2e      	blt.n	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cc06:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800cc0a:	4499      	add	r9, r3
 800cc0c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cc10:	4498      	add	r8, r3
 800cc12:	fa0f f989 	sxth.w	r9, r9
 800cc16:	fa0f f888 	sxth.w	r8, r8
 800cc1a:	45c1      	cmp	r9, r8
 800cc1c:	dc22      	bgt.n	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cc1e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cc22:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800cc26:	fa1f f28c 	uxth.w	r2, ip
 800cc2a:	4413      	add	r3, r2
 800cc2c:	b29b      	uxth	r3, r3
 800cc2e:	45e6      	cmp	lr, ip
 800cc30:	fa1f f88e 	uxth.w	r8, lr
 800cc34:	fa0f f983 	sxth.w	r9, r3
 800cc38:	db0a      	blt.n	800cc50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800cc3a:	eba3 0308 	sub.w	r3, r3, r8
 800cc3e:	1ac9      	subs	r1, r1, r3
 800cc40:	b209      	sxth	r1, r1
 800cc42:	2900      	cmp	r1, #0
 800cc44:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800cc48:	ddd8      	ble.n	800cbfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cc4a:	f8ad 9020 	strh.w	r9, [sp, #32]
 800cc4e:	e7c4      	b.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800cc50:	4441      	add	r1, r8
 800cc52:	b209      	sxth	r1, r1
 800cc54:	4549      	cmp	r1, r9
 800cc56:	dc05      	bgt.n	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cc58:	eba2 0208 	sub.w	r2, r2, r8
 800cc5c:	b212      	sxth	r2, r2
 800cc5e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800cc62:	e7c9      	b.n	800cbf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800cc64:	4606      	mov	r6, r0
 800cc66:	e7b9      	b.n	800cbdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cc68:	2c00      	cmp	r4, #0
 800cc6a:	f47f af7d 	bne.w	800cb68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800cc6e:	2e00      	cmp	r6, #0
 800cc70:	f000 81e1 	beq.w	800d036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800cc74:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800cc78:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800cc7c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cc80:	b2b9      	uxth	r1, r7
 800cc82:	9104      	str	r1, [sp, #16]
 800cc84:	9804      	ldr	r0, [sp, #16]
 800cc86:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cc8a:	4401      	add	r1, r0
 800cc8c:	b2b3      	uxth	r3, r6
 800cc8e:	b289      	uxth	r1, r1
 800cc90:	441a      	add	r2, r3
 800cc92:	9105      	str	r1, [sp, #20]
 800cc94:	b292      	uxth	r2, r2
 800cc96:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800cc9a:	fa0f f882 	sxth.w	r8, r2
 800cc9e:	4655      	mov	r5, sl
 800cca0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800cca4:	9b03      	ldr	r3, [sp, #12]
 800cca6:	2b00      	cmp	r3, #0
 800cca8:	d058      	beq.n	800cd5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800ccaa:	9902      	ldr	r1, [sp, #8]
 800ccac:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800ccb0:	f7ff fda0 	bl	800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ccb4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ccb8:	b1d8      	cbz	r0, 800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800ccba:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800ccbe:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800ccc2:	4576      	cmp	r6, lr
 800ccc4:	dc26      	bgt.n	800cd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800ccc6:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800ccca:	44f4      	add	ip, lr
 800cccc:	fa0f fc8c 	sxth.w	ip, ip
 800ccd0:	45e0      	cmp	r8, ip
 800ccd2:	db1f      	blt.n	800cd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800ccd4:	428f      	cmp	r7, r1
 800ccd6:	fa1f fc81 	uxth.w	ip, r1
 800ccda:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800ccde:	dc0f      	bgt.n	800cd00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800cce0:	9805      	ldr	r0, [sp, #20]
 800cce2:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800cce6:	eba0 0c0c 	sub.w	ip, r0, ip
 800ccea:	eba1 010c 	sub.w	r1, r1, ip
 800ccee:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800ccf2:	4620      	mov	r0, r4
 800ccf4:	9903      	ldr	r1, [sp, #12]
 800ccf6:	3901      	subs	r1, #1
 800ccf8:	9103      	str	r1, [sp, #12]
 800ccfa:	3d08      	subs	r5, #8
 800ccfc:	4604      	mov	r4, r0
 800ccfe:	e7cf      	b.n	800cca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800cd00:	4461      	add	r1, ip
 800cd02:	b209      	sxth	r1, r1
 800cd04:	4549      	cmp	r1, r9
 800cd06:	dcf5      	bgt.n	800ccf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800cd08:	9904      	ldr	r1, [sp, #16]
 800cd0a:	eba1 0c0c 	sub.w	ip, r1, ip
 800cd0e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800cd12:	e7ee      	b.n	800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800cd14:	428f      	cmp	r7, r1
 800cd16:	dced      	bgt.n	800ccf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800cd18:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800cd1c:	4461      	add	r1, ip
 800cd1e:	b209      	sxth	r1, r1
 800cd20:	4589      	cmp	r9, r1
 800cd22:	dbe7      	blt.n	800ccf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800cd24:	4576      	cmp	r6, lr
 800cd26:	fa1f fc8e 	uxth.w	ip, lr
 800cd2a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800cd2e:	dc08      	bgt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800cd30:	eba2 0c0c 	sub.w	ip, r2, ip
 800cd34:	eba1 010c 	sub.w	r1, r1, ip
 800cd38:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800cd3c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800cd40:	e7d7      	b.n	800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800cd42:	4461      	add	r1, ip
 800cd44:	b209      	sxth	r1, r1
 800cd46:	4588      	cmp	r8, r1
 800cd48:	dbd4      	blt.n	800ccf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800cd4a:	eba3 0c0c 	sub.w	ip, r3, ip
 800cd4e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800cd52:	e7ce      	b.n	800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800cd54:	2000a52a 	.word	0x2000a52a
 800cd58:	2000a528 	.word	0x2000a528
 800cd5c:	2c00      	cmp	r4, #0
 800cd5e:	f000 816a 	beq.w	800d036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800cd62:	9b00      	ldr	r3, [sp, #0]
 800cd64:	3301      	adds	r3, #1
 800cd66:	f000 8166 	beq.w	800d036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800cd6a:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800cd6e:	4621      	mov	r1, r4
 800cd70:	9802      	ldr	r0, [sp, #8]
 800cd72:	f7ff fdb1 	bl	800c8d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cd76:	b120      	cbz	r0, 800cd82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800cd78:	f8bd 1000 	ldrh.w	r1, [sp]
 800cd7c:	9801      	ldr	r0, [sp, #4]
 800cd7e:	f7ff fe79 	bl	800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cd82:	9902      	ldr	r1, [sp, #8]
 800cd84:	4620      	mov	r0, r4
 800cd86:	f7ff fd35 	bl	800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd8a:	2800      	cmp	r0, #0
 800cd8c:	f000 809b 	beq.w	800cec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800cd90:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800cd94:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800cd98:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800cd9c:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800cda0:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800cda4:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800cda8:	fa1f f288 	uxth.w	r2, r8
 800cdac:	19d5      	adds	r5, r2, r7
 800cdae:	fa1f f985 	uxth.w	r9, r5
 800cdb2:	fa0f f589 	sxth.w	r5, r9
 800cdb6:	b2a1      	uxth	r1, r4
 800cdb8:	440b      	add	r3, r1
 800cdba:	9503      	str	r5, [sp, #12]
 800cdbc:	45a0      	cmp	r8, r4
 800cdbe:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cdc2:	9507      	str	r5, [sp, #28]
 800cdc4:	b29b      	uxth	r3, r3
 800cdc6:	f340 809d 	ble.w	800cf04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800cdca:	1a52      	subs	r2, r2, r1
 800cdcc:	b292      	uxth	r2, r2
 800cdce:	4584      	cmp	ip, r0
 800cdd0:	fa0f fe83 	sxth.w	lr, r3
 800cdd4:	b215      	sxth	r5, r2
 800cdd6:	dd2f      	ble.n	800ce38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800cdd8:	9e00      	ldr	r6, [sp, #0]
 800cdda:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cdde:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800cde2:	9e03      	ldr	r6, [sp, #12]
 800cde4:	eba6 060e 	sub.w	r6, r6, lr
 800cde8:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800cdec:	fa1f fc8c 	uxth.w	ip, ip
 800cdf0:	b280      	uxth	r0, r0
 800cdf2:	ebac 0300 	sub.w	r3, ip, r0
 800cdf6:	448c      	add	ip, r1
 800cdf8:	4470      	add	r0, lr
 800cdfa:	b29b      	uxth	r3, r3
 800cdfc:	fa0f fc8c 	sxth.w	ip, ip
 800ce00:	b200      	sxth	r0, r0
 800ce02:	b21c      	sxth	r4, r3
 800ce04:	ebac 0000 	sub.w	r0, ip, r0
 800ce08:	4366      	muls	r6, r4
 800ce0a:	4368      	muls	r0, r5
 800ce0c:	4286      	cmp	r6, r0
 800ce0e:	db09      	blt.n	800ce24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800ce10:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800ce14:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800ce18:	4417      	add	r7, r2
 800ce1a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ce1e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800ce22:	e681      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ce24:	440b      	add	r3, r1
 800ce26:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ce2a:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800ce2e:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800ce32:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ce36:	e677      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ce38:	9e03      	ldr	r6, [sp, #12]
 800ce3a:	45b6      	cmp	lr, r6
 800ce3c:	da28      	bge.n	800ce90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800ce3e:	9b00      	ldr	r3, [sp, #0]
 800ce40:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800ce44:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800ce48:	eb04 030c 	add.w	r3, r4, ip
 800ce4c:	fa1f f883 	uxth.w	r8, r3
 800ce50:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800ce54:	4403      	add	r3, r0
 800ce56:	eba3 0308 	sub.w	r3, r3, r8
 800ce5a:	b29b      	uxth	r3, r3
 800ce5c:	fa0f f988 	sxth.w	r9, r8
 800ce60:	eba0 000c 	sub.w	r0, r0, ip
 800ce64:	fa0f f883 	sxth.w	r8, r3
 800ce68:	eba6 060e 	sub.w	r6, r6, lr
 800ce6c:	4368      	muls	r0, r5
 800ce6e:	fb08 f606 	mul.w	r6, r8, r6
 800ce72:	42b0      	cmp	r0, r6
 800ce74:	dc06      	bgt.n	800ce84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800ce76:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800ce7a:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800ce7e:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800ce82:	e7c9      	b.n	800ce18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800ce84:	4423      	add	r3, r4
 800ce86:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800ce8a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ce8e:	e64b      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ce90:	9807      	ldr	r0, [sp, #28]
 800ce92:	eba3 0309 	sub.w	r3, r3, r9
 800ce96:	b29b      	uxth	r3, r3
 800ce98:	2806      	cmp	r0, #6
 800ce9a:	fa0f fc83 	sxth.w	ip, r3
 800ce9e:	d818      	bhi.n	800ced2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800cea0:	4652      	mov	r2, sl
 800cea2:	ab0a      	add	r3, sp, #40	; 0x28
 800cea4:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800cea8:	6851      	ldr	r1, [r2, #4]
 800ceaa:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800ceae:	c303      	stmia	r3!, {r0, r1}
 800ceb0:	9b03      	ldr	r3, [sp, #12]
 800ceb2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800ceb6:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800ceba:	ab0a      	add	r3, sp, #40	; 0x28
 800cebc:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cec0:	9801      	ldr	r0, [sp, #4]
 800cec2:	f7ff fdf9 	bl	800cab8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cec6:	9b00      	ldr	r3, [sp, #0]
 800cec8:	3b01      	subs	r3, #1
 800ceca:	9300      	str	r3, [sp, #0]
 800cecc:	f1aa 0a08 	sub.w	sl, sl, #8
 800ced0:	e747      	b.n	800cd62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800ced2:	9800      	ldr	r0, [sp, #0]
 800ced4:	45ac      	cmp	ip, r5
 800ced6:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800ceda:	db0c      	blt.n	800cef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800cedc:	4417      	add	r7, r2
 800cede:	b2bf      	uxth	r7, r7
 800cee0:	4458      	add	r0, fp
 800cee2:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cee6:	440f      	add	r7, r1
 800cee8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ceec:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cef0:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800cef4:	e618      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cef6:	4458      	add	r0, fp
 800cef8:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800cefc:	443b      	add	r3, r7
 800cefe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cf02:	e611      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cf04:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cf08:	fa1f f18c 	uxth.w	r1, ip
 800cf0c:	eb01 0e05 	add.w	lr, r1, r5
 800cf10:	b282      	uxth	r2, r0
 800cf12:	fa1f fe8e 	uxth.w	lr, lr
 800cf16:	9204      	str	r2, [sp, #16]
 800cf18:	fa0f f28e 	sxth.w	r2, lr
 800cf1c:	9205      	str	r2, [sp, #20]
 800cf1e:	9e04      	ldr	r6, [sp, #16]
 800cf20:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cf24:	4432      	add	r2, r6
 800cf26:	b292      	uxth	r2, r2
 800cf28:	4584      	cmp	ip, r0
 800cf2a:	9206      	str	r2, [sp, #24]
 800cf2c:	da26      	bge.n	800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800cf2e:	eba3 0309 	sub.w	r3, r3, r9
 800cf32:	eba2 020e 	sub.w	r2, r2, lr
 800cf36:	b29b      	uxth	r3, r3
 800cf38:	b292      	uxth	r2, r2
 800cf3a:	fa0f fa83 	sxth.w	sl, r3
 800cf3e:	b211      	sxth	r1, r2
 800cf40:	eba0 000c 	sub.w	r0, r0, ip
 800cf44:	eba4 0408 	sub.w	r4, r4, r8
 800cf48:	fb0a f000 	mul.w	r0, sl, r0
 800cf4c:	434c      	muls	r4, r1
 800cf4e:	42a0      	cmp	r0, r4
 800cf50:	9800      	ldr	r0, [sp, #0]
 800cf52:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cf56:	dc06      	bgt.n	800cf66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800cf58:	4458      	add	r0, fp
 800cf5a:	9a05      	ldr	r2, [sp, #20]
 800cf5c:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800cf60:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800cf64:	e7ca      	b.n	800cefc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800cf66:	eb0b 0300 	add.w	r3, fp, r0
 800cf6a:	9903      	ldr	r1, [sp, #12]
 800cf6c:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800cf70:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800cf74:	442a      	add	r2, r5
 800cf76:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cf7a:	e5d5      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cf7c:	9e04      	ldr	r6, [sp, #16]
 800cf7e:	9a03      	ldr	r2, [sp, #12]
 800cf80:	1b89      	subs	r1, r1, r6
 800cf82:	b21e      	sxth	r6, r3
 800cf84:	b289      	uxth	r1, r1
 800cf86:	4296      	cmp	r6, r2
 800cf88:	fa0f fc81 	sxth.w	ip, r1
 800cf8c:	dd26      	ble.n	800cfdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800cf8e:	eba3 0309 	sub.w	r3, r3, r9
 800cf92:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800cf96:	9e05      	ldr	r6, [sp, #20]
 800cf98:	b29b      	uxth	r3, r3
 800cf9a:	eba6 0902 	sub.w	r9, r6, r2
 800cf9e:	b218      	sxth	r0, r3
 800cfa0:	eba4 0408 	sub.w	r4, r4, r8
 800cfa4:	fb0c f404 	mul.w	r4, ip, r4
 800cfa8:	fb00 f909 	mul.w	r9, r0, r9
 800cfac:	9a00      	ldr	r2, [sp, #0]
 800cfae:	454c      	cmp	r4, r9
 800cfb0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cfb4:	db03      	blt.n	800cfbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800cfb6:	445a      	add	r2, fp
 800cfb8:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800cfbc:	e79e      	b.n	800cefc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800cfbe:	eb0b 0302 	add.w	r3, fp, r2
 800cfc2:	9a03      	ldr	r2, [sp, #12]
 800cfc4:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800cfc8:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800cfcc:	4429      	add	r1, r5
 800cfce:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800cfd2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cfd6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cfda:	e5a5      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cfdc:	9b06      	ldr	r3, [sp, #24]
 800cfde:	9c07      	ldr	r4, [sp, #28]
 800cfe0:	eba3 020e 	sub.w	r2, r3, lr
 800cfe4:	b292      	uxth	r2, r2
 800cfe6:	2c06      	cmp	r4, #6
 800cfe8:	b213      	sxth	r3, r2
 800cfea:	d80d      	bhi.n	800d008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800cfec:	4651      	mov	r1, sl
 800cfee:	aa0a      	add	r2, sp, #40	; 0x28
 800cff0:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800cff4:	6849      	ldr	r1, [r1, #4]
 800cff6:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800cffa:	9b05      	ldr	r3, [sp, #20]
 800cffc:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d000:	c203      	stmia	r2!, {r0, r1}
 800d002:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d006:	e758      	b.n	800ceba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d008:	9c00      	ldr	r4, [sp, #0]
 800d00a:	4563      	cmp	r3, ip
 800d00c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d010:	db0d      	blt.n	800d02e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800d012:	4429      	add	r1, r5
 800d014:	9a04      	ldr	r2, [sp, #16]
 800d016:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d01a:	b289      	uxth	r1, r1
 800d01c:	445c      	add	r4, fp
 800d01e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d022:	4411      	add	r1, r2
 800d024:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d028:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d02c:	e57c      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d02e:	445c      	add	r4, fp
 800d030:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d034:	e79e      	b.n	800cf74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800d036:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d03a:	2f07      	cmp	r7, #7
 800d03c:	d806      	bhi.n	800d04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800d03e:	ab08      	add	r3, sp, #32
 800d040:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d044:	9801      	ldr	r0, [sp, #4]
 800d046:	f7ff fd37 	bl	800cab8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d04a:	e5d7      	b.n	800cbfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d04c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d050:	f107 39ff 	add.w	r9, r7, #4294967295
 800d054:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d058:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d05c:	f04f 35ff 	mov.w	r5, #4294967295
 800d060:	2400      	movs	r4, #0
 800d062:	9304      	str	r3, [sp, #16]
 800d064:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d068:	9300      	str	r3, [sp, #0]
 800d06a:	f109 32ff 	add.w	r2, r9, #4294967295
 800d06e:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d072:	9303      	str	r3, [sp, #12]
 800d074:	4690      	mov	r8, r2
 800d076:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d07a:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d07e:	bf14      	ite	ne
 800d080:	9904      	ldrne	r1, [sp, #16]
 800d082:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d086:	6818      	ldr	r0, [r3, #0]
 800d088:	9206      	str	r2, [sp, #24]
 800d08a:	bf18      	it	ne
 800d08c:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d090:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d094:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d098:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d09c:	9305      	str	r3, [sp, #20]
 800d09e:	fb16 f601 	smulbb	r6, r6, r1
 800d0a2:	6859      	ldr	r1, [r3, #4]
 800d0a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d0a8:	4671      	mov	r1, lr
 800d0aa:	a80a      	add	r0, sp, #40	; 0x28
 800d0ac:	f7ff fc3a 	bl	800c924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d0b0:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d0b4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d0b8:	9b03      	ldr	r3, [sp, #12]
 800d0ba:	9a00      	ldr	r2, [sp, #0]
 800d0bc:	fb11 f100 	smulbb	r1, r1, r0
 800d0c0:	fb02 6603 	mla	r6, r2, r3, r6
 800d0c4:	1b8e      	subs	r6, r1, r6
 800d0c6:	2008      	movs	r0, #8
 800d0c8:	fb91 f1f0 	sdiv	r1, r1, r0
 800d0cc:	42b1      	cmp	r1, r6
 800d0ce:	dc21      	bgt.n	800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d0d0:	4556      	cmp	r6, sl
 800d0d2:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d0d6:	da03      	bge.n	800d0e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800d0d8:	b1e6      	cbz	r6, 800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d0da:	46b2      	mov	sl, r6
 800d0dc:	4645      	mov	r5, r8
 800d0de:	464c      	mov	r4, r9
 800d0e0:	f108 38ff 	add.w	r8, r8, #4294967295
 800d0e4:	f118 0f02 	cmn.w	r8, #2
 800d0e8:	d1c7      	bne.n	800d07a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800d0ea:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d0ee:	f1a7 0708 	sub.w	r7, r7, #8
 800d0f2:	4691      	mov	r9, r2
 800d0f4:	d1b6      	bne.n	800d064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800d0f6:	9b01      	ldr	r3, [sp, #4]
 800d0f8:	b2a6      	uxth	r6, r4
 800d0fa:	00e4      	lsls	r4, r4, #3
 800d0fc:	1918      	adds	r0, r3, r4
 800d0fe:	1c6b      	adds	r3, r5, #1
 800d100:	d10b      	bne.n	800d11a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800d102:	4601      	mov	r1, r0
 800d104:	9802      	ldr	r0, [sp, #8]
 800d106:	f7ff fc0d 	bl	800c924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d10a:	4631      	mov	r1, r6
 800d10c:	9801      	ldr	r0, [sp, #4]
 800d10e:	f7ff fcb1 	bl	800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d112:	e509      	b.n	800cb28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d114:	4645      	mov	r5, r8
 800d116:	464c      	mov	r4, r9
 800d118:	e7ed      	b.n	800d0f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800d11a:	9b01      	ldr	r3, [sp, #4]
 800d11c:	00ed      	lsls	r5, r5, #3
 800d11e:	1959      	adds	r1, r3, r5
 800d120:	f7ff fc00 	bl	800c924 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d124:	9b02      	ldr	r3, [sp, #8]
 800d126:	cb03      	ldmia	r3!, {r0, r1}
 800d128:	445d      	add	r5, fp
 800d12a:	445c      	add	r4, fp
 800d12c:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d130:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d134:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d138:	9b02      	ldr	r3, [sp, #8]
 800d13a:	6861      	ldr	r1, [r4, #4]
 800d13c:	c303      	stmia	r3!, {r0, r1}
 800d13e:	e7e4      	b.n	800d10a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800d140 <_ZN8touchgfx11Application10invalidateEv>:
 800d140:	4b09      	ldr	r3, [pc, #36]	; (800d168 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800d142:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d146:	4b09      	ldr	r3, [pc, #36]	; (800d16c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800d148:	b082      	sub	sp, #8
 800d14a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d14e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d152:	2100      	movs	r1, #0
 800d154:	9100      	str	r1, [sp, #0]
 800d156:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d15a:	ab02      	add	r3, sp, #8
 800d15c:	e913 0006 	ldmdb	r3, {r1, r2}
 800d160:	b002      	add	sp, #8
 800d162:	f7ff bccb 	b.w	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d166:	bf00      	nop
 800d168:	2000a528 	.word	0x2000a528
 800d16c:	2000a52a 	.word	0x2000a52a

0800d170 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d174:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d178:	b09b      	sub	sp, #108	; 0x6c
 800d17a:	4604      	mov	r4, r0
 800d17c:	4630      	mov	r0, r6
 800d17e:	f7fc f8fa 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d182:	4605      	mov	r5, r0
 800d184:	b940      	cbnz	r0, 800d198 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800d186:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d18a:	4620      	mov	r0, r4
 800d18c:	f7ff fcb6 	bl	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d190:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d194:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d198:	4bc6      	ldr	r3, [pc, #792]	; (800d4b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d19a:	681b      	ldr	r3, [r3, #0]
 800d19c:	b33b      	cbz	r3, 800d1ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800d19e:	4dc6      	ldr	r5, [pc, #792]	; (800d4b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d1a0:	4628      	mov	r0, r5
 800d1a2:	f7fc f8e8 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1a6:	4606      	mov	r6, r0
 800d1a8:	bb08      	cbnz	r0, 800d1ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800d1aa:	4628      	mov	r0, r5
 800d1ac:	f7ff f9c4 	bl	800c538 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d1b0:	6829      	ldr	r1, [r5, #0]
 800d1b2:	686a      	ldr	r2, [r5, #4]
 800d1b4:	4620      	mov	r0, r4
 800d1b6:	f7ff fca1 	bl	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d1ba:	802e      	strh	r6, [r5, #0]
 800d1bc:	806e      	strh	r6, [r5, #2]
 800d1be:	80ae      	strh	r6, [r5, #4]
 800d1c0:	80ee      	strh	r6, [r5, #6]
 800d1c2:	4dbe      	ldr	r5, [pc, #760]	; (800d4bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d1c4:	a809      	add	r0, sp, #36	; 0x24
 800d1c6:	f7ff fc04 	bl	800c9d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1ca:	882f      	ldrh	r7, [r5, #0]
 800d1cc:	463e      	mov	r6, r7
 800d1ce:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d1d2:	42b3      	cmp	r3, r6
 800d1d4:	d912      	bls.n	800d1fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800d1d6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d1da:	a809      	add	r0, sp, #36	; 0x24
 800d1dc:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d1e0:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d1e4:	3601      	adds	r6, #1
 800d1e6:	f7ff fc67 	bl	800cab8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d1ea:	b2b6      	uxth	r6, r6
 800d1ec:	e7ef      	b.n	800d1ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800d1ee:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d1f2:	2b00      	cmp	r3, #0
 800d1f4:	d1e5      	bne.n	800d1c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800d1f6:	b01b      	add	sp, #108	; 0x6c
 800d1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1fc:	463e      	mov	r6, r7
 800d1fe:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d202:	42b3      	cmp	r3, r6
 800d204:	d90b      	bls.n	800d21e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d206:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d20a:	4620      	mov	r0, r4
 800d20c:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d210:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d214:	3601      	adds	r6, #1
 800d216:	f7ff fc71 	bl	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d21a:	b2b6      	uxth	r6, r6
 800d21c:	e7ef      	b.n	800d1fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800d21e:	4ea8      	ldr	r6, [pc, #672]	; (800d4c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d220:	6833      	ldr	r3, [r6, #0]
 800d222:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d226:	2b01      	cmp	r3, #1
 800d228:	f040 80d2 	bne.w	800d3d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800d22c:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800d230:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800d234:	4639      	mov	r1, r7
 800d236:	33aa      	adds	r3, #170	; 0xaa
 800d238:	2700      	movs	r7, #0
 800d23a:	458c      	cmp	ip, r1
 800d23c:	f103 0308 	add.w	r3, r3, #8
 800d240:	dd0a      	ble.n	800d258 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800d242:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d246:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800d24a:	4402      	add	r2, r0
 800d24c:	b212      	sxth	r2, r2
 800d24e:	4297      	cmp	r7, r2
 800d250:	bfb8      	it	lt
 800d252:	4617      	movlt	r7, r2
 800d254:	3101      	adds	r1, #1
 800d256:	e7f0      	b.n	800d23a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800d258:	4b9a      	ldr	r3, [pc, #616]	; (800d4c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d25a:	f8b3 9000 	ldrh.w	r9, [r3]
 800d25e:	2300      	movs	r3, #0
 800d260:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d264:	f1b9 0f0f 	cmp.w	r9, #15
 800d268:	bf8c      	ite	hi
 800d26a:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800d26e:	f04f 0901 	movls.w	r9, #1
 800d272:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800d276:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800d27a:	4440      	add	r0, r8
 800d27c:	fa0f f880 	sxth.w	r8, r0
 800d280:	6830      	ldr	r0, [r6, #0]
 800d282:	4547      	cmp	r7, r8
 800d284:	6803      	ldr	r3, [r0, #0]
 800d286:	f340 8086 	ble.w	800d396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800d28a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800d28e:	4798      	blx	r3
 800d290:	eb08 0309 	add.w	r3, r8, r9
 800d294:	4298      	cmp	r0, r3
 800d296:	da08      	bge.n	800d2aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d298:	4287      	cmp	r7, r0
 800d29a:	dd06      	ble.n	800d2aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d29c:	4580      	cmp	r8, r0
 800d29e:	dd70      	ble.n	800d382 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800d2a0:	f1b8 0f00 	cmp.w	r8, #0
 800d2a4:	dd6d      	ble.n	800d382 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800d2a6:	4638      	mov	r0, r7
 800d2a8:	e004      	b.n	800d2b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800d2aa:	4580      	cmp	r8, r0
 800d2ac:	dcfb      	bgt.n	800d2a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800d2ae:	42b8      	cmp	r0, r7
 800d2b0:	bfa8      	it	ge
 800d2b2:	4638      	movge	r0, r7
 800d2b4:	4b84      	ldr	r3, [pc, #528]	; (800d4c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d2b6:	f8ad 8016 	strh.w	r8, [sp, #22]
 800d2ba:	eba0 0008 	sub.w	r0, r0, r8
 800d2be:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d2c2:	f8b5 8000 	ldrh.w	r8, [r5]
 800d2c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d2ca:	2200      	movs	r2, #0
 800d2cc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d2d0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d2d4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d2d8:	4543      	cmp	r3, r8
 800d2da:	d9ca      	bls.n	800d272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800d2dc:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800d2e0:	ab07      	add	r3, sp, #28
 800d2e2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d2e6:	6851      	ldr	r1, [r2, #4]
 800d2e8:	c303      	stmia	r3!, {r0, r1}
 800d2ea:	a905      	add	r1, sp, #20
 800d2ec:	a807      	add	r0, sp, #28
 800d2ee:	f7ff fa81 	bl	800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2f2:	2800      	cmp	r0, #0
 800d2f4:	d04c      	beq.n	800d390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800d2f6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d2fa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d2fe:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800d302:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d306:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d30a:	4686      	mov	lr, r0
 800d30c:	4290      	cmp	r0, r2
 800d30e:	4450      	add	r0, sl
 800d310:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800d314:	bfb8      	it	lt
 800d316:	4696      	movlt	lr, r2
 800d318:	4452      	add	r2, sl
 800d31a:	b280      	uxth	r0, r0
 800d31c:	b292      	uxth	r2, r2
 800d31e:	4299      	cmp	r1, r3
 800d320:	fa0f fb80 	sxth.w	fp, r0
 800d324:	fa0f fa82 	sxth.w	sl, r2
 800d328:	468c      	mov	ip, r1
 800d32a:	bfb8      	it	lt
 800d32c:	469c      	movlt	ip, r3
 800d32e:	45d3      	cmp	fp, sl
 800d330:	bfb8      	it	lt
 800d332:	4602      	movlt	r2, r0
 800d334:	eba2 020e 	sub.w	r2, r2, lr
 800d338:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d33c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800d340:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d344:	4411      	add	r1, r2
 800d346:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d34a:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d34e:	4413      	add	r3, r2
 800d350:	b289      	uxth	r1, r1
 800d352:	b29b      	uxth	r3, r3
 800d354:	b208      	sxth	r0, r1
 800d356:	b21a      	sxth	r2, r3
 800d358:	4290      	cmp	r0, r2
 800d35a:	bfb8      	it	lt
 800d35c:	460b      	movlt	r3, r1
 800d35e:	eba3 030c 	sub.w	r3, r3, ip
 800d362:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d366:	a807      	add	r0, sp, #28
 800d368:	f7fc f805 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d36c:	b920      	cbnz	r0, 800d378 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800d36e:	6823      	ldr	r3, [r4, #0]
 800d370:	a907      	add	r1, sp, #28
 800d372:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d374:	4620      	mov	r0, r4
 800d376:	4798      	blx	r3
 800d378:	f108 0801 	add.w	r8, r8, #1
 800d37c:	fa1f f888 	uxth.w	r8, r8
 800d380:	e7a8      	b.n	800d2d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800d382:	6830      	ldr	r0, [r6, #0]
 800d384:	6803      	ldr	r3, [r0, #0]
 800d386:	2101      	movs	r1, #1
 800d388:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800d38c:	4798      	blx	r3
 800d38e:	e770      	b.n	800d272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800d390:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800d394:	e7e7      	b.n	800d366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800d396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d398:	4798      	blx	r3
 800d39a:	4b4c      	ldr	r3, [pc, #304]	; (800d4cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800d39c:	781b      	ldrb	r3, [r3, #0]
 800d39e:	2b00      	cmp	r3, #0
 800d3a0:	f43f af29 	beq.w	800d1f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800d3a4:	2300      	movs	r3, #0
 800d3a6:	882d      	ldrh	r5, [r5, #0]
 800d3a8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d3ac:	34ea      	adds	r4, #234	; 0xea
 800d3ae:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d3b2:	42ab      	cmp	r3, r5
 800d3b4:	f67f af1f 	bls.w	800d1f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800d3b8:	ab1a      	add	r3, sp, #104	; 0x68
 800d3ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d3be:	3b44      	subs	r3, #68	; 0x44
 800d3c0:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d3c4:	4620      	mov	r0, r4
 800d3c6:	3501      	adds	r5, #1
 800d3c8:	f7ff fb76 	bl	800cab8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d3cc:	b2ad      	uxth	r5, r5
 800d3ce:	e7ee      	b.n	800d3ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800d3d0:	2b02      	cmp	r3, #2
 800d3d2:	f040 8136 	bne.w	800d642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800d3d6:	4b3e      	ldr	r3, [pc, #248]	; (800d4d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800d3d8:	781b      	ldrb	r3, [r3, #0]
 800d3da:	2b01      	cmp	r3, #1
 800d3dc:	d02c      	beq.n	800d438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800d3de:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800d3e2:	882a      	ldrh	r2, [r5, #0]
 800d3e4:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d3e8:	3201      	adds	r2, #1
 800d3ea:	b292      	uxth	r2, r2
 800d3ec:	2900      	cmp	r1, #0
 800d3ee:	d0d4      	beq.n	800d39a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800d3f0:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800d3f4:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d3f8:	441f      	add	r7, r3
 800d3fa:	b23f      	sxth	r7, r7
 800d3fc:	4610      	mov	r0, r2
 800d3fe:	f04f 0900 	mov.w	r9, #0
 800d402:	b283      	uxth	r3, r0
 800d404:	4299      	cmp	r1, r3
 800d406:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800d40a:	f240 80c5 	bls.w	800d598 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800d40e:	44a0      	add	r8, r4
 800d410:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800d414:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800d418:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800d41c:	4573      	cmp	r3, lr
 800d41e:	4684      	mov	ip, r0
 800d420:	f340 80a7 	ble.w	800d572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800d424:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800d428:	4477      	add	r7, lr
 800d42a:	b23f      	sxth	r7, r7
 800d42c:	429f      	cmp	r7, r3
 800d42e:	bfa8      	it	ge
 800d430:	461f      	movge	r7, r3
 800d432:	3001      	adds	r0, #1
 800d434:	46e1      	mov	r9, ip
 800d436:	e7e4      	b.n	800d402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800d438:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d43c:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d440:	f1bb 0f00 	cmp.w	fp, #0
 800d444:	d0a9      	beq.n	800d39a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800d446:	882b      	ldrh	r3, [r5, #0]
 800d448:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d44c:	3301      	adds	r3, #1
 800d44e:	b29b      	uxth	r3, r3
 800d450:	f04f 0800 	mov.w	r8, #0
 800d454:	b299      	uxth	r1, r3
 800d456:	458b      	cmp	fp, r1
 800d458:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800d45c:	d93a      	bls.n	800d4d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800d45e:	4427      	add	r7, r4
 800d460:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d464:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800d468:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800d46c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d470:	4408      	add	r0, r1
 800d472:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d476:	4471      	add	r1, lr
 800d478:	b200      	sxth	r0, r0
 800d47a:	b209      	sxth	r1, r1
 800d47c:	4288      	cmp	r0, r1
 800d47e:	469c      	mov	ip, r3
 800d480:	da06      	bge.n	800d490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800d482:	4586      	cmp	lr, r0
 800d484:	4672      	mov	r2, lr
 800d486:	bfb8      	it	lt
 800d488:	4602      	movlt	r2, r0
 800d48a:	3301      	adds	r3, #1
 800d48c:	46e0      	mov	r8, ip
 800d48e:	e7e1      	b.n	800d454 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800d490:	d10b      	bne.n	800d4aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800d492:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800d496:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d49a:	458c      	cmp	ip, r1
 800d49c:	bfb4      	ite	lt
 800d49e:	469c      	movlt	ip, r3
 800d4a0:	46c4      	movge	ip, r8
 800d4a2:	4572      	cmp	r2, lr
 800d4a4:	bfb8      	it	lt
 800d4a6:	4672      	movlt	r2, lr
 800d4a8:	e7ef      	b.n	800d48a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800d4aa:	428a      	cmp	r2, r1
 800d4ac:	bfb8      	it	lt
 800d4ae:	460a      	movlt	r2, r1
 800d4b0:	46c4      	mov	ip, r8
 800d4b2:	e7ea      	b.n	800d48a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800d4b4:	2000a56c 	.word	0x2000a56c
 800d4b8:	2000a578 	.word	0x2000a578
 800d4bc:	20000060 	.word	0x20000060
 800d4c0:	2000a534 	.word	0x2000a534
 800d4c4:	2000a52a 	.word	0x2000a52a
 800d4c8:	2000a528 	.word	0x2000a528
 800d4cc:	2000a532 	.word	0x2000a532
 800d4d0:	2000a52c 	.word	0x2000a52c
 800d4d4:	19e1      	adds	r1, r4, r7
 800d4d6:	ab07      	add	r3, sp, #28
 800d4d8:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d4dc:	6849      	ldr	r1, [r1, #4]
 800d4de:	c303      	stmia	r3!, {r0, r1}
 800d4e0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d4e4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d4e8:	2b13      	cmp	r3, #19
 800d4ea:	bfd8      	it	le
 800d4ec:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d4f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d4f4:	440b      	add	r3, r1
 800d4f6:	1a9b      	subs	r3, r3, r2
 800d4f8:	a807      	add	r0, sp, #28
 800d4fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d4fe:	f7ff f835 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d502:	a807      	add	r0, sp, #28
 800d504:	f7fb ff37 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d508:	2800      	cmp	r0, #0
 800d50a:	d197      	bne.n	800d43c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800d50c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d510:	6830      	ldr	r0, [r6, #0]
 800d512:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d516:	f8d0 e000 	ldr.w	lr, [r0]
 800d51a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d51e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d522:	f1bc 0f14 	cmp.w	ip, #20
 800d526:	bfa8      	it	ge
 800d528:	f04f 0c14 	movge.w	ip, #20
 800d52c:	fa1f fc8c 	uxth.w	ip, ip
 800d530:	f8cd c000 	str.w	ip, [sp]
 800d534:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800d538:	47d0      	blx	sl
 800d53a:	4682      	mov	sl, r0
 800d53c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d540:	a807      	add	r0, sp, #28
 800d542:	f7fe fff9 	bl	800c538 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d546:	6823      	ldr	r3, [r4, #0]
 800d548:	4427      	add	r7, r4
 800d54a:	4620      	mov	r0, r4
 800d54c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d54e:	a907      	add	r1, sp, #28
 800d550:	4798      	blx	r3
 800d552:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800d556:	eba0 000a 	sub.w	r0, r0, sl
 800d55a:	b200      	sxth	r0, r0
 800d55c:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800d560:	2800      	cmp	r0, #0
 800d562:	f47f af6b 	bne.w	800d43c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800d566:	fa1f f188 	uxth.w	r1, r8
 800d56a:	4648      	mov	r0, r9
 800d56c:	f7ff fa82 	bl	800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d570:	e764      	b.n	800d43c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800d572:	d10c      	bne.n	800d58e <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800d574:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800d578:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800d57c:	45e6      	cmp	lr, ip
 800d57e:	bfb4      	ite	lt
 800d580:	4684      	movlt	ip, r0
 800d582:	46cc      	movge	ip, r9
 800d584:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800d588:	4473      	add	r3, lr
 800d58a:	b21b      	sxth	r3, r3
 800d58c:	e74e      	b.n	800d42c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800d58e:	4577      	cmp	r7, lr
 800d590:	bfa8      	it	ge
 800d592:	4677      	movge	r7, lr
 800d594:	46cc      	mov	ip, r9
 800d596:	e74c      	b.n	800d432 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800d598:	eb0a 0008 	add.w	r0, sl, r8
 800d59c:	44a0      	add	r8, r4
 800d59e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d5a2:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800d5a6:	f1bb 0f13 	cmp.w	fp, #19
 800d5aa:	bfde      	ittt	le
 800d5ac:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800d5b0:	445f      	addle	r7, fp
 800d5b2:	b23f      	sxthle	r7, r7
 800d5b4:	f7fb fedf 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5b8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d5bc:	2800      	cmp	r0, #0
 800d5be:	f47f af15 	bne.w	800d3ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800d5c2:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800d5c6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d5ca:	1abf      	subs	r7, r7, r2
 800d5cc:	2f14      	cmp	r7, #20
 800d5ce:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800d5d2:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800d5d6:	6830      	ldr	r0, [r6, #0]
 800d5d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d5dc:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d5e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d5e4:	bfa8      	it	ge
 800d5e6:	2714      	movge	r7, #20
 800d5e8:	f8d0 c000 	ldr.w	ip, [r0]
 800d5ec:	b2bf      	uxth	r7, r7
 800d5ee:	fa1f fb8b 	uxth.w	fp, fp
 800d5f2:	455f      	cmp	r7, fp
 800d5f4:	bf94      	ite	ls
 800d5f6:	9700      	strls	r7, [sp, #0]
 800d5f8:	f8cd b000 	strhi.w	fp, [sp]
 800d5fc:	b292      	uxth	r2, r2
 800d5fe:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800d602:	b29b      	uxth	r3, r3
 800d604:	b289      	uxth	r1, r1
 800d606:	47b8      	blx	r7
 800d608:	6823      	ldr	r3, [r4, #0]
 800d60a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d60e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d610:	a907      	add	r1, sp, #28
 800d612:	4620      	mov	r0, r4
 800d614:	4798      	blx	r3
 800d616:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d61a:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800d61e:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800d622:	1a5b      	subs	r3, r3, r1
 800d624:	440a      	add	r2, r1
 800d626:	b21b      	sxth	r3, r3
 800d628:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800d62c:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800d630:	2b00      	cmp	r3, #0
 800d632:	f47f aed6 	bne.w	800d3e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800d636:	fa1f f189 	uxth.w	r1, r9
 800d63a:	4650      	mov	r0, sl
 800d63c:	f7ff fa1a 	bl	800ca74 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d640:	e6cf      	b.n	800d3e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800d642:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d646:	42bb      	cmp	r3, r7
 800d648:	f67f aea7 	bls.w	800d39a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800d64c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d650:	ab07      	add	r3, sp, #28
 800d652:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d656:	6851      	ldr	r1, [r2, #4]
 800d658:	c303      	stmia	r3!, {r0, r1}
 800d65a:	a807      	add	r0, sp, #28
 800d65c:	f7fb fe8b 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d660:	b920      	cbnz	r0, 800d66c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800d662:	6823      	ldr	r3, [r4, #0]
 800d664:	a907      	add	r1, sp, #28
 800d666:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d668:	4620      	mov	r0, r4
 800d66a:	4798      	blx	r3
 800d66c:	3701      	adds	r7, #1
 800d66e:	b2bf      	uxth	r7, r7
 800d670:	e7e7      	b.n	800d642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800d672:	bf00      	nop

0800d674 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d674:	4b03      	ldr	r3, [pc, #12]	; (800d684 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d676:	2200      	movs	r2, #0
 800d678:	801a      	strh	r2, [r3, #0]
 800d67a:	805a      	strh	r2, [r3, #2]
 800d67c:	809a      	strh	r2, [r3, #4]
 800d67e:	80da      	strh	r2, [r3, #6]
 800d680:	4770      	bx	lr
 800d682:	bf00      	nop
 800d684:	2000a578 	.word	0x2000a578

0800d688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d68c:	4606      	mov	r6, r0
 800d68e:	b09d      	sub	sp, #116	; 0x74
 800d690:	a803      	add	r0, sp, #12
 800d692:	4614      	mov	r4, r2
 800d694:	468a      	mov	sl, r1
 800d696:	461d      	mov	r5, r3
 800d698:	f000 fd6a 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800d69c:	6833      	ldr	r3, [r6, #0]
 800d69e:	4630      	mov	r0, r6
 800d6a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d6a2:	4798      	blx	r3
 800d6a4:	6833      	ldr	r3, [r6, #0]
 800d6a6:	4607      	mov	r7, r0
 800d6a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d6aa:	4630      	mov	r0, r6
 800d6ac:	4798      	blx	r3
 800d6ae:	462a      	mov	r2, r5
 800d6b0:	9000      	str	r0, [sp, #0]
 800d6b2:	4621      	mov	r1, r4
 800d6b4:	463b      	mov	r3, r7
 800d6b6:	a803      	add	r0, sp, #12
 800d6b8:	f000 fdc6 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d6bc:	2500      	movs	r5, #0
 800d6be:	462c      	mov	r4, r5
 800d6c0:	46a9      	mov	r9, r5
 800d6c2:	46a8      	mov	r8, r5
 800d6c4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d6c8:	2300      	movs	r3, #0
 800d6ca:	9302      	str	r3, [sp, #8]
 800d6cc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d6d0:	429c      	cmp	r4, r3
 800d6d2:	d002      	beq.n	800d6da <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d6d4:	455c      	cmp	r4, fp
 800d6d6:	bf18      	it	ne
 800d6d8:	4625      	movne	r5, r4
 800d6da:	ab02      	add	r3, sp, #8
 800d6dc:	4632      	mov	r2, r6
 800d6de:	4651      	mov	r1, sl
 800d6e0:	a803      	add	r0, sp, #12
 800d6e2:	f001 f8c1 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d6e6:	4604      	mov	r4, r0
 800d6e8:	b108      	cbz	r0, 800d6ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d6ea:	280a      	cmp	r0, #10
 800d6ec:	d10a      	bne.n	800d704 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d6ee:	45c1      	cmp	r9, r8
 800d6f0:	bf38      	it	cc
 800d6f2:	46c1      	movcc	r9, r8
 800d6f4:	f04f 0800 	mov.w	r8, #0
 800d6f8:	2c00      	cmp	r4, #0
 800d6fa:	d1e5      	bne.n	800d6c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d6fc:	4648      	mov	r0, r9
 800d6fe:	b01d      	add	sp, #116	; 0x74
 800d700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d704:	9a02      	ldr	r2, [sp, #8]
 800d706:	2a00      	cmp	r2, #0
 800d708:	d0de      	beq.n	800d6c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d70a:	7b57      	ldrb	r7, [r2, #13]
 800d70c:	6833      	ldr	r3, [r6, #0]
 800d70e:	8894      	ldrh	r4, [r2, #4]
 800d710:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d712:	007f      	lsls	r7, r7, #1
 800d714:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d718:	7a97      	ldrb	r7, [r2, #10]
 800d71a:	4629      	mov	r1, r5
 800d71c:	4307      	orrs	r7, r0
 800d71e:	4630      	mov	r0, r6
 800d720:	4798      	blx	r3
 800d722:	4438      	add	r0, r7
 800d724:	4480      	add	r8, r0
 800d726:	fa1f f888 	uxth.w	r8, r8
 800d72a:	e7e5      	b.n	800d6f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d72c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d72c:	b508      	push	{r3, lr}
 800d72e:	6803      	ldr	r3, [r0, #0]
 800d730:	68db      	ldr	r3, [r3, #12]
 800d732:	4798      	blx	r3
 800d734:	b128      	cbz	r0, 800d742 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d736:	7b43      	ldrb	r3, [r0, #13]
 800d738:	7a80      	ldrb	r0, [r0, #10]
 800d73a:	005b      	lsls	r3, r3, #1
 800d73c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d740:	4318      	orrs	r0, r3
 800d742:	bd08      	pop	{r3, pc}

0800d744 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d744:	b40e      	push	{r1, r2, r3}
 800d746:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d748:	b09e      	sub	sp, #120	; 0x78
 800d74a:	ab23      	add	r3, sp, #140	; 0x8c
 800d74c:	4605      	mov	r5, r0
 800d74e:	f853 4b04 	ldr.w	r4, [r3], #4
 800d752:	9303      	str	r3, [sp, #12]
 800d754:	a805      	add	r0, sp, #20
 800d756:	f000 fd0b 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800d75a:	682b      	ldr	r3, [r5, #0]
 800d75c:	4628      	mov	r0, r5
 800d75e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d760:	4798      	blx	r3
 800d762:	682b      	ldr	r3, [r5, #0]
 800d764:	4606      	mov	r6, r0
 800d766:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d768:	4628      	mov	r0, r5
 800d76a:	4798      	blx	r3
 800d76c:	4633      	mov	r3, r6
 800d76e:	ae1e      	add	r6, sp, #120	; 0x78
 800d770:	4621      	mov	r1, r4
 800d772:	9000      	str	r0, [sp, #0]
 800d774:	9a03      	ldr	r2, [sp, #12]
 800d776:	2400      	movs	r4, #0
 800d778:	a805      	add	r0, sp, #20
 800d77a:	f000 fd65 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d77e:	f846 4d68 	str.w	r4, [r6, #-104]!
 800d782:	462a      	mov	r2, r5
 800d784:	4633      	mov	r3, r6
 800d786:	4621      	mov	r1, r4
 800d788:	a805      	add	r0, sp, #20
 800d78a:	f001 f86d 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d78e:	b1f0      	cbz	r0, 800d7ce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d790:	280a      	cmp	r0, #10
 800d792:	d018      	beq.n	800d7c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d794:	9f04      	ldr	r7, [sp, #16]
 800d796:	b1b7      	cbz	r7, 800d7c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d798:	7b78      	ldrb	r0, [r7, #13]
 800d79a:	7a3b      	ldrb	r3, [r7, #8]
 800d79c:	88aa      	ldrh	r2, [r5, #4]
 800d79e:	00c1      	lsls	r1, r0, #3
 800d7a0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d7a4:	4319      	orrs	r1, r3
 800d7a6:	0643      	lsls	r3, r0, #25
 800d7a8:	bf44      	itt	mi
 800d7aa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d7ae:	b219      	sxthmi	r1, r3
 800d7b0:	0100      	lsls	r0, r0, #4
 800d7b2:	79fb      	ldrb	r3, [r7, #7]
 800d7b4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d7b8:	4303      	orrs	r3, r0
 800d7ba:	4413      	add	r3, r2
 800d7bc:	1a5b      	subs	r3, r3, r1
 800d7be:	b29b      	uxth	r3, r3
 800d7c0:	42a3      	cmp	r3, r4
 800d7c2:	bfc8      	it	gt
 800d7c4:	b21c      	sxthgt	r4, r3
 800d7c6:	4633      	mov	r3, r6
 800d7c8:	462a      	mov	r2, r5
 800d7ca:	2100      	movs	r1, #0
 800d7cc:	e7dc      	b.n	800d788 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d7ce:	b2a0      	uxth	r0, r4
 800d7d0:	b01e      	add	sp, #120	; 0x78
 800d7d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d7d6:	b003      	add	sp, #12
 800d7d8:	4770      	bx	lr

0800d7da <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d7da:	b40e      	push	{r1, r2, r3}
 800d7dc:	b570      	push	{r4, r5, r6, lr}
 800d7de:	b09d      	sub	sp, #116	; 0x74
 800d7e0:	ab21      	add	r3, sp, #132	; 0x84
 800d7e2:	4604      	mov	r4, r0
 800d7e4:	f853 5b04 	ldr.w	r5, [r3], #4
 800d7e8:	9302      	str	r3, [sp, #8]
 800d7ea:	a803      	add	r0, sp, #12
 800d7ec:	f000 fcc0 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800d7f0:	6823      	ldr	r3, [r4, #0]
 800d7f2:	4620      	mov	r0, r4
 800d7f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7f6:	4798      	blx	r3
 800d7f8:	6823      	ldr	r3, [r4, #0]
 800d7fa:	4606      	mov	r6, r0
 800d7fc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d7fe:	4620      	mov	r0, r4
 800d800:	4798      	blx	r3
 800d802:	4633      	mov	r3, r6
 800d804:	9000      	str	r0, [sp, #0]
 800d806:	9a02      	ldr	r2, [sp, #8]
 800d808:	4629      	mov	r1, r5
 800d80a:	a803      	add	r0, sp, #12
 800d80c:	f000 fd1c 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d810:	a803      	add	r0, sp, #12
 800d812:	f001 f923 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d816:	2401      	movs	r4, #1
 800d818:	b2a3      	uxth	r3, r4
 800d81a:	b140      	cbz	r0, 800d82e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d81c:	280a      	cmp	r0, #10
 800d81e:	bf08      	it	eq
 800d820:	3301      	addeq	r3, #1
 800d822:	a803      	add	r0, sp, #12
 800d824:	bf08      	it	eq
 800d826:	b21c      	sxtheq	r4, r3
 800d828:	f001 f918 	bl	800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d82c:	e7f4      	b.n	800d818 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d82e:	4618      	mov	r0, r3
 800d830:	b01d      	add	sp, #116	; 0x74
 800d832:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d836:	b003      	add	sp, #12
 800d838:	4770      	bx	lr

0800d83a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d83a:	b40e      	push	{r1, r2, r3}
 800d83c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d83e:	b09e      	sub	sp, #120	; 0x78
 800d840:	ab23      	add	r3, sp, #140	; 0x8c
 800d842:	4604      	mov	r4, r0
 800d844:	f853 5b04 	ldr.w	r5, [r3], #4
 800d848:	9303      	str	r3, [sp, #12]
 800d84a:	a805      	add	r0, sp, #20
 800d84c:	f000 fc90 	bl	800e170 <_ZN8touchgfx12TextProviderC1Ev>
 800d850:	6823      	ldr	r3, [r4, #0]
 800d852:	4620      	mov	r0, r4
 800d854:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d856:	4798      	blx	r3
 800d858:	6823      	ldr	r3, [r4, #0]
 800d85a:	4606      	mov	r6, r0
 800d85c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d85e:	4620      	mov	r0, r4
 800d860:	4798      	blx	r3
 800d862:	4633      	mov	r3, r6
 800d864:	4629      	mov	r1, r5
 800d866:	9000      	str	r0, [sp, #0]
 800d868:	9a03      	ldr	r2, [sp, #12]
 800d86a:	a805      	add	r0, sp, #20
 800d86c:	ad1e      	add	r5, sp, #120	; 0x78
 800d86e:	f000 fceb 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d872:	2100      	movs	r1, #0
 800d874:	f845 1d68 	str.w	r1, [r5, #-104]!
 800d878:	4622      	mov	r2, r4
 800d87a:	462b      	mov	r3, r5
 800d87c:	a805      	add	r0, sp, #20
 800d87e:	f000 fff3 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d882:	26ff      	movs	r6, #255	; 0xff
 800d884:	b1d8      	cbz	r0, 800d8be <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d886:	280a      	cmp	r0, #10
 800d888:	d012      	beq.n	800d8b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d88a:	9804      	ldr	r0, [sp, #16]
 800d88c:	b180      	cbz	r0, 800d8b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d88e:	7b47      	ldrb	r7, [r0, #13]
 800d890:	7922      	ldrb	r2, [r4, #4]
 800d892:	00fb      	lsls	r3, r7, #3
 800d894:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d898:	7a03      	ldrb	r3, [r0, #8]
 800d89a:	430b      	orrs	r3, r1
 800d89c:	0679      	lsls	r1, r7, #25
 800d89e:	bf44      	itt	mi
 800d8a0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d8a4:	b21b      	sxthmi	r3, r3
 800d8a6:	1ad3      	subs	r3, r2, r3
 800d8a8:	b2db      	uxtb	r3, r3
 800d8aa:	429e      	cmp	r6, r3
 800d8ac:	bf28      	it	cs
 800d8ae:	461e      	movcs	r6, r3
 800d8b0:	462b      	mov	r3, r5
 800d8b2:	4622      	mov	r2, r4
 800d8b4:	2100      	movs	r1, #0
 800d8b6:	a805      	add	r0, sp, #20
 800d8b8:	f000 ffd6 	bl	800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d8bc:	e7e2      	b.n	800d884 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d8be:	4630      	mov	r0, r6
 800d8c0:	b01e      	add	sp, #120	; 0x78
 800d8c2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d8c6:	b003      	add	sp, #12
 800d8c8:	4770      	bx	lr

0800d8ca <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d8ca:	b513      	push	{r0, r1, r4, lr}
 800d8cc:	6803      	ldr	r3, [r0, #0]
 800d8ce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d8d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d8d6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d8da:	2400      	movs	r4, #0
 800d8dc:	9400      	str	r4, [sp, #0]
 800d8de:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d8e2:	691b      	ldr	r3, [r3, #16]
 800d8e4:	4669      	mov	r1, sp
 800d8e6:	4798      	blx	r3
 800d8e8:	b002      	add	sp, #8
 800d8ea:	bd10      	pop	{r4, pc}

0800d8ec <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d8ec:	b538      	push	{r3, r4, r5, lr}
 800d8ee:	680b      	ldr	r3, [r1, #0]
 800d8f0:	460c      	mov	r4, r1
 800d8f2:	68db      	ldr	r3, [r3, #12]
 800d8f4:	4605      	mov	r5, r0
 800d8f6:	4798      	blx	r3
 800d8f8:	6823      	ldr	r3, [r4, #0]
 800d8fa:	4620      	mov	r0, r4
 800d8fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d8fe:	4629      	mov	r1, r5
 800d900:	4798      	blx	r3
 800d902:	4628      	mov	r0, r5
 800d904:	bd38      	pop	{r3, r4, r5, pc}

0800d906 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d906:	b410      	push	{r4}
 800d908:	880a      	ldrh	r2, [r1, #0]
 800d90a:	8884      	ldrh	r4, [r0, #4]
 800d90c:	4422      	add	r2, r4
 800d90e:	800a      	strh	r2, [r1, #0]
 800d910:	88c4      	ldrh	r4, [r0, #6]
 800d912:	884a      	ldrh	r2, [r1, #2]
 800d914:	4422      	add	r2, r4
 800d916:	804a      	strh	r2, [r1, #2]
 800d918:	6940      	ldr	r0, [r0, #20]
 800d91a:	b120      	cbz	r0, 800d926 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d91c:	6803      	ldr	r3, [r0, #0]
 800d91e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d922:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d924:	4718      	bx	r3
 800d926:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d92a:	4770      	bx	lr

0800d92c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d92c:	b570      	push	{r4, r5, r6, lr}
 800d92e:	8882      	ldrh	r2, [r0, #4]
 800d930:	880b      	ldrh	r3, [r1, #0]
 800d932:	4413      	add	r3, r2
 800d934:	800b      	strh	r3, [r1, #0]
 800d936:	88c2      	ldrh	r2, [r0, #6]
 800d938:	884b      	ldrh	r3, [r1, #2]
 800d93a:	460c      	mov	r4, r1
 800d93c:	4413      	add	r3, r2
 800d93e:	804b      	strh	r3, [r1, #2]
 800d940:	4605      	mov	r5, r0
 800d942:	1d01      	adds	r1, r0, #4
 800d944:	4620      	mov	r0, r4
 800d946:	f7fb fcd3 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800d94a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d94e:	2b00      	cmp	r3, #0
 800d950:	dd0b      	ble.n	800d96a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d952:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d956:	2b00      	cmp	r3, #0
 800d958:	dd07      	ble.n	800d96a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d95a:	6968      	ldr	r0, [r5, #20]
 800d95c:	b128      	cbz	r0, 800d96a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d95e:	6803      	ldr	r3, [r0, #0]
 800d960:	4621      	mov	r1, r4
 800d962:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d964:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d968:	4718      	bx	r3
 800d96a:	bd70      	pop	{r4, r5, r6, pc}

0800d96c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d96c:	b570      	push	{r4, r5, r6, lr}
 800d96e:	8882      	ldrh	r2, [r0, #4]
 800d970:	880b      	ldrh	r3, [r1, #0]
 800d972:	4413      	add	r3, r2
 800d974:	800b      	strh	r3, [r1, #0]
 800d976:	88c2      	ldrh	r2, [r0, #6]
 800d978:	884b      	ldrh	r3, [r1, #2]
 800d97a:	460c      	mov	r4, r1
 800d97c:	4413      	add	r3, r2
 800d97e:	804b      	strh	r3, [r1, #2]
 800d980:	4605      	mov	r5, r0
 800d982:	1d01      	adds	r1, r0, #4
 800d984:	4620      	mov	r0, r4
 800d986:	f7fb fcb3 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800d98a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d98e:	2b00      	cmp	r3, #0
 800d990:	dd18      	ble.n	800d9c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d992:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d996:	2b00      	cmp	r3, #0
 800d998:	dd14      	ble.n	800d9c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d99a:	6968      	ldr	r0, [r5, #20]
 800d99c:	b128      	cbz	r0, 800d9aa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d99e:	6803      	ldr	r3, [r0, #0]
 800d9a0:	4621      	mov	r1, r4
 800d9a2:	691b      	ldr	r3, [r3, #16]
 800d9a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d9a8:	4718      	bx	r3
 800d9aa:	4b07      	ldr	r3, [pc, #28]	; (800d9c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800d9ac:	681b      	ldr	r3, [r3, #0]
 800d9ae:	3304      	adds	r3, #4
 800d9b0:	429d      	cmp	r5, r3
 800d9b2:	d107      	bne.n	800d9c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d9b4:	f7fe fffc 	bl	800c9b0 <_ZN8touchgfx11Application11getInstanceEv>
 800d9b8:	6821      	ldr	r1, [r4, #0]
 800d9ba:	6862      	ldr	r2, [r4, #4]
 800d9bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d9c0:	f7ff b89c 	b.w	800cafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d9c4:	bd70      	pop	{r4, r5, r6, pc}
 800d9c6:	bf00      	nop
 800d9c8:	2000a570 	.word	0x2000a570

0800d9cc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d9cc:	b570      	push	{r4, r5, r6, lr}
 800d9ce:	4604      	mov	r4, r0
 800d9d0:	4616      	mov	r6, r2
 800d9d2:	460d      	mov	r5, r1
 800d9d4:	b901      	cbnz	r1, 800d9d8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d9d6:	b192      	cbz	r2, 800d9fe <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800d9d8:	6823      	ldr	r3, [r4, #0]
 800d9da:	4620      	mov	r0, r4
 800d9dc:	699b      	ldr	r3, [r3, #24]
 800d9de:	4798      	blx	r3
 800d9e0:	88e2      	ldrh	r2, [r4, #6]
 800d9e2:	88a1      	ldrh	r1, [r4, #4]
 800d9e4:	4432      	add	r2, r6
 800d9e6:	4429      	add	r1, r5
 800d9e8:	4620      	mov	r0, r4
 800d9ea:	b212      	sxth	r2, r2
 800d9ec:	b209      	sxth	r1, r1
 800d9ee:	f7f4 fdf4 	bl	80025da <_ZN8touchgfx8Drawable5setXYEss>
 800d9f2:	6823      	ldr	r3, [r4, #0]
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	699b      	ldr	r3, [r3, #24]
 800d9f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d9fc:	4718      	bx	r3
 800d9fe:	bd70      	pop	{r4, r5, r6, pc}

0800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800da00:	b510      	push	{r4, lr}
 800da02:	4604      	mov	r4, r0
 800da04:	4608      	mov	r0, r1
 800da06:	2300      	movs	r3, #0
 800da08:	8023      	strh	r3, [r4, #0]
 800da0a:	8063      	strh	r3, [r4, #2]
 800da0c:	6803      	ldr	r3, [r0, #0]
 800da0e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800da12:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800da16:	80a1      	strh	r1, [r4, #4]
 800da18:	80e2      	strh	r2, [r4, #6]
 800da1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da1c:	4621      	mov	r1, r4
 800da1e:	4798      	blx	r3
 800da20:	4620      	mov	r0, r4
 800da22:	bd10      	pop	{r4, pc}

0800da24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800da24:	b530      	push	{r4, r5, lr}
 800da26:	8083      	strh	r3, [r0, #4]
 800da28:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800da2c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800da30:	7183      	strb	r3, [r0, #6]
 800da32:	79c3      	ldrb	r3, [r0, #7]
 800da34:	6101      	str	r1, [r0, #16]
 800da36:	f365 0306 	bfi	r3, r5, #0, #7
 800da3a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800da3e:	8282      	strh	r2, [r0, #20]
 800da40:	f365 13c7 	bfi	r3, r5, #7, #1
 800da44:	71c3      	strb	r3, [r0, #7]
 800da46:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800da4a:	7203      	strb	r3, [r0, #8]
 800da4c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800da50:	7243      	strb	r3, [r0, #9]
 800da52:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800da56:	8143      	strh	r3, [r0, #10]
 800da58:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800da5c:	8183      	strh	r3, [r0, #12]
 800da5e:	4b01      	ldr	r3, [pc, #4]	; (800da64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800da60:	6003      	str	r3, [r0, #0]
 800da62:	bd30      	pop	{r4, r5, pc}
 800da64:	0801efd8 	.word	0x0801efd8

0800da68 <_ZNK8touchgfx9ConstFont4findEt>:
 800da68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da6a:	6904      	ldr	r4, [r0, #16]
 800da6c:	b3bc      	cbz	r4, 800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da6e:	88a3      	ldrh	r3, [r4, #4]
 800da70:	8a82      	ldrh	r2, [r0, #20]
 800da72:	1acb      	subs	r3, r1, r3
 800da74:	f102 32ff 	add.w	r2, r2, #4294967295
 800da78:	d431      	bmi.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da7a:	4293      	cmp	r3, r2
 800da7c:	dd0c      	ble.n	800da98 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800da7e:	230e      	movs	r3, #14
 800da80:	fb03 4302 	mla	r3, r3, r2, r4
 800da84:	889b      	ldrh	r3, [r3, #4]
 800da86:	1a5b      	subs	r3, r3, r1
 800da88:	1ad3      	subs	r3, r2, r3
 800da8a:	429a      	cmp	r2, r3
 800da8c:	db27      	blt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da8e:	2b00      	cmp	r3, #0
 800da90:	bfbc      	itt	lt
 800da92:	2302      	movlt	r3, #2
 800da94:	fb92 f3f3 	sdivlt	r3, r2, r3
 800da98:	2500      	movs	r5, #0
 800da9a:	260e      	movs	r6, #14
 800da9c:	4295      	cmp	r5, r2
 800da9e:	dc1e      	bgt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800daa0:	fb06 4003 	mla	r0, r6, r3, r4
 800daa4:	8887      	ldrh	r7, [r0, #4]
 800daa6:	42b9      	cmp	r1, r7
 800daa8:	d01a      	beq.n	800dae0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800daaa:	d20d      	bcs.n	800dac8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800daac:	1e5a      	subs	r2, r3, #1
 800daae:	4295      	cmp	r5, r2
 800dab0:	dc15      	bgt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dab2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800dab6:	1a5b      	subs	r3, r3, r1
 800dab8:	1ad3      	subs	r3, r2, r3
 800daba:	429a      	cmp	r2, r3
 800dabc:	db0f      	blt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dabe:	429d      	cmp	r5, r3
 800dac0:	ddec      	ble.n	800da9c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dac2:	1953      	adds	r3, r2, r5
 800dac4:	105b      	asrs	r3, r3, #1
 800dac6:	e7e9      	b.n	800da9c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dac8:	1c5d      	adds	r5, r3, #1
 800daca:	42aa      	cmp	r2, r5
 800dacc:	db07      	blt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dace:	8a43      	ldrh	r3, [r0, #18]
 800dad0:	1acb      	subs	r3, r1, r3
 800dad2:	442b      	add	r3, r5
 800dad4:	429d      	cmp	r5, r3
 800dad6:	dc02      	bgt.n	800dade <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dad8:	429a      	cmp	r2, r3
 800dada:	dadf      	bge.n	800da9c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dadc:	e7f1      	b.n	800dac2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800dade:	2000      	movs	r0, #0
 800dae0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dae2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800dae2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dae4:	4604      	mov	r4, r0
 800dae6:	4617      	mov	r7, r2
 800dae8:	461e      	mov	r6, r3
 800daea:	b911      	cbnz	r1, 800daf2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800daec:	2500      	movs	r5, #0
 800daee:	4628      	mov	r0, r5
 800daf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800daf2:	290a      	cmp	r1, #10
 800daf4:	d0fa      	beq.n	800daec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800daf6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800dafa:	4291      	cmp	r1, r2
 800dafc:	d0f6      	beq.n	800daec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dafe:	f242 020b 	movw	r2, #8203	; 0x200b
 800db02:	4291      	cmp	r1, r2
 800db04:	d0f2      	beq.n	800daec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db06:	f7ff ffaf 	bl	800da68 <_ZNK8touchgfx9ConstFont4findEt>
 800db0a:	4605      	mov	r5, r0
 800db0c:	b950      	cbnz	r0, 800db24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800db0e:	6823      	ldr	r3, [r4, #0]
 800db10:	4620      	mov	r0, r4
 800db12:	691b      	ldr	r3, [r3, #16]
 800db14:	4798      	blx	r3
 800db16:	4601      	mov	r1, r0
 800db18:	4620      	mov	r0, r4
 800db1a:	f7ff ffa5 	bl	800da68 <_ZNK8touchgfx9ConstFont4findEt>
 800db1e:	4605      	mov	r5, r0
 800db20:	2800      	cmp	r0, #0
 800db22:	d0e3      	beq.n	800daec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800db24:	6823      	ldr	r3, [r4, #0]
 800db26:	4629      	mov	r1, r5
 800db28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800db2a:	4620      	mov	r0, r4
 800db2c:	4798      	blx	r3
 800db2e:	6038      	str	r0, [r7, #0]
 800db30:	6823      	ldr	r3, [r4, #0]
 800db32:	4620      	mov	r0, r4
 800db34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800db36:	4798      	blx	r3
 800db38:	7030      	strb	r0, [r6, #0]
 800db3a:	e7d8      	b.n	800daee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800db3c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800db3c:	2000      	movs	r0, #0
 800db3e:	4770      	bx	lr

0800db40 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800db40:	2001      	movs	r0, #1
 800db42:	4770      	bx	lr

0800db44 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800db44:	2002      	movs	r0, #2
 800db46:	4770      	bx	lr

0800db48 <_ZN8touchgfx6ScreenD1Ev>:
 800db48:	4770      	bx	lr

0800db4a <_ZN8touchgfx12GestureEventD1Ev>:
 800db4a:	4770      	bx	lr

0800db4c <_ZN8touchgfx9DragEventD1Ev>:
 800db4c:	4770      	bx	lr

0800db4e <_ZN8touchgfx10ClickEventD1Ev>:
 800db4e:	4770      	bx	lr

0800db50 <_ZN8touchgfx10ClickEventD0Ev>:
 800db50:	b510      	push	{r4, lr}
 800db52:	210c      	movs	r1, #12
 800db54:	4604      	mov	r4, r0
 800db56:	f00e f86f 	bl	801bc38 <_ZdlPvj>
 800db5a:	4620      	mov	r0, r4
 800db5c:	bd10      	pop	{r4, pc}

0800db5e <_ZN8touchgfx9DragEventD0Ev>:
 800db5e:	b510      	push	{r4, lr}
 800db60:	2110      	movs	r1, #16
 800db62:	4604      	mov	r4, r0
 800db64:	f00e f868 	bl	801bc38 <_ZdlPvj>
 800db68:	4620      	mov	r0, r4
 800db6a:	bd10      	pop	{r4, pc}

0800db6c <_ZN8touchgfx12GestureEventD0Ev>:
 800db6c:	b510      	push	{r4, lr}
 800db6e:	210c      	movs	r1, #12
 800db70:	4604      	mov	r4, r0
 800db72:	f00e f861 	bl	801bc38 <_ZdlPvj>
 800db76:	4620      	mov	r0, r4
 800db78:	bd10      	pop	{r4, pc}

0800db7a <_ZN8touchgfx6ScreenD0Ev>:
 800db7a:	b510      	push	{r4, lr}
 800db7c:	213c      	movs	r1, #60	; 0x3c
 800db7e:	4604      	mov	r4, r0
 800db80:	f00e f85a 	bl	801bc38 <_ZdlPvj>
 800db84:	4620      	mov	r0, r4
 800db86:	bd10      	pop	{r4, pc}

0800db88 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800db88:	b530      	push	{r4, r5, lr}
 800db8a:	460d      	mov	r5, r1
 800db8c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800db8e:	b087      	sub	sp, #28
 800db90:	4604      	mov	r4, r0
 800db92:	b301      	cbz	r1, 800dbd6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800db94:	a801      	add	r0, sp, #4
 800db96:	f7ff ff33 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db9a:	892a      	ldrh	r2, [r5, #8]
 800db9c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dba0:	7928      	ldrb	r0, [r5, #4]
 800dba2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dba6:	f88d 0010 	strb.w	r0, [sp, #16]
 800dbaa:	1ad2      	subs	r2, r2, r3
 800dbac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dbae:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dbb0:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dbb4:	441a      	add	r2, r3
 800dbb6:	896b      	ldrh	r3, [r5, #10]
 800dbb8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800dbbc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dbc0:	1b5b      	subs	r3, r3, r5
 800dbc2:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800dbc4:	442b      	add	r3, r5
 800dbc6:	4d05      	ldr	r5, [pc, #20]	; (800dbdc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800dbc8:	9503      	str	r5, [sp, #12]
 800dbca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dbce:	6803      	ldr	r3, [r0, #0]
 800dbd0:	a903      	add	r1, sp, #12
 800dbd2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dbd4:	4798      	blx	r3
 800dbd6:	b007      	add	sp, #28
 800dbd8:	bd30      	pop	{r4, r5, pc}
 800dbda:	bf00      	nop
 800dbdc:	0801f058 	.word	0x0801f058

0800dbe0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dbe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbe4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dbe6:	b08a      	sub	sp, #40	; 0x28
 800dbe8:	4604      	mov	r4, r0
 800dbea:	460d      	mov	r5, r1
 800dbec:	b113      	cbz	r3, 800dbf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800dbee:	790b      	ldrb	r3, [r1, #4]
 800dbf0:	2b00      	cmp	r3, #0
 800dbf2:	d044      	beq.n	800dc7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dbf4:	f104 0804 	add.w	r8, r4, #4
 800dbf8:	4641      	mov	r1, r8
 800dbfa:	a803      	add	r0, sp, #12
 800dbfc:	f7ff ff00 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc00:	792b      	ldrb	r3, [r5, #4]
 800dc02:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800dc06:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800dc0a:	b983      	cbnz	r3, 800dc2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800dc0c:	892a      	ldrh	r2, [r5, #8]
 800dc0e:	88e9      	ldrh	r1, [r5, #6]
 800dc10:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800dc14:	1b92      	subs	r2, r2, r6
 800dc16:	1bc9      	subs	r1, r1, r7
 800dc18:	9301      	str	r3, [sp, #4]
 800dc1a:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800dc1e:	9300      	str	r3, [sp, #0]
 800dc20:	b212      	sxth	r2, r2
 800dc22:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dc26:	b209      	sxth	r1, r1
 800dc28:	4640      	mov	r0, r8
 800dc2a:	f7fb fa7d 	bl	8009128 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800dc2e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dc30:	b329      	cbz	r1, 800dc7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc32:	a805      	add	r0, sp, #20
 800dc34:	f7ff fee4 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc38:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc3c:	792b      	ldrb	r3, [r5, #4]
 800dc3e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc40:	f88d 3020 	strb.w	r3, [sp, #32]
 800dc44:	1abf      	subs	r7, r7, r2
 800dc46:	88ea      	ldrh	r2, [r5, #6]
 800dc48:	4417      	add	r7, r2
 800dc4a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800dc4c:	4417      	add	r7, r2
 800dc4e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dc52:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dc56:	1ab6      	subs	r6, r6, r2
 800dc58:	892a      	ldrh	r2, [r5, #8]
 800dc5a:	4416      	add	r6, r2
 800dc5c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800dc5e:	4416      	add	r6, r2
 800dc60:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800dc64:	4a07      	ldr	r2, [pc, #28]	; (800dc84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800dc66:	9207      	str	r2, [sp, #28]
 800dc68:	2600      	movs	r6, #0
 800dc6a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800dc6e:	6803      	ldr	r3, [r0, #0]
 800dc70:	a907      	add	r1, sp, #28
 800dc72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc74:	4798      	blx	r3
 800dc76:	792b      	ldrb	r3, [r5, #4]
 800dc78:	b10b      	cbz	r3, 800dc7e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc7a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dc7e:	b00a      	add	sp, #40	; 0x28
 800dc80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc84:	0801f030 	.word	0x0801f030

0800dc88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dc88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc8c:	460c      	mov	r4, r1
 800dc8e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dc90:	b088      	sub	sp, #32
 800dc92:	4605      	mov	r5, r0
 800dc94:	2900      	cmp	r1, #0
 800dc96:	d06d      	beq.n	800dd74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800dc98:	4668      	mov	r0, sp
 800dc9a:	f7ff feb1 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc9e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800dca0:	88e3      	ldrh	r3, [r4, #6]
 800dca2:	f9bd 8000 	ldrsh.w	r8, [sp]
 800dca6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800dcaa:	440b      	add	r3, r1
 800dcac:	b21b      	sxth	r3, r3
 800dcae:	4543      	cmp	r3, r8
 800dcb0:	db31      	blt.n	800dd16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dcb2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800dcb6:	44c4      	add	ip, r8
 800dcb8:	fa0f fc8c 	sxth.w	ip, ip
 800dcbc:	4563      	cmp	r3, ip
 800dcbe:	da2a      	bge.n	800dd16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dcc0:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800dcc2:	8926      	ldrh	r6, [r4, #8]
 800dcc4:	4416      	add	r6, r2
 800dcc6:	b236      	sxth	r6, r6
 800dcc8:	42be      	cmp	r6, r7
 800dcca:	db24      	blt.n	800dd16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dccc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800dcd0:	4438      	add	r0, r7
 800dcd2:	b200      	sxth	r0, r0
 800dcd4:	4286      	cmp	r6, r0
 800dcd6:	da1e      	bge.n	800dd16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dcd8:	8963      	ldrh	r3, [r4, #10]
 800dcda:	4419      	add	r1, r3
 800dcdc:	b209      	sxth	r1, r1
 800dcde:	4541      	cmp	r1, r8
 800dce0:	db08      	blt.n	800dcf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dce2:	4561      	cmp	r1, ip
 800dce4:	da06      	bge.n	800dcf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dce6:	89a3      	ldrh	r3, [r4, #12]
 800dce8:	441a      	add	r2, r3
 800dcea:	b212      	sxth	r2, r2
 800dcec:	42ba      	cmp	r2, r7
 800dcee:	db01      	blt.n	800dcf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dcf0:	4282      	cmp	r2, r0
 800dcf2:	db10      	blt.n	800dd16 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dcf4:	4b21      	ldr	r3, [pc, #132]	; (800dd7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800dcf6:	9304      	str	r3, [sp, #16]
 800dcf8:	2302      	movs	r3, #2
 800dcfa:	f88d 3014 	strb.w	r3, [sp, #20]
 800dcfe:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dd00:	2300      	movs	r3, #0
 800dd02:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dd06:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dd0a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dd0e:	6803      	ldr	r3, [r0, #0]
 800dd10:	a904      	add	r1, sp, #16
 800dd12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd14:	4798      	blx	r3
 800dd16:	1d29      	adds	r1, r5, #4
 800dd18:	a802      	add	r0, sp, #8
 800dd1a:	f7ff fe71 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd1e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800dd22:	88e0      	ldrh	r0, [r4, #6]
 800dd24:	7921      	ldrb	r1, [r4, #4]
 800dd26:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800dd2a:	8922      	ldrh	r2, [r4, #8]
 800dd2c:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800dd2e:	f88d 1014 	strb.w	r1, [sp, #20]
 800dd32:	eba3 0808 	sub.w	r8, r3, r8
 800dd36:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dd3a:	1bdf      	subs	r7, r3, r7
 800dd3c:	b2bb      	uxth	r3, r7
 800dd3e:	fa1f f888 	uxth.w	r8, r8
 800dd42:	8967      	ldrh	r7, [r4, #10]
 800dd44:	89a4      	ldrh	r4, [r4, #12]
 800dd46:	4440      	add	r0, r8
 800dd48:	4460      	add	r0, ip
 800dd4a:	441a      	add	r2, r3
 800dd4c:	44b8      	add	r8, r7
 800dd4e:	4423      	add	r3, r4
 800dd50:	f8ad 0016 	strh.w	r0, [sp, #22]
 800dd54:	4433      	add	r3, r6
 800dd56:	4432      	add	r2, r6
 800dd58:	44e0      	add	r8, ip
 800dd5a:	4c09      	ldr	r4, [pc, #36]	; (800dd80 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800dd5c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dd5e:	9404      	str	r4, [sp, #16]
 800dd60:	f8ad 2018 	strh.w	r2, [sp, #24]
 800dd64:	f8ad 801a 	strh.w	r8, [sp, #26]
 800dd68:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dd6c:	6803      	ldr	r3, [r0, #0]
 800dd6e:	a904      	add	r1, sp, #16
 800dd70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dd72:	4798      	blx	r3
 800dd74:	b008      	add	sp, #32
 800dd76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd7a:	bf00      	nop
 800dd7c:	0801f030 	.word	0x0801f030
 800dd80:	0801f044 	.word	0x0801f044

0800dd84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800dd84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd86:	4604      	mov	r4, r0
 800dd88:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800dd8c:	3201      	adds	r2, #1
 800dd8e:	d112      	bne.n	800ddb6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800dd90:	6803      	ldr	r3, [r0, #0]
 800dd92:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dd96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dd9a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dd9e:	2500      	movs	r5, #0
 800dda0:	9500      	str	r5, [sp, #0]
 800dda2:	466d      	mov	r5, sp
 800dda4:	4629      	mov	r1, r5
 800dda6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ddaa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ddac:	4798      	blx	r3
 800ddae:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ddb2:	e884 0003 	stmia.w	r4, {r0, r1}
 800ddb6:	4620      	mov	r0, r4
 800ddb8:	b003      	add	sp, #12
 800ddba:	bd30      	pop	{r4, r5, pc}

0800ddbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ddbc:	b513      	push	{r0, r1, r4, lr}
 800ddbe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ddc2:	3301      	adds	r3, #1
 800ddc4:	4604      	mov	r4, r0
 800ddc6:	d109      	bne.n	800dddc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ddc8:	4601      	mov	r1, r0
 800ddca:	4668      	mov	r0, sp
 800ddcc:	f7ff fe18 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ddd0:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddd4:	8423      	strh	r3, [r4, #32]
 800ddd6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddda:	8463      	strh	r3, [r4, #34]	; 0x22
 800dddc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800dde0:	b002      	add	sp, #8
 800dde2:	bd10      	pop	{r4, pc}

0800dde4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800dde4:	b513      	push	{r0, r1, r4, lr}
 800dde6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ddea:	3301      	adds	r3, #1
 800ddec:	4604      	mov	r4, r0
 800ddee:	d109      	bne.n	800de04 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ddf0:	4601      	mov	r1, r0
 800ddf2:	4668      	mov	r0, sp
 800ddf4:	f7ff fe04 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ddf8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddfc:	8423      	strh	r3, [r4, #32]
 800ddfe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de02:	8463      	strh	r3, [r4, #34]	; 0x22
 800de04:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800de08:	b002      	add	sp, #8
 800de0a:	bd10      	pop	{r4, pc}

0800de0c <_ZN8touchgfx6ScreenC1Ev>:
 800de0c:	b570      	push	{r4, r5, r6, lr}
 800de0e:	4605      	mov	r5, r0
 800de10:	4b16      	ldr	r3, [pc, #88]	; (800de6c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800de12:	f845 3b04 	str.w	r3, [r5], #4
 800de16:	2300      	movs	r3, #0
 800de18:	8103      	strh	r3, [r0, #8]
 800de1a:	8143      	strh	r3, [r0, #10]
 800de1c:	8183      	strh	r3, [r0, #12]
 800de1e:	81c3      	strh	r3, [r0, #14]
 800de20:	8203      	strh	r3, [r0, #16]
 800de22:	8243      	strh	r3, [r0, #18]
 800de24:	8283      	strh	r3, [r0, #20]
 800de26:	82c3      	strh	r3, [r0, #22]
 800de28:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800de2c:	6203      	str	r3, [r0, #32]
 800de2e:	8483      	strh	r3, [r0, #36]	; 0x24
 800de30:	84c3      	strh	r3, [r0, #38]	; 0x26
 800de32:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800de36:	4a0e      	ldr	r2, [pc, #56]	; (800de70 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800de38:	6343      	str	r3, [r0, #52]	; 0x34
 800de3a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800de3e:	4b0d      	ldr	r3, [pc, #52]	; (800de74 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800de40:	6042      	str	r2, [r0, #4]
 800de42:	f9b3 6000 	ldrsh.w	r6, [r3]
 800de46:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800de48:	4a0b      	ldr	r2, [pc, #44]	; (800de78 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800de4a:	4604      	mov	r4, r0
 800de4c:	2101      	movs	r1, #1
 800de4e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800de52:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800de56:	f9b2 1000 	ldrsh.w	r1, [r2]
 800de5a:	4628      	mov	r0, r5
 800de5c:	4798      	blx	r3
 800de5e:	6863      	ldr	r3, [r4, #4]
 800de60:	4628      	mov	r0, r5
 800de62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800de64:	4631      	mov	r1, r6
 800de66:	4798      	blx	r3
 800de68:	4620      	mov	r0, r4
 800de6a:	bd70      	pop	{r4, r5, r6, pc}
 800de6c:	0801f06c 	.word	0x0801f06c
 800de70:	0801e2d0 	.word	0x0801e2d0
 800de74:	2000a52a 	.word	0x2000a52a
 800de78:	2000a528 	.word	0x2000a528

0800de7c <_ZN8touchgfx6Screen4drawEv>:
 800de7c:	b507      	push	{r0, r1, r2, lr}
 800de7e:	4b09      	ldr	r3, [pc, #36]	; (800dea4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800de80:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de84:	4b08      	ldr	r3, [pc, #32]	; (800dea8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800de86:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de8a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de92:	6803      	ldr	r3, [r0, #0]
 800de94:	2100      	movs	r1, #0
 800de96:	9100      	str	r1, [sp, #0]
 800de98:	689b      	ldr	r3, [r3, #8]
 800de9a:	4669      	mov	r1, sp
 800de9c:	4798      	blx	r3
 800de9e:	b003      	add	sp, #12
 800dea0:	f85d fb04 	ldr.w	pc, [sp], #4
 800dea4:	2000a528 	.word	0x2000a528
 800dea8:	2000a52a 	.word	0x2000a52a

0800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800deac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deb0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800deb4:	2b00      	cmp	r3, #0
 800deb6:	b089      	sub	sp, #36	; 0x24
 800deb8:	4680      	mov	r8, r0
 800deba:	460c      	mov	r4, r1
 800debc:	4615      	mov	r5, r2
 800debe:	dd0e      	ble.n	800dede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dec0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800dec4:	2b00      	cmp	r3, #0
 800dec6:	dd0a      	ble.n	800dede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dec8:	4628      	mov	r0, r5
 800deca:	f7ff ff5b 	bl	800dd84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dece:	4621      	mov	r1, r4
 800ded0:	f7fe fc90 	bl	800c7f4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ded4:	69eb      	ldr	r3, [r5, #28]
 800ded6:	b928      	cbnz	r0, 800dee4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800ded8:	461d      	mov	r5, r3
 800deda:	2b00      	cmp	r3, #0
 800dedc:	d1f4      	bne.n	800dec8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800dede:	b009      	add	sp, #36	; 0x24
 800dee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dee4:	ae04      	add	r6, sp, #16
 800dee6:	2b00      	cmp	r3, #0
 800dee8:	f000 80b5 	beq.w	800e056 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800deec:	682b      	ldr	r3, [r5, #0]
 800deee:	4629      	mov	r1, r5
 800def0:	68db      	ldr	r3, [r3, #12]
 800def2:	a802      	add	r0, sp, #8
 800def4:	4798      	blx	r3
 800def6:	4628      	mov	r0, r5
 800def8:	f7ff ff60 	bl	800ddbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800defc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800df00:	4407      	add	r7, r0
 800df02:	4628      	mov	r0, r5
 800df04:	f7ff ff6e 	bl	800dde4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800df08:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800df0c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800df10:	f8ad 2014 	strh.w	r2, [sp, #20]
 800df14:	4418      	add	r0, r3
 800df16:	4621      	mov	r1, r4
 800df18:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800df1c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800df20:	b23f      	sxth	r7, r7
 800df22:	4630      	mov	r0, r6
 800df24:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df28:	f8ad 7010 	strh.w	r7, [sp, #16]
 800df2c:	f7fb f9e0 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800df30:	4628      	mov	r0, r5
 800df32:	f7ff ff27 	bl	800dd84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df36:	4602      	mov	r2, r0
 800df38:	e896 0003 	ldmia.w	r6, {r0, r1}
 800df3c:	ab06      	add	r3, sp, #24
 800df3e:	e883 0003 	stmia.w	r3, {r0, r1}
 800df42:	4611      	mov	r1, r2
 800df44:	4618      	mov	r0, r3
 800df46:	f7fb f9d3 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800df4a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800df4e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800df52:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800df56:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800df5a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800df5e:	4299      	cmp	r1, r3
 800df60:	d10b      	bne.n	800df7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df62:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800df66:	4552      	cmp	r2, sl
 800df68:	d107      	bne.n	800df7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df6a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800df6e:	455a      	cmp	r2, fp
 800df70:	d103      	bne.n	800df7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df72:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800df76:	454a      	cmp	r2, r9
 800df78:	d06d      	beq.n	800e056 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800df7a:	f1bb 0f00 	cmp.w	fp, #0
 800df7e:	dd65      	ble.n	800e04c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800df80:	f1b9 0f00 	cmp.w	r9, #0
 800df84:	dd62      	ble.n	800e04c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800df86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800df8a:	fa1f f08a 	uxth.w	r0, sl
 800df8e:	4552      	cmp	r2, sl
 800df90:	9000      	str	r0, [sp, #0]
 800df92:	da12      	bge.n	800dfba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800df94:	9301      	str	r3, [sp, #4]
 800df96:	9b00      	ldr	r3, [sp, #0]
 800df98:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800df9c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800dfa0:	1a9a      	subs	r2, r3, r2
 800dfa2:	f8ad 1010 	strh.w	r1, [sp, #16]
 800dfa6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dfaa:	f8ad 2016 	strh.w	r2, [sp, #22]
 800dfae:	69ea      	ldr	r2, [r5, #28]
 800dfb0:	4631      	mov	r1, r6
 800dfb2:	4640      	mov	r0, r8
 800dfb4:	f7ff ff7a 	bl	800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfb8:	9b01      	ldr	r3, [sp, #4]
 800dfba:	f9b4 2000 	ldrsh.w	r2, [r4]
 800dfbe:	429a      	cmp	r2, r3
 800dfc0:	b29f      	uxth	r7, r3
 800dfc2:	da0d      	bge.n	800dfe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800dfc4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dfc8:	1aba      	subs	r2, r7, r2
 800dfca:	f8ad a012 	strh.w	sl, [sp, #18]
 800dfce:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dfd2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dfd6:	69ea      	ldr	r2, [r5, #28]
 800dfd8:	4631      	mov	r1, r6
 800dfda:	4640      	mov	r0, r8
 800dfdc:	f7ff ff66 	bl	800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfe0:	8822      	ldrh	r2, [r4, #0]
 800dfe2:	88a3      	ldrh	r3, [r4, #4]
 800dfe4:	445f      	add	r7, fp
 800dfe6:	4413      	add	r3, r2
 800dfe8:	b29b      	uxth	r3, r3
 800dfea:	b2bf      	uxth	r7, r7
 800dfec:	b23a      	sxth	r2, r7
 800dfee:	b219      	sxth	r1, r3
 800dff0:	4291      	cmp	r1, r2
 800dff2:	dd0d      	ble.n	800e010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800dff4:	1bdb      	subs	r3, r3, r7
 800dff6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dffa:	f8ad a012 	strh.w	sl, [sp, #18]
 800dffe:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e002:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e006:	69ea      	ldr	r2, [r5, #28]
 800e008:	4631      	mov	r1, r6
 800e00a:	4640      	mov	r0, r8
 800e00c:	f7ff ff4e 	bl	800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e010:	88e2      	ldrh	r2, [r4, #6]
 800e012:	8863      	ldrh	r3, [r4, #2]
 800e014:	4413      	add	r3, r2
 800e016:	9a00      	ldr	r2, [sp, #0]
 800e018:	444a      	add	r2, r9
 800e01a:	b29b      	uxth	r3, r3
 800e01c:	fa1f f982 	uxth.w	r9, r2
 800e020:	fa0f f289 	sxth.w	r2, r9
 800e024:	b219      	sxth	r1, r3
 800e026:	428a      	cmp	r2, r1
 800e028:	da15      	bge.n	800e056 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e02a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e02e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e032:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e036:	eba3 0309 	sub.w	r3, r3, r9
 800e03a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e03e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e042:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e046:	69ea      	ldr	r2, [r5, #28]
 800e048:	4631      	mov	r1, r6
 800e04a:	e001      	b.n	800e050 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e04c:	69ea      	ldr	r2, [r5, #28]
 800e04e:	4621      	mov	r1, r4
 800e050:	4640      	mov	r0, r8
 800e052:	f7ff ff2b 	bl	800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e056:	4628      	mov	r0, r5
 800e058:	f7ff fe94 	bl	800dd84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e05c:	6861      	ldr	r1, [r4, #4]
 800e05e:	4602      	mov	r2, r0
 800e060:	6820      	ldr	r0, [r4, #0]
 800e062:	4633      	mov	r3, r6
 800e064:	c303      	stmia	r3!, {r0, r1}
 800e066:	4611      	mov	r1, r2
 800e068:	4630      	mov	r0, r6
 800e06a:	f7fb f941 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800e06e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e072:	2b00      	cmp	r3, #0
 800e074:	f77f af33 	ble.w	800dede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e078:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	f77f af2e 	ble.w	800dede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e082:	4628      	mov	r0, r5
 800e084:	f7ff fe9a 	bl	800ddbc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e088:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e08c:	1a18      	subs	r0, r3, r0
 800e08e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e092:	4628      	mov	r0, r5
 800e094:	f7ff fea6 	bl	800dde4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e098:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e09c:	1a18      	subs	r0, r3, r0
 800e09e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e0a2:	682b      	ldr	r3, [r5, #0]
 800e0a4:	4631      	mov	r1, r6
 800e0a6:	689b      	ldr	r3, [r3, #8]
 800e0a8:	4628      	mov	r0, r5
 800e0aa:	4798      	blx	r3
 800e0ac:	e717      	b.n	800dede <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e0ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e0ae:	b570      	push	{r4, r5, r6, lr}
 800e0b0:	460c      	mov	r4, r1
 800e0b2:	b086      	sub	sp, #24
 800e0b4:	1d06      	adds	r6, r0, #4
 800e0b6:	2300      	movs	r3, #0
 800e0b8:	4631      	mov	r1, r6
 800e0ba:	4605      	mov	r5, r0
 800e0bc:	a802      	add	r0, sp, #8
 800e0be:	9301      	str	r3, [sp, #4]
 800e0c0:	f7ff fc9e 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0c4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e0c8:	8822      	ldrh	r2, [r4, #0]
 800e0ca:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e0ce:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e0d2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e0d6:	1ad2      	subs	r2, r2, r3
 800e0d8:	8863      	ldrh	r3, [r4, #2]
 800e0da:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e0de:	1a5b      	subs	r3, r3, r1
 800e0e0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e0e4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e0e8:	aa01      	add	r2, sp, #4
 800e0ea:	a904      	add	r1, sp, #16
 800e0ec:	4630      	mov	r0, r6
 800e0ee:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e0f2:	f7fb f9d5 	bl	80094a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e0f6:	9a01      	ldr	r2, [sp, #4]
 800e0f8:	b11a      	cbz	r2, 800e102 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e0fa:	4621      	mov	r1, r4
 800e0fc:	4628      	mov	r0, r5
 800e0fe:	f7ff fed5 	bl	800deac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e102:	b006      	add	sp, #24
 800e104:	bd70      	pop	{r4, r5, r6, pc}

0800e106 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e106:	b530      	push	{r4, r5, lr}
 800e108:	4602      	mov	r2, r0
 800e10a:	4604      	mov	r4, r0
 800e10c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e110:	b085      	sub	sp, #20
 800e112:	460d      	mov	r5, r1
 800e114:	6851      	ldr	r1, [r2, #4]
 800e116:	466b      	mov	r3, sp
 800e118:	c303      	stmia	r3!, {r0, r1}
 800e11a:	4629      	mov	r1, r5
 800e11c:	4668      	mov	r0, sp
 800e11e:	f7fb f8e7 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 800e122:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e126:	b12b      	cbz	r3, 800e134 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e128:	4669      	mov	r1, sp
 800e12a:	4620      	mov	r0, r4
 800e12c:	f7ff ffbf 	bl	800e0ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e130:	b005      	add	sp, #20
 800e132:	bd30      	pop	{r4, r5, pc}
 800e134:	3404      	adds	r4, #4
 800e136:	4621      	mov	r1, r4
 800e138:	a802      	add	r0, sp, #8
 800e13a:	f7ff fc61 	bl	800da00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e13e:	f8bd 3000 	ldrh.w	r3, [sp]
 800e142:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e146:	1a9b      	subs	r3, r3, r2
 800e148:	f8ad 3000 	strh.w	r3, [sp]
 800e14c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e150:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e154:	4669      	mov	r1, sp
 800e156:	1a9b      	subs	r3, r3, r2
 800e158:	4620      	mov	r0, r4
 800e15a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e15e:	f7fb f966 	bl	800942e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e162:	e7e5      	b.n	800e130 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e164 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e164:	680a      	ldr	r2, [r1, #0]
 800e166:	460b      	mov	r3, r1
 800e168:	6992      	ldr	r2, [r2, #24]
 800e16a:	1d01      	adds	r1, r0, #4
 800e16c:	4618      	mov	r0, r3
 800e16e:	4710      	bx	r2

0800e170 <_ZN8touchgfx12TextProviderC1Ev>:
 800e170:	b538      	push	{r3, r4, r5, lr}
 800e172:	2500      	movs	r5, #0
 800e174:	2302      	movs	r3, #2
 800e176:	4604      	mov	r4, r0
 800e178:	e9c0 5500 	strd	r5, r5, [r0]
 800e17c:	7403      	strb	r3, [r0, #16]
 800e17e:	6145      	str	r5, [r0, #20]
 800e180:	7605      	strb	r5, [r0, #24]
 800e182:	83c5      	strh	r5, [r0, #30]
 800e184:	8405      	strh	r5, [r0, #32]
 800e186:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e188:	8705      	strh	r5, [r0, #56]	; 0x38
 800e18a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e18c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e190:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e194:	220e      	movs	r2, #14
 800e196:	4629      	mov	r1, r5
 800e198:	304c      	adds	r0, #76	; 0x4c
 800e19a:	f00d fe07 	bl	801bdac <memset>
 800e19e:	2301      	movs	r3, #1
 800e1a0:	4620      	mov	r0, r4
 800e1a2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e1a6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e1aa:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e1ae:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e1b2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e1b6:	f7f4 fc65 	bl	8002a84 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e1ba:	4620      	mov	r0, r4
 800e1bc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e1c0 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800e1c0:	b508      	push	{r3, lr}
 800e1c2:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e1c4:	b92b      	cbnz	r3, 800e1d2 <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 800e1c6:	4b07      	ldr	r3, [pc, #28]	; (800e1e4 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 800e1c8:	4a07      	ldr	r2, [pc, #28]	; (800e1e8 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 800e1ca:	4808      	ldr	r0, [pc, #32]	; (800e1ec <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 800e1cc:	21c0      	movs	r1, #192	; 0xc0
 800e1ce:	f00d fd61 	bl	801bc94 <__assert_func>
 800e1d2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e1d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e1d8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800e1da:	fab0 f080 	clz	r0, r0
 800e1de:	0940      	lsrs	r0, r0, #5
 800e1e0:	bd08      	pop	{r3, pc}
 800e1e2:	bf00      	nop
 800e1e4:	0801dbbc 	.word	0x0801dbbc
 800e1e8:	0801f2c7 	.word	0x0801f2c7
 800e1ec:	0801dc8e 	.word	0x0801dc8e

0800e1f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e1f0:	b530      	push	{r4, r5, lr}
 800e1f2:	2500      	movs	r5, #0
 800e1f4:	2401      	movs	r4, #1
 800e1f6:	6843      	ldr	r3, [r0, #4]
 800e1f8:	b913      	cbnz	r3, 800e200 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e1fa:	6803      	ldr	r3, [r0, #0]
 800e1fc:	b313      	cbz	r3, 800e244 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e1fe:	6043      	str	r3, [r0, #4]
 800e200:	7e03      	ldrb	r3, [r0, #24]
 800e202:	b143      	cbz	r3, 800e216 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e204:	6943      	ldr	r3, [r0, #20]
 800e206:	b12b      	cbz	r3, 800e214 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e208:	881a      	ldrh	r2, [r3, #0]
 800e20a:	b11a      	cbz	r2, 800e214 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e20c:	1c9a      	adds	r2, r3, #2
 800e20e:	6142      	str	r2, [r0, #20]
 800e210:	8818      	ldrh	r0, [r3, #0]
 800e212:	bd30      	pop	{r4, r5, pc}
 800e214:	7605      	strb	r5, [r0, #24]
 800e216:	6843      	ldr	r3, [r0, #4]
 800e218:	8819      	ldrh	r1, [r3, #0]
 800e21a:	b199      	cbz	r1, 800e244 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e21c:	1c9a      	adds	r2, r3, #2
 800e21e:	2902      	cmp	r1, #2
 800e220:	6042      	str	r2, [r0, #4]
 800e222:	d1f5      	bne.n	800e210 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e224:	7c03      	ldrb	r3, [r0, #16]
 800e226:	2b01      	cmp	r3, #1
 800e228:	d8e5      	bhi.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e22a:	1c5a      	adds	r2, r3, #1
 800e22c:	3302      	adds	r3, #2
 800e22e:	7402      	strb	r2, [r0, #16]
 800e230:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e234:	6143      	str	r3, [r0, #20]
 800e236:	2b00      	cmp	r3, #0
 800e238:	d0dd      	beq.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e23a:	881b      	ldrh	r3, [r3, #0]
 800e23c:	2b00      	cmp	r3, #0
 800e23e:	d0da      	beq.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e240:	7604      	strb	r4, [r0, #24]
 800e242:	e7d8      	b.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e244:	2000      	movs	r0, #0
 800e246:	e7e4      	b.n	800e212 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e248:	b430      	push	{r4, r5}
 800e24a:	6001      	str	r1, [r0, #0]
 800e24c:	2100      	movs	r1, #0
 800e24e:	6041      	str	r1, [r0, #4]
 800e250:	6815      	ldr	r5, [r2, #0]
 800e252:	6085      	str	r5, [r0, #8]
 800e254:	6852      	ldr	r2, [r2, #4]
 800e256:	6443      	str	r3, [r0, #68]	; 0x44
 800e258:	9b02      	ldr	r3, [sp, #8]
 800e25a:	60c2      	str	r2, [r0, #12]
 800e25c:	7401      	strb	r1, [r0, #16]
 800e25e:	6141      	str	r1, [r0, #20]
 800e260:	7601      	strb	r1, [r0, #24]
 800e262:	8701      	strh	r1, [r0, #56]	; 0x38
 800e264:	8401      	strh	r1, [r0, #32]
 800e266:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e26a:	6483      	str	r3, [r0, #72]	; 0x48
 800e26c:	bc30      	pop	{r4, r5}
 800e26e:	f7f4 bc09 	b.w	8002a84 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e272 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800e272:	b408      	push	{r3}
 800e274:	b510      	push	{r4, lr}
 800e276:	b085      	sub	sp, #20
 800e278:	ac07      	add	r4, sp, #28
 800e27a:	f854 3b04 	ldr.w	r3, [r4], #4
 800e27e:	9300      	str	r3, [sp, #0]
 800e280:	4613      	mov	r3, r2
 800e282:	4622      	mov	r2, r4
 800e284:	9403      	str	r4, [sp, #12]
 800e286:	f7ff ffdf 	bl	800e248 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e28a:	b005      	add	sp, #20
 800e28c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e290:	b001      	add	sp, #4
 800e292:	4770      	bx	lr

0800e294 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e294:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e296:	4605      	mov	r5, r0
 800e298:	4608      	mov	r0, r1
 800e29a:	b1e9      	cbz	r1, 800e2d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e29c:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e2a0:	460b      	mov	r3, r1
 800e2a2:	f101 0708 	add.w	r7, r1, #8
 800e2a6:	4622      	mov	r2, r4
 800e2a8:	6818      	ldr	r0, [r3, #0]
 800e2aa:	6859      	ldr	r1, [r3, #4]
 800e2ac:	4626      	mov	r6, r4
 800e2ae:	c603      	stmia	r6!, {r0, r1}
 800e2b0:	3308      	adds	r3, #8
 800e2b2:	42bb      	cmp	r3, r7
 800e2b4:	4634      	mov	r4, r6
 800e2b6:	d1f7      	bne.n	800e2a8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e2b8:	6818      	ldr	r0, [r3, #0]
 800e2ba:	6030      	str	r0, [r6, #0]
 800e2bc:	889b      	ldrh	r3, [r3, #4]
 800e2be:	80b3      	strh	r3, [r6, #4]
 800e2c0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e2c4:	015b      	lsls	r3, r3, #5
 800e2c6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e2ca:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e2ce:	430b      	orrs	r3, r1
 800e2d0:	425b      	negs	r3, r3
 800e2d2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e2d6:	4610      	mov	r0, r2
 800e2d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e2da:	b538      	push	{r3, r4, r5, lr}
 800e2dc:	460c      	mov	r4, r1
 800e2de:	6811      	ldr	r1, [r2, #0]
 800e2e0:	4610      	mov	r0, r2
 800e2e2:	68cd      	ldr	r5, [r1, #12]
 800e2e4:	4619      	mov	r1, r3
 800e2e6:	47a8      	blx	r5
 800e2e8:	2800      	cmp	r0, #0
 800e2ea:	bf08      	it	eq
 800e2ec:	4620      	moveq	r0, r4
 800e2ee:	bd38      	pop	{r3, r4, r5, pc}

0800e2f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e2f2:	4604      	mov	r4, r0
 800e2f4:	4615      	mov	r5, r2
 800e2f6:	4608      	mov	r0, r1
 800e2f8:	b93a      	cbnz	r2, 800e30a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e2fa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e2fe:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e302:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e306:	4628      	mov	r0, r5
 800e308:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e30a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e30e:	8893      	ldrh	r3, [r2, #4]
 800e310:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e314:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e318:	79ee      	ldrb	r6, [r5, #7]
 800e31a:	4316      	orrs	r6, r2
 800e31c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e320:	189a      	adds	r2, r3, r2
 800e322:	b291      	uxth	r1, r2
 800e324:	291d      	cmp	r1, #29
 800e326:	b2b7      	uxth	r7, r6
 800e328:	f200 8083 	bhi.w	800e432 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e32c:	2201      	movs	r2, #1
 800e32e:	408a      	lsls	r2, r1
 800e330:	4978      	ldr	r1, [pc, #480]	; (800e514 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e332:	420a      	tst	r2, r1
 800e334:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e338:	d12d      	bne.n	800e396 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e33a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e33e:	d078      	beq.n	800e432 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e340:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e344:	462b      	mov	r3, r5
 800e346:	f105 0e08 	add.w	lr, r5, #8
 800e34a:	4615      	mov	r5, r2
 800e34c:	6818      	ldr	r0, [r3, #0]
 800e34e:	6859      	ldr	r1, [r3, #4]
 800e350:	4694      	mov	ip, r2
 800e352:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e356:	3308      	adds	r3, #8
 800e358:	4573      	cmp	r3, lr
 800e35a:	4662      	mov	r2, ip
 800e35c:	d1f6      	bne.n	800e34c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e35e:	6818      	ldr	r0, [r3, #0]
 800e360:	f8cc 0000 	str.w	r0, [ip]
 800e364:	889b      	ldrh	r3, [r3, #4]
 800e366:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e36a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e36e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e372:	b2b3      	uxth	r3, r6
 800e374:	1aca      	subs	r2, r1, r3
 800e376:	b292      	uxth	r2, r2
 800e378:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e37c:	10d2      	asrs	r2, r2, #3
 800e37e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e382:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e386:	4302      	orrs	r2, r0
 800e388:	1bcf      	subs	r7, r1, r7
 800e38a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e38e:	1afb      	subs	r3, r7, r3
 800e390:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e394:	e7b7      	b.n	800e306 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e396:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e398:	b92b      	cbnz	r3, 800e3a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e39a:	4b5f      	ldr	r3, [pc, #380]	; (800e518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e39c:	4a5f      	ldr	r2, [pc, #380]	; (800e51c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e39e:	4860      	ldr	r0, [pc, #384]	; (800e520 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e3a0:	21c0      	movs	r1, #192	; 0xc0
 800e3a2:	f00d fc77 	bl	801bc94 <__assert_func>
 800e3a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e3a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e3ac:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e3ae:	f640 6333 	movw	r3, #3635	; 0xe33
 800e3b2:	4299      	cmp	r1, r3
 800e3b4:	d110      	bne.n	800e3d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e3b6:	6803      	ldr	r3, [r0, #0]
 800e3b8:	68db      	ldr	r3, [r3, #12]
 800e3ba:	4798      	blx	r3
 800e3bc:	7b41      	ldrb	r1, [r0, #13]
 800e3be:	00cb      	lsls	r3, r1, #3
 800e3c0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e3c4:	7a03      	ldrb	r3, [r0, #8]
 800e3c6:	0648      	lsls	r0, r1, #25
 800e3c8:	ea43 0302 	orr.w	r3, r3, r2
 800e3cc:	bf44      	itt	mi
 800e3ce:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e3d2:	b21b      	sxthmi	r3, r3
 800e3d4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e3d8:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e3dc:	443b      	add	r3, r7
 800e3de:	4433      	add	r3, r6
 800e3e0:	b29b      	uxth	r3, r3
 800e3e2:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e3e6:	462a      	mov	r2, r5
 800e3e8:	f105 0c08 	add.w	ip, r5, #8
 800e3ec:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e3f0:	4635      	mov	r5, r6
 800e3f2:	6810      	ldr	r0, [r2, #0]
 800e3f4:	6851      	ldr	r1, [r2, #4]
 800e3f6:	4637      	mov	r7, r6
 800e3f8:	c703      	stmia	r7!, {r0, r1}
 800e3fa:	3208      	adds	r2, #8
 800e3fc:	4562      	cmp	r2, ip
 800e3fe:	463e      	mov	r6, r7
 800e400:	d1f7      	bne.n	800e3f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e402:	6810      	ldr	r0, [r2, #0]
 800e404:	6038      	str	r0, [r7, #0]
 800e406:	8892      	ldrh	r2, [r2, #4]
 800e408:	80ba      	strh	r2, [r7, #4]
 800e40a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e40e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e412:	10db      	asrs	r3, r3, #3
 800e414:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e418:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e41c:	4313      	orrs	r3, r2
 800e41e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e422:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e426:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e42a:	1a9b      	subs	r3, r3, r2
 800e42c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e430:	e769      	b.n	800e306 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e432:	f023 0204 	bic.w	r2, r3, #4
 800e436:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e43a:	428a      	cmp	r2, r1
 800e43c:	d003      	beq.n	800e446 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e43e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e442:	4293      	cmp	r3, r2
 800e444:	d120      	bne.n	800e488 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e446:	3b01      	subs	r3, #1
 800e448:	4602      	mov	r2, r0
 800e44a:	b29b      	uxth	r3, r3
 800e44c:	4629      	mov	r1, r5
 800e44e:	4620      	mov	r0, r4
 800e450:	f7ff ff43 	bl	800e2da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e454:	7b41      	ldrb	r1, [r0, #13]
 800e456:	00cb      	lsls	r3, r1, #3
 800e458:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e45c:	7a03      	ldrb	r3, [r0, #8]
 800e45e:	0649      	lsls	r1, r1, #25
 800e460:	ea43 0302 	orr.w	r3, r3, r2
 800e464:	bf44      	itt	mi
 800e466:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e46a:	b21b      	sxthmi	r3, r3
 800e46c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e470:	7b6b      	ldrb	r3, [r5, #13]
 800e472:	7aaa      	ldrb	r2, [r5, #10]
 800e474:	005b      	lsls	r3, r3, #1
 800e476:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e47a:	4313      	orrs	r3, r2
 800e47c:	115a      	asrs	r2, r3, #5
 800e47e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e482:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e486:	e036      	b.n	800e4f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e488:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e48c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e490:	7a2a      	ldrb	r2, [r5, #8]
 800e492:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e496:	ea42 0201 	orr.w	r2, r2, r1
 800e49a:	bf1c      	itt	ne
 800e49c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e4a0:	b212      	sxthne	r2, r2
 800e4a2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e4a6:	f640 6109 	movw	r1, #3593	; 0xe09
 800e4aa:	f023 0210 	bic.w	r2, r3, #16
 800e4ae:	428a      	cmp	r2, r1
 800e4b0:	d003      	beq.n	800e4ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e4b2:	f640 6213 	movw	r2, #3603	; 0xe13
 800e4b6:	4293      	cmp	r3, r2
 800e4b8:	d12a      	bne.n	800e510 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e4ba:	7b6e      	ldrb	r6, [r5, #13]
 800e4bc:	0076      	lsls	r6, r6, #1
 800e4be:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e4c2:	7aae      	ldrb	r6, [r5, #10]
 800e4c4:	4316      	orrs	r6, r2
 800e4c6:	f640 6213 	movw	r2, #3603	; 0xe13
 800e4ca:	4293      	cmp	r3, r2
 800e4cc:	bf18      	it	ne
 800e4ce:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e4d2:	4602      	mov	r2, r0
 800e4d4:	bf14      	ite	ne
 800e4d6:	b29b      	uxthne	r3, r3
 800e4d8:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e4dc:	4629      	mov	r1, r5
 800e4de:	4620      	mov	r0, r4
 800e4e0:	f7ff fefb 	bl	800e2da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e4e4:	7b43      	ldrb	r3, [r0, #13]
 800e4e6:	7a82      	ldrb	r2, [r0, #10]
 800e4e8:	005b      	lsls	r3, r3, #1
 800e4ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e4ee:	4313      	orrs	r3, r2
 800e4f0:	1af6      	subs	r6, r6, r3
 800e4f2:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800e4f6:	7b69      	ldrb	r1, [r5, #13]
 800e4f8:	00cb      	lsls	r3, r1, #3
 800e4fa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e4fe:	7a2b      	ldrb	r3, [r5, #8]
 800e500:	4313      	orrs	r3, r2
 800e502:	064a      	lsls	r2, r1, #25
 800e504:	bf44      	itt	mi
 800e506:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e50a:	b21b      	sxthmi	r3, r3
 800e50c:	1bdb      	subs	r3, r3, r7
 800e50e:	e73f      	b.n	800e390 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e510:	2300      	movs	r3, #0
 800e512:	e7b6      	b.n	800e482 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e514:	3fc00079 	.word	0x3fc00079
 800e518:	0801dbbc 	.word	0x0801dbbc
 800e51c:	0801f2c7 	.word	0x0801f2c7
 800e520:	0801dc8e 	.word	0x0801dc8e

0800e524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e528:	4604      	mov	r4, r0
 800e52a:	b942      	cbnz	r2, 800e53e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e52c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e530:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800e534:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800e538:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e53c:	e046      	b.n	800e5cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e53e:	7b51      	ldrb	r1, [r2, #13]
 800e540:	8893      	ldrh	r3, [r2, #4]
 800e542:	010f      	lsls	r7, r1, #4
 800e544:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e548:	79d7      	ldrb	r7, [r2, #7]
 800e54a:	4307      	orrs	r7, r0
 800e54c:	2f04      	cmp	r7, #4
 800e54e:	b2bd      	uxth	r5, r7
 800e550:	bfcc      	ite	gt
 800e552:	08bf      	lsrgt	r7, r7, #2
 800e554:	2701      	movle	r7, #1
 800e556:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e55a:	f200 80ab 	bhi.w	800e6b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e55e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e562:	4283      	cmp	r3, r0
 800e564:	d216      	bcs.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e566:	f240 605b 	movw	r0, #1627	; 0x65b
 800e56a:	4283      	cmp	r3, r0
 800e56c:	d859      	bhi.n	800e622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e56e:	f240 6057 	movw	r0, #1623	; 0x657
 800e572:	4283      	cmp	r3, r0
 800e574:	d20e      	bcs.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e576:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e57a:	d24a      	bcs.n	800e612 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e57c:	f240 604e 	movw	r0, #1614	; 0x64e
 800e580:	4283      	cmp	r3, r0
 800e582:	d207      	bcs.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e584:	f240 601a 	movw	r0, #1562	; 0x61a
 800e588:	4283      	cmp	r3, r0
 800e58a:	d02a      	beq.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e58c:	d821      	bhi.n	800e5d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e58e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e592:	d35b      	bcc.n	800e64c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e594:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800e598:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e59c:	f040 80d0 	bne.w	800e740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e5a0:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800e5a4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e5a8:	f040 80ca 	bne.w	800e740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e5ac:	00cb      	lsls	r3, r1, #3
 800e5ae:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e5b2:	7a13      	ldrb	r3, [r2, #8]
 800e5b4:	0649      	lsls	r1, r1, #25
 800e5b6:	ea43 0300 	orr.w	r3, r3, r0
 800e5ba:	bf44      	itt	mi
 800e5bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5c0:	b21b      	sxthmi	r3, r3
 800e5c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e5c6:	1b5d      	subs	r5, r3, r5
 800e5c8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e5cc:	4610      	mov	r0, r2
 800e5ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5d2:	f240 604b 	movw	r0, #1611	; 0x64b
 800e5d6:	4283      	cmp	r3, r0
 800e5d8:	d338      	bcc.n	800e64c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e5da:	f240 604c 	movw	r0, #1612	; 0x64c
 800e5de:	4283      	cmp	r3, r0
 800e5e0:	d9d8      	bls.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5e2:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800e5e6:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800e5ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e5ee:	f040 80f1 	bne.w	800e7d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5f2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e5f6:	f040 80ed 	bne.w	800e7d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5fa:	00cb      	lsls	r3, r1, #3
 800e5fc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e600:	7a13      	ldrb	r3, [r2, #8]
 800e602:	064e      	lsls	r6, r1, #25
 800e604:	ea43 0300 	orr.w	r3, r3, r0
 800e608:	bf44      	itt	mi
 800e60a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e60e:	b21b      	sxthmi	r3, r3
 800e610:	e7d9      	b.n	800e5c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e612:	f240 6054 	movw	r0, #1620	; 0x654
 800e616:	4283      	cmp	r3, r0
 800e618:	d8e3      	bhi.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e61a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e61e:	d9e0      	bls.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e620:	e7b8      	b.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e622:	f240 6074 	movw	r0, #1652	; 0x674
 800e626:	4283      	cmp	r3, r0
 800e628:	d0b4      	beq.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e62a:	d82d      	bhi.n	800e688 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e62c:	f240 605e 	movw	r0, #1630	; 0x65e
 800e630:	4283      	cmp	r3, r0
 800e632:	d804      	bhi.n	800e63e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e634:	f240 605d 	movw	r0, #1629	; 0x65d
 800e638:	4283      	cmp	r3, r0
 800e63a:	d3d2      	bcc.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e63c:	e7aa      	b.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e63e:	f240 605f 	movw	r0, #1631	; 0x65f
 800e642:	4283      	cmp	r3, r0
 800e644:	d0cd      	beq.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e646:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e64a:	d0a3      	beq.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e64c:	00cb      	lsls	r3, r1, #3
 800e64e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e652:	7a13      	ldrb	r3, [r2, #8]
 800e654:	0649      	lsls	r1, r1, #25
 800e656:	ea43 0300 	orr.w	r3, r3, r0
 800e65a:	bf44      	itt	mi
 800e65c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e660:	b21b      	sxthmi	r3, r3
 800e662:	1b5d      	subs	r5, r3, r5
 800e664:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e668:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e66c:	7b53      	ldrb	r3, [r2, #13]
 800e66e:	015b      	lsls	r3, r3, #5
 800e670:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e674:	7993      	ldrb	r3, [r2, #6]
 800e676:	430b      	orrs	r3, r1
 800e678:	005b      	lsls	r3, r3, #1
 800e67a:	2105      	movs	r1, #5
 800e67c:	fb93 f3f1 	sdiv	r3, r3, r1
 800e680:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e684:	440b      	add	r3, r1
 800e686:	e757      	b.n	800e538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e688:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e68c:	4283      	cmp	r3, r0
 800e68e:	d809      	bhi.n	800e6a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e690:	f240 60df 	movw	r0, #1759	; 0x6df
 800e694:	4283      	cmp	r3, r0
 800e696:	f4bf af7d 	bcs.w	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e69a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e69e:	2b05      	cmp	r3, #5
 800e6a0:	d8d4      	bhi.n	800e64c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e6a2:	e777      	b.n	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6a4:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e6a8:	4283      	cmp	r3, r0
 800e6aa:	d09a      	beq.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6ac:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e6b0:	4283      	cmp	r3, r0
 800e6b2:	e7ca      	b.n	800e64a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e6b4:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e6b8:	d22b      	bcs.n	800e712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e6ba:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e6be:	4283      	cmp	r3, r0
 800e6c0:	d28f      	bcs.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6c2:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e6c6:	4283      	cmp	r3, r0
 800e6c8:	d816      	bhi.n	800e6f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e6ca:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e6ce:	4283      	cmp	r3, r0
 800e6d0:	f4bf af60 	bcs.w	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6d4:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e6d8:	4283      	cmp	r3, r0
 800e6da:	d80a      	bhi.n	800e6f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e6dc:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e6e0:	4283      	cmp	r3, r0
 800e6e2:	f4bf af57 	bcs.w	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6e6:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e6ea:	4283      	cmp	r3, r0
 800e6ec:	f43f af79 	beq.w	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6f0:	e7ac      	b.n	800e64c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e6f2:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e6f6:	e7f8      	b.n	800e6ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e6f8:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e6fc:	4283      	cmp	r3, r0
 800e6fe:	d802      	bhi.n	800e706 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e700:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e704:	e798      	b.n	800e638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e706:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e70a:	4283      	cmp	r3, r0
 800e70c:	f47f af42 	bne.w	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e710:	e767      	b.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e712:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e716:	4283      	cmp	r3, r0
 800e718:	f43f af63 	beq.w	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e71c:	d802      	bhi.n	800e724 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e71e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e722:	e7f2      	b.n	800e70a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e724:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e728:	4283      	cmp	r3, r0
 800e72a:	d805      	bhi.n	800e738 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e72c:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e730:	4283      	cmp	r3, r0
 800e732:	f4ff af2f 	bcc.w	800e594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e736:	e754      	b.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e738:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e73c:	4283      	cmp	r3, r0
 800e73e:	e7af      	b.n	800e6a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e740:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800e744:	4617      	mov	r7, r2
 800e746:	f102 0808 	add.w	r8, r2, #8
 800e74a:	4666      	mov	r6, ip
 800e74c:	6838      	ldr	r0, [r7, #0]
 800e74e:	6879      	ldr	r1, [r7, #4]
 800e750:	46e6      	mov	lr, ip
 800e752:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e756:	3708      	adds	r7, #8
 800e758:	4547      	cmp	r7, r8
 800e75a:	46f4      	mov	ip, lr
 800e75c:	d1f6      	bne.n	800e74c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e75e:	6838      	ldr	r0, [r7, #0]
 800e760:	f8ce 0000 	str.w	r0, [lr]
 800e764:	88b9      	ldrh	r1, [r7, #4]
 800e766:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e76a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e76e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e772:	d009      	beq.n	800e788 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e774:	7b51      	ldrb	r1, [r2, #13]
 800e776:	7992      	ldrb	r2, [r2, #6]
 800e778:	0149      	lsls	r1, r1, #5
 800e77a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e77e:	4311      	orrs	r1, r2
 800e780:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e784:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e788:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e78c:	d00d      	beq.n	800e7aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e78e:	442b      	add	r3, r5
 800e790:	b29b      	uxth	r3, r3
 800e792:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e796:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e79a:	10db      	asrs	r3, r3, #3
 800e79c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e7a0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e7a4:	4313      	orrs	r3, r2
 800e7a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e7aa:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e7ae:	00cb      	lsls	r3, r1, #3
 800e7b0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e7b4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e7b8:	064f      	lsls	r7, r1, #25
 800e7ba:	ea43 0302 	orr.w	r3, r3, r2
 800e7be:	bf44      	itt	mi
 800e7c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e7c4:	b21b      	sxthmi	r3, r3
 800e7c6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e7ca:	1b5d      	subs	r5, r3, r5
 800e7cc:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e7d0:	4632      	mov	r2, r6
 800e7d2:	e6fb      	b.n	800e5cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e7d4:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800e7d8:	4694      	mov	ip, r2
 800e7da:	f102 0908 	add.w	r9, r2, #8
 800e7de:	4676      	mov	r6, lr
 800e7e0:	f8dc 0000 	ldr.w	r0, [ip]
 800e7e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e7e8:	46f0      	mov	r8, lr
 800e7ea:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e7ee:	f10c 0c08 	add.w	ip, ip, #8
 800e7f2:	45cc      	cmp	ip, r9
 800e7f4:	46c6      	mov	lr, r8
 800e7f6:	d1f3      	bne.n	800e7e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e7f8:	f8dc 0000 	ldr.w	r0, [ip]
 800e7fc:	f8c8 0000 	str.w	r0, [r8]
 800e800:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e804:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e808:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e80c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e810:	d009      	beq.n	800e826 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e812:	7b51      	ldrb	r1, [r2, #13]
 800e814:	7992      	ldrb	r2, [r2, #6]
 800e816:	0149      	lsls	r1, r1, #5
 800e818:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e81c:	4311      	orrs	r1, r2
 800e81e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e822:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e826:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e82a:	d00d      	beq.n	800e848 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e82c:	1bdb      	subs	r3, r3, r7
 800e82e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e832:	b29b      	uxth	r3, r3
 800e834:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e838:	10db      	asrs	r3, r3, #3
 800e83a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e83e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e842:	4313      	orrs	r3, r2
 800e844:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e848:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e84c:	00cb      	lsls	r3, r1, #3
 800e84e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e852:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e856:	0648      	lsls	r0, r1, #25
 800e858:	ea43 0302 	orr.w	r3, r3, r2
 800e85c:	bf44      	itt	mi
 800e85e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e862:	b21b      	sxthmi	r3, r3
 800e864:	e7b1      	b.n	800e7ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e86c:	461e      	mov	r6, r3
 800e86e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e870:	4604      	mov	r4, r0
 800e872:	4617      	mov	r7, r2
 800e874:	b92b      	cbnz	r3, 800e882 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e876:	4b25      	ldr	r3, [pc, #148]	; (800e90c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e878:	4a25      	ldr	r2, [pc, #148]	; (800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e87a:	4826      	ldr	r0, [pc, #152]	; (800e914 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e87c:	21c0      	movs	r1, #192	; 0xc0
 800e87e:	f00d fa09 	bl	801bc94 <__assert_func>
 800e882:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e884:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e888:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e88c:	f7f4 f8b8 	bl	8002a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e890:	4605      	mov	r5, r0
 800e892:	b918      	cbnz	r0, 800e89c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e894:	6030      	str	r0, [r6, #0]
 800e896:	4628      	mov	r0, r5
 800e898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e89c:	683b      	ldr	r3, [r7, #0]
 800e89e:	4601      	mov	r1, r0
 800e8a0:	68db      	ldr	r3, [r3, #12]
 800e8a2:	4638      	mov	r0, r7
 800e8a4:	4798      	blx	r3
 800e8a6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e8aa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e8ae:	4602      	mov	r2, r0
 800e8b0:	6030      	str	r0, [r6, #0]
 800e8b2:	d213      	bcs.n	800e8dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e8b4:	4643      	mov	r3, r8
 800e8b6:	4639      	mov	r1, r7
 800e8b8:	4620      	mov	r0, r4
 800e8ba:	f7ff fe33 	bl	800e524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e8be:	6030      	str	r0, [r6, #0]
 800e8c0:	6833      	ldr	r3, [r6, #0]
 800e8c2:	b143      	cbz	r3, 800e8d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e8c4:	7b5a      	ldrb	r2, [r3, #13]
 800e8c6:	7a9b      	ldrb	r3, [r3, #10]
 800e8c8:	0052      	lsls	r2, r2, #1
 800e8ca:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e8ce:	4313      	orrs	r3, r2
 800e8d0:	bf0c      	ite	eq
 800e8d2:	2301      	moveq	r3, #1
 800e8d4:	2300      	movne	r3, #0
 800e8d6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e8da:	e7dc      	b.n	800e896 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e8dc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e8e0:	b29b      	uxth	r3, r3
 800e8e2:	2b7f      	cmp	r3, #127	; 0x7f
 800e8e4:	d804      	bhi.n	800e8f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e8e6:	4639      	mov	r1, r7
 800e8e8:	4620      	mov	r0, r4
 800e8ea:	f7ff fd01 	bl	800e2f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e8ee:	e7e6      	b.n	800e8be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e8f0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e8f4:	2b00      	cmp	r3, #0
 800e8f6:	d0e3      	beq.n	800e8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e8f8:	f640 1302 	movw	r3, #2306	; 0x902
 800e8fc:	429d      	cmp	r5, r3
 800e8fe:	d1df      	bne.n	800e8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e900:	4601      	mov	r1, r0
 800e902:	4620      	mov	r0, r4
 800e904:	f7ff fcc6 	bl	800e294 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e908:	e7d9      	b.n	800e8be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e90a:	bf00      	nop
 800e90c:	0801dbbc 	.word	0x0801dbbc
 800e910:	0801f2c7 	.word	0x0801f2c7
 800e914:	0801dc8e 	.word	0x0801dc8e

0800e918 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e918:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e91c:	461e      	mov	r6, r3
 800e91e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e920:	4604      	mov	r4, r0
 800e922:	4617      	mov	r7, r2
 800e924:	b92b      	cbnz	r3, 800e932 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e926:	4b26      	ldr	r3, [pc, #152]	; (800e9c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e928:	4a26      	ldr	r2, [pc, #152]	; (800e9c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e92a:	4827      	ldr	r0, [pc, #156]	; (800e9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e92c:	21c0      	movs	r1, #192	; 0xc0
 800e92e:	f00d f9b1 	bl	801bc94 <__assert_func>
 800e932:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e934:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e938:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e93c:	f7f4 f860 	bl	8002a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e940:	4605      	mov	r5, r0
 800e942:	b918      	cbnz	r0, 800e94c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e944:	6030      	str	r0, [r6, #0]
 800e946:	4628      	mov	r0, r5
 800e948:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e94c:	683b      	ldr	r3, [r7, #0]
 800e94e:	4601      	mov	r1, r0
 800e950:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e954:	4638      	mov	r0, r7
 800e956:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e95a:	47c8      	blx	r9
 800e95c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e960:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e964:	4602      	mov	r2, r0
 800e966:	6030      	str	r0, [r6, #0]
 800e968:	d213      	bcs.n	800e992 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e96a:	4643      	mov	r3, r8
 800e96c:	4639      	mov	r1, r7
 800e96e:	4620      	mov	r0, r4
 800e970:	f7ff fdd8 	bl	800e524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e974:	6030      	str	r0, [r6, #0]
 800e976:	6833      	ldr	r3, [r6, #0]
 800e978:	b143      	cbz	r3, 800e98c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e97a:	7b5a      	ldrb	r2, [r3, #13]
 800e97c:	7a9b      	ldrb	r3, [r3, #10]
 800e97e:	0052      	lsls	r2, r2, #1
 800e980:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e984:	4313      	orrs	r3, r2
 800e986:	bf0c      	ite	eq
 800e988:	2301      	moveq	r3, #1
 800e98a:	2300      	movne	r3, #0
 800e98c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e990:	e7d9      	b.n	800e946 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e992:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e996:	b29b      	uxth	r3, r3
 800e998:	2b7f      	cmp	r3, #127	; 0x7f
 800e99a:	d804      	bhi.n	800e9a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e99c:	4639      	mov	r1, r7
 800e99e:	4620      	mov	r0, r4
 800e9a0:	f7ff fca6 	bl	800e2f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e9a4:	e7e6      	b.n	800e974 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e9a6:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e9aa:	2b00      	cmp	r3, #0
 800e9ac:	d0e3      	beq.n	800e976 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e9ae:	f640 1302 	movw	r3, #2306	; 0x902
 800e9b2:	429d      	cmp	r5, r3
 800e9b4:	d1df      	bne.n	800e976 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e9b6:	4601      	mov	r1, r0
 800e9b8:	4620      	mov	r0, r4
 800e9ba:	f7ff fc6b 	bl	800e294 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e9be:	e7d9      	b.n	800e974 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e9c0:	0801dbbc 	.word	0x0801dbbc
 800e9c4:	0801f2c7 	.word	0x0801f2c7
 800e9c8:	0801dc8e 	.word	0x0801dc8e

0800e9cc <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e9cc:	b510      	push	{r4, lr}
 800e9ce:	4604      	mov	r4, r0
 800e9d0:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e9d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9d6:	b9d9      	cbnz	r1, 800ea10 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800e9d8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9da:	2b0a      	cmp	r3, #10
 800e9dc:	d037      	beq.n	800ea4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e9de:	4620      	mov	r0, r4
 800e9e0:	f7ff fc06 	bl	800e1f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e9e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e9e6:	2b09      	cmp	r3, #9
 800e9e8:	d906      	bls.n	800e9f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e9ea:	4b19      	ldr	r3, [pc, #100]	; (800ea50 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e9ec:	4a19      	ldr	r2, [pc, #100]	; (800ea54 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e9ee:	481a      	ldr	r0, [pc, #104]	; (800ea58 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800e9f0:	f44f 7182 	mov.w	r1, #260	; 0x104
 800e9f4:	f00d f94e 	bl	801bc94 <__assert_func>
 800e9f8:	1c5a      	adds	r2, r3, #1
 800e9fa:	8722      	strh	r2, [r4, #56]	; 0x38
 800e9fc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e9fe:	4413      	add	r3, r2
 800ea00:	b29b      	uxth	r3, r3
 800ea02:	2b09      	cmp	r3, #9
 800ea04:	bf88      	it	hi
 800ea06:	3b0a      	subhi	r3, #10
 800ea08:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea0c:	8458      	strh	r0, [r3, #34]	; 0x22
 800ea0e:	e7e3      	b.n	800e9d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800ea10:	2b0a      	cmp	r3, #10
 800ea12:	d01c      	beq.n	800ea4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ea14:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ea16:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ea1a:	3901      	subs	r1, #1
 800ea1c:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ea1e:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ea22:	1c51      	adds	r1, r2, #1
 800ea24:	b289      	uxth	r1, r1
 800ea26:	2901      	cmp	r1, #1
 800ea28:	bf8a      	itet	hi
 800ea2a:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ea2e:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800ea30:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800ea32:	2b09      	cmp	r3, #9
 800ea34:	d8d9      	bhi.n	800e9ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800ea36:	1c5a      	adds	r2, r3, #1
 800ea38:	8722      	strh	r2, [r4, #56]	; 0x38
 800ea3a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea3c:	4413      	add	r3, r2
 800ea3e:	b29b      	uxth	r3, r3
 800ea40:	2b09      	cmp	r3, #9
 800ea42:	bf88      	it	hi
 800ea44:	3b0a      	subhi	r3, #10
 800ea46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea4a:	8458      	strh	r0, [r3, #34]	; 0x22
 800ea4c:	e7c0      	b.n	800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ea4e:	bd10      	pop	{r4, pc}
 800ea50:	0801f098 	.word	0x0801f098
 800ea54:	0801f41d 	.word	0x0801f41d
 800ea58:	0801dc8e 	.word	0x0801dc8e

0800ea5c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ea5c:	b538      	push	{r3, r4, r5, lr}
 800ea5e:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800ea60:	4604      	mov	r4, r0
 800ea62:	b92a      	cbnz	r2, 800ea70 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ea64:	4b13      	ldr	r3, [pc, #76]	; (800eab4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ea66:	4a14      	ldr	r2, [pc, #80]	; (800eab8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ea68:	4814      	ldr	r0, [pc, #80]	; (800eabc <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ea6a:	21d5      	movs	r1, #213	; 0xd5
 800ea6c:	f00d f912 	bl	801bc94 <__assert_func>
 800ea70:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ea72:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ea76:	3a01      	subs	r2, #1
 800ea78:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800ea7a:	8702      	strh	r2, [r0, #56]	; 0x38
 800ea7c:	1c5a      	adds	r2, r3, #1
 800ea7e:	b292      	uxth	r2, r2
 800ea80:	2a09      	cmp	r2, #9
 800ea82:	bf86      	itte	hi
 800ea84:	3b09      	subhi	r3, #9
 800ea86:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800ea88:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800ea8a:	f7ff ff9f 	bl	800e9cc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ea8e:	8c23      	ldrh	r3, [r4, #32]
 800ea90:	2b01      	cmp	r3, #1
 800ea92:	bf9c      	itt	ls
 800ea94:	3301      	addls	r3, #1
 800ea96:	8423      	strhls	r3, [r4, #32]
 800ea98:	8be3      	ldrh	r3, [r4, #30]
 800ea9a:	b90b      	cbnz	r3, 800eaa0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ea9c:	2302      	movs	r3, #2
 800ea9e:	83e3      	strh	r3, [r4, #30]
 800eaa0:	8be3      	ldrh	r3, [r4, #30]
 800eaa2:	3b01      	subs	r3, #1
 800eaa4:	b29b      	uxth	r3, r3
 800eaa6:	83e3      	strh	r3, [r4, #30]
 800eaa8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eaac:	4628      	mov	r0, r5
 800eaae:	8365      	strh	r5, [r4, #26]
 800eab0:	bd38      	pop	{r3, r4, r5, pc}
 800eab2:	bf00      	nop
 800eab4:	0801dbbc 	.word	0x0801dbbc
 800eab8:	0801f372 	.word	0x0801f372
 800eabc:	0801dc8e 	.word	0x0801dc8e

0800eac0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800eac0:	b538      	push	{r3, r4, r5, lr}
 800eac2:	428a      	cmp	r2, r1
 800eac4:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800eac6:	d90c      	bls.n	800eae2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800eac8:	b92c      	cbnz	r4, 800ead6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800eaca:	4b1c      	ldr	r3, [pc, #112]	; (800eb3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800eacc:	4a1c      	ldr	r2, [pc, #112]	; (800eb40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800eace:	21e1      	movs	r1, #225	; 0xe1
 800ead0:	481c      	ldr	r0, [pc, #112]	; (800eb44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ead2:	f00d f8df 	bl	801bc94 <__assert_func>
 800ead6:	3c01      	subs	r4, #1
 800ead8:	8704      	strh	r4, [r0, #56]	; 0x38
 800eada:	4b1b      	ldr	r3, [pc, #108]	; (800eb48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800eadc:	4a1b      	ldr	r2, [pc, #108]	; (800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800eade:	21c5      	movs	r1, #197	; 0xc5
 800eae0:	e7f6      	b.n	800ead0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eae2:	428c      	cmp	r4, r1
 800eae4:	d203      	bcs.n	800eaee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800eae6:	4b1a      	ldr	r3, [pc, #104]	; (800eb50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800eae8:	4a1a      	ldr	r2, [pc, #104]	; (800eb54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800eaea:	21cb      	movs	r1, #203	; 0xcb
 800eaec:	e7f0      	b.n	800ead0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eaee:	1a64      	subs	r4, r4, r1
 800eaf0:	8704      	strh	r4, [r0, #56]	; 0x38
 800eaf2:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800eaf4:	4421      	add	r1, r4
 800eaf6:	b289      	uxth	r1, r1
 800eaf8:	2909      	cmp	r1, #9
 800eafa:	bf88      	it	hi
 800eafc:	390a      	subhi	r1, #10
 800eafe:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eb00:	250a      	movs	r5, #10
 800eb02:	b1ba      	cbz	r2, 800eb34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800eb04:	3a01      	subs	r2, #1
 800eb06:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800eb08:	b292      	uxth	r2, r2
 800eb0a:	2909      	cmp	r1, #9
 800eb0c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800eb10:	d903      	bls.n	800eb1a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800eb12:	4b11      	ldr	r3, [pc, #68]	; (800eb58 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800eb14:	4a11      	ldr	r2, [pc, #68]	; (800eb5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800eb16:	21e6      	movs	r1, #230	; 0xe6
 800eb18:	e7da      	b.n	800ead0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eb1a:	3101      	adds	r1, #1
 800eb1c:	8701      	strh	r1, [r0, #56]	; 0x38
 800eb1e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eb20:	b901      	cbnz	r1, 800eb24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800eb22:	86c5      	strh	r5, [r0, #54]	; 0x36
 800eb24:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eb26:	3901      	subs	r1, #1
 800eb28:	b289      	uxth	r1, r1
 800eb2a:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eb2c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eb30:	844c      	strh	r4, [r1, #34]	; 0x22
 800eb32:	e7e6      	b.n	800eb02 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800eb34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb38:	f7ff bf48 	b.w	800e9cc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb3c:	0801dbbc 	.word	0x0801dbbc
 800eb40:	0801f14b 	.word	0x0801f14b
 800eb44:	0801dc8e 	.word	0x0801dc8e
 800eb48:	0801dcba 	.word	0x0801dcba
 800eb4c:	0801f1f5 	.word	0x0801f1f5
 800eb50:	0801f0a4 	.word	0x0801f0a4
 800eb54:	0801f4cc 	.word	0x0801f4cc
 800eb58:	0801f0b0 	.word	0x0801f0b0
 800eb5c:	0801f0c3 	.word	0x0801f0c3

0800eb60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eb60:	3a01      	subs	r2, #1
 800eb62:	b570      	push	{r4, r5, r6, lr}
 800eb64:	b292      	uxth	r2, r2
 800eb66:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800eb6a:	42b2      	cmp	r2, r6
 800eb6c:	d019      	beq.n	800eba2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800eb6e:	8c04      	ldrh	r4, [r0, #32]
 800eb70:	f831 5b02 	ldrh.w	r5, [r1], #2
 800eb74:	4294      	cmp	r4, r2
 800eb76:	d805      	bhi.n	800eb84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800eb78:	4b19      	ldr	r3, [pc, #100]	; (800ebe0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eb7a:	4a1a      	ldr	r2, [pc, #104]	; (800ebe4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800eb7c:	481a      	ldr	r0, [pc, #104]	; (800ebe8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800eb7e:	21c5      	movs	r1, #197	; 0xc5
 800eb80:	f00d f888 	bl	801bc94 <__assert_func>
 800eb84:	8bc4      	ldrh	r4, [r0, #30]
 800eb86:	4414      	add	r4, r2
 800eb88:	b2a4      	uxth	r4, r4
 800eb8a:	2c01      	cmp	r4, #1
 800eb8c:	bf88      	it	hi
 800eb8e:	3c02      	subhi	r4, #2
 800eb90:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eb94:	3a01      	subs	r2, #1
 800eb96:	8b64      	ldrh	r4, [r4, #26]
 800eb98:	42ac      	cmp	r4, r5
 800eb9a:	b292      	uxth	r2, r2
 800eb9c:	d0e5      	beq.n	800eb6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800eb9e:	2000      	movs	r0, #0
 800eba0:	bd70      	pop	{r4, r5, r6, pc}
 800eba2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800eba6:	2400      	movs	r4, #0
 800eba8:	4413      	add	r3, r2
 800ebaa:	b2a2      	uxth	r2, r4
 800ebac:	429a      	cmp	r2, r3
 800ebae:	da14      	bge.n	800ebda <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800ebb0:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800ebb2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800ebb6:	4296      	cmp	r6, r2
 800ebb8:	d802      	bhi.n	800ebc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800ebba:	4b09      	ldr	r3, [pc, #36]	; (800ebe0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ebbc:	4a0b      	ldr	r2, [pc, #44]	; (800ebec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800ebbe:	e7dd      	b.n	800eb7c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800ebc0:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800ebc2:	4432      	add	r2, r6
 800ebc4:	b292      	uxth	r2, r2
 800ebc6:	2a09      	cmp	r2, #9
 800ebc8:	bf88      	it	hi
 800ebca:	3a0a      	subhi	r2, #10
 800ebcc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800ebd0:	3401      	adds	r4, #1
 800ebd2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800ebd4:	42aa      	cmp	r2, r5
 800ebd6:	d0e8      	beq.n	800ebaa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800ebd8:	e7e1      	b.n	800eb9e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800ebda:	2001      	movs	r0, #1
 800ebdc:	e7e0      	b.n	800eba0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800ebde:	bf00      	nop
 800ebe0:	0801dcba 	.word	0x0801dcba
 800ebe4:	0801f550 	.word	0x0801f550
 800ebe8:	0801dc8e 	.word	0x0801dc8e
 800ebec:	0801f1f5 	.word	0x0801f1f5

0800ebf0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ebf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebf4:	4605      	mov	r5, r0
 800ebf6:	4616      	mov	r6, r2
 800ebf8:	1c8c      	adds	r4, r1, #2
 800ebfa:	8809      	ldrh	r1, [r1, #0]
 800ebfc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ec00:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ec04:	42b3      	cmp	r3, r6
 800ec06:	d124      	bne.n	800ec52 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ec08:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ec0c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ec10:	f001 070f 	and.w	r7, r1, #15
 800ec14:	f8cd 8000 	str.w	r8, [sp]
 800ec18:	464b      	mov	r3, r9
 800ec1a:	4652      	mov	r2, sl
 800ec1c:	4621      	mov	r1, r4
 800ec1e:	4628      	mov	r0, r5
 800ec20:	f7ff ff9e 	bl	800eb60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ec24:	4683      	mov	fp, r0
 800ec26:	b168      	cbz	r0, 800ec44 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ec28:	eb0a 0109 	add.w	r1, sl, r9
 800ec2c:	4441      	add	r1, r8
 800ec2e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ec32:	463a      	mov	r2, r7
 800ec34:	4649      	mov	r1, r9
 800ec36:	4628      	mov	r0, r5
 800ec38:	f7ff ff42 	bl	800eac0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ec3c:	4658      	mov	r0, fp
 800ec3e:	b003      	add	sp, #12
 800ec40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec44:	eb07 010a 	add.w	r1, r7, sl
 800ec48:	4449      	add	r1, r9
 800ec4a:	4441      	add	r1, r8
 800ec4c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ec50:	e7d2      	b.n	800ebf8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ec52:	f04f 0b00 	mov.w	fp, #0
 800ec56:	e7f1      	b.n	800ec3c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ec58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ec58:	b570      	push	{r4, r5, r6, lr}
 800ec5a:	8810      	ldrh	r0, [r2, #0]
 800ec5c:	4298      	cmp	r0, r3
 800ec5e:	d817      	bhi.n	800ec90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec60:	1e48      	subs	r0, r1, #1
 800ec62:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ec66:	4298      	cmp	r0, r3
 800ec68:	d312      	bcc.n	800ec90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec6a:	2400      	movs	r4, #0
 800ec6c:	428c      	cmp	r4, r1
 800ec6e:	d20f      	bcs.n	800ec90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec70:	1860      	adds	r0, r4, r1
 800ec72:	1040      	asrs	r0, r0, #1
 800ec74:	0085      	lsls	r5, r0, #2
 800ec76:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ec7a:	42b3      	cmp	r3, r6
 800ec7c:	d902      	bls.n	800ec84 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ec7e:	3001      	adds	r0, #1
 800ec80:	b284      	uxth	r4, r0
 800ec82:	e7f3      	b.n	800ec6c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec84:	d201      	bcs.n	800ec8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ec86:	b281      	uxth	r1, r0
 800ec88:	e7f0      	b.n	800ec6c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec8a:	442a      	add	r2, r5
 800ec8c:	8850      	ldrh	r0, [r2, #2]
 800ec8e:	bd70      	pop	{r4, r5, r6, pc}
 800ec90:	2000      	movs	r0, #0
 800ec92:	e7fc      	b.n	800ec8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800ec94 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ec94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec98:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800ec9a:	886f      	ldrh	r7, [r5, #2]
 800ec9c:	4604      	mov	r4, r0
 800ec9e:	087f      	lsrs	r7, r7, #1
 800eca0:	260b      	movs	r6, #11
 800eca2:	3e01      	subs	r6, #1
 800eca4:	d01b      	beq.n	800ecde <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800eca6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800eca8:	b92b      	cbnz	r3, 800ecb6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800ecaa:	4b0e      	ldr	r3, [pc, #56]	; (800ece4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800ecac:	4a0e      	ldr	r2, [pc, #56]	; (800ece8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800ecae:	480f      	ldr	r0, [pc, #60]	; (800ecec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800ecb0:	21c0      	movs	r1, #192	; 0xc0
 800ecb2:	f00c ffef 	bl	801bc94 <__assert_func>
 800ecb6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ecb8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ecbc:	462a      	mov	r2, r5
 800ecbe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ecc2:	4639      	mov	r1, r7
 800ecc4:	4643      	mov	r3, r8
 800ecc6:	4620      	mov	r0, r4
 800ecc8:	f7ff ffc6 	bl	800ec58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800eccc:	b138      	cbz	r0, 800ecde <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ecce:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ecd2:	4642      	mov	r2, r8
 800ecd4:	4620      	mov	r0, r4
 800ecd6:	f7ff ff8b 	bl	800ebf0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ecda:	2800      	cmp	r0, #0
 800ecdc:	d1e1      	bne.n	800eca2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800ecde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ece2:	bf00      	nop
 800ece4:	0801dbbc 	.word	0x0801dbbc
 800ece8:	0801f2c7 	.word	0x0801f2c7
 800ecec:	0801dc8e 	.word	0x0801dc8e

0800ecf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800ecf0:	b570      	push	{r4, r5, r6, lr}
 800ecf2:	694a      	ldr	r2, [r1, #20]
 800ecf4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ecf6:	684b      	ldr	r3, [r1, #4]
 800ecf8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800ecfa:	1b54      	subs	r4, r2, r5
 800ecfc:	f000 8106 	beq.w	800ef0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800ed00:	1b9b      	subs	r3, r3, r6
 800ed02:	d003      	beq.n	800ed0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ed04:	4363      	muls	r3, r4
 800ed06:	2210      	movs	r2, #16
 800ed08:	fb93 f3f2 	sdiv	r3, r3, r2
 800ed0c:	680c      	ldr	r4, [r1, #0]
 800ed0e:	698a      	ldr	r2, [r1, #24]
 800ed10:	1b65      	subs	r5, r4, r5
 800ed12:	f000 80fd 	beq.w	800ef10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800ed16:	1b92      	subs	r2, r2, r6
 800ed18:	d003      	beq.n	800ed22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ed1a:	436a      	muls	r2, r5
 800ed1c:	2410      	movs	r4, #16
 800ed1e:	fb92 f2f4 	sdiv	r2, r2, r4
 800ed22:	1a9b      	subs	r3, r3, r2
 800ed24:	ee07 3a90 	vmov	s15, r3
 800ed28:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800ef4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ed2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ed34:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ed38:	460a      	mov	r2, r1
 800ed3a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ed3e:	4603      	mov	r3, r0
 800ed40:	f100 040c 	add.w	r4, r0, #12
 800ed44:	eeb1 6a43 	vneg.f32	s12, s6
 800ed48:	edd2 7a02 	vldr	s15, [r2, #8]
 800ed4c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ed50:	3214      	adds	r2, #20
 800ed52:	ece3 6a01 	vstmia	r3!, {s13}
 800ed56:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ed5a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed5e:	429c      	cmp	r4, r3
 800ed60:	edc3 7a02 	vstr	s15, [r3, #8]
 800ed64:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ed68:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed6c:	edc3 7a05 	vstr	s15, [r3, #20]
 800ed70:	d1ea      	bne.n	800ed48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ed72:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ed74:	698b      	ldr	r3, [r1, #24]
 800ed76:	edd0 4a02 	vldr	s9, [r0, #8]
 800ed7a:	edd0 3a00 	vldr	s7, [r0]
 800ed7e:	edd0 6a01 	vldr	s13, [r0, #4]
 800ed82:	ed90 5a05 	vldr	s10, [r0, #20]
 800ed86:	ed90 2a03 	vldr	s4, [r0, #12]
 800ed8a:	edd0 5a04 	vldr	s11, [r0, #16]
 800ed8e:	ed90 1a07 	vldr	s2, [r0, #28]
 800ed92:	edd0 2a06 	vldr	s5, [r0, #24]
 800ed96:	1a9b      	subs	r3, r3, r2
 800ed98:	ee07 3a90 	vmov	s15, r3
 800ed9c:	684b      	ldr	r3, [r1, #4]
 800ed9e:	1a9b      	subs	r3, r3, r2
 800eda0:	ee07 3a10 	vmov	s14, r3
 800eda4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eda8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800edac:	ee67 7a84 	vmul.f32	s15, s15, s8
 800edb0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800edb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edb8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800edbc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edc0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800edc4:	eee6 7a87 	vfma.f32	s15, s13, s14
 800edc8:	ee32 5a45 	vsub.f32	s10, s4, s10
 800edcc:	ee67 7a83 	vmul.f32	s15, s15, s6
 800edd0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800edd4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800edd6:	694a      	ldr	r2, [r1, #20]
 800edd8:	1b13      	subs	r3, r2, r4
 800edda:	ee07 3a10 	vmov	s14, r3
 800edde:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ede2:	680b      	ldr	r3, [r1, #0]
 800ede4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ede8:	1b1b      	subs	r3, r3, r4
 800edea:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800edee:	ee07 3a10 	vmov	s14, r3
 800edf2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edf6:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edfa:	eee6 4a87 	vfma.f32	s9, s13, s14
 800edfe:	ee64 4a86 	vmul.f32	s9, s9, s12
 800ee02:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800ee06:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee08:	698b      	ldr	r3, [r1, #24]
 800ee0a:	1a9b      	subs	r3, r3, r2
 800ee0c:	ee06 3a90 	vmov	s13, r3
 800ee10:	684b      	ldr	r3, [r1, #4]
 800ee12:	1a9b      	subs	r3, r3, r2
 800ee14:	ee07 3a10 	vmov	s14, r3
 800ee18:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ee1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee20:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ee24:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee28:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ee2c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ee30:	ee66 6a83 	vmul.f32	s13, s13, s6
 800ee34:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ee38:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ee3a:	694a      	ldr	r2, [r1, #20]
 800ee3c:	1b13      	subs	r3, r2, r4
 800ee3e:	ee07 3a10 	vmov	s14, r3
 800ee42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee46:	680b      	ldr	r3, [r1, #0]
 800ee48:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee4c:	1b1b      	subs	r3, r3, r4
 800ee4e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ee52:	ee07 3a10 	vmov	s14, r3
 800ee56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee5a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee5e:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ee62:	edd0 5a08 	vldr	s11, [r0, #32]
 800ee66:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ee6a:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ee6e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ee72:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee74:	698b      	ldr	r3, [r1, #24]
 800ee76:	1a9b      	subs	r3, r3, r2
 800ee78:	ee07 3a10 	vmov	s14, r3
 800ee7c:	684b      	ldr	r3, [r1, #4]
 800ee7e:	1a9b      	subs	r3, r3, r2
 800ee80:	ee01 3a90 	vmov	s3, r3
 800ee84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee88:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ee8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee90:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ee94:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ee98:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ee9c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800eea0:	ee27 7a03 	vmul.f32	s14, s14, s6
 800eea4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800eea8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800eeaa:	694a      	ldr	r2, [r1, #20]
 800eeac:	1b13      	subs	r3, r2, r4
 800eeae:	ee03 3a10 	vmov	s6, r3
 800eeb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eeb6:	680b      	ldr	r3, [r1, #0]
 800eeb8:	ee23 3a04 	vmul.f32	s6, s6, s8
 800eebc:	1b1b      	subs	r3, r3, r4
 800eebe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800eec2:	ee03 3a10 	vmov	s6, r3
 800eec6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eeca:	ee23 4a04 	vmul.f32	s8, s6, s8
 800eece:	eee1 5a04 	vfma.f32	s11, s2, s8
 800eed2:	ee25 6a86 	vmul.f32	s12, s11, s12
 800eed6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800eeda:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800eede:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800eee2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800eee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeea:	dd13      	ble.n	800ef14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800eeec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eef0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800eef4:	63c3      	str	r3, [r0, #60]	; 0x3c
 800eef6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800eefa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800eefe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef02:	dd15      	ble.n	800ef30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800ef04:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ef08:	6403      	str	r3, [r0, #64]	; 0x40
 800ef0a:	bd70      	pop	{r4, r5, r6, pc}
 800ef0c:	4623      	mov	r3, r4
 800ef0e:	e6fd      	b.n	800ed0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ef10:	462a      	mov	r2, r5
 800ef12:	e706      	b.n	800ed22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ef14:	d502      	bpl.n	800ef1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ef16:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ef1a:	e7e9      	b.n	800eef0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800ef1c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800ef20:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ef24:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ef28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef2c:	dade      	bge.n	800eeec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800ef2e:	e7f2      	b.n	800ef16 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800ef30:	d502      	bpl.n	800ef38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800ef32:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ef36:	e7e7      	b.n	800ef08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800ef38:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800ef3c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800ef40:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800ef44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef48:	dadc      	bge.n	800ef04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800ef4a:	e7f2      	b.n	800ef32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800ef4c:	3d800000 	.word	0x3d800000

0800ef50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800ef50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ef54:	2714      	movs	r7, #20
 800ef56:	435f      	muls	r7, r3
 800ef58:	eb02 0c07 	add.w	ip, r2, r7
 800ef5c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800ef60:	f115 0e0f 	adds.w	lr, r5, #15
 800ef64:	d432      	bmi.n	800efcc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 800ef66:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800ef6a:	9c08      	ldr	r4, [sp, #32]
 800ef6c:	f8c0 e014 	str.w	lr, [r0, #20]
 800ef70:	2614      	movs	r6, #20
 800ef72:	4366      	muls	r6, r4
 800ef74:	eb02 0806 	add.w	r8, r2, r6
 800ef78:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800ef7c:	f115 040f 	adds.w	r4, r5, #15
 800ef80:	d430      	bmi.n	800efe4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800ef82:	1124      	asrs	r4, r4, #4
 800ef84:	eba4 040e 	sub.w	r4, r4, lr
 800ef88:	6184      	str	r4, [r0, #24]
 800ef8a:	2c00      	cmp	r4, #0
 800ef8c:	f000 80a9 	beq.w	800f0e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 800ef90:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800ef94:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800ef98:	5995      	ldr	r5, [r2, r6]
 800ef9a:	eba4 0809 	sub.w	r8, r4, r9
 800ef9e:	59d4      	ldr	r4, [r2, r7]
 800efa0:	eba5 0a04 	sub.w	sl, r5, r4
 800efa4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800efa8:	fb0e fe05 	mul.w	lr, lr, r5
 800efac:	fb0a ee19 	mls	lr, sl, r9, lr
 800efb0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800efb4:	fb08 e404 	mla	r4, r8, r4, lr
 800efb8:	3c01      	subs	r4, #1
 800efba:	2e00      	cmp	r6, #0
 800efbc:	4434      	add	r4, r6
 800efbe:	dc1d      	bgt.n	800effc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 800efc0:	4b5a      	ldr	r3, [pc, #360]	; (800f12c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 800efc2:	4a5b      	ldr	r2, [pc, #364]	; (800f130 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 800efc4:	485b      	ldr	r0, [pc, #364]	; (800f134 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 800efc6:	21f7      	movs	r1, #247	; 0xf7
 800efc8:	f00c fe64 	bl	801bc94 <__assert_func>
 800efcc:	f1c5 0501 	rsb	r5, r5, #1
 800efd0:	f015 050f 	ands.w	r5, r5, #15
 800efd4:	bf18      	it	ne
 800efd6:	2501      	movne	r5, #1
 800efd8:	2410      	movs	r4, #16
 800efda:	fb9e fef4 	sdiv	lr, lr, r4
 800efde:	ebae 0e05 	sub.w	lr, lr, r5
 800efe2:	e7c2      	b.n	800ef6a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 800efe4:	f1c5 0501 	rsb	r5, r5, #1
 800efe8:	f015 050f 	ands.w	r5, r5, #15
 800efec:	bf18      	it	ne
 800efee:	2501      	movne	r5, #1
 800eff0:	f04f 0910 	mov.w	r9, #16
 800eff4:	fb94 f4f9 	sdiv	r4, r4, r9
 800eff8:	1b64      	subs	r4, r4, r5
 800effa:	e7c3      	b.n	800ef84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 800effc:	2c00      	cmp	r4, #0
 800effe:	db72      	blt.n	800f0e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 800f000:	fb94 fef6 	sdiv	lr, r4, r6
 800f004:	f8c0 e000 	str.w	lr, [r0]
 800f008:	fb06 441e 	mls	r4, r6, lr, r4
 800f00c:	6104      	str	r4, [r0, #16]
 800f00e:	2d00      	cmp	r5, #0
 800f010:	db7b      	blt.n	800f10a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 800f012:	fb95 f4f6 	sdiv	r4, r5, r6
 800f016:	6044      	str	r4, [r0, #4]
 800f018:	fb06 5514 	mls	r5, r6, r4, r5
 800f01c:	6085      	str	r5, [r0, #8]
 800f01e:	60c6      	str	r6, [r0, #12]
 800f020:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f024:	6945      	ldr	r5, [r0, #20]
 800f026:	59d2      	ldr	r2, [r2, r7]
 800f028:	eddf 6a43 	vldr	s13, [pc, #268]	; 800f138 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 800f02c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f030:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f034:	ee07 4a10 	vmov	s14, r4
 800f038:	6804      	ldr	r4, [r0, #0]
 800f03a:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f03e:	ee07 2a90 	vmov	s15, r2
 800f042:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f046:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f04a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f04e:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f052:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f056:	edd3 6a00 	vldr	s13, [r3]
 800f05a:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f05e:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800f062:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f066:	edc0 6a07 	vstr	s13, [r0, #28]
 800f06a:	edd0 6a01 	vldr	s13, [r0, #4]
 800f06e:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800f072:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f076:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f07a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f07e:	ed80 6a08 	vstr	s12, [r0, #32]
 800f082:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f084:	6242      	str	r2, [r0, #36]	; 0x24
 800f086:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800f08a:	ed93 6a03 	vldr	s12, [r3, #12]
 800f08e:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f092:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f096:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f09a:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800f09e:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f0a2:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800f0a6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f0aa:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800f0ae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f0b0:	6302      	str	r2, [r0, #48]	; 0x30
 800f0b2:	ed93 6a06 	vldr	s12, [r3, #24]
 800f0b6:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800f0ba:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f0be:	eeb0 7a46 	vmov.f32	s14, s12
 800f0c2:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800f0c6:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f0ca:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f0ce:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800f0d2:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800f0d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f0da:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800f0de:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800f0e0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f0e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f0e6:	4264      	negs	r4, r4
 800f0e8:	fb94 fef6 	sdiv	lr, r4, r6
 800f0ec:	f1ce 0800 	rsb	r8, lr, #0
 800f0f0:	fb06 441e 	mls	r4, r6, lr, r4
 800f0f4:	f8c0 8000 	str.w	r8, [r0]
 800f0f8:	6104      	str	r4, [r0, #16]
 800f0fa:	2c00      	cmp	r4, #0
 800f0fc:	d087      	beq.n	800f00e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 800f0fe:	ea6f 0e0e 	mvn.w	lr, lr
 800f102:	f8c0 e000 	str.w	lr, [r0]
 800f106:	1b34      	subs	r4, r6, r4
 800f108:	e780      	b.n	800f00c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 800f10a:	426d      	negs	r5, r5
 800f10c:	fb95 f4f6 	sdiv	r4, r5, r6
 800f110:	f1c4 0e00 	rsb	lr, r4, #0
 800f114:	fb06 5514 	mls	r5, r6, r4, r5
 800f118:	f8c0 e004 	str.w	lr, [r0, #4]
 800f11c:	6085      	str	r5, [r0, #8]
 800f11e:	2d00      	cmp	r5, #0
 800f120:	f43f af7d 	beq.w	800f01e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 800f124:	43e4      	mvns	r4, r4
 800f126:	6044      	str	r4, [r0, #4]
 800f128:	1b75      	subs	r5, r6, r5
 800f12a:	e777      	b.n	800f01c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 800f12c:	0801f621 	.word	0x0801f621
 800f130:	0801f660 	.word	0x0801f660
 800f134:	0801f631 	.word	0x0801f631
 800f138:	3d800000 	.word	0x3d800000

0800f13c <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f13c:	4602      	mov	r2, r0
 800f13e:	b148      	cbz	r0, 800f154 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f140:	2300      	movs	r3, #0
 800f142:	b298      	uxth	r0, r3
 800f144:	3301      	adds	r3, #1
 800f146:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f14a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f14e:	2900      	cmp	r1, #0
 800f150:	d1f7      	bne.n	800f142 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f152:	4770      	bx	lr
 800f154:	4770      	bx	lr

0800f156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f156:	b530      	push	{r4, r5, lr}
 800f158:	4604      	mov	r4, r0
 800f15a:	b159      	cbz	r1, 800f174 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f15c:	b148      	cbz	r0, 800f172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f15e:	2300      	movs	r3, #0
 800f160:	b298      	uxth	r0, r3
 800f162:	4282      	cmp	r2, r0
 800f164:	d905      	bls.n	800f172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f166:	5ccd      	ldrb	r5, [r1, r3]
 800f168:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f16c:	3301      	adds	r3, #1
 800f16e:	2d00      	cmp	r5, #0
 800f170:	d1f6      	bne.n	800f160 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f172:	bd30      	pop	{r4, r5, pc}
 800f174:	4608      	mov	r0, r1
 800f176:	e7fc      	b.n	800f172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f178 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f178:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f17a:	b08b      	sub	sp, #44	; 0x2c
 800f17c:	468c      	mov	ip, r1
 800f17e:	2100      	movs	r1, #0
 800f180:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f184:	ae01      	add	r6, sp, #4
 800f186:	211f      	movs	r1, #31
 800f188:	fbb0 f7f3 	udiv	r7, r0, r3
 800f18c:	fb03 0517 	mls	r5, r3, r7, r0
 800f190:	b2ec      	uxtb	r4, r5
 800f192:	2d09      	cmp	r5, #9
 800f194:	bfd4      	ite	le
 800f196:	3430      	addle	r4, #48	; 0x30
 800f198:	3457      	addgt	r4, #87	; 0x57
 800f19a:	b2e4      	uxtb	r4, r4
 800f19c:	558c      	strb	r4, [r1, r6]
 800f19e:	4638      	mov	r0, r7
 800f1a0:	1e4c      	subs	r4, r1, #1
 800f1a2:	b92f      	cbnz	r7, 800f1b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f1a4:	4431      	add	r1, r6
 800f1a6:	4660      	mov	r0, ip
 800f1a8:	f7ff ffd5 	bl	800f156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f1ac:	b00b      	add	sp, #44	; 0x2c
 800f1ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f1b0:	4621      	mov	r1, r4
 800f1b2:	e7e9      	b.n	800f188 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f1b4 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f1b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1b6:	4607      	mov	r7, r0
 800f1b8:	b08b      	sub	sp, #44	; 0x2c
 800f1ba:	4608      	mov	r0, r1
 800f1bc:	b341      	cbz	r1, 800f210 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f1be:	1e99      	subs	r1, r3, #2
 800f1c0:	2922      	cmp	r1, #34	; 0x22
 800f1c2:	d825      	bhi.n	800f210 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f1c4:	2100      	movs	r1, #0
 800f1c6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f1ca:	463c      	mov	r4, r7
 800f1cc:	261f      	movs	r6, #31
 800f1ce:	f10d 0c04 	add.w	ip, sp, #4
 800f1d2:	fb94 fef3 	sdiv	lr, r4, r3
 800f1d6:	fb03 441e 	mls	r4, r3, lr, r4
 800f1da:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f1de:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f1e2:	b2ec      	uxtb	r4, r5
 800f1e4:	2d09      	cmp	r5, #9
 800f1e6:	bfd4      	ite	le
 800f1e8:	3430      	addle	r4, #48	; 0x30
 800f1ea:	3457      	addgt	r4, #87	; 0x57
 800f1ec:	b2e4      	uxtb	r4, r4
 800f1ee:	f80c 4006 	strb.w	r4, [ip, r6]
 800f1f2:	4674      	mov	r4, lr
 800f1f4:	1e71      	subs	r1, r6, #1
 800f1f6:	b96c      	cbnz	r4, 800f214 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f1f8:	2f00      	cmp	r7, #0
 800f1fa:	da05      	bge.n	800f208 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f1fc:	ab0a      	add	r3, sp, #40	; 0x28
 800f1fe:	4419      	add	r1, r3
 800f200:	232d      	movs	r3, #45	; 0x2d
 800f202:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f206:	1eb1      	subs	r1, r6, #2
 800f208:	3101      	adds	r1, #1
 800f20a:	4461      	add	r1, ip
 800f20c:	f7ff ffa3 	bl	800f156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f210:	b00b      	add	sp, #44	; 0x2c
 800f212:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f214:	460e      	mov	r6, r1
 800f216:	e7dc      	b.n	800f1d2 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f21c:	4691      	mov	r9, r2
 800f21e:	b085      	sub	sp, #20
 800f220:	6802      	ldr	r2, [r0, #0]
 800f222:	9201      	str	r2, [sp, #4]
 800f224:	4688      	mov	r8, r1
 800f226:	4683      	mov	fp, r0
 800f228:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f22c:	9103      	str	r1, [sp, #12]
 800f22e:	4610      	mov	r0, r2
 800f230:	461c      	mov	r4, r3
 800f232:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f236:	9302      	str	r3, [sp, #8]
 800f238:	f7ff ff80 	bl	800f13c <_ZN8touchgfx7Unicode6strlenEPKt>
 800f23c:	f1b8 0f00 	cmp.w	r8, #0
 800f240:	bf0c      	ite	eq
 800f242:	4684      	moveq	ip, r0
 800f244:	f100 0c01 	addne.w	ip, r0, #1
 800f248:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f24c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f250:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f252:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f254:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f258:	9903      	ldr	r1, [sp, #12]
 800f25a:	fa1f fc8c 	uxth.w	ip, ip
 800f25e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f262:	d041      	beq.n	800f2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f264:	d834      	bhi.n	800f2d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f266:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f26a:	d059      	beq.n	800f320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f26c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f270:	d03a      	beq.n	800f2e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f272:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f276:	d034      	beq.n	800f2e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f278:	2400      	movs	r4, #0
 800f27a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f27e:	3a01      	subs	r2, #1
 800f280:	b169      	cbz	r1, 800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f282:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f284:	458c      	cmp	ip, r1
 800f286:	da09      	bge.n	800f29c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f288:	eba1 010c 	sub.w	r1, r1, ip
 800f28c:	b289      	uxth	r1, r1
 800f28e:	b933      	cbnz	r3, 800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f290:	2e00      	cmp	r6, #0
 800f292:	d051      	beq.n	800f338 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f294:	2800      	cmp	r0, #0
 800f296:	d04f      	beq.n	800f338 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f298:	440c      	add	r4, r1
 800f29a:	b2a4      	uxth	r4, r4
 800f29c:	2100      	movs	r1, #0
 800f29e:	682b      	ldr	r3, [r5, #0]
 800f2a0:	4293      	cmp	r3, r2
 800f2a2:	da07      	bge.n	800f2b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f2a4:	f1b8 0f00 	cmp.w	r8, #0
 800f2a8:	d004      	beq.n	800f2b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f2aa:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f2ae:	682b      	ldr	r3, [r5, #0]
 800f2b0:	3301      	adds	r3, #1
 800f2b2:	602b      	str	r3, [r5, #0]
 800f2b4:	2730      	movs	r7, #48	; 0x30
 800f2b6:	2c00      	cmp	r4, #0
 800f2b8:	d04e      	beq.n	800f358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f2ba:	682e      	ldr	r6, [r5, #0]
 800f2bc:	3c01      	subs	r4, #1
 800f2be:	42b2      	cmp	r2, r6
 800f2c0:	b2a4      	uxth	r4, r4
 800f2c2:	dd49      	ble.n	800f358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f2c4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f2c8:	682b      	ldr	r3, [r5, #0]
 800f2ca:	3301      	adds	r3, #1
 800f2cc:	602b      	str	r3, [r5, #0]
 800f2ce:	e7f2      	b.n	800f2b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f2d0:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f2d4:	d01d      	beq.n	800f312 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f2d6:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f2da:	d002      	beq.n	800f2e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f2dc:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f2e0:	e7c9      	b.n	800f276 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f2e2:	4684      	mov	ip, r0
 800f2e4:	f04f 0800 	mov.w	r8, #0
 800f2e8:	2c00      	cmp	r4, #0
 800f2ea:	d0c6      	beq.n	800f27a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f2ec:	b947      	cbnz	r7, 800f300 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f2ee:	2801      	cmp	r0, #1
 800f2f0:	d106      	bne.n	800f300 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f2f2:	8814      	ldrh	r4, [r2, #0]
 800f2f4:	2c30      	cmp	r4, #48	; 0x30
 800f2f6:	bf02      	ittt	eq
 800f2f8:	3202      	addeq	r2, #2
 800f2fa:	f8cb 2000 	streq.w	r2, [fp]
 800f2fe:	4638      	moveq	r0, r7
 800f300:	45bc      	cmp	ip, r7
 800f302:	da14      	bge.n	800f32e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f304:	b2bf      	uxth	r7, r7
 800f306:	eba7 040c 	sub.w	r4, r7, ip
 800f30a:	b2a4      	uxth	r4, r4
 800f30c:	46bc      	mov	ip, r7
 800f30e:	2600      	movs	r6, #0
 800f310:	e7b3      	b.n	800f27a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f312:	4684      	mov	ip, r0
 800f314:	b16c      	cbz	r4, 800f332 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f316:	42b8      	cmp	r0, r7
 800f318:	dd00      	ble.n	800f31c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f31a:	b2b8      	uxth	r0, r7
 800f31c:	2400      	movs	r4, #0
 800f31e:	e003      	b.n	800f328 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f320:	f04f 0c01 	mov.w	ip, #1
 800f324:	2400      	movs	r4, #0
 800f326:	4660      	mov	r0, ip
 800f328:	4626      	mov	r6, r4
 800f32a:	46a0      	mov	r8, r4
 800f32c:	e7a5      	b.n	800f27a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f32e:	2400      	movs	r4, #0
 800f330:	e7ed      	b.n	800f30e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f332:	4626      	mov	r6, r4
 800f334:	46a0      	mov	r8, r4
 800f336:	e7a0      	b.n	800f27a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f338:	2900      	cmp	r1, #0
 800f33a:	d0b0      	beq.n	800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f33c:	2720      	movs	r7, #32
 800f33e:	682e      	ldr	r6, [r5, #0]
 800f340:	2900      	cmp	r1, #0
 800f342:	d0ac      	beq.n	800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f344:	3901      	subs	r1, #1
 800f346:	4296      	cmp	r6, r2
 800f348:	b289      	uxth	r1, r1
 800f34a:	daa7      	bge.n	800f29c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f34c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f350:	682b      	ldr	r3, [r5, #0]
 800f352:	3301      	adds	r3, #1
 800f354:	602b      	str	r3, [r5, #0]
 800f356:	e7f2      	b.n	800f33e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f358:	b188      	cbz	r0, 800f37e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f35a:	682b      	ldr	r3, [r5, #0]
 800f35c:	3801      	subs	r0, #1
 800f35e:	429a      	cmp	r2, r3
 800f360:	b280      	uxth	r0, r0
 800f362:	dd0c      	ble.n	800f37e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f364:	f8db 3000 	ldr.w	r3, [fp]
 800f368:	1c9c      	adds	r4, r3, #2
 800f36a:	f8cb 4000 	str.w	r4, [fp]
 800f36e:	881c      	ldrh	r4, [r3, #0]
 800f370:	682b      	ldr	r3, [r5, #0]
 800f372:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f376:	682b      	ldr	r3, [r5, #0]
 800f378:	3301      	adds	r3, #1
 800f37a:	602b      	str	r3, [r5, #0]
 800f37c:	e7ec      	b.n	800f358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f37e:	2620      	movs	r6, #32
 800f380:	b151      	cbz	r1, 800f398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f382:	6828      	ldr	r0, [r5, #0]
 800f384:	3901      	subs	r1, #1
 800f386:	4282      	cmp	r2, r0
 800f388:	b289      	uxth	r1, r1
 800f38a:	dd05      	ble.n	800f398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f38c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f390:	682b      	ldr	r3, [r5, #0]
 800f392:	3301      	adds	r3, #1
 800f394:	602b      	str	r3, [r5, #0]
 800f396:	e7f3      	b.n	800f380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f398:	b005      	add	sp, #20
 800f39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f39e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f39e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3a2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f3a6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f3aa:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f3ae:	2400      	movs	r4, #0
 800f3b0:	8014      	strh	r4, [r2, #0]
 800f3b2:	701c      	strb	r4, [r3, #0]
 800f3b4:	f888 4000 	strb.w	r4, [r8]
 800f3b8:	f88c 4000 	strb.w	r4, [ip]
 800f3bc:	f88e 4000 	strb.w	r4, [lr]
 800f3c0:	703c      	strb	r4, [r7, #0]
 800f3c2:	6804      	ldr	r4, [r0, #0]
 800f3c4:	b1a4      	cbz	r4, 800f3f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f3c6:	8824      	ldrh	r4, [r4, #0]
 800f3c8:	f04f 0901 	mov.w	r9, #1
 800f3cc:	b314      	cbz	r4, 800f414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f3ce:	2c2b      	cmp	r4, #43	; 0x2b
 800f3d0:	d001      	beq.n	800f3d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f3d2:	2c20      	cmp	r4, #32
 800f3d4:	d110      	bne.n	800f3f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f3d6:	8014      	strh	r4, [r2, #0]
 800f3d8:	6804      	ldr	r4, [r0, #0]
 800f3da:	b10c      	cbz	r4, 800f3e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f3dc:	3402      	adds	r4, #2
 800f3de:	6004      	str	r4, [r0, #0]
 800f3e0:	680c      	ldr	r4, [r1, #0]
 800f3e2:	b10c      	cbz	r4, 800f3e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f3e4:	3401      	adds	r4, #1
 800f3e6:	600c      	str	r4, [r1, #0]
 800f3e8:	6804      	ldr	r4, [r0, #0]
 800f3ea:	b17c      	cbz	r4, 800f40c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f3ec:	8824      	ldrh	r4, [r4, #0]
 800f3ee:	e7ed      	b.n	800f3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f3f0:	680c      	ldr	r4, [r1, #0]
 800f3f2:	b17c      	cbz	r4, 800f414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f3f4:	7824      	ldrb	r4, [r4, #0]
 800f3f6:	e7e7      	b.n	800f3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f3f8:	2c2d      	cmp	r4, #45	; 0x2d
 800f3fa:	d102      	bne.n	800f402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f3fc:	f883 9000 	strb.w	r9, [r3]
 800f400:	e7ea      	b.n	800f3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f402:	2c23      	cmp	r4, #35	; 0x23
 800f404:	d107      	bne.n	800f416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f406:	f888 9000 	strb.w	r9, [r8]
 800f40a:	e7e5      	b.n	800f3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f40c:	680c      	ldr	r4, [r1, #0]
 800f40e:	b10c      	cbz	r4, 800f414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f410:	7824      	ldrb	r4, [r4, #0]
 800f412:	e7db      	b.n	800f3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f414:	2400      	movs	r4, #0
 800f416:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f41a:	2b09      	cmp	r3, #9
 800f41c:	d901      	bls.n	800f422 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f41e:	2c2a      	cmp	r4, #42	; 0x2a
 800f420:	d122      	bne.n	800f468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f422:	2301      	movs	r3, #1
 800f424:	2c30      	cmp	r4, #48	; 0x30
 800f426:	f88e 3000 	strb.w	r3, [lr]
 800f42a:	d10d      	bne.n	800f448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f42c:	f88c 3000 	strb.w	r3, [ip]
 800f430:	6803      	ldr	r3, [r0, #0]
 800f432:	b10b      	cbz	r3, 800f438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f434:	3302      	adds	r3, #2
 800f436:	6003      	str	r3, [r0, #0]
 800f438:	680b      	ldr	r3, [r1, #0]
 800f43a:	b10b      	cbz	r3, 800f440 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f43c:	3301      	adds	r3, #1
 800f43e:	600b      	str	r3, [r1, #0]
 800f440:	6803      	ldr	r3, [r0, #0]
 800f442:	2b00      	cmp	r3, #0
 800f444:	d02f      	beq.n	800f4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f446:	881c      	ldrh	r4, [r3, #0]
 800f448:	2c2a      	cmp	r4, #42	; 0x2a
 800f44a:	d135      	bne.n	800f4b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f44c:	f04f 33ff 	mov.w	r3, #4294967295
 800f450:	6033      	str	r3, [r6, #0]
 800f452:	6803      	ldr	r3, [r0, #0]
 800f454:	b10b      	cbz	r3, 800f45a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f456:	3302      	adds	r3, #2
 800f458:	6003      	str	r3, [r0, #0]
 800f45a:	680b      	ldr	r3, [r1, #0]
 800f45c:	b10b      	cbz	r3, 800f462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f45e:	3301      	adds	r3, #1
 800f460:	600b      	str	r3, [r1, #0]
 800f462:	6803      	ldr	r3, [r0, #0]
 800f464:	b31b      	cbz	r3, 800f4ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f466:	881c      	ldrh	r4, [r3, #0]
 800f468:	2c2e      	cmp	r4, #46	; 0x2e
 800f46a:	d11a      	bne.n	800f4a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f46c:	2301      	movs	r3, #1
 800f46e:	703b      	strb	r3, [r7, #0]
 800f470:	6803      	ldr	r3, [r0, #0]
 800f472:	b10b      	cbz	r3, 800f478 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f474:	3302      	adds	r3, #2
 800f476:	6003      	str	r3, [r0, #0]
 800f478:	680b      	ldr	r3, [r1, #0]
 800f47a:	b10b      	cbz	r3, 800f480 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f47c:	3301      	adds	r3, #1
 800f47e:	600b      	str	r3, [r1, #0]
 800f480:	6803      	ldr	r3, [r0, #0]
 800f482:	2b00      	cmp	r3, #0
 800f484:	d036      	beq.n	800f4f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f486:	881b      	ldrh	r3, [r3, #0]
 800f488:	2b2a      	cmp	r3, #42	; 0x2a
 800f48a:	d137      	bne.n	800f4fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f48c:	f04f 33ff 	mov.w	r3, #4294967295
 800f490:	602b      	str	r3, [r5, #0]
 800f492:	6803      	ldr	r3, [r0, #0]
 800f494:	b10b      	cbz	r3, 800f49a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f496:	3302      	adds	r3, #2
 800f498:	6003      	str	r3, [r0, #0]
 800f49a:	680b      	ldr	r3, [r1, #0]
 800f49c:	b10b      	cbz	r3, 800f4a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f49e:	3301      	adds	r3, #1
 800f4a0:	600b      	str	r3, [r1, #0]
 800f4a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f4a6:	680c      	ldr	r4, [r1, #0]
 800f4a8:	b134      	cbz	r4, 800f4b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f4aa:	7824      	ldrb	r4, [r4, #0]
 800f4ac:	e7cc      	b.n	800f448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f4ae:	680b      	ldr	r3, [r1, #0]
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	d0f6      	beq.n	800f4a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f4b4:	781c      	ldrb	r4, [r3, #0]
 800f4b6:	e7d7      	b.n	800f468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f4b8:	2300      	movs	r3, #0
 800f4ba:	6033      	str	r3, [r6, #0]
 800f4bc:	220a      	movs	r2, #10
 800f4be:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f4c2:	fa1f f38c 	uxth.w	r3, ip
 800f4c6:	2b09      	cmp	r3, #9
 800f4c8:	d8ce      	bhi.n	800f468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f4ca:	6833      	ldr	r3, [r6, #0]
 800f4cc:	fb02 c303 	mla	r3, r2, r3, ip
 800f4d0:	6033      	str	r3, [r6, #0]
 800f4d2:	6803      	ldr	r3, [r0, #0]
 800f4d4:	b10b      	cbz	r3, 800f4da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f4d6:	3302      	adds	r3, #2
 800f4d8:	6003      	str	r3, [r0, #0]
 800f4da:	680b      	ldr	r3, [r1, #0]
 800f4dc:	b10b      	cbz	r3, 800f4e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f4de:	3301      	adds	r3, #1
 800f4e0:	600b      	str	r3, [r1, #0]
 800f4e2:	6803      	ldr	r3, [r0, #0]
 800f4e4:	b10b      	cbz	r3, 800f4ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f4e6:	881c      	ldrh	r4, [r3, #0]
 800f4e8:	e7e9      	b.n	800f4be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4ea:	680c      	ldr	r4, [r1, #0]
 800f4ec:	2c00      	cmp	r4, #0
 800f4ee:	d0e6      	beq.n	800f4be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4f0:	7824      	ldrb	r4, [r4, #0]
 800f4f2:	e7e4      	b.n	800f4be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f4f4:	680b      	ldr	r3, [r1, #0]
 800f4f6:	b10b      	cbz	r3, 800f4fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f4f8:	781b      	ldrb	r3, [r3, #0]
 800f4fa:	e7c5      	b.n	800f488 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f4fc:	2200      	movs	r2, #0
 800f4fe:	602a      	str	r2, [r5, #0]
 800f500:	240a      	movs	r4, #10
 800f502:	3b30      	subs	r3, #48	; 0x30
 800f504:	b29e      	uxth	r6, r3
 800f506:	2e09      	cmp	r6, #9
 800f508:	682a      	ldr	r2, [r5, #0]
 800f50a:	d813      	bhi.n	800f534 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f50c:	fb04 3302 	mla	r3, r4, r2, r3
 800f510:	602b      	str	r3, [r5, #0]
 800f512:	6803      	ldr	r3, [r0, #0]
 800f514:	b10b      	cbz	r3, 800f51a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f516:	3302      	adds	r3, #2
 800f518:	6003      	str	r3, [r0, #0]
 800f51a:	680b      	ldr	r3, [r1, #0]
 800f51c:	b10b      	cbz	r3, 800f522 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f51e:	3301      	adds	r3, #1
 800f520:	600b      	str	r3, [r1, #0]
 800f522:	6803      	ldr	r3, [r0, #0]
 800f524:	b10b      	cbz	r3, 800f52a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f526:	881b      	ldrh	r3, [r3, #0]
 800f528:	e7eb      	b.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f52a:	680b      	ldr	r3, [r1, #0]
 800f52c:	2b00      	cmp	r3, #0
 800f52e:	d0e8      	beq.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f530:	781b      	ldrb	r3, [r3, #0]
 800f532:	e7e6      	b.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f534:	2a06      	cmp	r2, #6
 800f536:	bfa8      	it	ge
 800f538:	2206      	movge	r2, #6
 800f53a:	602a      	str	r2, [r5, #0]
 800f53c:	e7b1      	b.n	800f4a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f53e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f53e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f542:	b0a3      	sub	sp, #140	; 0x8c
 800f544:	2600      	movs	r6, #0
 800f546:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f54a:	4607      	mov	r7, r0
 800f54c:	4688      	mov	r8, r1
 800f54e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f552:	4631      	mov	r1, r6
 800f554:	2242      	movs	r2, #66	; 0x42
 800f556:	4648      	mov	r0, r9
 800f558:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f55a:	960d      	str	r6, [sp, #52]	; 0x34
 800f55c:	f00c fc26 	bl	801bdac <memset>
 800f560:	b15f      	cbz	r7, 800f57a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f562:	f108 3aff 	add.w	sl, r8, #4294967295
 800f566:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f568:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f56a:	b152      	cbz	r2, 800f582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f56c:	8812      	ldrh	r2, [r2, #0]
 800f56e:	b10a      	cbz	r2, 800f574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f570:	459a      	cmp	sl, r3
 800f572:	dc2e      	bgt.n	800f5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f574:	2200      	movs	r2, #0
 800f576:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f57a:	4638      	mov	r0, r7
 800f57c:	b023      	add	sp, #140	; 0x8c
 800f57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f582:	9a08      	ldr	r2, [sp, #32]
 800f584:	2a00      	cmp	r2, #0
 800f586:	d0f5      	beq.n	800f574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f588:	7812      	ldrb	r2, [r2, #0]
 800f58a:	e7f0      	b.n	800f56e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f58c:	2d00      	cmp	r5, #0
 800f58e:	d0ea      	beq.n	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f590:	782a      	ldrb	r2, [r5, #0]
 800f592:	b142      	cbz	r2, 800f5a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f594:	2a25      	cmp	r2, #37	; 0x25
 800f596:	d001      	beq.n	800f59c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f598:	459a      	cmp	sl, r3
 800f59a:	dc08      	bgt.n	800f5ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f59c:	f1bb 0f00 	cmp.w	fp, #0
 800f5a0:	d121      	bne.n	800f5e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f5a2:	2d00      	cmp	r5, #0
 800f5a4:	d0df      	beq.n	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5a6:	782a      	ldrb	r2, [r5, #0]
 800f5a8:	f04f 0b00 	mov.w	fp, #0
 800f5ac:	e01d      	b.n	800f5ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f5ae:	f1bb 0f00 	cmp.w	fp, #0
 800f5b2:	d078      	beq.n	800f6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f5b4:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5b8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f5bc:	f1bb 0f00 	cmp.w	fp, #0
 800f5c0:	d002      	beq.n	800f5c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f5c2:	f10b 0202 	add.w	r2, fp, #2
 800f5c6:	9209      	str	r2, [sp, #36]	; 0x24
 800f5c8:	b10d      	cbz	r5, 800f5ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f5ca:	3501      	adds	r5, #1
 800f5cc:	9508      	str	r5, [sp, #32]
 800f5ce:	3301      	adds	r3, #1
 800f5d0:	930d      	str	r3, [sp, #52]	; 0x34
 800f5d2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f5d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5d8:	f1bb 0f00 	cmp.w	fp, #0
 800f5dc:	d0d6      	beq.n	800f58c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f5de:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5e2:	2a00      	cmp	r2, #0
 800f5e4:	d1d6      	bne.n	800f594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f5e6:	f8bb 2000 	ldrh.w	r2, [fp]
 800f5ea:	2a00      	cmp	r2, #0
 800f5ec:	d0bb      	beq.n	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5ee:	459a      	cmp	sl, r3
 800f5f0:	ddb9      	ble.n	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5f2:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f5f6:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f5fa:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f5fe:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f602:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f606:	960e      	str	r6, [sp, #56]	; 0x38
 800f608:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f60c:	960f      	str	r6, [sp, #60]	; 0x3c
 800f60e:	f1bb 0f00 	cmp.w	fp, #0
 800f612:	d002      	beq.n	800f61a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f614:	f10b 0302 	add.w	r3, fp, #2
 800f618:	9309      	str	r3, [sp, #36]	; 0x24
 800f61a:	b10d      	cbz	r5, 800f620 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f61c:	1c6b      	adds	r3, r5, #1
 800f61e:	9308      	str	r3, [sp, #32]
 800f620:	ab0f      	add	r3, sp, #60	; 0x3c
 800f622:	9305      	str	r3, [sp, #20]
 800f624:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f628:	9304      	str	r3, [sp, #16]
 800f62a:	ab0e      	add	r3, sp, #56	; 0x38
 800f62c:	9303      	str	r3, [sp, #12]
 800f62e:	ab0c      	add	r3, sp, #48	; 0x30
 800f630:	9302      	str	r3, [sp, #8]
 800f632:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f636:	9301      	str	r3, [sp, #4]
 800f638:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f63c:	9300      	str	r3, [sp, #0]
 800f63e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f642:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f646:	a908      	add	r1, sp, #32
 800f648:	a809      	add	r0, sp, #36	; 0x24
 800f64a:	f7ff fea8 	bl	800f39e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f64e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f650:	2b00      	cmp	r3, #0
 800f652:	bfbe      	ittt	lt
 800f654:	6823      	ldrlt	r3, [r4, #0]
 800f656:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f65a:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f65c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f65e:	bfb8      	it	lt
 800f660:	3404      	addlt	r4, #4
 800f662:	2b00      	cmp	r3, #0
 800f664:	bfb8      	it	lt
 800f666:	6823      	ldrlt	r3, [r4, #0]
 800f668:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f66c:	bfbe      	ittt	lt
 800f66e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f672:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f674:	3404      	addlt	r4, #4
 800f676:	b1d9      	cbz	r1, 800f6b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f678:	880b      	ldrh	r3, [r1, #0]
 800f67a:	2b69      	cmp	r3, #105	; 0x69
 800f67c:	d01f      	beq.n	800f6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f67e:	d82f      	bhi.n	800f6e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f680:	2b58      	cmp	r3, #88	; 0x58
 800f682:	d01c      	beq.n	800f6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f684:	d818      	bhi.n	800f6b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f686:	2b25      	cmp	r3, #37	; 0x25
 800f688:	d034      	beq.n	800f6f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f68a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f68e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f690:	f1bb 0f00 	cmp.w	fp, #0
 800f694:	f000 80b8 	beq.w	800f808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f698:	f8bb 5000 	ldrh.w	r5, [fp]
 800f69c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f6a0:	3301      	adds	r3, #1
 800f6a2:	930d      	str	r3, [sp, #52]	; 0x34
 800f6a4:	e029      	b.n	800f6fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f6a6:	b10d      	cbz	r5, 800f6ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f6a8:	782a      	ldrb	r2, [r5, #0]
 800f6aa:	e785      	b.n	800f5b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f6ac:	462a      	mov	r2, r5
 800f6ae:	e783      	b.n	800f5b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f6b0:	2a00      	cmp	r2, #0
 800f6b2:	d0ea      	beq.n	800f68a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f6b4:	7813      	ldrb	r3, [r2, #0]
 800f6b6:	e7e0      	b.n	800f67a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f6b8:	3b63      	subs	r3, #99	; 0x63
 800f6ba:	2b01      	cmp	r3, #1
 800f6bc:	d8e5      	bhi.n	800f68a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f6be:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f6c2:	b329      	cbz	r1, 800f710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f6c4:	880b      	ldrh	r3, [r1, #0]
 800f6c6:	2b69      	cmp	r3, #105	; 0x69
 800f6c8:	d063      	beq.n	800f792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f6ca:	d825      	bhi.n	800f718 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f6cc:	2b63      	cmp	r3, #99	; 0x63
 800f6ce:	d038      	beq.n	800f742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f6d0:	2b64      	cmp	r3, #100	; 0x64
 800f6d2:	d05e      	beq.n	800f792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f6d4:	2b58      	cmp	r3, #88	; 0x58
 800f6d6:	d07b      	beq.n	800f7d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f6d8:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f6dc:	4625      	mov	r5, r4
 800f6de:	e036      	b.n	800f74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f6e0:	2b73      	cmp	r3, #115	; 0x73
 800f6e2:	d0ec      	beq.n	800f6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6e4:	d802      	bhi.n	800f6ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f6e6:	2b6f      	cmp	r3, #111	; 0x6f
 800f6e8:	d1cf      	bne.n	800f68a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f6ea:	e7e8      	b.n	800f6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6ec:	2b75      	cmp	r3, #117	; 0x75
 800f6ee:	d0e6      	beq.n	800f6be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6f0:	2b78      	cmp	r3, #120	; 0x78
 800f6f2:	e7f9      	b.n	800f6e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f6f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f6f6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f6fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6fc:	b10b      	cbz	r3, 800f702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f6fe:	3302      	adds	r3, #2
 800f700:	9309      	str	r3, [sp, #36]	; 0x24
 800f702:	9b08      	ldr	r3, [sp, #32]
 800f704:	2b00      	cmp	r3, #0
 800f706:	f43f af2e 	beq.w	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f70a:	3301      	adds	r3, #1
 800f70c:	9308      	str	r3, [sp, #32]
 800f70e:	e72a      	b.n	800f566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f710:	2a00      	cmp	r2, #0
 800f712:	d0e1      	beq.n	800f6d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f714:	7813      	ldrb	r3, [r2, #0]
 800f716:	e7d6      	b.n	800f6c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f718:	2b73      	cmp	r3, #115	; 0x73
 800f71a:	d036      	beq.n	800f78a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f71c:	d807      	bhi.n	800f72e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f71e:	2b6f      	cmp	r3, #111	; 0x6f
 800f720:	d1da      	bne.n	800f6d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f722:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f724:	1d25      	adds	r5, r4, #4
 800f726:	eba8 0202 	sub.w	r2, r8, r2
 800f72a:	2308      	movs	r3, #8
 800f72c:	e04a      	b.n	800f7c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f72e:	2b75      	cmp	r3, #117	; 0x75
 800f730:	d043      	beq.n	800f7ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f732:	2b78      	cmp	r3, #120	; 0x78
 800f734:	d1d0      	bne.n	800f6d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f736:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f738:	1d25      	adds	r5, r4, #4
 800f73a:	eba8 0202 	sub.w	r2, r8, r2
 800f73e:	2310      	movs	r3, #16
 800f740:	e040      	b.n	800f7c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f742:	7823      	ldrb	r3, [r4, #0]
 800f744:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f748:	1d25      	adds	r5, r4, #4
 800f74a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f74e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f750:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f754:	2b00      	cmp	r3, #0
 800f756:	d052      	beq.n	800f7fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f758:	881a      	ldrh	r2, [r3, #0]
 800f75a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f75e:	a80d      	add	r0, sp, #52	; 0x34
 800f760:	9005      	str	r0, [sp, #20]
 800f762:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f766:	9004      	str	r0, [sp, #16]
 800f768:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f76a:	9003      	str	r0, [sp, #12]
 800f76c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f770:	9002      	str	r0, [sp, #8]
 800f772:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f774:	9001      	str	r0, [sp, #4]
 800f776:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f77a:	9000      	str	r0, [sp, #0]
 800f77c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f780:	a810      	add	r0, sp, #64	; 0x40
 800f782:	f7ff fd49 	bl	800f218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f786:	462c      	mov	r4, r5
 800f788:	e7b7      	b.n	800f6fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f78a:	6823      	ldr	r3, [r4, #0]
 800f78c:	1d25      	adds	r5, r4, #4
 800f78e:	9310      	str	r3, [sp, #64]	; 0x40
 800f790:	e7dd      	b.n	800f74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f792:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f794:	6820      	ldr	r0, [r4, #0]
 800f796:	eba8 0202 	sub.w	r2, r8, r2
 800f79a:	230a      	movs	r3, #10
 800f79c:	b292      	uxth	r2, r2
 800f79e:	4649      	mov	r1, r9
 800f7a0:	f7ff fd08 	bl	800f1b4 <_ZN8touchgfx7Unicode4itoaElPtti>
 800f7a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f7a8:	2b2d      	cmp	r3, #45	; 0x2d
 800f7aa:	f104 0504 	add.w	r5, r4, #4
 800f7ae:	d1ce      	bne.n	800f74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7b0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f7b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7b6:	3302      	adds	r3, #2
 800f7b8:	e7e9      	b.n	800f78e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f7ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f7bc:	1d25      	adds	r5, r4, #4
 800f7be:	eba8 0202 	sub.w	r2, r8, r2
 800f7c2:	230a      	movs	r3, #10
 800f7c4:	b292      	uxth	r2, r2
 800f7c6:	4649      	mov	r1, r9
 800f7c8:	6820      	ldr	r0, [r4, #0]
 800f7ca:	f7ff fcd5 	bl	800f178 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f7ce:	e7be      	b.n	800f74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f7d2:	6820      	ldr	r0, [r4, #0]
 800f7d4:	eba8 0202 	sub.w	r2, r8, r2
 800f7d8:	b292      	uxth	r2, r2
 800f7da:	2310      	movs	r3, #16
 800f7dc:	4649      	mov	r1, r9
 800f7de:	f7ff fccb 	bl	800f178 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f7e2:	1d25      	adds	r5, r4, #4
 800f7e4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f7e8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f7ec:	2b00      	cmp	r3, #0
 800f7ee:	d0ae      	beq.n	800f74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7f0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f7f4:	2919      	cmp	r1, #25
 800f7f6:	d8f7      	bhi.n	800f7e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f7f8:	3b20      	subs	r3, #32
 800f7fa:	8013      	strh	r3, [r2, #0]
 800f7fc:	e7f4      	b.n	800f7e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f7fe:	9a08      	ldr	r2, [sp, #32]
 800f800:	2a00      	cmp	r2, #0
 800f802:	d0aa      	beq.n	800f75a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f804:	7812      	ldrb	r2, [r2, #0]
 800f806:	e7a8      	b.n	800f75a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f808:	2d00      	cmp	r5, #0
 800f80a:	f43f af47 	beq.w	800f69c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f80e:	782d      	ldrb	r5, [r5, #0]
 800f810:	e744      	b.n	800f69c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f812:	b507      	push	{r0, r1, r2, lr}
 800f814:	9300      	str	r3, [sp, #0]
 800f816:	4613      	mov	r3, r2
 800f818:	2200      	movs	r2, #0
 800f81a:	f7ff fe90 	bl	800f53e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f81e:	b003      	add	sp, #12
 800f820:	f85d fb04 	ldr.w	pc, [sp], #4

0800f824 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f824:	b40c      	push	{r2, r3}
 800f826:	b507      	push	{r0, r1, r2, lr}
 800f828:	ab04      	add	r3, sp, #16
 800f82a:	f853 2b04 	ldr.w	r2, [r3], #4
 800f82e:	9301      	str	r3, [sp, #4]
 800f830:	f7ff ffef 	bl	800f812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f834:	b003      	add	sp, #12
 800f836:	f85d eb04 	ldr.w	lr, [sp], #4
 800f83a:	b002      	add	sp, #8
 800f83c:	4770      	bx	lr
	...

0800f840 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f840:	4b01      	ldr	r3, [pc, #4]	; (800f848 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f842:	6018      	str	r0, [r3, #0]
 800f844:	4770      	bx	lr
 800f846:	bf00      	nop
 800f848:	2000a594 	.word	0x2000a594

0800f84c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f84c:	4b06      	ldr	r3, [pc, #24]	; (800f868 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f84e:	881a      	ldrh	r2, [r3, #0]
 800f850:	4282      	cmp	r2, r0
 800f852:	d807      	bhi.n	800f864 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f854:	4b05      	ldr	r3, [pc, #20]	; (800f86c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f856:	881b      	ldrh	r3, [r3, #0]
 800f858:	4413      	add	r3, r2
 800f85a:	4298      	cmp	r0, r3
 800f85c:	bfac      	ite	ge
 800f85e:	2000      	movge	r0, #0
 800f860:	2001      	movlt	r0, #1
 800f862:	4770      	bx	lr
 800f864:	2000      	movs	r0, #0
 800f866:	4770      	bx	lr
 800f868:	2000a5b4 	.word	0x2000a5b4
 800f86c:	2000a5b8 	.word	0x2000a5b8

0800f870 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f870:	b508      	push	{r3, lr}
 800f872:	4601      	mov	r1, r0
 800f874:	f7ff ffea 	bl	800f84c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f878:	b118      	cbz	r0, 800f882 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f87a:	4b02      	ldr	r3, [pc, #8]	; (800f884 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f87c:	681b      	ldr	r3, [r3, #0]
 800f87e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f882:	bd08      	pop	{r3, pc}
 800f884:	2000a598 	.word	0x2000a598

0800f888 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f88a:	4c24      	ldr	r4, [pc, #144]	; (800f91c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800f88c:	6823      	ldr	r3, [r4, #0]
 800f88e:	2b00      	cmp	r3, #0
 800f890:	d042      	beq.n	800f918 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f892:	4a23      	ldr	r2, [pc, #140]	; (800f920 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800f894:	4d23      	ldr	r5, [pc, #140]	; (800f924 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800f896:	8811      	ldrh	r1, [r2, #0]
 800f898:	f8b5 c000 	ldrh.w	ip, [r5]
 800f89c:	4822      	ldr	r0, [pc, #136]	; (800f928 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f89e:	4461      	add	r1, ip
 800f8a0:	1c4a      	adds	r2, r1, #1
 800f8a2:	f022 0201 	bic.w	r2, r2, #1
 800f8a6:	008f      	lsls	r7, r1, #2
 800f8a8:	0412      	lsls	r2, r2, #16
 800f8aa:	19de      	adds	r6, r3, r7
 800f8ac:	0c12      	lsrs	r2, r2, #16
 800f8ae:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800f8b2:	6006      	str	r6, [r0, #0]
 800f8b4:	4e1d      	ldr	r6, [pc, #116]	; (800f92c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f8b6:	19da      	adds	r2, r3, r7
 800f8b8:	6032      	str	r2, [r6, #0]
 800f8ba:	220e      	movs	r2, #14
 800f8bc:	fb02 f20c 	mul.w	r2, r2, ip
 800f8c0:	3203      	adds	r2, #3
 800f8c2:	f022 0203 	bic.w	r2, r2, #3
 800f8c6:	443a      	add	r2, r7
 800f8c8:	4f19      	ldr	r7, [pc, #100]	; (800f930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f8ca:	4413      	add	r3, r2
 800f8cc:	603b      	str	r3, [r7, #0]
 800f8ce:	4f19      	ldr	r7, [pc, #100]	; (800f934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f8d0:	2300      	movs	r3, #0
 800f8d2:	803b      	strh	r3, [r7, #0]
 800f8d4:	4f18      	ldr	r7, [pc, #96]	; (800f938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f8d6:	683f      	ldr	r7, [r7, #0]
 800f8d8:	1aba      	subs	r2, r7, r2
 800f8da:	4f18      	ldr	r7, [pc, #96]	; (800f93c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f8dc:	603a      	str	r2, [r7, #0]
 800f8de:	4a18      	ldr	r2, [pc, #96]	; (800f940 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f8e0:	469c      	mov	ip, r3
 800f8e2:	8013      	strh	r3, [r2, #0]
 800f8e4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f8e8:	428b      	cmp	r3, r1
 800f8ea:	d10d      	bne.n	800f908 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800f8ec:	882d      	ldrh	r5, [r5, #0]
 800f8ee:	6830      	ldr	r0, [r6, #0]
 800f8f0:	2300      	movs	r3, #0
 800f8f2:	240e      	movs	r4, #14
 800f8f4:	429d      	cmp	r5, r3
 800f8f6:	d90f      	bls.n	800f918 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f8f8:	fb04 0203 	mla	r2, r4, r3, r0
 800f8fc:	3301      	adds	r3, #1
 800f8fe:	7b11      	ldrb	r1, [r2, #12]
 800f900:	f36f 1145 	bfc	r1, #5, #1
 800f904:	7311      	strb	r1, [r2, #12]
 800f906:	e7f5      	b.n	800f8f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800f908:	6822      	ldr	r2, [r4, #0]
 800f90a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f90e:	6802      	ldr	r2, [r0, #0]
 800f910:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800f914:	3301      	adds	r3, #1
 800f916:	e7e7      	b.n	800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800f918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f91a:	bf00      	nop
 800f91c:	2000a598 	.word	0x2000a598
 800f920:	2000a5b4 	.word	0x2000a5b4
 800f924:	2000a5b8 	.word	0x2000a5b8
 800f928:	2000a5ac 	.word	0x2000a5ac
 800f92c:	2000a59c 	.word	0x2000a59c
 800f930:	2000a5a4 	.word	0x2000a5a4
 800f934:	2000a5b6 	.word	0x2000a5b6
 800f938:	2000a5a0 	.word	0x2000a5a0
 800f93c:	2000a5b0 	.word	0x2000a5b0
 800f940:	2000a5a8 	.word	0x2000a5a8

0800f944 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f944:	b510      	push	{r4, lr}
 800f946:	4b10      	ldr	r3, [pc, #64]	; (800f988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f948:	681b      	ldr	r3, [r3, #0]
 800f94a:	b9db      	cbnz	r3, 800f984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f94c:	b1d1      	cbz	r1, 800f984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f94e:	4b0f      	ldr	r3, [pc, #60]	; (800f98c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f950:	801a      	strh	r2, [r3, #0]
 800f952:	4b0f      	ldr	r3, [pc, #60]	; (800f990 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f954:	881b      	ldrh	r3, [r3, #0]
 800f956:	b292      	uxth	r2, r2
 800f958:	240e      	movs	r4, #14
 800f95a:	4413      	add	r3, r2
 800f95c:	4362      	muls	r2, r4
 800f95e:	2406      	movs	r4, #6
 800f960:	fb04 2203 	mla	r2, r4, r3, r2
 800f964:	428a      	cmp	r2, r1
 800f966:	d305      	bcc.n	800f974 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f968:	4b0a      	ldr	r3, [pc, #40]	; (800f994 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f96a:	4a0b      	ldr	r2, [pc, #44]	; (800f998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f96c:	480b      	ldr	r0, [pc, #44]	; (800f99c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f96e:	2134      	movs	r1, #52	; 0x34
 800f970:	f00c f990 	bl	801bc94 <__assert_func>
 800f974:	4b0a      	ldr	r3, [pc, #40]	; (800f9a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f976:	6019      	str	r1, [r3, #0]
 800f978:	4b0a      	ldr	r3, [pc, #40]	; (800f9a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f97a:	6018      	str	r0, [r3, #0]
 800f97c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f980:	f7ff bf82 	b.w	800f888 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f984:	bd10      	pop	{r4, pc}
 800f986:	bf00      	nop
 800f988:	2000a5a4 	.word	0x2000a5a4
 800f98c:	2000a5b8 	.word	0x2000a5b8
 800f990:	2000a5b4 	.word	0x2000a5b4
 800f994:	0801f6fe 	.word	0x0801f6fe
 800f998:	0801f757 	.word	0x0801f757
 800f99c:	0801f6d9 	.word	0x0801f6d9
 800f9a0:	2000a5a0 	.word	0x2000a5a0
 800f9a4:	2000a598 	.word	0x2000a598

0800f9a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f9a8:	b470      	push	{r4, r5, r6}
 800f9aa:	4c07      	ldr	r4, [pc, #28]	; (800f9c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f9ac:	6826      	ldr	r6, [r4, #0]
 800f9ae:	4605      	mov	r5, r0
 800f9b0:	4610      	mov	r0, r2
 800f9b2:	9a03      	ldr	r2, [sp, #12]
 800f9b4:	b936      	cbnz	r6, 800f9c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f9b6:	6025      	str	r5, [r4, #0]
 800f9b8:	4c04      	ldr	r4, [pc, #16]	; (800f9cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f9ba:	8021      	strh	r1, [r4, #0]
 800f9bc:	bc70      	pop	{r4, r5, r6}
 800f9be:	4619      	mov	r1, r3
 800f9c0:	f7ff bfc0 	b.w	800f944 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f9c4:	bc70      	pop	{r4, r5, r6}
 800f9c6:	4770      	bx	lr
 800f9c8:	2000a5bc 	.word	0x2000a5bc
 800f9cc:	2000a5b4 	.word	0x2000a5b4

0800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f9d0:	b508      	push	{r3, lr}
 800f9d2:	4b17      	ldr	r3, [pc, #92]	; (800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f9d4:	6819      	ldr	r1, [r3, #0]
 800f9d6:	b931      	cbnz	r1, 800f9e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f9d8:	4b16      	ldr	r3, [pc, #88]	; (800fa34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f9da:	4a17      	ldr	r2, [pc, #92]	; (800fa38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f9dc:	4817      	ldr	r0, [pc, #92]	; (800fa3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f9de:	f240 4184 	movw	r1, #1156	; 0x484
 800f9e2:	f00c f957 	bl	801bc94 <__assert_func>
 800f9e6:	4a16      	ldr	r2, [pc, #88]	; (800fa40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f9e8:	8803      	ldrh	r3, [r0, #0]
 800f9ea:	8812      	ldrh	r2, [r2, #0]
 800f9ec:	4293      	cmp	r3, r2
 800f9ee:	d204      	bcs.n	800f9fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f9f0:	2214      	movs	r2, #20
 800f9f2:	fb02 1303 	mla	r3, r2, r3, r1
 800f9f6:	8918      	ldrh	r0, [r3, #8]
 800f9f8:	bd08      	pop	{r3, pc}
 800f9fa:	4912      	ldr	r1, [pc, #72]	; (800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 800f9fc:	8809      	ldrh	r1, [r1, #0]
 800f9fe:	4411      	add	r1, r2
 800fa00:	428b      	cmp	r3, r1
 800fa02:	da06      	bge.n	800fa12 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800fa04:	1a9b      	subs	r3, r3, r2
 800fa06:	4a10      	ldr	r2, [pc, #64]	; (800fa48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 800fa08:	6812      	ldr	r2, [r2, #0]
 800fa0a:	210e      	movs	r1, #14
 800fa0c:	fb01 2303 	mla	r3, r1, r3, r2
 800fa10:	e7f1      	b.n	800f9f6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800fa12:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa16:	4293      	cmp	r3, r2
 800fa18:	d107      	bne.n	800fa2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 800fa1a:	4b0c      	ldr	r3, [pc, #48]	; (800fa4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 800fa1c:	781b      	ldrb	r3, [r3, #0]
 800fa1e:	b913      	cbnz	r3, 800fa26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 800fa20:	4b0b      	ldr	r3, [pc, #44]	; (800fa50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 800fa22:	8818      	ldrh	r0, [r3, #0]
 800fa24:	e7e8      	b.n	800f9f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa26:	4b0b      	ldr	r3, [pc, #44]	; (800fa54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 800fa28:	e7fb      	b.n	800fa22 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 800fa2a:	2000      	movs	r0, #0
 800fa2c:	e7e4      	b.n	800f9f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa2e:	bf00      	nop
 800fa30:	2000a5bc 	.word	0x2000a5bc
 800fa34:	0801ebdc 	.word	0x0801ebdc
 800fa38:	0801f804 	.word	0x0801f804
 800fa3c:	0801f6d9 	.word	0x0801f6d9
 800fa40:	2000a5b4 	.word	0x2000a5b4
 800fa44:	2000a5b8 	.word	0x2000a5b8
 800fa48:	2000a59c 	.word	0x2000a59c
 800fa4c:	2000a52c 	.word	0x2000a52c
 800fa50:	2000a52e 	.word	0x2000a52e
 800fa54:	2000a530 	.word	0x2000a530

0800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fa58:	b508      	push	{r3, lr}
 800fa5a:	4b17      	ldr	r3, [pc, #92]	; (800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fa5c:	6819      	ldr	r1, [r3, #0]
 800fa5e:	b931      	cbnz	r1, 800fa6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800fa60:	4b16      	ldr	r3, [pc, #88]	; (800fabc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fa62:	4a17      	ldr	r2, [pc, #92]	; (800fac0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800fa64:	4817      	ldr	r0, [pc, #92]	; (800fac4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800fa66:	f44f 6193 	mov.w	r1, #1176	; 0x498
 800fa6a:	f00c f913 	bl	801bc94 <__assert_func>
 800fa6e:	4a16      	ldr	r2, [pc, #88]	; (800fac8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fa70:	8803      	ldrh	r3, [r0, #0]
 800fa72:	8812      	ldrh	r2, [r2, #0]
 800fa74:	4293      	cmp	r3, r2
 800fa76:	d204      	bcs.n	800fa82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800fa78:	2214      	movs	r2, #20
 800fa7a:	fb02 1303 	mla	r3, r2, r3, r1
 800fa7e:	8958      	ldrh	r0, [r3, #10]
 800fa80:	bd08      	pop	{r3, pc}
 800fa82:	4912      	ldr	r1, [pc, #72]	; (800facc <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 800fa84:	8809      	ldrh	r1, [r1, #0]
 800fa86:	4411      	add	r1, r2
 800fa88:	428b      	cmp	r3, r1
 800fa8a:	da06      	bge.n	800fa9a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800fa8c:	1a9b      	subs	r3, r3, r2
 800fa8e:	4a10      	ldr	r2, [pc, #64]	; (800fad0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 800fa90:	6812      	ldr	r2, [r2, #0]
 800fa92:	210e      	movs	r1, #14
 800fa94:	fb01 2303 	mla	r3, r1, r3, r2
 800fa98:	e7f1      	b.n	800fa7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800fa9a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa9e:	4293      	cmp	r3, r2
 800faa0:	d107      	bne.n	800fab2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 800faa2:	4b0c      	ldr	r3, [pc, #48]	; (800fad4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 800faa4:	781b      	ldrb	r3, [r3, #0]
 800faa6:	b913      	cbnz	r3, 800faae <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 800faa8:	4b0b      	ldr	r3, [pc, #44]	; (800fad8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 800faaa:	8818      	ldrh	r0, [r3, #0]
 800faac:	e7e8      	b.n	800fa80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800faae:	4b0b      	ldr	r3, [pc, #44]	; (800fadc <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 800fab0:	e7fb      	b.n	800faaa <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 800fab2:	2000      	movs	r0, #0
 800fab4:	e7e4      	b.n	800fa80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fab6:	bf00      	nop
 800fab8:	2000a5bc 	.word	0x2000a5bc
 800fabc:	0801ebdc 	.word	0x0801ebdc
 800fac0:	0801f830 	.word	0x0801f830
 800fac4:	0801f6d9 	.word	0x0801f6d9
 800fac8:	2000a5b4 	.word	0x2000a5b4
 800facc:	2000a5b8 	.word	0x2000a5b8
 800fad0:	2000a59c 	.word	0x2000a59c
 800fad4:	2000a52c 	.word	0x2000a52c
 800fad8:	2000a530 	.word	0x2000a530
 800fadc:	2000a52e 	.word	0x2000a52e

0800fae0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fae0:	b510      	push	{r4, lr}
 800fae2:	4b23      	ldr	r3, [pc, #140]	; (800fb70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fae4:	681c      	ldr	r4, [r3, #0]
 800fae6:	b934      	cbnz	r4, 800faf6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fae8:	4b22      	ldr	r3, [pc, #136]	; (800fb74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800faea:	4a23      	ldr	r2, [pc, #140]	; (800fb78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800faec:	4823      	ldr	r0, [pc, #140]	; (800fb7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800faee:	f240 41ac 	movw	r1, #1196	; 0x4ac
 800faf2:	f00c f8cf 	bl	801bc94 <__assert_func>
 800faf6:	4a22      	ldr	r2, [pc, #136]	; (800fb80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800faf8:	880b      	ldrh	r3, [r1, #0]
 800fafa:	8812      	ldrh	r2, [r2, #0]
 800fafc:	4293      	cmp	r3, r2
 800fafe:	d211      	bcs.n	800fb24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fb00:	2214      	movs	r2, #20
 800fb02:	fb02 4303 	mla	r3, r2, r3, r4
 800fb06:	8a1a      	ldrh	r2, [r3, #16]
 800fb08:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fb0c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fb10:	8a5b      	ldrh	r3, [r3, #18]
 800fb12:	8004      	strh	r4, [r0, #0]
 800fb14:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fb18:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fb1c:	8041      	strh	r1, [r0, #2]
 800fb1e:	8082      	strh	r2, [r0, #4]
 800fb20:	80c3      	strh	r3, [r0, #6]
 800fb22:	e00e      	b.n	800fb42 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fb24:	4917      	ldr	r1, [pc, #92]	; (800fb84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fb26:	8809      	ldrh	r1, [r1, #0]
 800fb28:	4411      	add	r1, r2
 800fb2a:	428b      	cmp	r3, r1
 800fb2c:	da0a      	bge.n	800fb44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fb2e:	1a9b      	subs	r3, r3, r2
 800fb30:	4a15      	ldr	r2, [pc, #84]	; (800fb88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fb32:	6812      	ldr	r2, [r2, #0]
 800fb34:	210e      	movs	r1, #14
 800fb36:	fb01 2303 	mla	r3, r1, r3, r2
 800fb3a:	681a      	ldr	r2, [r3, #0]
 800fb3c:	6002      	str	r2, [r0, #0]
 800fb3e:	685a      	ldr	r2, [r3, #4]
 800fb40:	6042      	str	r2, [r0, #4]
 800fb42:	bd10      	pop	{r4, pc}
 800fb44:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb48:	4293      	cmp	r3, r2
 800fb4a:	d10b      	bne.n	800fb64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fb4c:	4b0f      	ldr	r3, [pc, #60]	; (800fb8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fb4e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fb52:	4b0f      	ldr	r3, [pc, #60]	; (800fb90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fb54:	8081      	strh	r1, [r0, #4]
 800fb56:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb5a:	80c2      	strh	r2, [r0, #6]
 800fb5c:	2300      	movs	r3, #0
 800fb5e:	8003      	strh	r3, [r0, #0]
 800fb60:	8043      	strh	r3, [r0, #2]
 800fb62:	e7ee      	b.n	800fb42 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fb64:	2300      	movs	r3, #0
 800fb66:	8003      	strh	r3, [r0, #0]
 800fb68:	8043      	strh	r3, [r0, #2]
 800fb6a:	8083      	strh	r3, [r0, #4]
 800fb6c:	e7d8      	b.n	800fb20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800fb6e:	bf00      	nop
 800fb70:	2000a5bc 	.word	0x2000a5bc
 800fb74:	0801ebdc 	.word	0x0801ebdc
 800fb78:	0801f79d 	.word	0x0801f79d
 800fb7c:	0801f6d9 	.word	0x0801f6d9
 800fb80:	2000a5b4 	.word	0x2000a5b4
 800fb84:	2000a5b8 	.word	0x2000a5b8
 800fb88:	2000a59c 	.word	0x2000a59c
 800fb8c:	2000a528 	.word	0x2000a528
 800fb90:	2000a52a 	.word	0x2000a52a

0800fb94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fb94:	4b18      	ldr	r3, [pc, #96]	; (800fbf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fb96:	681b      	ldr	r3, [r3, #0]
 800fb98:	b34b      	cbz	r3, 800fbee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fb9a:	4a18      	ldr	r2, [pc, #96]	; (800fbfc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fb9c:	8800      	ldrh	r0, [r0, #0]
 800fb9e:	8812      	ldrh	r2, [r2, #0]
 800fba0:	4290      	cmp	r0, r2
 800fba2:	d211      	bcs.n	800fbc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800fba4:	2214      	movs	r2, #20
 800fba6:	fb02 3300 	mla	r3, r2, r0, r3
 800fbaa:	8a1a      	ldrh	r2, [r3, #16]
 800fbac:	8919      	ldrh	r1, [r3, #8]
 800fbae:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fbb2:	428a      	cmp	r2, r1
 800fbb4:	db1d      	blt.n	800fbf2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fbb6:	8a58      	ldrh	r0, [r3, #18]
 800fbb8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fbbc:	895b      	ldrh	r3, [r3, #10]
 800fbbe:	4298      	cmp	r0, r3
 800fbc0:	bfac      	ite	ge
 800fbc2:	2000      	movge	r0, #0
 800fbc4:	2001      	movlt	r0, #1
 800fbc6:	4770      	bx	lr
 800fbc8:	4b0d      	ldr	r3, [pc, #52]	; (800fc00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fbca:	881b      	ldrh	r3, [r3, #0]
 800fbcc:	4413      	add	r3, r2
 800fbce:	4298      	cmp	r0, r3
 800fbd0:	da0d      	bge.n	800fbee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fbd2:	4b0c      	ldr	r3, [pc, #48]	; (800fc04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fbd4:	681b      	ldr	r3, [r3, #0]
 800fbd6:	1a80      	subs	r0, r0, r2
 800fbd8:	220e      	movs	r2, #14
 800fbda:	fb02 3300 	mla	r3, r2, r0, r3
 800fbde:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fbe2:	891a      	ldrh	r2, [r3, #8]
 800fbe4:	4291      	cmp	r1, r2
 800fbe6:	db04      	blt.n	800fbf2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fbe8:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fbec:	e7e6      	b.n	800fbbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fbee:	2000      	movs	r0, #0
 800fbf0:	4770      	bx	lr
 800fbf2:	2001      	movs	r0, #1
 800fbf4:	4770      	bx	lr
 800fbf6:	bf00      	nop
 800fbf8:	2000a5bc 	.word	0x2000a5bc
 800fbfc:	2000a5b4 	.word	0x2000a5b4
 800fc00:	2000a5b8 	.word	0x2000a5b8
 800fc04:	2000a59c 	.word	0x2000a59c

0800fc08 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fc08:	b508      	push	{r3, lr}
 800fc0a:	4b12      	ldr	r3, [pc, #72]	; (800fc54 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fc0c:	6819      	ldr	r1, [r3, #0]
 800fc0e:	b931      	cbnz	r1, 800fc1e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fc10:	4b11      	ldr	r3, [pc, #68]	; (800fc58 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fc12:	4a12      	ldr	r2, [pc, #72]	; (800fc5c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fc14:	4812      	ldr	r0, [pc, #72]	; (800fc60 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fc16:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 800fc1a:	f00c f83b 	bl	801bc94 <__assert_func>
 800fc1e:	8803      	ldrh	r3, [r0, #0]
 800fc20:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fc24:	4293      	cmp	r3, r2
 800fc26:	d012      	beq.n	800fc4e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fc28:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fc2c:	4293      	cmp	r3, r2
 800fc2e:	d103      	bne.n	800fc38 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fc30:	4b0c      	ldr	r3, [pc, #48]	; (800fc64 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fc32:	681b      	ldr	r3, [r3, #0]
 800fc34:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fc36:	bd08      	pop	{r3, pc}
 800fc38:	4a0b      	ldr	r2, [pc, #44]	; (800fc68 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fc3a:	6812      	ldr	r2, [r2, #0]
 800fc3c:	b11a      	cbz	r2, 800fc46 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fc3e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fc42:	2800      	cmp	r0, #0
 800fc44:	d1f7      	bne.n	800fc36 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc46:	2214      	movs	r2, #20
 800fc48:	4353      	muls	r3, r2
 800fc4a:	58c8      	ldr	r0, [r1, r3]
 800fc4c:	e7f3      	b.n	800fc36 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc4e:	2000      	movs	r0, #0
 800fc50:	e7f1      	b.n	800fc36 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc52:	bf00      	nop
 800fc54:	2000a5bc 	.word	0x2000a5bc
 800fc58:	0801ebdc 	.word	0x0801ebdc
 800fc5c:	0801f7d3 	.word	0x0801f7d3
 800fc60:	0801f6d9 	.word	0x0801f6d9
 800fc64:	2000a534 	.word	0x2000a534
 800fc68:	2000a598 	.word	0x2000a598

0800fc6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fc6c:	8802      	ldrh	r2, [r0, #0]
 800fc6e:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fc72:	429a      	cmp	r2, r3
 800fc74:	d845      	bhi.n	800fd02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc76:	4b24      	ldr	r3, [pc, #144]	; (800fd08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fc78:	8818      	ldrh	r0, [r3, #0]
 800fc7a:	4282      	cmp	r2, r0
 800fc7c:	d221      	bcs.n	800fcc2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fc7e:	4b23      	ldr	r3, [pc, #140]	; (800fd0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fc80:	6819      	ldr	r1, [r3, #0]
 800fc82:	2314      	movs	r3, #20
 800fc84:	fb03 1302 	mla	r3, r3, r2, r1
 800fc88:	6858      	ldr	r0, [r3, #4]
 800fc8a:	2800      	cmp	r0, #0
 800fc8c:	d03a      	beq.n	800fd04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc8e:	4920      	ldr	r1, [pc, #128]	; (800fd10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fc90:	6809      	ldr	r1, [r1, #0]
 800fc92:	2900      	cmp	r1, #0
 800fc94:	d036      	beq.n	800fd04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc96:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fc9a:	2900      	cmp	r1, #0
 800fc9c:	d032      	beq.n	800fd04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc9e:	891a      	ldrh	r2, [r3, #8]
 800fca0:	8958      	ldrh	r0, [r3, #10]
 800fca2:	4350      	muls	r0, r2
 800fca4:	7c5a      	ldrb	r2, [r3, #17]
 800fca6:	7cdb      	ldrb	r3, [r3, #19]
 800fca8:	0952      	lsrs	r2, r2, #5
 800fcaa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fcae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fcb2:	2b0b      	cmp	r3, #11
 800fcb4:	bf18      	it	ne
 800fcb6:	0040      	lslne	r0, r0, #1
 800fcb8:	3003      	adds	r0, #3
 800fcba:	f020 0003 	bic.w	r0, r0, #3
 800fcbe:	4408      	add	r0, r1
 800fcc0:	4770      	bx	lr
 800fcc2:	4b14      	ldr	r3, [pc, #80]	; (800fd14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fcc4:	881b      	ldrh	r3, [r3, #0]
 800fcc6:	4403      	add	r3, r0
 800fcc8:	429a      	cmp	r2, r3
 800fcca:	da1a      	bge.n	800fd02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fccc:	4b12      	ldr	r3, [pc, #72]	; (800fd18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fcce:	681b      	ldr	r3, [r3, #0]
 800fcd0:	1a10      	subs	r0, r2, r0
 800fcd2:	210e      	movs	r1, #14
 800fcd4:	fb01 3000 	mla	r0, r1, r0, r3
 800fcd8:	7b03      	ldrb	r3, [r0, #12]
 800fcda:	f003 031f 	and.w	r3, r3, #31
 800fcde:	2b0b      	cmp	r3, #11
 800fce0:	d10b      	bne.n	800fcfa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fce2:	8903      	ldrh	r3, [r0, #8]
 800fce4:	8940      	ldrh	r0, [r0, #10]
 800fce6:	4358      	muls	r0, r3
 800fce8:	4b09      	ldr	r3, [pc, #36]	; (800fd10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fcea:	6819      	ldr	r1, [r3, #0]
 800fcec:	3003      	adds	r0, #3
 800fcee:	f020 0303 	bic.w	r3, r0, #3
 800fcf2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fcf6:	4418      	add	r0, r3
 800fcf8:	4770      	bx	lr
 800fcfa:	2b0d      	cmp	r3, #13
 800fcfc:	d101      	bne.n	800fd02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fcfe:	300d      	adds	r0, #13
 800fd00:	4770      	bx	lr
 800fd02:	2000      	movs	r0, #0
 800fd04:	4770      	bx	lr
 800fd06:	bf00      	nop
 800fd08:	2000a5b4 	.word	0x2000a5b4
 800fd0c:	2000a5bc 	.word	0x2000a5bc
 800fd10:	2000a598 	.word	0x2000a598
 800fd14:	2000a5b8 	.word	0x2000a5b8
 800fd18:	2000a59c 	.word	0x2000a59c

0800fd1c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fd1c:	b510      	push	{r4, lr}
 800fd1e:	4b17      	ldr	r3, [pc, #92]	; (800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fd20:	6819      	ldr	r1, [r3, #0]
 800fd22:	8803      	ldrh	r3, [r0, #0]
 800fd24:	b1e9      	cbz	r1, 800fd62 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd26:	4a16      	ldr	r2, [pc, #88]	; (800fd80 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fd28:	8812      	ldrh	r2, [r2, #0]
 800fd2a:	429a      	cmp	r2, r3
 800fd2c:	d90a      	bls.n	800fd44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fd2e:	2214      	movs	r2, #20
 800fd30:	fb02 1303 	mla	r3, r2, r3, r1
 800fd34:	7c58      	ldrb	r0, [r3, #17]
 800fd36:	0942      	lsrs	r2, r0, #5
 800fd38:	7cd8      	ldrb	r0, [r3, #19]
 800fd3a:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fd3e:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fd42:	bd10      	pop	{r4, pc}
 800fd44:	490f      	ldr	r1, [pc, #60]	; (800fd84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fd46:	8809      	ldrh	r1, [r1, #0]
 800fd48:	4411      	add	r1, r2
 800fd4a:	428b      	cmp	r3, r1
 800fd4c:	da09      	bge.n	800fd62 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd4e:	1a9b      	subs	r3, r3, r2
 800fd50:	4a0d      	ldr	r2, [pc, #52]	; (800fd88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fd52:	6812      	ldr	r2, [r2, #0]
 800fd54:	210e      	movs	r1, #14
 800fd56:	fb01 2303 	mla	r3, r1, r3, r2
 800fd5a:	7b18      	ldrb	r0, [r3, #12]
 800fd5c:	f000 001f 	and.w	r0, r0, #31
 800fd60:	e7ef      	b.n	800fd42 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fd62:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fd66:	4293      	cmp	r3, r2
 800fd68:	d106      	bne.n	800fd78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fd6a:	f7f9 fd8f 	bl	800988c <_ZN8touchgfx3HAL3lcdEv>
 800fd6e:	6803      	ldr	r3, [r0, #0]
 800fd70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd76:	4718      	bx	r3
 800fd78:	2000      	movs	r0, #0
 800fd7a:	e7e2      	b.n	800fd42 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fd7c:	2000a5bc 	.word	0x2000a5bc
 800fd80:	2000a5b4 	.word	0x2000a5b4
 800fd84:	2000a5b8 	.word	0x2000a5b8
 800fd88:	2000a59c 	.word	0x2000a59c

0800fd8c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fd8c:	2010      	movs	r0, #16
 800fd8e:	4770      	bx	lr

0800fd90 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fd90:	2000      	movs	r0, #0
 800fd92:	4770      	bx	lr

0800fd94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fd94:	2bff      	cmp	r3, #255	; 0xff
 800fd96:	d050      	beq.n	800fe3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fd98:	2a0b      	cmp	r2, #11
 800fd9a:	d04a      	beq.n	800fe32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fd9c:	d80e      	bhi.n	800fdbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fd9e:	2a03      	cmp	r2, #3
 800fda0:	d03f      	beq.n	800fe22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fda2:	d804      	bhi.n	800fdae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fda4:	2a01      	cmp	r2, #1
 800fda6:	d03e      	beq.n	800fe26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fda8:	d93f      	bls.n	800fe2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fdaa:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fdac:	4770      	bx	lr
 800fdae:	2a09      	cmp	r2, #9
 800fdb0:	d03f      	beq.n	800fe32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fdb2:	d83c      	bhi.n	800fe2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fdb4:	2a08      	cmp	r2, #8
 800fdb6:	d03a      	beq.n	800fe2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fdb8:	2000      	movs	r0, #0
 800fdba:	4770      	bx	lr
 800fdbc:	2a2f      	cmp	r2, #47	; 0x2f
 800fdbe:	d024      	beq.n	800fe0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fdc0:	d80d      	bhi.n	800fdde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fdc2:	2a2d      	cmp	r2, #45	; 0x2d
 800fdc4:	d014      	beq.n	800fdf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fdc6:	d826      	bhi.n	800fe16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fdc8:	2a2c      	cmp	r2, #44	; 0x2c
 800fdca:	d1f5      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdcc:	684b      	ldr	r3, [r1, #4]
 800fdce:	781b      	ldrb	r3, [r3, #0]
 800fdd0:	2b01      	cmp	r3, #1
 800fdd2:	d018      	beq.n	800fe06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fdd4:	d323      	bcc.n	800fe1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fdd6:	2b02      	cmp	r3, #2
 800fdd8:	d1ee      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdda:	6880      	ldr	r0, [r0, #8]
 800fddc:	4770      	bx	lr
 800fdde:	2a31      	cmp	r2, #49	; 0x31
 800fde0:	d004      	beq.n	800fdec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fde2:	d328      	bcc.n	800fe36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fde4:	2a32      	cmp	r2, #50	; 0x32
 800fde6:	d026      	beq.n	800fe36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fde8:	2a33      	cmp	r2, #51	; 0x33
 800fdea:	d1e5      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdec:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fdee:	4770      	bx	lr
 800fdf0:	684b      	ldr	r3, [r1, #4]
 800fdf2:	781b      	ldrb	r3, [r3, #0]
 800fdf4:	2b01      	cmp	r3, #1
 800fdf6:	d004      	beq.n	800fe02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fdf8:	d30b      	bcc.n	800fe12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fdfa:	2b02      	cmp	r3, #2
 800fdfc:	d1dc      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdfe:	6900      	ldr	r0, [r0, #16]
 800fe00:	4770      	bx	lr
 800fe02:	6a00      	ldr	r0, [r0, #32]
 800fe04:	4770      	bx	lr
 800fe06:	6980      	ldr	r0, [r0, #24]
 800fe08:	4770      	bx	lr
 800fe0a:	684b      	ldr	r3, [r1, #4]
 800fe0c:	781b      	ldrb	r3, [r3, #0]
 800fe0e:	2b00      	cmp	r3, #0
 800fe10:	d1d2      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe12:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fe14:	4770      	bx	lr
 800fe16:	684b      	ldr	r3, [r1, #4]
 800fe18:	781b      	ldrb	r3, [r3, #0]
 800fe1a:	2b00      	cmp	r3, #0
 800fe1c:	d1cc      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe1e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fe20:	4770      	bx	lr
 800fe22:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fe24:	4770      	bx	lr
 800fe26:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fe28:	4770      	bx	lr
 800fe2a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fe2c:	4770      	bx	lr
 800fe2e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fe30:	4770      	bx	lr
 800fe32:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fe34:	4770      	bx	lr
 800fe36:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fe38:	4770      	bx	lr
 800fe3a:	2a0b      	cmp	r2, #11
 800fe3c:	d049      	beq.n	800fed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe3e:	d80e      	bhi.n	800fe5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fe40:	2a03      	cmp	r2, #3
 800fe42:	d040      	beq.n	800fec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fe44:	d804      	bhi.n	800fe50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fe46:	2a01      	cmp	r2, #1
 800fe48:	d03f      	beq.n	800feca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fe4a:	d940      	bls.n	800fece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fe4c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fe4e:	4770      	bx	lr
 800fe50:	2a09      	cmp	r2, #9
 800fe52:	d03e      	beq.n	800fed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe54:	d801      	bhi.n	800fe5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fe56:	2a08      	cmp	r2, #8
 800fe58:	d1ae      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe5a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fe5c:	4770      	bx	lr
 800fe5e:	2a2f      	cmp	r2, #47	; 0x2f
 800fe60:	d024      	beq.n	800feac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fe62:	d80d      	bhi.n	800fe80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fe64:	2a2d      	cmp	r2, #45	; 0x2d
 800fe66:	d014      	beq.n	800fe92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fe68:	d826      	bhi.n	800feb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fe6a:	2a2c      	cmp	r2, #44	; 0x2c
 800fe6c:	d1a4      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe6e:	684b      	ldr	r3, [r1, #4]
 800fe70:	781b      	ldrb	r3, [r3, #0]
 800fe72:	2b01      	cmp	r3, #1
 800fe74:	d018      	beq.n	800fea8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fe76:	d324      	bcc.n	800fec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fe78:	2b02      	cmp	r3, #2
 800fe7a:	d19d      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe7c:	68c0      	ldr	r0, [r0, #12]
 800fe7e:	4770      	bx	lr
 800fe80:	2a31      	cmp	r2, #49	; 0x31
 800fe82:	d004      	beq.n	800fe8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fe84:	d327      	bcc.n	800fed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe86:	2a32      	cmp	r2, #50	; 0x32
 800fe88:	d025      	beq.n	800fed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe8a:	2a33      	cmp	r2, #51	; 0x33
 800fe8c:	d194      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe8e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fe90:	4770      	bx	lr
 800fe92:	684b      	ldr	r3, [r1, #4]
 800fe94:	781b      	ldrb	r3, [r3, #0]
 800fe96:	2b01      	cmp	r3, #1
 800fe98:	d004      	beq.n	800fea4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fe9a:	d30b      	bcc.n	800feb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fe9c:	2b02      	cmp	r3, #2
 800fe9e:	d18b      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fea0:	6940      	ldr	r0, [r0, #20]
 800fea2:	4770      	bx	lr
 800fea4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fea6:	4770      	bx	lr
 800fea8:	69c0      	ldr	r0, [r0, #28]
 800feaa:	4770      	bx	lr
 800feac:	684b      	ldr	r3, [r1, #4]
 800feae:	781b      	ldrb	r3, [r3, #0]
 800feb0:	2b00      	cmp	r3, #0
 800feb2:	d181      	bne.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feb4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800feb6:	4770      	bx	lr
 800feb8:	684b      	ldr	r3, [r1, #4]
 800feba:	781b      	ldrb	r3, [r3, #0]
 800febc:	2b00      	cmp	r3, #0
 800febe:	f47f af7b 	bne.w	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fec2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fec4:	4770      	bx	lr
 800fec6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fec8:	4770      	bx	lr
 800feca:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fecc:	4770      	bx	lr
 800fece:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fed0:	4770      	bx	lr
 800fed2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fed4:	4770      	bx	lr
 800fed6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fed8:	4770      	bx	lr

0800feda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800feda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fede:	b087      	sub	sp, #28
 800fee0:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fee2:	9205      	str	r2, [sp, #20]
 800fee4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fee8:	9202      	str	r2, [sp, #8]
 800feea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800feee:	9101      	str	r1, [sp, #4]
 800fef0:	6841      	ldr	r1, [r0, #4]
 800fef2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fef6:	fb01 2404 	mla	r4, r1, r4, r2
 800fefa:	6802      	ldr	r2, [r0, #0]
 800fefc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff00:	f8de 2000 	ldr.w	r2, [lr]
 800ff04:	9203      	str	r2, [sp, #12]
 800ff06:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ff0a:	3204      	adds	r2, #4
 800ff0c:	9204      	str	r2, [sp, #16]
 800ff0e:	9a02      	ldr	r2, [sp, #8]
 800ff10:	43d6      	mvns	r6, r2
 800ff12:	b2f6      	uxtb	r6, r6
 800ff14:	9a01      	ldr	r2, [sp, #4]
 800ff16:	2a00      	cmp	r2, #0
 800ff18:	dc03      	bgt.n	800ff22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800ff1a:	9a05      	ldr	r2, [sp, #20]
 800ff1c:	2a00      	cmp	r2, #0
 800ff1e:	f340 8129 	ble.w	8010174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ff22:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ff24:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800ff28:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ff2c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff30:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff32:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	dd0e      	ble.n	800ff58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ff3a:	1408      	asrs	r0, r1, #16
 800ff3c:	d405      	bmi.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff3e:	4560      	cmp	r0, ip
 800ff40:	da03      	bge.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff42:	1410      	asrs	r0, r2, #16
 800ff44:	d401      	bmi.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff46:	42b8      	cmp	r0, r7
 800ff48:	db07      	blt.n	800ff5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ff4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff4c:	4401      	add	r1, r0
 800ff4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff50:	3b01      	subs	r3, #1
 800ff52:	4402      	add	r2, r0
 800ff54:	3402      	adds	r4, #2
 800ff56:	e7ee      	b.n	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ff58:	d071      	beq.n	801003e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ff5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ff5c:	1e58      	subs	r0, r3, #1
 800ff5e:	fb05 1500 	mla	r5, r5, r0, r1
 800ff62:	142d      	asrs	r5, r5, #16
 800ff64:	d45f      	bmi.n	8010026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff66:	4565      	cmp	r5, ip
 800ff68:	da5d      	bge.n	8010026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff6a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ff6c:	fb05 2000 	mla	r0, r5, r0, r2
 800ff70:	1400      	asrs	r0, r0, #16
 800ff72:	d458      	bmi.n	8010026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff74:	42b8      	cmp	r0, r7
 800ff76:	da56      	bge.n	8010026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff78:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ff7c:	4699      	mov	r9, r3
 800ff7e:	46a2      	mov	sl, r4
 800ff80:	f1b9 0f00 	cmp.w	r9, #0
 800ff84:	dd57      	ble.n	8010036 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ff86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ff8a:	9803      	ldr	r0, [sp, #12]
 800ff8c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ff90:	140d      	asrs	r5, r1, #16
 800ff92:	fb07 000c 	mla	r0, r7, ip, r0
 800ff96:	f109 39ff 	add.w	r9, r9, #4294967295
 800ff9a:	5d40      	ldrb	r0, [r0, r5]
 800ff9c:	9d04      	ldr	r5, [sp, #16]
 800ff9e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ffa2:	f8ba 5000 	ldrh.w	r5, [sl]
 800ffa6:	122f      	asrs	r7, r5, #8
 800ffa8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ffac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ffb0:	fb17 f706 	smulbb	r7, r7, r6
 800ffb4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ffb8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ffbc:	00ed      	lsls	r5, r5, #3
 800ffbe:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ffc2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ffc6:	10c7      	asrs	r7, r0, #3
 800ffc8:	b2ed      	uxtb	r5, r5
 800ffca:	00c0      	lsls	r0, r0, #3
 800ffcc:	fb18 f806 	smulbb	r8, r8, r6
 800ffd0:	fb15 f506 	smulbb	r5, r5, r6
 800ffd4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ffd8:	b2c0      	uxtb	r0, r0
 800ffda:	fa1f fc8c 	uxth.w	ip, ip
 800ffde:	fb07 870b 	mla	r7, r7, fp, r8
 800ffe2:	fb00 500b 	mla	r0, r0, fp, r5
 800ffe6:	b280      	uxth	r0, r0
 800ffe8:	b2bf      	uxth	r7, r7
 800ffea:	f10c 0501 	add.w	r5, ip, #1
 800ffee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fff2:	f107 0801 	add.w	r8, r7, #1
 800fff6:	1c45      	adds	r5, r0, #1
 800fff8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fffc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010000:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010002:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010006:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801000a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801000e:	ea45 0c0c 	orr.w	ip, r5, ip
 8010012:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010016:	4401      	add	r1, r0
 8010018:	9814      	ldr	r0, [sp, #80]	; 0x50
 801001a:	ea4c 0c08 	orr.w	ip, ip, r8
 801001e:	f82a cb02 	strh.w	ip, [sl], #2
 8010022:	4402      	add	r2, r0
 8010024:	e7ac      	b.n	800ff80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010026:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801002a:	f04f 0800 	mov.w	r8, #0
 801002e:	eb03 0008 	add.w	r0, r3, r8
 8010032:	2800      	cmp	r0, #0
 8010034:	dc41      	bgt.n	80100ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010036:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801003a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801003e:	9b01      	ldr	r3, [sp, #4]
 8010040:	2b00      	cmp	r3, #0
 8010042:	f340 8097 	ble.w	8010174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010046:	ee30 0a04 	vadd.f32	s0, s0, s8
 801004a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801004e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010052:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010054:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010058:	ee31 1a05 	vadd.f32	s2, s2, s10
 801005c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010060:	eef0 6a62 	vmov.f32	s13, s5
 8010064:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010068:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801006c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010070:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010074:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010078:	eef0 6a43 	vmov.f32	s13, s6
 801007c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010080:	ee12 2a90 	vmov	r2, s5
 8010084:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010088:	fb92 f3f3 	sdiv	r3, r2, r3
 801008c:	ee13 2a10 	vmov	r2, s6
 8010090:	9313      	str	r3, [sp, #76]	; 0x4c
 8010092:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010094:	fb92 f3f3 	sdiv	r3, r2, r3
 8010098:	9314      	str	r3, [sp, #80]	; 0x50
 801009a:	9b01      	ldr	r3, [sp, #4]
 801009c:	9a05      	ldr	r2, [sp, #20]
 801009e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100a2:	3b01      	subs	r3, #1
 80100a4:	9301      	str	r3, [sp, #4]
 80100a6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80100aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100ac:	eeb0 3a67 	vmov.f32	s6, s15
 80100b0:	bf08      	it	eq
 80100b2:	4613      	moveq	r3, r2
 80100b4:	eef0 2a47 	vmov.f32	s5, s14
 80100b8:	e72c      	b.n	800ff14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80100ba:	140f      	asrs	r7, r1, #16
 80100bc:	d453      	bmi.n	8010166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100be:	f8de 5008 	ldr.w	r5, [lr, #8]
 80100c2:	42bd      	cmp	r5, r7
 80100c4:	dd4f      	ble.n	8010166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80100ca:	d44c      	bmi.n	8010166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100cc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80100d0:	4560      	cmp	r0, ip
 80100d2:	dd48      	ble.n	8010166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80100d4:	9803      	ldr	r0, [sp, #12]
 80100d6:	b22d      	sxth	r5, r5
 80100d8:	fb0c 0505 	mla	r5, ip, r5, r0
 80100dc:	5de8      	ldrb	r0, [r5, r7]
 80100de:	9d04      	ldr	r5, [sp, #16]
 80100e0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80100e4:	f06f 0501 	mvn.w	r5, #1
 80100e8:	fb05 fb08 	mul.w	fp, r5, r8
 80100ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80100f0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80100f4:	122f      	asrs	r7, r5, #8
 80100f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100fa:	fb17 f706 	smulbb	r7, r7, r6
 80100fe:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010102:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010106:	00ed      	lsls	r5, r5, #3
 8010108:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801010c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010110:	10c7      	asrs	r7, r0, #3
 8010112:	b2ed      	uxtb	r5, r5
 8010114:	00c0      	lsls	r0, r0, #3
 8010116:	fb19 f906 	smulbb	r9, r9, r6
 801011a:	fb15 f506 	smulbb	r5, r5, r6
 801011e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010122:	b2c0      	uxtb	r0, r0
 8010124:	fa1f fc8c 	uxth.w	ip, ip
 8010128:	fb07 970a 	mla	r7, r7, sl, r9
 801012c:	fb00 500a 	mla	r0, r0, sl, r5
 8010130:	b2bf      	uxth	r7, r7
 8010132:	b280      	uxth	r0, r0
 8010134:	f10c 0501 	add.w	r5, ip, #1
 8010138:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801013c:	f107 0901 	add.w	r9, r7, #1
 8010140:	1c45      	adds	r5, r0, #1
 8010142:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010146:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801014a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801014e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010152:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010156:	ea45 0c0c 	orr.w	ip, r5, ip
 801015a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801015e:	ea4c 0c09 	orr.w	ip, ip, r9
 8010162:	f824 c00b 	strh.w	ip, [r4, fp]
 8010166:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010168:	4401      	add	r1, r0
 801016a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801016c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010170:	4402      	add	r2, r0
 8010172:	e75c      	b.n	801002e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010174:	b007      	add	sp, #28
 8010176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801017a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801017a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801017e:	b085      	sub	sp, #20
 8010180:	4693      	mov	fp, r2
 8010182:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010184:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010186:	6870      	ldr	r0, [r6, #4]
 8010188:	9100      	str	r1, [sp, #0]
 801018a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801018e:	fb00 2404 	mla	r4, r0, r4, r2
 8010192:	6832      	ldr	r2, [r6, #0]
 8010194:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010198:	682a      	ldr	r2, [r5, #0]
 801019a:	9201      	str	r2, [sp, #4]
 801019c:	686a      	ldr	r2, [r5, #4]
 801019e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80101a2:	3204      	adds	r2, #4
 80101a4:	9202      	str	r2, [sp, #8]
 80101a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80101aa:	9a00      	ldr	r2, [sp, #0]
 80101ac:	2a00      	cmp	r2, #0
 80101ae:	dc03      	bgt.n	80101b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80101b0:	f1bb 0f00 	cmp.w	fp, #0
 80101b4:	f340 80a0 	ble.w	80102f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80101b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80101ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80101be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80101c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80101c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80101c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80101cc:	2b00      	cmp	r3, #0
 80101ce:	dd0c      	ble.n	80101ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80101d0:	1406      	asrs	r6, r0, #16
 80101d2:	d405      	bmi.n	80101e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101d4:	454e      	cmp	r6, r9
 80101d6:	da03      	bge.n	80101e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101d8:	1416      	asrs	r6, r2, #16
 80101da:	d401      	bmi.n	80101e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80101dc:	4546      	cmp	r6, r8
 80101de:	db05      	blt.n	80101ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80101e0:	4470      	add	r0, lr
 80101e2:	4462      	add	r2, ip
 80101e4:	3b01      	subs	r3, #1
 80101e6:	3402      	adds	r4, #2
 80101e8:	e7f0      	b.n	80101cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80101ea:	d00f      	beq.n	801020c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80101ec:	1e5e      	subs	r6, r3, #1
 80101ee:	fb0e 0706 	mla	r7, lr, r6, r0
 80101f2:	143f      	asrs	r7, r7, #16
 80101f4:	d541      	bpl.n	801027a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80101f6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80101fa:	4698      	mov	r8, r3
 80101fc:	9603      	str	r6, [sp, #12]
 80101fe:	f1b8 0f00 	cmp.w	r8, #0
 8010202:	dc59      	bgt.n	80102b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010204:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010208:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801020c:	9b00      	ldr	r3, [sp, #0]
 801020e:	2b00      	cmp	r3, #0
 8010210:	dd72      	ble.n	80102f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010212:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010216:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801021a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801021e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010220:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010224:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010228:	eeb0 6a62 	vmov.f32	s12, s5
 801022c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010230:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010234:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010238:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801023c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010240:	eeb0 6a43 	vmov.f32	s12, s6
 8010244:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010248:	ee12 2a90 	vmov	r2, s5
 801024c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010250:	fb92 fef3 	sdiv	lr, r2, r3
 8010254:	ee13 2a10 	vmov	r2, s6
 8010258:	fb92 fcf3 	sdiv	ip, r2, r3
 801025c:	9b00      	ldr	r3, [sp, #0]
 801025e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010262:	3b01      	subs	r3, #1
 8010264:	9300      	str	r3, [sp, #0]
 8010266:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801026a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801026c:	eeb0 3a67 	vmov.f32	s6, s15
 8010270:	bf08      	it	eq
 8010272:	465b      	moveq	r3, fp
 8010274:	eef0 2a47 	vmov.f32	s5, s14
 8010278:	e797      	b.n	80101aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801027a:	454f      	cmp	r7, r9
 801027c:	dabb      	bge.n	80101f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801027e:	fb0c 2606 	mla	r6, ip, r6, r2
 8010282:	1436      	asrs	r6, r6, #16
 8010284:	d4b7      	bmi.n	80101f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010286:	4546      	cmp	r6, r8
 8010288:	dab5      	bge.n	80101f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801028a:	461e      	mov	r6, r3
 801028c:	46a0      	mov	r8, r4
 801028e:	2e00      	cmp	r6, #0
 8010290:	ddb8      	ble.n	8010204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010292:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8010296:	9901      	ldr	r1, [sp, #4]
 8010298:	1417      	asrs	r7, r2, #16
 801029a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801029e:	fb0a 1707 	mla	r7, sl, r7, r1
 80102a2:	9902      	ldr	r1, [sp, #8]
 80102a4:	f817 7009 	ldrb.w	r7, [r7, r9]
 80102a8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80102ac:	f828 7b02 	strh.w	r7, [r8], #2
 80102b0:	4470      	add	r0, lr
 80102b2:	4462      	add	r2, ip
 80102b4:	3e01      	subs	r6, #1
 80102b6:	e7ea      	b.n	801028e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80102b8:	ea5f 4920 	movs.w	r9, r0, asr #16
 80102bc:	d417      	bmi.n	80102ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80102be:	68ae      	ldr	r6, [r5, #8]
 80102c0:	454e      	cmp	r6, r9
 80102c2:	dd14      	ble.n	80102ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80102c4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80102c8:	d411      	bmi.n	80102ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80102ca:	68ef      	ldr	r7, [r5, #12]
 80102cc:	4557      	cmp	r7, sl
 80102ce:	dd0e      	ble.n	80102ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80102d0:	9f01      	ldr	r7, [sp, #4]
 80102d2:	b236      	sxth	r6, r6
 80102d4:	fb0a 7606 	mla	r6, sl, r6, r7
 80102d8:	9f02      	ldr	r7, [sp, #8]
 80102da:	f816 6009 	ldrb.w	r6, [r6, r9]
 80102de:	f06f 0101 	mvn.w	r1, #1
 80102e2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80102e6:	fb01 f608 	mul.w	r6, r1, r8
 80102ea:	9903      	ldr	r1, [sp, #12]
 80102ec:	538f      	strh	r7, [r1, r6]
 80102ee:	4470      	add	r0, lr
 80102f0:	4462      	add	r2, ip
 80102f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80102f6:	e782      	b.n	80101fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80102f8:	b005      	add	sp, #20
 80102fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010302:	b087      	sub	sp, #28
 8010304:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010306:	9205      	str	r2, [sp, #20]
 8010308:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801030c:	9203      	str	r2, [sp, #12]
 801030e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010312:	9102      	str	r1, [sp, #8]
 8010314:	6861      	ldr	r1, [r4, #4]
 8010316:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801031a:	fb01 2000 	mla	r0, r1, r0, r2
 801031e:	6822      	ldr	r2, [r4, #0]
 8010320:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010324:	9200      	str	r2, [sp, #0]
 8010326:	f8dc 2000 	ldr.w	r2, [ip]
 801032a:	9204      	str	r2, [sp, #16]
 801032c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010330:	3204      	adds	r2, #4
 8010332:	9201      	str	r2, [sp, #4]
 8010334:	9a03      	ldr	r2, [sp, #12]
 8010336:	43d5      	mvns	r5, r2
 8010338:	b2ed      	uxtb	r5, r5
 801033a:	9a02      	ldr	r2, [sp, #8]
 801033c:	2a00      	cmp	r2, #0
 801033e:	dc03      	bgt.n	8010348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010340:	9a05      	ldr	r2, [sp, #20]
 8010342:	2a00      	cmp	r2, #0
 8010344:	f340 812c 	ble.w	80105a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010348:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801034a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801034e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010352:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010356:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010358:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801035c:	2b00      	cmp	r3, #0
 801035e:	dd10      	ble.n	8010382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010360:	140c      	asrs	r4, r1, #16
 8010362:	d405      	bmi.n	8010370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010364:	4574      	cmp	r4, lr
 8010366:	da03      	bge.n	8010370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010368:	1414      	asrs	r4, r2, #16
 801036a:	d401      	bmi.n	8010370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801036c:	42bc      	cmp	r4, r7
 801036e:	db09      	blt.n	8010384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010370:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010372:	9800      	ldr	r0, [sp, #0]
 8010374:	4421      	add	r1, r4
 8010376:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010378:	3002      	adds	r0, #2
 801037a:	4422      	add	r2, r4
 801037c:	3b01      	subs	r3, #1
 801037e:	9000      	str	r0, [sp, #0]
 8010380:	e7ec      	b.n	801035c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010382:	d071      	beq.n	8010468 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010384:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010386:	1e5c      	subs	r4, r3, #1
 8010388:	fb06 1604 	mla	r6, r6, r4, r1
 801038c:	1436      	asrs	r6, r6, #16
 801038e:	d45d      	bmi.n	801044c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010390:	4576      	cmp	r6, lr
 8010392:	da5b      	bge.n	801044c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010394:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010396:	fb06 2404 	mla	r4, r6, r4, r2
 801039a:	1424      	asrs	r4, r4, #16
 801039c:	d456      	bmi.n	801044c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801039e:	42bc      	cmp	r4, r7
 80103a0:	da54      	bge.n	801044c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103a2:	f8dd 9000 	ldr.w	r9, [sp]
 80103a6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80103aa:	4698      	mov	r8, r3
 80103ac:	f1b8 0f00 	cmp.w	r8, #0
 80103b0:	dd54      	ble.n	801045c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80103b2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80103b6:	9804      	ldr	r0, [sp, #16]
 80103b8:	1414      	asrs	r4, r2, #16
 80103ba:	fb07 0404 	mla	r4, r7, r4, r0
 80103be:	140e      	asrs	r6, r1, #16
 80103c0:	9801      	ldr	r0, [sp, #4]
 80103c2:	f814 e006 	ldrb.w	lr, [r4, r6]
 80103c6:	f8b9 4000 	ldrh.w	r4, [r9]
 80103ca:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80103ce:	eb00 0b0e 	add.w	fp, r0, lr
 80103d2:	1227      	asrs	r7, r4, #8
 80103d4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80103d8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80103dc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80103e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103e2:	fb16 f60a 	smulbb	r6, r6, sl
 80103e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80103ea:	fb07 6705 	mla	r7, r7, r5, r6
 80103ee:	10e6      	asrs	r6, r4, #3
 80103f0:	00e4      	lsls	r4, r4, #3
 80103f2:	b2e4      	uxtb	r4, r4
 80103f4:	fb1b fb0a 	smulbb	fp, fp, sl
 80103f8:	fb14 f405 	smulbb	r4, r4, r5
 80103fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010400:	b2bf      	uxth	r7, r7
 8010402:	fb06 b605 	mla	r6, r6, r5, fp
 8010406:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801040a:	b2b6      	uxth	r6, r6
 801040c:	fa1f fe8e 	uxth.w	lr, lr
 8010410:	1c7c      	adds	r4, r7, #1
 8010412:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010416:	f106 0b01 	add.w	fp, r6, #1
 801041a:	f10e 0401 	add.w	r4, lr, #1
 801041e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010422:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010426:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801042a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801042e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010432:	4327      	orrs	r7, r4
 8010434:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010438:	4401      	add	r1, r0
 801043a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801043c:	ea47 070b 	orr.w	r7, r7, fp
 8010440:	f829 7b02 	strh.w	r7, [r9], #2
 8010444:	4402      	add	r2, r0
 8010446:	f108 38ff 	add.w	r8, r8, #4294967295
 801044a:	e7af      	b.n	80103ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801044c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010450:	f04f 0e00 	mov.w	lr, #0
 8010454:	eb03 040e 	add.w	r4, r3, lr
 8010458:	2c00      	cmp	r4, #0
 801045a:	dc43      	bgt.n	80104e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801045c:	9a00      	ldr	r2, [sp, #0]
 801045e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010462:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010466:	9300      	str	r3, [sp, #0]
 8010468:	9b02      	ldr	r3, [sp, #8]
 801046a:	2b00      	cmp	r3, #0
 801046c:	f340 8098 	ble.w	80105a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010470:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010474:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010478:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801047c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801047e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010482:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010486:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801048a:	eef0 6a62 	vmov.f32	s13, s5
 801048e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010496:	ee77 2a62 	vsub.f32	s5, s14, s5
 801049a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801049e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80104a2:	eef0 6a43 	vmov.f32	s13, s6
 80104a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104aa:	ee12 2a90 	vmov	r2, s5
 80104ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80104b6:	ee13 2a10 	vmov	r2, s6
 80104ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80104bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104be:	fb92 f3f3 	sdiv	r3, r2, r3
 80104c2:	9314      	str	r3, [sp, #80]	; 0x50
 80104c4:	9b02      	ldr	r3, [sp, #8]
 80104c6:	9a05      	ldr	r2, [sp, #20]
 80104c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104cc:	3b01      	subs	r3, #1
 80104ce:	9302      	str	r3, [sp, #8]
 80104d0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80104d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104d6:	eeb0 3a67 	vmov.f32	s6, s15
 80104da:	bf08      	it	eq
 80104dc:	4613      	moveq	r3, r2
 80104de:	eef0 2a47 	vmov.f32	s5, s14
 80104e2:	e72a      	b.n	801033a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80104e4:	140f      	asrs	r7, r1, #16
 80104e6:	d454      	bmi.n	8010592 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104e8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80104ec:	42be      	cmp	r6, r7
 80104ee:	dd50      	ble.n	8010592 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104f0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80104f4:	d44d      	bmi.n	8010592 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104f6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80104fa:	4544      	cmp	r4, r8
 80104fc:	dd49      	ble.n	8010592 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104fe:	9c04      	ldr	r4, [sp, #16]
 8010500:	b236      	sxth	r6, r6
 8010502:	fb08 4606 	mla	r6, r8, r6, r4
 8010506:	f06f 0001 	mvn.w	r0, #1
 801050a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801050e:	9c01      	ldr	r4, [sp, #4]
 8010510:	fb00 fa0e 	mul.w	sl, r0, lr
 8010514:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010518:	9800      	ldr	r0, [sp, #0]
 801051a:	eb04 0b08 	add.w	fp, r4, r8
 801051e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010522:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010526:	9801      	ldr	r0, [sp, #4]
 8010528:	f89b b001 	ldrb.w	fp, [fp, #1]
 801052c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010530:	9800      	ldr	r0, [sp, #0]
 8010532:	1227      	asrs	r7, r4, #8
 8010534:	fb16 f609 	smulbb	r6, r6, r9
 8010538:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801053c:	fb07 6705 	mla	r7, r7, r5, r6
 8010540:	10e6      	asrs	r6, r4, #3
 8010542:	00e4      	lsls	r4, r4, #3
 8010544:	b2e4      	uxtb	r4, r4
 8010546:	fb1b fb09 	smulbb	fp, fp, r9
 801054a:	fb14 f405 	smulbb	r4, r4, r5
 801054e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010552:	b2bf      	uxth	r7, r7
 8010554:	fb06 b605 	mla	r6, r6, r5, fp
 8010558:	fb08 4809 	mla	r8, r8, r9, r4
 801055c:	b2b6      	uxth	r6, r6
 801055e:	fa1f f888 	uxth.w	r8, r8
 8010562:	1c7c      	adds	r4, r7, #1
 8010564:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010568:	f106 0b01 	add.w	fp, r6, #1
 801056c:	f108 0401 	add.w	r4, r8, #1
 8010570:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010574:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010578:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801057c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010580:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010584:	4327      	orrs	r7, r4
 8010586:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801058a:	ea47 070b 	orr.w	r7, r7, fp
 801058e:	f820 700a 	strh.w	r7, [r0, sl]
 8010592:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010594:	4401      	add	r1, r0
 8010596:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010598:	f10e 3eff 	add.w	lr, lr, #4294967295
 801059c:	4402      	add	r2, r0
 801059e:	e759      	b.n	8010454 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80105a0:	b007      	add	sp, #28
 80105a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080105a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80105a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105ac:	b085      	sub	sp, #20
 80105ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105b2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80105b4:	9203      	str	r2, [sp, #12]
 80105b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80105ba:	6870      	ldr	r0, [r6, #4]
 80105bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80105be:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80105c2:	686f      	ldr	r7, [r5, #4]
 80105c4:	9101      	str	r1, [sp, #4]
 80105c6:	fb00 2404 	mla	r4, r0, r4, r2
 80105ca:	6832      	ldr	r2, [r6, #0]
 80105cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80105d0:	682a      	ldr	r2, [r5, #0]
 80105d2:	9202      	str	r2, [sp, #8]
 80105d4:	3704      	adds	r7, #4
 80105d6:	9a01      	ldr	r2, [sp, #4]
 80105d8:	2a00      	cmp	r2, #0
 80105da:	dc03      	bgt.n	80105e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80105dc:	9a03      	ldr	r2, [sp, #12]
 80105de:	2a00      	cmp	r2, #0
 80105e0:	f340 80cc 	ble.w	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80105e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80105e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80105ea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80105ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80105f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105f8:	2b00      	cmp	r3, #0
 80105fa:	dd0d      	ble.n	8010618 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80105fc:	1406      	asrs	r6, r0, #16
 80105fe:	d405      	bmi.n	801060c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010600:	454e      	cmp	r6, r9
 8010602:	da03      	bge.n	801060c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010604:	1416      	asrs	r6, r2, #16
 8010606:	d401      	bmi.n	801060c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010608:	4546      	cmp	r6, r8
 801060a:	db06      	blt.n	801061a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801060c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801060e:	4460      	add	r0, ip
 8010610:	4432      	add	r2, r6
 8010612:	3b01      	subs	r3, #1
 8010614:	3402      	adds	r4, #2
 8010616:	e7ef      	b.n	80105f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010618:	d00f      	beq.n	801063a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801061a:	1e5e      	subs	r6, r3, #1
 801061c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010620:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010624:	d543      	bpl.n	80106ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010626:	4698      	mov	r8, r3
 8010628:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801062c:	f1b8 0f00 	cmp.w	r8, #0
 8010630:	dc71      	bgt.n	8010716 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010632:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010636:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801063a:	9b01      	ldr	r3, [sp, #4]
 801063c:	2b00      	cmp	r3, #0
 801063e:	f340 809d 	ble.w	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010642:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010646:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801064a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801064e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010650:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010654:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010658:	eeb0 6a62 	vmov.f32	s12, s5
 801065c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010660:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010664:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010668:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801066c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010670:	eeb0 6a43 	vmov.f32	s12, s6
 8010674:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010678:	ee12 2a90 	vmov	r2, s5
 801067c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010680:	fb92 fcf3 	sdiv	ip, r2, r3
 8010684:	ee13 2a10 	vmov	r2, s6
 8010688:	fb92 f3f3 	sdiv	r3, r2, r3
 801068c:	9312      	str	r3, [sp, #72]	; 0x48
 801068e:	9b01      	ldr	r3, [sp, #4]
 8010690:	9a03      	ldr	r2, [sp, #12]
 8010692:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010696:	3b01      	subs	r3, #1
 8010698:	9301      	str	r3, [sp, #4]
 801069a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801069e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106a0:	eeb0 3a67 	vmov.f32	s6, s15
 80106a4:	bf08      	it	eq
 80106a6:	4613      	moveq	r3, r2
 80106a8:	eef0 2a47 	vmov.f32	s5, s14
 80106ac:	e793      	b.n	80105d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80106ae:	45ce      	cmp	lr, r9
 80106b0:	dab9      	bge.n	8010626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80106b2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80106b4:	fb01 2606 	mla	r6, r1, r6, r2
 80106b8:	1436      	asrs	r6, r6, #16
 80106ba:	d4b4      	bmi.n	8010626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80106bc:	4546      	cmp	r6, r8
 80106be:	dab2      	bge.n	8010626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80106c0:	4698      	mov	r8, r3
 80106c2:	46a2      	mov	sl, r4
 80106c4:	f1b8 0f00 	cmp.w	r8, #0
 80106c8:	ddb3      	ble.n	8010632 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80106ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80106ce:	9902      	ldr	r1, [sp, #8]
 80106d0:	1416      	asrs	r6, r2, #16
 80106d2:	fb09 1606 	mla	r6, r9, r6, r1
 80106d6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80106da:	492a      	ldr	r1, [pc, #168]	; (8010784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80106dc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80106e0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80106e4:	eb07 0b0e 	add.w	fp, r7, lr
 80106e8:	4460      	add	r0, ip
 80106ea:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80106ee:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80106f2:	00f6      	lsls	r6, r6, #3
 80106f4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80106f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80106fc:	ea49 0606 	orr.w	r6, r9, r6
 8010700:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010704:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010706:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801070a:	f82a 6b02 	strh.w	r6, [sl], #2
 801070e:	440a      	add	r2, r1
 8010710:	f108 38ff 	add.w	r8, r8, #4294967295
 8010714:	e7d6      	b.n	80106c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010716:	ea5f 4920 	movs.w	r9, r0, asr #16
 801071a:	d429      	bmi.n	8010770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801071c:	68ae      	ldr	r6, [r5, #8]
 801071e:	454e      	cmp	r6, r9
 8010720:	dd26      	ble.n	8010770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010722:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010726:	d423      	bmi.n	8010770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010728:	68e9      	ldr	r1, [r5, #12]
 801072a:	4559      	cmp	r1, fp
 801072c:	dd20      	ble.n	8010770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801072e:	9902      	ldr	r1, [sp, #8]
 8010730:	fa0f fe86 	sxth.w	lr, r6
 8010734:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010738:	f06f 0101 	mvn.w	r1, #1
 801073c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010740:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010744:	eb07 060e 	add.w	r6, r7, lr
 8010748:	fb01 f908 	mul.w	r9, r1, r8
 801074c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010750:	7876      	ldrb	r6, [r6, #1]
 8010752:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010756:	00f6      	lsls	r6, r6, #3
 8010758:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801075c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010760:	ea4b 0606 	orr.w	r6, fp, r6
 8010764:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010768:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801076c:	f82a 6009 	strh.w	r6, [sl, r9]
 8010770:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010772:	4460      	add	r0, ip
 8010774:	440a      	add	r2, r1
 8010776:	f108 38ff 	add.w	r8, r8, #4294967295
 801077a:	e757      	b.n	801062c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801077c:	b005      	add	sp, #20
 801077e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010782:	bf00      	nop
 8010784:	fffff800 	.word	0xfffff800

08010788 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801078c:	b087      	sub	sp, #28
 801078e:	468b      	mov	fp, r1
 8010790:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010792:	9204      	str	r2, [sp, #16]
 8010794:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010798:	9205      	str	r2, [sp, #20]
 801079a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801079e:	6841      	ldr	r1, [r0, #4]
 80107a0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80107a4:	fb01 2404 	mla	r4, r1, r4, r2
 80107a8:	6802      	ldr	r2, [r0, #0]
 80107aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80107ae:	f8dc 2000 	ldr.w	r2, [ip]
 80107b2:	9201      	str	r2, [sp, #4]
 80107b4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80107b8:	3204      	adds	r2, #4
 80107ba:	9202      	str	r2, [sp, #8]
 80107bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80107c0:	f1bb 0f00 	cmp.w	fp, #0
 80107c4:	dc03      	bgt.n	80107ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80107c6:	9a04      	ldr	r2, [sp, #16]
 80107c8:	2a00      	cmp	r2, #0
 80107ca:	f340 8138 	ble.w	8010a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80107ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80107d0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80107d4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80107d8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80107dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80107de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80107e2:	2b00      	cmp	r3, #0
 80107e4:	dd0e      	ble.n	8010804 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80107e6:	1402      	asrs	r2, r0, #16
 80107e8:	d405      	bmi.n	80107f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107ea:	42ba      	cmp	r2, r7
 80107ec:	da03      	bge.n	80107f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107ee:	140a      	asrs	r2, r1, #16
 80107f0:	d401      	bmi.n	80107f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107f2:	42b2      	cmp	r2, r6
 80107f4:	db07      	blt.n	8010806 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80107f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80107f8:	4410      	add	r0, r2
 80107fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107fc:	3b01      	subs	r3, #1
 80107fe:	4411      	add	r1, r2
 8010800:	3402      	adds	r4, #2
 8010802:	e7ee      	b.n	80107e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010804:	d019      	beq.n	801083a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010806:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010808:	1e5a      	subs	r2, r3, #1
 801080a:	fb05 0502 	mla	r5, r5, r2, r0
 801080e:	142d      	asrs	r5, r5, #16
 8010810:	d409      	bmi.n	8010826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010812:	42bd      	cmp	r5, r7
 8010814:	da07      	bge.n	8010826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010816:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010818:	fb05 1202 	mla	r2, r5, r2, r1
 801081c:	1412      	asrs	r2, r2, #16
 801081e:	d402      	bmi.n	8010826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010820:	42b2      	cmp	r2, r6
 8010822:	f2c0 80ac 	blt.w	801097e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010826:	f04f 0e00 	mov.w	lr, #0
 801082a:	eb03 020e 	add.w	r2, r3, lr
 801082e:	2a00      	cmp	r2, #0
 8010830:	dc3e      	bgt.n	80108b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010832:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010836:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801083a:	f1bb 0f00 	cmp.w	fp, #0
 801083e:	f340 80fe 	ble.w	8010a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010842:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010846:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801084a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801084e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010850:	f1bb 0b01 	subs.w	fp, fp, #1
 8010854:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010858:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801085c:	eeb0 6a62 	vmov.f32	s12, s5
 8010860:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010864:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010868:	ee77 2a62 	vsub.f32	s5, s14, s5
 801086c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010870:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010874:	eeb0 6a43 	vmov.f32	s12, s6
 8010878:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801087c:	ee12 2a90 	vmov	r2, s5
 8010880:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010884:	fb92 f3f3 	sdiv	r3, r2, r3
 8010888:	ee13 2a10 	vmov	r2, s6
 801088c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010890:	9313      	str	r3, [sp, #76]	; 0x4c
 8010892:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010894:	fb92 f3f3 	sdiv	r3, r2, r3
 8010898:	9a04      	ldr	r2, [sp, #16]
 801089a:	9314      	str	r3, [sp, #80]	; 0x50
 801089c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80108a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108a2:	eeb0 3a67 	vmov.f32	s6, s15
 80108a6:	bf08      	it	eq
 80108a8:	4613      	moveq	r3, r2
 80108aa:	eef0 2a47 	vmov.f32	s5, s14
 80108ae:	e787      	b.n	80107c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80108b0:	1406      	asrs	r6, r0, #16
 80108b2:	d45d      	bmi.n	8010970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108b4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80108b8:	42b5      	cmp	r5, r6
 80108ba:	dd59      	ble.n	8010970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108bc:	140f      	asrs	r7, r1, #16
 80108be:	d457      	bmi.n	8010970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108c0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80108c4:	42ba      	cmp	r2, r7
 80108c6:	dd53      	ble.n	8010970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108c8:	9a01      	ldr	r2, [sp, #4]
 80108ca:	b22d      	sxth	r5, r5
 80108cc:	fb07 2505 	mla	r5, r7, r5, r2
 80108d0:	5daa      	ldrb	r2, [r5, r6]
 80108d2:	9d02      	ldr	r5, [sp, #8]
 80108d4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80108d8:	0e2e      	lsrs	r6, r5, #24
 80108da:	d049      	beq.n	8010970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80108dc:	f06f 0201 	mvn.w	r2, #1
 80108e0:	fb02 f20e 	mul.w	r2, r2, lr
 80108e4:	9203      	str	r2, [sp, #12]
 80108e6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80108ea:	9a05      	ldr	r2, [sp, #20]
 80108ec:	4356      	muls	r6, r2
 80108ee:	1c72      	adds	r2, r6, #1
 80108f0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80108f4:	1212      	asrs	r2, r2, #8
 80108f6:	fa1f f982 	uxth.w	r9, r2
 80108fa:	ea4f 2728 	mov.w	r7, r8, asr #8
 80108fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010902:	43d2      	mvns	r2, r2
 8010904:	b2d2      	uxtb	r2, r2
 8010906:	fb16 f609 	smulbb	r6, r6, r9
 801090a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801090e:	fb07 6702 	mla	r7, r7, r2, r6
 8010912:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010916:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801091a:	b2ed      	uxtb	r5, r5
 801091c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010920:	fa5f f888 	uxtb.w	r8, r8
 8010924:	fb15 f509 	smulbb	r5, r5, r9
 8010928:	fb08 5502 	mla	r5, r8, r2, r5
 801092c:	b2bf      	uxth	r7, r7
 801092e:	fb1a fa09 	smulbb	sl, sl, r9
 8010932:	b2ad      	uxth	r5, r5
 8010934:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010938:	fb06 a602 	mla	r6, r6, r2, sl
 801093c:	1c7a      	adds	r2, r7, #1
 801093e:	f105 0a01 	add.w	sl, r5, #1
 8010942:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010946:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801094a:	b2b6      	uxth	r6, r6
 801094c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010950:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010954:	ea4a 0707 	orr.w	r7, sl, r7
 8010958:	f106 0a01 	add.w	sl, r6, #1
 801095c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010960:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010964:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010968:	9a03      	ldr	r2, [sp, #12]
 801096a:	ea47 070a 	orr.w	r7, r7, sl
 801096e:	52a7      	strh	r7, [r4, r2]
 8010970:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010972:	4410      	add	r0, r2
 8010974:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010976:	f10e 3eff 	add.w	lr, lr, #4294967295
 801097a:	4411      	add	r1, r2
 801097c:	e755      	b.n	801082a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801097e:	f04f 0800 	mov.w	r8, #0
 8010982:	eba3 0208 	sub.w	r2, r3, r8
 8010986:	2a00      	cmp	r2, #0
 8010988:	f77f af53 	ble.w	8010832 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801098c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010990:	9f01      	ldr	r7, [sp, #4]
 8010992:	140a      	asrs	r2, r1, #16
 8010994:	1405      	asrs	r5, r0, #16
 8010996:	fb06 7202 	mla	r2, r6, r2, r7
 801099a:	5d52      	ldrb	r2, [r2, r5]
 801099c:	9d02      	ldr	r5, [sp, #8]
 801099e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80109a2:	0e2e      	lsrs	r6, r5, #24
 80109a4:	d044      	beq.n	8010a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80109a6:	9a05      	ldr	r2, [sp, #20]
 80109a8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80109ac:	4356      	muls	r6, r2
 80109ae:	1c72      	adds	r2, r6, #1
 80109b0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80109b4:	1212      	asrs	r2, r2, #8
 80109b6:	fa1f f982 	uxth.w	r9, r2
 80109ba:	ea4f 272e 	mov.w	r7, lr, asr #8
 80109be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80109c2:	43d2      	mvns	r2, r2
 80109c4:	b2d2      	uxtb	r2, r2
 80109c6:	fb16 f609 	smulbb	r6, r6, r9
 80109ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80109ce:	fb07 6702 	mla	r7, r7, r2, r6
 80109d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80109d6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80109da:	b2ed      	uxtb	r5, r5
 80109dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80109e0:	fa5f fe8e 	uxtb.w	lr, lr
 80109e4:	fb15 f509 	smulbb	r5, r5, r9
 80109e8:	fb0e 5502 	mla	r5, lr, r2, r5
 80109ec:	b2bf      	uxth	r7, r7
 80109ee:	fb1a fa09 	smulbb	sl, sl, r9
 80109f2:	b2ad      	uxth	r5, r5
 80109f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80109f8:	fb06 a602 	mla	r6, r6, r2, sl
 80109fc:	1c7a      	adds	r2, r7, #1
 80109fe:	f105 0a01 	add.w	sl, r5, #1
 8010a02:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010a06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010a0a:	b2b6      	uxth	r6, r6
 8010a0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010a14:	ea4a 0707 	orr.w	r7, sl, r7
 8010a18:	f106 0a01 	add.w	sl, r6, #1
 8010a1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010a20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a28:	ea47 070a 	orr.w	r7, r7, sl
 8010a2c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010a30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a32:	4410      	add	r0, r2
 8010a34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a36:	f108 0801 	add.w	r8, r8, #1
 8010a3a:	4411      	add	r1, r2
 8010a3c:	e7a1      	b.n	8010982 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010a3e:	b007      	add	sp, #28
 8010a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a48:	b085      	sub	sp, #20
 8010a4a:	468b      	mov	fp, r1
 8010a4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a4e:	9203      	str	r2, [sp, #12]
 8010a50:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010a54:	6841      	ldr	r1, [r0, #4]
 8010a56:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010a5a:	fb01 2404 	mla	r4, r1, r4, r2
 8010a5e:	6802      	ldr	r2, [r0, #0]
 8010a60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a64:	f8de 2000 	ldr.w	r2, [lr]
 8010a68:	9200      	str	r2, [sp, #0]
 8010a6a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010a6e:	3204      	adds	r2, #4
 8010a70:	9201      	str	r2, [sp, #4]
 8010a72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010a76:	f1bb 0f00 	cmp.w	fp, #0
 8010a7a:	dc03      	bgt.n	8010a84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010a7c:	9a03      	ldr	r2, [sp, #12]
 8010a7e:	2a00      	cmp	r2, #0
 8010a80:	f340 8153 	ble.w	8010d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010a84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010a86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010a8a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010a8e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a94:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010a98:	2b00      	cmp	r3, #0
 8010a9a:	dd0e      	ble.n	8010aba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010a9c:	1408      	asrs	r0, r1, #16
 8010a9e:	d405      	bmi.n	8010aac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010aa0:	42b8      	cmp	r0, r7
 8010aa2:	da03      	bge.n	8010aac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010aa4:	1410      	asrs	r0, r2, #16
 8010aa6:	d401      	bmi.n	8010aac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010aa8:	42b0      	cmp	r0, r6
 8010aaa:	db07      	blt.n	8010abc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010aac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010aae:	4401      	add	r1, r0
 8010ab0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010ab2:	3b01      	subs	r3, #1
 8010ab4:	4402      	add	r2, r0
 8010ab6:	3402      	adds	r4, #2
 8010ab8:	e7ee      	b.n	8010a98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010aba:	d017      	beq.n	8010aec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010abc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010abe:	1e58      	subs	r0, r3, #1
 8010ac0:	fb05 1500 	mla	r5, r5, r0, r1
 8010ac4:	142d      	asrs	r5, r5, #16
 8010ac6:	d409      	bmi.n	8010adc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010ac8:	42bd      	cmp	r5, r7
 8010aca:	da07      	bge.n	8010adc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010acc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010ace:	fb05 2000 	mla	r0, r5, r0, r2
 8010ad2:	1400      	asrs	r0, r0, #16
 8010ad4:	d402      	bmi.n	8010adc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010ad6:	42b0      	cmp	r0, r6
 8010ad8:	f2c0 80bc 	blt.w	8010c54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010adc:	2600      	movs	r6, #0
 8010ade:	1998      	adds	r0, r3, r6
 8010ae0:	2800      	cmp	r0, #0
 8010ae2:	dc3e      	bgt.n	8010b62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010ae4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010ae8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010aec:	f1bb 0f00 	cmp.w	fp, #0
 8010af0:	f340 811b 	ble.w	8010d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010af4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010af8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010afc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b02:	f1bb 0b01 	subs.w	fp, fp, #1
 8010b06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b0e:	eeb0 6a62 	vmov.f32	s12, s5
 8010b12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b1e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010b22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b26:	eeb0 6a43 	vmov.f32	s12, s6
 8010b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b2e:	ee12 2a90 	vmov	r2, s5
 8010b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b36:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b3a:	ee13 2a10 	vmov	r2, s6
 8010b3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b42:	9311      	str	r3, [sp, #68]	; 0x44
 8010b44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b46:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b4a:	9a03      	ldr	r2, [sp, #12]
 8010b4c:	9312      	str	r3, [sp, #72]	; 0x48
 8010b4e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010b52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b54:	eeb0 3a67 	vmov.f32	s6, s15
 8010b58:	bf08      	it	eq
 8010b5a:	4613      	moveq	r3, r2
 8010b5c:	eef0 2a47 	vmov.f32	s5, s14
 8010b60:	e789      	b.n	8010a76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010b62:	140f      	asrs	r7, r1, #16
 8010b64:	d426      	bmi.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b66:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010b6a:	42bd      	cmp	r5, r7
 8010b6c:	dd22      	ble.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b6e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010b72:	d41f      	bmi.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b74:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010b78:	4560      	cmp	r0, ip
 8010b7a:	dd1b      	ble.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b7c:	9800      	ldr	r0, [sp, #0]
 8010b7e:	b22d      	sxth	r5, r5
 8010b80:	fb0c 0505 	mla	r5, ip, r5, r0
 8010b84:	5de8      	ldrb	r0, [r5, r7]
 8010b86:	9d01      	ldr	r5, [sp, #4]
 8010b88:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010b8c:	0e07      	lsrs	r7, r0, #24
 8010b8e:	2fff      	cmp	r7, #255	; 0xff
 8010b90:	d116      	bne.n	8010bc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010b92:	f06f 0501 	mvn.w	r5, #1
 8010b96:	fb05 f706 	mul.w	r7, r5, r6
 8010b9a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010b9e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010ba2:	0945      	lsrs	r5, r0, #5
 8010ba4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010ba8:	ea4c 0505 	orr.w	r5, ip, r5
 8010bac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010bb0:	4305      	orrs	r5, r0
 8010bb2:	53e5      	strh	r5, [r4, r7]
 8010bb4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010bb6:	4401      	add	r1, r0
 8010bb8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010bba:	3e01      	subs	r6, #1
 8010bbc:	4402      	add	r2, r0
 8010bbe:	e78e      	b.n	8010ade <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010bc0:	b2fd      	uxtb	r5, r7
 8010bc2:	2f00      	cmp	r7, #0
 8010bc4:	d0f6      	beq.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bc6:	f06f 0701 	mvn.w	r7, #1
 8010bca:	4377      	muls	r7, r6
 8010bcc:	fa1f f985 	uxth.w	r9, r5
 8010bd0:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010bd4:	9702      	str	r7, [sp, #8]
 8010bd6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010bda:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010bde:	43ed      	mvns	r5, r5
 8010be0:	b2ed      	uxtb	r5, r5
 8010be2:	fb17 f709 	smulbb	r7, r7, r9
 8010be6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010bea:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010bee:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010bf2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010bf6:	b2c0      	uxtb	r0, r0
 8010bf8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010bfc:	fa5f f888 	uxtb.w	r8, r8
 8010c00:	fb10 f009 	smulbb	r0, r0, r9
 8010c04:	fb08 0005 	mla	r0, r8, r5, r0
 8010c08:	b280      	uxth	r0, r0
 8010c0a:	fa1f fc8c 	uxth.w	ip, ip
 8010c0e:	fb1a fa09 	smulbb	sl, sl, r9
 8010c12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010c16:	fb07 a705 	mla	r7, r7, r5, sl
 8010c1a:	f100 0a01 	add.w	sl, r0, #1
 8010c1e:	f10c 0501 	add.w	r5, ip, #1
 8010c22:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010c26:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010c2a:	b2bf      	uxth	r7, r7
 8010c2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c30:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c34:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010c38:	f107 0a01 	add.w	sl, r7, #1
 8010c3c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010c40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c48:	9802      	ldr	r0, [sp, #8]
 8010c4a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010c4e:	f824 c000 	strh.w	ip, [r4, r0]
 8010c52:	e7af      	b.n	8010bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010c54:	f04f 0800 	mov.w	r8, #0
 8010c58:	eba3 0008 	sub.w	r0, r3, r8
 8010c5c:	2800      	cmp	r0, #0
 8010c5e:	f77f af41 	ble.w	8010ae4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010c62:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010c66:	9f00      	ldr	r7, [sp, #0]
 8010c68:	1410      	asrs	r0, r2, #16
 8010c6a:	140d      	asrs	r5, r1, #16
 8010c6c:	fb06 7000 	mla	r0, r6, r0, r7
 8010c70:	5d40      	ldrb	r0, [r0, r5]
 8010c72:	9d01      	ldr	r5, [sp, #4]
 8010c74:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010c78:	0e2e      	lsrs	r6, r5, #24
 8010c7a:	2eff      	cmp	r6, #255	; 0xff
 8010c7c:	d112      	bne.n	8010ca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010c7e:	482c      	ldr	r0, [pc, #176]	; (8010d30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010c80:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010c84:	0968      	lsrs	r0, r5, #5
 8010c86:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010c8a:	4330      	orrs	r0, r6
 8010c8c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010c90:	4328      	orrs	r0, r5
 8010c92:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010c96:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010c98:	4401      	add	r1, r0
 8010c9a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010c9c:	f108 0801 	add.w	r8, r8, #1
 8010ca0:	4402      	add	r2, r0
 8010ca2:	e7d9      	b.n	8010c58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010ca4:	b2f0      	uxtb	r0, r6
 8010ca6:	2e00      	cmp	r6, #0
 8010ca8:	d0f5      	beq.n	8010c96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010caa:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010cae:	fa1f f980 	uxth.w	r9, r0
 8010cb2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010cb6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010cba:	43c0      	mvns	r0, r0
 8010cbc:	b2c0      	uxtb	r0, r0
 8010cbe:	fb16 f609 	smulbb	r6, r6, r9
 8010cc2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010cc6:	fb07 6700 	mla	r7, r7, r0, r6
 8010cca:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010cce:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010cd2:	b2ed      	uxtb	r5, r5
 8010cd4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010cd8:	fa5f fc8c 	uxtb.w	ip, ip
 8010cdc:	fb15 f509 	smulbb	r5, r5, r9
 8010ce0:	fb0c 5500 	mla	r5, ip, r0, r5
 8010ce4:	b2bf      	uxth	r7, r7
 8010ce6:	fb1a fa09 	smulbb	sl, sl, r9
 8010cea:	b2ad      	uxth	r5, r5
 8010cec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010cf0:	fb06 a600 	mla	r6, r6, r0, sl
 8010cf4:	1c78      	adds	r0, r7, #1
 8010cf6:	f105 0a01 	add.w	sl, r5, #1
 8010cfa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010cfe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d02:	b2b6      	uxth	r6, r6
 8010d04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d0c:	ea4a 0707 	orr.w	r7, sl, r7
 8010d10:	f106 0a01 	add.w	sl, r6, #1
 8010d14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010d20:	ea47 070a 	orr.w	r7, r7, sl
 8010d24:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010d28:	e7b5      	b.n	8010c96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010d2a:	b005      	add	sp, #20
 8010d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d30:	fffff800 	.word	0xfffff800

08010d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d38:	b087      	sub	sp, #28
 8010d3a:	468b      	mov	fp, r1
 8010d3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010d3e:	9204      	str	r2, [sp, #16]
 8010d40:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d44:	9205      	str	r2, [sp, #20]
 8010d46:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010d4a:	6861      	ldr	r1, [r4, #4]
 8010d4c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010d50:	fb01 2000 	mla	r0, r1, r0, r2
 8010d54:	6822      	ldr	r2, [r4, #0]
 8010d56:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010d5a:	f8de 2000 	ldr.w	r2, [lr]
 8010d5e:	9201      	str	r2, [sp, #4]
 8010d60:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010d64:	9202      	str	r2, [sp, #8]
 8010d66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d6a:	f1bb 0f00 	cmp.w	fp, #0
 8010d6e:	dc03      	bgt.n	8010d78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010d70:	9a04      	ldr	r2, [sp, #16]
 8010d72:	2a00      	cmp	r2, #0
 8010d74:	f340 8142 	ble.w	8010ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010d78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d7a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010d7e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010d82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d86:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d8c:	2b00      	cmp	r3, #0
 8010d8e:	dd0e      	ble.n	8010dae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010d90:	140c      	asrs	r4, r1, #16
 8010d92:	d405      	bmi.n	8010da0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d94:	42bc      	cmp	r4, r7
 8010d96:	da03      	bge.n	8010da0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d98:	1414      	asrs	r4, r2, #16
 8010d9a:	d401      	bmi.n	8010da0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d9c:	42b4      	cmp	r4, r6
 8010d9e:	db07      	blt.n	8010db0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010da0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010da2:	4421      	add	r1, r4
 8010da4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010da6:	3b01      	subs	r3, #1
 8010da8:	4422      	add	r2, r4
 8010daa:	3002      	adds	r0, #2
 8010dac:	e7ee      	b.n	8010d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010dae:	d019      	beq.n	8010de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010db0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010db2:	1e5c      	subs	r4, r3, #1
 8010db4:	fb05 1504 	mla	r5, r5, r4, r1
 8010db8:	142d      	asrs	r5, r5, #16
 8010dba:	d409      	bmi.n	8010dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010dbc:	42bd      	cmp	r5, r7
 8010dbe:	da07      	bge.n	8010dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010dc0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010dc2:	fb05 2404 	mla	r4, r5, r4, r2
 8010dc6:	1424      	asrs	r4, r4, #16
 8010dc8:	d402      	bmi.n	8010dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010dca:	42b4      	cmp	r4, r6
 8010dcc:	f2c0 80b1 	blt.w	8010f32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010dd0:	f04f 0800 	mov.w	r8, #0
 8010dd4:	eb03 0408 	add.w	r4, r3, r8
 8010dd8:	2c00      	cmp	r4, #0
 8010dda:	dc3e      	bgt.n	8010e5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010ddc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010de0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010de4:	f1bb 0f00 	cmp.w	fp, #0
 8010de8:	f340 8108 	ble.w	8010ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010dec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010df0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010df4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010df8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dfa:	f1bb 0b01 	subs.w	fp, fp, #1
 8010dfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e06:	eeb0 6a62 	vmov.f32	s12, s5
 8010e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e16:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e1e:	eeb0 6a43 	vmov.f32	s12, s6
 8010e22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e26:	ee12 2a90 	vmov	r2, s5
 8010e2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e32:	ee13 2a10 	vmov	r2, s6
 8010e36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e3a:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e42:	9a04      	ldr	r2, [sp, #16]
 8010e44:	9314      	str	r3, [sp, #80]	; 0x50
 8010e46:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e4c:	eeb0 3a67 	vmov.f32	s6, s15
 8010e50:	bf08      	it	eq
 8010e52:	4613      	moveq	r3, r2
 8010e54:	eef0 2a47 	vmov.f32	s5, s14
 8010e58:	e787      	b.n	8010d6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010e5a:	140e      	asrs	r6, r1, #16
 8010e5c:	d462      	bmi.n	8010f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e5e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010e62:	42b5      	cmp	r5, r6
 8010e64:	dd5e      	ble.n	8010f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e66:	1417      	asrs	r7, r2, #16
 8010e68:	d45c      	bmi.n	8010f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e6a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010e6e:	42bc      	cmp	r4, r7
 8010e70:	dd58      	ble.n	8010f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e72:	b22d      	sxth	r5, r5
 8010e74:	fb07 6505 	mla	r5, r7, r5, r6
 8010e78:	9c02      	ldr	r4, [sp, #8]
 8010e7a:	5d66      	ldrb	r6, [r4, r5]
 8010e7c:	2e00      	cmp	r6, #0
 8010e7e:	d051      	beq.n	8010f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e80:	9c01      	ldr	r4, [sp, #4]
 8010e82:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010e86:	f06f 0401 	mvn.w	r4, #1
 8010e8a:	fb04 f408 	mul.w	r4, r4, r8
 8010e8e:	9403      	str	r4, [sp, #12]
 8010e90:	5b05      	ldrh	r5, [r0, r4]
 8010e92:	9c05      	ldr	r4, [sp, #20]
 8010e94:	4366      	muls	r6, r4
 8010e96:	1c74      	adds	r4, r6, #1
 8010e98:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010e9c:	1224      	asrs	r4, r4, #8
 8010e9e:	b2a7      	uxth	r7, r4
 8010ea0:	122e      	asrs	r6, r5, #8
 8010ea2:	43e4      	mvns	r4, r4
 8010ea4:	b2e4      	uxtb	r4, r4
 8010ea6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010eaa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010eae:	fb16 f604 	smulbb	r6, r6, r4
 8010eb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010eb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010eba:	00ed      	lsls	r5, r5, #3
 8010ebc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010ec0:	b2ed      	uxtb	r5, r5
 8010ec2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010ec6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010eca:	fb15 f504 	smulbb	r5, r5, r4
 8010ece:	fa5f f989 	uxtb.w	r9, r9
 8010ed2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010ed6:	fb09 5507 	mla	r5, r9, r7, r5
 8010eda:	fb1a fa04 	smulbb	sl, sl, r4
 8010ede:	fa1f fc8c 	uxth.w	ip, ip
 8010ee2:	b2ad      	uxth	r5, r5
 8010ee4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ee8:	fb06 a607 	mla	r6, r6, r7, sl
 8010eec:	f10c 0401 	add.w	r4, ip, #1
 8010ef0:	f105 0a01 	add.w	sl, r5, #1
 8010ef4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010ef8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010efc:	b2b6      	uxth	r6, r6
 8010efe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f06:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010f0a:	f106 0a01 	add.w	sl, r6, #1
 8010f0e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f12:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f16:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f1a:	9c03      	ldr	r4, [sp, #12]
 8010f1c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010f20:	f820 c004 	strh.w	ip, [r0, r4]
 8010f24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f26:	4421      	add	r1, r4
 8010f28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f2a:	f108 38ff 	add.w	r8, r8, #4294967295
 8010f2e:	4422      	add	r2, r4
 8010f30:	e750      	b.n	8010dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010f32:	f04f 0900 	mov.w	r9, #0
 8010f36:	eba3 0409 	sub.w	r4, r3, r9
 8010f3a:	2c00      	cmp	r4, #0
 8010f3c:	f77f af4e 	ble.w	8010ddc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010f40:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010f44:	140d      	asrs	r5, r1, #16
 8010f46:	1414      	asrs	r4, r2, #16
 8010f48:	fb06 5404 	mla	r4, r6, r4, r5
 8010f4c:	9d02      	ldr	r5, [sp, #8]
 8010f4e:	5d2e      	ldrb	r6, [r5, r4]
 8010f50:	2e00      	cmp	r6, #0
 8010f52:	d04c      	beq.n	8010fee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010f54:	9d01      	ldr	r5, [sp, #4]
 8010f56:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010f5a:	9c05      	ldr	r4, [sp, #20]
 8010f5c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010f60:	4366      	muls	r6, r4
 8010f62:	1c74      	adds	r4, r6, #1
 8010f64:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010f68:	1224      	asrs	r4, r4, #8
 8010f6a:	b2a7      	uxth	r7, r4
 8010f6c:	122e      	asrs	r6, r5, #8
 8010f6e:	43e4      	mvns	r4, r4
 8010f70:	b2e4      	uxtb	r4, r4
 8010f72:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010f76:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f7a:	fb16 f604 	smulbb	r6, r6, r4
 8010f7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f86:	00ed      	lsls	r5, r5, #3
 8010f88:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f8c:	b2ed      	uxtb	r5, r5
 8010f8e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010f92:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010f96:	fb15 f504 	smulbb	r5, r5, r4
 8010f9a:	fa5f f888 	uxtb.w	r8, r8
 8010f9e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010fa2:	fb08 5507 	mla	r5, r8, r7, r5
 8010fa6:	fb1a fa04 	smulbb	sl, sl, r4
 8010faa:	fa1f fc8c 	uxth.w	ip, ip
 8010fae:	b2ad      	uxth	r5, r5
 8010fb0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010fb4:	fb06 a607 	mla	r6, r6, r7, sl
 8010fb8:	f10c 0401 	add.w	r4, ip, #1
 8010fbc:	f105 0a01 	add.w	sl, r5, #1
 8010fc0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010fc4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010fc8:	b2b6      	uxth	r6, r6
 8010fca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010fd2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010fd6:	f106 0a01 	add.w	sl, r6, #1
 8010fda:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010fde:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fe2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fe6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010fea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010fee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010ff0:	4421      	add	r1, r4
 8010ff2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010ff4:	f109 0901 	add.w	r9, r9, #1
 8010ff8:	4422      	add	r2, r4
 8010ffa:	e79c      	b.n	8010f36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010ffc:	b007      	add	sp, #28
 8010ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011002 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011006:	b085      	sub	sp, #20
 8011008:	468b      	mov	fp, r1
 801100a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801100c:	9203      	str	r2, [sp, #12]
 801100e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011012:	6861      	ldr	r1, [r4, #4]
 8011014:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011018:	fb01 2000 	mla	r0, r1, r0, r2
 801101c:	6822      	ldr	r2, [r4, #0]
 801101e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011022:	f8d8 2000 	ldr.w	r2, [r8]
 8011026:	9200      	str	r2, [sp, #0]
 8011028:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801102c:	9201      	str	r2, [sp, #4]
 801102e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011032:	f1bb 0f00 	cmp.w	fp, #0
 8011036:	dc03      	bgt.n	8011040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011038:	9a03      	ldr	r2, [sp, #12]
 801103a:	2a00      	cmp	r2, #0
 801103c:	f340 8146 	ble.w	80112cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011040:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011042:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011046:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801104a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801104e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011050:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011054:	2b00      	cmp	r3, #0
 8011056:	dd0e      	ble.n	8011076 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011058:	140c      	asrs	r4, r1, #16
 801105a:	d405      	bmi.n	8011068 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801105c:	42bc      	cmp	r4, r7
 801105e:	da03      	bge.n	8011068 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011060:	1414      	asrs	r4, r2, #16
 8011062:	d401      	bmi.n	8011068 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011064:	42b4      	cmp	r4, r6
 8011066:	db07      	blt.n	8011078 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011068:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801106a:	4421      	add	r1, r4
 801106c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801106e:	3b01      	subs	r3, #1
 8011070:	4422      	add	r2, r4
 8011072:	3002      	adds	r0, #2
 8011074:	e7ee      	b.n	8011054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011076:	d017      	beq.n	80110a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011078:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801107a:	1e5c      	subs	r4, r3, #1
 801107c:	fb05 1504 	mla	r5, r5, r4, r1
 8011080:	142d      	asrs	r5, r5, #16
 8011082:	d409      	bmi.n	8011098 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011084:	42bd      	cmp	r5, r7
 8011086:	da07      	bge.n	8011098 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011088:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801108a:	fb05 2404 	mla	r4, r5, r4, r2
 801108e:	1424      	asrs	r4, r4, #16
 8011090:	d402      	bmi.n	8011098 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011092:	42b4      	cmp	r4, r6
 8011094:	f2c0 80b3 	blt.w	80111fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011098:	2600      	movs	r6, #0
 801109a:	199c      	adds	r4, r3, r6
 801109c:	2c00      	cmp	r4, #0
 801109e:	dc3e      	bgt.n	801111e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80110a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80110a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80110a8:	f1bb 0f00 	cmp.w	fp, #0
 80110ac:	f340 810e 	ble.w	80112cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80110b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80110b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80110b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80110bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110be:	f1bb 0b01 	subs.w	fp, fp, #1
 80110c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80110c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80110ca:	eeb0 6a62 	vmov.f32	s12, s5
 80110ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110da:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80110de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110e2:	eeb0 6a43 	vmov.f32	s12, s6
 80110e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110ea:	ee12 2a90 	vmov	r2, s5
 80110ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80110f6:	ee13 2a10 	vmov	r2, s6
 80110fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110fe:	9311      	str	r3, [sp, #68]	; 0x44
 8011100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011102:	fb92 f3f3 	sdiv	r3, r2, r3
 8011106:	9a03      	ldr	r2, [sp, #12]
 8011108:	9312      	str	r3, [sp, #72]	; 0x48
 801110a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801110e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011110:	eeb0 3a67 	vmov.f32	s6, s15
 8011114:	bf08      	it	eq
 8011116:	4613      	moveq	r3, r2
 8011118:	eef0 2a47 	vmov.f32	s5, s14
 801111c:	e789      	b.n	8011032 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801111e:	140f      	asrs	r7, r1, #16
 8011120:	d418      	bmi.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011122:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011126:	42bd      	cmp	r5, r7
 8011128:	dd14      	ble.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801112a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801112e:	d411      	bmi.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011130:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011134:	4564      	cmp	r4, ip
 8011136:	dd0d      	ble.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011138:	b22d      	sxth	r5, r5
 801113a:	fb0c 7505 	mla	r5, ip, r5, r7
 801113e:	9c01      	ldr	r4, [sp, #4]
 8011140:	5d64      	ldrb	r4, [r4, r5]
 8011142:	2cff      	cmp	r4, #255	; 0xff
 8011144:	d10c      	bne.n	8011160 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011146:	9c00      	ldr	r4, [sp, #0]
 8011148:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801114c:	f06f 0401 	mvn.w	r4, #1
 8011150:	4374      	muls	r4, r6
 8011152:	5305      	strh	r5, [r0, r4]
 8011154:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011156:	4421      	add	r1, r4
 8011158:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801115a:	3e01      	subs	r6, #1
 801115c:	4422      	add	r2, r4
 801115e:	e79c      	b.n	801109a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011160:	2c00      	cmp	r4, #0
 8011162:	d0f7      	beq.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011164:	9f00      	ldr	r7, [sp, #0]
 8011166:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801116a:	f06f 0501 	mvn.w	r5, #1
 801116e:	4375      	muls	r5, r6
 8011170:	9502      	str	r5, [sp, #8]
 8011172:	5b45      	ldrh	r5, [r0, r5]
 8011174:	fa1f fc84 	uxth.w	ip, r4
 8011178:	122f      	asrs	r7, r5, #8
 801117a:	43e4      	mvns	r4, r4
 801117c:	b2e4      	uxtb	r4, r4
 801117e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8011182:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011186:	fb17 f704 	smulbb	r7, r7, r4
 801118a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801118e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011192:	00ed      	lsls	r5, r5, #3
 8011194:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011198:	b2ed      	uxtb	r5, r5
 801119a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801119e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80111a2:	fb15 f504 	smulbb	r5, r5, r4
 80111a6:	fa5f f989 	uxtb.w	r9, r9
 80111aa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80111ae:	fb09 550c 	mla	r5, r9, ip, r5
 80111b2:	fb1a fa04 	smulbb	sl, sl, r4
 80111b6:	fa1f fe8e 	uxth.w	lr, lr
 80111ba:	b2ad      	uxth	r5, r5
 80111bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80111c0:	fb07 a70c 	mla	r7, r7, ip, sl
 80111c4:	f10e 0401 	add.w	r4, lr, #1
 80111c8:	f105 0a01 	add.w	sl, r5, #1
 80111cc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80111d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80111d4:	b2bf      	uxth	r7, r7
 80111d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111da:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80111de:	ea4a 0e0e 	orr.w	lr, sl, lr
 80111e2:	f107 0a01 	add.w	sl, r7, #1
 80111e6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80111ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80111ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80111f2:	9c02      	ldr	r4, [sp, #8]
 80111f4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80111f8:	f820 e004 	strh.w	lr, [r0, r4]
 80111fc:	e7aa      	b.n	8011154 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80111fe:	f04f 0900 	mov.w	r9, #0
 8011202:	eba3 0409 	sub.w	r4, r3, r9
 8011206:	2c00      	cmp	r4, #0
 8011208:	f77f af4a 	ble.w	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801120c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011210:	1414      	asrs	r4, r2, #16
 8011212:	140d      	asrs	r5, r1, #16
 8011214:	fb06 5504 	mla	r5, r6, r4, r5
 8011218:	9c01      	ldr	r4, [sp, #4]
 801121a:	5d64      	ldrb	r4, [r4, r5]
 801121c:	2cff      	cmp	r4, #255	; 0xff
 801121e:	d10b      	bne.n	8011238 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8011220:	9c00      	ldr	r4, [sp, #0]
 8011222:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011226:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801122a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801122c:	4421      	add	r1, r4
 801122e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011230:	f109 0901 	add.w	r9, r9, #1
 8011234:	4422      	add	r2, r4
 8011236:	e7e4      	b.n	8011202 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011238:	2c00      	cmp	r4, #0
 801123a:	d0f6      	beq.n	801122a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801123c:	9e00      	ldr	r6, [sp, #0]
 801123e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8011242:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011246:	b2a7      	uxth	r7, r4
 8011248:	122e      	asrs	r6, r5, #8
 801124a:	43e4      	mvns	r4, r4
 801124c:	b2e4      	uxtb	r4, r4
 801124e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011252:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011256:	fb16 f604 	smulbb	r6, r6, r4
 801125a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801125e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011262:	00ed      	lsls	r5, r5, #3
 8011264:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011268:	b2ed      	uxtb	r5, r5
 801126a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801126e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011272:	fb15 f504 	smulbb	r5, r5, r4
 8011276:	fa5f fe8e 	uxtb.w	lr, lr
 801127a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801127e:	fb0e 5507 	mla	r5, lr, r7, r5
 8011282:	fb1a fa04 	smulbb	sl, sl, r4
 8011286:	fa1f fc8c 	uxth.w	ip, ip
 801128a:	b2ad      	uxth	r5, r5
 801128c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011290:	fb06 a607 	mla	r6, r6, r7, sl
 8011294:	f10c 0401 	add.w	r4, ip, #1
 8011298:	f105 0a01 	add.w	sl, r5, #1
 801129c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80112a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80112a4:	b2b6      	uxth	r6, r6
 80112a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80112ae:	ea4a 0c0c 	orr.w	ip, sl, ip
 80112b2:	f106 0a01 	add.w	sl, r6, #1
 80112b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80112ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80112be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80112c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80112c6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80112ca:	e7ae      	b.n	801122a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80112cc:	b005      	add	sp, #20
 80112ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080112d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80112d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112d6:	b085      	sub	sp, #20
 80112d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80112da:	9203      	str	r2, [sp, #12]
 80112dc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80112e0:	9201      	str	r2, [sp, #4]
 80112e2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80112e6:	9100      	str	r1, [sp, #0]
 80112e8:	6841      	ldr	r1, [r0, #4]
 80112ea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80112ee:	fb01 2404 	mla	r4, r1, r4, r2
 80112f2:	6802      	ldr	r2, [r0, #0]
 80112f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80112f8:	f8de 2000 	ldr.w	r2, [lr]
 80112fc:	9202      	str	r2, [sp, #8]
 80112fe:	9a01      	ldr	r2, [sp, #4]
 8011300:	43d6      	mvns	r6, r2
 8011302:	b2f6      	uxtb	r6, r6
 8011304:	9a00      	ldr	r2, [sp, #0]
 8011306:	2a00      	cmp	r2, #0
 8011308:	dc03      	bgt.n	8011312 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801130a:	9a03      	ldr	r2, [sp, #12]
 801130c:	2a00      	cmp	r2, #0
 801130e:	f340 8124 	ble.w	801155a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011312:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011314:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011318:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801131c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011320:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011322:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011326:	2b00      	cmp	r3, #0
 8011328:	dd0e      	ble.n	8011348 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801132a:	1408      	asrs	r0, r1, #16
 801132c:	d405      	bmi.n	801133a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801132e:	4560      	cmp	r0, ip
 8011330:	da03      	bge.n	801133a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011332:	1410      	asrs	r0, r2, #16
 8011334:	d401      	bmi.n	801133a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011336:	42b8      	cmp	r0, r7
 8011338:	db07      	blt.n	801134a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801133a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801133c:	4401      	add	r1, r0
 801133e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011340:	3b01      	subs	r3, #1
 8011342:	4402      	add	r2, r0
 8011344:	3402      	adds	r4, #2
 8011346:	e7ee      	b.n	8011326 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011348:	d06e      	beq.n	8011428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801134a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801134c:	1e58      	subs	r0, r3, #1
 801134e:	fb05 1500 	mla	r5, r5, r0, r1
 8011352:	142d      	asrs	r5, r5, #16
 8011354:	d45c      	bmi.n	8011410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011356:	4565      	cmp	r5, ip
 8011358:	da5a      	bge.n	8011410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801135a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801135c:	fb05 2000 	mla	r0, r5, r0, r2
 8011360:	1400      	asrs	r0, r0, #16
 8011362:	d455      	bmi.n	8011410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011364:	42b8      	cmp	r0, r7
 8011366:	da53      	bge.n	8011410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011368:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801136c:	4699      	mov	r9, r3
 801136e:	46a2      	mov	sl, r4
 8011370:	f1b9 0f00 	cmp.w	r9, #0
 8011374:	dd54      	ble.n	8011420 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011376:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801137a:	140d      	asrs	r5, r1, #16
 801137c:	1410      	asrs	r0, r2, #16
 801137e:	fb07 5000 	mla	r0, r7, r0, r5
 8011382:	9d02      	ldr	r5, [sp, #8]
 8011384:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011388:	f8ba 5000 	ldrh.w	r5, [sl]
 801138c:	122f      	asrs	r7, r5, #8
 801138e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011392:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011396:	fb17 f706 	smulbb	r7, r7, r6
 801139a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801139e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80113a2:	00ed      	lsls	r5, r5, #3
 80113a4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80113a8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80113ac:	10c7      	asrs	r7, r0, #3
 80113ae:	b2ed      	uxtb	r5, r5
 80113b0:	00c0      	lsls	r0, r0, #3
 80113b2:	fb18 f806 	smulbb	r8, r8, r6
 80113b6:	fb15 f506 	smulbb	r5, r5, r6
 80113ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80113be:	b2c0      	uxtb	r0, r0
 80113c0:	fa1f fc8c 	uxth.w	ip, ip
 80113c4:	fb07 870b 	mla	r7, r7, fp, r8
 80113c8:	fb00 500b 	mla	r0, r0, fp, r5
 80113cc:	b280      	uxth	r0, r0
 80113ce:	b2bf      	uxth	r7, r7
 80113d0:	f10c 0501 	add.w	r5, ip, #1
 80113d4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80113d8:	f107 0801 	add.w	r8, r7, #1
 80113dc:	1c45      	adds	r5, r0, #1
 80113de:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80113e2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80113e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80113e8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80113ec:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80113f0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80113f4:	ea45 0c0c 	orr.w	ip, r5, ip
 80113f8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80113fc:	4401      	add	r1, r0
 80113fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011400:	ea4c 0c08 	orr.w	ip, ip, r8
 8011404:	f82a cb02 	strh.w	ip, [sl], #2
 8011408:	4402      	add	r2, r0
 801140a:	f109 39ff 	add.w	r9, r9, #4294967295
 801140e:	e7af      	b.n	8011370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011410:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011414:	f04f 0800 	mov.w	r8, #0
 8011418:	eb03 0008 	add.w	r0, r3, r8
 801141c:	2800      	cmp	r0, #0
 801141e:	dc41      	bgt.n	80114a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011420:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011424:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011428:	9b00      	ldr	r3, [sp, #0]
 801142a:	2b00      	cmp	r3, #0
 801142c:	f340 8095 	ble.w	801155a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011430:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011434:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011438:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801143c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801143e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011442:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011446:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801144a:	eef0 6a62 	vmov.f32	s13, s5
 801144e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011452:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011456:	ee77 2a62 	vsub.f32	s5, s14, s5
 801145a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801145e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011462:	eef0 6a43 	vmov.f32	s13, s6
 8011466:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801146a:	ee12 2a90 	vmov	r2, s5
 801146e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011472:	fb92 f3f3 	sdiv	r3, r2, r3
 8011476:	ee13 2a10 	vmov	r2, s6
 801147a:	9311      	str	r3, [sp, #68]	; 0x44
 801147c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801147e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011482:	9312      	str	r3, [sp, #72]	; 0x48
 8011484:	9b00      	ldr	r3, [sp, #0]
 8011486:	9a03      	ldr	r2, [sp, #12]
 8011488:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801148c:	3b01      	subs	r3, #1
 801148e:	9300      	str	r3, [sp, #0]
 8011490:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011496:	eeb0 3a67 	vmov.f32	s6, s15
 801149a:	bf08      	it	eq
 801149c:	4613      	moveq	r3, r2
 801149e:	eef0 2a47 	vmov.f32	s5, s14
 80114a2:	e72f      	b.n	8011304 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80114a4:	140f      	asrs	r7, r1, #16
 80114a6:	d451      	bmi.n	801154c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114a8:	f8de 5008 	ldr.w	r5, [lr, #8]
 80114ac:	42bd      	cmp	r5, r7
 80114ae:	dd4d      	ble.n	801154c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114b0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80114b4:	d44a      	bmi.n	801154c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114b6:	f8de 000c 	ldr.w	r0, [lr, #12]
 80114ba:	4560      	cmp	r0, ip
 80114bc:	dd46      	ble.n	801154c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114be:	b22d      	sxth	r5, r5
 80114c0:	fb0c 7505 	mla	r5, ip, r5, r7
 80114c4:	9802      	ldr	r0, [sp, #8]
 80114c6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80114ca:	f06f 0501 	mvn.w	r5, #1
 80114ce:	fb05 fb08 	mul.w	fp, r5, r8
 80114d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80114d6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80114da:	122f      	asrs	r7, r5, #8
 80114dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80114e0:	fb17 f706 	smulbb	r7, r7, r6
 80114e4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80114e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80114ec:	00ed      	lsls	r5, r5, #3
 80114ee:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80114f2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80114f6:	10c7      	asrs	r7, r0, #3
 80114f8:	b2ed      	uxtb	r5, r5
 80114fa:	00c0      	lsls	r0, r0, #3
 80114fc:	fb19 f906 	smulbb	r9, r9, r6
 8011500:	fb15 f506 	smulbb	r5, r5, r6
 8011504:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011508:	b2c0      	uxtb	r0, r0
 801150a:	fa1f fc8c 	uxth.w	ip, ip
 801150e:	fb07 970a 	mla	r7, r7, sl, r9
 8011512:	fb00 500a 	mla	r0, r0, sl, r5
 8011516:	b2bf      	uxth	r7, r7
 8011518:	b280      	uxth	r0, r0
 801151a:	f10c 0501 	add.w	r5, ip, #1
 801151e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011522:	f107 0901 	add.w	r9, r7, #1
 8011526:	1c45      	adds	r5, r0, #1
 8011528:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801152c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011530:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011534:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011538:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801153c:	ea45 0c0c 	orr.w	ip, r5, ip
 8011540:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011544:	ea4c 0c09 	orr.w	ip, ip, r9
 8011548:	f824 c00b 	strh.w	ip, [r4, fp]
 801154c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801154e:	4401      	add	r1, r0
 8011550:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011552:	f108 38ff 	add.w	r8, r8, #4294967295
 8011556:	4402      	add	r2, r0
 8011558:	e75e      	b.n	8011418 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801155a:	b005      	add	sp, #20
 801155c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011560 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011564:	b085      	sub	sp, #20
 8011566:	4693      	mov	fp, r2
 8011568:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801156a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801156c:	6870      	ldr	r0, [r6, #4]
 801156e:	9101      	str	r1, [sp, #4]
 8011570:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011574:	fb00 2404 	mla	r4, r0, r4, r2
 8011578:	6832      	ldr	r2, [r6, #0]
 801157a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801157e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011582:	682a      	ldr	r2, [r5, #0]
 8011584:	9202      	str	r2, [sp, #8]
 8011586:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801158a:	9a01      	ldr	r2, [sp, #4]
 801158c:	2a00      	cmp	r2, #0
 801158e:	dc03      	bgt.n	8011598 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011590:	f1bb 0f00 	cmp.w	fp, #0
 8011594:	f340 809a 	ble.w	80116cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011598:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801159a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801159e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80115a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80115a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80115a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80115ac:	2b00      	cmp	r3, #0
 80115ae:	dd0c      	ble.n	80115ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80115b0:	1406      	asrs	r6, r0, #16
 80115b2:	d405      	bmi.n	80115c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80115b4:	454e      	cmp	r6, r9
 80115b6:	da03      	bge.n	80115c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80115b8:	1416      	asrs	r6, r2, #16
 80115ba:	d401      	bmi.n	80115c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80115bc:	4546      	cmp	r6, r8
 80115be:	db05      	blt.n	80115cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80115c0:	4470      	add	r0, lr
 80115c2:	4462      	add	r2, ip
 80115c4:	3b01      	subs	r3, #1
 80115c6:	3402      	adds	r4, #2
 80115c8:	e7f0      	b.n	80115ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80115ca:	d00f      	beq.n	80115ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80115cc:	1e5e      	subs	r6, r3, #1
 80115ce:	fb0e 0706 	mla	r7, lr, r6, r0
 80115d2:	143f      	asrs	r7, r7, #16
 80115d4:	d541      	bpl.n	801165a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80115d6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80115da:	4698      	mov	r8, r3
 80115dc:	9603      	str	r6, [sp, #12]
 80115de:	f1b8 0f00 	cmp.w	r8, #0
 80115e2:	dc56      	bgt.n	8011692 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80115e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80115ec:	9b01      	ldr	r3, [sp, #4]
 80115ee:	2b00      	cmp	r3, #0
 80115f0:	dd6c      	ble.n	80116cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80115f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011600:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011604:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011608:	eeb0 6a62 	vmov.f32	s12, s5
 801160c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011610:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011614:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011618:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801161c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011620:	eeb0 6a43 	vmov.f32	s12, s6
 8011624:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011628:	ee12 2a90 	vmov	r2, s5
 801162c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011630:	fb92 fef3 	sdiv	lr, r2, r3
 8011634:	ee13 2a10 	vmov	r2, s6
 8011638:	fb92 fcf3 	sdiv	ip, r2, r3
 801163c:	9b01      	ldr	r3, [sp, #4]
 801163e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011642:	3b01      	subs	r3, #1
 8011644:	9301      	str	r3, [sp, #4]
 8011646:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801164a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801164c:	eeb0 3a67 	vmov.f32	s6, s15
 8011650:	bf08      	it	eq
 8011652:	465b      	moveq	r3, fp
 8011654:	eef0 2a47 	vmov.f32	s5, s14
 8011658:	e797      	b.n	801158a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801165a:	454f      	cmp	r7, r9
 801165c:	dabb      	bge.n	80115d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801165e:	fb0c 2606 	mla	r6, ip, r6, r2
 8011662:	1436      	asrs	r6, r6, #16
 8011664:	d4b7      	bmi.n	80115d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011666:	4546      	cmp	r6, r8
 8011668:	dab5      	bge.n	80115d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801166a:	461e      	mov	r6, r3
 801166c:	46a0      	mov	r8, r4
 801166e:	2e00      	cmp	r6, #0
 8011670:	ddb8      	ble.n	80115e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011672:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011676:	9902      	ldr	r1, [sp, #8]
 8011678:	1417      	asrs	r7, r2, #16
 801167a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801167e:	fb0a 9707 	mla	r7, sl, r7, r9
 8011682:	4470      	add	r0, lr
 8011684:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011688:	f828 7b02 	strh.w	r7, [r8], #2
 801168c:	4462      	add	r2, ip
 801168e:	3e01      	subs	r6, #1
 8011690:	e7ed      	b.n	801166e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011692:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011696:	d414      	bmi.n	80116c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011698:	68ae      	ldr	r6, [r5, #8]
 801169a:	454e      	cmp	r6, r9
 801169c:	dd11      	ble.n	80116c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801169e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80116a2:	d40e      	bmi.n	80116c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116a4:	68ef      	ldr	r7, [r5, #12]
 80116a6:	4557      	cmp	r7, sl
 80116a8:	dd0b      	ble.n	80116c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116aa:	b236      	sxth	r6, r6
 80116ac:	fb0a 9606 	mla	r6, sl, r6, r9
 80116b0:	9f02      	ldr	r7, [sp, #8]
 80116b2:	f06f 0101 	mvn.w	r1, #1
 80116b6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80116ba:	fb01 f608 	mul.w	r6, r1, r8
 80116be:	9903      	ldr	r1, [sp, #12]
 80116c0:	538f      	strh	r7, [r1, r6]
 80116c2:	4470      	add	r0, lr
 80116c4:	4462      	add	r2, ip
 80116c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80116ca:	e788      	b.n	80115de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80116cc:	b005      	add	sp, #20
 80116ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80116d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116d6:	b087      	sub	sp, #28
 80116d8:	468b      	mov	fp, r1
 80116da:	9815      	ldr	r0, [sp, #84]	; 0x54
 80116dc:	9203      	str	r2, [sp, #12]
 80116de:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80116e2:	9204      	str	r2, [sp, #16]
 80116e4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80116e8:	6841      	ldr	r1, [r0, #4]
 80116ea:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80116ee:	fb01 2505 	mla	r5, r1, r5, r2
 80116f2:	6802      	ldr	r2, [r0, #0]
 80116f4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80116f8:	f8d9 2000 	ldr.w	r2, [r9]
 80116fc:	9201      	str	r2, [sp, #4]
 80116fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011702:	f1bb 0f00 	cmp.w	fp, #0
 8011706:	dc03      	bgt.n	8011710 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011708:	9a03      	ldr	r2, [sp, #12]
 801170a:	2a00      	cmp	r2, #0
 801170c:	f340 8159 	ble.w	80119c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011710:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011712:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011716:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801171a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801171e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011720:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011724:	2b00      	cmp	r3, #0
 8011726:	dd0e      	ble.n	8011746 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011728:	1402      	asrs	r2, r0, #16
 801172a:	d405      	bmi.n	8011738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801172c:	42ba      	cmp	r2, r7
 801172e:	da03      	bge.n	8011738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011730:	140a      	asrs	r2, r1, #16
 8011732:	d401      	bmi.n	8011738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011734:	42b2      	cmp	r2, r6
 8011736:	db07      	blt.n	8011748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011738:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801173a:	4410      	add	r0, r2
 801173c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801173e:	3b01      	subs	r3, #1
 8011740:	4411      	add	r1, r2
 8011742:	3502      	adds	r5, #2
 8011744:	e7ee      	b.n	8011724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011746:	d017      	beq.n	8011778 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011748:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801174a:	1e5a      	subs	r2, r3, #1
 801174c:	fb04 0402 	mla	r4, r4, r2, r0
 8011750:	1424      	asrs	r4, r4, #16
 8011752:	d409      	bmi.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011754:	42bc      	cmp	r4, r7
 8011756:	da07      	bge.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011758:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801175a:	fb04 1202 	mla	r2, r4, r2, r1
 801175e:	1412      	asrs	r2, r2, #16
 8011760:	d402      	bmi.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011762:	42b2      	cmp	r2, r6
 8011764:	f2c0 80bf 	blt.w	80118e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011768:	2700      	movs	r7, #0
 801176a:	19da      	adds	r2, r3, r7
 801176c:	2a00      	cmp	r2, #0
 801176e:	dc3e      	bgt.n	80117ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011770:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011774:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011778:	f1bb 0f00 	cmp.w	fp, #0
 801177c:	f340 8121 	ble.w	80119c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011780:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011784:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011788:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801178c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801178e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011792:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011796:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801179a:	eeb0 6a62 	vmov.f32	s12, s5
 801179e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80117ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117b2:	eeb0 6a43 	vmov.f32	s12, s6
 80117b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80117ba:	ee12 2a90 	vmov	r2, s5
 80117be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80117c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80117c6:	ee13 2a10 	vmov	r2, s6
 80117ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80117d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80117d6:	9a03      	ldr	r2, [sp, #12]
 80117d8:	9314      	str	r3, [sp, #80]	; 0x50
 80117da:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80117de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117e0:	eeb0 3a67 	vmov.f32	s6, s15
 80117e4:	bf08      	it	eq
 80117e6:	4613      	moveq	r3, r2
 80117e8:	eef0 2a47 	vmov.f32	s5, s14
 80117ec:	e789      	b.n	8011702 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80117ee:	1406      	asrs	r6, r0, #16
 80117f0:	d42d      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117f2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80117f6:	42b4      	cmp	r4, r6
 80117f8:	dd29      	ble.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80117fa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80117fe:	d426      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011800:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011804:	4562      	cmp	r2, ip
 8011806:	dd22      	ble.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011808:	b224      	sxth	r4, r4
 801180a:	9a01      	ldr	r2, [sp, #4]
 801180c:	fb0c 6404 	mla	r4, ip, r4, r6
 8011810:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011814:	0e22      	lsrs	r2, r4, #24
 8011816:	d01a      	beq.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011818:	9e04      	ldr	r6, [sp, #16]
 801181a:	4372      	muls	r2, r6
 801181c:	1c56      	adds	r6, r2, #1
 801181e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011822:	1212      	asrs	r2, r2, #8
 8011824:	0a26      	lsrs	r6, r4, #8
 8011826:	2aff      	cmp	r2, #255	; 0xff
 8011828:	9605      	str	r6, [sp, #20]
 801182a:	d116      	bne.n	801185a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801182c:	f06f 0201 	mvn.w	r2, #1
 8011830:	fb02 fc07 	mul.w	ip, r2, r7
 8011834:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011838:	0962      	lsrs	r2, r4, #5
 801183a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801183e:	f026 0607 	bic.w	r6, r6, #7
 8011842:	4316      	orrs	r6, r2
 8011844:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011848:	4326      	orrs	r6, r4
 801184a:	f825 600c 	strh.w	r6, [r5, ip]
 801184e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011850:	4410      	add	r0, r2
 8011852:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011854:	3f01      	subs	r7, #1
 8011856:	4411      	add	r1, r2
 8011858:	e787      	b.n	801176a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801185a:	f06f 0601 	mvn.w	r6, #1
 801185e:	437e      	muls	r6, r7
 8011860:	fa1f fa82 	uxth.w	sl, r2
 8011864:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011868:	9602      	str	r6, [sp, #8]
 801186a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801186e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011872:	43d2      	mvns	r2, r2
 8011874:	b2d2      	uxtb	r2, r2
 8011876:	fb1c fc0a 	smulbb	ip, ip, sl
 801187a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801187e:	fb0e ce02 	mla	lr, lr, r2, ip
 8011882:	b2e4      	uxtb	r4, r4
 8011884:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011888:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801188c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011890:	fa5f f888 	uxtb.w	r8, r8
 8011894:	fb14 f40a 	smulbb	r4, r4, sl
 8011898:	fb08 4402 	mla	r4, r8, r2, r4
 801189c:	fa1f fe8e 	uxth.w	lr, lr
 80118a0:	fb16 f60a 	smulbb	r6, r6, sl
 80118a4:	b2a4      	uxth	r4, r4
 80118a6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80118aa:	fb0c 6c02 	mla	ip, ip, r2, r6
 80118ae:	f10e 0201 	add.w	r2, lr, #1
 80118b2:	1c66      	adds	r6, r4, #1
 80118b4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80118b8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80118bc:	fa1f fc8c 	uxth.w	ip, ip
 80118c0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80118c4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80118c8:	ea46 0e0e 	orr.w	lr, r6, lr
 80118cc:	f10c 0601 	add.w	r6, ip, #1
 80118d0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80118d4:	0976      	lsrs	r6, r6, #5
 80118d6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80118da:	9a02      	ldr	r2, [sp, #8]
 80118dc:	ea4e 0e06 	orr.w	lr, lr, r6
 80118e0:	f825 e002 	strh.w	lr, [r5, r2]
 80118e4:	e7b3      	b.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80118e6:	f04f 0800 	mov.w	r8, #0
 80118ea:	eba3 0208 	sub.w	r2, r3, r8
 80118ee:	2a00      	cmp	r2, #0
 80118f0:	f77f af3e 	ble.w	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80118f4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80118f8:	1404      	asrs	r4, r0, #16
 80118fa:	140a      	asrs	r2, r1, #16
 80118fc:	fb06 4202 	mla	r2, r6, r2, r4
 8011900:	9c01      	ldr	r4, [sp, #4]
 8011902:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011906:	0e22      	lsrs	r2, r4, #24
 8011908:	d016      	beq.n	8011938 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801190a:	9e04      	ldr	r6, [sp, #16]
 801190c:	4372      	muls	r2, r6
 801190e:	1c56      	adds	r6, r2, #1
 8011910:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011914:	1212      	asrs	r2, r2, #8
 8011916:	2aff      	cmp	r2, #255	; 0xff
 8011918:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801191c:	d113      	bne.n	8011946 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801191e:	0962      	lsrs	r2, r4, #5
 8011920:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011924:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011928:	f026 0607 	bic.w	r6, r6, #7
 801192c:	4316      	orrs	r6, r2
 801192e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011932:	4326      	orrs	r6, r4
 8011934:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011938:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801193a:	4410      	add	r0, r2
 801193c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801193e:	f108 0801 	add.w	r8, r8, #1
 8011942:	4411      	add	r1, r2
 8011944:	e7d1      	b.n	80118ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011946:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801194a:	fa1f fa82 	uxth.w	sl, r2
 801194e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011952:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8011956:	43d2      	mvns	r2, r2
 8011958:	b2d2      	uxtb	r2, r2
 801195a:	fb17 f70a 	smulbb	r7, r7, sl
 801195e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011962:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011966:	b2e4      	uxtb	r4, r4
 8011968:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801196c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011970:	fa5f fe8e 	uxtb.w	lr, lr
 8011974:	fb14 f40a 	smulbb	r4, r4, sl
 8011978:	fb0e 4402 	mla	r4, lr, r2, r4
 801197c:	b2f6      	uxtb	r6, r6
 801197e:	fa1f fc8c 	uxth.w	ip, ip
 8011982:	fb16 f60a 	smulbb	r6, r6, sl
 8011986:	b2a4      	uxth	r4, r4
 8011988:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801198c:	fb07 6702 	mla	r7, r7, r2, r6
 8011990:	f10c 0201 	add.w	r2, ip, #1
 8011994:	1c66      	adds	r6, r4, #1
 8011996:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801199a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801199e:	b2bf      	uxth	r7, r7
 80119a0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80119a8:	ea46 0c0c 	orr.w	ip, r6, ip
 80119ac:	1c7e      	adds	r6, r7, #1
 80119ae:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80119b2:	0976      	lsrs	r6, r6, #5
 80119b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80119b8:	ea4c 0c06 	orr.w	ip, ip, r6
 80119bc:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80119c0:	e7ba      	b.n	8011938 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80119c2:	b007      	add	sp, #28
 80119c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080119c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80119c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119cc:	b085      	sub	sp, #20
 80119ce:	468b      	mov	fp, r1
 80119d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80119d2:	9203      	str	r2, [sp, #12]
 80119d4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80119d8:	6841      	ldr	r1, [r0, #4]
 80119da:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80119de:	fb01 2404 	mla	r4, r1, r4, r2
 80119e2:	6802      	ldr	r2, [r0, #0]
 80119e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80119e8:	f8d8 2000 	ldr.w	r2, [r8]
 80119ec:	9201      	str	r2, [sp, #4]
 80119ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80119f2:	f1bb 0f00 	cmp.w	fp, #0
 80119f6:	dc03      	bgt.n	8011a00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80119f8:	9a03      	ldr	r2, [sp, #12]
 80119fa:	2a00      	cmp	r2, #0
 80119fc:	f340 814f 	ble.w	8011c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011a02:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011a06:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011a0a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011a10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011a14:	2b00      	cmp	r3, #0
 8011a16:	dd0e      	ble.n	8011a36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011a18:	1408      	asrs	r0, r1, #16
 8011a1a:	d405      	bmi.n	8011a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a1c:	42b8      	cmp	r0, r7
 8011a1e:	da03      	bge.n	8011a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a20:	1410      	asrs	r0, r2, #16
 8011a22:	d401      	bmi.n	8011a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a24:	42b0      	cmp	r0, r6
 8011a26:	db07      	blt.n	8011a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011a28:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011a2a:	4401      	add	r1, r0
 8011a2c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011a2e:	3b01      	subs	r3, #1
 8011a30:	4402      	add	r2, r0
 8011a32:	3402      	adds	r4, #2
 8011a34:	e7ee      	b.n	8011a14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011a36:	d017      	beq.n	8011a68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011a38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011a3a:	1e58      	subs	r0, r3, #1
 8011a3c:	fb05 1500 	mla	r5, r5, r0, r1
 8011a40:	142d      	asrs	r5, r5, #16
 8011a42:	d409      	bmi.n	8011a58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a44:	42bd      	cmp	r5, r7
 8011a46:	da07      	bge.n	8011a58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a48:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011a4a:	fb05 2000 	mla	r0, r5, r0, r2
 8011a4e:	1400      	asrs	r0, r0, #16
 8011a50:	d402      	bmi.n	8011a58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a52:	42b0      	cmp	r0, r6
 8011a54:	f2c0 80ba 	blt.w	8011bcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011a58:	2600      	movs	r6, #0
 8011a5a:	1998      	adds	r0, r3, r6
 8011a5c:	2800      	cmp	r0, #0
 8011a5e:	dc3e      	bgt.n	8011ade <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011a60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a68:	f1bb 0f00 	cmp.w	fp, #0
 8011a6c:	f340 8117 	ble.w	8011c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a78:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a7e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011a82:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a8a:	eeb0 6a62 	vmov.f32	s12, s5
 8011a8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a96:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a9a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011a9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011aa2:	eeb0 6a43 	vmov.f32	s12, s6
 8011aa6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011aaa:	ee12 2a90 	vmov	r2, s5
 8011aae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011ab2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ab6:	ee13 2a10 	vmov	r2, s6
 8011aba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011abe:	9311      	str	r3, [sp, #68]	; 0x44
 8011ac0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ac2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ac6:	9a03      	ldr	r2, [sp, #12]
 8011ac8:	9312      	str	r3, [sp, #72]	; 0x48
 8011aca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011ace:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ad0:	eeb0 3a67 	vmov.f32	s6, s15
 8011ad4:	bf08      	it	eq
 8011ad6:	4613      	moveq	r3, r2
 8011ad8:	eef0 2a47 	vmov.f32	s5, s14
 8011adc:	e789      	b.n	80119f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011ade:	140f      	asrs	r7, r1, #16
 8011ae0:	d424      	bmi.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011ae2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011ae6:	42bd      	cmp	r5, r7
 8011ae8:	dd20      	ble.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011aea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011aee:	d41d      	bmi.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011af0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011af4:	4560      	cmp	r0, ip
 8011af6:	dd19      	ble.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011af8:	b22d      	sxth	r5, r5
 8011afa:	fb0c 7505 	mla	r5, ip, r5, r7
 8011afe:	9801      	ldr	r0, [sp, #4]
 8011b00:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011b04:	0e07      	lsrs	r7, r0, #24
 8011b06:	2fff      	cmp	r7, #255	; 0xff
 8011b08:	d116      	bne.n	8011b38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b0a:	f06f 0501 	mvn.w	r5, #1
 8011b0e:	fb05 f706 	mul.w	r7, r5, r6
 8011b12:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011b16:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011b1a:	0945      	lsrs	r5, r0, #5
 8011b1c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011b20:	ea4c 0505 	orr.w	r5, ip, r5
 8011b24:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011b28:	4305      	orrs	r5, r0
 8011b2a:	53e5      	strh	r5, [r4, r7]
 8011b2c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b2e:	4401      	add	r1, r0
 8011b30:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b32:	3e01      	subs	r6, #1
 8011b34:	4402      	add	r2, r0
 8011b36:	e790      	b.n	8011a5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b38:	b2fd      	uxtb	r5, r7
 8011b3a:	2f00      	cmp	r7, #0
 8011b3c:	d0f6      	beq.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b3e:	f06f 0701 	mvn.w	r7, #1
 8011b42:	4377      	muls	r7, r6
 8011b44:	fa1f f985 	uxth.w	r9, r5
 8011b48:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011b4c:	9702      	str	r7, [sp, #8]
 8011b4e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b52:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011b56:	43ed      	mvns	r5, r5
 8011b58:	b2ed      	uxtb	r5, r5
 8011b5a:	fb17 f709 	smulbb	r7, r7, r9
 8011b5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b62:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011b66:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011b6a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011b6e:	b2c0      	uxtb	r0, r0
 8011b70:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b74:	fa5f fe8e 	uxtb.w	lr, lr
 8011b78:	fb10 f009 	smulbb	r0, r0, r9
 8011b7c:	fb0e 0005 	mla	r0, lr, r5, r0
 8011b80:	b280      	uxth	r0, r0
 8011b82:	fa1f fc8c 	uxth.w	ip, ip
 8011b86:	fb1a fa09 	smulbb	sl, sl, r9
 8011b8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011b8e:	fb07 a705 	mla	r7, r7, r5, sl
 8011b92:	f100 0a01 	add.w	sl, r0, #1
 8011b96:	f10c 0501 	add.w	r5, ip, #1
 8011b9a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011b9e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011ba2:	b2bf      	uxth	r7, r7
 8011ba4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ba8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011bac:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011bb0:	f107 0a01 	add.w	sl, r7, #1
 8011bb4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011bb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011bbc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011bc0:	9802      	ldr	r0, [sp, #8]
 8011bc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011bc6:	f824 c000 	strh.w	ip, [r4, r0]
 8011bca:	e7af      	b.n	8011b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011bcc:	f04f 0e00 	mov.w	lr, #0
 8011bd0:	eba3 000e 	sub.w	r0, r3, lr
 8011bd4:	2800      	cmp	r0, #0
 8011bd6:	f77f af43 	ble.w	8011a60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011bda:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011bde:	140d      	asrs	r5, r1, #16
 8011be0:	1410      	asrs	r0, r2, #16
 8011be2:	fb06 5000 	mla	r0, r6, r0, r5
 8011be6:	9d01      	ldr	r5, [sp, #4]
 8011be8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011bec:	0e2e      	lsrs	r6, r5, #24
 8011bee:	2eff      	cmp	r6, #255	; 0xff
 8011bf0:	d112      	bne.n	8011c18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011bf2:	482c      	ldr	r0, [pc, #176]	; (8011ca4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011bf4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011bf8:	0968      	lsrs	r0, r5, #5
 8011bfa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011bfe:	4330      	orrs	r0, r6
 8011c00:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011c04:	4328      	orrs	r0, r5
 8011c06:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011c0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c0c:	4401      	add	r1, r0
 8011c0e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011c10:	f10e 0e01 	add.w	lr, lr, #1
 8011c14:	4402      	add	r2, r0
 8011c16:	e7db      	b.n	8011bd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011c18:	b2f0      	uxtb	r0, r6
 8011c1a:	2e00      	cmp	r6, #0
 8011c1c:	d0f5      	beq.n	8011c0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011c1e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c22:	fa1f f980 	uxth.w	r9, r0
 8011c26:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011c2a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011c2e:	43c0      	mvns	r0, r0
 8011c30:	b2c0      	uxtb	r0, r0
 8011c32:	fb16 f609 	smulbb	r6, r6, r9
 8011c36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c3a:	fb07 6700 	mla	r7, r7, r0, r6
 8011c3e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011c42:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011c46:	b2ed      	uxtb	r5, r5
 8011c48:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011c4c:	fa5f fc8c 	uxtb.w	ip, ip
 8011c50:	fb15 f509 	smulbb	r5, r5, r9
 8011c54:	fb0c 5500 	mla	r5, ip, r0, r5
 8011c58:	b2bf      	uxth	r7, r7
 8011c5a:	fb1a fa09 	smulbb	sl, sl, r9
 8011c5e:	b2ad      	uxth	r5, r5
 8011c60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c64:	fb06 a600 	mla	r6, r6, r0, sl
 8011c68:	1c78      	adds	r0, r7, #1
 8011c6a:	f105 0a01 	add.w	sl, r5, #1
 8011c6e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011c72:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011c76:	b2b6      	uxth	r6, r6
 8011c78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c7c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011c80:	ea4a 0707 	orr.w	r7, sl, r7
 8011c84:	f106 0a01 	add.w	sl, r6, #1
 8011c88:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011c8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c94:	ea47 070a 	orr.w	r7, r7, sl
 8011c98:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011c9c:	e7b5      	b.n	8011c0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011c9e:	b005      	add	sp, #20
 8011ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ca4:	fffff800 	.word	0xfffff800

08011ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cac:	b087      	sub	sp, #28
 8011cae:	468b      	mov	fp, r1
 8011cb0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011cb2:	9203      	str	r2, [sp, #12]
 8011cb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011cb8:	9204      	str	r2, [sp, #16]
 8011cba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011cbe:	6841      	ldr	r1, [r0, #4]
 8011cc0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011cc4:	fb01 2404 	mla	r4, r1, r4, r2
 8011cc8:	6802      	ldr	r2, [r0, #0]
 8011cca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011cce:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011cd2:	3201      	adds	r2, #1
 8011cd4:	f022 0201 	bic.w	r2, r2, #1
 8011cd8:	9200      	str	r2, [sp, #0]
 8011cda:	f8d9 2000 	ldr.w	r2, [r9]
 8011cde:	9201      	str	r2, [sp, #4]
 8011ce0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011ce4:	f1bb 0f00 	cmp.w	fp, #0
 8011ce8:	dc03      	bgt.n	8011cf2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011cea:	9a03      	ldr	r2, [sp, #12]
 8011cec:	2a00      	cmp	r2, #0
 8011cee:	f340 8169 	ble.w	8011fc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011cf2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011cf4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011cf8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011cfc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d02:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d06:	2b00      	cmp	r3, #0
 8011d08:	dd0e      	ble.n	8011d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011d0a:	1402      	asrs	r2, r0, #16
 8011d0c:	d405      	bmi.n	8011d1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d0e:	42ba      	cmp	r2, r7
 8011d10:	da03      	bge.n	8011d1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d12:	140a      	asrs	r2, r1, #16
 8011d14:	d401      	bmi.n	8011d1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d16:	42b2      	cmp	r2, r6
 8011d18:	db07      	blt.n	8011d2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011d1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d1c:	4410      	add	r0, r2
 8011d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d20:	3b01      	subs	r3, #1
 8011d22:	4411      	add	r1, r2
 8011d24:	3402      	adds	r4, #2
 8011d26:	e7ee      	b.n	8011d06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011d28:	d017      	beq.n	8011d5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011d2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d2c:	1e5a      	subs	r2, r3, #1
 8011d2e:	fb05 0502 	mla	r5, r5, r2, r0
 8011d32:	142d      	asrs	r5, r5, #16
 8011d34:	d409      	bmi.n	8011d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d36:	42bd      	cmp	r5, r7
 8011d38:	da07      	bge.n	8011d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d3a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d3c:	fb05 1202 	mla	r2, r5, r2, r1
 8011d40:	1412      	asrs	r2, r2, #16
 8011d42:	d402      	bmi.n	8011d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d44:	42b2      	cmp	r2, r6
 8011d46:	f2c0 80c7 	blt.w	8011ed8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011d4a:	2700      	movs	r7, #0
 8011d4c:	19da      	adds	r2, r3, r7
 8011d4e:	2a00      	cmp	r2, #0
 8011d50:	dc3e      	bgt.n	8011dd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011d52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d56:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d5a:	f1bb 0f00 	cmp.w	fp, #0
 8011d5e:	f340 8131 	ble.w	8011fc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011d62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d70:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d7c:	eeb0 6a62 	vmov.f32	s12, s5
 8011d80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d8c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d94:	eeb0 6a43 	vmov.f32	s12, s6
 8011d98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d9c:	ee12 2a90 	vmov	r2, s5
 8011da0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011da4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011da8:	ee13 2a10 	vmov	r2, s6
 8011dac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011db0:	9313      	str	r3, [sp, #76]	; 0x4c
 8011db2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011db4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011db8:	9a03      	ldr	r2, [sp, #12]
 8011dba:	9314      	str	r3, [sp, #80]	; 0x50
 8011dbc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011dc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dc2:	eeb0 3a67 	vmov.f32	s6, s15
 8011dc6:	bf08      	it	eq
 8011dc8:	4613      	moveq	r3, r2
 8011dca:	eef0 2a47 	vmov.f32	s5, s14
 8011dce:	e789      	b.n	8011ce4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011dd0:	1405      	asrs	r5, r0, #16
 8011dd2:	d435      	bmi.n	8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011dd4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011dd8:	42aa      	cmp	r2, r5
 8011dda:	dd31      	ble.n	8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011ddc:	140e      	asrs	r6, r1, #16
 8011dde:	d42f      	bmi.n	8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011de0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011de4:	42b2      	cmp	r2, r6
 8011de6:	dd2b      	ble.n	8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011de8:	9a00      	ldr	r2, [sp, #0]
 8011dea:	fb06 5502 	mla	r5, r6, r2, r5
 8011dee:	086a      	lsrs	r2, r5, #1
 8011df0:	9e01      	ldr	r6, [sp, #4]
 8011df2:	5cb2      	ldrb	r2, [r6, r2]
 8011df4:	07ee      	lsls	r6, r5, #31
 8011df6:	bf54      	ite	pl
 8011df8:	f002 020f 	andpl.w	r2, r2, #15
 8011dfc:	1112      	asrmi	r2, r2, #4
 8011dfe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e02:	b2d2      	uxtb	r2, r2
 8011e04:	b1e2      	cbz	r2, 8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e06:	9d04      	ldr	r5, [sp, #16]
 8011e08:	436a      	muls	r2, r5
 8011e0a:	1c55      	adds	r5, r2, #1
 8011e0c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011e10:	4d6e      	ldr	r5, [pc, #440]	; (8011fcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011e12:	682d      	ldr	r5, [r5, #0]
 8011e14:	1212      	asrs	r2, r2, #8
 8011e16:	0a2e      	lsrs	r6, r5, #8
 8011e18:	2aff      	cmp	r2, #255	; 0xff
 8011e1a:	9605      	str	r6, [sp, #20]
 8011e1c:	d116      	bne.n	8011e4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011e1e:	f06f 0201 	mvn.w	r2, #1
 8011e22:	fb02 fc07 	mul.w	ip, r2, r7
 8011e26:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011e2a:	096a      	lsrs	r2, r5, #5
 8011e2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011e30:	f026 0607 	bic.w	r6, r6, #7
 8011e34:	4316      	orrs	r6, r2
 8011e36:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e3a:	432e      	orrs	r6, r5
 8011e3c:	f824 600c 	strh.w	r6, [r4, ip]
 8011e40:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e42:	4410      	add	r0, r2
 8011e44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e46:	3f01      	subs	r7, #1
 8011e48:	4411      	add	r1, r2
 8011e4a:	e77f      	b.n	8011d4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011e4c:	f06f 0601 	mvn.w	r6, #1
 8011e50:	437e      	muls	r6, r7
 8011e52:	fa1f fa82 	uxth.w	sl, r2
 8011e56:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011e5a:	9602      	str	r6, [sp, #8]
 8011e5c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011e60:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011e64:	43d2      	mvns	r2, r2
 8011e66:	b2d2      	uxtb	r2, r2
 8011e68:	fb1c fc0a 	smulbb	ip, ip, sl
 8011e6c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011e70:	fb0e ce02 	mla	lr, lr, r2, ip
 8011e74:	b2ed      	uxtb	r5, r5
 8011e76:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011e7a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011e7e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011e82:	fa5f f888 	uxtb.w	r8, r8
 8011e86:	fb15 f50a 	smulbb	r5, r5, sl
 8011e8a:	fb08 5502 	mla	r5, r8, r2, r5
 8011e8e:	fa1f fe8e 	uxth.w	lr, lr
 8011e92:	fb16 f60a 	smulbb	r6, r6, sl
 8011e96:	b2ad      	uxth	r5, r5
 8011e98:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011e9c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011ea0:	f10e 0201 	add.w	r2, lr, #1
 8011ea4:	1c6e      	adds	r6, r5, #1
 8011ea6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011eaa:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011eae:	fa1f fc8c 	uxth.w	ip, ip
 8011eb2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011eb6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011eba:	ea46 0e0e 	orr.w	lr, r6, lr
 8011ebe:	f10c 0601 	add.w	r6, ip, #1
 8011ec2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011ec6:	0976      	lsrs	r6, r6, #5
 8011ec8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011ecc:	9a02      	ldr	r2, [sp, #8]
 8011ece:	ea4e 0e06 	orr.w	lr, lr, r6
 8011ed2:	f824 e002 	strh.w	lr, [r4, r2]
 8011ed6:	e7b3      	b.n	8011e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011ed8:	f04f 0800 	mov.w	r8, #0
 8011edc:	eba3 0208 	sub.w	r2, r3, r8
 8011ee0:	2a00      	cmp	r2, #0
 8011ee2:	f77f af36 	ble.w	8011d52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011ee6:	9e00      	ldr	r6, [sp, #0]
 8011ee8:	1402      	asrs	r2, r0, #16
 8011eea:	140d      	asrs	r5, r1, #16
 8011eec:	fb06 2505 	mla	r5, r6, r5, r2
 8011ef0:	086a      	lsrs	r2, r5, #1
 8011ef2:	9e01      	ldr	r6, [sp, #4]
 8011ef4:	5cb2      	ldrb	r2, [r6, r2]
 8011ef6:	07ed      	lsls	r5, r5, #31
 8011ef8:	bf54      	ite	pl
 8011efa:	f002 020f 	andpl.w	r2, r2, #15
 8011efe:	1112      	asrmi	r2, r2, #4
 8011f00:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f04:	b2d2      	uxtb	r2, r2
 8011f06:	b1c2      	cbz	r2, 8011f3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011f08:	9d04      	ldr	r5, [sp, #16]
 8011f0a:	436a      	muls	r2, r5
 8011f0c:	1c55      	adds	r5, r2, #1
 8011f0e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011f12:	4d2e      	ldr	r5, [pc, #184]	; (8011fcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011f14:	1212      	asrs	r2, r2, #8
 8011f16:	682e      	ldr	r6, [r5, #0]
 8011f18:	2aff      	cmp	r2, #255	; 0xff
 8011f1a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011f1e:	d113      	bne.n	8011f48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011f20:	0972      	lsrs	r2, r6, #5
 8011f22:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8011f26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011f2a:	f025 0507 	bic.w	r5, r5, #7
 8011f2e:	4315      	orrs	r5, r2
 8011f30:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011f34:	4335      	orrs	r5, r6
 8011f36:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011f3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f3c:	4410      	add	r0, r2
 8011f3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f40:	f108 0801 	add.w	r8, r8, #1
 8011f44:	4411      	add	r1, r2
 8011f46:	e7c9      	b.n	8011edc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011f48:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011f4c:	fa1f fa82 	uxth.w	sl, r2
 8011f50:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011f54:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011f58:	43d2      	mvns	r2, r2
 8011f5a:	b2d2      	uxtb	r2, r2
 8011f5c:	fb17 f70a 	smulbb	r7, r7, sl
 8011f60:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011f64:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011f68:	b2f6      	uxtb	r6, r6
 8011f6a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011f6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f72:	fa5f fe8e 	uxtb.w	lr, lr
 8011f76:	fb16 f60a 	smulbb	r6, r6, sl
 8011f7a:	fb0e 6602 	mla	r6, lr, r2, r6
 8011f7e:	b2ed      	uxtb	r5, r5
 8011f80:	fa1f fc8c 	uxth.w	ip, ip
 8011f84:	fb15 f50a 	smulbb	r5, r5, sl
 8011f88:	b2b6      	uxth	r6, r6
 8011f8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011f8e:	fb07 5702 	mla	r7, r7, r2, r5
 8011f92:	f10c 0201 	add.w	r2, ip, #1
 8011f96:	1c75      	adds	r5, r6, #1
 8011f98:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011f9c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011fa0:	b2bf      	uxth	r7, r7
 8011fa2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011fa6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011faa:	ea45 0c0c 	orr.w	ip, r5, ip
 8011fae:	1c7d      	adds	r5, r7, #1
 8011fb0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8011fb4:	096d      	lsrs	r5, r5, #5
 8011fb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011fba:	ea4c 0c05 	orr.w	ip, ip, r5
 8011fbe:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8011fc2:	e7ba      	b.n	8011f3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011fc4:	b007      	add	sp, #28
 8011fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011fca:	bf00      	nop
 8011fcc:	2000a53c 	.word	0x2000a53c

08011fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fd4:	b087      	sub	sp, #28
 8011fd6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80122e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8011fda:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011fdc:	9205      	str	r2, [sp, #20]
 8011fde:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011fe2:	9101      	str	r1, [sp, #4]
 8011fe4:	6841      	ldr	r1, [r0, #4]
 8011fe6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8011fea:	fb01 2404 	mla	r4, r1, r4, r2
 8011fee:	6802      	ldr	r2, [r0, #0]
 8011ff0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011ff4:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011ff8:	3201      	adds	r2, #1
 8011ffa:	f022 0201 	bic.w	r2, r2, #1
 8011ffe:	9202      	str	r2, [sp, #8]
 8012000:	f8db 2000 	ldr.w	r2, [fp]
 8012004:	9203      	str	r2, [sp, #12]
 8012006:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801200a:	9a01      	ldr	r2, [sp, #4]
 801200c:	2a00      	cmp	r2, #0
 801200e:	dc03      	bgt.n	8012018 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012010:	9a05      	ldr	r2, [sp, #20]
 8012012:	2a00      	cmp	r2, #0
 8012014:	f340 8162 	ble.w	80122dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012018:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801201a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801201e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8012022:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012026:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012028:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801202c:	2b00      	cmp	r3, #0
 801202e:	dd0e      	ble.n	801204e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012030:	1402      	asrs	r2, r0, #16
 8012032:	d405      	bmi.n	8012040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012034:	42ba      	cmp	r2, r7
 8012036:	da03      	bge.n	8012040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012038:	140a      	asrs	r2, r1, #16
 801203a:	d401      	bmi.n	8012040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801203c:	42b2      	cmp	r2, r6
 801203e:	db07      	blt.n	8012050 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012040:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012042:	4410      	add	r0, r2
 8012044:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012046:	3b01      	subs	r3, #1
 8012048:	4411      	add	r1, r2
 801204a:	3402      	adds	r4, #2
 801204c:	e7ee      	b.n	801202c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801204e:	d017      	beq.n	8012080 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012050:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012052:	1e5a      	subs	r2, r3, #1
 8012054:	fb05 0502 	mla	r5, r5, r2, r0
 8012058:	142d      	asrs	r5, r5, #16
 801205a:	d409      	bmi.n	8012070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801205c:	42bd      	cmp	r5, r7
 801205e:	da07      	bge.n	8012070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012060:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012062:	fb05 1202 	mla	r2, r5, r2, r1
 8012066:	1412      	asrs	r2, r2, #16
 8012068:	d402      	bmi.n	8012070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801206a:	42b2      	cmp	r2, r6
 801206c:	f2c0 80c3 	blt.w	80121f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8012070:	2500      	movs	r5, #0
 8012072:	195a      	adds	r2, r3, r5
 8012074:	2a00      	cmp	r2, #0
 8012076:	dc3f      	bgt.n	80120f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012078:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801207c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012080:	9b01      	ldr	r3, [sp, #4]
 8012082:	2b00      	cmp	r3, #0
 8012084:	f340 812a 	ble.w	80122dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012088:	ee30 0a04 	vadd.f32	s0, s0, s8
 801208c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012090:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012094:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012096:	ee31 1a05 	vadd.f32	s2, s2, s10
 801209a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801209e:	eeb0 6a62 	vmov.f32	s12, s5
 80120a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80120a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80120ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80120b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80120b6:	eeb0 6a43 	vmov.f32	s12, s6
 80120ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80120be:	ee12 2a90 	vmov	r2, s5
 80120c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80120c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80120ca:	ee13 2a10 	vmov	r2, s6
 80120ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80120d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80120d6:	9314      	str	r3, [sp, #80]	; 0x50
 80120d8:	9b01      	ldr	r3, [sp, #4]
 80120da:	9a05      	ldr	r2, [sp, #20]
 80120dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120e0:	3b01      	subs	r3, #1
 80120e2:	9301      	str	r3, [sp, #4]
 80120e4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80120e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120ea:	eeb0 3a67 	vmov.f32	s6, s15
 80120ee:	bf08      	it	eq
 80120f0:	4613      	moveq	r3, r2
 80120f2:	eef0 2a47 	vmov.f32	s5, s14
 80120f6:	e788      	b.n	801200a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80120f8:	1406      	asrs	r6, r0, #16
 80120fa:	d42c      	bmi.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012100:	42b2      	cmp	r2, r6
 8012102:	dd28      	ble.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012104:	140f      	asrs	r7, r1, #16
 8012106:	d426      	bmi.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012108:	f8db 200c 	ldr.w	r2, [fp, #12]
 801210c:	42ba      	cmp	r2, r7
 801210e:	dd22      	ble.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012110:	9a02      	ldr	r2, [sp, #8]
 8012112:	fb07 6602 	mla	r6, r7, r2, r6
 8012116:	0872      	lsrs	r2, r6, #1
 8012118:	9f03      	ldr	r7, [sp, #12]
 801211a:	5cba      	ldrb	r2, [r7, r2]
 801211c:	07f6      	lsls	r6, r6, #31
 801211e:	bf54      	ite	pl
 8012120:	f002 020f 	andpl.w	r2, r2, #15
 8012124:	1112      	asrmi	r2, r2, #4
 8012126:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801212a:	b2d2      	uxtb	r2, r2
 801212c:	2aff      	cmp	r2, #255	; 0xff
 801212e:	d118      	bne.n	8012162 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012130:	f8d8 2000 	ldr.w	r2, [r8]
 8012134:	f06f 0601 	mvn.w	r6, #1
 8012138:	fb06 f705 	mul.w	r7, r6, r5
 801213c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8012140:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8012144:	0956      	lsrs	r6, r2, #5
 8012146:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801214a:	ea4c 0606 	orr.w	r6, ip, r6
 801214e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012152:	4316      	orrs	r6, r2
 8012154:	53e6      	strh	r6, [r4, r7]
 8012156:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012158:	4410      	add	r0, r2
 801215a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801215c:	3d01      	subs	r5, #1
 801215e:	4411      	add	r1, r2
 8012160:	e787      	b.n	8012072 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012162:	2a00      	cmp	r2, #0
 8012164:	d0f7      	beq.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012166:	f06f 0601 	mvn.w	r6, #1
 801216a:	436e      	muls	r6, r5
 801216c:	f8d8 c000 	ldr.w	ip, [r8]
 8012170:	f834 e006 	ldrh.w	lr, [r4, r6]
 8012174:	9604      	str	r6, [sp, #16]
 8012176:	fa1f f982 	uxth.w	r9, r2
 801217a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801217e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8012182:	43d2      	mvns	r2, r2
 8012184:	b2d2      	uxtb	r2, r2
 8012186:	fb16 f609 	smulbb	r6, r6, r9
 801218a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801218e:	fb07 6702 	mla	r7, r7, r2, r6
 8012192:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8012196:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801219a:	fa5f fc8c 	uxtb.w	ip, ip
 801219e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80121a2:	fa5f fe8e 	uxtb.w	lr, lr
 80121a6:	fb1c fc09 	smulbb	ip, ip, r9
 80121aa:	fb0e cc02 	mla	ip, lr, r2, ip
 80121ae:	b2bf      	uxth	r7, r7
 80121b0:	fb1a fa09 	smulbb	sl, sl, r9
 80121b4:	fa1f fc8c 	uxth.w	ip, ip
 80121b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80121bc:	fb06 a602 	mla	r6, r6, r2, sl
 80121c0:	1c7a      	adds	r2, r7, #1
 80121c2:	f10c 0a01 	add.w	sl, ip, #1
 80121c6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80121ca:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80121ce:	b2b6      	uxth	r6, r6
 80121d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80121d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80121d8:	ea4a 0707 	orr.w	r7, sl, r7
 80121dc:	f106 0a01 	add.w	sl, r6, #1
 80121e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80121e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80121e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80121ec:	9a04      	ldr	r2, [sp, #16]
 80121ee:	ea47 070a 	orr.w	r7, r7, sl
 80121f2:	52a7      	strh	r7, [r4, r2]
 80121f4:	e7af      	b.n	8012156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80121f6:	f04f 0e00 	mov.w	lr, #0
 80121fa:	eba3 020e 	sub.w	r2, r3, lr
 80121fe:	2a00      	cmp	r2, #0
 8012200:	f77f af3a 	ble.w	8012078 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012204:	9e02      	ldr	r6, [sp, #8]
 8012206:	1402      	asrs	r2, r0, #16
 8012208:	140d      	asrs	r5, r1, #16
 801220a:	fb06 2505 	mla	r5, r6, r5, r2
 801220e:	086a      	lsrs	r2, r5, #1
 8012210:	9e03      	ldr	r6, [sp, #12]
 8012212:	5cb2      	ldrb	r2, [r6, r2]
 8012214:	07ed      	lsls	r5, r5, #31
 8012216:	bf54      	ite	pl
 8012218:	f002 020f 	andpl.w	r2, r2, #15
 801221c:	1112      	asrmi	r2, r2, #4
 801221e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012222:	b2d2      	uxtb	r2, r2
 8012224:	2aff      	cmp	r2, #255	; 0xff
 8012226:	d115      	bne.n	8012254 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012228:	f8d8 5000 	ldr.w	r5, [r8]
 801222c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8012230:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012234:	096a      	lsrs	r2, r5, #5
 8012236:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801223a:	4332      	orrs	r2, r6
 801223c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012240:	432a      	orrs	r2, r5
 8012242:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8012246:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012248:	4410      	add	r0, r2
 801224a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801224c:	f10e 0e01 	add.w	lr, lr, #1
 8012250:	4411      	add	r1, r2
 8012252:	e7d2      	b.n	80121fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8012254:	2a00      	cmp	r2, #0
 8012256:	d0f6      	beq.n	8012246 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012258:	f8d8 7000 	ldr.w	r7, [r8]
 801225c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012260:	fa1f f982 	uxth.w	r9, r2
 8012264:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012268:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801226c:	43d2      	mvns	r2, r2
 801226e:	b2d2      	uxtb	r2, r2
 8012270:	fb15 f509 	smulbb	r5, r5, r9
 8012274:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012278:	fb06 5602 	mla	r6, r6, r2, r5
 801227c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8012280:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012284:	b2ff      	uxtb	r7, r7
 8012286:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801228a:	fa5f fc8c 	uxtb.w	ip, ip
 801228e:	fb17 f709 	smulbb	r7, r7, r9
 8012292:	fb0c 7702 	mla	r7, ip, r2, r7
 8012296:	b2b6      	uxth	r6, r6
 8012298:	fb1a fa09 	smulbb	sl, sl, r9
 801229c:	b2bf      	uxth	r7, r7
 801229e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80122a2:	fb05 a502 	mla	r5, r5, r2, sl
 80122a6:	1c72      	adds	r2, r6, #1
 80122a8:	f107 0a01 	add.w	sl, r7, #1
 80122ac:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80122b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80122b4:	b2ad      	uxth	r5, r5
 80122b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122ba:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80122be:	ea4a 0606 	orr.w	r6, sl, r6
 80122c2:	f105 0a01 	add.w	sl, r5, #1
 80122c6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80122ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80122d2:	ea46 060a 	orr.w	r6, r6, sl
 80122d6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80122da:	e7b4      	b.n	8012246 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80122dc:	b007      	add	sp, #28
 80122de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122e2:	bf00      	nop
 80122e4:	2000a53c 	.word	0x2000a53c

080122e8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80122e8:	4770      	bx	lr

080122ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80122ea:	4770      	bx	lr

080122ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80122ec:	4770      	bx	lr

080122ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80122ee:	4770      	bx	lr

080122f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80122f0:	4770      	bx	lr

080122f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80122f2:	4770      	bx	lr

080122f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80122f4:	4770      	bx	lr

080122f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80122f6:	4770      	bx	lr

080122f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80122f8:	4770      	bx	lr

080122fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80122fa:	4770      	bx	lr

080122fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80122fc:	4770      	bx	lr

080122fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80122fe:	4770      	bx	lr

08012300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012300:	4770      	bx	lr

08012302 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012302:	4770      	bx	lr

08012304 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012304:	4770      	bx	lr

08012306 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012306:	4770      	bx	lr

08012308 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012308:	4770      	bx	lr

0801230a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801230a:	4770      	bx	lr

0801230c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801230c:	4770      	bx	lr

0801230e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801230e:	4770      	bx	lr

08012310 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012310:	4770      	bx	lr

08012312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012312:	4770      	bx	lr

08012314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012314:	4770      	bx	lr

08012316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012316:	4770      	bx	lr

08012318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012318:	4770      	bx	lr

0801231a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801231a:	4770      	bx	lr

0801231c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801231c:	4770      	bx	lr

0801231e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801231e:	4770      	bx	lr

08012320 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012320:	4770      	bx	lr
	...

08012324 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012328:	4692      	mov	sl, r2
 801232a:	4a22      	ldr	r2, [pc, #136]	; (80123b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 801232c:	6812      	ldr	r2, [r2, #0]
 801232e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012332:	2a02      	cmp	r2, #2
 8012334:	b088      	sub	sp, #32
 8012336:	4605      	mov	r5, r0
 8012338:	4689      	mov	r9, r1
 801233a:	d106      	bne.n	801234a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801233c:	4b1e      	ldr	r3, [pc, #120]	; (80123b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801233e:	4a1f      	ldr	r2, [pc, #124]	; (80123bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8012340:	f44f 7158 	mov.w	r1, #864	; 0x360
 8012344:	481e      	ldr	r0, [pc, #120]	; (80123c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 8012346:	f009 fca5 	bl	801bc94 <__assert_func>
 801234a:	ac08      	add	r4, sp, #32
 801234c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8012350:	4620      	mov	r0, r4
 8012352:	f7fd fce3 	bl	800fd1c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012356:	682b      	ldr	r3, [r5, #0]
 8012358:	4606      	mov	r6, r0
 801235a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801235c:	4628      	mov	r0, r5
 801235e:	4798      	blx	r3
 8012360:	4286      	cmp	r6, r0
 8012362:	d004      	beq.n	801236e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012364:	4b17      	ldr	r3, [pc, #92]	; (80123c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8012366:	4a15      	ldr	r2, [pc, #84]	; (80123bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8012368:	f240 3162 	movw	r1, #866	; 0x362
 801236c:	e7ea      	b.n	8012344 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801236e:	4620      	mov	r0, r4
 8012370:	f7fd fc4a 	bl	800fc08 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012374:	4606      	mov	r6, r0
 8012376:	b920      	cbnz	r0, 8012382 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8012378:	4b13      	ldr	r3, [pc, #76]	; (80123c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801237a:	4a10      	ldr	r2, [pc, #64]	; (80123bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801237c:	f44f 7159 	mov.w	r1, #868	; 0x364
 8012380:	e7e0      	b.n	8012344 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012382:	682b      	ldr	r3, [r5, #0]
 8012384:	4620      	mov	r0, r4
 8012386:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801238a:	f7fd fb21 	bl	800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801238e:	4607      	mov	r7, r0
 8012390:	4620      	mov	r0, r4
 8012392:	f7fd fb61 	bl	800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012396:	b23f      	sxth	r7, r7
 8012398:	b200      	sxth	r0, r0
 801239a:	9002      	str	r0, [sp, #8]
 801239c:	e9cd 6700 	strd	r6, r7, [sp]
 80123a0:	a806      	add	r0, sp, #24
 80123a2:	4653      	mov	r3, sl
 80123a4:	464a      	mov	r2, r9
 80123a6:	4629      	mov	r1, r5
 80123a8:	47c0      	blx	r8
 80123aa:	4630      	mov	r0, r6
 80123ac:	b008      	add	sp, #32
 80123ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80123b2:	bf00      	nop
 80123b4:	2000a534 	.word	0x2000a534
 80123b8:	0801f9fa 	.word	0x0801f9fa
 80123bc:	080202f7 	.word	0x080202f7
 80123c0:	0801faac 	.word	0x0801faac
 80123c4:	0801fade 	.word	0x0801fade
 80123c8:	0801fb33 	.word	0x0801fb33

080123cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80123cc:	b508      	push	{r3, lr}
 80123ce:	4b06      	ldr	r3, [pc, #24]	; (80123e8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80123d0:	8818      	ldrh	r0, [r3, #0]
 80123d2:	b928      	cbnz	r0, 80123e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80123d4:	4b05      	ldr	r3, [pc, #20]	; (80123ec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80123d6:	4a06      	ldr	r2, [pc, #24]	; (80123f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80123d8:	4806      	ldr	r0, [pc, #24]	; (80123f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80123da:	2153      	movs	r1, #83	; 0x53
 80123dc:	f009 fc5a 	bl	801bc94 <__assert_func>
 80123e0:	0040      	lsls	r0, r0, #1
 80123e2:	b280      	uxth	r0, r0
 80123e4:	bd08      	pop	{r3, pc}
 80123e6:	bf00      	nop
 80123e8:	2000a52e 	.word	0x2000a52e
 80123ec:	0801fba2 	.word	0x0801fba2
 80123f0:	080201b4 	.word	0x080201b4
 80123f4:	0801fbe4 	.word	0x0801fbe4

080123f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80123f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80123fc:	2300      	movs	r3, #0
 80123fe:	9300      	str	r3, [sp, #0]
 8012400:	4b3d      	ldr	r3, [pc, #244]	; (80124f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8012402:	781b      	ldrb	r3, [r3, #0]
 8012404:	2b00      	cmp	r3, #0
 8012406:	d137      	bne.n	8012478 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8012408:	4a3c      	ldr	r2, [pc, #240]	; (80124fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801240a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801240e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012412:	2b00      	cmp	r3, #0
 8012414:	d132      	bne.n	801247c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8012416:	4b3a      	ldr	r3, [pc, #232]	; (8012500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012418:	f9b3 3000 	ldrsh.w	r3, [r3]
 801241c:	6808      	ldr	r0, [r1, #0]
 801241e:	6849      	ldr	r1, [r1, #4]
 8012420:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012424:	ac02      	add	r4, sp, #8
 8012426:	ab02      	add	r3, sp, #8
 8012428:	c303      	stmia	r3!, {r0, r1}
 801242a:	4669      	mov	r1, sp
 801242c:	4620      	mov	r0, r4
 801242e:	f7fa f8c5 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012432:	4668      	mov	r0, sp
 8012434:	f7fa f89a 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012438:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801243c:	f8bd 2000 	ldrh.w	r2, [sp]
 8012440:	4d30      	ldr	r5, [pc, #192]	; (8012504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8012442:	4413      	add	r3, r2
 8012444:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012448:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801244c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012450:	6828      	ldr	r0, [r5, #0]
 8012452:	4413      	add	r3, r2
 8012454:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012458:	6803      	ldr	r3, [r0, #0]
 801245a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801245c:	4798      	blx	r3
 801245e:	f010 0f01 	tst.w	r0, #1
 8012462:	462f      	mov	r7, r5
 8012464:	d00c      	beq.n	8012480 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8012466:	6828      	ldr	r0, [r5, #0]
 8012468:	6803      	ldr	r3, [r0, #0]
 801246a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801246e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012470:	4798      	blx	r3
 8012472:	b004      	add	sp, #16
 8012474:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012478:	4a21      	ldr	r2, [pc, #132]	; (8012500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801247a:	e7c6      	b.n	801240a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801247c:	4b1f      	ldr	r3, [pc, #124]	; (80124fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801247e:	e7cb      	b.n	8012418 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012480:	6838      	ldr	r0, [r7, #0]
 8012482:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012486:	6803      	ldr	r3, [r0, #0]
 8012488:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801248c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801248e:	4798      	blx	r3
 8012490:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8012494:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012498:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801249c:	fb16 3602 	smlabb	r6, r6, r2, r3
 80124a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80124a4:	6838      	ldr	r0, [r7, #0]
 80124a6:	6803      	ldr	r3, [r0, #0]
 80124a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124aa:	4798      	blx	r3
 80124ac:	4a13      	ldr	r2, [pc, #76]	; (80124fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80124ae:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80124b2:	8813      	ldrh	r3, [r2, #0]
 80124b4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80124b8:	fb03 1404 	mla	r4, r3, r4, r1
 80124bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80124c0:	435d      	muls	r5, r3
 80124c2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80124c6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80124ca:	4691      	mov	r9, r2
 80124cc:	6838      	ldr	r0, [r7, #0]
 80124ce:	42ac      	cmp	r4, r5
 80124d0:	6803      	ldr	r3, [r0, #0]
 80124d2:	d20e      	bcs.n	80124f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80124d4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80124d8:	4632      	mov	r2, r6
 80124da:	4643      	mov	r3, r8
 80124dc:	4621      	mov	r1, r4
 80124de:	47d0      	blx	sl
 80124e0:	f8b9 3000 	ldrh.w	r3, [r9]
 80124e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80124e8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80124ec:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80124f0:	e7ec      	b.n	80124cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80124f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124f4:	4798      	blx	r3
 80124f6:	e7bc      	b.n	8012472 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80124f8:	2000a52c 	.word	0x2000a52c
 80124fc:	2000a52e 	.word	0x2000a52e
 8012500:	2000a530 	.word	0x2000a530
 8012504:	2000a534 	.word	0x2000a534

08012508 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801250c:	b08b      	sub	sp, #44	; 0x2c
 801250e:	460f      	mov	r7, r1
 8012510:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012514:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012518:	4616      	mov	r6, r2
 801251a:	f1bb 0f00 	cmp.w	fp, #0
 801251e:	d049      	beq.n	80125b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012520:	6810      	ldr	r0, [r2, #0]
 8012522:	6851      	ldr	r1, [r2, #4]
 8012524:	ad06      	add	r5, sp, #24
 8012526:	c503      	stmia	r5!, {r0, r1}
 8012528:	6818      	ldr	r0, [r3, #0]
 801252a:	6859      	ldr	r1, [r3, #4]
 801252c:	ad08      	add	r5, sp, #32
 801252e:	c503      	stmia	r5!, {r0, r1}
 8012530:	a806      	add	r0, sp, #24
 8012532:	f7fa f81b 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012536:	4631      	mov	r1, r6
 8012538:	a808      	add	r0, sp, #32
 801253a:	f7fa f83f 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801253e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012542:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012546:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801254a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801254e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012552:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012556:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801255a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801255e:	4f5f      	ldr	r7, [pc, #380]	; (80126dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012560:	440a      	add	r2, r1
 8012562:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012566:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801256a:	6838      	ldr	r0, [r7, #0]
 801256c:	4413      	add	r3, r2
 801256e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012572:	6803      	ldr	r3, [r0, #0]
 8012574:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012576:	4798      	blx	r3
 8012578:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801257c:	46b9      	mov	r9, r7
 801257e:	d01c      	beq.n	80125ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8012580:	f010 0f04 	tst.w	r0, #4
 8012584:	d01d      	beq.n	80125c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012586:	f8d9 0000 	ldr.w	r0, [r9]
 801258a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801258e:	6801      	ldr	r1, [r0, #0]
 8012590:	f8cd b00c 	str.w	fp, [sp, #12]
 8012594:	2700      	movs	r7, #0
 8012596:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801259a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801259e:	9402      	str	r4, [sp, #8]
 80125a0:	b2ad      	uxth	r5, r5
 80125a2:	fa1f f488 	uxth.w	r4, r8
 80125a6:	9501      	str	r5, [sp, #4]
 80125a8:	9400      	str	r4, [sp, #0]
 80125aa:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80125ac:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80125b0:	4631      	mov	r1, r6
 80125b2:	47a0      	blx	r4
 80125b4:	b00b      	add	sp, #44	; 0x2c
 80125b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ba:	b914      	cbnz	r4, 80125c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80125bc:	f010 0f01 	tst.w	r0, #1
 80125c0:	e7e0      	b.n	8012584 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80125c2:	f8d9 0000 	ldr.w	r0, [r9]
 80125c6:	6803      	ldr	r3, [r0, #0]
 80125c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80125ca:	4798      	blx	r3
 80125cc:	4b44      	ldr	r3, [pc, #272]	; (80126e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80125ce:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80125d2:	881a      	ldrh	r2, [r3, #0]
 80125d4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80125d8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80125dc:	fb02 1404 	mla	r4, r2, r4, r1
 80125e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80125e4:	469a      	mov	sl, r3
 80125e6:	fb05 f502 	mul.w	r5, r5, r2
 80125ea:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80125ee:	d059      	beq.n	80126a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80125f0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80125f4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80125f8:	fa1f f28b 	uxth.w	r2, fp
 80125fc:	fa1f f989 	uxth.w	r9, r9
 8012600:	469e      	mov	lr, r3
 8012602:	42ac      	cmp	r4, r5
 8012604:	d264      	bcs.n	80126d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012606:	eb04 0a07 	add.w	sl, r4, r7
 801260a:	4554      	cmp	r4, sl
 801260c:	d23d      	bcs.n	801268a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801260e:	8821      	ldrh	r1, [r4, #0]
 8012610:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012614:	1208      	asrs	r0, r1, #8
 8012616:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801261a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801261e:	fb10 f009 	smulbb	r0, r0, r9
 8012622:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012626:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801262a:	00c9      	lsls	r1, r1, #3
 801262c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012630:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012634:	10d8      	asrs	r0, r3, #3
 8012636:	b2c9      	uxtb	r1, r1
 8012638:	00db      	lsls	r3, r3, #3
 801263a:	fa1f fc8c 	uxth.w	ip, ip
 801263e:	fb1b fb09 	smulbb	fp, fp, r9
 8012642:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8012646:	b2db      	uxtb	r3, r3
 8012648:	fb11 f109 	smulbb	r1, r1, r9
 801264c:	fb00 b002 	mla	r0, r0, r2, fp
 8012650:	fb03 1302 	mla	r3, r3, r2, r1
 8012654:	f10c 0b01 	add.w	fp, ip, #1
 8012658:	b29b      	uxth	r3, r3
 801265a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801265e:	b280      	uxth	r0, r0
 8012660:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8012664:	f103 0c01 	add.w	ip, r3, #1
 8012668:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801266c:	1c43      	adds	r3, r0, #1
 801266e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012672:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012676:	0940      	lsrs	r0, r0, #5
 8012678:	ea4c 0c0b 	orr.w	ip, ip, fp
 801267c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012680:	ea4c 0c00 	orr.w	ip, ip, r0
 8012684:	f824 cb02 	strh.w	ip, [r4], #2
 8012688:	e7bf      	b.n	801260a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801268a:	f8be 3000 	ldrh.w	r3, [lr]
 801268e:	eba3 0308 	sub.w	r3, r3, r8
 8012692:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012696:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801269a:	eba3 0308 	sub.w	r3, r3, r8
 801269e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80126a2:	e7ae      	b.n	8012602 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80126a4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80126a8:	f8d9 0000 	ldr.w	r0, [r9]
 80126ac:	42ac      	cmp	r4, r5
 80126ae:	6803      	ldr	r3, [r0, #0]
 80126b0:	d20e      	bcs.n	80126d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80126b2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80126b6:	4632      	mov	r2, r6
 80126b8:	463b      	mov	r3, r7
 80126ba:	4621      	mov	r1, r4
 80126bc:	47c0      	blx	r8
 80126be:	f8ba 3000 	ldrh.w	r3, [sl]
 80126c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80126c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80126ca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80126ce:	e7eb      	b.n	80126a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80126d0:	4b02      	ldr	r3, [pc, #8]	; (80126dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80126d2:	6818      	ldr	r0, [r3, #0]
 80126d4:	6803      	ldr	r3, [r0, #0]
 80126d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126d8:	4798      	blx	r3
 80126da:	e76b      	b.n	80125b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80126dc:	2000a534 	.word	0x2000a534
 80126e0:	2000a52e 	.word	0x2000a52e

080126e4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80126e4:	b510      	push	{r4, lr}
 80126e6:	2178      	movs	r1, #120	; 0x78
 80126e8:	4604      	mov	r4, r0
 80126ea:	f009 faa5 	bl	801bc38 <_ZdlPvj>
 80126ee:	4620      	mov	r0, r4
 80126f0:	bd10      	pop	{r4, pc}

080126f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80126f2:	b510      	push	{r4, lr}
 80126f4:	2104      	movs	r1, #4
 80126f6:	4604      	mov	r4, r0
 80126f8:	f009 fa9e 	bl	801bc38 <_ZdlPvj>
 80126fc:	4620      	mov	r0, r4
 80126fe:	bd10      	pop	{r4, pc}

08012700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012700:	b510      	push	{r4, lr}
 8012702:	2104      	movs	r1, #4
 8012704:	4604      	mov	r4, r0
 8012706:	f009 fa97 	bl	801bc38 <_ZdlPvj>
 801270a:	4620      	mov	r0, r4
 801270c:	bd10      	pop	{r4, pc}

0801270e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801270e:	b510      	push	{r4, lr}
 8012710:	2104      	movs	r1, #4
 8012712:	4604      	mov	r4, r0
 8012714:	f009 fa90 	bl	801bc38 <_ZdlPvj>
 8012718:	4620      	mov	r0, r4
 801271a:	bd10      	pop	{r4, pc}

0801271c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801271c:	b510      	push	{r4, lr}
 801271e:	2104      	movs	r1, #4
 8012720:	4604      	mov	r4, r0
 8012722:	f009 fa89 	bl	801bc38 <_ZdlPvj>
 8012726:	4620      	mov	r0, r4
 8012728:	bd10      	pop	{r4, pc}

0801272a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801272a:	b510      	push	{r4, lr}
 801272c:	2104      	movs	r1, #4
 801272e:	4604      	mov	r4, r0
 8012730:	f009 fa82 	bl	801bc38 <_ZdlPvj>
 8012734:	4620      	mov	r0, r4
 8012736:	bd10      	pop	{r4, pc}

08012738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012738:	b510      	push	{r4, lr}
 801273a:	2104      	movs	r1, #4
 801273c:	4604      	mov	r4, r0
 801273e:	f009 fa7b 	bl	801bc38 <_ZdlPvj>
 8012742:	4620      	mov	r0, r4
 8012744:	bd10      	pop	{r4, pc}

08012746 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012746:	b510      	push	{r4, lr}
 8012748:	2104      	movs	r1, #4
 801274a:	4604      	mov	r4, r0
 801274c:	f009 fa74 	bl	801bc38 <_ZdlPvj>
 8012750:	4620      	mov	r0, r4
 8012752:	bd10      	pop	{r4, pc}

08012754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012754:	b510      	push	{r4, lr}
 8012756:	2104      	movs	r1, #4
 8012758:	4604      	mov	r4, r0
 801275a:	f009 fa6d 	bl	801bc38 <_ZdlPvj>
 801275e:	4620      	mov	r0, r4
 8012760:	bd10      	pop	{r4, pc}

08012762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012762:	b510      	push	{r4, lr}
 8012764:	2104      	movs	r1, #4
 8012766:	4604      	mov	r4, r0
 8012768:	f009 fa66 	bl	801bc38 <_ZdlPvj>
 801276c:	4620      	mov	r0, r4
 801276e:	bd10      	pop	{r4, pc}

08012770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012770:	b510      	push	{r4, lr}
 8012772:	2104      	movs	r1, #4
 8012774:	4604      	mov	r4, r0
 8012776:	f009 fa5f 	bl	801bc38 <_ZdlPvj>
 801277a:	4620      	mov	r0, r4
 801277c:	bd10      	pop	{r4, pc}

0801277e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801277e:	b510      	push	{r4, lr}
 8012780:	2104      	movs	r1, #4
 8012782:	4604      	mov	r4, r0
 8012784:	f009 fa58 	bl	801bc38 <_ZdlPvj>
 8012788:	4620      	mov	r0, r4
 801278a:	bd10      	pop	{r4, pc}

0801278c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801278c:	b510      	push	{r4, lr}
 801278e:	2104      	movs	r1, #4
 8012790:	4604      	mov	r4, r0
 8012792:	f009 fa51 	bl	801bc38 <_ZdlPvj>
 8012796:	4620      	mov	r0, r4
 8012798:	bd10      	pop	{r4, pc}

0801279a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801279a:	b510      	push	{r4, lr}
 801279c:	2104      	movs	r1, #4
 801279e:	4604      	mov	r4, r0
 80127a0:	f009 fa4a 	bl	801bc38 <_ZdlPvj>
 80127a4:	4620      	mov	r0, r4
 80127a6:	bd10      	pop	{r4, pc}

080127a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80127a8:	b510      	push	{r4, lr}
 80127aa:	2104      	movs	r1, #4
 80127ac:	4604      	mov	r4, r0
 80127ae:	f009 fa43 	bl	801bc38 <_ZdlPvj>
 80127b2:	4620      	mov	r0, r4
 80127b4:	bd10      	pop	{r4, pc}

080127b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80127b6:	b510      	push	{r4, lr}
 80127b8:	2104      	movs	r1, #4
 80127ba:	4604      	mov	r4, r0
 80127bc:	f009 fa3c 	bl	801bc38 <_ZdlPvj>
 80127c0:	4620      	mov	r0, r4
 80127c2:	bd10      	pop	{r4, pc}

080127c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80127c4:	b510      	push	{r4, lr}
 80127c6:	2104      	movs	r1, #4
 80127c8:	4604      	mov	r4, r0
 80127ca:	f009 fa35 	bl	801bc38 <_ZdlPvj>
 80127ce:	4620      	mov	r0, r4
 80127d0:	bd10      	pop	{r4, pc}

080127d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80127d2:	b510      	push	{r4, lr}
 80127d4:	2104      	movs	r1, #4
 80127d6:	4604      	mov	r4, r0
 80127d8:	f009 fa2e 	bl	801bc38 <_ZdlPvj>
 80127dc:	4620      	mov	r0, r4
 80127de:	bd10      	pop	{r4, pc}

080127e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80127e0:	b510      	push	{r4, lr}
 80127e2:	2104      	movs	r1, #4
 80127e4:	4604      	mov	r4, r0
 80127e6:	f009 fa27 	bl	801bc38 <_ZdlPvj>
 80127ea:	4620      	mov	r0, r4
 80127ec:	bd10      	pop	{r4, pc}

080127ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80127ee:	b510      	push	{r4, lr}
 80127f0:	2104      	movs	r1, #4
 80127f2:	4604      	mov	r4, r0
 80127f4:	f009 fa20 	bl	801bc38 <_ZdlPvj>
 80127f8:	4620      	mov	r0, r4
 80127fa:	bd10      	pop	{r4, pc}

080127fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80127fc:	b510      	push	{r4, lr}
 80127fe:	2104      	movs	r1, #4
 8012800:	4604      	mov	r4, r0
 8012802:	f009 fa19 	bl	801bc38 <_ZdlPvj>
 8012806:	4620      	mov	r0, r4
 8012808:	bd10      	pop	{r4, pc}

0801280a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801280a:	b510      	push	{r4, lr}
 801280c:	2104      	movs	r1, #4
 801280e:	4604      	mov	r4, r0
 8012810:	f009 fa12 	bl	801bc38 <_ZdlPvj>
 8012814:	4620      	mov	r0, r4
 8012816:	bd10      	pop	{r4, pc}

08012818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012818:	b510      	push	{r4, lr}
 801281a:	2104      	movs	r1, #4
 801281c:	4604      	mov	r4, r0
 801281e:	f009 fa0b 	bl	801bc38 <_ZdlPvj>
 8012822:	4620      	mov	r0, r4
 8012824:	bd10      	pop	{r4, pc}

08012826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012826:	b510      	push	{r4, lr}
 8012828:	2104      	movs	r1, #4
 801282a:	4604      	mov	r4, r0
 801282c:	f009 fa04 	bl	801bc38 <_ZdlPvj>
 8012830:	4620      	mov	r0, r4
 8012832:	bd10      	pop	{r4, pc}

08012834 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012834:	b510      	push	{r4, lr}
 8012836:	2104      	movs	r1, #4
 8012838:	4604      	mov	r4, r0
 801283a:	f009 f9fd 	bl	801bc38 <_ZdlPvj>
 801283e:	4620      	mov	r0, r4
 8012840:	bd10      	pop	{r4, pc}

08012842 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012842:	b510      	push	{r4, lr}
 8012844:	2104      	movs	r1, #4
 8012846:	4604      	mov	r4, r0
 8012848:	f009 f9f6 	bl	801bc38 <_ZdlPvj>
 801284c:	4620      	mov	r0, r4
 801284e:	bd10      	pop	{r4, pc}

08012850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012850:	b510      	push	{r4, lr}
 8012852:	2104      	movs	r1, #4
 8012854:	4604      	mov	r4, r0
 8012856:	f009 f9ef 	bl	801bc38 <_ZdlPvj>
 801285a:	4620      	mov	r0, r4
 801285c:	bd10      	pop	{r4, pc}

0801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801285e:	b510      	push	{r4, lr}
 8012860:	2104      	movs	r1, #4
 8012862:	4604      	mov	r4, r0
 8012864:	f009 f9e8 	bl	801bc38 <_ZdlPvj>
 8012868:	4620      	mov	r0, r4
 801286a:	bd10      	pop	{r4, pc}

0801286c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801286c:	b510      	push	{r4, lr}
 801286e:	2104      	movs	r1, #4
 8012870:	4604      	mov	r4, r0
 8012872:	f009 f9e1 	bl	801bc38 <_ZdlPvj>
 8012876:	4620      	mov	r0, r4
 8012878:	bd10      	pop	{r4, pc}
	...

0801287c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801287c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801287e:	4606      	mov	r6, r0
 8012880:	b087      	sub	sp, #28
 8012882:	460c      	mov	r4, r1
 8012884:	4617      	mov	r7, r2
 8012886:	461d      	mov	r5, r3
 8012888:	b333      	cbz	r3, 80128d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801288a:	4608      	mov	r0, r1
 801288c:	f7f6 fd73 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012890:	bb10      	cbnz	r0, 80128d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012892:	6820      	ldr	r0, [r4, #0]
 8012894:	6861      	ldr	r1, [r4, #4]
 8012896:	4c1c      	ldr	r4, [pc, #112]	; (8012908 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8012898:	ab04      	add	r3, sp, #16
 801289a:	c303      	stmia	r3!, {r0, r1}
 801289c:	a804      	add	r0, sp, #16
 801289e:	f7f9 fe65 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80128a2:	6820      	ldr	r0, [r4, #0]
 80128a4:	6803      	ldr	r3, [r0, #0]
 80128a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80128a8:	4798      	blx	r3
 80128aa:	2dff      	cmp	r5, #255	; 0xff
 80128ac:	d016      	beq.n	80128dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80128ae:	f010 0f08 	tst.w	r0, #8
 80128b2:	6820      	ldr	r0, [r4, #0]
 80128b4:	d015      	beq.n	80128e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80128b6:	2400      	movs	r4, #0
 80128b8:	6801      	ldr	r1, [r0, #0]
 80128ba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80128be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80128c2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80128c6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80128ca:	9401      	str	r4, [sp, #4]
 80128cc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80128d0:	9400      	str	r4, [sp, #0]
 80128d2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80128d4:	4639      	mov	r1, r7
 80128d6:	47a0      	blx	r4
 80128d8:	b007      	add	sp, #28
 80128da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128dc:	f010 0f02 	tst.w	r0, #2
 80128e0:	e7e7      	b.n	80128b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80128e2:	6803      	ldr	r3, [r0, #0]
 80128e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128e6:	4798      	blx	r3
 80128e8:	4b08      	ldr	r3, [pc, #32]	; (801290c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80128ea:	881a      	ldrh	r2, [r3, #0]
 80128ec:	6833      	ldr	r3, [r6, #0]
 80128ee:	e9cd 7500 	strd	r7, r5, [sp]
 80128f2:	4601      	mov	r1, r0
 80128f4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80128f6:	4630      	mov	r0, r6
 80128f8:	ab04      	add	r3, sp, #16
 80128fa:	47a8      	blx	r5
 80128fc:	6820      	ldr	r0, [r4, #0]
 80128fe:	6803      	ldr	r3, [r0, #0]
 8012900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012902:	4798      	blx	r3
 8012904:	e7e8      	b.n	80128d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012906:	bf00      	nop
 8012908:	2000a534 	.word	0x2000a534
 801290c:	2000a52e 	.word	0x2000a52e

08012910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8012910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012914:	4690      	mov	r8, r2
 8012916:	4a8d      	ldr	r2, [pc, #564]	; (8012b4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 8012918:	6812      	ldr	r2, [r2, #0]
 801291a:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801291e:	b091      	sub	sp, #68	; 0x44
 8012920:	2a02      	cmp	r2, #2
 8012922:	4606      	mov	r6, r0
 8012924:	460d      	mov	r5, r1
 8012926:	461c      	mov	r4, r3
 8012928:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 801292c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8012930:	d106      	bne.n	8012940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 8012932:	4b87      	ldr	r3, [pc, #540]	; (8012b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 8012934:	4a87      	ldr	r2, [pc, #540]	; (8012b54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8012936:	f240 316b 	movw	r1, #875	; 0x36b
 801293a:	4887      	ldr	r0, [pc, #540]	; (8012b58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 801293c:	f009 f9aa 	bl	801bc94 <__assert_func>
 8012940:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8012942:	b923      	cbnz	r3, 801294e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 8012944:	4b85      	ldr	r3, [pc, #532]	; (8012b5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 8012946:	4a83      	ldr	r2, [pc, #524]	; (8012b54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8012948:	f44f 715b 	mov.w	r1, #876	; 0x36c
 801294c:	e7f5      	b.n	801293a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 801294e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012952:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012956:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801295a:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 801295e:	4621      	mov	r1, r4
 8012960:	4648      	mov	r0, r9
 8012962:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012966:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801296a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801296e:	f7f6 fcbf 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 8012972:	4641      	mov	r1, r8
 8012974:	4648      	mov	r0, r9
 8012976:	f7f6 fcbb 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 801297a:	4a79      	ldr	r2, [pc, #484]	; (8012b60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801297c:	f8b2 c000 	ldrh.w	ip, [r2]
 8012980:	4a78      	ldr	r2, [pc, #480]	; (8012b64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 8012982:	8810      	ldrh	r0, [r2, #0]
 8012984:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012988:	2a00      	cmp	r2, #0
 801298a:	fa0f f18c 	sxth.w	r1, ip
 801298e:	fa0f fe80 	sxth.w	lr, r0
 8012992:	da07      	bge.n	80129a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 8012994:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 8012998:	4442      	add	r2, r8
 801299a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801299e:	2200      	movs	r2, #0
 80129a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80129a4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80129a8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80129ac:	1a89      	subs	r1, r1, r2
 80129ae:	4588      	cmp	r8, r1
 80129b0:	bfc4      	itt	gt
 80129b2:	ebac 0102 	subgt.w	r1, ip, r2
 80129b6:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 80129ba:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80129be:	2900      	cmp	r1, #0
 80129c0:	da07      	bge.n	80129d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 80129c2:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 80129c6:	4441      	add	r1, r8
 80129c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80129cc:	2100      	movs	r1, #0
 80129ce:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80129d2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80129d6:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 80129da:	ebae 0e0a 	sub.w	lr, lr, sl
 80129de:	4571      	cmp	r1, lr
 80129e0:	bfc4      	itt	gt
 80129e2:	eba0 010a 	subgt.w	r1, r0, sl
 80129e6:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 80129ea:	495f      	ldr	r1, [pc, #380]	; (8012b68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 80129ec:	7809      	ldrb	r1, [r1, #0]
 80129ee:	b9a9      	cbnz	r1, 8012a1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 80129f0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80129f4:	45e0      	cmp	r8, ip
 80129f6:	bf14      	ite	ne
 80129f8:	2300      	movne	r3, #0
 80129fa:	2301      	moveq	r3, #1
 80129fc:	4648      	mov	r0, r9
 80129fe:	9202      	str	r2, [sp, #8]
 8012a00:	9305      	str	r3, [sp, #20]
 8012a02:	f7f6 fcb8 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a06:	9a02      	ldr	r2, [sp, #8]
 8012a08:	b160      	cbz	r0, 8012a24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8012a0a:	2300      	movs	r3, #0
 8012a0c:	8033      	strh	r3, [r6, #0]
 8012a0e:	8073      	strh	r3, [r6, #2]
 8012a10:	80b3      	strh	r3, [r6, #4]
 8012a12:	4630      	mov	r0, r6
 8012a14:	80f3      	strh	r3, [r6, #6]
 8012a16:	b011      	add	sp, #68	; 0x44
 8012a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a1c:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8012a20:	4580      	cmp	r8, r0
 8012a22:	e7e8      	b.n	80129f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 8012a24:	8821      	ldrh	r1, [r4, #0]
 8012a26:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8012a2a:	9304      	str	r3, [sp, #16]
 8012a2c:	1a52      	subs	r2, r2, r1
 8012a2e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012a32:	9306      	str	r3, [sp, #24]
 8012a34:	b213      	sxth	r3, r2
 8012a36:	9302      	str	r3, [sp, #8]
 8012a38:	8863      	ldrh	r3, [r4, #2]
 8012a3a:	900e      	str	r0, [sp, #56]	; 0x38
 8012a3c:	ebaa 0a03 	sub.w	sl, sl, r3
 8012a40:	fa0f f38a 	sxth.w	r3, sl
 8012a44:	9303      	str	r3, [sp, #12]
 8012a46:	9b02      	ldr	r3, [sp, #8]
 8012a48:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012a4c:	9b03      	ldr	r3, [sp, #12]
 8012a4e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012a52:	9b04      	ldr	r3, [sp, #16]
 8012a54:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012a58:	a90e      	add	r1, sp, #56	; 0x38
 8012a5a:	9b06      	ldr	r3, [sp, #24]
 8012a5c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012a60:	a80c      	add	r0, sp, #48	; 0x30
 8012a62:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8012a66:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8012a6a:	f7f9 fda7 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012a6e:	4648      	mov	r0, r9
 8012a70:	f7f9 fd7c 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012a74:	a80e      	add	r0, sp, #56	; 0x38
 8012a76:	f7f9 fd79 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012a7a:	4b3c      	ldr	r3, [pc, #240]	; (8012b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8012a7c:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8012a80:	881b      	ldrh	r3, [r3, #0]
 8012a82:	9307      	str	r3, [sp, #28]
 8012a84:	682b      	ldr	r3, [r5, #0]
 8012a86:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8012b4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8012a8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a8c:	4628      	mov	r0, r5
 8012a8e:	4798      	blx	r3
 8012a90:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8012a94:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012a98:	4682      	mov	sl, r0
 8012a9a:	fb17 2303 	smlabb	r3, r7, r3, r2
 8012a9e:	f8d8 0000 	ldr.w	r0, [r8]
 8012aa2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012aa4:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 8012aa8:	6803      	ldr	r3, [r0, #0]
 8012aaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012aac:	4798      	blx	r3
 8012aae:	9009      	str	r0, [sp, #36]	; 0x24
 8012ab0:	f8d8 0000 	ldr.w	r0, [r8]
 8012ab4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012ab8:	6802      	ldr	r2, [r0, #0]
 8012aba:	9308      	str	r3, [sp, #32]
 8012abc:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8012abe:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8012ac2:	4790      	blx	r2
 8012ac4:	f010 0f01 	tst.w	r0, #1
 8012ac8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012aca:	d011      	beq.n	8012af0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 8012acc:	f8d8 0000 	ldr.w	r0, [r8]
 8012ad0:	6803      	ldr	r3, [r0, #0]
 8012ad2:	f8cd b000 	str.w	fp, [sp]
 8012ad6:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8012ad8:	e899 0006 	ldmia.w	r9, {r1, r2}
 8012adc:	4623      	mov	r3, r4
 8012ade:	47a8      	blx	r5
 8012ae0:	9b02      	ldr	r3, [sp, #8]
 8012ae2:	8033      	strh	r3, [r6, #0]
 8012ae4:	9b03      	ldr	r3, [sp, #12]
 8012ae6:	8073      	strh	r3, [r6, #2]
 8012ae8:	9b04      	ldr	r3, [sp, #16]
 8012aea:	80b3      	strh	r3, [r6, #4]
 8012aec:	9b06      	ldr	r3, [sp, #24]
 8012aee:	e790      	b.n	8012a12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8012af0:	9a08      	ldr	r2, [sp, #32]
 8012af2:	fb0a f505 	mul.w	r5, sl, r5
 8012af6:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8012afa:	9a05      	ldr	r2, [sp, #20]
 8012afc:	441d      	add	r5, r3
 8012afe:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8012b02:	b162      	cbz	r2, 8012b1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8012b04:	9a07      	ldr	r2, [sp, #28]
 8012b06:	4297      	cmp	r7, r2
 8012b08:	d109      	bne.n	8012b1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8012b0a:	f8d8 0000 	ldr.w	r0, [r8]
 8012b0e:	6802      	ldr	r2, [r0, #0]
 8012b10:	fb03 f30a 	mul.w	r3, r3, sl
 8012b14:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8012b16:	4621      	mov	r1, r4
 8012b18:	462a      	mov	r2, r5
 8012b1a:	47b8      	blx	r7
 8012b1c:	e7e0      	b.n	8012ae0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8012b1e:	437b      	muls	r3, r7
 8012b20:	f8df b028 	ldr.w	fp, [pc, #40]	; 8012b4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8012b24:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8012b28:	007f      	lsls	r7, r7, #1
 8012b2a:	4544      	cmp	r4, r8
 8012b2c:	d2d8      	bcs.n	8012ae0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8012b2e:	f8db 0000 	ldr.w	r0, [fp]
 8012b32:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012b36:	6802      	ldr	r2, [r0, #0]
 8012b38:	4621      	mov	r1, r4
 8012b3a:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8012b3e:	005b      	lsls	r3, r3, #1
 8012b40:	462a      	mov	r2, r5
 8012b42:	47c8      	blx	r9
 8012b44:	4455      	add	r5, sl
 8012b46:	443c      	add	r4, r7
 8012b48:	e7ef      	b.n	8012b2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8012b4a:	bf00      	nop
 8012b4c:	2000a534 	.word	0x2000a534
 8012b50:	0801f9fa 	.word	0x0801f9fa
 8012b54:	08020264 	.word	0x08020264
 8012b58:	0801faac 	.word	0x0801faac
 8012b5c:	0801f9ac 	.word	0x0801f9ac
 8012b60:	2000a528 	.word	0x2000a528
 8012b64:	2000a52a 	.word	0x2000a52a
 8012b68:	2000a52c 	.word	0x2000a52c
 8012b6c:	2000a52e 	.word	0x2000a52e

08012b70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b74:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012b78:	9e08      	ldr	r6, [sp, #32]
 8012b7a:	4688      	mov	r8, r1
 8012b7c:	4614      	mov	r4, r2
 8012b7e:	461d      	mov	r5, r3
 8012b80:	2f00      	cmp	r7, #0
 8012b82:	f000 80b3 	beq.w	8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b86:	4618      	mov	r0, r3
 8012b88:	f7f6 fbf5 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b8c:	2800      	cmp	r0, #0
 8012b8e:	f040 80ad 	bne.w	8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b92:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012b96:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012b9a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012b9e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012ba2:	fb04 1303 	mla	r3, r4, r3, r1
 8012ba6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012baa:	4365      	muls	r5, r4
 8012bac:	2fff      	cmp	r7, #255	; 0xff
 8012bae:	eba4 0200 	sub.w	r2, r4, r0
 8012bb2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012bb6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012bba:	d04b      	beq.n	8012c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8012bbc:	b2bc      	uxth	r4, r7
 8012bbe:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012bc2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012bc6:	fa5f f788 	uxtb.w	r7, r8
 8012bca:	b2f3      	uxtb	r3, r6
 8012bcc:	0040      	lsls	r0, r0, #1
 8012bce:	fb0e fe04 	mul.w	lr, lr, r4
 8012bd2:	4367      	muls	r7, r4
 8012bd4:	4363      	muls	r3, r4
 8012bd6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012bda:	fa1f fc8c 	uxth.w	ip, ip
 8012bde:	42a9      	cmp	r1, r5
 8012be0:	f080 8084 	bcs.w	8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012be4:	eb01 0900 	add.w	r9, r1, r0
 8012be8:	4549      	cmp	r1, r9
 8012bea:	d231      	bcs.n	8012c50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8012bec:	880a      	ldrh	r2, [r1, #0]
 8012bee:	1214      	asrs	r4, r2, #8
 8012bf0:	10d6      	asrs	r6, r2, #3
 8012bf2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012bf6:	00d2      	lsls	r2, r2, #3
 8012bf8:	b2d2      	uxtb	r2, r2
 8012bfa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012bfe:	fb14 f40c 	smulbb	r4, r4, ip
 8012c02:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012c06:	4474      	add	r4, lr
 8012c08:	fb12 f20c 	smulbb	r2, r2, ip
 8012c0c:	b2a4      	uxth	r4, r4
 8012c0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c12:	441a      	add	r2, r3
 8012c14:	b292      	uxth	r2, r2
 8012c16:	f104 0a01 	add.w	sl, r4, #1
 8012c1a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012c1e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012c22:	fb16 f60c 	smulbb	r6, r6, ip
 8012c26:	f102 0a01 	add.w	sl, r2, #1
 8012c2a:	443e      	add	r6, r7
 8012c2c:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012c30:	b2b6      	uxth	r6, r6
 8012c32:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012c36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012c3a:	4322      	orrs	r2, r4
 8012c3c:	1c74      	adds	r4, r6, #1
 8012c3e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012c42:	0976      	lsrs	r6, r6, #5
 8012c44:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012c48:	4332      	orrs	r2, r6
 8012c4a:	f821 2b02 	strh.w	r2, [r1], #2
 8012c4e:	e7cb      	b.n	8012be8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8012c50:	4441      	add	r1, r8
 8012c52:	e7c4      	b.n	8012bde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012c54:	4f26      	ldr	r7, [pc, #152]	; (8012cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8012c56:	0973      	lsrs	r3, r6, #5
 8012c58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c5c:	ea08 0707 	and.w	r7, r8, r7
 8012c60:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012c64:	433b      	orrs	r3, r7
 8012c66:	4333      	orrs	r3, r6
 8012c68:	07e6      	lsls	r6, r4, #31
 8012c6a:	b29b      	uxth	r3, r3
 8012c6c:	d50b      	bpl.n	8012c86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8012c6e:	0040      	lsls	r0, r0, #1
 8012c70:	0052      	lsls	r2, r2, #1
 8012c72:	42a9      	cmp	r1, r5
 8012c74:	d23a      	bcs.n	8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012c76:	180c      	adds	r4, r1, r0
 8012c78:	42a1      	cmp	r1, r4
 8012c7a:	d202      	bcs.n	8012c82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8012c7c:	f821 3b02 	strh.w	r3, [r1], #2
 8012c80:	e7fa      	b.n	8012c78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8012c82:	4411      	add	r1, r2
 8012c84:	e7f5      	b.n	8012c72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8012c86:	078f      	lsls	r7, r1, #30
 8012c88:	d008      	beq.n	8012c9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8012c8a:	0066      	lsls	r6, r4, #1
 8012c8c:	460a      	mov	r2, r1
 8012c8e:	42aa      	cmp	r2, r5
 8012c90:	d202      	bcs.n	8012c98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8012c92:	8013      	strh	r3, [r2, #0]
 8012c94:	4432      	add	r2, r6
 8012c96:	e7fa      	b.n	8012c8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012c98:	3102      	adds	r1, #2
 8012c9a:	3801      	subs	r0, #1
 8012c9c:	07c6      	lsls	r6, r0, #31
 8012c9e:	d50b      	bpl.n	8012cb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8012ca0:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012ca4:	3a01      	subs	r2, #1
 8012ca6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012caa:	0066      	lsls	r6, r4, #1
 8012cac:	42aa      	cmp	r2, r5
 8012cae:	d202      	bcs.n	8012cb6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012cb0:	8013      	strh	r3, [r2, #0]
 8012cb2:	4432      	add	r2, r6
 8012cb4:	e7fa      	b.n	8012cac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8012cb6:	3801      	subs	r0, #1
 8012cb8:	b1c0      	cbz	r0, 8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012cba:	1040      	asrs	r0, r0, #1
 8012cbc:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012cc0:	0080      	lsls	r0, r0, #2
 8012cc2:	0064      	lsls	r4, r4, #1
 8012cc4:	42a9      	cmp	r1, r5
 8012cc6:	d211      	bcs.n	8012cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012cc8:	078a      	lsls	r2, r1, #30
 8012cca:	d006      	beq.n	8012cda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8012ccc:	4b09      	ldr	r3, [pc, #36]	; (8012cf4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8012cce:	4a0a      	ldr	r2, [pc, #40]	; (8012cf8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012cd0:	480a      	ldr	r0, [pc, #40]	; (8012cfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8012cd2:	f240 4137 	movw	r1, #1079	; 0x437
 8012cd6:	f008 ffdd 	bl	801bc94 <__assert_func>
 8012cda:	180e      	adds	r6, r1, r0
 8012cdc:	460a      	mov	r2, r1
 8012cde:	42b2      	cmp	r2, r6
 8012ce0:	d202      	bcs.n	8012ce8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8012ce2:	f842 3b04 	str.w	r3, [r2], #4
 8012ce6:	e7fa      	b.n	8012cde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8012ce8:	4421      	add	r1, r4
 8012cea:	e7eb      	b.n	8012cc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8012cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012cf0:	00fff800 	.word	0x00fff800
 8012cf4:	0801f85d 	.word	0x0801f85d
 8012cf8:	0801feb0 	.word	0x0801feb0
 8012cfc:	0801faac 	.word	0x0801faac

08012d00 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012d00:	2200      	movs	r2, #0
 8012d02:	4910      	ldr	r1, [pc, #64]	; (8012d44 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012d04:	6042      	str	r2, [r0, #4]
 8012d06:	6001      	str	r1, [r0, #0]
 8012d08:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012d0c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012d10:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012d14:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012d18:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012d1c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012d20:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012d24:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012d28:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012d2c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012d30:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012d34:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012d38:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012d3c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012d40:	4770      	bx	lr
 8012d42:	bf00      	nop
 8012d44:	0801fe60 	.word	0x0801fe60

08012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d4c:	460d      	mov	r5, r1
 8012d4e:	b08d      	sub	sp, #52	; 0x34
 8012d50:	4604      	mov	r4, r0
 8012d52:	6808      	ldr	r0, [r1, #0]
 8012d54:	6849      	ldr	r1, [r1, #4]
 8012d56:	4699      	mov	r9, r3
 8012d58:	ab08      	add	r3, sp, #32
 8012d5a:	c303      	stmia	r3!, {r0, r1}
 8012d5c:	6810      	ldr	r0, [r2, #0]
 8012d5e:	6851      	ldr	r1, [r2, #4]
 8012d60:	ab0a      	add	r3, sp, #40	; 0x28
 8012d62:	c303      	stmia	r3!, {r0, r1}
 8012d64:	a808      	add	r0, sp, #32
 8012d66:	f7f9 fc01 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d6a:	4629      	mov	r1, r5
 8012d6c:	a80a      	add	r0, sp, #40	; 0x28
 8012d6e:	f7f9 fc25 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d72:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012d76:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012d7a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012d7e:	4d63      	ldr	r5, [pc, #396]	; (8012f0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012d80:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012d84:	6828      	ldr	r0, [r5, #0]
 8012d86:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012d8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d8e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012d92:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012d96:	440a      	add	r2, r1
 8012d98:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012d9c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012da0:	4413      	add	r3, r2
 8012da2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012da6:	6803      	ldr	r3, [r0, #0]
 8012da8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012daa:	4798      	blx	r3
 8012dac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012db0:	d119      	bne.n	8012de6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012db2:	f010 0f20 	tst.w	r0, #32
 8012db6:	6828      	ldr	r0, [r5, #0]
 8012db8:	d018      	beq.n	8012dec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012dba:	2500      	movs	r5, #0
 8012dbc:	6801      	ldr	r1, [r0, #0]
 8012dbe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012dc2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012dc6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012dca:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012dce:	9502      	str	r5, [sp, #8]
 8012dd0:	b2b6      	uxth	r6, r6
 8012dd2:	fa1f f588 	uxth.w	r5, r8
 8012dd6:	9601      	str	r6, [sp, #4]
 8012dd8:	9500      	str	r5, [sp, #0]
 8012dda:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012ddc:	4621      	mov	r1, r4
 8012dde:	47a8      	blx	r5
 8012de0:	b00d      	add	sp, #52	; 0x34
 8012de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012de6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012dea:	e7e4      	b.n	8012db6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012dec:	6803      	ldr	r3, [r0, #0]
 8012dee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012df0:	4798      	blx	r3
 8012df2:	4947      	ldr	r1, [pc, #284]	; (8012f10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012df4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012df8:	880b      	ldrh	r3, [r1, #0]
 8012dfa:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012dfe:	fb03 5202 	mla	r2, r3, r2, r5
 8012e02:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e06:	4373      	muls	r3, r6
 8012e08:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e0c:	9307      	str	r3, [sp, #28]
 8012e0e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012e12:	9306      	str	r3, [sp, #24]
 8012e14:	468a      	mov	sl, r1
 8012e16:	9b07      	ldr	r3, [sp, #28]
 8012e18:	4298      	cmp	r0, r3
 8012e1a:	d270      	bcs.n	8012efe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012e1c:	9b06      	ldr	r3, [sp, #24]
 8012e1e:	4621      	mov	r1, r4
 8012e20:	eb00 0b03 	add.w	fp, r0, r3
 8012e24:	4558      	cmp	r0, fp
 8012e26:	d25d      	bcs.n	8012ee4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012e28:	f851 4b04 	ldr.w	r4, [r1], #4
 8012e2c:	0e23      	lsrs	r3, r4, #24
 8012e2e:	d014      	beq.n	8012e5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012e30:	2bff      	cmp	r3, #255	; 0xff
 8012e32:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012e36:	d112      	bne.n	8012e5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012e38:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012e3c:	d10f      	bne.n	8012e5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012e3e:	0963      	lsrs	r3, r4, #5
 8012e40:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012e44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012e48:	f02c 0c07 	bic.w	ip, ip, #7
 8012e4c:	ea43 0c0c 	orr.w	ip, r3, ip
 8012e50:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012e54:	ea4c 0404 	orr.w	r4, ip, r4
 8012e58:	8004      	strh	r4, [r0, #0]
 8012e5a:	3002      	adds	r0, #2
 8012e5c:	e7e2      	b.n	8012e24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012e5e:	fb09 f303 	mul.w	r3, r9, r3
 8012e62:	8807      	ldrh	r7, [r0, #0]
 8012e64:	1c5a      	adds	r2, r3, #1
 8012e66:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012e6a:	1212      	asrs	r2, r2, #8
 8012e6c:	123e      	asrs	r6, r7, #8
 8012e6e:	b293      	uxth	r3, r2
 8012e70:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012e74:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012e78:	43d2      	mvns	r2, r2
 8012e7a:	b2d2      	uxtb	r2, r2
 8012e7c:	10fd      	asrs	r5, r7, #3
 8012e7e:	fb1e fe03 	smulbb	lr, lr, r3
 8012e82:	00ff      	lsls	r7, r7, #3
 8012e84:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012e88:	fb06 e602 	mla	r6, r6, r2, lr
 8012e8c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012e90:	b2ff      	uxtb	r7, r7
 8012e92:	fa5f fc8c 	uxtb.w	ip, ip
 8012e96:	b2e4      	uxtb	r4, r4
 8012e98:	b2b6      	uxth	r6, r6
 8012e9a:	fb1c fc03 	smulbb	ip, ip, r3
 8012e9e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012ea2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012ea6:	fb14 f403 	smulbb	r4, r4, r3
 8012eaa:	fb05 c502 	mla	r5, r5, r2, ip
 8012eae:	f106 0e01 	add.w	lr, r6, #1
 8012eb2:	fb07 4702 	mla	r7, r7, r2, r4
 8012eb6:	b2ad      	uxth	r5, r5
 8012eb8:	b2bf      	uxth	r7, r7
 8012eba:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012ebe:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8012ec2:	f105 0c01 	add.w	ip, r5, #1
 8012ec6:	1c7e      	adds	r6, r7, #1
 8012ec8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012ecc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012ed0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012ed4:	096d      	lsrs	r5, r5, #5
 8012ed6:	ea46 060e 	orr.w	r6, r6, lr
 8012eda:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012ede:	432e      	orrs	r6, r5
 8012ee0:	8006      	strh	r6, [r0, #0]
 8012ee2:	e7ba      	b.n	8012e5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012ee4:	f8ba 3000 	ldrh.w	r3, [sl]
 8012ee8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8012eec:	eba3 0308 	sub.w	r3, r3, r8
 8012ef0:	eba4 0408 	sub.w	r4, r4, r8
 8012ef4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ef8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012efc:	e78b      	b.n	8012e16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012efe:	4b03      	ldr	r3, [pc, #12]	; (8012f0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012f00:	6818      	ldr	r0, [r3, #0]
 8012f02:	6803      	ldr	r3, [r0, #0]
 8012f04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f06:	4798      	blx	r3
 8012f08:	e76a      	b.n	8012de0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012f0a:	bf00      	nop
 8012f0c:	2000a534 	.word	0x2000a534
 8012f10:	2000a52e 	.word	0x2000a52e

08012f14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8012f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f18:	460c      	mov	r4, r1
 8012f1a:	b085      	sub	sp, #20
 8012f1c:	6810      	ldr	r0, [r2, #0]
 8012f1e:	6851      	ldr	r1, [r2, #4]
 8012f20:	466d      	mov	r5, sp
 8012f22:	c503      	stmia	r5!, {r0, r1}
 8012f24:	6818      	ldr	r0, [r3, #0]
 8012f26:	6859      	ldr	r1, [r3, #4]
 8012f28:	4616      	mov	r6, r2
 8012f2a:	c503      	stmia	r5!, {r0, r1}
 8012f2c:	4668      	mov	r0, sp
 8012f2e:	f7f9 fb1d 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f32:	4631      	mov	r1, r6
 8012f34:	a802      	add	r0, sp, #8
 8012f36:	f7f9 fb41 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f3a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012f3e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012f42:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012f46:	4d28      	ldr	r5, [pc, #160]	; (8012fe8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8012f48:	4e28      	ldr	r6, [pc, #160]	; (8012fec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8012f4a:	6828      	ldr	r0, [r5, #0]
 8012f4c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012f50:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8012f54:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012f58:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012f5c:	f8bd 1000 	ldrh.w	r1, [sp]
 8012f60:	440a      	add	r2, r1
 8012f62:	f8ad 2008 	strh.w	r2, [sp, #8]
 8012f66:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012f6a:	4413      	add	r3, r2
 8012f6c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012f70:	6803      	ldr	r3, [r0, #0]
 8012f72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012f74:	4798      	blx	r3
 8012f76:	8833      	ldrh	r3, [r6, #0]
 8012f78:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012f7c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012f80:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8012ff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012f84:	fb03 1202 	mla	r2, r3, r2, r1
 8012f88:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012f8c:	fb08 f303 	mul.w	r3, r8, r3
 8012f90:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012f94:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8012f98:	4298      	cmp	r0, r3
 8012f9a:	d21d      	bcs.n	8012fd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012f9c:	eb00 080c 	add.w	r8, r0, ip
 8012fa0:	4540      	cmp	r0, r8
 8012fa2:	d20f      	bcs.n	8012fc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8012fa4:	f854 1b04 	ldr.w	r1, [r4], #4
 8012fa8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8012fac:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8012fb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012fb4:	ea42 0209 	orr.w	r2, r2, r9
 8012fb8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012fbc:	430a      	orrs	r2, r1
 8012fbe:	f820 2b02 	strh.w	r2, [r0], #2
 8012fc2:	e7ed      	b.n	8012fa0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8012fc4:	8832      	ldrh	r2, [r6, #0]
 8012fc6:	1bd2      	subs	r2, r2, r7
 8012fc8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012fcc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012fd0:	1bd2      	subs	r2, r2, r7
 8012fd2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8012fd6:	e7df      	b.n	8012f98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8012fd8:	6828      	ldr	r0, [r5, #0]
 8012fda:	6803      	ldr	r3, [r0, #0]
 8012fdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fde:	4798      	blx	r3
 8012fe0:	b005      	add	sp, #20
 8012fe2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012fe6:	bf00      	nop
 8012fe8:	2000a534 	.word	0x2000a534
 8012fec:	2000a52e 	.word	0x2000a52e
 8012ff0:	fffff800 	.word	0xfffff800

08012ff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012ff8:	460e      	mov	r6, r1
 8012ffa:	b08e      	sub	sp, #56	; 0x38
 8012ffc:	4604      	mov	r4, r0
 8012ffe:	6808      	ldr	r0, [r1, #0]
 8013000:	6849      	ldr	r1, [r1, #4]
 8013002:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80131dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013006:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80131e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801300a:	461d      	mov	r5, r3
 801300c:	ab0a      	add	r3, sp, #40	; 0x28
 801300e:	c303      	stmia	r3!, {r0, r1}
 8013010:	6810      	ldr	r0, [r2, #0]
 8013012:	6851      	ldr	r1, [r2, #4]
 8013014:	ab0c      	add	r3, sp, #48	; 0x30
 8013016:	c303      	stmia	r3!, {r0, r1}
 8013018:	a80a      	add	r0, sp, #40	; 0x28
 801301a:	f7f9 faa7 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801301e:	4631      	mov	r1, r6
 8013020:	a80c      	add	r0, sp, #48	; 0x30
 8013022:	f7f9 facb 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013026:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801302a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801302e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013032:	f8d8 0000 	ldr.w	r0, [r8]
 8013036:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801303a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801303e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013042:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013046:	440c      	add	r4, r1
 8013048:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801304c:	440a      	add	r2, r1
 801304e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8013052:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8013056:	4413      	add	r3, r2
 8013058:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801305c:	6803      	ldr	r3, [r0, #0]
 801305e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013060:	4798      	blx	r3
 8013062:	2dff      	cmp	r5, #255	; 0xff
 8013064:	d124      	bne.n	80130b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8013066:	f010 0f01 	tst.w	r0, #1
 801306a:	f8d8 0000 	ldr.w	r0, [r8]
 801306e:	d022      	beq.n	80130b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8013070:	2100      	movs	r1, #0
 8013072:	f8d0 c000 	ldr.w	ip, [r0]
 8013076:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801307a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801307e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8013082:	f04f 0e01 	mov.w	lr, #1
 8013086:	f8cd e018 	str.w	lr, [sp, #24]
 801308a:	f8b9 e000 	ldrh.w	lr, [r9]
 801308e:	9503      	str	r5, [sp, #12]
 8013090:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8013094:	b2b6      	uxth	r6, r6
 8013096:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801309a:	9102      	str	r1, [sp, #8]
 801309c:	b2bf      	uxth	r7, r7
 801309e:	9601      	str	r6, [sp, #4]
 80130a0:	9700      	str	r7, [sp, #0]
 80130a2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80130a6:	4621      	mov	r1, r4
 80130a8:	47a8      	blx	r5
 80130aa:	b00e      	add	sp, #56	; 0x38
 80130ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80130b0:	f010 0f04 	tst.w	r0, #4
 80130b4:	e7d9      	b.n	801306a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80130b6:	6803      	ldr	r3, [r0, #0]
 80130b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130ba:	4798      	blx	r3
 80130bc:	f8b9 3000 	ldrh.w	r3, [r9]
 80130c0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80130c4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80130c8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80130cc:	fb03 1202 	mla	r2, r3, r2, r1
 80130d0:	ebac 0c07 	sub.w	ip, ip, r7
 80130d4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80130d8:	435e      	muls	r6, r3
 80130da:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80130de:	2dff      	cmp	r5, #255	; 0xff
 80130e0:	eba3 0707 	sub.w	r7, r3, r7
 80130e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80130e8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80130ec:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80130f0:	d049      	beq.n	8013186 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80130f2:	43eb      	mvns	r3, r5
 80130f4:	fa1f f985 	uxth.w	r9, r5
 80130f8:	b2db      	uxtb	r3, r3
 80130fa:	42b0      	cmp	r0, r6
 80130fc:	d266      	bcs.n	80131cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80130fe:	eb00 0a0e 	add.w	sl, r0, lr
 8013102:	4550      	cmp	r0, sl
 8013104:	4621      	mov	r1, r4
 8013106:	f104 0403 	add.w	r4, r4, #3
 801310a:	d25b      	bcs.n	80131c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801310c:	8802      	ldrh	r2, [r0, #0]
 801310e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013112:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013116:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801311a:	fb11 f109 	smulbb	r1, r1, r9
 801311e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8013122:	10d5      	asrs	r5, r2, #3
 8013124:	fb08 1803 	mla	r8, r8, r3, r1
 8013128:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801312c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013130:	fb11 f109 	smulbb	r1, r1, r9
 8013134:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013138:	fb05 1503 	mla	r5, r5, r3, r1
 801313c:	00d2      	lsls	r2, r2, #3
 801313e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8013142:	b2d2      	uxtb	r2, r2
 8013144:	fb11 f109 	smulbb	r1, r1, r9
 8013148:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801314c:	fa1f f888 	uxth.w	r8, r8
 8013150:	fb02 1203 	mla	r2, r2, r3, r1
 8013154:	b292      	uxth	r2, r2
 8013156:	f108 0101 	add.w	r1, r8, #1
 801315a:	b2ad      	uxth	r5, r5
 801315c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8013160:	1c51      	adds	r1, r2, #1
 8013162:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013166:	1c69      	adds	r1, r5, #1
 8013168:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801316c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8013170:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013174:	096d      	lsrs	r5, r5, #5
 8013176:	ea42 0208 	orr.w	r2, r2, r8
 801317a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801317e:	432a      	orrs	r2, r5
 8013180:	f820 2b02 	strh.w	r2, [r0], #2
 8013184:	e7bd      	b.n	8013102 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8013186:	4a14      	ldr	r2, [pc, #80]	; (80131d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8013188:	42b0      	cmp	r0, r6
 801318a:	d21f      	bcs.n	80131cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801318c:	eb00 050e 	add.w	r5, r0, lr
 8013190:	42a8      	cmp	r0, r5
 8013192:	4621      	mov	r1, r4
 8013194:	f104 0403 	add.w	r4, r4, #3
 8013198:	d210      	bcs.n	80131bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801319a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801319e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80131a2:	00db      	lsls	r3, r3, #3
 80131a4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80131a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80131ac:	430b      	orrs	r3, r1
 80131ae:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80131b2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80131b6:	f820 3b02 	strh.w	r3, [r0], #2
 80131ba:	e7e9      	b.n	8013190 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80131bc:	4438      	add	r0, r7
 80131be:	eb01 040c 	add.w	r4, r1, ip
 80131c2:	e7e1      	b.n	8013188 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80131c4:	4438      	add	r0, r7
 80131c6:	eb01 040c 	add.w	r4, r1, ip
 80131ca:	e796      	b.n	80130fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80131cc:	4b03      	ldr	r3, [pc, #12]	; (80131dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80131ce:	6818      	ldr	r0, [r3, #0]
 80131d0:	6803      	ldr	r3, [r0, #0]
 80131d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131d4:	4798      	blx	r3
 80131d6:	e768      	b.n	80130aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80131d8:	fffff800 	.word	0xfffff800
 80131dc:	2000a534 	.word	0x2000a534
 80131e0:	2000a52e 	.word	0x2000a52e

080131e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80131e4:	b570      	push	{r4, r5, r6, lr}
 80131e6:	9c04      	ldr	r4, [sp, #16]
 80131e8:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80131ec:	4605      	mov	r5, r0
 80131ee:	4608      	mov	r0, r1
 80131f0:	4619      	mov	r1, r3
 80131f2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80131f6:	2a0d      	cmp	r2, #13
 80131f8:	d825      	bhi.n	8013246 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 80131fa:	e8df f002 	tbb	[pc, r2]
 80131fe:	1807      	.short	0x1807
 8013200:	1d1d1d13 	.word	0x1d1d1d13
 8013204:	1d1d1d1d 	.word	0x1d1d1d1d
 8013208:	1d1d1d1d 	.word	0x1d1d1d1d
 801320c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013210:	682a      	ldr	r2, [r5, #0]
 8013212:	68d6      	ldr	r6, [r2, #12]
 8013214:	4623      	mov	r3, r4
 8013216:	460a      	mov	r2, r1
 8013218:	46b4      	mov	ip, r6
 801321a:	4601      	mov	r1, r0
 801321c:	4628      	mov	r0, r5
 801321e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013222:	4760      	bx	ip
 8013224:	4622      	mov	r2, r4
 8013226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801322a:	f7ff bd8d 	b.w	8012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801322e:	4622      	mov	r2, r4
 8013230:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013234:	f7ff bede 	b.w	8012ff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013238:	4b03      	ldr	r3, [pc, #12]	; (8013248 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801323a:	4a04      	ldr	r2, [pc, #16]	; (801324c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801323c:	4804      	ldr	r0, [pc, #16]	; (8013250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801323e:	f240 3159 	movw	r1, #857	; 0x359
 8013242:	f008 fd27 	bl	801bc94 <__assert_func>
 8013246:	bd70      	pop	{r4, r5, r6, pc}
 8013248:	0801fb71 	.word	0x0801fb71
 801324c:	0802037d 	.word	0x0802037d
 8013250:	0801faac 	.word	0x0801faac

08013254 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013258:	b093      	sub	sp, #76	; 0x4c
 801325a:	880e      	ldrh	r6, [r1, #0]
 801325c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013260:	4681      	mov	r9, r0
 8013262:	4688      	mov	r8, r1
 8013264:	4615      	mov	r5, r2
 8013266:	b136      	cbz	r6, 8013276 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8013268:	4b70      	ldr	r3, [pc, #448]	; (801342c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801326a:	4a71      	ldr	r2, [pc, #452]	; (8013430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801326c:	4871      	ldr	r0, [pc, #452]	; (8013434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801326e:	f44f 71c3 	mov.w	r1, #390	; 0x186
 8013272:	f008 fd0f 	bl	801bc94 <__assert_func>
 8013276:	6810      	ldr	r0, [r2, #0]
 8013278:	6851      	ldr	r1, [r2, #4]
 801327a:	4f6f      	ldr	r7, [pc, #444]	; (8013438 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801327c:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801343c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8013280:	ac0e      	add	r4, sp, #56	; 0x38
 8013282:	c403      	stmia	r4!, {r0, r1}
 8013284:	6818      	ldr	r0, [r3, #0]
 8013286:	6859      	ldr	r1, [r3, #4]
 8013288:	ac10      	add	r4, sp, #64	; 0x40
 801328a:	c403      	stmia	r4!, {r0, r1}
 801328c:	a80e      	add	r0, sp, #56	; 0x38
 801328e:	f7f9 f96d 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013292:	4629      	mov	r1, r5
 8013294:	a810      	add	r0, sp, #64	; 0x40
 8013296:	f7f9 f991 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801329a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801329e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80132a2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80132a6:	6838      	ldr	r0, [r7, #0]
 80132a8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80132ac:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80132b0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80132b4:	4489      	add	r9, r1
 80132b6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80132ba:	440a      	add	r2, r1
 80132bc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80132c0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80132c4:	4413      	add	r3, r2
 80132c6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80132ca:	6803      	ldr	r3, [r0, #0]
 80132cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80132ce:	4798      	blx	r3
 80132d0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80132d4:	6838      	ldr	r0, [r7, #0]
 80132d6:	d01d      	beq.n	8013314 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80132d8:	6802      	ldr	r2, [r0, #0]
 80132da:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80132de:	e9cd 6608 	strd	r6, r6, [sp, #32]
 80132e2:	210b      	movs	r1, #11
 80132e4:	9107      	str	r1, [sp, #28]
 80132e6:	f8bb 1000 	ldrh.w	r1, [fp]
 80132ea:	9106      	str	r1, [sp, #24]
 80132ec:	2101      	movs	r1, #1
 80132ee:	e9cd a104 	strd	sl, r1, [sp, #16]
 80132f2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80132f6:	9103      	str	r1, [sp, #12]
 80132f8:	b2a4      	uxth	r4, r4
 80132fa:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80132fe:	9100      	str	r1, [sp, #0]
 8013300:	b2ad      	uxth	r5, r5
 8013302:	9502      	str	r5, [sp, #8]
 8013304:	9401      	str	r4, [sp, #4]
 8013306:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8013308:	4649      	mov	r1, r9
 801330a:	4642      	mov	r2, r8
 801330c:	47a0      	blx	r4
 801330e:	b013      	add	sp, #76	; 0x4c
 8013310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013314:	6803      	ldr	r3, [r0, #0]
 8013316:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013318:	4798      	blx	r3
 801331a:	f8bb 3000 	ldrh.w	r3, [fp]
 801331e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8013322:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8013326:	fb03 1202 	mla	r2, r3, r2, r1
 801332a:	435d      	muls	r5, r3
 801332c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013330:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8013334:	920c      	str	r2, [sp, #48]	; 0x30
 8013336:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801333a:	1b12      	subs	r2, r2, r4
 801333c:	920d      	str	r2, [sp, #52]	; 0x34
 801333e:	0062      	lsls	r2, r4, #1
 8013340:	1b1c      	subs	r4, r3, r4
 8013342:	0063      	lsls	r3, r4, #1
 8013344:	920a      	str	r2, [sp, #40]	; 0x28
 8013346:	930b      	str	r3, [sp, #44]	; 0x2c
 8013348:	f04f 0e04 	mov.w	lr, #4
 801334c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801334e:	4298      	cmp	r0, r3
 8013350:	d266      	bcs.n	8013420 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 8013352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013354:	eb00 0b03 	add.w	fp, r0, r3
 8013358:	4558      	cmp	r0, fp
 801335a:	d25c      	bcs.n	8013416 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801335c:	f819 3b01 	ldrb.w	r3, [r9], #1
 8013360:	fb1e e303 	smlabb	r3, lr, r3, lr
 8013364:	f858 2003 	ldr.w	r2, [r8, r3]
 8013368:	0e11      	lsrs	r1, r2, #24
 801336a:	d012      	beq.n	8013392 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801336c:	29ff      	cmp	r1, #255	; 0xff
 801336e:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8013372:	d110      	bne.n	8013396 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8013374:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013378:	d10d      	bne.n	8013396 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801337a:	0953      	lsrs	r3, r2, #5
 801337c:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8013380:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013384:	f027 0707 	bic.w	r7, r7, #7
 8013388:	431f      	orrs	r7, r3
 801338a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801338e:	433a      	orrs	r2, r7
 8013390:	8002      	strh	r2, [r0, #0]
 8013392:	3002      	adds	r0, #2
 8013394:	e7e0      	b.n	8013358 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 8013396:	fb0a f101 	mul.w	r1, sl, r1
 801339a:	8806      	ldrh	r6, [r0, #0]
 801339c:	1c4b      	adds	r3, r1, #1
 801339e:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80133a2:	1235      	asrs	r5, r6, #8
 80133a4:	10f4      	asrs	r4, r6, #3
 80133a6:	121b      	asrs	r3, r3, #8
 80133a8:	00f6      	lsls	r6, r6, #3
 80133aa:	b299      	uxth	r1, r3
 80133ac:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80133b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80133b4:	b2f6      	uxtb	r6, r6
 80133b6:	43db      	mvns	r3, r3
 80133b8:	b2d2      	uxtb	r2, r2
 80133ba:	b2db      	uxtb	r3, r3
 80133bc:	fb1c fc01 	smulbb	ip, ip, r1
 80133c0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80133c4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80133c8:	fb12 f201 	smulbb	r2, r2, r1
 80133cc:	fb05 c503 	mla	r5, r5, r3, ip
 80133d0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80133d4:	b2ff      	uxtb	r7, r7
 80133d6:	fb06 2203 	mla	r2, r6, r3, r2
 80133da:	b2ad      	uxth	r5, r5
 80133dc:	fb17 f701 	smulbb	r7, r7, r1
 80133e0:	b292      	uxth	r2, r2
 80133e2:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80133e6:	fb04 7403 	mla	r4, r4, r3, r7
 80133ea:	f105 0c01 	add.w	ip, r5, #1
 80133ee:	1c57      	adds	r7, r2, #1
 80133f0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80133f4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80133f8:	b2a4      	uxth	r4, r4
 80133fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80133fe:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013402:	433d      	orrs	r5, r7
 8013404:	1c67      	adds	r7, r4, #1
 8013406:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801340a:	0964      	lsrs	r4, r4, #5
 801340c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013410:	4325      	orrs	r5, r4
 8013412:	8005      	strh	r5, [r0, #0]
 8013414:	e7bd      	b.n	8013392 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013416:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013418:	4418      	add	r0, r3
 801341a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801341c:	4499      	add	r9, r3
 801341e:	e795      	b.n	801334c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8013420:	4b05      	ldr	r3, [pc, #20]	; (8013438 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013422:	6818      	ldr	r0, [r3, #0]
 8013424:	6803      	ldr	r3, [r0, #0]
 8013426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013428:	4798      	blx	r3
 801342a:	e770      	b.n	801330e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801342c:	0801f95c 	.word	0x0801f95c
 8013430:	080200bb 	.word	0x080200bb
 8013434:	0801faac 	.word	0x0801faac
 8013438:	2000a534 	.word	0x2000a534
 801343c:	2000a52e 	.word	0x2000a52e

08013440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013444:	4614      	mov	r4, r2
 8013446:	880a      	ldrh	r2, [r1, #0]
 8013448:	b087      	sub	sp, #28
 801344a:	2a02      	cmp	r2, #2
 801344c:	4680      	mov	r8, r0
 801344e:	460d      	mov	r5, r1
 8013450:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013454:	d006      	beq.n	8013464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8013456:	4b63      	ldr	r3, [pc, #396]	; (80135e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8013458:	4a63      	ldr	r2, [pc, #396]	; (80135e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801345a:	4864      	ldr	r0, [pc, #400]	; (80135ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801345c:	f240 11dd 	movw	r1, #477	; 0x1dd
 8013460:	f008 fc18 	bl	801bc94 <__assert_func>
 8013464:	2e00      	cmp	r6, #0
 8013466:	f000 80b9 	beq.w	80135dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801346a:	6820      	ldr	r0, [r4, #0]
 801346c:	6861      	ldr	r1, [r4, #4]
 801346e:	af02      	add	r7, sp, #8
 8013470:	c703      	stmia	r7!, {r0, r1}
 8013472:	6818      	ldr	r0, [r3, #0]
 8013474:	6859      	ldr	r1, [r3, #4]
 8013476:	af04      	add	r7, sp, #16
 8013478:	c703      	stmia	r7!, {r0, r1}
 801347a:	a802      	add	r0, sp, #8
 801347c:	f7f9 f876 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013480:	4621      	mov	r1, r4
 8013482:	a804      	add	r0, sp, #16
 8013484:	f7f9 f89a 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013488:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801348c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013490:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8013494:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8013498:	fb14 2103 	smlabb	r1, r4, r3, r2
 801349c:	eb08 0401 	add.w	r4, r8, r1
 80134a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80134a4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80134a8:	440a      	add	r2, r1
 80134aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80134ae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80134b2:	4413      	add	r3, r2
 80134b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80134b8:	4b4d      	ldr	r3, [pc, #308]	; (80135f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80134ba:	6818      	ldr	r0, [r3, #0]
 80134bc:	6803      	ldr	r3, [r0, #0]
 80134be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134c0:	4798      	blx	r3
 80134c2:	4b4c      	ldr	r3, [pc, #304]	; (80135f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80134c4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80134c8:	881a      	ldrh	r2, [r3, #0]
 80134ca:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80134ce:	2eff      	cmp	r6, #255	; 0xff
 80134d0:	fb02 c101 	mla	r1, r2, r1, ip
 80134d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80134d8:	fb02 f207 	mul.w	r2, r2, r7
 80134dc:	f105 0104 	add.w	r1, r5, #4
 80134e0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80134e4:	461d      	mov	r5, r3
 80134e6:	d05a      	beq.n	801359e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80134e8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80134ec:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80134f0:	b2b6      	uxth	r6, r6
 80134f2:	fa1f fe8e 	uxth.w	lr, lr
 80134f6:	9301      	str	r3, [sp, #4]
 80134f8:	4282      	cmp	r2, r0
 80134fa:	d96a      	bls.n	80135d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80134fc:	eb00 0b0a 	add.w	fp, r0, sl
 8013500:	4583      	cmp	fp, r0
 8013502:	d940      	bls.n	8013586 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8013504:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013508:	8805      	ldrh	r5, [r0, #0]
 801350a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801350e:	122f      	asrs	r7, r5, #8
 8013510:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013514:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013518:	fb17 f70e 	smulbb	r7, r7, lr
 801351c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013520:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013524:	00ed      	lsls	r5, r5, #3
 8013526:	fb0c 7c06 	mla	ip, ip, r6, r7
 801352a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801352e:	10df      	asrs	r7, r3, #3
 8013530:	b2ed      	uxtb	r5, r5
 8013532:	00db      	lsls	r3, r3, #3
 8013534:	fa1f fc8c 	uxth.w	ip, ip
 8013538:	fb19 f90e 	smulbb	r9, r9, lr
 801353c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013540:	b2db      	uxtb	r3, r3
 8013542:	fb15 f50e 	smulbb	r5, r5, lr
 8013546:	fb07 9706 	mla	r7, r7, r6, r9
 801354a:	fb03 5306 	mla	r3, r3, r6, r5
 801354e:	f10c 0901 	add.w	r9, ip, #1
 8013552:	b29b      	uxth	r3, r3
 8013554:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013558:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801355c:	f103 0c01 	add.w	ip, r3, #1
 8013560:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013564:	b2bf      	uxth	r7, r7
 8013566:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801356a:	ea4c 0c09 	orr.w	ip, ip, r9
 801356e:	f107 0901 	add.w	r9, r7, #1
 8013572:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8013576:	097f      	lsrs	r7, r7, #5
 8013578:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801357c:	ea4c 0c07 	orr.w	ip, ip, r7
 8013580:	f820 cb02 	strh.w	ip, [r0], #2
 8013584:	e7bc      	b.n	8013500 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013586:	9b01      	ldr	r3, [sp, #4]
 8013588:	881b      	ldrh	r3, [r3, #0]
 801358a:	eba3 0308 	sub.w	r3, r3, r8
 801358e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013592:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013596:	eba3 0308 	sub.w	r3, r3, r8
 801359a:	441c      	add	r4, r3
 801359c:	e7ac      	b.n	80134f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801359e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80135a2:	4282      	cmp	r2, r0
 80135a4:	d915      	bls.n	80135d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80135a6:	eb00 060a 	add.w	r6, r0, sl
 80135aa:	4286      	cmp	r6, r0
 80135ac:	d906      	bls.n	80135bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80135ae:	f814 3b01 	ldrb.w	r3, [r4], #1
 80135b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80135b6:	f820 3b02 	strh.w	r3, [r0], #2
 80135ba:	e7f6      	b.n	80135aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80135bc:	882b      	ldrh	r3, [r5, #0]
 80135be:	eba3 0308 	sub.w	r3, r3, r8
 80135c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80135ca:	eba3 0308 	sub.w	r3, r3, r8
 80135ce:	441c      	add	r4, r3
 80135d0:	e7e7      	b.n	80135a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80135d2:	4b07      	ldr	r3, [pc, #28]	; (80135f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80135d4:	6818      	ldr	r0, [r3, #0]
 80135d6:	6803      	ldr	r3, [r0, #0]
 80135d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135da:	4798      	blx	r3
 80135dc:	b007      	add	sp, #28
 80135de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135e2:	bf00      	nop
 80135e4:	0801f88c 	.word	0x0801f88c
 80135e8:	0801ff25 	.word	0x0801ff25
 80135ec:	0801faac 	.word	0x0801faac
 80135f0:	2000a534 	.word	0x2000a534
 80135f4:	2000a52e 	.word	0x2000a52e

080135f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80135f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135fc:	f8b1 9000 	ldrh.w	r9, [r1]
 8013600:	b091      	sub	sp, #68	; 0x44
 8013602:	f1b9 0f01 	cmp.w	r9, #1
 8013606:	4604      	mov	r4, r0
 8013608:	460f      	mov	r7, r1
 801360a:	4690      	mov	r8, r2
 801360c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8013610:	d006      	beq.n	8013620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8013612:	4b84      	ldr	r3, [pc, #528]	; (8013824 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8013614:	4a84      	ldr	r2, [pc, #528]	; (8013828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8013616:	4885      	ldr	r0, [pc, #532]	; (801382c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8013618:	f240 212b 	movw	r1, #555	; 0x22b
 801361c:	f008 fb3a 	bl	801bc94 <__assert_func>
 8013620:	2d00      	cmp	r5, #0
 8013622:	d04f      	beq.n	80136c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013624:	6810      	ldr	r0, [r2, #0]
 8013626:	6851      	ldr	r1, [r2, #4]
 8013628:	f8df b208 	ldr.w	fp, [pc, #520]	; 8013834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801362c:	ae0c      	add	r6, sp, #48	; 0x30
 801362e:	c603      	stmia	r6!, {r0, r1}
 8013630:	6818      	ldr	r0, [r3, #0]
 8013632:	6859      	ldr	r1, [r3, #4]
 8013634:	ae0e      	add	r6, sp, #56	; 0x38
 8013636:	c603      	stmia	r6!, {r0, r1}
 8013638:	a80c      	add	r0, sp, #48	; 0x30
 801363a:	f7f8 ff97 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801363e:	4641      	mov	r1, r8
 8013640:	a80e      	add	r0, sp, #56	; 0x38
 8013642:	f7f8 ffbb 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013646:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801364a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801364e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013652:	f8db 0000 	ldr.w	r0, [fp]
 8013656:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801365a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801365e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8013838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8013662:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013666:	440c      	add	r4, r1
 8013668:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801366c:	440a      	add	r2, r1
 801366e:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013672:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013676:	4413      	add	r3, r2
 8013678:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801367c:	6803      	ldr	r3, [r0, #0]
 801367e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013680:	4798      	blx	r3
 8013682:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013686:	f8db 0000 	ldr.w	r0, [fp]
 801368a:	d01e      	beq.n	80136ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801368c:	2200      	movs	r2, #0
 801368e:	6801      	ldr	r1, [r0, #0]
 8013690:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013694:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013698:	220b      	movs	r2, #11
 801369a:	9207      	str	r2, [sp, #28]
 801369c:	f8b8 2000 	ldrh.w	r2, [r8]
 80136a0:	9504      	str	r5, [sp, #16]
 80136a2:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80136a6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80136aa:	9203      	str	r2, [sp, #12]
 80136ac:	fa1f f28a 	uxth.w	r2, sl
 80136b0:	9202      	str	r2, [sp, #8]
 80136b2:	b2b6      	uxth	r6, r6
 80136b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80136b8:	9200      	str	r2, [sp, #0]
 80136ba:	9601      	str	r6, [sp, #4]
 80136bc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80136be:	463a      	mov	r2, r7
 80136c0:	4621      	mov	r1, r4
 80136c2:	47a8      	blx	r5
 80136c4:	b011      	add	sp, #68	; 0x44
 80136c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136ca:	6803      	ldr	r3, [r0, #0]
 80136cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80136ce:	4798      	blx	r3
 80136d0:	f8b8 2000 	ldrh.w	r2, [r8]
 80136d4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80136d8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80136dc:	2dff      	cmp	r5, #255	; 0xff
 80136de:	fb02 1303 	mla	r3, r2, r3, r1
 80136e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136e6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80136ea:	fb0a fa02 	mul.w	sl, sl, r2
 80136ee:	d062      	beq.n	80137b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80136f0:	ea6f 0c05 	mvn.w	ip, r5
 80136f4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80136f8:	930a      	str	r3, [sp, #40]	; 0x28
 80136fa:	b2ad      	uxth	r5, r5
 80136fc:	fa5f fc8c 	uxtb.w	ip, ip
 8013700:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8013704:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013706:	4298      	cmp	r0, r3
 8013708:	f080 8085 	bcs.w	8013816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801370c:	eb00 0b09 	add.w	fp, r0, r9
 8013710:	4558      	cmp	r0, fp
 8013712:	d246      	bcs.n	80137a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8013714:	f814 eb01 	ldrb.w	lr, [r4], #1
 8013718:	2303      	movs	r3, #3
 801371a:	2204      	movs	r2, #4
 801371c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013720:	eb07 0a0e 	add.w	sl, r7, lr
 8013724:	8803      	ldrh	r3, [r0, #0]
 8013726:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801372a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801372e:	1219      	asrs	r1, r3, #8
 8013730:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013734:	fb18 f805 	smulbb	r8, r8, r5
 8013738:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801373c:	10da      	asrs	r2, r3, #3
 801373e:	fb01 810c 	mla	r1, r1, ip, r8
 8013742:	00db      	lsls	r3, r3, #3
 8013744:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013748:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801374c:	b2db      	uxtb	r3, r3
 801374e:	fb18 f805 	smulbb	r8, r8, r5
 8013752:	fb1e fe05 	smulbb	lr, lr, r5
 8013756:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801375a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801375e:	b289      	uxth	r1, r1
 8013760:	fb02 820c 	mla	r2, r2, ip, r8
 8013764:	fb03 e30c 	mla	r3, r3, ip, lr
 8013768:	b292      	uxth	r2, r2
 801376a:	b29b      	uxth	r3, r3
 801376c:	f101 0801 	add.w	r8, r1, #1
 8013770:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013774:	f103 0e01 	add.w	lr, r3, #1
 8013778:	f102 0801 	add.w	r8, r2, #1
 801377c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8013780:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013784:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8013788:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801378c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013790:	ea4e 0101 	orr.w	r1, lr, r1
 8013794:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013798:	ea41 0108 	orr.w	r1, r1, r8
 801379c:	f820 1b02 	strh.w	r1, [r0], #2
 80137a0:	e7b6      	b.n	8013710 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80137a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80137a4:	881b      	ldrh	r3, [r3, #0]
 80137a6:	1b9b      	subs	r3, r3, r6
 80137a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80137ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80137b0:	1b9b      	subs	r3, r3, r6
 80137b2:	441c      	add	r4, r3
 80137b4:	e7a6      	b.n	8013704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80137b6:	491e      	ldr	r1, [pc, #120]	; (8013830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80137b8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80137bc:	2203      	movs	r2, #3
 80137be:	2504      	movs	r5, #4
 80137c0:	4550      	cmp	r0, sl
 80137c2:	d228      	bcs.n	8013816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80137c4:	eb00 0c09 	add.w	ip, r0, r9
 80137c8:	4560      	cmp	r0, ip
 80137ca:	4623      	mov	r3, r4
 80137cc:	d219      	bcs.n	8013802 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80137ce:	f893 e000 	ldrb.w	lr, [r3]
 80137d2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80137d6:	eb07 0b0e 	add.w	fp, r7, lr
 80137da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80137de:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80137e2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80137e6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80137ea:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80137ee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80137f2:	ea43 030b 	orr.w	r3, r3, fp
 80137f6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80137fa:	3401      	adds	r4, #1
 80137fc:	f820 3b02 	strh.w	r3, [r0], #2
 8013800:	e7e2      	b.n	80137c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8013802:	f8b8 3000 	ldrh.w	r3, [r8]
 8013806:	1b9b      	subs	r3, r3, r6
 8013808:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801380c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013810:	1b9b      	subs	r3, r3, r6
 8013812:	441c      	add	r4, r3
 8013814:	e7d4      	b.n	80137c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8013816:	4b07      	ldr	r3, [pc, #28]	; (8013834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8013818:	6818      	ldr	r0, [r3, #0]
 801381a:	6803      	ldr	r3, [r0, #0]
 801381c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801381e:	4798      	blx	r3
 8013820:	e750      	b.n	80136c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013822:	bf00      	nop
 8013824:	0801f8da 	.word	0x0801f8da
 8013828:	0801ffae 	.word	0x0801ffae
 801382c:	0801faac 	.word	0x0801faac
 8013830:	fffff800 	.word	0xfffff800
 8013834:	2000a534 	.word	0x2000a534
 8013838:	2000a52e 	.word	0x2000a52e

0801383c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801383c:	b430      	push	{r4, r5}
 801383e:	780d      	ldrb	r5, [r1, #0]
 8013840:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013844:	2d01      	cmp	r5, #1
 8013846:	d00a      	beq.n	801385e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013848:	d305      	bcc.n	8013856 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801384a:	2d02      	cmp	r5, #2
 801384c:	d10b      	bne.n	8013866 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801384e:	9402      	str	r4, [sp, #8]
 8013850:	bc30      	pop	{r4, r5}
 8013852:	f7ff bdf5 	b.w	8013440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013856:	9402      	str	r4, [sp, #8]
 8013858:	bc30      	pop	{r4, r5}
 801385a:	f7ff bcfb 	b.w	8013254 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801385e:	9402      	str	r4, [sp, #8]
 8013860:	bc30      	pop	{r4, r5}
 8013862:	f7ff bec9 	b.w	80135f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013866:	bc30      	pop	{r4, r5}
 8013868:	4770      	bx	lr
	...

0801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801386c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013870:	4604      	mov	r4, r0
 8013872:	b087      	sub	sp, #28
 8013874:	6810      	ldr	r0, [r2, #0]
 8013876:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801387a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801387e:	460e      	mov	r6, r1
 8013880:	6851      	ldr	r1, [r2, #4]
 8013882:	ad02      	add	r5, sp, #8
 8013884:	c503      	stmia	r5!, {r0, r1}
 8013886:	6818      	ldr	r0, [r3, #0]
 8013888:	6859      	ldr	r1, [r3, #4]
 801388a:	ad04      	add	r5, sp, #16
 801388c:	4617      	mov	r7, r2
 801388e:	c503      	stmia	r5!, {r0, r1}
 8013890:	a802      	add	r0, sp, #8
 8013892:	f7f8 fe6b 	bl	800c56c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013896:	4639      	mov	r1, r7
 8013898:	a804      	add	r0, sp, #16
 801389a:	f7f8 fe8f 	bl	800c5bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801389e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80138a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80138a6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80138aa:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80138ae:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80138b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80138b6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80138ba:	440e      	add	r6, r1
 80138bc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80138c0:	440a      	add	r2, r1
 80138c2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80138c6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80138ca:	4413      	add	r3, r2
 80138cc:	f8ad 3012 	strh.w	r3, [sp, #18]
 80138d0:	4b77      	ldr	r3, [pc, #476]	; (8013ab0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80138d2:	6818      	ldr	r0, [r3, #0]
 80138d4:	6803      	ldr	r3, [r0, #0]
 80138d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80138d8:	4798      	blx	r3
 80138da:	f8b9 b000 	ldrh.w	fp, [r9]
 80138de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80138e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80138e6:	fb0b 2303 	mla	r3, fp, r3, r2
 80138ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138ee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80138f2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80138f6:	fb05 f50b 	mul.w	r5, r5, fp
 80138fa:	9300      	str	r3, [sp, #0]
 80138fc:	d069      	beq.n	80139d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80138fe:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8013902:	4558      	cmp	r0, fp
 8013904:	f080 80cc 	bcs.w	8013aa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013908:	9b00      	ldr	r3, [sp, #0]
 801390a:	18c3      	adds	r3, r0, r3
 801390c:	9301      	str	r3, [sp, #4]
 801390e:	4631      	mov	r1, r6
 8013910:	9b01      	ldr	r3, [sp, #4]
 8013912:	4298      	cmp	r0, r3
 8013914:	d24f      	bcs.n	80139b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8013916:	f811 2b01 	ldrb.w	r2, [r1], #1
 801391a:	2a00      	cmp	r2, #0
 801391c:	d048      	beq.n	80139b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801391e:	fb0a f202 	mul.w	r2, sl, r2
 8013922:	1c53      	adds	r3, r2, #1
 8013924:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013928:	121b      	asrs	r3, r3, #8
 801392a:	d041      	beq.n	80139b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801392c:	8802      	ldrh	r2, [r0, #0]
 801392e:	f8b4 c000 	ldrh.w	ip, [r4]
 8013932:	b29e      	uxth	r6, r3
 8013934:	1215      	asrs	r5, r2, #8
 8013936:	43db      	mvns	r3, r3
 8013938:	b2db      	uxtb	r3, r3
 801393a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801393e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013942:	fb15 f503 	smulbb	r5, r5, r3
 8013946:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801394a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801394e:	00d2      	lsls	r2, r2, #3
 8013950:	fb07 5706 	mla	r7, r7, r6, r5
 8013954:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013958:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801395c:	b2d2      	uxtb	r2, r2
 801395e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013962:	b2bf      	uxth	r7, r7
 8013964:	fb1e fe03 	smulbb	lr, lr, r3
 8013968:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801396c:	fa5f fc8c 	uxtb.w	ip, ip
 8013970:	fb12 f203 	smulbb	r2, r2, r3
 8013974:	fb05 e506 	mla	r5, r5, r6, lr
 8013978:	fb0c 2c06 	mla	ip, ip, r6, r2
 801397c:	f107 0e01 	add.w	lr, r7, #1
 8013980:	fa1f fc8c 	uxth.w	ip, ip
 8013984:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013988:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801398c:	f10c 0701 	add.w	r7, ip, #1
 8013990:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013994:	b2ad      	uxth	r5, r5
 8013996:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801399a:	ea47 070e 	orr.w	r7, r7, lr
 801399e:	f105 0e01 	add.w	lr, r5, #1
 80139a2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80139a6:	096d      	lsrs	r5, r5, #5
 80139a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80139ac:	432f      	orrs	r7, r5
 80139ae:	8007      	strh	r7, [r0, #0]
 80139b0:	3002      	adds	r0, #2
 80139b2:	3402      	adds	r4, #2
 80139b4:	e7ac      	b.n	8013910 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80139b6:	f8b9 3000 	ldrh.w	r3, [r9]
 80139ba:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80139be:	eba3 0308 	sub.w	r3, r3, r8
 80139c2:	eba6 0608 	sub.w	r6, r6, r8
 80139c6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80139ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80139ce:	440e      	add	r6, r1
 80139d0:	e797      	b.n	8013902 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80139d2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80139d6:	42a8      	cmp	r0, r5
 80139d8:	d262      	bcs.n	8013aa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80139da:	9b00      	ldr	r3, [sp, #0]
 80139dc:	4631      	mov	r1, r6
 80139de:	eb00 0b03 	add.w	fp, r0, r3
 80139e2:	4558      	cmp	r0, fp
 80139e4:	d24e      	bcs.n	8013a84 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80139e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80139ea:	b12b      	cbz	r3, 80139f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80139ec:	2bff      	cmp	r3, #255	; 0xff
 80139ee:	f8b4 e000 	ldrh.w	lr, [r4]
 80139f2:	d104      	bne.n	80139fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80139f4:	f8a0 e000 	strh.w	lr, [r0]
 80139f8:	3002      	adds	r0, #2
 80139fa:	3402      	adds	r4, #2
 80139fc:	e7f1      	b.n	80139e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80139fe:	8802      	ldrh	r2, [r0, #0]
 8013a00:	b29f      	uxth	r7, r3
 8013a02:	1216      	asrs	r6, r2, #8
 8013a04:	43db      	mvns	r3, r3
 8013a06:	b2db      	uxtb	r3, r3
 8013a08:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013a0c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013a10:	fb16 f603 	smulbb	r6, r6, r3
 8013a14:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8013a18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a1c:	00d2      	lsls	r2, r2, #3
 8013a1e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013a22:	b2d2      	uxtb	r2, r2
 8013a24:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013a28:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013a2c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013a30:	fb1a fa03 	smulbb	sl, sl, r3
 8013a34:	fa1f fc8c 	uxth.w	ip, ip
 8013a38:	fb12 f303 	smulbb	r3, r2, r3
 8013a3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a40:	fa5f fe8e 	uxtb.w	lr, lr
 8013a44:	fb06 a607 	mla	r6, r6, r7, sl
 8013a48:	f10c 0201 	add.w	r2, ip, #1
 8013a4c:	fb0e 3307 	mla	r3, lr, r7, r3
 8013a50:	b2b6      	uxth	r6, r6
 8013a52:	b29b      	uxth	r3, r3
 8013a54:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013a58:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013a5c:	f106 0a01 	add.w	sl, r6, #1
 8013a60:	f103 0c01 	add.w	ip, r3, #1
 8013a64:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013a68:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013a6c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013a70:	0976      	lsrs	r6, r6, #5
 8013a72:	ea4c 0c02 	orr.w	ip, ip, r2
 8013a76:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013a7a:	ea4c 0c06 	orr.w	ip, ip, r6
 8013a7e:	f8a0 c000 	strh.w	ip, [r0]
 8013a82:	e7b9      	b.n	80139f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013a84:	f8b9 3000 	ldrh.w	r3, [r9]
 8013a88:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013a8c:	eba3 0308 	sub.w	r3, r3, r8
 8013a90:	eba6 0608 	sub.w	r6, r6, r8
 8013a94:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013a98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a9c:	440e      	add	r6, r1
 8013a9e:	e79a      	b.n	80139d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013aa0:	4b03      	ldr	r3, [pc, #12]	; (8013ab0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013aa2:	6818      	ldr	r0, [r3, #0]
 8013aa4:	6803      	ldr	r3, [r0, #0]
 8013aa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013aa8:	4798      	blx	r3
 8013aaa:	b007      	add	sp, #28
 8013aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ab0:	2000a534 	.word	0x2000a534
 8013ab4:	2000a52e 	.word	0x2000a52e

08013ab8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013abc:	b089      	sub	sp, #36	; 0x24
 8013abe:	4682      	mov	sl, r0
 8013ac0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013ac4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013ac6:	460f      	mov	r7, r1
 8013ac8:	4691      	mov	r9, r2
 8013aca:	4698      	mov	r8, r3
 8013acc:	2e00      	cmp	r6, #0
 8013ace:	d03d      	beq.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ad0:	4608      	mov	r0, r1
 8013ad2:	f7fb ff7d 	bl	800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ad6:	4605      	mov	r5, r0
 8013ad8:	4638      	mov	r0, r7
 8013ada:	f7fb ffbd 	bl	800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ade:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013ae2:	4638      	mov	r0, r7
 8013ae4:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013ae8:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013aec:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013af0:	f7fc f88a 	bl	800fc08 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013af4:	4605      	mov	r5, r0
 8013af6:	4638      	mov	r0, r7
 8013af8:	f7fc f8b8 	bl	800fc6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013afc:	4681      	mov	r9, r0
 8013afe:	4638      	mov	r0, r7
 8013b00:	f7fc f90c 	bl	800fd1c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b04:	280b      	cmp	r0, #11
 8013b06:	f200 816f 	bhi.w	8013de8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8013b0a:	e8df f010 	tbh	[pc, r0, lsl #1]
 8013b0e:	00c3      	.short	0x00c3
 8013b10:	000c00b4 	.word	0x000c00b4
 8013b14:	016d016d 	.word	0x016d016d
 8013b18:	016d016d 	.word	0x016d016d
 8013b1c:	016d016d 	.word	0x016d016d
 8013b20:	016d016d 	.word	0x016d016d
 8013b24:	00bb      	.short	0x00bb
 8013b26:	4bb3      	ldr	r3, [pc, #716]	; (8013df4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8013b28:	6818      	ldr	r0, [r3, #0]
 8013b2a:	6803      	ldr	r3, [r0, #0]
 8013b2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013b2e:	4798      	blx	r3
 8013b30:	2eff      	cmp	r6, #255	; 0xff
 8013b32:	d121      	bne.n	8013b78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b34:	0683      	lsls	r3, r0, #26
 8013b36:	d41f      	bmi.n	8013b78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b38:	4638      	mov	r0, r7
 8013b3a:	f7fc f82b 	bl	800fb94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013b3e:	b940      	cbnz	r0, 8013b52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8013b40:	4623      	mov	r3, r4
 8013b42:	aa02      	add	r2, sp, #8
 8013b44:	4629      	mov	r1, r5
 8013b46:	4650      	mov	r0, sl
 8013b48:	f7ff f9e4 	bl	8012f14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013b4c:	b009      	add	sp, #36	; 0x24
 8013b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b52:	f10d 0818 	add.w	r8, sp, #24
 8013b56:	4639      	mov	r1, r7
 8013b58:	4640      	mov	r0, r8
 8013b5a:	f7fb ffc1 	bl	800fae0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b5e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013b62:	af04      	add	r7, sp, #16
 8013b64:	e887 0003 	stmia.w	r7, {r0, r1}
 8013b68:	4638      	mov	r0, r7
 8013b6a:	4621      	mov	r1, r4
 8013b6c:	f7f5 fbc0 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 8013b70:	4638      	mov	r0, r7
 8013b72:	f7f5 fc00 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013b76:	b130      	cbz	r0, 8013b86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8013b78:	4633      	mov	r3, r6
 8013b7a:	4622      	mov	r2, r4
 8013b7c:	a902      	add	r1, sp, #8
 8013b7e:	4628      	mov	r0, r5
 8013b80:	f7ff f8e2 	bl	8012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013b84:	e7e2      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b86:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013b8a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013b8e:	4293      	cmp	r3, r2
 8013b90:	dd12      	ble.n	8013bb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8013b92:	1a9b      	subs	r3, r3, r2
 8013b94:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013b98:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013b9c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013ba0:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013ba4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013ba8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013bac:	4642      	mov	r2, r8
 8013bae:	4633      	mov	r3, r6
 8013bb0:	a902      	add	r1, sp, #8
 8013bb2:	4628      	mov	r0, r5
 8013bb4:	f7ff f8c8 	bl	8012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013bb8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013bbc:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013bc0:	4293      	cmp	r3, r2
 8013bc2:	dd12      	ble.n	8013bea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8013bc4:	1a9b      	subs	r3, r3, r2
 8013bc6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013bca:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013bce:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013bd2:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013bd6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013bda:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013bde:	23ff      	movs	r3, #255	; 0xff
 8013be0:	4642      	mov	r2, r8
 8013be2:	a902      	add	r1, sp, #8
 8013be4:	4628      	mov	r0, r5
 8013be6:	f7ff f8af 	bl	8012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013bea:	463b      	mov	r3, r7
 8013bec:	aa02      	add	r2, sp, #8
 8013bee:	4629      	mov	r1, r5
 8013bf0:	4650      	mov	r0, sl
 8013bf2:	f7ff f98f 	bl	8012f14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013bf6:	88a2      	ldrh	r2, [r4, #4]
 8013bf8:	8823      	ldrh	r3, [r4, #0]
 8013bfa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013bfe:	4413      	add	r3, r2
 8013c00:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013c04:	440a      	add	r2, r1
 8013c06:	b29b      	uxth	r3, r3
 8013c08:	b292      	uxth	r2, r2
 8013c0a:	b211      	sxth	r1, r2
 8013c0c:	b218      	sxth	r0, r3
 8013c0e:	4288      	cmp	r0, r1
 8013c10:	dd12      	ble.n	8013c38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8013c12:	1a9b      	subs	r3, r3, r2
 8013c14:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013c18:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013c1c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013c20:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c24:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c28:	23ff      	movs	r3, #255	; 0xff
 8013c2a:	4642      	mov	r2, r8
 8013c2c:	a902      	add	r1, sp, #8
 8013c2e:	4628      	mov	r0, r5
 8013c30:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013c34:	f7ff f888 	bl	8012d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c38:	88e2      	ldrh	r2, [r4, #6]
 8013c3a:	8863      	ldrh	r3, [r4, #2]
 8013c3c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013c40:	4413      	add	r3, r2
 8013c42:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013c46:	440a      	add	r2, r1
 8013c48:	b29b      	uxth	r3, r3
 8013c4a:	b292      	uxth	r2, r2
 8013c4c:	b211      	sxth	r1, r2
 8013c4e:	b218      	sxth	r0, r3
 8013c50:	4288      	cmp	r0, r1
 8013c52:	f77f af7b 	ble.w	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013c56:	1a9b      	subs	r3, r3, r2
 8013c58:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013c5c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013c60:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c64:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013c68:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013c6c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013c70:	23ff      	movs	r3, #255	; 0xff
 8013c72:	4642      	mov	r2, r8
 8013c74:	e782      	b.n	8013b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8013c76:	4633      	mov	r3, r6
 8013c78:	4622      	mov	r2, r4
 8013c7a:	a902      	add	r1, sp, #8
 8013c7c:	4628      	mov	r0, r5
 8013c7e:	f7ff f9b9 	bl	8012ff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013c82:	e763      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013c84:	9600      	str	r6, [sp, #0]
 8013c86:	4623      	mov	r3, r4
 8013c88:	aa02      	add	r2, sp, #8
 8013c8a:	4649      	mov	r1, r9
 8013c8c:	4628      	mov	r0, r5
 8013c8e:	f7ff fdd5 	bl	801383c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013c92:	e75b      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013c94:	4638      	mov	r0, r7
 8013c96:	f7fb ff7d 	bl	800fb94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013c9a:	b950      	cbnz	r0, 8013cb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8013c9c:	e9cd 6000 	strd	r6, r0, [sp]
 8013ca0:	f8da 3000 	ldr.w	r3, [sl]
 8013ca4:	aa02      	add	r2, sp, #8
 8013ca6:	68de      	ldr	r6, [r3, #12]
 8013ca8:	4629      	mov	r1, r5
 8013caa:	4623      	mov	r3, r4
 8013cac:	4650      	mov	r0, sl
 8013cae:	47b0      	blx	r6
 8013cb0:	e74c      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013cb2:	f10d 0818 	add.w	r8, sp, #24
 8013cb6:	4639      	mov	r1, r7
 8013cb8:	4640      	mov	r0, r8
 8013cba:	f7fb ff11 	bl	800fae0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013cbe:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013cc2:	af04      	add	r7, sp, #16
 8013cc4:	e887 0003 	stmia.w	r7, {r0, r1}
 8013cc8:	4638      	mov	r0, r7
 8013cca:	4621      	mov	r1, r4
 8013ccc:	f7f5 fb10 	bl	80092f0 <_ZN8touchgfx4RectaNERKS0_>
 8013cd0:	4638      	mov	r0, r7
 8013cd2:	f7f5 fb50 	bl	8009376 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013cd6:	b138      	cbz	r0, 8013ce8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8013cd8:	9600      	str	r6, [sp, #0]
 8013cda:	4623      	mov	r3, r4
 8013cdc:	aa02      	add	r2, sp, #8
 8013cde:	4649      	mov	r1, r9
 8013ce0:	4628      	mov	r0, r5
 8013ce2:	f7ff fdc3 	bl	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013ce6:	e731      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ce8:	e9cd 6000 	strd	r6, r0, [sp]
 8013cec:	f8da 3000 	ldr.w	r3, [sl]
 8013cf0:	aa02      	add	r2, sp, #8
 8013cf2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013cf6:	4629      	mov	r1, r5
 8013cf8:	463b      	mov	r3, r7
 8013cfa:	4650      	mov	r0, sl
 8013cfc:	47d8      	blx	fp
 8013cfe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013d02:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013d06:	4293      	cmp	r3, r2
 8013d08:	dd13      	ble.n	8013d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8013d0a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013d0e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013d12:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013d16:	1a9b      	subs	r3, r3, r2
 8013d18:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013d1c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013d20:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013d24:	9600      	str	r6, [sp, #0]
 8013d26:	4643      	mov	r3, r8
 8013d28:	aa02      	add	r2, sp, #8
 8013d2a:	4649      	mov	r1, r9
 8013d2c:	4628      	mov	r0, r5
 8013d2e:	f7ff fd9d 	bl	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013d32:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013d36:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013d3a:	4293      	cmp	r3, r2
 8013d3c:	dd13      	ble.n	8013d66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8013d3e:	1a9b      	subs	r3, r3, r2
 8013d40:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013d44:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013d48:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013d4c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013d50:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d54:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013d58:	9600      	str	r6, [sp, #0]
 8013d5a:	4643      	mov	r3, r8
 8013d5c:	aa02      	add	r2, sp, #8
 8013d5e:	4649      	mov	r1, r9
 8013d60:	4628      	mov	r0, r5
 8013d62:	f7ff fd83 	bl	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013d66:	88a2      	ldrh	r2, [r4, #4]
 8013d68:	8823      	ldrh	r3, [r4, #0]
 8013d6a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013d6e:	4413      	add	r3, r2
 8013d70:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013d74:	440a      	add	r2, r1
 8013d76:	b29b      	uxth	r3, r3
 8013d78:	b292      	uxth	r2, r2
 8013d7a:	b211      	sxth	r1, r2
 8013d7c:	b218      	sxth	r0, r3
 8013d7e:	4288      	cmp	r0, r1
 8013d80:	dd13      	ble.n	8013daa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8013d82:	1a9b      	subs	r3, r3, r2
 8013d84:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013d88:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013d8c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013d90:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d94:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013d98:	9600      	str	r6, [sp, #0]
 8013d9a:	4643      	mov	r3, r8
 8013d9c:	aa02      	add	r2, sp, #8
 8013d9e:	4649      	mov	r1, r9
 8013da0:	4628      	mov	r0, r5
 8013da2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013da6:	f7ff fd61 	bl	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013daa:	88e2      	ldrh	r2, [r4, #6]
 8013dac:	8863      	ldrh	r3, [r4, #2]
 8013dae:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013db2:	4413      	add	r3, r2
 8013db4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013db8:	440a      	add	r2, r1
 8013dba:	b29b      	uxth	r3, r3
 8013dbc:	b292      	uxth	r2, r2
 8013dbe:	b211      	sxth	r1, r2
 8013dc0:	b218      	sxth	r0, r3
 8013dc2:	4288      	cmp	r0, r1
 8013dc4:	f77f aec2 	ble.w	8013b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013dc8:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013dcc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013dd0:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013dd4:	1a9b      	subs	r3, r3, r2
 8013dd6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013dda:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013dde:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013de2:	9600      	str	r6, [sp, #0]
 8013de4:	4643      	mov	r3, r8
 8013de6:	e779      	b.n	8013cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013de8:	4b03      	ldr	r3, [pc, #12]	; (8013df8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8013dea:	4a04      	ldr	r2, [pc, #16]	; (8013dfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8013dec:	4804      	ldr	r0, [pc, #16]	; (8013e00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8013dee:	21b0      	movs	r1, #176	; 0xb0
 8013df0:	f007 ff50 	bl	801bc94 <__assert_func>
 8013df4:	2000a534 	.word	0x2000a534
 8013df8:	0801f928 	.word	0x0801f928
 8013dfc:	08020037 	.word	0x08020037
 8013e00:	0801faac 	.word	0x0801faac

08013e04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013e04:	b508      	push	{r3, lr}
 8013e06:	b180      	cbz	r0, 8013e2a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013e08:	2902      	cmp	r1, #2
 8013e0a:	d014      	beq.n	8013e36 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013e0c:	2903      	cmp	r1, #3
 8013e0e:	d01d      	beq.n	8013e4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013e10:	2901      	cmp	r1, #1
 8013e12:	d101      	bne.n	8013e18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013e14:	2001      	movs	r0, #1
 8013e16:	bd08      	pop	{r3, pc}
 8013e18:	4b0e      	ldr	r3, [pc, #56]	; (8013e54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013e1a:	8818      	ldrh	r0, [r3, #0]
 8013e1c:	b990      	cbnz	r0, 8013e44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013e1e:	4b0e      	ldr	r3, [pc, #56]	; (8013e58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013e20:	4a0e      	ldr	r2, [pc, #56]	; (8013e5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013e22:	480f      	ldr	r0, [pc, #60]	; (8013e60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013e24:	2153      	movs	r1, #83	; 0x53
 8013e26:	f007 ff35 	bl	801bc94 <__assert_func>
 8013e2a:	2902      	cmp	r1, #2
 8013e2c:	d00e      	beq.n	8013e4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013e2e:	2903      	cmp	r1, #3
 8013e30:	d0f2      	beq.n	8013e18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013e32:	2901      	cmp	r1, #1
 8013e34:	d1ee      	bne.n	8013e14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013e36:	4b07      	ldr	r3, [pc, #28]	; (8013e54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013e38:	8818      	ldrh	r0, [r3, #0]
 8013e3a:	2800      	cmp	r0, #0
 8013e3c:	d0ef      	beq.n	8013e1e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013e3e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013e42:	e7e8      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013e44:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013e48:	4240      	negs	r0, r0
 8013e4a:	e7e4      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013e4c:	f04f 30ff 	mov.w	r0, #4294967295
 8013e50:	e7e1      	b.n	8013e16 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013e52:	bf00      	nop
 8013e54:	2000a52e 	.word	0x2000a52e
 8013e58:	0801fba2 	.word	0x0801fba2
 8013e5c:	080201b4 	.word	0x080201b4
 8013e60:	0801fbe4 	.word	0x0801fbe4

08013e64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013e64:	b508      	push	{r3, lr}
 8013e66:	b180      	cbz	r0, 8013e8a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013e68:	2902      	cmp	r1, #2
 8013e6a:	d014      	beq.n	8013e96 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013e6c:	2903      	cmp	r1, #3
 8013e6e:	d018      	beq.n	8013ea2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013e70:	2901      	cmp	r1, #1
 8013e72:	d001      	beq.n	8013e78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013e74:	2001      	movs	r0, #1
 8013e76:	e013      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013e78:	4b0e      	ldr	r3, [pc, #56]	; (8013eb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013e7a:	8818      	ldrh	r0, [r3, #0]
 8013e7c:	b970      	cbnz	r0, 8013e9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013e7e:	4b0e      	ldr	r3, [pc, #56]	; (8013eb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013e80:	4a0e      	ldr	r2, [pc, #56]	; (8013ebc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013e82:	480f      	ldr	r0, [pc, #60]	; (8013ec0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013e84:	2153      	movs	r1, #83	; 0x53
 8013e86:	f007 ff05 	bl	801bc94 <__assert_func>
 8013e8a:	2902      	cmp	r1, #2
 8013e8c:	d009      	beq.n	8013ea2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013e8e:	2903      	cmp	r1, #3
 8013e90:	d0f0      	beq.n	8013e74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013e92:	2901      	cmp	r1, #1
 8013e94:	d1f0      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013e96:	f04f 30ff 	mov.w	r0, #4294967295
 8013e9a:	e001      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013e9c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ea0:	bd08      	pop	{r3, pc}
 8013ea2:	4b04      	ldr	r3, [pc, #16]	; (8013eb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013ea4:	8818      	ldrh	r0, [r3, #0]
 8013ea6:	2800      	cmp	r0, #0
 8013ea8:	d0e9      	beq.n	8013e7e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013eaa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013eae:	4240      	negs	r0, r0
 8013eb0:	e7f6      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013eb2:	bf00      	nop
 8013eb4:	2000a52e 	.word	0x2000a52e
 8013eb8:	0801fba2 	.word	0x0801fba2
 8013ebc:	080201b4 	.word	0x080201b4
 8013ec0:	0801fbe4 	.word	0x0801fbe4

08013ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ec8:	b099      	sub	sp, #100	; 0x64
 8013eca:	910b      	str	r1, [sp, #44]	; 0x2c
 8013ecc:	a914      	add	r1, sp, #80	; 0x50
 8013ece:	e881 000c 	stmia.w	r1, {r2, r3}
 8013ed2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013ed6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013eda:	930a      	str	r3, [sp, #40]	; 0x28
 8013edc:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013ee0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013ee4:	9311      	str	r3, [sp, #68]	; 0x44
 8013ee6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013eea:	930c      	str	r3, [sp, #48]	; 0x30
 8013eec:	7988      	ldrb	r0, [r1, #6]
 8013eee:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013ef2:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013ef6:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013efa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013efe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013f02:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8013f06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013f0a:	4303      	orrs	r3, r0
 8013f0c:	9309      	str	r3, [sp, #36]	; 0x24
 8013f0e:	f000 81a1 	beq.w	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013f12:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013f16:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013f1a:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013f1e:	ea59 0903 	orrs.w	r9, r9, r3
 8013f22:	f000 8197 	beq.w	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013f26:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013f2a:	b29b      	uxth	r3, r3
 8013f2c:	2e00      	cmp	r6, #0
 8013f2e:	f000 813a 	beq.w	80141a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013f32:	1af6      	subs	r6, r6, r3
 8013f34:	b2b6      	uxth	r6, r6
 8013f36:	0433      	lsls	r3, r6, #16
 8013f38:	d502      	bpl.n	8013f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013f3a:	1bad      	subs	r5, r5, r6
 8013f3c:	b22d      	sxth	r5, r5
 8013f3e:	2600      	movs	r6, #0
 8013f40:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013f44:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013f48:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013f4c:	428d      	cmp	r5, r1
 8013f4e:	b28b      	uxth	r3, r1
 8013f50:	bfbf      	itttt	lt
 8013f52:	18f6      	addlt	r6, r6, r3
 8013f54:	1b75      	sublt	r5, r6, r5
 8013f56:	b2ae      	uxthlt	r6, r5
 8013f58:	460d      	movlt	r5, r1
 8013f5a:	8891      	ldrh	r1, [r2, #4]
 8013f5c:	440b      	add	r3, r1
 8013f5e:	b21b      	sxth	r3, r3
 8013f60:	9310      	str	r3, [sp, #64]	; 0x40
 8013f62:	88d3      	ldrh	r3, [r2, #6]
 8013f64:	8852      	ldrh	r2, [r2, #2]
 8013f66:	4413      	add	r3, r2
 8013f68:	b21b      	sxth	r3, r3
 8013f6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f6c:	4bbc      	ldr	r3, [pc, #752]	; (8014260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8013f6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013f70:	f893 b000 	ldrb.w	fp, [r3]
 8013f74:	f10b 3cff 	add.w	ip, fp, #4294967295
 8013f78:	f1dc 0300 	rsbs	r3, ip, #0
 8013f7c:	eb43 030c 	adc.w	r3, r3, ip
 8013f80:	930e      	str	r3, [sp, #56]	; 0x38
 8013f82:	4629      	mov	r1, r5
 8013f84:	4653      	mov	r3, sl
 8013f86:	a814      	add	r0, sp, #80	; 0x50
 8013f88:	f7f8 f975 	bl	800c276 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013f8c:	4629      	mov	r1, r5
 8013f8e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013f92:	4653      	mov	r3, sl
 8013f94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013f96:	a814      	add	r0, sp, #80	; 0x50
 8013f98:	f7f8 f985 	bl	800c2a6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013f9c:	a918      	add	r1, sp, #96	; 0x60
 8013f9e:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013fa2:	a817      	add	r0, sp, #92	; 0x5c
 8013fa4:	f7f8 faa0 	bl	800c4e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013fa8:	f1ba 0f00 	cmp.w	sl, #0
 8013fac:	f040 80fe 	bne.w	80141ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8013fb0:	f1bb 0f01 	cmp.w	fp, #1
 8013fb4:	f040 8102 	bne.w	80141bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8013fb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013fba:	b153      	cbz	r3, 8013fd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013fbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013fbe:	2408      	movs	r4, #8
 8013fc0:	fb94 f3f8 	sdiv	r3, r4, r8
 8013fc4:	1e5c      	subs	r4, r3, #1
 8013fc6:	4414      	add	r4, r2
 8013fc8:	fb94 f4f3 	sdiv	r4, r4, r3
 8013fcc:	fb14 f403 	smulbb	r4, r4, r3
 8013fd0:	b2a4      	uxth	r4, r4
 8013fd2:	b906      	cbnz	r6, 8013fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8013fd4:	b16f      	cbz	r7, 8013ff2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8013fd6:	fb07 6304 	mla	r3, r7, r4, r6
 8013fda:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013fdc:	fb08 f303 	mul.w	r3, r8, r3
 8013fe0:	463a      	mov	r2, r7
 8013fe2:	f003 0707 	and.w	r7, r3, #7
 8013fe6:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8013fea:	9328      	str	r3, [sp, #160]	; 0xa0
 8013fec:	eba9 0302 	sub.w	r3, r9, r2
 8013ff0:	930d      	str	r3, [sp, #52]	; 0x34
 8013ff2:	4651      	mov	r1, sl
 8013ff4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013ff6:	f7ff ff05 	bl	8013e04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013ffa:	4651      	mov	r1, sl
 8013ffc:	4681      	mov	r9, r0
 8013ffe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014000:	f7ff ff30 	bl	8013e64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014004:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014006:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014008:	eba3 0a02 	sub.w	sl, r3, r2
 801400c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801400e:	459a      	cmp	sl, r3
 8014010:	bfa8      	it	ge
 8014012:	469a      	movge	sl, r3
 8014014:	f1ba 0f00 	cmp.w	sl, #0
 8014018:	4683      	mov	fp, r0
 801401a:	f340 811b 	ble.w	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801401e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014020:	1bad      	subs	r5, r5, r6
 8014022:	1b5d      	subs	r5, r3, r5
 8014024:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014026:	429d      	cmp	r5, r3
 8014028:	bfd4      	ite	le
 801402a:	ebc6 0605 	rsble	r6, r6, r5
 801402e:	ebc6 0603 	rsbgt	r6, r6, r3
 8014032:	2e00      	cmp	r6, #0
 8014034:	f340 810e 	ble.w	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014038:	1ba4      	subs	r4, r4, r6
 801403a:	fb08 f304 	mul.w	r3, r8, r4
 801403e:	930f      	str	r3, [sp, #60]	; 0x3c
 8014040:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014042:	2b00      	cmp	r3, #0
 8014044:	f040 8114 	bne.w	8014270 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8014048:	4b86      	ldr	r3, [pc, #536]	; (8014264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801404a:	6818      	ldr	r0, [r3, #0]
 801404c:	6803      	ldr	r3, [r0, #0]
 801404e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014050:	4798      	blx	r3
 8014052:	2301      	movs	r3, #1
 8014054:	fa03 f308 	lsl.w	r3, r3, r8
 8014058:	4a83      	ldr	r2, [pc, #524]	; (8014268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801405a:	3b01      	subs	r3, #1
 801405c:	b2db      	uxtb	r3, r3
 801405e:	8811      	ldrh	r1, [r2, #0]
 8014060:	930e      	str	r3, [sp, #56]	; 0x38
 8014062:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8014066:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801406a:	fb01 2303 	mla	r3, r1, r3, r2
 801406e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014072:	930a      	str	r3, [sp, #40]	; 0x28
 8014074:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014076:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801407a:	9313      	str	r3, [sp, #76]	; 0x4c
 801407c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801407e:	0a19      	lsrs	r1, r3, #8
 8014080:	b2cb      	uxtb	r3, r1
 8014082:	9312      	str	r3, [sp, #72]	; 0x48
 8014084:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014086:	b2db      	uxtb	r3, r3
 8014088:	9311      	str	r3, [sp, #68]	; 0x44
 801408a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801408c:	095a      	lsrs	r2, r3, #5
 801408e:	4b77      	ldr	r3, [pc, #476]	; (801426c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8014090:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014094:	400b      	ands	r3, r1
 8014096:	4313      	orrs	r3, r2
 8014098:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801409a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801409e:	4313      	orrs	r3, r2
 80140a0:	b29b      	uxth	r3, r3
 80140a2:	9310      	str	r3, [sp, #64]	; 0x40
 80140a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80140a6:	781a      	ldrb	r2, [r3, #0]
 80140a8:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80140ac:	413a      	asrs	r2, r7
 80140ae:	fb06 b919 	mls	r9, r6, r9, fp
 80140b2:	fb03 fb06 	mul.w	fp, r3, r6
 80140b6:	b2d2      	uxtb	r2, r2
 80140b8:	930d      	str	r3, [sp, #52]	; 0x34
 80140ba:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80140be:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80140c2:	f0c0 80ea 	bcc.w	801429a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 80140c6:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80140ca:	46b6      	mov	lr, r6
 80140cc:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80140d0:	f0c0 80d2 	bcc.w	8014278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80140d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140d6:	4013      	ands	r3, r2
 80140d8:	d055      	beq.n	8014186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 80140da:	20ff      	movs	r0, #255	; 0xff
 80140dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80140de:	fb90 f1f1 	sdiv	r1, r0, r1
 80140e2:	434b      	muls	r3, r1
 80140e4:	2bfe      	cmp	r3, #254	; 0xfe
 80140e6:	dd03      	ble.n	80140f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 80140e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80140ea:	4281      	cmp	r1, r0
 80140ec:	f000 80c2 	beq.w	8014274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80140f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80140f2:	f8bc 4000 	ldrh.w	r4, [ip]
 80140f6:	fb11 f303 	smulbb	r3, r1, r3
 80140fa:	b29b      	uxth	r3, r3
 80140fc:	1c59      	adds	r1, r3, #1
 80140fe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014102:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014106:	b29d      	uxth	r5, r3
 8014108:	43db      	mvns	r3, r3
 801410a:	b2db      	uxtb	r3, r3
 801410c:	9309      	str	r3, [sp, #36]	; 0x24
 801410e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014110:	1220      	asrs	r0, r4, #8
 8014112:	fb13 f905 	smulbb	r9, r3, r5
 8014116:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801411a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801411c:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8014120:	fb00 9003 	mla	r0, r0, r3, r9
 8014124:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014126:	10e1      	asrs	r1, r4, #3
 8014128:	fb13 f905 	smulbb	r9, r3, r5
 801412c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014130:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014132:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014136:	fb01 9103 	mla	r1, r1, r3, r9
 801413a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801413c:	00e4      	lsls	r4, r4, #3
 801413e:	fb13 f505 	smulbb	r5, r3, r5
 8014142:	b2e4      	uxtb	r4, r4
 8014144:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014146:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801414a:	fb04 5403 	mla	r4, r4, r3, r5
 801414e:	b280      	uxth	r0, r0
 8014150:	b2a4      	uxth	r4, r4
 8014152:	1c43      	adds	r3, r0, #1
 8014154:	f104 0901 	add.w	r9, r4, #1
 8014158:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801415c:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8014160:	b289      	uxth	r1, r1
 8014162:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014166:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801416a:	ea49 0000 	orr.w	r0, r9, r0
 801416e:	f101 0901 	add.w	r9, r1, #1
 8014172:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014176:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801417a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801417e:	ea40 0009 	orr.w	r0, r0, r9
 8014182:	f8ac 0000 	strh.w	r0, [ip]
 8014186:	4447      	add	r7, r8
 8014188:	b2bf      	uxth	r7, r7
 801418a:	2f07      	cmp	r7, #7
 801418c:	bf81      	itttt	hi
 801418e:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8014190:	785a      	ldrbhi	r2, [r3, #1]
 8014192:	3301      	addhi	r3, #1
 8014194:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014196:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014198:	bf9a      	itte	ls
 801419a:	fa42 f208 	asrls.w	r2, r2, r8
 801419e:	b2d2      	uxtbls	r2, r2
 80141a0:	2700      	movhi	r7, #0
 80141a2:	449c      	add	ip, r3
 80141a4:	e792      	b.n	80140cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80141a6:	441d      	add	r5, r3
 80141a8:	b22d      	sxth	r5, r5
 80141aa:	e6c9      	b.n	8013f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80141ac:	f1ba 0f01 	cmp.w	sl, #1
 80141b0:	f47f af02 	bne.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80141b4:	f1bb 0f01 	cmp.w	fp, #1
 80141b8:	f47f aefe 	bne.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80141bc:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8014264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80141c0:	f8db 0000 	ldr.w	r0, [fp]
 80141c4:	6803      	ldr	r3, [r0, #0]
 80141c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80141c8:	4798      	blx	r3
 80141ca:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80141ce:	465a      	mov	r2, fp
 80141d0:	d006      	beq.n	80141e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 80141d2:	f1b8 0f04 	cmp.w	r8, #4
 80141d6:	d140      	bne.n	801425a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80141d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80141da:	3300      	adds	r3, #0
 80141dc:	bf18      	it	ne
 80141de:	2301      	movne	r3, #1
 80141e0:	0580      	lsls	r0, r0, #22
 80141e2:	d563      	bpl.n	80142ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80141e4:	f1b8 0f08 	cmp.w	r8, #8
 80141e8:	d160      	bne.n	80142ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80141ea:	2b00      	cmp	r3, #0
 80141ec:	bf0c      	ite	eq
 80141ee:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80141f2:	f44f 7180 	movne.w	r1, #256	; 0x100
 80141f6:	2e00      	cmp	r6, #0
 80141f8:	f47f aede 	bne.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80141fc:	2f00      	cmp	r7, #0
 80141fe:	f47f aedb 	bne.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014204:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014206:	18eb      	adds	r3, r5, r3
 8014208:	4283      	cmp	r3, r0
 801420a:	f73f aed5 	bgt.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801420e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014210:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014212:	444b      	add	r3, r9
 8014214:	4283      	cmp	r3, r0
 8014216:	f73f aecf 	bgt.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801421a:	6810      	ldr	r0, [r2, #0]
 801421c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8014220:	6805      	ldr	r5, [r0, #0]
 8014222:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8014226:	f1b8 0f08 	cmp.w	r8, #8
 801422a:	f04f 0600 	mov.w	r6, #0
 801422e:	bf18      	it	ne
 8014230:	3401      	addne	r4, #1
 8014232:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8014236:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014238:	9104      	str	r1, [sp, #16]
 801423a:	bf18      	it	ne
 801423c:	f024 0401 	bicne.w	r4, r4, #1
 8014240:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014242:	bf18      	it	ne
 8014244:	b2a4      	uxthne	r4, r4
 8014246:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801424a:	e9cd 4900 	strd	r4, r9, [sp]
 801424e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014250:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8014252:	47a0      	blx	r4
 8014254:	b019      	add	sp, #100	; 0x64
 8014256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801425a:	2300      	movs	r3, #0
 801425c:	e7c0      	b.n	80141e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801425e:	bf00      	nop
 8014260:	2000a52c 	.word	0x2000a52c
 8014264:	2000a534 	.word	0x2000a534
 8014268:	2000a52e 	.word	0x2000a52e
 801426c:	00fff800 	.word	0x00fff800
 8014270:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014272:	e6ee      	b.n	8014052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8014274:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014276:	e784      	b.n	8014182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8014278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801427a:	b153      	cbz	r3, 8014292 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801427c:	441f      	add	r7, r3
 801427e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014280:	b2bf      	uxth	r7, r7
 8014282:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8014286:	f007 0707 	and.w	r7, r7, #7
 801428a:	781a      	ldrb	r2, [r3, #0]
 801428c:	9328      	str	r3, [sp, #160]	; 0xa0
 801428e:	413a      	asrs	r2, r7
 8014290:	b2d2      	uxtb	r2, r2
 8014292:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014294:	445b      	add	r3, fp
 8014296:	930a      	str	r3, [sp, #40]	; 0x28
 8014298:	e711      	b.n	80140be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801429a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801429c:	2b00      	cmp	r3, #0
 801429e:	d1d9      	bne.n	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80142a0:	4b05      	ldr	r3, [pc, #20]	; (80142b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 80142a2:	6818      	ldr	r0, [r3, #0]
 80142a4:	6803      	ldr	r3, [r0, #0]
 80142a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142a8:	4798      	blx	r3
 80142aa:	e7d3      	b.n	8014254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80142ac:	2b00      	cmp	r3, #0
 80142ae:	f43f ae83 	beq.w	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80142b2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80142b6:	e79e      	b.n	80141f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 80142b8:	2000a534 	.word	0x2000a534

080142bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80142bc:	b538      	push	{r3, r4, r5, lr}
 80142be:	4c15      	ldr	r4, [pc, #84]	; (8014314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80142c0:	7823      	ldrb	r3, [r4, #0]
 80142c2:	f3bf 8f5b 	dmb	ish
 80142c6:	07da      	lsls	r2, r3, #31
 80142c8:	4605      	mov	r5, r0
 80142ca:	d40b      	bmi.n	80142e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80142cc:	4620      	mov	r0, r4
 80142ce:	f007 fcb5 	bl	801bc3c <__cxa_guard_acquire>
 80142d2:	b138      	cbz	r0, 80142e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80142d4:	4620      	mov	r0, r4
 80142d6:	f007 fcbd 	bl	801bc54 <__cxa_guard_release>
 80142da:	4a0f      	ldr	r2, [pc, #60]	; (8014318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80142dc:	490f      	ldr	r1, [pc, #60]	; (801431c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80142de:	4810      	ldr	r0, [pc, #64]	; (8014320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80142e0:	f007 fca5 	bl	801bc2e <__aeabi_atexit>
 80142e4:	4c0f      	ldr	r4, [pc, #60]	; (8014324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80142e6:	7823      	ldrb	r3, [r4, #0]
 80142e8:	f3bf 8f5b 	dmb	ish
 80142ec:	07db      	lsls	r3, r3, #31
 80142ee:	d40b      	bmi.n	8014308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80142f0:	4620      	mov	r0, r4
 80142f2:	f007 fca3 	bl	801bc3c <__cxa_guard_acquire>
 80142f6:	b138      	cbz	r0, 8014308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80142f8:	4620      	mov	r0, r4
 80142fa:	f007 fcab 	bl	801bc54 <__cxa_guard_release>
 80142fe:	4a06      	ldr	r2, [pc, #24]	; (8014318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014300:	4909      	ldr	r1, [pc, #36]	; (8014328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8014302:	480a      	ldr	r0, [pc, #40]	; (801432c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014304:	f007 fc93 	bl	801bc2e <__aeabi_atexit>
 8014308:	4b05      	ldr	r3, [pc, #20]	; (8014320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801430a:	612b      	str	r3, [r5, #16]
 801430c:	4b07      	ldr	r3, [pc, #28]	; (801432c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801430e:	616b      	str	r3, [r5, #20]
 8014310:	bd38      	pop	{r3, r4, r5, pc}
 8014312:	bf00      	nop
 8014314:	2000a600 	.word	0x2000a600
 8014318:	20000000 	.word	0x20000000
 801431c:	0801231d 	.word	0x0801231d
 8014320:	200000a4 	.word	0x200000a4
 8014324:	2000a604 	.word	0x2000a604
 8014328:	0801231b 	.word	0x0801231b
 801432c:	200000a8 	.word	0x200000a8

08014330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014330:	b538      	push	{r3, r4, r5, lr}
 8014332:	4c15      	ldr	r4, [pc, #84]	; (8014388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014334:	7823      	ldrb	r3, [r4, #0]
 8014336:	f3bf 8f5b 	dmb	ish
 801433a:	07da      	lsls	r2, r3, #31
 801433c:	4605      	mov	r5, r0
 801433e:	d40b      	bmi.n	8014358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014340:	4620      	mov	r0, r4
 8014342:	f007 fc7b 	bl	801bc3c <__cxa_guard_acquire>
 8014346:	b138      	cbz	r0, 8014358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014348:	4620      	mov	r0, r4
 801434a:	f007 fc83 	bl	801bc54 <__cxa_guard_release>
 801434e:	4a0f      	ldr	r2, [pc, #60]	; (801438c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014350:	490f      	ldr	r1, [pc, #60]	; (8014390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014352:	4810      	ldr	r0, [pc, #64]	; (8014394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014354:	f007 fc6b 	bl	801bc2e <__aeabi_atexit>
 8014358:	4c0f      	ldr	r4, [pc, #60]	; (8014398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801435a:	7823      	ldrb	r3, [r4, #0]
 801435c:	f3bf 8f5b 	dmb	ish
 8014360:	07db      	lsls	r3, r3, #31
 8014362:	d40b      	bmi.n	801437c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014364:	4620      	mov	r0, r4
 8014366:	f007 fc69 	bl	801bc3c <__cxa_guard_acquire>
 801436a:	b138      	cbz	r0, 801437c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801436c:	4620      	mov	r0, r4
 801436e:	f007 fc71 	bl	801bc54 <__cxa_guard_release>
 8014372:	4a06      	ldr	r2, [pc, #24]	; (801438c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014374:	4909      	ldr	r1, [pc, #36]	; (801439c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014376:	480a      	ldr	r0, [pc, #40]	; (80143a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014378:	f007 fc59 	bl	801bc2e <__aeabi_atexit>
 801437c:	4b05      	ldr	r3, [pc, #20]	; (8014394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801437e:	60ab      	str	r3, [r5, #8]
 8014380:	4b07      	ldr	r3, [pc, #28]	; (80143a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014382:	60eb      	str	r3, [r5, #12]
 8014384:	bd38      	pop	{r3, r4, r5, pc}
 8014386:	bf00      	nop
 8014388:	2000a5d8 	.word	0x2000a5d8
 801438c:	20000000 	.word	0x20000000
 8014390:	08012321 	.word	0x08012321
 8014394:	2000007c 	.word	0x2000007c
 8014398:	2000a5dc 	.word	0x2000a5dc
 801439c:	0801231f 	.word	0x0801231f
 80143a0:	20000080 	.word	0x20000080

080143a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80143a4:	b510      	push	{r4, lr}
 80143a6:	4604      	mov	r4, r0
 80143a8:	f7ff ff88 	bl	80142bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80143ac:	4620      	mov	r0, r4
 80143ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143b2:	f7ff bfbd 	b.w	8014330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080143b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80143b8:	b538      	push	{r3, r4, r5, lr}
 80143ba:	4c15      	ldr	r4, [pc, #84]	; (8014410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80143bc:	7823      	ldrb	r3, [r4, #0]
 80143be:	f3bf 8f5b 	dmb	ish
 80143c2:	07da      	lsls	r2, r3, #31
 80143c4:	4605      	mov	r5, r0
 80143c6:	d40b      	bmi.n	80143e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80143c8:	4620      	mov	r0, r4
 80143ca:	f007 fc37 	bl	801bc3c <__cxa_guard_acquire>
 80143ce:	b138      	cbz	r0, 80143e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80143d0:	4620      	mov	r0, r4
 80143d2:	f007 fc3f 	bl	801bc54 <__cxa_guard_release>
 80143d6:	4a0f      	ldr	r2, [pc, #60]	; (8014414 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80143d8:	490f      	ldr	r1, [pc, #60]	; (8014418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80143da:	4810      	ldr	r0, [pc, #64]	; (801441c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80143dc:	f007 fc27 	bl	801bc2e <__aeabi_atexit>
 80143e0:	4c0f      	ldr	r4, [pc, #60]	; (8014420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80143e2:	7823      	ldrb	r3, [r4, #0]
 80143e4:	f3bf 8f5b 	dmb	ish
 80143e8:	07db      	lsls	r3, r3, #31
 80143ea:	d40b      	bmi.n	8014404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80143ec:	4620      	mov	r0, r4
 80143ee:	f007 fc25 	bl	801bc3c <__cxa_guard_acquire>
 80143f2:	b138      	cbz	r0, 8014404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80143f4:	4620      	mov	r0, r4
 80143f6:	f007 fc2d 	bl	801bc54 <__cxa_guard_release>
 80143fa:	4a06      	ldr	r2, [pc, #24]	; (8014414 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80143fc:	4909      	ldr	r1, [pc, #36]	; (8014424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80143fe:	480a      	ldr	r0, [pc, #40]	; (8014428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014400:	f007 fc15 	bl	801bc2e <__aeabi_atexit>
 8014404:	4b05      	ldr	r3, [pc, #20]	; (801441c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014406:	622b      	str	r3, [r5, #32]
 8014408:	4b07      	ldr	r3, [pc, #28]	; (8014428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801440a:	626b      	str	r3, [r5, #36]	; 0x24
 801440c:	bd38      	pop	{r3, r4, r5, pc}
 801440e:	bf00      	nop
 8014410:	2000a608 	.word	0x2000a608
 8014414:	20000000 	.word	0x20000000
 8014418:	08012315 	.word	0x08012315
 801441c:	200000ac 	.word	0x200000ac
 8014420:	2000a60c 	.word	0x2000a60c
 8014424:	08012313 	.word	0x08012313
 8014428:	200000b0 	.word	0x200000b0

0801442c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801442c:	b538      	push	{r3, r4, r5, lr}
 801442e:	4c15      	ldr	r4, [pc, #84]	; (8014484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014430:	7823      	ldrb	r3, [r4, #0]
 8014432:	f3bf 8f5b 	dmb	ish
 8014436:	07da      	lsls	r2, r3, #31
 8014438:	4605      	mov	r5, r0
 801443a:	d40b      	bmi.n	8014454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801443c:	4620      	mov	r0, r4
 801443e:	f007 fbfd 	bl	801bc3c <__cxa_guard_acquire>
 8014442:	b138      	cbz	r0, 8014454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014444:	4620      	mov	r0, r4
 8014446:	f007 fc05 	bl	801bc54 <__cxa_guard_release>
 801444a:	4a0f      	ldr	r2, [pc, #60]	; (8014488 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801444c:	490f      	ldr	r1, [pc, #60]	; (801448c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801444e:	4810      	ldr	r0, [pc, #64]	; (8014490 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014450:	f007 fbed 	bl	801bc2e <__aeabi_atexit>
 8014454:	4c0f      	ldr	r4, [pc, #60]	; (8014494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014456:	7823      	ldrb	r3, [r4, #0]
 8014458:	f3bf 8f5b 	dmb	ish
 801445c:	07db      	lsls	r3, r3, #31
 801445e:	d40b      	bmi.n	8014478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014460:	4620      	mov	r0, r4
 8014462:	f007 fbeb 	bl	801bc3c <__cxa_guard_acquire>
 8014466:	b138      	cbz	r0, 8014478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014468:	4620      	mov	r0, r4
 801446a:	f007 fbf3 	bl	801bc54 <__cxa_guard_release>
 801446e:	4a06      	ldr	r2, [pc, #24]	; (8014488 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014470:	4909      	ldr	r1, [pc, #36]	; (8014498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014472:	480a      	ldr	r0, [pc, #40]	; (801449c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014474:	f007 fbdb 	bl	801bc2e <__aeabi_atexit>
 8014478:	4b05      	ldr	r3, [pc, #20]	; (8014490 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801447a:	61ab      	str	r3, [r5, #24]
 801447c:	4b07      	ldr	r3, [pc, #28]	; (801449c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801447e:	61eb      	str	r3, [r5, #28]
 8014480:	bd38      	pop	{r3, r4, r5, pc}
 8014482:	bf00      	nop
 8014484:	2000a5e0 	.word	0x2000a5e0
 8014488:	20000000 	.word	0x20000000
 801448c:	08012319 	.word	0x08012319
 8014490:	20000084 	.word	0x20000084
 8014494:	2000a5e4 	.word	0x2000a5e4
 8014498:	08012317 	.word	0x08012317
 801449c:	20000088 	.word	0x20000088

080144a0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80144a0:	b510      	push	{r4, lr}
 80144a2:	4604      	mov	r4, r0
 80144a4:	f7ff ff88 	bl	80143b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80144a8:	4620      	mov	r0, r4
 80144aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80144ae:	f7ff bfbd 	b.w	801442c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080144b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80144b4:	b538      	push	{r3, r4, r5, lr}
 80144b6:	4c15      	ldr	r4, [pc, #84]	; (801450c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80144b8:	7823      	ldrb	r3, [r4, #0]
 80144ba:	f3bf 8f5b 	dmb	ish
 80144be:	07da      	lsls	r2, r3, #31
 80144c0:	4605      	mov	r5, r0
 80144c2:	d40b      	bmi.n	80144dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80144c4:	4620      	mov	r0, r4
 80144c6:	f007 fbb9 	bl	801bc3c <__cxa_guard_acquire>
 80144ca:	b138      	cbz	r0, 80144dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80144cc:	4620      	mov	r0, r4
 80144ce:	f007 fbc1 	bl	801bc54 <__cxa_guard_release>
 80144d2:	4a0f      	ldr	r2, [pc, #60]	; (8014510 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80144d4:	490f      	ldr	r1, [pc, #60]	; (8014514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80144d6:	4810      	ldr	r0, [pc, #64]	; (8014518 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80144d8:	f007 fba9 	bl	801bc2e <__aeabi_atexit>
 80144dc:	4c0f      	ldr	r4, [pc, #60]	; (801451c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80144de:	7823      	ldrb	r3, [r4, #0]
 80144e0:	f3bf 8f5b 	dmb	ish
 80144e4:	07db      	lsls	r3, r3, #31
 80144e6:	d40b      	bmi.n	8014500 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80144e8:	4620      	mov	r0, r4
 80144ea:	f007 fba7 	bl	801bc3c <__cxa_guard_acquire>
 80144ee:	b138      	cbz	r0, 8014500 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80144f0:	4620      	mov	r0, r4
 80144f2:	f007 fbaf 	bl	801bc54 <__cxa_guard_release>
 80144f6:	4a06      	ldr	r2, [pc, #24]	; (8014510 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80144f8:	4909      	ldr	r1, [pc, #36]	; (8014520 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80144fa:	480a      	ldr	r0, [pc, #40]	; (8014524 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80144fc:	f007 fb97 	bl	801bc2e <__aeabi_atexit>
 8014500:	4b05      	ldr	r3, [pc, #20]	; (8014518 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014502:	632b      	str	r3, [r5, #48]	; 0x30
 8014504:	4b07      	ldr	r3, [pc, #28]	; (8014524 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014506:	636b      	str	r3, [r5, #52]	; 0x34
 8014508:	bd38      	pop	{r3, r4, r5, pc}
 801450a:	bf00      	nop
 801450c:	2000a618 	.word	0x2000a618
 8014510:	20000000 	.word	0x20000000
 8014514:	0801230d 	.word	0x0801230d
 8014518:	200000bc 	.word	0x200000bc
 801451c:	2000a61c 	.word	0x2000a61c
 8014520:	0801230b 	.word	0x0801230b
 8014524:	200000c0 	.word	0x200000c0

08014528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8014528:	b538      	push	{r3, r4, r5, lr}
 801452a:	4c15      	ldr	r4, [pc, #84]	; (8014580 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801452c:	7823      	ldrb	r3, [r4, #0]
 801452e:	f3bf 8f5b 	dmb	ish
 8014532:	07da      	lsls	r2, r3, #31
 8014534:	4605      	mov	r5, r0
 8014536:	d40b      	bmi.n	8014550 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014538:	4620      	mov	r0, r4
 801453a:	f007 fb7f 	bl	801bc3c <__cxa_guard_acquire>
 801453e:	b138      	cbz	r0, 8014550 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014540:	4620      	mov	r0, r4
 8014542:	f007 fb87 	bl	801bc54 <__cxa_guard_release>
 8014546:	4a0f      	ldr	r2, [pc, #60]	; (8014584 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014548:	490f      	ldr	r1, [pc, #60]	; (8014588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801454a:	4810      	ldr	r0, [pc, #64]	; (801458c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801454c:	f007 fb6f 	bl	801bc2e <__aeabi_atexit>
 8014550:	4c0f      	ldr	r4, [pc, #60]	; (8014590 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014552:	7823      	ldrb	r3, [r4, #0]
 8014554:	f3bf 8f5b 	dmb	ish
 8014558:	07db      	lsls	r3, r3, #31
 801455a:	d40b      	bmi.n	8014574 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801455c:	4620      	mov	r0, r4
 801455e:	f007 fb6d 	bl	801bc3c <__cxa_guard_acquire>
 8014562:	b138      	cbz	r0, 8014574 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014564:	4620      	mov	r0, r4
 8014566:	f007 fb75 	bl	801bc54 <__cxa_guard_release>
 801456a:	4a06      	ldr	r2, [pc, #24]	; (8014584 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801456c:	4909      	ldr	r1, [pc, #36]	; (8014594 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801456e:	480a      	ldr	r0, [pc, #40]	; (8014598 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014570:	f007 fb5d 	bl	801bc2e <__aeabi_atexit>
 8014574:	4b05      	ldr	r3, [pc, #20]	; (801458c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014576:	62ab      	str	r3, [r5, #40]	; 0x28
 8014578:	4b07      	ldr	r3, [pc, #28]	; (8014598 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801457a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801457c:	bd38      	pop	{r3, r4, r5, pc}
 801457e:	bf00      	nop
 8014580:	2000a5e8 	.word	0x2000a5e8
 8014584:	20000000 	.word	0x20000000
 8014588:	08012311 	.word	0x08012311
 801458c:	2000008c 	.word	0x2000008c
 8014590:	2000a5ec 	.word	0x2000a5ec
 8014594:	0801230f 	.word	0x0801230f
 8014598:	20000090 	.word	0x20000090

0801459c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801459c:	b510      	push	{r4, lr}
 801459e:	4604      	mov	r4, r0
 80145a0:	f7ff ff88 	bl	80144b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80145a4:	4620      	mov	r0, r4
 80145a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80145aa:	f7ff bfbd 	b.w	8014528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080145b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80145b0:	b538      	push	{r3, r4, r5, lr}
 80145b2:	4c15      	ldr	r4, [pc, #84]	; (8014608 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80145b4:	7823      	ldrb	r3, [r4, #0]
 80145b6:	f3bf 8f5b 	dmb	ish
 80145ba:	07da      	lsls	r2, r3, #31
 80145bc:	4605      	mov	r5, r0
 80145be:	d40b      	bmi.n	80145d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80145c0:	4620      	mov	r0, r4
 80145c2:	f007 fb3b 	bl	801bc3c <__cxa_guard_acquire>
 80145c6:	b138      	cbz	r0, 80145d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80145c8:	4620      	mov	r0, r4
 80145ca:	f007 fb43 	bl	801bc54 <__cxa_guard_release>
 80145ce:	4a0f      	ldr	r2, [pc, #60]	; (801460c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80145d0:	490f      	ldr	r1, [pc, #60]	; (8014610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80145d2:	4810      	ldr	r0, [pc, #64]	; (8014614 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80145d4:	f007 fb2b 	bl	801bc2e <__aeabi_atexit>
 80145d8:	4c0f      	ldr	r4, [pc, #60]	; (8014618 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80145da:	7823      	ldrb	r3, [r4, #0]
 80145dc:	f3bf 8f5b 	dmb	ish
 80145e0:	07db      	lsls	r3, r3, #31
 80145e2:	d40b      	bmi.n	80145fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80145e4:	4620      	mov	r0, r4
 80145e6:	f007 fb29 	bl	801bc3c <__cxa_guard_acquire>
 80145ea:	b138      	cbz	r0, 80145fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80145ec:	4620      	mov	r0, r4
 80145ee:	f007 fb31 	bl	801bc54 <__cxa_guard_release>
 80145f2:	4a06      	ldr	r2, [pc, #24]	; (801460c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80145f4:	4909      	ldr	r1, [pc, #36]	; (801461c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80145f6:	480a      	ldr	r0, [pc, #40]	; (8014620 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80145f8:	f007 fb19 	bl	801bc2e <__aeabi_atexit>
 80145fc:	4b05      	ldr	r3, [pc, #20]	; (8014614 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80145fe:	652b      	str	r3, [r5, #80]	; 0x50
 8014600:	4b07      	ldr	r3, [pc, #28]	; (8014620 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014602:	656b      	str	r3, [r5, #84]	; 0x54
 8014604:	bd38      	pop	{r3, r4, r5, pc}
 8014606:	bf00      	nop
 8014608:	2000a620 	.word	0x2000a620
 801460c:	20000000 	.word	0x20000000
 8014610:	080122fd 	.word	0x080122fd
 8014614:	200000c4 	.word	0x200000c4
 8014618:	2000a624 	.word	0x2000a624
 801461c:	080122fb 	.word	0x080122fb
 8014620:	200000c8 	.word	0x200000c8

08014624 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8014624:	b538      	push	{r3, r4, r5, lr}
 8014626:	4c15      	ldr	r4, [pc, #84]	; (801467c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8014628:	7823      	ldrb	r3, [r4, #0]
 801462a:	f3bf 8f5b 	dmb	ish
 801462e:	07da      	lsls	r2, r3, #31
 8014630:	4605      	mov	r5, r0
 8014632:	d40b      	bmi.n	801464c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014634:	4620      	mov	r0, r4
 8014636:	f007 fb01 	bl	801bc3c <__cxa_guard_acquire>
 801463a:	b138      	cbz	r0, 801464c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801463c:	4620      	mov	r0, r4
 801463e:	f007 fb09 	bl	801bc54 <__cxa_guard_release>
 8014642:	4a0f      	ldr	r2, [pc, #60]	; (8014680 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014644:	490f      	ldr	r1, [pc, #60]	; (8014684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8014646:	4810      	ldr	r0, [pc, #64]	; (8014688 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014648:	f007 faf1 	bl	801bc2e <__aeabi_atexit>
 801464c:	4c0f      	ldr	r4, [pc, #60]	; (801468c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801464e:	7823      	ldrb	r3, [r4, #0]
 8014650:	f3bf 8f5b 	dmb	ish
 8014654:	07db      	lsls	r3, r3, #31
 8014656:	d40b      	bmi.n	8014670 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014658:	4620      	mov	r0, r4
 801465a:	f007 faef 	bl	801bc3c <__cxa_guard_acquire>
 801465e:	b138      	cbz	r0, 8014670 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014660:	4620      	mov	r0, r4
 8014662:	f007 faf7 	bl	801bc54 <__cxa_guard_release>
 8014666:	4a06      	ldr	r2, [pc, #24]	; (8014680 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014668:	4909      	ldr	r1, [pc, #36]	; (8014690 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801466a:	480a      	ldr	r0, [pc, #40]	; (8014694 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801466c:	f007 fadf 	bl	801bc2e <__aeabi_atexit>
 8014670:	4b05      	ldr	r3, [pc, #20]	; (8014688 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014672:	64ab      	str	r3, [r5, #72]	; 0x48
 8014674:	4b07      	ldr	r3, [pc, #28]	; (8014694 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014676:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014678:	bd38      	pop	{r3, r4, r5, pc}
 801467a:	bf00      	nop
 801467c:	2000a628 	.word	0x2000a628
 8014680:	20000000 	.word	0x20000000
 8014684:	08012301 	.word	0x08012301
 8014688:	200000cc 	.word	0x200000cc
 801468c:	2000a62c 	.word	0x2000a62c
 8014690:	080122ff 	.word	0x080122ff
 8014694:	200000d0 	.word	0x200000d0

08014698 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014698:	b538      	push	{r3, r4, r5, lr}
 801469a:	4c15      	ldr	r4, [pc, #84]	; (80146f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801469c:	7823      	ldrb	r3, [r4, #0]
 801469e:	f3bf 8f5b 	dmb	ish
 80146a2:	07da      	lsls	r2, r3, #31
 80146a4:	4605      	mov	r5, r0
 80146a6:	d40b      	bmi.n	80146c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80146a8:	4620      	mov	r0, r4
 80146aa:	f007 fac7 	bl	801bc3c <__cxa_guard_acquire>
 80146ae:	b138      	cbz	r0, 80146c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80146b0:	4620      	mov	r0, r4
 80146b2:	f007 facf 	bl	801bc54 <__cxa_guard_release>
 80146b6:	4a0f      	ldr	r2, [pc, #60]	; (80146f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80146b8:	490f      	ldr	r1, [pc, #60]	; (80146f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80146ba:	4810      	ldr	r0, [pc, #64]	; (80146fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80146bc:	f007 fab7 	bl	801bc2e <__aeabi_atexit>
 80146c0:	4c0f      	ldr	r4, [pc, #60]	; (8014700 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80146c2:	7823      	ldrb	r3, [r4, #0]
 80146c4:	f3bf 8f5b 	dmb	ish
 80146c8:	07db      	lsls	r3, r3, #31
 80146ca:	d40b      	bmi.n	80146e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80146cc:	4620      	mov	r0, r4
 80146ce:	f007 fab5 	bl	801bc3c <__cxa_guard_acquire>
 80146d2:	b138      	cbz	r0, 80146e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80146d4:	4620      	mov	r0, r4
 80146d6:	f007 fabd 	bl	801bc54 <__cxa_guard_release>
 80146da:	4a06      	ldr	r2, [pc, #24]	; (80146f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80146dc:	4909      	ldr	r1, [pc, #36]	; (8014704 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80146de:	480a      	ldr	r0, [pc, #40]	; (8014708 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80146e0:	f007 faa5 	bl	801bc2e <__aeabi_atexit>
 80146e4:	4b05      	ldr	r3, [pc, #20]	; (80146fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80146e6:	642b      	str	r3, [r5, #64]	; 0x40
 80146e8:	4b07      	ldr	r3, [pc, #28]	; (8014708 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80146ea:	646b      	str	r3, [r5, #68]	; 0x44
 80146ec:	bd38      	pop	{r3, r4, r5, pc}
 80146ee:	bf00      	nop
 80146f0:	2000a5f0 	.word	0x2000a5f0
 80146f4:	20000000 	.word	0x20000000
 80146f8:	08012305 	.word	0x08012305
 80146fc:	20000094 	.word	0x20000094
 8014700:	2000a5f4 	.word	0x2000a5f4
 8014704:	08012303 	.word	0x08012303
 8014708:	20000098 	.word	0x20000098

0801470c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801470c:	b538      	push	{r3, r4, r5, lr}
 801470e:	4c15      	ldr	r4, [pc, #84]	; (8014764 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8014710:	7823      	ldrb	r3, [r4, #0]
 8014712:	f3bf 8f5b 	dmb	ish
 8014716:	07da      	lsls	r2, r3, #31
 8014718:	4605      	mov	r5, r0
 801471a:	d40b      	bmi.n	8014734 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801471c:	4620      	mov	r0, r4
 801471e:	f007 fa8d 	bl	801bc3c <__cxa_guard_acquire>
 8014722:	b138      	cbz	r0, 8014734 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014724:	4620      	mov	r0, r4
 8014726:	f007 fa95 	bl	801bc54 <__cxa_guard_release>
 801472a:	4a0f      	ldr	r2, [pc, #60]	; (8014768 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801472c:	490f      	ldr	r1, [pc, #60]	; (801476c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801472e:	4810      	ldr	r0, [pc, #64]	; (8014770 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014730:	f007 fa7d 	bl	801bc2e <__aeabi_atexit>
 8014734:	4c0f      	ldr	r4, [pc, #60]	; (8014774 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8014736:	7823      	ldrb	r3, [r4, #0]
 8014738:	f3bf 8f5b 	dmb	ish
 801473c:	07db      	lsls	r3, r3, #31
 801473e:	d40b      	bmi.n	8014758 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014740:	4620      	mov	r0, r4
 8014742:	f007 fa7b 	bl	801bc3c <__cxa_guard_acquire>
 8014746:	b138      	cbz	r0, 8014758 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014748:	4620      	mov	r0, r4
 801474a:	f007 fa83 	bl	801bc54 <__cxa_guard_release>
 801474e:	4a06      	ldr	r2, [pc, #24]	; (8014768 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014750:	4909      	ldr	r1, [pc, #36]	; (8014778 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8014752:	480a      	ldr	r0, [pc, #40]	; (801477c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014754:	f007 fa6b 	bl	801bc2e <__aeabi_atexit>
 8014758:	4b05      	ldr	r3, [pc, #20]	; (8014770 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801475a:	63ab      	str	r3, [r5, #56]	; 0x38
 801475c:	4b07      	ldr	r3, [pc, #28]	; (801477c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801475e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8014760:	bd38      	pop	{r3, r4, r5, pc}
 8014762:	bf00      	nop
 8014764:	2000a610 	.word	0x2000a610
 8014768:	20000000 	.word	0x20000000
 801476c:	08012309 	.word	0x08012309
 8014770:	200000b4 	.word	0x200000b4
 8014774:	2000a614 	.word	0x2000a614
 8014778:	08012307 	.word	0x08012307
 801477c:	200000b8 	.word	0x200000b8

08014780 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014780:	b510      	push	{r4, lr}
 8014782:	4604      	mov	r4, r0
 8014784:	f7ff ff14 	bl	80145b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014788:	4620      	mov	r0, r4
 801478a:	f7ff ff85 	bl	8014698 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801478e:	4620      	mov	r0, r4
 8014790:	f7ff ff48 	bl	8014624 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014794:	4620      	mov	r0, r4
 8014796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801479a:	f7ff bfb7 	b.w	801470c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080147a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80147a0:	b538      	push	{r3, r4, r5, lr}
 80147a2:	4c15      	ldr	r4, [pc, #84]	; (80147f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80147a4:	7823      	ldrb	r3, [r4, #0]
 80147a6:	f3bf 8f5b 	dmb	ish
 80147aa:	07da      	lsls	r2, r3, #31
 80147ac:	4605      	mov	r5, r0
 80147ae:	d40b      	bmi.n	80147c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80147b0:	4620      	mov	r0, r4
 80147b2:	f007 fa43 	bl	801bc3c <__cxa_guard_acquire>
 80147b6:	b138      	cbz	r0, 80147c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80147b8:	4620      	mov	r0, r4
 80147ba:	f007 fa4b 	bl	801bc54 <__cxa_guard_release>
 80147be:	4a0f      	ldr	r2, [pc, #60]	; (80147fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80147c0:	490f      	ldr	r1, [pc, #60]	; (8014800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80147c2:	4810      	ldr	r0, [pc, #64]	; (8014804 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80147c4:	f007 fa33 	bl	801bc2e <__aeabi_atexit>
 80147c8:	4c0f      	ldr	r4, [pc, #60]	; (8014808 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80147ca:	7823      	ldrb	r3, [r4, #0]
 80147cc:	f3bf 8f5b 	dmb	ish
 80147d0:	07db      	lsls	r3, r3, #31
 80147d2:	d40b      	bmi.n	80147ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80147d4:	4620      	mov	r0, r4
 80147d6:	f007 fa31 	bl	801bc3c <__cxa_guard_acquire>
 80147da:	b138      	cbz	r0, 80147ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80147dc:	4620      	mov	r0, r4
 80147de:	f007 fa39 	bl	801bc54 <__cxa_guard_release>
 80147e2:	4a06      	ldr	r2, [pc, #24]	; (80147fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80147e4:	4909      	ldr	r1, [pc, #36]	; (801480c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80147e6:	480a      	ldr	r0, [pc, #40]	; (8014810 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80147e8:	f007 fa21 	bl	801bc2e <__aeabi_atexit>
 80147ec:	4b05      	ldr	r3, [pc, #20]	; (8014804 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80147ee:	662b      	str	r3, [r5, #96]	; 0x60
 80147f0:	4b07      	ldr	r3, [pc, #28]	; (8014810 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80147f2:	666b      	str	r3, [r5, #100]	; 0x64
 80147f4:	bd38      	pop	{r3, r4, r5, pc}
 80147f6:	bf00      	nop
 80147f8:	2000a5f8 	.word	0x2000a5f8
 80147fc:	20000000 	.word	0x20000000
 8014800:	080122f5 	.word	0x080122f5
 8014804:	2000009c 	.word	0x2000009c
 8014808:	2000a5fc 	.word	0x2000a5fc
 801480c:	080122f3 	.word	0x080122f3
 8014810:	200000a0 	.word	0x200000a0

08014814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014814:	b538      	push	{r3, r4, r5, lr}
 8014816:	4c15      	ldr	r4, [pc, #84]	; (801486c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8014818:	7823      	ldrb	r3, [r4, #0]
 801481a:	f3bf 8f5b 	dmb	ish
 801481e:	07da      	lsls	r2, r3, #31
 8014820:	4605      	mov	r5, r0
 8014822:	d40b      	bmi.n	801483c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014824:	4620      	mov	r0, r4
 8014826:	f007 fa09 	bl	801bc3c <__cxa_guard_acquire>
 801482a:	b138      	cbz	r0, 801483c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801482c:	4620      	mov	r0, r4
 801482e:	f007 fa11 	bl	801bc54 <__cxa_guard_release>
 8014832:	4a0f      	ldr	r2, [pc, #60]	; (8014870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014834:	490f      	ldr	r1, [pc, #60]	; (8014874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8014836:	4810      	ldr	r0, [pc, #64]	; (8014878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014838:	f007 f9f9 	bl	801bc2e <__aeabi_atexit>
 801483c:	4c0f      	ldr	r4, [pc, #60]	; (801487c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801483e:	7823      	ldrb	r3, [r4, #0]
 8014840:	f3bf 8f5b 	dmb	ish
 8014844:	07db      	lsls	r3, r3, #31
 8014846:	d40b      	bmi.n	8014860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014848:	4620      	mov	r0, r4
 801484a:	f007 f9f7 	bl	801bc3c <__cxa_guard_acquire>
 801484e:	b138      	cbz	r0, 8014860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014850:	4620      	mov	r0, r4
 8014852:	f007 f9ff 	bl	801bc54 <__cxa_guard_release>
 8014856:	4a06      	ldr	r2, [pc, #24]	; (8014870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014858:	4909      	ldr	r1, [pc, #36]	; (8014880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801485a:	480a      	ldr	r0, [pc, #40]	; (8014884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801485c:	f007 f9e7 	bl	801bc2e <__aeabi_atexit>
 8014860:	4b05      	ldr	r3, [pc, #20]	; (8014878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014862:	65ab      	str	r3, [r5, #88]	; 0x58
 8014864:	4b07      	ldr	r3, [pc, #28]	; (8014884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014866:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014868:	bd38      	pop	{r3, r4, r5, pc}
 801486a:	bf00      	nop
 801486c:	2000a5d0 	.word	0x2000a5d0
 8014870:	20000000 	.word	0x20000000
 8014874:	080122f9 	.word	0x080122f9
 8014878:	20000074 	.word	0x20000074
 801487c:	2000a5d4 	.word	0x2000a5d4
 8014880:	080122f7 	.word	0x080122f7
 8014884:	20000078 	.word	0x20000078

08014888 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014888:	b510      	push	{r4, lr}
 801488a:	4604      	mov	r4, r0
 801488c:	f7ff ff88 	bl	80147a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014890:	4620      	mov	r0, r4
 8014892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014896:	f7ff bfbd 	b.w	8014814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801489c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801489c:	b538      	push	{r3, r4, r5, lr}
 801489e:	4c15      	ldr	r4, [pc, #84]	; (80148f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80148a0:	7823      	ldrb	r3, [r4, #0]
 80148a2:	f3bf 8f5b 	dmb	ish
 80148a6:	07da      	lsls	r2, r3, #31
 80148a8:	4605      	mov	r5, r0
 80148aa:	d40b      	bmi.n	80148c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80148ac:	4620      	mov	r0, r4
 80148ae:	f007 f9c5 	bl	801bc3c <__cxa_guard_acquire>
 80148b2:	b138      	cbz	r0, 80148c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80148b4:	4620      	mov	r0, r4
 80148b6:	f007 f9cd 	bl	801bc54 <__cxa_guard_release>
 80148ba:	4a0f      	ldr	r2, [pc, #60]	; (80148f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80148bc:	490f      	ldr	r1, [pc, #60]	; (80148fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80148be:	4810      	ldr	r0, [pc, #64]	; (8014900 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80148c0:	f007 f9b5 	bl	801bc2e <__aeabi_atexit>
 80148c4:	4c0f      	ldr	r4, [pc, #60]	; (8014904 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80148c6:	7823      	ldrb	r3, [r4, #0]
 80148c8:	f3bf 8f5b 	dmb	ish
 80148cc:	07db      	lsls	r3, r3, #31
 80148ce:	d40b      	bmi.n	80148e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80148d0:	4620      	mov	r0, r4
 80148d2:	f007 f9b3 	bl	801bc3c <__cxa_guard_acquire>
 80148d6:	b138      	cbz	r0, 80148e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80148d8:	4620      	mov	r0, r4
 80148da:	f007 f9bb 	bl	801bc54 <__cxa_guard_release>
 80148de:	4a06      	ldr	r2, [pc, #24]	; (80148f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80148e0:	4909      	ldr	r1, [pc, #36]	; (8014908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80148e2:	480a      	ldr	r0, [pc, #40]	; (801490c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80148e4:	f007 f9a3 	bl	801bc2e <__aeabi_atexit>
 80148e8:	4b05      	ldr	r3, [pc, #20]	; (8014900 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80148ea:	672b      	str	r3, [r5, #112]	; 0x70
 80148ec:	4b07      	ldr	r3, [pc, #28]	; (801490c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80148ee:	676b      	str	r3, [r5, #116]	; 0x74
 80148f0:	bd38      	pop	{r3, r4, r5, pc}
 80148f2:	bf00      	nop
 80148f4:	2000a5c8 	.word	0x2000a5c8
 80148f8:	20000000 	.word	0x20000000
 80148fc:	080122ed 	.word	0x080122ed
 8014900:	2000006c 	.word	0x2000006c
 8014904:	2000a5cc 	.word	0x2000a5cc
 8014908:	080122eb 	.word	0x080122eb
 801490c:	20000070 	.word	0x20000070

08014910 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014910:	b538      	push	{r3, r4, r5, lr}
 8014912:	4c15      	ldr	r4, [pc, #84]	; (8014968 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014914:	7823      	ldrb	r3, [r4, #0]
 8014916:	f3bf 8f5b 	dmb	ish
 801491a:	07da      	lsls	r2, r3, #31
 801491c:	4605      	mov	r5, r0
 801491e:	d40b      	bmi.n	8014938 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014920:	4620      	mov	r0, r4
 8014922:	f007 f98b 	bl	801bc3c <__cxa_guard_acquire>
 8014926:	b138      	cbz	r0, 8014938 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014928:	4620      	mov	r0, r4
 801492a:	f007 f993 	bl	801bc54 <__cxa_guard_release>
 801492e:	4a0f      	ldr	r2, [pc, #60]	; (801496c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014930:	490f      	ldr	r1, [pc, #60]	; (8014970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8014932:	4810      	ldr	r0, [pc, #64]	; (8014974 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014934:	f007 f97b 	bl	801bc2e <__aeabi_atexit>
 8014938:	4c0f      	ldr	r4, [pc, #60]	; (8014978 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801493a:	7823      	ldrb	r3, [r4, #0]
 801493c:	f3bf 8f5b 	dmb	ish
 8014940:	07db      	lsls	r3, r3, #31
 8014942:	d40b      	bmi.n	801495c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014944:	4620      	mov	r0, r4
 8014946:	f007 f979 	bl	801bc3c <__cxa_guard_acquire>
 801494a:	b138      	cbz	r0, 801495c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801494c:	4620      	mov	r0, r4
 801494e:	f007 f981 	bl	801bc54 <__cxa_guard_release>
 8014952:	4a06      	ldr	r2, [pc, #24]	; (801496c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014954:	4909      	ldr	r1, [pc, #36]	; (801497c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014956:	480a      	ldr	r0, [pc, #40]	; (8014980 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014958:	f007 f969 	bl	801bc2e <__aeabi_atexit>
 801495c:	4b05      	ldr	r3, [pc, #20]	; (8014974 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801495e:	66ab      	str	r3, [r5, #104]	; 0x68
 8014960:	4b07      	ldr	r3, [pc, #28]	; (8014980 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014962:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014964:	bd38      	pop	{r3, r4, r5, pc}
 8014966:	bf00      	nop
 8014968:	2000a5c0 	.word	0x2000a5c0
 801496c:	20000000 	.word	0x20000000
 8014970:	080122f1 	.word	0x080122f1
 8014974:	20000064 	.word	0x20000064
 8014978:	2000a5c4 	.word	0x2000a5c4
 801497c:	080122ef 	.word	0x080122ef
 8014980:	20000068 	.word	0x20000068

08014984 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014984:	b510      	push	{r4, lr}
 8014986:	4604      	mov	r4, r0
 8014988:	f7ff ff88 	bl	801489c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801498c:	4620      	mov	r0, r4
 801498e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014992:	f7ff bfbd 	b.w	8014910 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014996 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014996:	b510      	push	{r4, lr}
 8014998:	4604      	mov	r4, r0
 801499a:	f7ff fff3 	bl	8014984 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801499e:	4620      	mov	r0, r4
 80149a0:	f7ff ff72 	bl	8014888 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80149a4:	4620      	mov	r0, r4
 80149a6:	f7ff fdf9 	bl	801459c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80149aa:	4620      	mov	r0, r4
 80149ac:	f7ff fcfa 	bl	80143a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80149b0:	4620      	mov	r0, r4
 80149b2:	f7ff fd75 	bl	80144a0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80149b6:	4620      	mov	r0, r4
 80149b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149bc:	f7ff bee0 	b.w	8014780 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080149c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80149c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149c4:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80149c8:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80149cc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80149d0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80149d4:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80149d8:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80149dc:	8808      	ldrh	r0, [r1, #0]
 80149de:	fb0e 4708 	mla	r7, lr, r8, r4
 80149e2:	f1be 0f00 	cmp.w	lr, #0
 80149e6:	eb02 0a07 	add.w	sl, r2, r7
 80149ea:	db37      	blt.n	8014a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80149ec:	45f3      	cmp	fp, lr
 80149ee:	dd35      	ble.n	8014a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80149f0:	2c00      	cmp	r4, #0
 80149f2:	db31      	blt.n	8014a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80149f4:	45a0      	cmp	r8, r4
 80149f6:	dd2f      	ble.n	8014a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80149f8:	5dd2      	ldrb	r2, [r2, r7]
 80149fa:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80149fe:	1c62      	adds	r2, r4, #1
 8014a00:	d42f      	bmi.n	8014a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a02:	4590      	cmp	r8, r2
 8014a04:	dd2d      	ble.n	8014a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a06:	b366      	cbz	r6, 8014a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a08:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014a0c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014a10:	f11e 0e01 	adds.w	lr, lr, #1
 8014a14:	d429      	bmi.n	8014a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014a16:	45f3      	cmp	fp, lr
 8014a18:	dd27      	ble.n	8014a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014a1a:	f1bc 0f00 	cmp.w	ip, #0
 8014a1e:	f000 80a1 	beq.w	8014b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8014a22:	2c00      	cmp	r4, #0
 8014a24:	db1f      	blt.n	8014a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014a26:	45a0      	cmp	r8, r4
 8014a28:	dd1d      	ble.n	8014a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014a2a:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8014a2e:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8014a32:	3401      	adds	r4, #1
 8014a34:	d41c      	bmi.n	8014a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014a36:	45a0      	cmp	r8, r4
 8014a38:	dd1a      	ble.n	8014a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014a3a:	b1de      	cbz	r6, 8014a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8014a3c:	44d0      	add	r8, sl
 8014a3e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014a42:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014a46:	2e0f      	cmp	r6, #15
 8014a48:	d915      	bls.n	8014a76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014a4a:	4b49      	ldr	r3, [pc, #292]	; (8014b70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014a4c:	4a49      	ldr	r2, [pc, #292]	; (8014b74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8014a4e:	484a      	ldr	r0, [pc, #296]	; (8014b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8014a50:	f240 11db 	movw	r1, #475	; 0x1db
 8014a54:	f007 f91e 	bl	801bc94 <__assert_func>
 8014a58:	4681      	mov	r9, r0
 8014a5a:	e7d0      	b.n	80149fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014a5c:	4607      	mov	r7, r0
 8014a5e:	4681      	mov	r9, r0
 8014a60:	e7d6      	b.n	8014a10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014a62:	4607      	mov	r7, r0
 8014a64:	e7d4      	b.n	8014a10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014a66:	4686      	mov	lr, r0
 8014a68:	e7e3      	b.n	8014a32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014a6a:	4603      	mov	r3, r0
 8014a6c:	4686      	mov	lr, r0
 8014a6e:	e7ea      	b.n	8014a46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014a70:	4603      	mov	r3, r0
 8014a72:	e7e8      	b.n	8014a46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014a74:	4603      	mov	r3, r0
 8014a76:	f1bc 0f0f 	cmp.w	ip, #15
 8014a7a:	d8e6      	bhi.n	8014a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014a7c:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8014a80:	fb16 f80c 	smulbb	r8, r6, ip
 8014a84:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014a88:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014a8c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014a90:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014a94:	ea44 0909 	orr.w	r9, r4, r9
 8014a98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014a9c:	f1cc 0410 	rsb	r4, ip, #16
 8014aa0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014aa4:	1ba4      	subs	r4, r4, r6
 8014aa6:	041a      	lsls	r2, r3, #16
 8014aa8:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014aac:	ea4a 0707 	orr.w	r7, sl, r7
 8014ab0:	4377      	muls	r7, r6
 8014ab2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014ab6:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014aba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014abe:	fb04 7409 	mla	r4, r4, r9, r7
 8014ac2:	4313      	orrs	r3, r2
 8014ac4:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014ac8:	fb08 4303 	mla	r3, r8, r3, r4
 8014acc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014ad0:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014ad4:	4322      	orrs	r2, r4
 8014ad6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014ada:	fb0c 3202 	mla	r2, ip, r2, r3
 8014ade:	0d53      	lsrs	r3, r2, #21
 8014ae0:	0952      	lsrs	r2, r2, #5
 8014ae2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014ae6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014aea:	431a      	orrs	r2, r3
 8014aec:	b293      	uxth	r3, r2
 8014aee:	b2af      	uxth	r7, r5
 8014af0:	1202      	asrs	r2, r0, #8
 8014af2:	43ed      	mvns	r5, r5
 8014af4:	b2ed      	uxtb	r5, r5
 8014af6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014afa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014afe:	fb12 f205 	smulbb	r2, r2, r5
 8014b02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b06:	fb0c 2c07 	mla	ip, ip, r7, r2
 8014b0a:	00dc      	lsls	r4, r3, #3
 8014b0c:	10da      	asrs	r2, r3, #3
 8014b0e:	10c6      	asrs	r6, r0, #3
 8014b10:	00c3      	lsls	r3, r0, #3
 8014b12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b16:	b2db      	uxtb	r3, r3
 8014b18:	fb16 f605 	smulbb	r6, r6, r5
 8014b1c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014b20:	b2e4      	uxtb	r4, r4
 8014b22:	fb13 f305 	smulbb	r3, r3, r5
 8014b26:	fa1f fc8c 	uxth.w	ip, ip
 8014b2a:	fb02 6207 	mla	r2, r2, r7, r6
 8014b2e:	fb04 3307 	mla	r3, r4, r7, r3
 8014b32:	b296      	uxth	r6, r2
 8014b34:	b29a      	uxth	r2, r3
 8014b36:	f10c 0301 	add.w	r3, ip, #1
 8014b3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014b3e:	1c53      	adds	r3, r2, #1
 8014b40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014b44:	1c72      	adds	r2, r6, #1
 8014b46:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014b4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014b4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014b52:	0952      	lsrs	r2, r2, #5
 8014b54:	ea43 030c 	orr.w	r3, r3, ip
 8014b58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014b5c:	4313      	orrs	r3, r2
 8014b5e:	800b      	strh	r3, [r1, #0]
 8014b60:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b64:	2e0f      	cmp	r6, #15
 8014b66:	f63f af70 	bhi.w	8014a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014b6a:	4603      	mov	r3, r0
 8014b6c:	4686      	mov	lr, r0
 8014b6e:	e785      	b.n	8014a7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8014b70:	0801fc17 	.word	0x0801fc17
 8014b74:	080201ef 	.word	0x080201ef
 8014b78:	0801fbe4 	.word	0x0801fbe4

08014b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b80:	ed2d 8b08 	vpush	{d8-d11}
 8014b84:	b099      	sub	sp, #100	; 0x64
 8014b86:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014b8a:	9215      	str	r2, [sp, #84]	; 0x54
 8014b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8014b8e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014b90:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014b94:	930d      	str	r3, [sp, #52]	; 0x34
 8014b96:	910c      	str	r1, [sp, #48]	; 0x30
 8014b98:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014b9c:	9016      	str	r0, [sp, #88]	; 0x58
 8014b9e:	6850      	ldr	r0, [r2, #4]
 8014ba0:	6812      	ldr	r2, [r2, #0]
 8014ba2:	fb00 1303 	mla	r3, r0, r3, r1
 8014ba6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014baa:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014bac:	681b      	ldr	r3, [r3, #0]
 8014bae:	930b      	str	r3, [sp, #44]	; 0x2c
 8014bb0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014bb2:	685e      	ldr	r6, [r3, #4]
 8014bb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014bb6:	43db      	mvns	r3, r3
 8014bb8:	b2db      	uxtb	r3, r3
 8014bba:	eeb0 aa40 	vmov.f32	s20, s0
 8014bbe:	eef0 9a60 	vmov.f32	s19, s1
 8014bc2:	eeb0 9a41 	vmov.f32	s18, s2
 8014bc6:	eeb0 8a62 	vmov.f32	s16, s5
 8014bca:	eef0 8a43 	vmov.f32	s17, s6
 8014bce:	eef0 ba44 	vmov.f32	s23, s8
 8014bd2:	eeb0 ba64 	vmov.f32	s22, s9
 8014bd6:	eef0 aa45 	vmov.f32	s21, s10
 8014bda:	3604      	adds	r6, #4
 8014bdc:	930a      	str	r3, [sp, #40]	; 0x28
 8014bde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014be0:	2b00      	cmp	r3, #0
 8014be2:	dc03      	bgt.n	8014bec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014be4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014be6:	2b00      	cmp	r3, #0
 8014be8:	f340 8225 	ble.w	8015036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014bec:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014bee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014bf2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014bf6:	1e48      	subs	r0, r1, #1
 8014bf8:	1e57      	subs	r7, r2, #1
 8014bfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bfc:	2b00      	cmp	r3, #0
 8014bfe:	f340 80e3 	ble.w	8014dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8014c02:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014c06:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014c0a:	d406      	bmi.n	8014c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c0c:	4584      	cmp	ip, r0
 8014c0e:	da04      	bge.n	8014c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c10:	2b00      	cmp	r3, #0
 8014c12:	db02      	blt.n	8014c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c14:	42bb      	cmp	r3, r7
 8014c16:	f2c0 80d8 	blt.w	8014dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8014c1a:	f11c 0c01 	adds.w	ip, ip, #1
 8014c1e:	f100 80c9 	bmi.w	8014db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c22:	4561      	cmp	r1, ip
 8014c24:	f2c0 80c6 	blt.w	8014db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c28:	3301      	adds	r3, #1
 8014c2a:	f100 80c3 	bmi.w	8014db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c2e:	429a      	cmp	r2, r3
 8014c30:	f2c0 80c0 	blt.w	8014db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c34:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014c38:	4647      	mov	r7, r8
 8014c3a:	f1bb 0f00 	cmp.w	fp, #0
 8014c3e:	f340 80e3 	ble.w	8014e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c42:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014c44:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014c46:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014c4a:	689b      	ldr	r3, [r3, #8]
 8014c4c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014c50:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014c54:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014c58:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014c5c:	f100 8121 	bmi.w	8014ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014c60:	f103 39ff 	add.w	r9, r3, #4294967295
 8014c64:	454a      	cmp	r2, r9
 8014c66:	f280 811c 	bge.w	8014ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014c6a:	f1bc 0f00 	cmp.w	ip, #0
 8014c6e:	f2c0 8118 	blt.w	8014ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014c72:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014c76:	45cc      	cmp	ip, r9
 8014c78:	f280 8113 	bge.w	8014ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014c7c:	b21b      	sxth	r3, r3
 8014c7e:	fb0c 2203 	mla	r2, ip, r3, r2
 8014c82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014c84:	eb04 0902 	add.w	r9, r4, r2
 8014c88:	5ca2      	ldrb	r2, [r4, r2]
 8014c8a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014c8e:	2800      	cmp	r0, #0
 8014c90:	f000 80fe 	beq.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014c94:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014c98:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014c9c:	9211      	str	r2, [sp, #68]	; 0x44
 8014c9e:	b151      	cbz	r1, 8014cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014ca0:	eb09 0203 	add.w	r2, r9, r3
 8014ca4:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014ca8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014cac:	930f      	str	r3, [sp, #60]	; 0x3c
 8014cae:	7853      	ldrb	r3, [r2, #1]
 8014cb0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014cb4:	9312      	str	r3, [sp, #72]	; 0x48
 8014cb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014cb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014cba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014cbe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014cc2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014cc6:	ea4c 0c03 	orr.w	ip, ip, r3
 8014cca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014ccc:	041b      	lsls	r3, r3, #16
 8014cce:	fb10 f201 	smulbb	r2, r0, r1
 8014cd2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014cd6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014cda:	10d2      	asrs	r2, r2, #3
 8014cdc:	4323      	orrs	r3, r4
 8014cde:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014ce2:	4353      	muls	r3, r2
 8014ce4:	fb09 330c 	mla	r3, r9, ip, r3
 8014ce8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014cec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014cf0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014cf4:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014cf8:	f1c1 0c10 	rsb	ip, r1, #16
 8014cfc:	ebac 0c00 	sub.w	ip, ip, r0
 8014d00:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014d04:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014d08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014d0c:	0418      	lsls	r0, r3, #16
 8014d0e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014d12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d16:	4318      	orrs	r0, r3
 8014d18:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014d1c:	fb02 c200 	mla	r2, r2, r0, ip
 8014d20:	0d53      	lsrs	r3, r2, #21
 8014d22:	0952      	lsrs	r2, r2, #5
 8014d24:	8838      	ldrh	r0, [r7, #0]
 8014d26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014d2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014d2e:	431a      	orrs	r2, r3
 8014d30:	b292      	uxth	r2, r2
 8014d32:	1201      	asrs	r1, r0, #8
 8014d34:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014d38:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014d3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014d40:	fb11 f104 	smulbb	r1, r1, r4
 8014d44:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014d48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014d4c:	00c0      	lsls	r0, r0, #3
 8014d4e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014d52:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014d56:	10d1      	asrs	r1, r2, #3
 8014d58:	b2c0      	uxtb	r0, r0
 8014d5a:	00d2      	lsls	r2, r2, #3
 8014d5c:	b2d2      	uxtb	r2, r2
 8014d5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014d62:	fb1e fe04 	smulbb	lr, lr, r4
 8014d66:	fb10 f004 	smulbb	r0, r0, r4
 8014d6a:	fa1f fc8c 	uxth.w	ip, ip
 8014d6e:	fb01 e103 	mla	r1, r1, r3, lr
 8014d72:	fb02 0303 	mla	r3, r2, r3, r0
 8014d76:	b29a      	uxth	r2, r3
 8014d78:	f10c 0301 	add.w	r3, ip, #1
 8014d7c:	b289      	uxth	r1, r1
 8014d7e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014d82:	1c53      	adds	r3, r2, #1
 8014d84:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014d88:	1c4a      	adds	r2, r1, #1
 8014d8a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014d8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014d92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014d96:	0949      	lsrs	r1, r1, #5
 8014d98:	ea43 030c 	orr.w	r3, r3, ip
 8014d9c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014da0:	430b      	orrs	r3, r1
 8014da2:	803b      	strh	r3, [r7, #0]
 8014da4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014da6:	449a      	add	sl, r3
 8014da8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014daa:	3702      	adds	r7, #2
 8014dac:	441d      	add	r5, r3
 8014dae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014db2:	e742      	b.n	8014c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014db4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014db6:	449a      	add	sl, r3
 8014db8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014dba:	441d      	add	r5, r3
 8014dbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014dbe:	3b01      	subs	r3, #1
 8014dc0:	9309      	str	r3, [sp, #36]	; 0x24
 8014dc2:	f108 0802 	add.w	r8, r8, #2
 8014dc6:	e718      	b.n	8014bfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014dc8:	d023      	beq.n	8014e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014dca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014dcc:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014dce:	3b01      	subs	r3, #1
 8014dd0:	fb00 a003 	mla	r0, r0, r3, sl
 8014dd4:	1400      	asrs	r0, r0, #16
 8014dd6:	f53f af2d 	bmi.w	8014c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014dda:	3901      	subs	r1, #1
 8014ddc:	4288      	cmp	r0, r1
 8014dde:	f6bf af29 	bge.w	8014c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014de2:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014de4:	fb01 5303 	mla	r3, r1, r3, r5
 8014de8:	141b      	asrs	r3, r3, #16
 8014dea:	f53f af23 	bmi.w	8014c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014dee:	3a01      	subs	r2, #1
 8014df0:	4293      	cmp	r3, r2
 8014df2:	f6bf af1f 	bge.w	8014c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014df6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014dfa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014dfe:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014e02:	f1be 0f00 	cmp.w	lr, #0
 8014e06:	dc6c      	bgt.n	8014ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014e08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e0a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014e0e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014e12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e14:	2b00      	cmp	r3, #0
 8014e16:	f340 810e 	ble.w	8015036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014e1a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014e1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014e22:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014e26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e28:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014e2c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014e30:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014e34:	eef0 6a48 	vmov.f32	s13, s16
 8014e38:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e40:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014e44:	ee16 aa90 	vmov	sl, s13
 8014e48:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014e4c:	eef0 6a68 	vmov.f32	s13, s17
 8014e50:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014e54:	ee18 2a10 	vmov	r2, s16
 8014e58:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014e5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e60:	ee18 2a90 	vmov	r2, s17
 8014e64:	932d      	str	r3, [sp, #180]	; 0xb4
 8014e66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e68:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e6c:	932e      	str	r3, [sp, #184]	; 0xb8
 8014e6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e70:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014e72:	3b01      	subs	r3, #1
 8014e74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e78:	930c      	str	r3, [sp, #48]	; 0x30
 8014e7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e7c:	bf08      	it	eq
 8014e7e:	4613      	moveq	r3, r2
 8014e80:	ee16 5a90 	vmov	r5, s13
 8014e84:	9309      	str	r3, [sp, #36]	; 0x24
 8014e86:	eef0 8a67 	vmov.f32	s17, s15
 8014e8a:	eeb0 8a47 	vmov.f32	s16, s14
 8014e8e:	e6a6      	b.n	8014bde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014e90:	2900      	cmp	r1, #0
 8014e92:	f43f af10 	beq.w	8014cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014e96:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014e9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014e9e:	930f      	str	r3, [sp, #60]	; 0x3c
 8014ea0:	e709      	b.n	8014cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014ea2:	f112 0901 	adds.w	r9, r2, #1
 8014ea6:	f53f af7d 	bmi.w	8014da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014eaa:	454b      	cmp	r3, r9
 8014eac:	f6ff af7a 	blt.w	8014da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014eb0:	f11c 0901 	adds.w	r9, ip, #1
 8014eb4:	f53f af76 	bmi.w	8014da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014eb8:	45ce      	cmp	lr, r9
 8014eba:	f6ff af73 	blt.w	8014da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014ebe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014ec0:	9202      	str	r2, [sp, #8]
 8014ec2:	b21b      	sxth	r3, r3
 8014ec4:	fa0f f28e 	sxth.w	r2, lr
 8014ec8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014ecc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014ed0:	9201      	str	r2, [sp, #4]
 8014ed2:	9300      	str	r3, [sp, #0]
 8014ed4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014ed6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014ed8:	4633      	mov	r3, r6
 8014eda:	4639      	mov	r1, r7
 8014edc:	f7ff fd70 	bl	80149c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014ee0:	e760      	b.n	8014da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014ee2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014ee4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ee6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014eea:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014eee:	1429      	asrs	r1, r5, #16
 8014ef0:	fb03 2101 	mla	r1, r3, r1, r2
 8014ef4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014ef6:	440a      	add	r2, r1
 8014ef8:	5c61      	ldrb	r1, [r4, r1]
 8014efa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014efe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014f02:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014f06:	f1bc 0f00 	cmp.w	ip, #0
 8014f0a:	f000 808c 	beq.w	8015026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8014f0e:	7857      	ldrb	r7, [r2, #1]
 8014f10:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014f14:	9413      	str	r4, [sp, #76]	; 0x4c
 8014f16:	b140      	cbz	r0, 8014f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014f18:	18d7      	adds	r7, r2, r3
 8014f1a:	5cd3      	ldrb	r3, [r2, r3]
 8014f1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f20:	9310      	str	r3, [sp, #64]	; 0x40
 8014f22:	787b      	ldrb	r3, [r7, #1]
 8014f24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f28:	9314      	str	r3, [sp, #80]	; 0x50
 8014f2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014f2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014f2e:	fb1c f200 	smulbb	r2, ip, r0
 8014f32:	041f      	lsls	r7, r3, #16
 8014f34:	10d2      	asrs	r2, r2, #3
 8014f36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014f3a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014f3e:	431f      	orrs	r7, r3
 8014f40:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014f44:	9317      	str	r3, [sp, #92]	; 0x5c
 8014f46:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014f48:	041b      	lsls	r3, r3, #16
 8014f4a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014f4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014f52:	ea43 030b 	orr.w	r3, r3, fp
 8014f56:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014f58:	4353      	muls	r3, r2
 8014f5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014f5e:	fb04 3707 	mla	r7, r4, r7, r3
 8014f62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014f66:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014f6a:	ea43 0b01 	orr.w	fp, r3, r1
 8014f6e:	f1c0 0110 	rsb	r1, r0, #16
 8014f72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014f76:	eba1 0c0c 	sub.w	ip, r1, ip
 8014f7a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014f7e:	fb0c 770b 	mla	r7, ip, fp, r7
 8014f82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014f86:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014f8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014f8e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014f92:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014f96:	fb02 770c 	mla	r7, r2, ip, r7
 8014f9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014f9c:	0d79      	lsrs	r1, r7, #21
 8014f9e:	097f      	lsrs	r7, r7, #5
 8014fa0:	8812      	ldrh	r2, [r2, #0]
 8014fa2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014fa6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014faa:	430f      	orrs	r7, r1
 8014fac:	b2bb      	uxth	r3, r7
 8014fae:	1211      	asrs	r1, r2, #8
 8014fb0:	1218      	asrs	r0, r3, #8
 8014fb2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014fb6:	fb11 f104 	smulbb	r1, r1, r4
 8014fba:	10d7      	asrs	r7, r2, #3
 8014fbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014fc0:	00d2      	lsls	r2, r2, #3
 8014fc2:	fb00 1009 	mla	r0, r0, r9, r1
 8014fc6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014fca:	10d9      	asrs	r1, r3, #3
 8014fcc:	b2d2      	uxtb	r2, r2
 8014fce:	00db      	lsls	r3, r3, #3
 8014fd0:	fb17 f704 	smulbb	r7, r7, r4
 8014fd4:	fb12 f204 	smulbb	r2, r2, r4
 8014fd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014fdc:	b2db      	uxtb	r3, r3
 8014fde:	b280      	uxth	r0, r0
 8014fe0:	fb01 7109 	mla	r1, r1, r9, r7
 8014fe4:	fb03 2309 	mla	r3, r3, r9, r2
 8014fe8:	b29b      	uxth	r3, r3
 8014fea:	b289      	uxth	r1, r1
 8014fec:	1c42      	adds	r2, r0, #1
 8014fee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014ff2:	1c4f      	adds	r7, r1, #1
 8014ff4:	1c5a      	adds	r2, r3, #1
 8014ff6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014ffa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014ffe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015002:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015006:	0949      	lsrs	r1, r1, #5
 8015008:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801500a:	4310      	orrs	r0, r2
 801500c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015010:	4308      	orrs	r0, r1
 8015012:	f823 0b02 	strh.w	r0, [r3], #2
 8015016:	930e      	str	r3, [sp, #56]	; 0x38
 8015018:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801501a:	449a      	add	sl, r3
 801501c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801501e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015022:	441d      	add	r5, r3
 8015024:	e6ed      	b.n	8014e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8015026:	2800      	cmp	r0, #0
 8015028:	f43f af7f 	beq.w	8014f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801502c:	5cd3      	ldrb	r3, [r2, r3]
 801502e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015032:	9310      	str	r3, [sp, #64]	; 0x40
 8015034:	e779      	b.n	8014f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015036:	b019      	add	sp, #100	; 0x64
 8015038:	ecbd 8b08 	vpop	{d8-d11}
 801503c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015040:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015044:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8015048:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801504c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8015050:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8015054:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8015058:	8808      	ldrh	r0, [r1, #0]
 801505a:	fb06 570e 	mla	r7, r6, lr, r5
 801505e:	2e00      	cmp	r6, #0
 8015060:	eb02 0807 	add.w	r8, r2, r7
 8015064:	db38      	blt.n	80150d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8015066:	45b1      	cmp	r9, r6
 8015068:	dd36      	ble.n	80150d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801506a:	2d00      	cmp	r5, #0
 801506c:	db32      	blt.n	80150d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801506e:	45ae      	cmp	lr, r5
 8015070:	dd30      	ble.n	80150d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8015072:	5dd2      	ldrb	r2, [r2, r7]
 8015074:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015078:	1c6a      	adds	r2, r5, #1
 801507a:	d430      	bmi.n	80150de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801507c:	4596      	cmp	lr, r2
 801507e:	dd2e      	ble.n	80150de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015080:	b36c      	cbz	r4, 80150de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015082:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015086:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801508a:	3601      	adds	r6, #1
 801508c:	d42b      	bmi.n	80150e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801508e:	45b1      	cmp	r9, r6
 8015090:	dd29      	ble.n	80150e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8015092:	f1bc 0f00 	cmp.w	ip, #0
 8015096:	d028      	beq.n	80150ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8015098:	2d00      	cmp	r5, #0
 801509a:	db22      	blt.n	80150e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801509c:	45ae      	cmp	lr, r5
 801509e:	dd20      	ble.n	80150e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80150a0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80150a4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80150a8:	3501      	adds	r5, #1
 80150aa:	d407      	bmi.n	80150bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80150ac:	45ae      	cmp	lr, r5
 80150ae:	dd05      	ble.n	80150bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80150b0:	b134      	cbz	r4, 80150c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80150b2:	44c6      	add	lr, r8
 80150b4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80150b8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80150bc:	2c0f      	cmp	r4, #15
 80150be:	d802      	bhi.n	80150c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80150c0:	f1bc 0f0f 	cmp.w	ip, #15
 80150c4:	d914      	bls.n	80150f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80150c6:	4b26      	ldr	r3, [pc, #152]	; (8015160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80150c8:	4a26      	ldr	r2, [pc, #152]	; (8015164 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80150ca:	4827      	ldr	r0, [pc, #156]	; (8015168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80150cc:	f240 11db 	movw	r1, #475	; 0x1db
 80150d0:	f006 fde0 	bl	801bc94 <__assert_func>
 80150d4:	4607      	mov	r7, r0
 80150d6:	e7cf      	b.n	8015078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80150d8:	4602      	mov	r2, r0
 80150da:	4607      	mov	r7, r0
 80150dc:	e7d5      	b.n	801508a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80150de:	4602      	mov	r2, r0
 80150e0:	e7d3      	b.n	801508a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80150e2:	4606      	mov	r6, r0
 80150e4:	e7e0      	b.n	80150a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80150e6:	4606      	mov	r6, r0
 80150e8:	e7e8      	b.n	80150bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80150ea:	2c0f      	cmp	r4, #15
 80150ec:	d8eb      	bhi.n	80150c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80150ee:	4606      	mov	r6, r0
 80150f0:	043d      	lsls	r5, r7, #16
 80150f2:	fb14 f30c 	smulbb	r3, r4, ip
 80150f6:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80150fa:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80150fe:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015102:	10db      	asrs	r3, r3, #3
 8015104:	432f      	orrs	r7, r5
 8015106:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801510a:	f1cc 0510 	rsb	r5, ip, #16
 801510e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015112:	1b2d      	subs	r5, r5, r4
 8015114:	ea4e 0202 	orr.w	r2, lr, r2
 8015118:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801511c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015120:	4354      	muls	r4, r2
 8015122:	fb05 4507 	mla	r5, r5, r7, r4
 8015126:	0404      	lsls	r4, r0, #16
 8015128:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801512c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015130:	4320      	orrs	r0, r4
 8015132:	fb03 5400 	mla	r4, r3, r0, r5
 8015136:	0430      	lsls	r0, r6, #16
 8015138:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801513c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8015140:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015144:	4330      	orrs	r0, r6
 8015146:	fb03 4000 	mla	r0, r3, r0, r4
 801514a:	0d43      	lsrs	r3, r0, #21
 801514c:	0940      	lsrs	r0, r0, #5
 801514e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015152:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015156:	4318      	orrs	r0, r3
 8015158:	8008      	strh	r0, [r1, #0]
 801515a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801515e:	bf00      	nop
 8015160:	0801fc17 	.word	0x0801fc17
 8015164:	080201ef 	.word	0x080201ef
 8015168:	0801fbe4 	.word	0x0801fbe4

0801516c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801516c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015170:	ed2d 8b0a 	vpush	{d8-d12}
 8015174:	b093      	sub	sp, #76	; 0x4c
 8015176:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801517a:	920f      	str	r2, [sp, #60]	; 0x3c
 801517c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801517e:	9108      	str	r1, [sp, #32]
 8015180:	9306      	str	r3, [sp, #24]
 8015182:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015186:	9010      	str	r0, [sp, #64]	; 0x40
 8015188:	6850      	ldr	r0, [r2, #4]
 801518a:	6812      	ldr	r2, [r2, #0]
 801518c:	fb00 1303 	mla	r3, r0, r3, r1
 8015190:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8015194:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015196:	681b      	ldr	r3, [r3, #0]
 8015198:	9307      	str	r3, [sp, #28]
 801519a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801519c:	685f      	ldr	r7, [r3, #4]
 801519e:	eeb0 aa40 	vmov.f32	s20, s0
 80151a2:	eef0 9a60 	vmov.f32	s19, s1
 80151a6:	eeb0 9a41 	vmov.f32	s18, s2
 80151aa:	eeb0 8a62 	vmov.f32	s16, s5
 80151ae:	eef0 8a43 	vmov.f32	s17, s6
 80151b2:	eeb0 ca44 	vmov.f32	s24, s8
 80151b6:	eef0 ba64 	vmov.f32	s23, s9
 80151ba:	eeb0 ba45 	vmov.f32	s22, s10
 80151be:	3704      	adds	r7, #4
 80151c0:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80151c4:	9b08      	ldr	r3, [sp, #32]
 80151c6:	2b00      	cmp	r3, #0
 80151c8:	dc03      	bgt.n	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80151ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80151cc:	2b00      	cmp	r3, #0
 80151ce:	f340 81b2 	ble.w	8015536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80151d2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80151d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80151d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80151dc:	1e48      	subs	r0, r1, #1
 80151de:	f102 3cff 	add.w	ip, r2, #4294967295
 80151e2:	9b06      	ldr	r3, [sp, #24]
 80151e4:	2b00      	cmp	r3, #0
 80151e6:	f340 80a9 	ble.w	801533c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80151ea:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80151ee:	ea4f 4326 	mov.w	r3, r6, asr #16
 80151f2:	d406      	bmi.n	8015202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80151f4:	4586      	cmp	lr, r0
 80151f6:	da04      	bge.n	8015202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80151f8:	2b00      	cmp	r3, #0
 80151fa:	db02      	blt.n	8015202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80151fc:	4563      	cmp	r3, ip
 80151fe:	f2c0 809e 	blt.w	801533e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015202:	f11e 0e01 	adds.w	lr, lr, #1
 8015206:	f100 808f 	bmi.w	8015328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801520a:	4571      	cmp	r1, lr
 801520c:	f2c0 808c 	blt.w	8015328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015210:	3301      	adds	r3, #1
 8015212:	f100 8089 	bmi.w	8015328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015216:	429a      	cmp	r2, r3
 8015218:	f2c0 8086 	blt.w	8015328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801521c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015220:	46c8      	mov	r8, r9
 8015222:	f1bb 0f00 	cmp.w	fp, #0
 8015226:	f340 80a6 	ble.w	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801522a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801522c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801522e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015232:	689b      	ldr	r3, [r3, #8]
 8015234:	1422      	asrs	r2, r4, #16
 8015236:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801523a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801523e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015242:	f100 80e3 	bmi.w	801540c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015246:	f103 3aff 	add.w	sl, r3, #4294967295
 801524a:	4552      	cmp	r2, sl
 801524c:	f280 80de 	bge.w	801540c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015250:	f1bc 0f00 	cmp.w	ip, #0
 8015254:	f2c0 80da 	blt.w	801540c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015258:	f10e 3aff 	add.w	sl, lr, #4294967295
 801525c:	45d4      	cmp	ip, sl
 801525e:	f280 80d5 	bge.w	801540c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015262:	b21b      	sxth	r3, r3
 8015264:	fb0c 2203 	mla	r2, ip, r3, r2
 8015268:	9d07      	ldr	r5, [sp, #28]
 801526a:	eb05 0a02 	add.w	sl, r5, r2
 801526e:	5caa      	ldrb	r2, [r5, r2]
 8015270:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8015274:	2800      	cmp	r0, #0
 8015276:	f000 80c0 	beq.w	80153fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801527a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801527e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015282:	920b      	str	r2, [sp, #44]	; 0x2c
 8015284:	b151      	cbz	r1, 801529c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015286:	eb0a 0203 	add.w	r2, sl, r3
 801528a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801528e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015292:	9309      	str	r3, [sp, #36]	; 0x24
 8015294:	7853      	ldrb	r3, [r2, #1]
 8015296:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801529a:	930c      	str	r3, [sp, #48]	; 0x30
 801529c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801529e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80152a0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80152a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80152a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80152ac:	ea4c 0c03 	orr.w	ip, ip, r3
 80152b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152b2:	041b      	lsls	r3, r3, #16
 80152b4:	fb10 f201 	smulbb	r2, r0, r1
 80152b8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80152bc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80152c0:	10d2      	asrs	r2, r2, #3
 80152c2:	432b      	orrs	r3, r5
 80152c4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80152c8:	4353      	muls	r3, r2
 80152ca:	fb0a 330c 	mla	r3, sl, ip, r3
 80152ce:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80152d2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80152d6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80152da:	ea4c 0e0e 	orr.w	lr, ip, lr
 80152de:	f1c1 0c10 	rsb	ip, r1, #16
 80152e2:	ebac 0c00 	sub.w	ip, ip, r0
 80152e6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80152ea:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80152ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80152f0:	0418      	lsls	r0, r3, #16
 80152f2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80152f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80152fa:	4318      	orrs	r0, r3
 80152fc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015300:	fb02 c200 	mla	r2, r2, r0, ip
 8015304:	0d53      	lsrs	r3, r2, #21
 8015306:	0952      	lsrs	r2, r2, #5
 8015308:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801530c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015310:	431a      	orrs	r2, r3
 8015312:	f8a8 2000 	strh.w	r2, [r8]
 8015316:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015318:	441c      	add	r4, r3
 801531a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801531c:	f108 0802 	add.w	r8, r8, #2
 8015320:	441e      	add	r6, r3
 8015322:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015326:	e77c      	b.n	8015222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015328:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801532a:	441c      	add	r4, r3
 801532c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801532e:	441e      	add	r6, r3
 8015330:	9b06      	ldr	r3, [sp, #24]
 8015332:	3b01      	subs	r3, #1
 8015334:	9306      	str	r3, [sp, #24]
 8015336:	f109 0902 	add.w	r9, r9, #2
 801533a:	e752      	b.n	80151e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801533c:	d020      	beq.n	8015380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801533e:	9b06      	ldr	r3, [sp, #24]
 8015340:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8015342:	3b01      	subs	r3, #1
 8015344:	fb00 4003 	mla	r0, r0, r3, r4
 8015348:	1400      	asrs	r0, r0, #16
 801534a:	f53f af67 	bmi.w	801521c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801534e:	3901      	subs	r1, #1
 8015350:	4288      	cmp	r0, r1
 8015352:	f6bf af63 	bge.w	801521c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015356:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015358:	fb01 6303 	mla	r3, r1, r3, r6
 801535c:	141b      	asrs	r3, r3, #16
 801535e:	f53f af5d 	bmi.w	801521c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015362:	3a01      	subs	r2, #1
 8015364:	4293      	cmp	r3, r2
 8015366:	f6bf af59 	bge.w	801521c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801536a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801536e:	46ca      	mov	sl, r9
 8015370:	f1b8 0f00 	cmp.w	r8, #0
 8015374:	dc67      	bgt.n	8015446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8015376:	9b06      	ldr	r3, [sp, #24]
 8015378:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801537c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8015380:	9b08      	ldr	r3, [sp, #32]
 8015382:	2b00      	cmp	r3, #0
 8015384:	f340 80d7 	ble.w	8015536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015388:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801538c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015390:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015394:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015396:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801539a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801539e:	eef0 6a48 	vmov.f32	s13, s16
 80153a2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80153a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80153aa:	ee37 8a48 	vsub.f32	s16, s14, s16
 80153ae:	ee16 4a90 	vmov	r4, s13
 80153b2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80153b6:	eef0 6a68 	vmov.f32	s13, s17
 80153ba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80153be:	ee18 2a10 	vmov	r2, s16
 80153c2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80153c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ca:	ee18 2a90 	vmov	r2, s17
 80153ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80153d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80153d6:	932a      	str	r3, [sp, #168]	; 0xa8
 80153d8:	9b08      	ldr	r3, [sp, #32]
 80153da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80153dc:	3b01      	subs	r3, #1
 80153de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80153e2:	9308      	str	r3, [sp, #32]
 80153e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153e6:	bf08      	it	eq
 80153e8:	4613      	moveq	r3, r2
 80153ea:	ee16 6a90 	vmov	r6, s13
 80153ee:	9306      	str	r3, [sp, #24]
 80153f0:	eef0 8a67 	vmov.f32	s17, s15
 80153f4:	eeb0 8a47 	vmov.f32	s16, s14
 80153f8:	e6e4      	b.n	80151c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80153fa:	2900      	cmp	r1, #0
 80153fc:	f43f af4e 	beq.w	801529c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015400:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015404:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015408:	9309      	str	r3, [sp, #36]	; 0x24
 801540a:	e747      	b.n	801529c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801540c:	f112 0a01 	adds.w	sl, r2, #1
 8015410:	d481      	bmi.n	8015316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015412:	4553      	cmp	r3, sl
 8015414:	f6ff af7f 	blt.w	8015316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015418:	f11c 0a01 	adds.w	sl, ip, #1
 801541c:	f53f af7b 	bmi.w	8015316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015420:	45d6      	cmp	lr, sl
 8015422:	f6ff af78 	blt.w	8015316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015426:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801542a:	b21b      	sxth	r3, r3
 801542c:	fa0f f28e 	sxth.w	r2, lr
 8015430:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015434:	9201      	str	r2, [sp, #4]
 8015436:	9300      	str	r3, [sp, #0]
 8015438:	9a07      	ldr	r2, [sp, #28]
 801543a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801543c:	463b      	mov	r3, r7
 801543e:	4641      	mov	r1, r8
 8015440:	f7ff fdfe 	bl	8015040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015444:	e767      	b.n	8015316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015446:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015448:	9d07      	ldr	r5, [sp, #28]
 801544a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801544e:	1422      	asrs	r2, r4, #16
 8015450:	1431      	asrs	r1, r6, #16
 8015452:	fb03 2101 	mla	r1, r3, r1, r2
 8015456:	9a07      	ldr	r2, [sp, #28]
 8015458:	440a      	add	r2, r1
 801545a:	5c69      	ldrb	r1, [r5, r1]
 801545c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8015460:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015464:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8015468:	f1be 0f00 	cmp.w	lr, #0
 801546c:	d05c      	beq.n	8015528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801546e:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015472:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8015476:	950d      	str	r5, [sp, #52]	; 0x34
 8015478:	b150      	cbz	r0, 8015490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801547a:	eb02 0c03 	add.w	ip, r2, r3
 801547e:	5cd3      	ldrb	r3, [r2, r3]
 8015480:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015484:	930a      	str	r3, [sp, #40]	; 0x28
 8015486:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801548a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801548e:	930e      	str	r3, [sp, #56]	; 0x38
 8015490:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015492:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015494:	fb1e f200 	smulbb	r2, lr, r0
 8015498:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801549c:	10d2      	asrs	r2, r2, #3
 801549e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80154a2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80154a6:	ea4c 0c03 	orr.w	ip, ip, r3
 80154aa:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80154ae:	9311      	str	r3, [sp, #68]	; 0x44
 80154b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154b2:	041b      	lsls	r3, r3, #16
 80154b4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80154b8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80154bc:	ea43 030b 	orr.w	r3, r3, fp
 80154c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80154c2:	4353      	muls	r3, r2
 80154c4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80154c8:	fb05 3c0c 	mla	ip, r5, ip, r3
 80154cc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80154d0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80154d4:	ea43 0b01 	orr.w	fp, r3, r1
 80154d8:	f1c0 0110 	rsb	r1, r0, #16
 80154dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80154de:	eba1 0e0e 	sub.w	lr, r1, lr
 80154e2:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80154e6:	fb0e cc0b 	mla	ip, lr, fp, ip
 80154ea:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80154ee:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80154f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80154f6:	ea4b 0e0e 	orr.w	lr, fp, lr
 80154fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80154fe:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015502:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015506:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801550a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801550e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015512:	ea43 0c0c 	orr.w	ip, r3, ip
 8015516:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015518:	f82a cb02 	strh.w	ip, [sl], #2
 801551c:	441c      	add	r4, r3
 801551e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015520:	f108 38ff 	add.w	r8, r8, #4294967295
 8015524:	441e      	add	r6, r3
 8015526:	e723      	b.n	8015370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015528:	2800      	cmp	r0, #0
 801552a:	d0b1      	beq.n	8015490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801552c:	5cd3      	ldrb	r3, [r2, r3]
 801552e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015532:	930a      	str	r3, [sp, #40]	; 0x28
 8015534:	e7ac      	b.n	8015490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015536:	b013      	add	sp, #76	; 0x4c
 8015538:	ecbd 8b0a 	vpop	{d8-d12}
 801553c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8015540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015544:	468b      	mov	fp, r1
 8015546:	8809      	ldrh	r1, [r1, #0]
 8015548:	b089      	sub	sp, #36	; 0x24
 801554a:	10cd      	asrs	r5, r1, #3
 801554c:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8015550:	ea4f 2921 	mov.w	r9, r1, asr #8
 8015554:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015558:	00c9      	lsls	r1, r1, #3
 801555a:	9500      	str	r5, [sp, #0]
 801555c:	b2c9      	uxtb	r1, r1
 801555e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8015562:	9101      	str	r1, [sp, #4]
 8015564:	9900      	ldr	r1, [sp, #0]
 8015566:	9202      	str	r2, [sp, #8]
 8015568:	fb04 650e 	mla	r5, r4, lr, r6
 801556c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015570:	eb02 0805 	add.w	r8, r2, r5
 8015574:	0209      	lsls	r1, r1, #8
 8015576:	9a01      	ldr	r2, [sp, #4]
 8015578:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801557c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8015580:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8015584:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8015588:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 801558c:	4311      	orrs	r1, r2
 801558e:	2c00      	cmp	r4, #0
 8015590:	9107      	str	r1, [sp, #28]
 8015592:	db43      	blt.n	801561c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015594:	45a2      	cmp	sl, r4
 8015596:	dd41      	ble.n	801561c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015598:	2e00      	cmp	r6, #0
 801559a:	db3d      	blt.n	8015618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801559c:	45b6      	cmp	lr, r6
 801559e:	dd3b      	ble.n	8015618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80155a0:	9a02      	ldr	r2, [sp, #8]
 80155a2:	5d55      	ldrb	r5, [r2, r5]
 80155a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80155a8:	441d      	add	r5, r3
 80155aa:	1c72      	adds	r2, r6, #1
 80155ac:	d439      	bmi.n	8015622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80155ae:	4596      	cmp	lr, r2
 80155b0:	dd37      	ble.n	8015622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80155b2:	2f00      	cmp	r7, #0
 80155b4:	d035      	beq.n	8015622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80155b6:	f898 1001 	ldrb.w	r1, [r8, #1]
 80155ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80155be:	4419      	add	r1, r3
 80155c0:	3401      	adds	r4, #1
 80155c2:	d432      	bmi.n	801562a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80155c4:	45a2      	cmp	sl, r4
 80155c6:	dd30      	ble.n	801562a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80155c8:	b378      	cbz	r0, 801562a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80155ca:	2e00      	cmp	r6, #0
 80155cc:	db2b      	blt.n	8015626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80155ce:	45b6      	cmp	lr, r6
 80155d0:	dd29      	ble.n	8015626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80155d2:	f818 400e 	ldrb.w	r4, [r8, lr]
 80155d6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80155da:	441c      	add	r4, r3
 80155dc:	3601      	adds	r6, #1
 80155de:	d427      	bmi.n	8015630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80155e0:	45b6      	cmp	lr, r6
 80155e2:	dd25      	ble.n	8015630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80155e4:	b327      	cbz	r7, 8015630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80155e6:	44c6      	add	lr, r8
 80155e8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80155ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80155f0:	4413      	add	r3, r2
 80155f2:	782a      	ldrb	r2, [r5, #0]
 80155f4:	9202      	str	r2, [sp, #8]
 80155f6:	780a      	ldrb	r2, [r1, #0]
 80155f8:	9203      	str	r2, [sp, #12]
 80155fa:	7822      	ldrb	r2, [r4, #0]
 80155fc:	9204      	str	r2, [sp, #16]
 80155fe:	2f0f      	cmp	r7, #15
 8015600:	781a      	ldrb	r2, [r3, #0]
 8015602:	9205      	str	r2, [sp, #20]
 8015604:	d801      	bhi.n	801560a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8015606:	280f      	cmp	r0, #15
 8015608:	d914      	bls.n	8015634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801560a:	4b3f      	ldr	r3, [pc, #252]	; (8015708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801560c:	4a3f      	ldr	r2, [pc, #252]	; (801570c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801560e:	4840      	ldr	r0, [pc, #256]	; (8015710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8015610:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015614:	f006 fb3e 	bl	801bc94 <__assert_func>
 8015618:	ad07      	add	r5, sp, #28
 801561a:	e7c6      	b.n	80155aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801561c:	a907      	add	r1, sp, #28
 801561e:	460d      	mov	r5, r1
 8015620:	e7ce      	b.n	80155c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015622:	a907      	add	r1, sp, #28
 8015624:	e7cc      	b.n	80155c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015626:	ac07      	add	r4, sp, #28
 8015628:	e7d8      	b.n	80155dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801562a:	ab07      	add	r3, sp, #28
 801562c:	461c      	mov	r4, r3
 801562e:	e7e0      	b.n	80155f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015630:	ab07      	add	r3, sp, #28
 8015632:	e7de      	b.n	80155f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015634:	b2ba      	uxth	r2, r7
 8015636:	b280      	uxth	r0, r0
 8015638:	fb02 fa00 	mul.w	sl, r2, r0
 801563c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8015640:	0112      	lsls	r2, r2, #4
 8015642:	b280      	uxth	r0, r0
 8015644:	f891 8002 	ldrb.w	r8, [r1, #2]
 8015648:	7849      	ldrb	r1, [r1, #1]
 801564a:	78ae      	ldrb	r6, [r5, #2]
 801564c:	786d      	ldrb	r5, [r5, #1]
 801564e:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8015652:	eba2 020a 	sub.w	r2, r2, sl
 8015656:	b292      	uxth	r2, r2
 8015658:	ebae 0e00 	sub.w	lr, lr, r0
 801565c:	fa1f fe8e 	uxth.w	lr, lr
 8015660:	4351      	muls	r1, r2
 8015662:	fb02 f808 	mul.w	r8, r2, r8
 8015666:	fb0e 8806 	mla	r8, lr, r6, r8
 801566a:	fb0e 1505 	mla	r5, lr, r5, r1
 801566e:	78a6      	ldrb	r6, [r4, #2]
 8015670:	7861      	ldrb	r1, [r4, #1]
 8015672:	fa1f f78c 	uxth.w	r7, ip
 8015676:	fb00 8806 	mla	r8, r0, r6, r8
 801567a:	fb00 5501 	mla	r5, r0, r1, r5
 801567e:	789e      	ldrb	r6, [r3, #2]
 8015680:	7859      	ldrb	r1, [r3, #1]
 8015682:	9b00      	ldr	r3, [sp, #0]
 8015684:	ea6f 0c0c 	mvn.w	ip, ip
 8015688:	fa5f fc8c 	uxtb.w	ip, ip
 801568c:	fb0a 5101 	mla	r1, sl, r1, r5
 8015690:	fb13 f50c 	smulbb	r5, r3, ip
 8015694:	9b03      	ldr	r3, [sp, #12]
 8015696:	435a      	muls	r2, r3
 8015698:	9b02      	ldr	r3, [sp, #8]
 801569a:	fb0e 2203 	mla	r2, lr, r3, r2
 801569e:	9b04      	ldr	r3, [sp, #16]
 80156a0:	fb00 2003 	mla	r0, r0, r3, r2
 80156a4:	9b05      	ldr	r3, [sp, #20]
 80156a6:	fb0a 8606 	mla	r6, sl, r6, r8
 80156aa:	fb19 f90c 	smulbb	r9, r9, ip
 80156ae:	fb0a 0a03 	mla	sl, sl, r3, r0
 80156b2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80156b6:	9b01      	ldr	r3, [sp, #4]
 80156b8:	fb06 9607 	mla	r6, r6, r7, r9
 80156bc:	b2b6      	uxth	r6, r6
 80156be:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80156c2:	fb13 fc0c 	smulbb	ip, r3, ip
 80156c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80156ca:	fb01 5107 	mla	r1, r1, r7, r5
 80156ce:	f106 0901 	add.w	r9, r6, #1
 80156d2:	fb0a c707 	mla	r7, sl, r7, ip
 80156d6:	b2bf      	uxth	r7, r7
 80156d8:	b289      	uxth	r1, r1
 80156da:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80156de:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80156e2:	1c4d      	adds	r5, r1, #1
 80156e4:	1c7e      	adds	r6, r7, #1
 80156e6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80156ea:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80156ee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80156f2:	0949      	lsrs	r1, r1, #5
 80156f4:	ea46 0609 	orr.w	r6, r6, r9
 80156f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80156fc:	430e      	orrs	r6, r1
 80156fe:	f8ab 6000 	strh.w	r6, [fp]
 8015702:	b009      	add	sp, #36	; 0x24
 8015704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015708:	0801fc17 	.word	0x0801fc17
 801570c:	08020146 	.word	0x08020146
 8015710:	0801fbe4 	.word	0x0801fbe4

08015714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015718:	ed2d 8b08 	vpush	{d8-d11}
 801571c:	b095      	sub	sp, #84	; 0x54
 801571e:	eeb0 aa40 	vmov.f32	s20, s0
 8015722:	9212      	str	r2, [sp, #72]	; 0x48
 8015724:	9309      	str	r3, [sp, #36]	; 0x24
 8015726:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015728:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801572c:	930f      	str	r3, [sp, #60]	; 0x3c
 801572e:	910e      	str	r1, [sp, #56]	; 0x38
 8015730:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015734:	9013      	str	r0, [sp, #76]	; 0x4c
 8015736:	6850      	ldr	r0, [r2, #4]
 8015738:	6812      	ldr	r2, [r2, #0]
 801573a:	fb00 1303 	mla	r3, r0, r3, r1
 801573e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015742:	930a      	str	r3, [sp, #40]	; 0x28
 8015744:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015746:	681b      	ldr	r3, [r3, #0]
 8015748:	930d      	str	r3, [sp, #52]	; 0x34
 801574a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801574c:	685c      	ldr	r4, [r3, #4]
 801574e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015750:	43db      	mvns	r3, r3
 8015752:	b2db      	uxtb	r3, r3
 8015754:	eef0 9a60 	vmov.f32	s19, s1
 8015758:	eeb0 9a41 	vmov.f32	s18, s2
 801575c:	eeb0 8a62 	vmov.f32	s16, s5
 8015760:	eef0 8a43 	vmov.f32	s17, s6
 8015764:	eef0 ba44 	vmov.f32	s23, s8
 8015768:	eeb0 ba64 	vmov.f32	s22, s9
 801576c:	eef0 aa45 	vmov.f32	s21, s10
 8015770:	3404      	adds	r4, #4
 8015772:	930b      	str	r3, [sp, #44]	; 0x2c
 8015774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015776:	2b00      	cmp	r3, #0
 8015778:	dc03      	bgt.n	8015782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801577a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801577c:	2b00      	cmp	r3, #0
 801577e:	f340 8255 	ble.w	8015c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8015782:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015784:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015788:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801578c:	1e48      	subs	r0, r1, #1
 801578e:	1e55      	subs	r5, r2, #1
 8015790:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015792:	2b00      	cmp	r3, #0
 8015794:	f340 80f9 	ble.w	801598a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015798:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801579a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801579c:	1436      	asrs	r6, r6, #16
 801579e:	ea4f 4323 	mov.w	r3, r3, asr #16
 80157a2:	d406      	bmi.n	80157b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157a4:	4286      	cmp	r6, r0
 80157a6:	da04      	bge.n	80157b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157a8:	2b00      	cmp	r3, #0
 80157aa:	db02      	blt.n	80157b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157ac:	42ab      	cmp	r3, r5
 80157ae:	f2c0 80ed 	blt.w	801598c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80157b2:	3601      	adds	r6, #1
 80157b4:	f100 80da 	bmi.w	801596c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80157b8:	42b1      	cmp	r1, r6
 80157ba:	f2c0 80d7 	blt.w	801596c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80157be:	3301      	adds	r3, #1
 80157c0:	f100 80d4 	bmi.w	801596c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80157c4:	429a      	cmp	r2, r3
 80157c6:	f2c0 80d1 	blt.w	801596c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80157ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157cc:	9311      	str	r3, [sp, #68]	; 0x44
 80157ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157d0:	930c      	str	r3, [sp, #48]	; 0x30
 80157d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80157d4:	2b00      	cmp	r3, #0
 80157d6:	f340 80fa 	ble.w	80159ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80157da:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80157dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157de:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80157e0:	68c6      	ldr	r6, [r0, #12]
 80157e2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80157e4:	141d      	asrs	r5, r3, #16
 80157e6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80157ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80157ec:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80157ee:	1400      	asrs	r0, r0, #16
 80157f0:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80157f4:	6892      	ldr	r2, [r2, #8]
 80157f6:	f100 813e 	bmi.w	8015a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80157fa:	1e57      	subs	r7, r2, #1
 80157fc:	42b8      	cmp	r0, r7
 80157fe:	f280 813a 	bge.w	8015a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015802:	2d00      	cmp	r5, #0
 8015804:	f2c0 8137 	blt.w	8015a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015808:	1e77      	subs	r7, r6, #1
 801580a:	42bd      	cmp	r5, r7
 801580c:	f280 8133 	bge.w	8015a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015810:	b212      	sxth	r2, r2
 8015812:	fb05 0002 	mla	r0, r5, r2, r0
 8015816:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015818:	f815 a000 	ldrb.w	sl, [r5, r0]
 801581c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015820:	182e      	adds	r6, r5, r0
 8015822:	eb04 050a 	add.w	r5, r4, sl
 8015826:	2b00      	cmp	r3, #0
 8015828:	f000 8117 	beq.w	8015a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801582c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015830:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015834:	44a4      	add	ip, r4
 8015836:	2900      	cmp	r1, #0
 8015838:	f000 8117 	beq.w	8015a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801583c:	18b0      	adds	r0, r6, r2
 801583e:	5cb2      	ldrb	r2, [r6, r2]
 8015840:	7840      	ldrb	r0, [r0, #1]
 8015842:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015846:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801584a:	4422      	add	r2, r4
 801584c:	4420      	add	r0, r4
 801584e:	b29b      	uxth	r3, r3
 8015850:	b289      	uxth	r1, r1
 8015852:	fb03 f901 	mul.w	r9, r3, r1
 8015856:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801585a:	011b      	lsls	r3, r3, #4
 801585c:	b289      	uxth	r1, r1
 801585e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8015862:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015866:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015868:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801586c:	f8b6 e000 	ldrh.w	lr, [r6]
 8015870:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015874:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015878:	eba3 0309 	sub.w	r3, r3, r9
 801587c:	b29b      	uxth	r3, r3
 801587e:	eba8 0801 	sub.w	r8, r8, r1
 8015882:	fa1f f888 	uxth.w	r8, r8
 8015886:	435f      	muls	r7, r3
 8015888:	fb08 770b 	mla	r7, r8, fp, r7
 801588c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015890:	9310      	str	r3, [sp, #64]	; 0x40
 8015892:	fb01 770b 	mla	r7, r1, fp, r7
 8015896:	f890 b002 	ldrb.w	fp, [r0, #2]
 801589a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801589c:	fb09 770b 	mla	r7, r9, fp, r7
 80158a0:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80158a4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80158a8:	fb1b fb03 	smulbb	fp, fp, r3
 80158ac:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80158b0:	fb07 b706 	mla	r7, r7, r6, fp
 80158b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158b6:	f895 b001 	ldrb.w	fp, [r5, #1]
 80158ba:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80158be:	f89c c000 	ldrb.w	ip, [ip]
 80158c2:	435d      	muls	r5, r3
 80158c4:	fb08 550b 	mla	r5, r8, fp, r5
 80158c8:	f892 b001 	ldrb.w	fp, [r2, #1]
 80158cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80158ce:	fb01 550b 	mla	r5, r1, fp, r5
 80158d2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80158d6:	fb09 550b 	mla	r5, r9, fp, r5
 80158da:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80158de:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80158e2:	fb1b fb03 	smulbb	fp, fp, r3
 80158e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158e8:	fb03 f30c 	mul.w	r3, r3, ip
 80158ec:	f892 c000 	ldrb.w	ip, [r2]
 80158f0:	fb08 330a 	mla	r3, r8, sl, r3
 80158f4:	fb01 330c 	mla	r3, r1, ip, r3
 80158f8:	f890 c000 	ldrb.w	ip, [r0]
 80158fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015900:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015904:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015906:	fa5f fe8e 	uxtb.w	lr, lr
 801590a:	b2bf      	uxth	r7, r7
 801590c:	fb1e fe03 	smulbb	lr, lr, r3
 8015910:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015914:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015918:	fb05 b506 	mla	r5, r5, r6, fp
 801591c:	1c7b      	adds	r3, r7, #1
 801591e:	fb0c e606 	mla	r6, ip, r6, lr
 8015922:	b2ad      	uxth	r5, r5
 8015924:	b2b6      	uxth	r6, r6
 8015926:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801592a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801592e:	f105 0b01 	add.w	fp, r5, #1
 8015932:	1c77      	adds	r7, r6, #1
 8015934:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015938:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801593c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015940:	096d      	lsrs	r5, r5, #5
 8015942:	431f      	orrs	r7, r3
 8015944:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801594a:	433d      	orrs	r5, r7
 801594c:	801d      	strh	r5, [r3, #0]
 801594e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015950:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015952:	3302      	adds	r3, #2
 8015954:	930c      	str	r3, [sp, #48]	; 0x30
 8015956:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015958:	4413      	add	r3, r2
 801595a:	9327      	str	r3, [sp, #156]	; 0x9c
 801595c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801595e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015960:	4413      	add	r3, r2
 8015962:	9328      	str	r3, [sp, #160]	; 0xa0
 8015964:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015966:	3b01      	subs	r3, #1
 8015968:	9311      	str	r3, [sp, #68]	; 0x44
 801596a:	e732      	b.n	80157d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801596c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801596e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8015970:	4433      	add	r3, r6
 8015972:	9327      	str	r3, [sp, #156]	; 0x9c
 8015974:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015976:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015978:	4433      	add	r3, r6
 801597a:	9328      	str	r3, [sp, #160]	; 0xa0
 801597c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801597e:	3b01      	subs	r3, #1
 8015980:	9309      	str	r3, [sp, #36]	; 0x24
 8015982:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015984:	3302      	adds	r3, #2
 8015986:	930a      	str	r3, [sp, #40]	; 0x28
 8015988:	e702      	b.n	8015790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801598a:	d027      	beq.n	80159dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801598c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801598e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8015990:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015992:	3b01      	subs	r3, #1
 8015994:	fb00 5003 	mla	r0, r0, r3, r5
 8015998:	1400      	asrs	r0, r0, #16
 801599a:	f53f af16 	bmi.w	80157ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801599e:	3901      	subs	r1, #1
 80159a0:	4288      	cmp	r0, r1
 80159a2:	f6bf af12 	bge.w	80157ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80159a6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80159a8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80159aa:	fb01 0303 	mla	r3, r1, r3, r0
 80159ae:	141b      	asrs	r3, r3, #16
 80159b0:	f53f af0b 	bmi.w	80157ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80159b4:	3a01      	subs	r2, #1
 80159b6:	4293      	cmp	r3, r2
 80159b8:	f6bf af07 	bge.w	80157ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80159bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159be:	9311      	str	r3, [sp, #68]	; 0x44
 80159c0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80159c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159c6:	930c      	str	r3, [sp, #48]	; 0x30
 80159c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159ca:	2b00      	cmp	r3, #0
 80159cc:	dc70      	bgt.n	8015ab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80159ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80159d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80159da:	930a      	str	r3, [sp, #40]	; 0x28
 80159dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159de:	2b00      	cmp	r3, #0
 80159e0:	f340 8124 	ble.w	8015c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80159e4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80159e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80159ec:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80159f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80159f2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80159f6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80159fa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80159fe:	eef0 6a48 	vmov.f32	s13, s16
 8015a02:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a0a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015a0e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8015a12:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015a16:	eef0 6a68 	vmov.f32	s13, s17
 8015a1a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015a1e:	ee18 2a10 	vmov	r2, s16
 8015a22:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a2a:	ee18 2a90 	vmov	r2, s17
 8015a2e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015a30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a36:	932a      	str	r3, [sp, #168]	; 0xa8
 8015a38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015a3c:	3b01      	subs	r3, #1
 8015a3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a42:	930e      	str	r3, [sp, #56]	; 0x38
 8015a44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015a46:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015a4a:	bf08      	it	eq
 8015a4c:	4613      	moveq	r3, r2
 8015a4e:	9309      	str	r3, [sp, #36]	; 0x24
 8015a50:	eef0 8a67 	vmov.f32	s17, s15
 8015a54:	eeb0 8a47 	vmov.f32	s16, s14
 8015a58:	e68c      	b.n	8015774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015a5a:	b149      	cbz	r1, 8015a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8015a5c:	5cb2      	ldrb	r2, [r6, r2]
 8015a5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a62:	4422      	add	r2, r4
 8015a64:	4628      	mov	r0, r5
 8015a66:	46ac      	mov	ip, r5
 8015a68:	e6f1      	b.n	801584e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015a6a:	4628      	mov	r0, r5
 8015a6c:	462a      	mov	r2, r5
 8015a6e:	e6ee      	b.n	801584e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015a70:	4628      	mov	r0, r5
 8015a72:	462a      	mov	r2, r5
 8015a74:	e7f7      	b.n	8015a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015a76:	1c47      	adds	r7, r0, #1
 8015a78:	f53f af69 	bmi.w	801594e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015a7c:	42ba      	cmp	r2, r7
 8015a7e:	f6ff af66 	blt.w	801594e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015a82:	1c6f      	adds	r7, r5, #1
 8015a84:	f53f af63 	bmi.w	801594e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015a88:	42be      	cmp	r6, r7
 8015a8a:	f6ff af60 	blt.w	801594e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015a8e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015a90:	9002      	str	r0, [sp, #8]
 8015a92:	b236      	sxth	r6, r6
 8015a94:	b212      	sxth	r2, r2
 8015a96:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015a9a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015a9e:	9200      	str	r2, [sp, #0]
 8015aa0:	9601      	str	r6, [sp, #4]
 8015aa2:	4623      	mov	r3, r4
 8015aa4:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015aa8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015aaa:	f7ff fd49 	bl	8015540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015aae:	e74e      	b.n	801594e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015ab0:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015ab2:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015ab4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015ab6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015ab8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015abc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015abe:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015ac2:	142d      	asrs	r5, r5, #16
 8015ac4:	1400      	asrs	r0, r0, #16
 8015ac6:	fb02 5000 	mla	r0, r2, r0, r5
 8015aca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015acc:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015ad0:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015ad4:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015ad8:	182e      	adds	r6, r5, r0
 8015ada:	eb04 0509 	add.w	r5, r4, r9
 8015ade:	2b00      	cmp	r3, #0
 8015ae0:	f000 8096 	beq.w	8015c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8015ae4:	7877      	ldrb	r7, [r6, #1]
 8015ae6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015aea:	4427      	add	r7, r4
 8015aec:	2900      	cmp	r1, #0
 8015aee:	f000 8097 	beq.w	8015c20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8015af2:	18b0      	adds	r0, r6, r2
 8015af4:	5cb2      	ldrb	r2, [r6, r2]
 8015af6:	7840      	ldrb	r0, [r0, #1]
 8015af8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015afc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b00:	4422      	add	r2, r4
 8015b02:	4420      	add	r0, r4
 8015b04:	b29b      	uxth	r3, r3
 8015b06:	b289      	uxth	r1, r1
 8015b08:	fb03 f801 	mul.w	r8, r3, r1
 8015b0c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015b0e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015b12:	f8b6 c000 	ldrh.w	ip, [r6]
 8015b16:	78be      	ldrb	r6, [r7, #2]
 8015b18:	f814 9009 	ldrb.w	r9, [r4, r9]
 8015b1c:	011b      	lsls	r3, r3, #4
 8015b1e:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015b22:	b289      	uxth	r1, r1
 8015b24:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015b28:	eba3 0308 	sub.w	r3, r3, r8
 8015b2c:	b29b      	uxth	r3, r3
 8015b2e:	ebae 0e01 	sub.w	lr, lr, r1
 8015b32:	fa1f fe8e 	uxth.w	lr, lr
 8015b36:	435e      	muls	r6, r3
 8015b38:	fb0e 660b 	mla	r6, lr, fp, r6
 8015b3c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015b40:	9310      	str	r3, [sp, #64]	; 0x40
 8015b42:	fb01 660b 	mla	r6, r1, fp, r6
 8015b46:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015b4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b4c:	fb08 660b 	mla	r6, r8, fp, r6
 8015b50:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015b54:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015b58:	fb1b fb03 	smulbb	fp, fp, r3
 8015b5c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015b60:	fb06 b60a 	mla	r6, r6, sl, fp
 8015b64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b66:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015b6a:	787d      	ldrb	r5, [r7, #1]
 8015b6c:	783f      	ldrb	r7, [r7, #0]
 8015b6e:	435d      	muls	r5, r3
 8015b70:	fb0e 550b 	mla	r5, lr, fp, r5
 8015b74:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015b78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b7a:	fb01 550b 	mla	r5, r1, fp, r5
 8015b7e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015b82:	fb08 550b 	mla	r5, r8, fp, r5
 8015b86:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015b8a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015b8e:	fb1b fb03 	smulbb	fp, fp, r3
 8015b92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b94:	437b      	muls	r3, r7
 8015b96:	7817      	ldrb	r7, [r2, #0]
 8015b98:	fb0e 3309 	mla	r3, lr, r9, r3
 8015b9c:	fb01 3307 	mla	r3, r1, r7, r3
 8015ba0:	7807      	ldrb	r7, [r0, #0]
 8015ba2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015ba6:	fb08 3707 	mla	r7, r8, r7, r3
 8015baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015bac:	fa5f fc8c 	uxtb.w	ip, ip
 8015bb0:	fb1c fc03 	smulbb	ip, ip, r3
 8015bb4:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015bb8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015bbc:	fb05 b50a 	mla	r5, r5, sl, fp
 8015bc0:	fb07 c70a 	mla	r7, r7, sl, ip
 8015bc4:	b2b6      	uxth	r6, r6
 8015bc6:	b2ad      	uxth	r5, r5
 8015bc8:	b2bf      	uxth	r7, r7
 8015bca:	1c73      	adds	r3, r6, #1
 8015bcc:	1c7a      	adds	r2, r7, #1
 8015bce:	f105 0b01 	add.w	fp, r5, #1
 8015bd2:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015bd6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015bda:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015bde:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015be2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015be6:	096d      	lsrs	r5, r5, #5
 8015be8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015bea:	4316      	orrs	r6, r2
 8015bec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015bf0:	432e      	orrs	r6, r5
 8015bf2:	f823 6b02 	strh.w	r6, [r3], #2
 8015bf6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015bf8:	930c      	str	r3, [sp, #48]	; 0x30
 8015bfa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015bfc:	4413      	add	r3, r2
 8015bfe:	9327      	str	r3, [sp, #156]	; 0x9c
 8015c00:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015c02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c04:	4413      	add	r3, r2
 8015c06:	9328      	str	r3, [sp, #160]	; 0xa0
 8015c08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c0a:	3b01      	subs	r3, #1
 8015c0c:	9311      	str	r3, [sp, #68]	; 0x44
 8015c0e:	e6db      	b.n	80159c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8015c10:	b149      	cbz	r1, 8015c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015c12:	5cb2      	ldrb	r2, [r6, r2]
 8015c14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015c18:	4422      	add	r2, r4
 8015c1a:	4628      	mov	r0, r5
 8015c1c:	462f      	mov	r7, r5
 8015c1e:	e771      	b.n	8015b04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015c20:	4628      	mov	r0, r5
 8015c22:	462a      	mov	r2, r5
 8015c24:	e76e      	b.n	8015b04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015c26:	4628      	mov	r0, r5
 8015c28:	462a      	mov	r2, r5
 8015c2a:	e7f7      	b.n	8015c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8015c2c:	b015      	add	sp, #84	; 0x54
 8015c2e:	ecbd 8b08 	vpop	{d8-d11}
 8015c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c3c:	880e      	ldrh	r6, [r1, #0]
 8015c3e:	b085      	sub	sp, #20
 8015c40:	0230      	lsls	r0, r6, #8
 8015c42:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015c46:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015c4a:	0170      	lsls	r0, r6, #5
 8015c4c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015c50:	9101      	str	r1, [sp, #4]
 8015c52:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015c56:	00f6      	lsls	r6, r6, #3
 8015c58:	ea4b 0000 	orr.w	r0, fp, r0
 8015c5c:	b2f6      	uxtb	r6, r6
 8015c5e:	4691      	mov	r9, r2
 8015c60:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015c64:	4306      	orrs	r6, r0
 8015c66:	2d00      	cmp	r5, #0
 8015c68:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015c6c:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015c70:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015c74:	9603      	str	r6, [sp, #12]
 8015c76:	eb09 0e0a 	add.w	lr, r9, sl
 8015c7a:	db42      	blt.n	8015d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015c7c:	45a8      	cmp	r8, r5
 8015c7e:	dd40      	ble.n	8015d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015c80:	2f00      	cmp	r7, #0
 8015c82:	db3c      	blt.n	8015cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015c84:	45bc      	cmp	ip, r7
 8015c86:	dd3a      	ble.n	8015cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015c88:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015c8c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015c90:	441e      	add	r6, r3
 8015c92:	1c78      	adds	r0, r7, #1
 8015c94:	d438      	bmi.n	8015d08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015c96:	4584      	cmp	ip, r0
 8015c98:	dd36      	ble.n	8015d08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015c9a:	b3aa      	cbz	r2, 8015d08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015c9c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015ca0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015ca4:	4418      	add	r0, r3
 8015ca6:	3501      	adds	r5, #1
 8015ca8:	d432      	bmi.n	8015d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015caa:	45a8      	cmp	r8, r5
 8015cac:	dd30      	ble.n	8015d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015cae:	b37c      	cbz	r4, 8015d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015cb0:	2f00      	cmp	r7, #0
 8015cb2:	db2b      	blt.n	8015d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015cb4:	45bc      	cmp	ip, r7
 8015cb6:	dd29      	ble.n	8015d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015cb8:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015cbc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015cc0:	441d      	add	r5, r3
 8015cc2:	3701      	adds	r7, #1
 8015cc4:	d427      	bmi.n	8015d16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015cc6:	45bc      	cmp	ip, r7
 8015cc8:	dd25      	ble.n	8015d16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015cca:	b322      	cbz	r2, 8015d16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015ccc:	44f4      	add	ip, lr
 8015cce:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015cd2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015cd6:	443b      	add	r3, r7
 8015cd8:	781f      	ldrb	r7, [r3, #0]
 8015cda:	f896 9000 	ldrb.w	r9, [r6]
 8015cde:	f890 a000 	ldrb.w	sl, [r0]
 8015ce2:	f895 8000 	ldrb.w	r8, [r5]
 8015ce6:	2a0f      	cmp	r2, #15
 8015ce8:	4639      	mov	r1, r7
 8015cea:	d801      	bhi.n	8015cf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015cec:	2c0f      	cmp	r4, #15
 8015cee:	d914      	bls.n	8015d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8015cf0:	4b2c      	ldr	r3, [pc, #176]	; (8015da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015cf2:	4a2d      	ldr	r2, [pc, #180]	; (8015da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015cf4:	482d      	ldr	r0, [pc, #180]	; (8015dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015cf6:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015cfa:	f005 ffcb 	bl	801bc94 <__assert_func>
 8015cfe:	ae03      	add	r6, sp, #12
 8015d00:	e7c7      	b.n	8015c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8015d02:	a803      	add	r0, sp, #12
 8015d04:	4606      	mov	r6, r0
 8015d06:	e7ce      	b.n	8015ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d08:	a803      	add	r0, sp, #12
 8015d0a:	e7cc      	b.n	8015ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d0c:	ad03      	add	r5, sp, #12
 8015d0e:	e7d8      	b.n	8015cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8015d10:	ab03      	add	r3, sp, #12
 8015d12:	461d      	mov	r5, r3
 8015d14:	e7e0      	b.n	8015cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015d16:	ab03      	add	r3, sp, #12
 8015d18:	e7de      	b.n	8015cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015d1a:	b292      	uxth	r2, r2
 8015d1c:	b2a4      	uxth	r4, r4
 8015d1e:	fb02 fe04 	mul.w	lr, r2, r4
 8015d22:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015d26:	0112      	lsls	r2, r2, #4
 8015d28:	b2a4      	uxth	r4, r4
 8015d2a:	f890 c002 	ldrb.w	ip, [r0, #2]
 8015d2e:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015d32:	7840      	ldrb	r0, [r0, #1]
 8015d34:	7876      	ldrb	r6, [r6, #1]
 8015d36:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8015d3a:	eba2 020e 	sub.w	r2, r2, lr
 8015d3e:	b292      	uxth	r2, r2
 8015d40:	1b3f      	subs	r7, r7, r4
 8015d42:	b2bf      	uxth	r7, r7
 8015d44:	fb02 fc0c 	mul.w	ip, r2, ip
 8015d48:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015d4c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015d50:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015d54:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015d58:	785b      	ldrb	r3, [r3, #1]
 8015d5a:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015d5e:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015d62:	fb02 fc0a 	mul.w	ip, r2, sl
 8015d66:	4342      	muls	r2, r0
 8015d68:	7868      	ldrb	r0, [r5, #1]
 8015d6a:	fb07 cc09 	mla	ip, r7, r9, ip
 8015d6e:	fb07 2206 	mla	r2, r7, r6, r2
 8015d72:	fb04 cc08 	mla	ip, r4, r8, ip
 8015d76:	fb04 2400 	mla	r4, r4, r0, r2
 8015d7a:	fb0e cc01 	mla	ip, lr, r1, ip
 8015d7e:	fb0e 4e03 	mla	lr, lr, r3, r4
 8015d82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015d86:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015d8a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015d8e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015d92:	9b01      	ldr	r3, [sp, #4]
 8015d94:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015d98:	f8a3 c000 	strh.w	ip, [r3]
 8015d9c:	b005      	add	sp, #20
 8015d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015da2:	bf00      	nop
 8015da4:	0801fc17 	.word	0x0801fc17
 8015da8:	08020146 	.word	0x08020146
 8015dac:	0801fbe4 	.word	0x0801fbe4

08015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015db4:	ed2d 8b08 	vpush	{d8-d11}
 8015db8:	b08f      	sub	sp, #60	; 0x3c
 8015dba:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015dbe:	920c      	str	r2, [sp, #48]	; 0x30
 8015dc0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015dc2:	910a      	str	r1, [sp, #40]	; 0x28
 8015dc4:	9306      	str	r3, [sp, #24]
 8015dc6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015dca:	900d      	str	r0, [sp, #52]	; 0x34
 8015dcc:	6850      	ldr	r0, [r2, #4]
 8015dce:	6812      	ldr	r2, [r2, #0]
 8015dd0:	fb00 1303 	mla	r3, r0, r3, r1
 8015dd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015dd8:	9307      	str	r3, [sp, #28]
 8015dda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ddc:	681b      	ldr	r3, [r3, #0]
 8015dde:	9308      	str	r3, [sp, #32]
 8015de0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015de2:	685c      	ldr	r4, [r3, #4]
 8015de4:	eeb0 aa40 	vmov.f32	s20, s0
 8015de8:	eef0 9a60 	vmov.f32	s19, s1
 8015dec:	eeb0 9a41 	vmov.f32	s18, s2
 8015df0:	eeb0 8a62 	vmov.f32	s16, s5
 8015df4:	eef0 8a43 	vmov.f32	s17, s6
 8015df8:	eef0 ba44 	vmov.f32	s23, s8
 8015dfc:	eeb0 ba64 	vmov.f32	s22, s9
 8015e00:	eef0 aa45 	vmov.f32	s21, s10
 8015e04:	3404      	adds	r4, #4
 8015e06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e08:	2b00      	cmp	r3, #0
 8015e0a:	dc03      	bgt.n	8015e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015e0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e0e:	2b00      	cmp	r3, #0
 8015e10:	f340 81d6 	ble.w	80161c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015e14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015e1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015e1e:	1e48      	subs	r0, r1, #1
 8015e20:	1e56      	subs	r6, r2, #1
 8015e22:	9b06      	ldr	r3, [sp, #24]
 8015e24:	2b00      	cmp	r3, #0
 8015e26:	f340 80b7 	ble.w	8015f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e2a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015e2e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015e32:	d406      	bmi.n	8015e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e34:	4287      	cmp	r7, r0
 8015e36:	da04      	bge.n	8015e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e38:	2b00      	cmp	r3, #0
 8015e3a:	db02      	blt.n	8015e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e3c:	42b3      	cmp	r3, r6
 8015e3e:	f2c0 80ac 	blt.w	8015f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015e42:	3701      	adds	r7, #1
 8015e44:	f100 809d 	bmi.w	8015f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015e48:	42b9      	cmp	r1, r7
 8015e4a:	f2c0 809a 	blt.w	8015f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015e4e:	3301      	adds	r3, #1
 8015e50:	f100 8097 	bmi.w	8015f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015e54:	429a      	cmp	r2, r3
 8015e56:	f2c0 8094 	blt.w	8015f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015e5a:	9b06      	ldr	r3, [sp, #24]
 8015e5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e5e:	9b07      	ldr	r3, [sp, #28]
 8015e60:	9309      	str	r3, [sp, #36]	; 0x24
 8015e62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e64:	2b00      	cmp	r3, #0
 8015e66:	f340 80b5 	ble.w	8015fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015e6a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015e6c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015e6e:	68c7      	ldr	r7, [r0, #12]
 8015e70:	6892      	ldr	r2, [r2, #8]
 8015e72:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015e76:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015e7a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015e7e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015e82:	f100 80fb 	bmi.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015e86:	f102 3cff 	add.w	ip, r2, #4294967295
 8015e8a:	4560      	cmp	r0, ip
 8015e8c:	f280 80f6 	bge.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015e90:	2e00      	cmp	r6, #0
 8015e92:	f2c0 80f3 	blt.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015e96:	f107 3cff 	add.w	ip, r7, #4294967295
 8015e9a:	4566      	cmp	r6, ip
 8015e9c:	f280 80ee 	bge.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015ea0:	b212      	sxth	r2, r2
 8015ea2:	fb06 0002 	mla	r0, r6, r2, r0
 8015ea6:	9e08      	ldr	r6, [sp, #32]
 8015ea8:	1837      	adds	r7, r6, r0
 8015eaa:	5c30      	ldrb	r0, [r6, r0]
 8015eac:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015eb0:	eb04 0c08 	add.w	ip, r4, r8
 8015eb4:	2b00      	cmp	r3, #0
 8015eb6:	f000 80d3 	beq.w	8016060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015eba:	787e      	ldrb	r6, [r7, #1]
 8015ebc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015ec0:	4426      	add	r6, r4
 8015ec2:	2900      	cmp	r1, #0
 8015ec4:	f000 80d4 	beq.w	8016070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015ec8:	18b8      	adds	r0, r7, r2
 8015eca:	5cba      	ldrb	r2, [r7, r2]
 8015ecc:	7840      	ldrb	r0, [r0, #1]
 8015ece:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ed2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015ed6:	4422      	add	r2, r4
 8015ed8:	4420      	add	r0, r4
 8015eda:	b29b      	uxth	r3, r3
 8015edc:	b289      	uxth	r1, r1
 8015ede:	fb03 f901 	mul.w	r9, r3, r1
 8015ee2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015ee6:	011b      	lsls	r3, r3, #4
 8015ee8:	b289      	uxth	r1, r1
 8015eea:	78b7      	ldrb	r7, [r6, #2]
 8015eec:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015ef0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015ef4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015ef8:	eba3 0309 	sub.w	r3, r3, r9
 8015efc:	b29b      	uxth	r3, r3
 8015efe:	ebae 0e01 	sub.w	lr, lr, r1
 8015f02:	fa1f fe8e 	uxth.w	lr, lr
 8015f06:	435f      	muls	r7, r3
 8015f08:	fb0e 770a 	mla	r7, lr, sl, r7
 8015f0c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015f10:	fb01 770a 	mla	r7, r1, sl, r7
 8015f14:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015f18:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015f1c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015f20:	f896 8000 	ldrb.w	r8, [r6]
 8015f24:	7876      	ldrb	r6, [r6, #1]
 8015f26:	fb03 f808 	mul.w	r8, r3, r8
 8015f2a:	fb0e 8807 	mla	r8, lr, r7, r8
 8015f2e:	7817      	ldrb	r7, [r2, #0]
 8015f30:	fb01 8807 	mla	r8, r1, r7, r8
 8015f34:	7807      	ldrb	r7, [r0, #0]
 8015f36:	fb09 8707 	mla	r7, r9, r7, r8
 8015f3a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015f3e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015f42:	ea47 070a 	orr.w	r7, r7, sl
 8015f46:	4373      	muls	r3, r6
 8015f48:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015f4c:	fb0e 330c 	mla	r3, lr, ip, r3
 8015f50:	fb01 310a 	mla	r1, r1, sl, r3
 8015f54:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f5a:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015f5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f66:	ea47 070a 	orr.w	r7, r7, sl
 8015f6a:	801f      	strh	r7, [r3, #0]
 8015f6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f6e:	3302      	adds	r3, #2
 8015f70:	9309      	str	r3, [sp, #36]	; 0x24
 8015f72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f74:	449b      	add	fp, r3
 8015f76:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015f78:	441d      	add	r5, r3
 8015f7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015f7c:	3b01      	subs	r3, #1
 8015f7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f80:	e76f      	b.n	8015e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015f82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f84:	449b      	add	fp, r3
 8015f86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015f88:	441d      	add	r5, r3
 8015f8a:	9b06      	ldr	r3, [sp, #24]
 8015f8c:	3b01      	subs	r3, #1
 8015f8e:	9306      	str	r3, [sp, #24]
 8015f90:	9b07      	ldr	r3, [sp, #28]
 8015f92:	3302      	adds	r3, #2
 8015f94:	9307      	str	r3, [sp, #28]
 8015f96:	e744      	b.n	8015e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015f98:	d023      	beq.n	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015f9a:	9b06      	ldr	r3, [sp, #24]
 8015f9c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015f9e:	3b01      	subs	r3, #1
 8015fa0:	fb00 b003 	mla	r0, r0, r3, fp
 8015fa4:	1400      	asrs	r0, r0, #16
 8015fa6:	f53f af58 	bmi.w	8015e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015faa:	3901      	subs	r1, #1
 8015fac:	4288      	cmp	r0, r1
 8015fae:	f6bf af54 	bge.w	8015e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015fb2:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015fb4:	fb01 5303 	mla	r3, r1, r3, r5
 8015fb8:	141b      	asrs	r3, r3, #16
 8015fba:	f53f af4e 	bmi.w	8015e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015fbe:	3a01      	subs	r2, #1
 8015fc0:	4293      	cmp	r3, r2
 8015fc2:	f6bf af4a 	bge.w	8015e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015fc6:	9b06      	ldr	r3, [sp, #24]
 8015fc8:	9309      	str	r3, [sp, #36]	; 0x24
 8015fca:	9b07      	ldr	r3, [sp, #28]
 8015fcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8015fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fd0:	2b00      	cmp	r3, #0
 8015fd2:	dc70      	bgt.n	80160b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015fd4:	9b06      	ldr	r3, [sp, #24]
 8015fd6:	9a07      	ldr	r2, [sp, #28]
 8015fd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015fe0:	9307      	str	r3, [sp, #28]
 8015fe2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fe4:	2b00      	cmp	r3, #0
 8015fe6:	f340 80eb 	ble.w	80161c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015fea:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015fee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ff2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015ff6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015ff8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015ffc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016000:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016004:	eef0 6a48 	vmov.f32	s13, s16
 8016008:	ee69 7a27 	vmul.f32	s15, s18, s15
 801600c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016010:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016014:	ee16 ba90 	vmov	fp, s13
 8016018:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801601c:	eef0 6a68 	vmov.f32	s13, s17
 8016020:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016024:	ee18 2a10 	vmov	r2, s16
 8016028:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801602c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016030:	ee18 2a90 	vmov	r2, s17
 8016034:	9323      	str	r3, [sp, #140]	; 0x8c
 8016036:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016038:	fb92 f3f3 	sdiv	r3, r2, r3
 801603c:	9324      	str	r3, [sp, #144]	; 0x90
 801603e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016040:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016042:	3b01      	subs	r3, #1
 8016044:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016048:	930a      	str	r3, [sp, #40]	; 0x28
 801604a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801604c:	bf08      	it	eq
 801604e:	4613      	moveq	r3, r2
 8016050:	ee16 5a90 	vmov	r5, s13
 8016054:	9306      	str	r3, [sp, #24]
 8016056:	eef0 8a67 	vmov.f32	s17, s15
 801605a:	eeb0 8a47 	vmov.f32	s16, s14
 801605e:	e6d2      	b.n	8015e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8016060:	b149      	cbz	r1, 8016076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016062:	5cba      	ldrb	r2, [r7, r2]
 8016064:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016068:	4422      	add	r2, r4
 801606a:	4660      	mov	r0, ip
 801606c:	4666      	mov	r6, ip
 801606e:	e734      	b.n	8015eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016070:	4660      	mov	r0, ip
 8016072:	4662      	mov	r2, ip
 8016074:	e731      	b.n	8015eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016076:	4660      	mov	r0, ip
 8016078:	4662      	mov	r2, ip
 801607a:	e7f7      	b.n	801606c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801607c:	f110 0c01 	adds.w	ip, r0, #1
 8016080:	f53f af74 	bmi.w	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016084:	4562      	cmp	r2, ip
 8016086:	f6ff af71 	blt.w	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801608a:	f116 0c01 	adds.w	ip, r6, #1
 801608e:	f53f af6d 	bmi.w	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016092:	4567      	cmp	r7, ip
 8016094:	f6ff af6a 	blt.w	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016098:	b23f      	sxth	r7, r7
 801609a:	b212      	sxth	r2, r2
 801609c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80160a0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80160a4:	9200      	str	r2, [sp, #0]
 80160a6:	9701      	str	r7, [sp, #4]
 80160a8:	4623      	mov	r3, r4
 80160aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80160ae:	980d      	ldr	r0, [sp, #52]	; 0x34
 80160b0:	f7ff fdc2 	bl	8015c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80160b4:	e75a      	b.n	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80160b6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80160b8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80160bc:	ea4f 462b 	mov.w	r6, fp, asr #16
 80160c0:	1428      	asrs	r0, r5, #16
 80160c2:	fb02 6000 	mla	r0, r2, r0, r6
 80160c6:	9e08      	ldr	r6, [sp, #32]
 80160c8:	f816 8000 	ldrb.w	r8, [r6, r0]
 80160cc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80160d0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80160d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80160d8:	1837      	adds	r7, r6, r0
 80160da:	eb04 0c08 	add.w	ip, r4, r8
 80160de:	2b00      	cmp	r3, #0
 80160e0:	d060      	beq.n	80161a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80160e2:	787e      	ldrb	r6, [r7, #1]
 80160e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80160e8:	4426      	add	r6, r4
 80160ea:	2900      	cmp	r1, #0
 80160ec:	d062      	beq.n	80161b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 80160ee:	18b8      	adds	r0, r7, r2
 80160f0:	5cba      	ldrb	r2, [r7, r2]
 80160f2:	7840      	ldrb	r0, [r0, #1]
 80160f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80160f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80160fc:	4422      	add	r2, r4
 80160fe:	4420      	add	r0, r4
 8016100:	b29b      	uxth	r3, r3
 8016102:	b289      	uxth	r1, r1
 8016104:	fb03 f901 	mul.w	r9, r3, r1
 8016108:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801610c:	011b      	lsls	r3, r3, #4
 801610e:	b289      	uxth	r1, r1
 8016110:	78b7      	ldrb	r7, [r6, #2]
 8016112:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016116:	f89c c001 	ldrb.w	ip, [ip, #1]
 801611a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801611e:	eba3 0309 	sub.w	r3, r3, r9
 8016122:	b29b      	uxth	r3, r3
 8016124:	ebae 0e01 	sub.w	lr, lr, r1
 8016128:	fa1f fe8e 	uxth.w	lr, lr
 801612c:	435f      	muls	r7, r3
 801612e:	fb0e 770a 	mla	r7, lr, sl, r7
 8016132:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016136:	fb01 770a 	mla	r7, r1, sl, r7
 801613a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801613e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016142:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016146:	f896 8000 	ldrb.w	r8, [r6]
 801614a:	7876      	ldrb	r6, [r6, #1]
 801614c:	fb03 f808 	mul.w	r8, r3, r8
 8016150:	fb0e 8807 	mla	r8, lr, r7, r8
 8016154:	7817      	ldrb	r7, [r2, #0]
 8016156:	fb01 8807 	mla	r8, r1, r7, r8
 801615a:	7807      	ldrb	r7, [r0, #0]
 801615c:	fb09 8707 	mla	r7, r9, r7, r8
 8016160:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016164:	4373      	muls	r3, r6
 8016166:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801616a:	7856      	ldrb	r6, [r2, #1]
 801616c:	ea47 070a 	orr.w	r7, r7, sl
 8016170:	fb0e 330c 	mla	r3, lr, ip, r3
 8016174:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016178:	fb01 3306 	mla	r3, r1, r6, r3
 801617c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8016180:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016184:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016186:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801618a:	ea47 070a 	orr.w	r7, r7, sl
 801618e:	f823 7b02 	strh.w	r7, [r3], #2
 8016192:	930b      	str	r3, [sp, #44]	; 0x2c
 8016194:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016196:	449b      	add	fp, r3
 8016198:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801619a:	441d      	add	r5, r3
 801619c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801619e:	3b01      	subs	r3, #1
 80161a0:	9309      	str	r3, [sp, #36]	; 0x24
 80161a2:	e714      	b.n	8015fce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80161a4:	b149      	cbz	r1, 80161ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80161a6:	5cba      	ldrb	r2, [r7, r2]
 80161a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80161ac:	4422      	add	r2, r4
 80161ae:	4660      	mov	r0, ip
 80161b0:	4666      	mov	r6, ip
 80161b2:	e7a5      	b.n	8016100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80161b4:	4660      	mov	r0, ip
 80161b6:	4662      	mov	r2, ip
 80161b8:	e7a2      	b.n	8016100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80161ba:	4660      	mov	r0, ip
 80161bc:	4662      	mov	r2, ip
 80161be:	e7f7      	b.n	80161b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80161c0:	b00f      	add	sp, #60	; 0x3c
 80161c2:	ecbd 8b08 	vpop	{d8-d11}
 80161c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080161cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80161cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161d0:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 80161d4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80161d8:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80161dc:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80161e0:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 80161e4:	fb04 560c 	mla	r6, r4, ip, r5
 80161e8:	2c00      	cmp	r4, #0
 80161ea:	eb02 0e06 	add.w	lr, r2, r6
 80161ee:	db3d      	blt.n	801626c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80161f0:	45a0      	cmp	r8, r4
 80161f2:	dd3b      	ble.n	801626c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80161f4:	2d00      	cmp	r5, #0
 80161f6:	db37      	blt.n	8016268 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80161f8:	45ac      	cmp	ip, r5
 80161fa:	dd35      	ble.n	8016268 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80161fc:	5d92      	ldrb	r2, [r2, r6]
 80161fe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016202:	1c6e      	adds	r6, r5, #1
 8016204:	d435      	bmi.n	8016272 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016206:	45b4      	cmp	ip, r6
 8016208:	dd33      	ble.n	8016272 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801620a:	b3a0      	cbz	r0, 8016276 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 801620c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016210:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016214:	3401      	adds	r4, #1
 8016216:	d432      	bmi.n	801627e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8016218:	45a0      	cmp	r8, r4
 801621a:	dd30      	ble.n	801627e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801621c:	b397      	cbz	r7, 8016284 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 801621e:	2d00      	cmp	r5, #0
 8016220:	db2b      	blt.n	801627a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8016222:	45ac      	cmp	ip, r5
 8016224:	dd29      	ble.n	801627a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8016226:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801622a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801622e:	3501      	adds	r5, #1
 8016230:	d42b      	bmi.n	801628a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016232:	45ac      	cmp	ip, r5
 8016234:	dd29      	ble.n	801628a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016236:	b350      	cbz	r0, 801628e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8016238:	44f4      	add	ip, lr
 801623a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801623e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016242:	280f      	cmp	r0, #15
 8016244:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016248:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801624c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016250:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016254:	d801      	bhi.n	801625a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8016256:	2f0f      	cmp	r7, #15
 8016258:	d91b      	bls.n	8016292 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801625a:	4b8d      	ldr	r3, [pc, #564]	; (8016490 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801625c:	4a8d      	ldr	r2, [pc, #564]	; (8016494 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801625e:	488e      	ldr	r0, [pc, #568]	; (8016498 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8016260:	f240 11f9 	movw	r1, #505	; 0x1f9
 8016264:	f005 fd16 	bl	801bc94 <__assert_func>
 8016268:	2200      	movs	r2, #0
 801626a:	e7ca      	b.n	8016202 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 801626c:	2600      	movs	r6, #0
 801626e:	4632      	mov	r2, r6
 8016270:	e7d0      	b.n	8016214 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016272:	2600      	movs	r6, #0
 8016274:	e7ce      	b.n	8016214 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016276:	4606      	mov	r6, r0
 8016278:	e7cc      	b.n	8016214 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801627a:	2400      	movs	r4, #0
 801627c:	e7d7      	b.n	801622e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801627e:	2300      	movs	r3, #0
 8016280:	461c      	mov	r4, r3
 8016282:	e7de      	b.n	8016242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016284:	463b      	mov	r3, r7
 8016286:	463c      	mov	r4, r7
 8016288:	e7db      	b.n	8016242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801628a:	2300      	movs	r3, #0
 801628c:	e7d9      	b.n	8016242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801628e:	4603      	mov	r3, r0
 8016290:	e7d7      	b.n	8016242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016292:	b280      	uxth	r0, r0
 8016294:	b2bf      	uxth	r7, r7
 8016296:	fb07 fe00 	mul.w	lr, r7, r0
 801629a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801629e:	0100      	lsls	r0, r0, #4
 80162a0:	eba0 0c0e 	sub.w	ip, r0, lr
 80162a4:	b2bf      	uxth	r7, r7
 80162a6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80162aa:	fa1f fc8c 	uxth.w	ip, ip
 80162ae:	1bed      	subs	r5, r5, r7
 80162b0:	b2ad      	uxth	r5, r5
 80162b2:	fb0a f00c 	mul.w	r0, sl, ip
 80162b6:	fb0b 0005 	mla	r0, fp, r5, r0
 80162ba:	fb07 0009 	mla	r0, r7, r9, r0
 80162be:	fb0e 0008 	mla	r0, lr, r8, r0
 80162c2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80162c6:	9001      	str	r0, [sp, #4]
 80162c8:	2800      	cmp	r0, #0
 80162ca:	f000 80de 	beq.w	801648a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80162ce:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80162d2:	d018      	beq.n	8016306 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80162d4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80162d8:	fb0b f000 	mul.w	r0, fp, r0
 80162dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80162e0:	fb0b fb02 	mul.w	fp, fp, r2
 80162e4:	0a02      	lsrs	r2, r0, #8
 80162e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80162ea:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80162ee:	4402      	add	r2, r0
 80162f0:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80162f4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80162f8:	0a12      	lsrs	r2, r2, #8
 80162fa:	0a00      	lsrs	r0, r0, #8
 80162fc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016300:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016304:	4302      	orrs	r2, r0
 8016306:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801630a:	d01a      	beq.n	8016342 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 801630c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8016310:	fb0a f000 	mul.w	r0, sl, r0
 8016314:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016318:	fb0a fa06 	mul.w	sl, sl, r6
 801631c:	0a06      	lsrs	r6, r0, #8
 801631e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016322:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016326:	4406      	add	r6, r0
 8016328:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801632c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8016330:	0a36      	lsrs	r6, r6, #8
 8016332:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016336:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801633a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801633e:	ea46 060a 	orr.w	r6, r6, sl
 8016342:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016346:	d01b      	beq.n	8016380 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8016348:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801634c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016350:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016354:	fb09 f004 	mul.w	r0, r9, r4
 8016358:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801635c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016360:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016364:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8016368:	4454      	add	r4, sl
 801636a:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801636e:	0a24      	lsrs	r4, r4, #8
 8016370:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016374:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016378:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801637c:	ea44 0409 	orr.w	r4, r4, r9
 8016380:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016384:	d01b      	beq.n	80163be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8016386:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801638a:	fb08 f909 	mul.w	r9, r8, r9
 801638e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016392:	fb08 f003 	mul.w	r0, r8, r3
 8016396:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801639a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801639e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80163a2:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80163a6:	444b      	add	r3, r9
 80163a8:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80163ac:	0a1b      	lsrs	r3, r3, #8
 80163ae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80163b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163b6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80163ba:	ea43 0308 	orr.w	r3, r3, r8
 80163be:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80163c2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80163c6:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80163ca:	fb0c f808 	mul.w	r8, ip, r8
 80163ce:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80163d2:	fb0c f606 	mul.w	r6, ip, r6
 80163d6:	fb05 8909 	mla	r9, r5, r9, r8
 80163da:	fb05 6502 	mla	r5, r5, r2, r6
 80163de:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80163e2:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80163e6:	9a01      	ldr	r2, [sp, #4]
 80163e8:	8808      	ldrh	r0, [r1, #0]
 80163ea:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80163ee:	fb07 9908 	mla	r9, r7, r8, r9
 80163f2:	fb07 5704 	mla	r7, r7, r4, r5
 80163f6:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80163fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163fe:	b2b6      	uxth	r6, r6
 8016400:	fb0e 9808 	mla	r8, lr, r8, r9
 8016404:	fb0e 7e03 	mla	lr, lr, r3, r7
 8016408:	4372      	muls	r2, r6
 801640a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801640e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016412:	1c53      	adds	r3, r2, #1
 8016414:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8016418:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801641c:	ea48 0e0e 	orr.w	lr, r8, lr
 8016420:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016424:	1205      	asrs	r5, r0, #8
 8016426:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801642a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801642e:	b2db      	uxtb	r3, r3
 8016430:	fb12 f206 	smulbb	r2, r2, r6
 8016434:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016438:	fb05 2503 	mla	r5, r5, r3, r2
 801643c:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8016440:	10c2      	asrs	r2, r0, #3
 8016442:	fa5f fe8e 	uxtb.w	lr, lr
 8016446:	00c0      	lsls	r0, r0, #3
 8016448:	fb14 f406 	smulbb	r4, r4, r6
 801644c:	b2c0      	uxtb	r0, r0
 801644e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016452:	fb1e fe06 	smulbb	lr, lr, r6
 8016456:	fb02 4203 	mla	r2, r2, r3, r4
 801645a:	b2ad      	uxth	r5, r5
 801645c:	fb00 e303 	mla	r3, r0, r3, lr
 8016460:	b298      	uxth	r0, r3
 8016462:	b294      	uxth	r4, r2
 8016464:	1c6b      	adds	r3, r5, #1
 8016466:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801646a:	1c62      	adds	r2, r4, #1
 801646c:	1c43      	adds	r3, r0, #1
 801646e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016472:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016476:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801647a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801647e:	0952      	lsrs	r2, r2, #5
 8016480:	432b      	orrs	r3, r5
 8016482:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016486:	4313      	orrs	r3, r2
 8016488:	800b      	strh	r3, [r1, #0]
 801648a:	b003      	add	sp, #12
 801648c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016490:	0801fc17 	.word	0x0801fc17
 8016494:	08020146 	.word	0x08020146
 8016498:	0801fbe4 	.word	0x0801fbe4

0801649c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801649c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164a0:	ed2d 8b08 	vpush	{d8-d11}
 80164a4:	b09f      	sub	sp, #124	; 0x7c
 80164a6:	eeb0 aa40 	vmov.f32	s20, s0
 80164aa:	921b      	str	r2, [sp, #108]	; 0x6c
 80164ac:	9309      	str	r3, [sp, #36]	; 0x24
 80164ae:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80164b0:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80164b4:	931c      	str	r3, [sp, #112]	; 0x70
 80164b6:	9119      	str	r1, [sp, #100]	; 0x64
 80164b8:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80164bc:	901d      	str	r0, [sp, #116]	; 0x74
 80164be:	6850      	ldr	r0, [r2, #4]
 80164c0:	6812      	ldr	r2, [r2, #0]
 80164c2:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80164c4:	fb00 1303 	mla	r3, r0, r3, r1
 80164c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80164cc:	930c      	str	r3, [sp, #48]	; 0x30
 80164ce:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80164d0:	681b      	ldr	r3, [r3, #0]
 80164d2:	9312      	str	r3, [sp, #72]	; 0x48
 80164d4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80164d6:	685e      	ldr	r6, [r3, #4]
 80164d8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80164dc:	930d      	str	r3, [sp, #52]	; 0x34
 80164de:	eef0 9a60 	vmov.f32	s19, s1
 80164e2:	eeb0 9a41 	vmov.f32	s18, s2
 80164e6:	eeb0 8a62 	vmov.f32	s16, s5
 80164ea:	eef0 8a43 	vmov.f32	s17, s6
 80164ee:	eef0 ba44 	vmov.f32	s23, s8
 80164f2:	eeb0 ba64 	vmov.f32	s22, s9
 80164f6:	eef0 aa45 	vmov.f32	s21, s10
 80164fa:	3604      	adds	r6, #4
 80164fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80164fe:	2b00      	cmp	r3, #0
 8016500:	dc03      	bgt.n	801650a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016502:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016504:	2b00      	cmp	r3, #0
 8016506:	f340 8388 	ble.w	8016c1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801650a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801650c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016510:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016514:	1e48      	subs	r0, r1, #1
 8016516:	1e57      	subs	r7, r2, #1
 8016518:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801651a:	2b00      	cmp	r3, #0
 801651c:	f340 8195 	ble.w	801684a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016520:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016522:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016526:	ea4f 4325 	mov.w	r3, r5, asr #16
 801652a:	d406      	bmi.n	801653a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801652c:	4584      	cmp	ip, r0
 801652e:	da04      	bge.n	801653a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016530:	2b00      	cmp	r3, #0
 8016532:	db02      	blt.n	801653a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016534:	42bb      	cmp	r3, r7
 8016536:	f2c0 8189 	blt.w	801684c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801653a:	f11c 0c01 	adds.w	ip, ip, #1
 801653e:	f100 8177 	bmi.w	8016830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016542:	4561      	cmp	r1, ip
 8016544:	f2c0 8174 	blt.w	8016830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016548:	3301      	adds	r3, #1
 801654a:	f100 8171 	bmi.w	8016830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801654e:	429a      	cmp	r2, r3
 8016550:	f2c0 816e 	blt.w	8016830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016554:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016556:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016558:	931a      	str	r3, [sp, #104]	; 0x68
 801655a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801655c:	2b00      	cmp	r3, #0
 801655e:	f340 8193 	ble.w	8016888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8016562:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016564:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016568:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801656a:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801656e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016570:	141b      	asrs	r3, r3, #16
 8016572:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016576:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801657a:	f100 81d6 	bmi.w	801692a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801657e:	f100 38ff 	add.w	r8, r0, #4294967295
 8016582:	4543      	cmp	r3, r8
 8016584:	f280 81d1 	bge.w	801692a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016588:	f1bc 0f00 	cmp.w	ip, #0
 801658c:	f2c0 81cd 	blt.w	801692a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016590:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016594:	45c4      	cmp	ip, r8
 8016596:	f280 81c8 	bge.w	801692a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801659a:	b200      	sxth	r0, r0
 801659c:	fb0c 3300 	mla	r3, ip, r0, r3
 80165a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80165a2:	eb04 0803 	add.w	r8, r4, r3
 80165a6:	5ce3      	ldrb	r3, [r4, r3]
 80165a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80165ac:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80165b0:	2a00      	cmp	r2, #0
 80165b2:	f000 81af 	beq.w	8016914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80165b6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80165ba:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80165be:	940e      	str	r4, [sp, #56]	; 0x38
 80165c0:	0e24      	lsrs	r4, r4, #24
 80165c2:	9415      	str	r4, [sp, #84]	; 0x54
 80165c4:	b179      	cbz	r1, 80165e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80165c6:	eb08 0c00 	add.w	ip, r8, r0
 80165ca:	f818 0000 	ldrb.w	r0, [r8, r0]
 80165ce:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80165d2:	900a      	str	r0, [sp, #40]	; 0x28
 80165d4:	0e00      	lsrs	r0, r0, #24
 80165d6:	9013      	str	r0, [sp, #76]	; 0x4c
 80165d8:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80165dc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80165e0:	900f      	str	r0, [sp, #60]	; 0x3c
 80165e2:	0e00      	lsrs	r0, r0, #24
 80165e4:	9016      	str	r0, [sp, #88]	; 0x58
 80165e6:	b292      	uxth	r2, r2
 80165e8:	b289      	uxth	r1, r1
 80165ea:	fb02 f901 	mul.w	r9, r2, r1
 80165ee:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80165f2:	0112      	lsls	r2, r2, #4
 80165f4:	eba2 0809 	sub.w	r8, r2, r9
 80165f8:	b289      	uxth	r1, r1
 80165fa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80165fe:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016600:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016602:	fa1f f888 	uxth.w	r8, r8
 8016606:	1a52      	subs	r2, r2, r1
 8016608:	b292      	uxth	r2, r2
 801660a:	fb08 f000 	mul.w	r0, r8, r0
 801660e:	fb02 000e 	mla	r0, r2, lr, r0
 8016612:	fb01 0004 	mla	r0, r1, r4, r0
 8016616:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016618:	fb09 0004 	mla	r0, r9, r4, r0
 801661c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016620:	2800      	cmp	r0, #0
 8016622:	f000 80fa 	beq.w	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016626:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801662a:	d01b      	beq.n	8016664 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801662c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016630:	fb0e fa0a 	mul.w	sl, lr, sl
 8016634:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016638:	fb0e fe03 	mul.w	lr, lr, r3
 801663c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016640:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016644:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016648:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801664c:	4453      	add	r3, sl
 801664e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016652:	0a1b      	lsrs	r3, r3, #8
 8016654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016658:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801665c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016660:	ea43 030c 	orr.w	r3, r3, ip
 8016664:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016666:	2cff      	cmp	r4, #255	; 0xff
 8016668:	d021      	beq.n	80166ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801666a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801666c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016670:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016672:	fb04 fb0b 	mul.w	fp, r4, fp
 8016676:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016678:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801667c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801667e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016682:	fb04 fa0a 	mul.w	sl, r4, sl
 8016686:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801668a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801668e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016692:	44de      	add	lr, fp
 8016694:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016698:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801669c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80166a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80166a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80166a8:	ea4e 040a 	orr.w	r4, lr, sl
 80166ac:	940e      	str	r4, [sp, #56]	; 0x38
 80166ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80166b0:	2cff      	cmp	r4, #255	; 0xff
 80166b2:	d021      	beq.n	80166f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80166b4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80166b6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80166ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80166bc:	fb04 fb0b 	mul.w	fp, r4, fp
 80166c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80166c2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80166c6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80166c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80166cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80166d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80166d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80166d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80166dc:	44de      	add	lr, fp
 80166de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80166e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80166e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80166ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80166ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80166f2:	ea4e 040a 	orr.w	r4, lr, sl
 80166f6:	940a      	str	r4, [sp, #40]	; 0x28
 80166f8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80166fa:	2cff      	cmp	r4, #255	; 0xff
 80166fc:	d021      	beq.n	8016742 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80166fe:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016700:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016704:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016706:	fb04 fb0b 	mul.w	fp, r4, fp
 801670a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801670c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016710:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016712:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016716:	fb04 fa0a 	mul.w	sl, r4, sl
 801671a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801671e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016722:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016726:	44de      	add	lr, fp
 8016728:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801672c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016734:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016738:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801673c:	ea4e 040a 	orr.w	r4, lr, sl
 8016740:	940f      	str	r4, [sp, #60]	; 0x3c
 8016742:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016744:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016748:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801674a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801674e:	fb08 fc0c 	mul.w	ip, r8, ip
 8016752:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016756:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801675a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801675c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8016760:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016764:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016766:	fb09 cc0e 	mla	ip, r9, lr, ip
 801676a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801676e:	fb08 f80e 	mul.w	r8, r8, lr
 8016772:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016776:	fb02 8303 	mla	r3, r2, r3, r8
 801677a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801677c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801677e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016782:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016784:	fb01 330a 	mla	r3, r1, sl, r3
 8016788:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801678c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801678e:	fb09 3901 	mla	r9, r9, r1, r3
 8016792:	4342      	muls	r2, r0
 8016794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016798:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801679c:	883b      	ldrh	r3, [r7, #0]
 801679e:	1c50      	adds	r0, r2, #1
 80167a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80167a4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80167a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80167ac:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80167b0:	1219      	asrs	r1, r3, #8
 80167b2:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80167b6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80167ba:	b2c0      	uxtb	r0, r0
 80167bc:	fb12 f204 	smulbb	r2, r2, r4
 80167c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80167c4:	fb01 2100 	mla	r1, r1, r0, r2
 80167c8:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80167cc:	10da      	asrs	r2, r3, #3
 80167ce:	fa5f fc8c 	uxtb.w	ip, ip
 80167d2:	00db      	lsls	r3, r3, #3
 80167d4:	fb1c fc04 	smulbb	ip, ip, r4
 80167d8:	b2db      	uxtb	r3, r3
 80167da:	b289      	uxth	r1, r1
 80167dc:	fb03 c300 	mla	r3, r3, r0, ip
 80167e0:	fa1f fc83 	uxth.w	ip, r3
 80167e4:	1c4b      	adds	r3, r1, #1
 80167e6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80167ea:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80167ee:	fb1e fe04 	smulbb	lr, lr, r4
 80167f2:	f10c 0301 	add.w	r3, ip, #1
 80167f6:	fb02 e200 	mla	r2, r2, r0, lr
 80167fa:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80167fe:	b292      	uxth	r2, r2
 8016800:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016804:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016808:	430b      	orrs	r3, r1
 801680a:	1c51      	adds	r1, r2, #1
 801680c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016810:	0952      	lsrs	r2, r2, #5
 8016812:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016816:	4313      	orrs	r3, r2
 8016818:	803b      	strh	r3, [r7, #0]
 801681a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801681c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801681e:	441a      	add	r2, r3
 8016820:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016822:	9231      	str	r2, [sp, #196]	; 0xc4
 8016824:	441d      	add	r5, r3
 8016826:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016828:	3b01      	subs	r3, #1
 801682a:	3702      	adds	r7, #2
 801682c:	931a      	str	r3, [sp, #104]	; 0x68
 801682e:	e694      	b.n	801655a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016830:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016832:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016834:	441c      	add	r4, r3
 8016836:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016838:	9431      	str	r4, [sp, #196]	; 0xc4
 801683a:	441d      	add	r5, r3
 801683c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801683e:	3b01      	subs	r3, #1
 8016840:	9309      	str	r3, [sp, #36]	; 0x24
 8016842:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016844:	3302      	adds	r3, #2
 8016846:	930c      	str	r3, [sp, #48]	; 0x30
 8016848:	e666      	b.n	8016518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801684a:	d024      	beq.n	8016896 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 801684c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801684e:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8016850:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016852:	3b01      	subs	r3, #1
 8016854:	fb00 4003 	mla	r0, r0, r3, r4
 8016858:	1400      	asrs	r0, r0, #16
 801685a:	f53f ae7b 	bmi.w	8016554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801685e:	3901      	subs	r1, #1
 8016860:	4288      	cmp	r0, r1
 8016862:	f6bf ae77 	bge.w	8016554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016866:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8016868:	fb01 5303 	mla	r3, r1, r3, r5
 801686c:	141b      	asrs	r3, r3, #16
 801686e:	f53f ae71 	bmi.w	8016554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016872:	3a01      	subs	r2, #1
 8016874:	4293      	cmp	r3, r2
 8016876:	f6bf ae6d 	bge.w	8016554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801687a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801687e:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8016882:	f1bb 0f00 	cmp.w	fp, #0
 8016886:	dc70      	bgt.n	801696a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016888:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801688a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801688e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016890:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016894:	930c      	str	r3, [sp, #48]	; 0x30
 8016896:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016898:	2b00      	cmp	r3, #0
 801689a:	f340 81be 	ble.w	8016c1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801689e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80168a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80168a6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80168aa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80168ac:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80168b0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80168b4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80168b8:	eef0 6a48 	vmov.f32	s13, s16
 80168bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80168c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80168c4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80168c8:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80168cc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80168d0:	eef0 6a68 	vmov.f32	s13, s17
 80168d4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80168d8:	ee18 2a10 	vmov	r2, s16
 80168dc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80168e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80168e4:	ee18 2a90 	vmov	r2, s17
 80168e8:	9333      	str	r3, [sp, #204]	; 0xcc
 80168ea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80168ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80168f0:	9334      	str	r3, [sp, #208]	; 0xd0
 80168f2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80168f4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80168f6:	3b01      	subs	r3, #1
 80168f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80168fc:	9319      	str	r3, [sp, #100]	; 0x64
 80168fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016900:	bf08      	it	eq
 8016902:	4613      	moveq	r3, r2
 8016904:	ee16 5a90 	vmov	r5, s13
 8016908:	9309      	str	r3, [sp, #36]	; 0x24
 801690a:	eef0 8a67 	vmov.f32	s17, s15
 801690e:	eeb0 8a47 	vmov.f32	s16, s14
 8016912:	e5f3      	b.n	80164fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016914:	2900      	cmp	r1, #0
 8016916:	f43f ae66 	beq.w	80165e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801691a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801691e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016922:	900a      	str	r0, [sp, #40]	; 0x28
 8016924:	0e00      	lsrs	r0, r0, #24
 8016926:	9013      	str	r0, [sp, #76]	; 0x4c
 8016928:	e65d      	b.n	80165e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801692a:	f113 0801 	adds.w	r8, r3, #1
 801692e:	f53f af74 	bmi.w	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016932:	4540      	cmp	r0, r8
 8016934:	f6ff af71 	blt.w	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016938:	f11c 0801 	adds.w	r8, ip, #1
 801693c:	f53f af6d 	bmi.w	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016940:	45c6      	cmp	lr, r8
 8016942:	f6ff af6a 	blt.w	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016946:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016948:	9302      	str	r3, [sp, #8]
 801694a:	b200      	sxth	r0, r0
 801694c:	fa0f f38e 	sxth.w	r3, lr
 8016950:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016954:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016958:	9301      	str	r3, [sp, #4]
 801695a:	9000      	str	r0, [sp, #0]
 801695c:	4633      	mov	r3, r6
 801695e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016960:	981d      	ldr	r0, [sp, #116]	; 0x74
 8016962:	4639      	mov	r1, r7
 8016964:	f7ff fc32 	bl	80161cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016968:	e757      	b.n	801681a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801696a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801696c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801696e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016972:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016974:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016978:	1427      	asrs	r7, r4, #16
 801697a:	142b      	asrs	r3, r5, #16
 801697c:	fb01 7303 	mla	r3, r1, r3, r7
 8016980:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016982:	18e7      	adds	r7, r4, r3
 8016984:	5ce3      	ldrb	r3, [r4, r3]
 8016986:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801698a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801698e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016992:	2a00      	cmp	r2, #0
 8016994:	f000 8137 	beq.w	8016c06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8016998:	f897 e001 	ldrb.w	lr, [r7, #1]
 801699c:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80169a0:	9410      	str	r4, [sp, #64]	; 0x40
 80169a2:	0e24      	lsrs	r4, r4, #24
 80169a4:	9417      	str	r4, [sp, #92]	; 0x5c
 80169a6:	b170      	cbz	r0, 80169c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80169a8:	eb07 0e01 	add.w	lr, r7, r1
 80169ac:	5c79      	ldrb	r1, [r7, r1]
 80169ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80169b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80169b4:	0e09      	lsrs	r1, r1, #24
 80169b6:	9114      	str	r1, [sp, #80]	; 0x50
 80169b8:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80169bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80169c0:	9111      	str	r1, [sp, #68]	; 0x44
 80169c2:	0e09      	lsrs	r1, r1, #24
 80169c4:	9118      	str	r1, [sp, #96]	; 0x60
 80169c6:	b292      	uxth	r2, r2
 80169c8:	b280      	uxth	r0, r0
 80169ca:	fb02 f800 	mul.w	r8, r2, r0
 80169ce:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80169d2:	0112      	lsls	r2, r2, #4
 80169d4:	eba2 0e08 	sub.w	lr, r2, r8
 80169d8:	b280      	uxth	r0, r0
 80169da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80169de:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80169e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80169e2:	fa1f fe8e 	uxth.w	lr, lr
 80169e6:	1a12      	subs	r2, r2, r0
 80169e8:	b292      	uxth	r2, r2
 80169ea:	fb0e f101 	mul.w	r1, lr, r1
 80169ee:	fb02 110c 	mla	r1, r2, ip, r1
 80169f2:	fb00 1104 	mla	r1, r0, r4, r1
 80169f6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80169f8:	fb08 1104 	mla	r1, r8, r4, r1
 80169fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016a00:	2900      	cmp	r1, #0
 8016a02:	f000 80f5 	beq.w	8016bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8016a06:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016a0a:	d019      	beq.n	8016a40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8016a0c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016a10:	fb0c fa0a 	mul.w	sl, ip, sl
 8016a14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a18:	fb0c fc03 	mul.w	ip, ip, r3
 8016a1c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016a20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a24:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016a28:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016a2c:	4453      	add	r3, sl
 8016a2e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016a32:	0a1b      	lsrs	r3, r3, #8
 8016a34:	0a3f      	lsrs	r7, r7, #8
 8016a36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a3a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016a3e:	433b      	orrs	r3, r7
 8016a40:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016a42:	2cff      	cmp	r4, #255	; 0xff
 8016a44:	d020      	beq.n	8016a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8016a46:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a48:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016a4c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016a4e:	4367      	muls	r7, r4
 8016a50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a52:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a56:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016a58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016a5c:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a60:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016a64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a68:	44bc      	add	ip, r7
 8016a6a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016a6e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016a72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a82:	ea4c 040a 	orr.w	r4, ip, sl
 8016a86:	9410      	str	r4, [sp, #64]	; 0x40
 8016a88:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016a8a:	2cff      	cmp	r4, #255	; 0xff
 8016a8c:	d020      	beq.n	8016ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8016a8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a90:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016a94:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016a96:	4367      	muls	r7, r4
 8016a98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a9a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016aa0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016aa4:	fb04 fa0a 	mul.w	sl, r4, sl
 8016aa8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016aac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ab0:	44bc      	add	ip, r7
 8016ab2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016ab6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016aba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016abe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ac2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ac6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016aca:	ea4c 040a 	orr.w	r4, ip, sl
 8016ace:	940b      	str	r4, [sp, #44]	; 0x2c
 8016ad0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016ad2:	2cff      	cmp	r4, #255	; 0xff
 8016ad4:	d020      	beq.n	8016b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016ad6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016ad8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016adc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016ade:	4367      	muls	r7, r4
 8016ae0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016ae2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016ae6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016ae8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016aec:	fb04 fa0a 	mul.w	sl, r4, sl
 8016af0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016af4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016af8:	44bc      	add	ip, r7
 8016afa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016afe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016b02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016b0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016b12:	ea4c 040a 	orr.w	r4, ip, sl
 8016b16:	9411      	str	r4, [sp, #68]	; 0x44
 8016b18:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b1a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016b1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b20:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016b24:	fb0e f707 	mul.w	r7, lr, r7
 8016b28:	fb02 770c 	mla	r7, r2, ip, r7
 8016b2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016b32:	fb00 770c 	mla	r7, r0, ip, r7
 8016b36:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b3c:	fb08 770c 	mla	r7, r8, ip, r7
 8016b40:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016b44:	fb0e fe0c 	mul.w	lr, lr, ip
 8016b48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b4c:	fb02 e303 	mla	r3, r2, r3, lr
 8016b50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016b52:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016b54:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016b58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016b5a:	fb00 330a 	mla	r3, r0, sl, r3
 8016b5e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016b62:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016b66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b68:	f8b9 0000 	ldrh.w	r0, [r9]
 8016b6c:	434b      	muls	r3, r1
 8016b6e:	0a3f      	lsrs	r7, r7, #8
 8016b70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b74:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016b78:	1c59      	adds	r1, r3, #1
 8016b7a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016b7e:	ea47 070c 	orr.w	r7, r7, ip
 8016b82:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016b86:	1202      	asrs	r2, r0, #8
 8016b88:	0c3b      	lsrs	r3, r7, #16
 8016b8a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016b8e:	b2c9      	uxtb	r1, r1
 8016b90:	fb13 f304 	smulbb	r3, r3, r4
 8016b94:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016b98:	fb02 3201 	mla	r2, r2, r1, r3
 8016b9c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016ba0:	10c3      	asrs	r3, r0, #3
 8016ba2:	b2ff      	uxtb	r7, r7
 8016ba4:	00c0      	lsls	r0, r0, #3
 8016ba6:	b292      	uxth	r2, r2
 8016ba8:	fb1c fc04 	smulbb	ip, ip, r4
 8016bac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016bb0:	b2c0      	uxtb	r0, r0
 8016bb2:	fb17 f704 	smulbb	r7, r7, r4
 8016bb6:	fb03 c301 	mla	r3, r3, r1, ip
 8016bba:	fb00 7001 	mla	r0, r0, r1, r7
 8016bbe:	f102 0c01 	add.w	ip, r2, #1
 8016bc2:	b280      	uxth	r0, r0
 8016bc4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016bc8:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016bcc:	1c42      	adds	r2, r0, #1
 8016bce:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016bd2:	b29b      	uxth	r3, r3
 8016bd4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016bd8:	ea42 020c 	orr.w	r2, r2, ip
 8016bdc:	f103 0c01 	add.w	ip, r3, #1
 8016be0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016be4:	095b      	lsrs	r3, r3, #5
 8016be6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016bea:	431a      	orrs	r2, r3
 8016bec:	f8a9 2000 	strh.w	r2, [r9]
 8016bf0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016bf2:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016bf4:	441a      	add	r2, r3
 8016bf6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016bf8:	9231      	str	r2, [sp, #196]	; 0xc4
 8016bfa:	f109 0902 	add.w	r9, r9, #2
 8016bfe:	441d      	add	r5, r3
 8016c00:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016c04:	e63d      	b.n	8016882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016c06:	2800      	cmp	r0, #0
 8016c08:	f43f aedd 	beq.w	80169c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016c0c:	5c79      	ldrb	r1, [r7, r1]
 8016c0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016c12:	910b      	str	r1, [sp, #44]	; 0x2c
 8016c14:	0e09      	lsrs	r1, r1, #24
 8016c16:	9114      	str	r1, [sp, #80]	; 0x50
 8016c18:	e6d5      	b.n	80169c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016c1a:	b01f      	add	sp, #124	; 0x7c
 8016c1c:	ecbd 8b08 	vpop	{d8-d11}
 8016c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c28:	880e      	ldrh	r6, [r1, #0]
 8016c2a:	b085      	sub	sp, #20
 8016c2c:	ea4f 2826 	mov.w	r8, r6, asr #8
 8016c30:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016c34:	4691      	mov	r9, r2
 8016c36:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016c3a:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8016c3e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016c42:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016c46:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016c4a:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016c4e:	9200      	str	r2, [sp, #0]
 8016c50:	00f6      	lsls	r6, r6, #3
 8016c52:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016c56:	9201      	str	r2, [sp, #4]
 8016c58:	2c00      	cmp	r4, #0
 8016c5a:	b2f2      	uxtb	r2, r6
 8016c5c:	fb04 560c 	mla	r6, r4, ip, r5
 8016c60:	9202      	str	r2, [sp, #8]
 8016c62:	eb09 0806 	add.w	r8, r9, r6
 8016c66:	db3f      	blt.n	8016ce8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016c68:	45a6      	cmp	lr, r4
 8016c6a:	dd3d      	ble.n	8016ce8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016c6c:	2d00      	cmp	r5, #0
 8016c6e:	db39      	blt.n	8016ce4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016c70:	45ac      	cmp	ip, r5
 8016c72:	dd37      	ble.n	8016ce4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016c74:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016c78:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016c7c:	1c6e      	adds	r6, r5, #1
 8016c7e:	d436      	bmi.n	8016cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016c80:	45b4      	cmp	ip, r6
 8016c82:	dd34      	ble.n	8016cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016c84:	b3a8      	cbz	r0, 8016cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016c86:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016c8a:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016c8e:	3401      	adds	r4, #1
 8016c90:	d433      	bmi.n	8016cfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016c92:	45a6      	cmp	lr, r4
 8016c94:	dd31      	ble.n	8016cfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016c96:	b39f      	cbz	r7, 8016d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016c98:	2d00      	cmp	r5, #0
 8016c9a:	eb08 0e0c 	add.w	lr, r8, ip
 8016c9e:	db2a      	blt.n	8016cf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016ca0:	45ac      	cmp	ip, r5
 8016ca2:	dd28      	ble.n	8016cf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016ca4:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016ca8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016cac:	3501      	adds	r5, #1
 8016cae:	d42a      	bmi.n	8016d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016cb0:	45ac      	cmp	ip, r5
 8016cb2:	dd28      	ble.n	8016d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016cb4:	b348      	cbz	r0, 8016d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016cb6:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016cba:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016cbe:	280f      	cmp	r0, #15
 8016cc0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016cc4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016cc8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016ccc:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016cd0:	d801      	bhi.n	8016cd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8016cd2:	2f0f      	cmp	r7, #15
 8016cd4:	d91b      	bls.n	8016d0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016cd6:	4b7d      	ldr	r3, [pc, #500]	; (8016ecc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016cd8:	4a7d      	ldr	r2, [pc, #500]	; (8016ed0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016cda:	487e      	ldr	r0, [pc, #504]	; (8016ed4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016cdc:	f240 11f9 	movw	r1, #505	; 0x1f9
 8016ce0:	f004 ffd8 	bl	801bc94 <__assert_func>
 8016ce4:	2200      	movs	r2, #0
 8016ce6:	e7c9      	b.n	8016c7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016ce8:	2600      	movs	r6, #0
 8016cea:	4632      	mov	r2, r6
 8016cec:	e7cf      	b.n	8016c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016cee:	2600      	movs	r6, #0
 8016cf0:	e7cd      	b.n	8016c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016cf2:	4606      	mov	r6, r0
 8016cf4:	e7cb      	b.n	8016c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016cf6:	2400      	movs	r4, #0
 8016cf8:	e7d8      	b.n	8016cac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016cfa:	2300      	movs	r3, #0
 8016cfc:	461c      	mov	r4, r3
 8016cfe:	e7de      	b.n	8016cbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d00:	463b      	mov	r3, r7
 8016d02:	463c      	mov	r4, r7
 8016d04:	e7db      	b.n	8016cbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d06:	2300      	movs	r3, #0
 8016d08:	e7d9      	b.n	8016cbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d0a:	4603      	mov	r3, r0
 8016d0c:	e7d7      	b.n	8016cbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d0e:	b280      	uxth	r0, r0
 8016d10:	b2bf      	uxth	r7, r7
 8016d12:	fb00 fe07 	mul.w	lr, r0, r7
 8016d16:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016d1a:	0100      	lsls	r0, r0, #4
 8016d1c:	eba0 0c0e 	sub.w	ip, r0, lr
 8016d20:	b2bf      	uxth	r7, r7
 8016d22:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016d26:	fa1f fc8c 	uxth.w	ip, ip
 8016d2a:	1bed      	subs	r5, r5, r7
 8016d2c:	b2ad      	uxth	r5, r5
 8016d2e:	fb0c f00a 	mul.w	r0, ip, sl
 8016d32:	fb05 000b 	mla	r0, r5, fp, r0
 8016d36:	fb07 0009 	mla	r0, r7, r9, r0
 8016d3a:	fb0e 0008 	mla	r0, lr, r8, r0
 8016d3e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016d42:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016d46:	9003      	str	r0, [sp, #12]
 8016d48:	d018      	beq.n	8016d7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016d4a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016d4e:	fb0b f000 	mul.w	r0, fp, r0
 8016d52:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016d56:	fb0b fb02 	mul.w	fp, fp, r2
 8016d5a:	0a02      	lsrs	r2, r0, #8
 8016d5c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016d60:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016d64:	4402      	add	r2, r0
 8016d66:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016d6a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016d6e:	0a12      	lsrs	r2, r2, #8
 8016d70:	0a00      	lsrs	r0, r0, #8
 8016d72:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016d76:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016d7a:	4302      	orrs	r2, r0
 8016d7c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016d80:	d019      	beq.n	8016db6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8016d82:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016d86:	fb0a fb0b 	mul.w	fp, sl, fp
 8016d8a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016d8e:	fb0a fa06 	mul.w	sl, sl, r6
 8016d92:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016d96:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016d9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016d9e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016da2:	445e      	add	r6, fp
 8016da4:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016da8:	0a36      	lsrs	r6, r6, #8
 8016daa:	0a00      	lsrs	r0, r0, #8
 8016dac:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016db0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016db4:	4306      	orrs	r6, r0
 8016db6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016dba:	d019      	beq.n	8016df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016dbc:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016dc0:	fb09 fa0a 	mul.w	sl, r9, sl
 8016dc4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016dc8:	fb09 f904 	mul.w	r9, r9, r4
 8016dcc:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016dd0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016dd4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016dd8:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016ddc:	4454      	add	r4, sl
 8016dde:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016de2:	0a24      	lsrs	r4, r4, #8
 8016de4:	0a00      	lsrs	r0, r0, #8
 8016de6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016dea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016dee:	4304      	orrs	r4, r0
 8016df0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016df4:	d019      	beq.n	8016e2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016df6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016dfa:	fb08 f909 	mul.w	r9, r8, r9
 8016dfe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e02:	fb08 f803 	mul.w	r8, r8, r3
 8016e06:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016e0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e0e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016e12:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016e16:	444b      	add	r3, r9
 8016e18:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016e1c:	0a1b      	lsrs	r3, r3, #8
 8016e1e:	0a00      	lsrs	r0, r0, #8
 8016e20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e28:	4303      	orrs	r3, r0
 8016e2a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016e2e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016e32:	fb0c f808 	mul.w	r8, ip, r8
 8016e36:	fb05 8800 	mla	r8, r5, r0, r8
 8016e3a:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016e3e:	fb07 8800 	mla	r8, r7, r0, r8
 8016e42:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016e46:	fb0e 8000 	mla	r0, lr, r0, r8
 8016e4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016e4e:	fb0c f606 	mul.w	r6, ip, r6
 8016e52:	0a00      	lsrs	r0, r0, #8
 8016e54:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016e58:	fb05 6202 	mla	r2, r5, r2, r6
 8016e5c:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016e60:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016e64:	fb07 2700 	mla	r7, r7, r0, r2
 8016e68:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016e6c:	9b03      	ldr	r3, [sp, #12]
 8016e6e:	9d00      	ldr	r5, [sp, #0]
 8016e70:	9a02      	ldr	r2, [sp, #8]
 8016e72:	fb0e 7000 	mla	r0, lr, r0, r7
 8016e76:	43dc      	mvns	r4, r3
 8016e78:	9b01      	ldr	r3, [sp, #4]
 8016e7a:	b2e4      	uxtb	r4, r4
 8016e7c:	0a00      	lsrs	r0, r0, #8
 8016e7e:	4363      	muls	r3, r4
 8016e80:	4365      	muls	r5, r4
 8016e82:	4362      	muls	r2, r4
 8016e84:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e88:	ea48 0000 	orr.w	r0, r8, r0
 8016e8c:	4614      	mov	r4, r2
 8016e8e:	1c5e      	adds	r6, r3, #1
 8016e90:	1c6a      	adds	r2, r5, #1
 8016e92:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016e96:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016e9a:	0a03      	lsrs	r3, r0, #8
 8016e9c:	0c02      	lsrs	r2, r0, #16
 8016e9e:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016ea2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016ea6:	00db      	lsls	r3, r3, #3
 8016ea8:	0212      	lsls	r2, r2, #8
 8016eaa:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016eae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016eb2:	4313      	orrs	r3, r2
 8016eb4:	1c62      	adds	r2, r4, #1
 8016eb6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016eba:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016ebe:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016ec2:	4318      	orrs	r0, r3
 8016ec4:	8008      	strh	r0, [r1, #0]
 8016ec6:	b005      	add	sp, #20
 8016ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ecc:	0801fc17 	.word	0x0801fc17
 8016ed0:	08020146 	.word	0x08020146
 8016ed4:	0801fbe4 	.word	0x0801fbe4

08016ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016edc:	ed2d 8b08 	vpush	{d8-d11}
 8016ee0:	b09b      	sub	sp, #108	; 0x6c
 8016ee2:	eeb0 aa40 	vmov.f32	s20, s0
 8016ee6:	9218      	str	r2, [sp, #96]	; 0x60
 8016ee8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016eea:	9116      	str	r1, [sp, #88]	; 0x58
 8016eec:	9307      	str	r3, [sp, #28]
 8016eee:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016ef2:	9019      	str	r0, [sp, #100]	; 0x64
 8016ef4:	6850      	ldr	r0, [r2, #4]
 8016ef6:	6812      	ldr	r2, [r2, #0]
 8016ef8:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016efa:	fb00 1303 	mla	r3, r0, r3, r1
 8016efe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f02:	930a      	str	r3, [sp, #40]	; 0x28
 8016f04:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f06:	681b      	ldr	r3, [r3, #0]
 8016f08:	930f      	str	r3, [sp, #60]	; 0x3c
 8016f0a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f0c:	685e      	ldr	r6, [r3, #4]
 8016f0e:	eef0 9a60 	vmov.f32	s19, s1
 8016f12:	eeb0 9a41 	vmov.f32	s18, s2
 8016f16:	eeb0 8a62 	vmov.f32	s16, s5
 8016f1a:	eef0 8a43 	vmov.f32	s17, s6
 8016f1e:	eef0 ba44 	vmov.f32	s23, s8
 8016f22:	eeb0 ba64 	vmov.f32	s22, s9
 8016f26:	eef0 aa45 	vmov.f32	s21, s10
 8016f2a:	3604      	adds	r6, #4
 8016f2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016f2e:	2b00      	cmp	r3, #0
 8016f30:	dc03      	bgt.n	8016f3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016f32:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016f34:	2b00      	cmp	r3, #0
 8016f36:	f340 8373 	ble.w	8017620 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016f3a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016f40:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016f44:	1e48      	subs	r0, r1, #1
 8016f46:	1e57      	subs	r7, r2, #1
 8016f48:	9b07      	ldr	r3, [sp, #28]
 8016f4a:	2b00      	cmp	r3, #0
 8016f4c:	f340 8190 	ble.w	8017270 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016f50:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016f52:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016f56:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016f5a:	d406      	bmi.n	8016f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016f5c:	4584      	cmp	ip, r0
 8016f5e:	da04      	bge.n	8016f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016f60:	2b00      	cmp	r3, #0
 8016f62:	db02      	blt.n	8016f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016f64:	42bb      	cmp	r3, r7
 8016f66:	f2c0 8184 	blt.w	8017272 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016f6a:	f11c 0c01 	adds.w	ip, ip, #1
 8016f6e:	f100 8172 	bmi.w	8017256 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016f72:	4561      	cmp	r1, ip
 8016f74:	f2c0 816f 	blt.w	8017256 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016f78:	3301      	adds	r3, #1
 8016f7a:	f100 816c 	bmi.w	8017256 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016f7e:	429a      	cmp	r2, r3
 8016f80:	f2c0 8169 	blt.w	8017256 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016f84:	9b07      	ldr	r3, [sp, #28]
 8016f86:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016f88:	9317      	str	r3, [sp, #92]	; 0x5c
 8016f8a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016f8c:	2b00      	cmp	r3, #0
 8016f8e:	f340 818e 	ble.w	80172ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016f92:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016f94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016f98:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f9a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016f9e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016fa0:	141b      	asrs	r3, r3, #16
 8016fa2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016fa6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016faa:	f100 81d1 	bmi.w	8017350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016fae:	f101 38ff 	add.w	r8, r1, #4294967295
 8016fb2:	4543      	cmp	r3, r8
 8016fb4:	f280 81cc 	bge.w	8017350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016fb8:	f1bc 0f00 	cmp.w	ip, #0
 8016fbc:	f2c0 81c8 	blt.w	8017350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016fc0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016fc4:	45c4      	cmp	ip, r8
 8016fc6:	f280 81c3 	bge.w	8017350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016fca:	b209      	sxth	r1, r1
 8016fcc:	fb0c 3301 	mla	r3, ip, r1, r3
 8016fd0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016fd2:	eb04 0803 	add.w	r8, r4, r3
 8016fd6:	5ce3      	ldrb	r3, [r4, r3]
 8016fd8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016fdc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016fe0:	2a00      	cmp	r2, #0
 8016fe2:	f000 81aa 	beq.w	801733a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8016fe6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016fea:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016fee:	940b      	str	r4, [sp, #44]	; 0x2c
 8016ff0:	0e24      	lsrs	r4, r4, #24
 8016ff2:	9412      	str	r4, [sp, #72]	; 0x48
 8016ff4:	b178      	cbz	r0, 8017016 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016ff6:	eb08 0c01 	add.w	ip, r8, r1
 8016ffa:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016ffe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017002:	9108      	str	r1, [sp, #32]
 8017004:	0e09      	lsrs	r1, r1, #24
 8017006:	9110      	str	r1, [sp, #64]	; 0x40
 8017008:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801700c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017010:	910c      	str	r1, [sp, #48]	; 0x30
 8017012:	0e09      	lsrs	r1, r1, #24
 8017014:	9113      	str	r1, [sp, #76]	; 0x4c
 8017016:	b292      	uxth	r2, r2
 8017018:	b280      	uxth	r0, r0
 801701a:	fb02 f900 	mul.w	r9, r2, r0
 801701e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017022:	0112      	lsls	r2, r2, #4
 8017024:	eba2 0809 	sub.w	r8, r2, r9
 8017028:	b280      	uxth	r0, r0
 801702a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801702e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017030:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017032:	fa1f f888 	uxth.w	r8, r8
 8017036:	1a12      	subs	r2, r2, r0
 8017038:	b292      	uxth	r2, r2
 801703a:	fb08 f101 	mul.w	r1, r8, r1
 801703e:	fb02 110e 	mla	r1, r2, lr, r1
 8017042:	fb00 1104 	mla	r1, r0, r4, r1
 8017046:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017048:	fb09 1104 	mla	r1, r9, r4, r1
 801704c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017050:	2900      	cmp	r1, #0
 8017052:	f000 80f5 	beq.w	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017056:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801705a:	d01b      	beq.n	8017094 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801705c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017060:	fb0e fa0a 	mul.w	sl, lr, sl
 8017064:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017068:	fb0e fe03 	mul.w	lr, lr, r3
 801706c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017070:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017074:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017078:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801707c:	4453      	add	r3, sl
 801707e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017082:	0a1b      	lsrs	r3, r3, #8
 8017084:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017088:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801708c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017090:	ea43 030c 	orr.w	r3, r3, ip
 8017094:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017096:	2cff      	cmp	r4, #255	; 0xff
 8017098:	d021      	beq.n	80170de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801709a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801709c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80170a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80170a2:	fb04 fb0b 	mul.w	fp, r4, fp
 80170a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80170a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80170ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80170ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80170b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80170b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80170ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80170be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80170c2:	44de      	add	lr, fp
 80170c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80170c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80170cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80170d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80170d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80170d8:	ea4e 040a 	orr.w	r4, lr, sl
 80170dc:	940b      	str	r4, [sp, #44]	; 0x2c
 80170de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80170e0:	2cff      	cmp	r4, #255	; 0xff
 80170e2:	d021      	beq.n	8017128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80170e4:	9c08      	ldr	r4, [sp, #32]
 80170e6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80170ea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80170ec:	fb04 fb0b 	mul.w	fp, r4, fp
 80170f0:	9c08      	ldr	r4, [sp, #32]
 80170f2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80170f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80170f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80170fc:	fb04 fa0a 	mul.w	sl, r4, sl
 8017100:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017104:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017108:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801710c:	44de      	add	lr, fp
 801710e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017112:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017116:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801711a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801711e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017122:	ea4e 040a 	orr.w	r4, lr, sl
 8017126:	9408      	str	r4, [sp, #32]
 8017128:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801712a:	2cff      	cmp	r4, #255	; 0xff
 801712c:	d021      	beq.n	8017172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801712e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017130:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017134:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017136:	fb04 fb0b 	mul.w	fp, r4, fp
 801713a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801713c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017140:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017142:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017146:	fb04 fa0a 	mul.w	sl, r4, sl
 801714a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801714e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017152:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017156:	44de      	add	lr, fp
 8017158:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801715c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017160:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017164:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017168:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801716c:	ea4e 040a 	orr.w	r4, lr, sl
 8017170:	940c      	str	r4, [sp, #48]	; 0x30
 8017172:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017174:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017178:	9c08      	ldr	r4, [sp, #32]
 801717a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801717e:	fb08 fc0c 	mul.w	ip, r8, ip
 8017182:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017186:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801718a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801718c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017190:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017194:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017196:	fb09 cc0e 	mla	ip, r9, lr, ip
 801719a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801719e:	fb08 f80e 	mul.w	r8, r8, lr
 80171a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171a6:	fb02 8303 	mla	r3, r2, r3, r8
 80171aa:	9a08      	ldr	r2, [sp, #32]
 80171ac:	f8b7 8000 	ldrh.w	r8, [r7]
 80171b0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80171b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80171b6:	fb00 330a 	mla	r3, r0, sl, r3
 80171ba:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80171be:	fb09 3900 	mla	r9, r9, r0, r3
 80171c2:	43c9      	mvns	r1, r1
 80171c4:	ea4f 2228 	mov.w	r2, r8, asr #8
 80171c8:	fa5f fe81 	uxtb.w	lr, r1
 80171cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80171d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80171d4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80171d8:	fb02 f20e 	mul.w	r2, r2, lr
 80171dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80171e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80171e4:	ea4c 0c09 	orr.w	ip, ip, r9
 80171e8:	1c53      	adds	r3, r2, #1
 80171ea:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80171ee:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80171f2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80171f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80171fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80171fe:	4a63      	ldr	r2, [pc, #396]	; (801738c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8017200:	fb00 f00e 	mul.w	r0, r0, lr
 8017204:	b2db      	uxtb	r3, r3
 8017206:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801720a:	1c43      	adds	r3, r0, #1
 801720c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017210:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017214:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8017218:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801721c:	b2c9      	uxtb	r1, r1
 801721e:	00db      	lsls	r3, r3, #3
 8017220:	fb01 f10e 	mul.w	r1, r1, lr
 8017224:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017228:	4313      	orrs	r3, r2
 801722a:	1c4a      	adds	r2, r1, #1
 801722c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017230:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017234:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017238:	ea4c 0c03 	orr.w	ip, ip, r3
 801723c:	f8a7 c000 	strh.w	ip, [r7]
 8017240:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017242:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017244:	441a      	add	r2, r3
 8017246:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017248:	922d      	str	r2, [sp, #180]	; 0xb4
 801724a:	441d      	add	r5, r3
 801724c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801724e:	3b01      	subs	r3, #1
 8017250:	3702      	adds	r7, #2
 8017252:	9317      	str	r3, [sp, #92]	; 0x5c
 8017254:	e699      	b.n	8016f8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017256:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017258:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801725a:	441c      	add	r4, r3
 801725c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801725e:	942d      	str	r4, [sp, #180]	; 0xb4
 8017260:	441d      	add	r5, r3
 8017262:	9b07      	ldr	r3, [sp, #28]
 8017264:	3b01      	subs	r3, #1
 8017266:	9307      	str	r3, [sp, #28]
 8017268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801726a:	3302      	adds	r3, #2
 801726c:	930a      	str	r3, [sp, #40]	; 0x28
 801726e:	e66b      	b.n	8016f48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017270:	d024      	beq.n	80172bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8017272:	9b07      	ldr	r3, [sp, #28]
 8017274:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8017276:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017278:	3b01      	subs	r3, #1
 801727a:	fb00 4003 	mla	r0, r0, r3, r4
 801727e:	1400      	asrs	r0, r0, #16
 8017280:	f53f ae80 	bmi.w	8016f84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017284:	3901      	subs	r1, #1
 8017286:	4288      	cmp	r0, r1
 8017288:	f6bf ae7c 	bge.w	8016f84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801728c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801728e:	fb01 5303 	mla	r3, r1, r3, r5
 8017292:	141b      	asrs	r3, r3, #16
 8017294:	f53f ae76 	bmi.w	8016f84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017298:	3a01      	subs	r2, #1
 801729a:	4293      	cmp	r3, r2
 801729c:	f6bf ae72 	bge.w	8016f84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80172a0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80172a4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80172a8:	f1bb 0f00 	cmp.w	fp, #0
 80172ac:	dc70      	bgt.n	8017390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80172ae:	9b07      	ldr	r3, [sp, #28]
 80172b0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80172b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172b6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80172ba:	930a      	str	r3, [sp, #40]	; 0x28
 80172bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80172be:	2b00      	cmp	r3, #0
 80172c0:	f340 81ae 	ble.w	8017620 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80172c4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80172c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80172cc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80172d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80172d2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80172d6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80172da:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80172de:	eef0 6a48 	vmov.f32	s13, s16
 80172e2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80172e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172ea:	ee37 8a48 	vsub.f32	s16, s14, s16
 80172ee:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80172f2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80172f6:	eef0 6a68 	vmov.f32	s13, s17
 80172fa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80172fe:	ee18 2a10 	vmov	r2, s16
 8017302:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017306:	fb92 f3f3 	sdiv	r3, r2, r3
 801730a:	ee18 2a90 	vmov	r2, s17
 801730e:	932f      	str	r3, [sp, #188]	; 0xbc
 8017310:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017312:	fb92 f3f3 	sdiv	r3, r2, r3
 8017316:	9330      	str	r3, [sp, #192]	; 0xc0
 8017318:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801731a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801731c:	3b01      	subs	r3, #1
 801731e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017322:	9316      	str	r3, [sp, #88]	; 0x58
 8017324:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017326:	bf08      	it	eq
 8017328:	4613      	moveq	r3, r2
 801732a:	ee16 5a90 	vmov	r5, s13
 801732e:	9307      	str	r3, [sp, #28]
 8017330:	eef0 8a67 	vmov.f32	s17, s15
 8017334:	eeb0 8a47 	vmov.f32	s16, s14
 8017338:	e5f8      	b.n	8016f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801733a:	2800      	cmp	r0, #0
 801733c:	f43f ae6b 	beq.w	8017016 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017340:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017344:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017348:	9108      	str	r1, [sp, #32]
 801734a:	0e09      	lsrs	r1, r1, #24
 801734c:	9110      	str	r1, [sp, #64]	; 0x40
 801734e:	e662      	b.n	8017016 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017350:	f113 0801 	adds.w	r8, r3, #1
 8017354:	f53f af74 	bmi.w	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017358:	4541      	cmp	r1, r8
 801735a:	f6ff af71 	blt.w	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801735e:	f11c 0801 	adds.w	r8, ip, #1
 8017362:	f53f af6d 	bmi.w	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017366:	45c6      	cmp	lr, r8
 8017368:	f6ff af6a 	blt.w	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801736c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8017370:	b209      	sxth	r1, r1
 8017372:	fa0f f38e 	sxth.w	r3, lr
 8017376:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801737a:	9301      	str	r3, [sp, #4]
 801737c:	9100      	str	r1, [sp, #0]
 801737e:	4633      	mov	r3, r6
 8017380:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017382:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017384:	4639      	mov	r1, r7
 8017386:	f7ff fc4d 	bl	8016c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801738a:	e759      	b.n	8017240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801738c:	fffff800 	.word	0xfffff800
 8017390:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017392:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017394:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017398:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801739a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801739e:	1427      	asrs	r7, r4, #16
 80173a0:	142b      	asrs	r3, r5, #16
 80173a2:	fb01 7303 	mla	r3, r1, r3, r7
 80173a6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80173a8:	18e7      	adds	r7, r4, r3
 80173aa:	5ce3      	ldrb	r3, [r4, r3]
 80173ac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80173b0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80173b4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80173b8:	2a00      	cmp	r2, #0
 80173ba:	f000 8127 	beq.w	801760c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80173be:	f897 e001 	ldrb.w	lr, [r7, #1]
 80173c2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80173c6:	940d      	str	r4, [sp, #52]	; 0x34
 80173c8:	0e24      	lsrs	r4, r4, #24
 80173ca:	9414      	str	r4, [sp, #80]	; 0x50
 80173cc:	b170      	cbz	r0, 80173ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80173ce:	eb07 0e01 	add.w	lr, r7, r1
 80173d2:	5c79      	ldrb	r1, [r7, r1]
 80173d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80173d8:	9109      	str	r1, [sp, #36]	; 0x24
 80173da:	0e09      	lsrs	r1, r1, #24
 80173dc:	9111      	str	r1, [sp, #68]	; 0x44
 80173de:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80173e2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80173e6:	910e      	str	r1, [sp, #56]	; 0x38
 80173e8:	0e09      	lsrs	r1, r1, #24
 80173ea:	9115      	str	r1, [sp, #84]	; 0x54
 80173ec:	b292      	uxth	r2, r2
 80173ee:	b280      	uxth	r0, r0
 80173f0:	fb02 f800 	mul.w	r8, r2, r0
 80173f4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80173f8:	0112      	lsls	r2, r2, #4
 80173fa:	eba2 0e08 	sub.w	lr, r2, r8
 80173fe:	b280      	uxth	r0, r0
 8017400:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017404:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017406:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017408:	fa1f fe8e 	uxth.w	lr, lr
 801740c:	1a09      	subs	r1, r1, r0
 801740e:	b289      	uxth	r1, r1
 8017410:	fb0e f202 	mul.w	r2, lr, r2
 8017414:	fb01 220c 	mla	r2, r1, ip, r2
 8017418:	fb00 2204 	mla	r2, r0, r4, r2
 801741c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801741e:	fb08 2204 	mla	r2, r8, r4, r2
 8017422:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017426:	2a00      	cmp	r2, #0
 8017428:	f000 80e5 	beq.w	80175f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801742c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017430:	d019      	beq.n	8017466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8017432:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017436:	fb0c fa0a 	mul.w	sl, ip, sl
 801743a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801743e:	fb0c fc03 	mul.w	ip, ip, r3
 8017442:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017446:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801744a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801744e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017452:	4453      	add	r3, sl
 8017454:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017458:	0a1b      	lsrs	r3, r3, #8
 801745a:	0a3f      	lsrs	r7, r7, #8
 801745c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017460:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017464:	433b      	orrs	r3, r7
 8017466:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017468:	2cff      	cmp	r4, #255	; 0xff
 801746a:	d020      	beq.n	80174ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 801746c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801746e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017472:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017474:	4367      	muls	r7, r4
 8017476:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017478:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801747c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801747e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017482:	fb04 fa0a 	mul.w	sl, r4, sl
 8017486:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801748a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801748e:	44bc      	add	ip, r7
 8017490:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017494:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017498:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801749c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80174a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80174a8:	ea4c 040a 	orr.w	r4, ip, sl
 80174ac:	940d      	str	r4, [sp, #52]	; 0x34
 80174ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80174b0:	2cff      	cmp	r4, #255	; 0xff
 80174b2:	d020      	beq.n	80174f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80174b4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80174b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80174ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80174bc:	4367      	muls	r7, r4
 80174be:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80174c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80174c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80174c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80174ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80174ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80174d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80174d6:	44bc      	add	ip, r7
 80174d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80174dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80174e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80174e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80174ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80174f0:	ea4c 040a 	orr.w	r4, ip, sl
 80174f4:	9409      	str	r4, [sp, #36]	; 0x24
 80174f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80174f8:	2cff      	cmp	r4, #255	; 0xff
 80174fa:	d020      	beq.n	801753e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80174fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80174fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017502:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017504:	4367      	muls	r7, r4
 8017506:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017508:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801750c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801750e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017512:	fb04 fa0a 	mul.w	sl, r4, sl
 8017516:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801751a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801751e:	44bc      	add	ip, r7
 8017520:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017524:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017528:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801752c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017530:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017534:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017538:	ea4c 040a 	orr.w	r4, ip, sl
 801753c:	940e      	str	r4, [sp, #56]	; 0x38
 801753e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017540:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017544:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017546:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801754a:	fb0e f707 	mul.w	r7, lr, r7
 801754e:	fb01 770c 	mla	r7, r1, ip, r7
 8017552:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017556:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017558:	fb00 770c 	mla	r7, r0, ip, r7
 801755c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017560:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017562:	fb08 770c 	mla	r7, r8, ip, r7
 8017566:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801756a:	fb0e fe0c 	mul.w	lr, lr, ip
 801756e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017572:	fb01 e303 	mla	r3, r1, r3, lr
 8017576:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017578:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801757c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801757e:	fb00 330a 	mla	r3, r0, sl, r3
 8017582:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8017586:	fb08 3c0c 	mla	ip, r8, ip, r3
 801758a:	f8b9 3000 	ldrh.w	r3, [r9]
 801758e:	43d2      	mvns	r2, r2
 8017590:	1218      	asrs	r0, r3, #8
 8017592:	b2d2      	uxtb	r2, r2
 8017594:	10d9      	asrs	r1, r3, #3
 8017596:	0a3f      	lsrs	r7, r7, #8
 8017598:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801759c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80175a0:	00db      	lsls	r3, r3, #3
 80175a2:	4350      	muls	r0, r2
 80175a4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80175a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80175ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80175b0:	b2db      	uxtb	r3, r3
 80175b2:	ea47 070c 	orr.w	r7, r7, ip
 80175b6:	4351      	muls	r1, r2
 80175b8:	4353      	muls	r3, r2
 80175ba:	1c42      	adds	r2, r0, #1
 80175bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80175c0:	0c3a      	lsrs	r2, r7, #16
 80175c2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80175c6:	4a19      	ldr	r2, [pc, #100]	; (801762c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80175c8:	b2c0      	uxtb	r0, r0
 80175ca:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80175ce:	1c4a      	adds	r2, r1, #1
 80175d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80175d4:	0a3a      	lsrs	r2, r7, #8
 80175d6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80175da:	00c9      	lsls	r1, r1, #3
 80175dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80175e0:	4301      	orrs	r1, r0
 80175e2:	1c58      	adds	r0, r3, #1
 80175e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80175e8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80175ec:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80175f0:	4308      	orrs	r0, r1
 80175f2:	f8a9 0000 	strh.w	r0, [r9]
 80175f6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80175f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80175fa:	441a      	add	r2, r3
 80175fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80175fe:	922d      	str	r2, [sp, #180]	; 0xb4
 8017600:	f109 0902 	add.w	r9, r9, #2
 8017604:	441d      	add	r5, r3
 8017606:	f10b 3bff 	add.w	fp, fp, #4294967295
 801760a:	e64d      	b.n	80172a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801760c:	2800      	cmp	r0, #0
 801760e:	f43f aeed 	beq.w	80173ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017612:	5c79      	ldrb	r1, [r7, r1]
 8017614:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017618:	9109      	str	r1, [sp, #36]	; 0x24
 801761a:	0e09      	lsrs	r1, r1, #24
 801761c:	9111      	str	r1, [sp, #68]	; 0x44
 801761e:	e6e5      	b.n	80173ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017620:	b01b      	add	sp, #108	; 0x6c
 8017622:	ecbd 8b08 	vpop	{d8-d11}
 8017626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801762a:	bf00      	nop
 801762c:	fffff800 	.word	0xfffff800

08017630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017634:	b085      	sub	sp, #20
 8017636:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801763a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801763e:	9103      	str	r1, [sp, #12]
 8017640:	fb05 7106 	mla	r1, r5, r6, r7
 8017644:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8017648:	2d00      	cmp	r5, #0
 801764a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801764e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017652:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017656:	9401      	str	r4, [sp, #4]
 8017658:	eb03 0901 	add.w	r9, r3, r1
 801765c:	f2c0 80c0 	blt.w	80177e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017660:	45a8      	cmp	r8, r5
 8017662:	f340 80bd 	ble.w	80177e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017666:	2f00      	cmp	r7, #0
 8017668:	f2c0 80b6 	blt.w	80177d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801766c:	42be      	cmp	r6, r7
 801766e:	f340 80b3 	ble.w	80177d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8017672:	f813 c001 	ldrb.w	ip, [r3, r1]
 8017676:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801767a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801767e:	d019      	beq.n	80176b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8017680:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017684:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017688:	435a      	muls	r2, r3
 801768a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801768e:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017692:	fb0c f403 	mul.w	r4, ip, r3
 8017696:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801769a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801769e:	441a      	add	r2, r3
 80176a0:	f104 0320 	add.w	r3, r4, #32
 80176a4:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80176a8:	0a1b      	lsrs	r3, r3, #8
 80176aa:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80176ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80176b2:	4319      	orrs	r1, r3
 80176b4:	b289      	uxth	r1, r1
 80176b6:	1c7b      	adds	r3, r7, #1
 80176b8:	f100 8097 	bmi.w	80177ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80176bc:	429e      	cmp	r6, r3
 80176be:	f340 8094 	ble.w	80177ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80176c2:	2800      	cmp	r0, #0
 80176c4:	f000 8094 	beq.w	80177f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80176c8:	f899 4001 	ldrb.w	r4, [r9, #1]
 80176cc:	9b01      	ldr	r3, [sp, #4]
 80176ce:	2cff      	cmp	r4, #255	; 0xff
 80176d0:	885b      	ldrh	r3, [r3, #2]
 80176d2:	d01b      	beq.n	801770c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80176d4:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80176d8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80176dc:	fb0a f202 	mul.w	r2, sl, r2
 80176e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80176e4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80176e8:	fb04 fa03 	mul.w	sl, r4, r3
 80176ec:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80176f0:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80176f4:	441a      	add	r2, r3
 80176f6:	f10a 0320 	add.w	r3, sl, #32
 80176fa:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80176fe:	0a1b      	lsrs	r3, r3, #8
 8017700:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017704:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017708:	ea4b 0303 	orr.w	r3, fp, r3
 801770c:	b29b      	uxth	r3, r3
 801770e:	3501      	adds	r5, #1
 8017710:	d474      	bmi.n	80177fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8017712:	45a8      	cmp	r8, r5
 8017714:	dd72      	ble.n	80177fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8017716:	f1be 0f00 	cmp.w	lr, #0
 801771a:	f000 8120 	beq.w	801795e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801771e:	2f00      	cmp	r7, #0
 8017720:	db69      	blt.n	80177f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8017722:	42be      	cmp	r6, r7
 8017724:	dd67      	ble.n	80177f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8017726:	f819 5006 	ldrb.w	r5, [r9, r6]
 801772a:	9a01      	ldr	r2, [sp, #4]
 801772c:	2dff      	cmp	r5, #255	; 0xff
 801772e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017732:	d01c      	beq.n	801776e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8017734:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017738:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801773c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017740:	fb05 fa0b 	mul.w	sl, r5, fp
 8017744:	fb08 f802 	mul.w	r8, r8, r2
 8017748:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801774c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017750:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017754:	4490      	add	r8, r2
 8017756:	f10a 0220 	add.w	r2, sl, #32
 801775a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801775e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017762:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017766:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801776a:	ea4b 0b0a 	orr.w	fp, fp, sl
 801776e:	fa1f fb8b 	uxth.w	fp, fp
 8017772:	3701      	adds	r7, #1
 8017774:	d447      	bmi.n	8017806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017776:	42be      	cmp	r6, r7
 8017778:	dd45      	ble.n	8017806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801777a:	2800      	cmp	r0, #0
 801777c:	d046      	beq.n	801780c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801777e:	3601      	adds	r6, #1
 8017780:	9a01      	ldr	r2, [sp, #4]
 8017782:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017786:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801778a:	2fff      	cmp	r7, #255	; 0xff
 801778c:	d01a      	beq.n	80177c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801778e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017792:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801779a:	fb07 f902 	mul.w	r9, r7, r2
 801779e:	fb08 f806 	mul.w	r8, r8, r6
 80177a2:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80177a6:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80177aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80177ae:	44b0      	add	r8, r6
 80177b0:	f109 0620 	add.w	r6, r9, #32
 80177b4:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80177b8:	0a36      	lsrs	r6, r6, #8
 80177ba:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80177be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80177c2:	4332      	orrs	r2, r6
 80177c4:	b292      	uxth	r2, r2
 80177c6:	280f      	cmp	r0, #15
 80177c8:	d922      	bls.n	8017810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80177ca:	4b69      	ldr	r3, [pc, #420]	; (8017970 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80177cc:	4a69      	ldr	r2, [pc, #420]	; (8017974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80177ce:	486a      	ldr	r0, [pc, #424]	; (8017978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80177d0:	f240 11f9 	movw	r1, #505	; 0x1f9
 80177d4:	f004 fa5e 	bl	801bc94 <__assert_func>
 80177d8:	f04f 0c00 	mov.w	ip, #0
 80177dc:	4661      	mov	r1, ip
 80177de:	e76a      	b.n	80176b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80177e0:	2400      	movs	r4, #0
 80177e2:	46a4      	mov	ip, r4
 80177e4:	4623      	mov	r3, r4
 80177e6:	4621      	mov	r1, r4
 80177e8:	e791      	b.n	801770e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80177ea:	2400      	movs	r4, #0
 80177ec:	4623      	mov	r3, r4
 80177ee:	e78e      	b.n	801770e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80177f0:	4604      	mov	r4, r0
 80177f2:	4603      	mov	r3, r0
 80177f4:	e78b      	b.n	801770e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80177f6:	2500      	movs	r5, #0
 80177f8:	46ab      	mov	fp, r5
 80177fa:	e7ba      	b.n	8017772 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80177fc:	2700      	movs	r7, #0
 80177fe:	463d      	mov	r5, r7
 8017800:	463a      	mov	r2, r7
 8017802:	46bb      	mov	fp, r7
 8017804:	e7df      	b.n	80177c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8017806:	2700      	movs	r7, #0
 8017808:	463a      	mov	r2, r7
 801780a:	e7dc      	b.n	80177c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801780c:	4607      	mov	r7, r0
 801780e:	4602      	mov	r2, r0
 8017810:	f1be 0f0f 	cmp.w	lr, #15
 8017814:	d8d9      	bhi.n	80177ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017816:	b286      	uxth	r6, r0
 8017818:	fa1f f98e 	uxth.w	r9, lr
 801781c:	fb06 f809 	mul.w	r8, r6, r9
 8017820:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017824:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017828:	0136      	lsls	r6, r6, #4
 801782a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801782e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017832:	9601      	str	r6, [sp, #4]
 8017834:	ea4a 0101 	orr.w	r1, sl, r1
 8017838:	fa1f f689 	uxth.w	r6, r9
 801783c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017840:	fb10 f90e 	smulbb	r9, r0, lr
 8017844:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017848:	9602      	str	r6, [sp, #8]
 801784a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801784e:	460e      	mov	r6, r1
 8017850:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017854:	f1ce 0110 	rsb	r1, lr, #16
 8017858:	1a09      	subs	r1, r1, r0
 801785a:	ea4a 0303 	orr.w	r3, sl, r3
 801785e:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8017862:	4343      	muls	r3, r0
 8017864:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017868:	9801      	ldr	r0, [sp, #4]
 801786a:	fb01 3106 	mla	r1, r1, r6, r3
 801786e:	9e02      	ldr	r6, [sp, #8]
 8017870:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017874:	1b80      	subs	r0, r0, r6
 8017876:	9e01      	ldr	r6, [sp, #4]
 8017878:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801787c:	eba6 0608 	sub.w	r6, r6, r8
 8017880:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017884:	b2b6      	uxth	r6, r6
 8017886:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801788a:	ea4a 0202 	orr.w	r2, sl, r2
 801788e:	b280      	uxth	r0, r0
 8017890:	4374      	muls	r4, r6
 8017892:	fb09 1302 	mla	r3, r9, r2, r1
 8017896:	fb0c 4400 	mla	r4, ip, r0, r4
 801789a:	9a03      	ldr	r2, [sp, #12]
 801789c:	9802      	ldr	r0, [sp, #8]
 801789e:	8811      	ldrh	r1, [r2, #0]
 80178a0:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80178a4:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80178a8:	fb00 4505 	mla	r5, r0, r5, r4
 80178ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178b0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80178b4:	fb08 5707 	mla	r7, r8, r7, r5
 80178b8:	ea4a 0b0b 	orr.w	fp, sl, fp
 80178bc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80178c0:	b292      	uxth	r2, r2
 80178c2:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80178c6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80178ca:	4357      	muls	r7, r2
 80178cc:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80178d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80178d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80178d8:	f107 0801 	add.w	r8, r7, #1
 80178dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80178e0:	ea43 0e0e 	orr.w	lr, r3, lr
 80178e4:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80178e8:	fa1f f38e 	uxth.w	r3, lr
 80178ec:	1208      	asrs	r0, r1, #8
 80178ee:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80178f2:	b2ff      	uxtb	r7, r7
 80178f4:	121c      	asrs	r4, r3, #8
 80178f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80178fa:	fb10 f007 	smulbb	r0, r0, r7
 80178fe:	10cd      	asrs	r5, r1, #3
 8017900:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017904:	fb04 0402 	mla	r4, r4, r2, r0
 8017908:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801790c:	10d8      	asrs	r0, r3, #3
 801790e:	fb15 f507 	smulbb	r5, r5, r7
 8017912:	00db      	lsls	r3, r3, #3
 8017914:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017918:	fb00 5002 	mla	r0, r0, r2, r5
 801791c:	b2dd      	uxtb	r5, r3
 801791e:	00cb      	lsls	r3, r1, #3
 8017920:	b2db      	uxtb	r3, r3
 8017922:	fb13 f307 	smulbb	r3, r3, r7
 8017926:	fb05 3202 	mla	r2, r5, r2, r3
 801792a:	b2a4      	uxth	r4, r4
 801792c:	b292      	uxth	r2, r2
 801792e:	1c63      	adds	r3, r4, #1
 8017930:	b280      	uxth	r0, r0
 8017932:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017936:	1c53      	adds	r3, r2, #1
 8017938:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801793c:	1c42      	adds	r2, r0, #1
 801793e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017942:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017946:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801794a:	0940      	lsrs	r0, r0, #5
 801794c:	4323      	orrs	r3, r4
 801794e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017952:	9a03      	ldr	r2, [sp, #12]
 8017954:	4303      	orrs	r3, r0
 8017956:	8013      	strh	r3, [r2, #0]
 8017958:	b005      	add	sp, #20
 801795a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801795e:	280f      	cmp	r0, #15
 8017960:	f63f af33 	bhi.w	80177ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017964:	4677      	mov	r7, lr
 8017966:	4675      	mov	r5, lr
 8017968:	4672      	mov	r2, lr
 801796a:	46f3      	mov	fp, lr
 801796c:	e753      	b.n	8017816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801796e:	bf00      	nop
 8017970:	0801fc17 	.word	0x0801fc17
 8017974:	08020146 	.word	0x08020146
 8017978:	0801fbe4 	.word	0x0801fbe4

0801797c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801797c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017980:	ed2d 8b08 	vpush	{d8-d11}
 8017984:	b097      	sub	sp, #92	; 0x5c
 8017986:	eeb0 aa40 	vmov.f32	s20, s0
 801798a:	9214      	str	r2, [sp, #80]	; 0x50
 801798c:	9308      	str	r3, [sp, #32]
 801798e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017990:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017994:	9312      	str	r3, [sp, #72]	; 0x48
 8017996:	9111      	str	r1, [sp, #68]	; 0x44
 8017998:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801799c:	9015      	str	r0, [sp, #84]	; 0x54
 801799e:	6850      	ldr	r0, [r2, #4]
 80179a0:	6812      	ldr	r2, [r2, #0]
 80179a2:	fb00 1303 	mla	r3, r0, r3, r1
 80179a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80179aa:	9309      	str	r3, [sp, #36]	; 0x24
 80179ac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80179ae:	681b      	ldr	r3, [r3, #0]
 80179b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80179b2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80179b4:	685b      	ldr	r3, [r3, #4]
 80179b6:	930c      	str	r3, [sp, #48]	; 0x30
 80179b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80179bc:	930a      	str	r3, [sp, #40]	; 0x28
 80179be:	eef0 9a60 	vmov.f32	s19, s1
 80179c2:	eeb0 9a41 	vmov.f32	s18, s2
 80179c6:	eeb0 8a62 	vmov.f32	s16, s5
 80179ca:	eef0 8a43 	vmov.f32	s17, s6
 80179ce:	eef0 ba44 	vmov.f32	s23, s8
 80179d2:	eeb0 ba64 	vmov.f32	s22, s9
 80179d6:	eef0 aa45 	vmov.f32	s21, s10
 80179da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80179dc:	2b00      	cmp	r3, #0
 80179de:	dc03      	bgt.n	80179e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80179e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80179e2:	2b00      	cmp	r3, #0
 80179e4:	f340 83cb 	ble.w	801817e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80179e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80179ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80179ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80179f2:	1e48      	subs	r0, r1, #1
 80179f4:	1e55      	subs	r5, r2, #1
 80179f6:	9b08      	ldr	r3, [sp, #32]
 80179f8:	2b00      	cmp	r3, #0
 80179fa:	f340 81a3 	ble.w	8017d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80179fe:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8017a00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a02:	1436      	asrs	r6, r6, #16
 8017a04:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017a08:	d406      	bmi.n	8017a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a0a:	4286      	cmp	r6, r0
 8017a0c:	da04      	bge.n	8017a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a0e:	2b00      	cmp	r3, #0
 8017a10:	db02      	blt.n	8017a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a12:	42ab      	cmp	r3, r5
 8017a14:	f2c0 8197 	blt.w	8017d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8017a18:	3601      	adds	r6, #1
 8017a1a:	f100 8184 	bmi.w	8017d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a1e:	42b1      	cmp	r1, r6
 8017a20:	f2c0 8181 	blt.w	8017d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a24:	3301      	adds	r3, #1
 8017a26:	f100 817e 	bmi.w	8017d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a2a:	429a      	cmp	r2, r3
 8017a2c:	f2c0 817b 	blt.w	8017d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a30:	9b08      	ldr	r3, [sp, #32]
 8017a32:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017a34:	9313      	str	r3, [sp, #76]	; 0x4c
 8017a36:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017a3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017a3c:	2b00      	cmp	r3, #0
 8017a3e:	f340 81a4 	ble.w	8017d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8017a42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a44:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017a46:	1418      	asrs	r0, r3, #16
 8017a48:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017a4a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017a4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a50:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017a54:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a56:	142d      	asrs	r5, r5, #16
 8017a58:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017a5c:	f100 81f8 	bmi.w	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017a60:	f102 3eff 	add.w	lr, r2, #4294967295
 8017a64:	4575      	cmp	r5, lr
 8017a66:	f280 81f3 	bge.w	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017a6a:	2800      	cmp	r0, #0
 8017a6c:	f2c0 81f0 	blt.w	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017a70:	f103 3eff 	add.w	lr, r3, #4294967295
 8017a74:	4570      	cmp	r0, lr
 8017a76:	f280 81eb 	bge.w	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017a7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017a7c:	b212      	sxth	r2, r2
 8017a7e:	fb00 5002 	mla	r0, r0, r2, r5
 8017a82:	fa1f fe81 	uxth.w	lr, r1
 8017a86:	eb03 0a00 	add.w	sl, r3, r0
 8017a8a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017a8e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017a92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017a96:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017a9a:	b29b      	uxth	r3, r3
 8017a9c:	f1bc 0f00 	cmp.w	ip, #0
 8017aa0:	f000 81b9 	beq.w	8017e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017aa4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017aa8:	940d      	str	r4, [sp, #52]	; 0x34
 8017aaa:	eb0a 0b02 	add.w	fp, sl, r2
 8017aae:	fa1f fa8c 	uxth.w	sl, ip
 8017ab2:	fb0a fe0e 	mul.w	lr, sl, lr
 8017ab6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017aba:	fa1f fa8a 	uxth.w	sl, sl
 8017abe:	eba5 050e 	sub.w	r5, r5, lr
 8017ac2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017ac6:	940e      	str	r4, [sp, #56]	; 0x38
 8017ac8:	eba3 030a 	sub.w	r3, r3, sl
 8017acc:	b2ad      	uxth	r5, r5
 8017ace:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017ad0:	b29b      	uxth	r3, r3
 8017ad2:	fb08 f505 	mul.w	r5, r8, r5
 8017ad6:	fb09 5303 	mla	r3, r9, r3, r5
 8017ada:	fb0a 3304 	mla	r3, sl, r4, r3
 8017ade:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017ae0:	fb0e 3304 	mla	r3, lr, r4, r3
 8017ae4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017ae8:	2b00      	cmp	r3, #0
 8017aea:	f000 810f 	beq.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017aee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017af0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017af4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017af8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017afc:	f000 8190 	beq.w	8017e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8017b00:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017b04:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017b08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b0c:	fb09 f000 	mul.w	r0, r9, r0
 8017b10:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b14:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017b18:	f100 0b20 	add.w	fp, r0, #32
 8017b1c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017b20:	44ce      	add	lr, r9
 8017b22:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017b26:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017b2a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017b2e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017b32:	ea4e 0909 	orr.w	r9, lr, r9
 8017b36:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017b3a:	8868      	ldrh	r0, [r5, #2]
 8017b3c:	d019      	beq.n	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017b3e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017b42:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017b46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b4a:	fb08 f800 	mul.w	r8, r8, r0
 8017b4e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b52:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017b56:	f108 0b20 	add.w	fp, r8, #32
 8017b5a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017b5e:	4486      	add	lr, r0
 8017b60:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017b64:	0a00      	lsrs	r0, r0, #8
 8017b66:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017b6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b6e:	ea4e 0000 	orr.w	r0, lr, r0
 8017b72:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017b76:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017b7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017b7e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017b82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017b8a:	ea4e 0909 	orr.w	r9, lr, r9
 8017b8e:	ea4a 0000 	orr.w	r0, sl, r0
 8017b92:	f1bc 0f00 	cmp.w	ip, #0
 8017b96:	f000 8145 	beq.w	8017e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017b9a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017b9e:	3a01      	subs	r2, #1
 8017ba0:	0052      	lsls	r2, r2, #1
 8017ba2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017ba4:	3202      	adds	r2, #2
 8017ba6:	2cff      	cmp	r4, #255	; 0xff
 8017ba8:	eb05 0e02 	add.w	lr, r5, r2
 8017bac:	5aaa      	ldrh	r2, [r5, r2]
 8017bae:	d018      	beq.n	8017be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017bb0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017bb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017bb8:	fb04 fa02 	mul.w	sl, r4, r2
 8017bbc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017bc0:	fb08 f805 	mul.w	r8, r8, r5
 8017bc4:	f10a 0520 	add.w	r5, sl, #32
 8017bc8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017bcc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017bd0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017bd4:	4442      	add	r2, r8
 8017bd6:	0a2d      	lsrs	r5, r5, #8
 8017bd8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017bdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017be0:	432a      	orrs	r2, r5
 8017be2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017be4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017be8:	2cff      	cmp	r4, #255	; 0xff
 8017bea:	d01a      	beq.n	8017c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017bec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017bf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017bf4:	fb04 fa05 	mul.w	sl, r4, r5
 8017bf8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017bfc:	fb08 f80e 	mul.w	r8, r8, lr
 8017c00:	f10a 0e20 	add.w	lr, sl, #32
 8017c04:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017c08:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017c0c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c10:	4445      	add	r5, r8
 8017c12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c16:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017c1a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017c1e:	ea45 050e 	orr.w	r5, r5, lr
 8017c22:	fb1c fe01 	smulbb	lr, ip, r1
 8017c26:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017c2a:	f1cc 0810 	rsb	r8, ip, #16
 8017c2e:	eba8 0801 	sub.w	r8, r8, r1
 8017c32:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017c36:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017c3a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017c3e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017c42:	4341      	muls	r1, r0
 8017c44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017c48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c4c:	ea4a 0202 	orr.w	r2, sl, r2
 8017c50:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017c54:	fb09 1108 	mla	r1, r9, r8, r1
 8017c58:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017c5c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017c60:	fb0c 1102 	mla	r1, ip, r2, r1
 8017c64:	ea4b 0505 	orr.w	r5, fp, r5
 8017c68:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017c6c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017c70:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017c74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c78:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017c7c:	ea42 0e0e 	orr.w	lr, r2, lr
 8017c80:	fa1f f28e 	uxth.w	r2, lr
 8017c84:	2bff      	cmp	r3, #255	; 0xff
 8017c86:	d103      	bne.n	8017c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017c88:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017c8a:	29ff      	cmp	r1, #255	; 0xff
 8017c8c:	f000 80de 	beq.w	8017e4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017c90:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017c92:	8838      	ldrh	r0, [r7, #0]
 8017c94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017c96:	434b      	muls	r3, r1
 8017c98:	f103 0c01 	add.w	ip, r3, #1
 8017c9c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017ca0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017ca4:	fa5f fc83 	uxtb.w	ip, r3
 8017ca8:	1203      	asrs	r3, r0, #8
 8017caa:	1215      	asrs	r5, r2, #8
 8017cac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017cb0:	fb13 f30c 	smulbb	r3, r3, ip
 8017cb4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017cb8:	fb05 3501 	mla	r5, r5, r1, r3
 8017cbc:	10c3      	asrs	r3, r0, #3
 8017cbe:	10d1      	asrs	r1, r2, #3
 8017cc0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017cc4:	fb13 f30c 	smulbb	r3, r3, ip
 8017cc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017ccc:	fb01 3104 	mla	r1, r1, r4, r3
 8017cd0:	00c3      	lsls	r3, r0, #3
 8017cd2:	00d2      	lsls	r2, r2, #3
 8017cd4:	b2db      	uxtb	r3, r3
 8017cd6:	b2d2      	uxtb	r2, r2
 8017cd8:	fb13 f30c 	smulbb	r3, r3, ip
 8017cdc:	b2ad      	uxth	r5, r5
 8017cde:	fb02 3304 	mla	r3, r2, r4, r3
 8017ce2:	b29a      	uxth	r2, r3
 8017ce4:	1c6b      	adds	r3, r5, #1
 8017ce6:	b289      	uxth	r1, r1
 8017ce8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017cec:	1c53      	adds	r3, r2, #1
 8017cee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017cf2:	1c4a      	adds	r2, r1, #1
 8017cf4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017cf8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017cfc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017d00:	0949      	lsrs	r1, r1, #5
 8017d02:	432b      	orrs	r3, r5
 8017d04:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d08:	430b      	orrs	r3, r1
 8017d0a:	803b      	strh	r3, [r7, #0]
 8017d0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d0e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017d10:	4413      	add	r3, r2
 8017d12:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d14:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017d16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d18:	441a      	add	r2, r3
 8017d1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017d1c:	922a      	str	r2, [sp, #168]	; 0xa8
 8017d1e:	3b01      	subs	r3, #1
 8017d20:	3702      	adds	r7, #2
 8017d22:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d24:	e689      	b.n	8017a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017d26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d28:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017d2a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8017d2c:	4433      	add	r3, r6
 8017d2e:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d32:	441c      	add	r4, r3
 8017d34:	9b08      	ldr	r3, [sp, #32]
 8017d36:	942a      	str	r4, [sp, #168]	; 0xa8
 8017d38:	3b01      	subs	r3, #1
 8017d3a:	9308      	str	r3, [sp, #32]
 8017d3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d3e:	3302      	adds	r3, #2
 8017d40:	9309      	str	r3, [sp, #36]	; 0x24
 8017d42:	e658      	b.n	80179f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017d44:	d028      	beq.n	8017d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017d46:	9b08      	ldr	r3, [sp, #32]
 8017d48:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017d4a:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017d4c:	3b01      	subs	r3, #1
 8017d4e:	fb00 5003 	mla	r0, r0, r3, r5
 8017d52:	1400      	asrs	r0, r0, #16
 8017d54:	f53f ae6c 	bmi.w	8017a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017d58:	3901      	subs	r1, #1
 8017d5a:	4288      	cmp	r0, r1
 8017d5c:	f6bf ae68 	bge.w	8017a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017d60:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017d62:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017d64:	fb01 0303 	mla	r3, r1, r3, r0
 8017d68:	141b      	asrs	r3, r3, #16
 8017d6a:	f53f ae61 	bmi.w	8017a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017d6e:	3a01      	subs	r2, #1
 8017d70:	4293      	cmp	r3, r2
 8017d72:	f6bf ae5d 	bge.w	8017a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017d76:	9b08      	ldr	r3, [sp, #32]
 8017d78:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017d7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d7e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017d82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017d84:	2b00      	cmp	r3, #0
 8017d86:	f300 8082 	bgt.w	8017e8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017d8a:	9b08      	ldr	r3, [sp, #32]
 8017d8c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017d90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d92:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017d96:	9309      	str	r3, [sp, #36]	; 0x24
 8017d98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017d9a:	2b00      	cmp	r3, #0
 8017d9c:	f340 81ef 	ble.w	801817e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017da0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017da4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017da8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017dac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017dae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017db2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017db6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017dba:	eef0 6a48 	vmov.f32	s13, s16
 8017dbe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017dc6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017dca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017dce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017dd2:	eef0 6a68 	vmov.f32	s13, s17
 8017dd6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017dda:	ee18 2a10 	vmov	r2, s16
 8017dde:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8017de6:	ee18 2a90 	vmov	r2, s17
 8017dea:	932b      	str	r3, [sp, #172]	; 0xac
 8017dec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017dee:	fb92 f3f3 	sdiv	r3, r2, r3
 8017df2:	932c      	str	r3, [sp, #176]	; 0xb0
 8017df4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017df6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017df8:	3b01      	subs	r3, #1
 8017dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017dfe:	9311      	str	r3, [sp, #68]	; 0x44
 8017e00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017e02:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017e06:	bf08      	it	eq
 8017e08:	4613      	moveq	r3, r2
 8017e0a:	9308      	str	r3, [sp, #32]
 8017e0c:	eef0 8a67 	vmov.f32	s17, s15
 8017e10:	eeb0 8a47 	vmov.f32	s16, s14
 8017e14:	e5e1      	b.n	80179da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017e16:	fb08 f505 	mul.w	r5, r8, r5
 8017e1a:	fb09 5303 	mla	r3, r9, r3, r5
 8017e1e:	e661      	b.n	8017ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8017e20:	4681      	mov	r9, r0
 8017e22:	e688      	b.n	8017b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8017e24:	f1c1 0210 	rsb	r2, r1, #16
 8017e28:	4341      	muls	r1, r0
 8017e2a:	fb09 1902 	mla	r9, r9, r2, r1
 8017e2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017e32:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017e36:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017e3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e3e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017e42:	ea42 0909 	orr.w	r9, r2, r9
 8017e46:	fa1f f289 	uxth.w	r2, r9
 8017e4a:	e71b      	b.n	8017c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017e4c:	803a      	strh	r2, [r7, #0]
 8017e4e:	e75d      	b.n	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e50:	f115 0e01 	adds.w	lr, r5, #1
 8017e54:	f53f af5a 	bmi.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e58:	4572      	cmp	r2, lr
 8017e5a:	f6ff af57 	blt.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e5e:	f110 0e01 	adds.w	lr, r0, #1
 8017e62:	f53f af53 	bmi.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e66:	4573      	cmp	r3, lr
 8017e68:	f6ff af50 	blt.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017e6e:	9502      	str	r5, [sp, #8]
 8017e70:	b21b      	sxth	r3, r3
 8017e72:	b212      	sxth	r2, r2
 8017e74:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017e78:	9301      	str	r3, [sp, #4]
 8017e7a:	9200      	str	r2, [sp, #0]
 8017e7c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017e80:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017e84:	4639      	mov	r1, r7
 8017e86:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017e88:	f7ff fbd2 	bl	8017630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017e8c:	e73e      	b.n	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017e8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e90:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017e94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017e96:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017e9a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017e9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ea0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017ea2:	141f      	asrs	r7, r3, #16
 8017ea4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ea6:	141b      	asrs	r3, r3, #16
 8017ea8:	fb01 3707 	mla	r7, r1, r7, r3
 8017eac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017eae:	fa1f fc82 	uxth.w	ip, r2
 8017eb2:	eb03 0a07 	add.w	sl, r3, r7
 8017eb6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017eba:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017ebe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017ec2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017ec6:	b29b      	uxth	r3, r3
 8017ec8:	2d00      	cmp	r5, #0
 8017eca:	f000 813d 	beq.w	8018148 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017ece:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017ed2:	940f      	str	r4, [sp, #60]	; 0x3c
 8017ed4:	eb0a 0b01 	add.w	fp, sl, r1
 8017ed8:	fa1f fa85 	uxth.w	sl, r5
 8017edc:	fb0a fc0c 	mul.w	ip, sl, ip
 8017ee0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017ee4:	fa1f fa8a 	uxth.w	sl, sl
 8017ee8:	eba0 000c 	sub.w	r0, r0, ip
 8017eec:	eba3 030a 	sub.w	r3, r3, sl
 8017ef0:	b280      	uxth	r0, r0
 8017ef2:	fb08 f000 	mul.w	r0, r8, r0
 8017ef6:	b29b      	uxth	r3, r3
 8017ef8:	fb09 0303 	mla	r3, r9, r3, r0
 8017efc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017efe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017f02:	9410      	str	r4, [sp, #64]	; 0x40
 8017f04:	fb0a 3300 	mla	r3, sl, r0, r3
 8017f08:	fb0c 3304 	mla	r3, ip, r4, r3
 8017f0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017f10:	2b00      	cmp	r3, #0
 8017f12:	f000 810b 	beq.w	801812c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017f16:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017f18:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f1a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017f1e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017f22:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017f26:	f000 8114 	beq.w	8018152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8017f2a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017f2e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017f32:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f36:	fb09 f707 	mul.w	r7, r9, r7
 8017f3a:	fb0a fc0c 	mul.w	ip, sl, ip
 8017f3e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017f42:	f107 0b20 	add.w	fp, r7, #32
 8017f46:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017f4a:	44cc      	add	ip, r9
 8017f4c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017f50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f54:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017f58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017f5c:	ea4c 0909 	orr.w	r9, ip, r9
 8017f60:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017f64:	8847      	ldrh	r7, [r0, #2]
 8017f66:	d019      	beq.n	8017f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017f68:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017f6c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017f70:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f74:	fb08 f807 	mul.w	r8, r8, r7
 8017f78:	fb0a fc0c 	mul.w	ip, sl, ip
 8017f7c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017f80:	f108 0b20 	add.w	fp, r8, #32
 8017f84:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017f88:	44bc      	add	ip, r7
 8017f8a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017f8e:	0a3f      	lsrs	r7, r7, #8
 8017f90:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017f94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f98:	ea4c 0707 	orr.w	r7, ip, r7
 8017f9c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017fa0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017fa4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017fa8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017fac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017fb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017fb4:	ea4c 0909 	orr.w	r9, ip, r9
 8017fb8:	ea4a 0707 	orr.w	r7, sl, r7
 8017fbc:	2d00      	cmp	r5, #0
 8017fbe:	f000 80ca 	beq.w	8018156 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8017fc2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017fc6:	3901      	subs	r1, #1
 8017fc8:	0049      	lsls	r1, r1, #1
 8017fca:	3102      	adds	r1, #2
 8017fcc:	eb00 0c01 	add.w	ip, r0, r1
 8017fd0:	5a41      	ldrh	r1, [r0, r1]
 8017fd2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017fd4:	28ff      	cmp	r0, #255	; 0xff
 8017fd6:	d019      	beq.n	801800c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017fd8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017fda:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017fde:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017fe2:	fb04 fa01 	mul.w	sl, r4, r1
 8017fe6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017fea:	fb08 f800 	mul.w	r8, r8, r0
 8017fee:	f10a 0020 	add.w	r0, sl, #32
 8017ff2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017ff6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017ffa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ffe:	4441      	add	r1, r8
 8018000:	0a00      	lsrs	r0, r0, #8
 8018002:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018006:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801800a:	4301      	orrs	r1, r0
 801800c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801800e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018012:	2cff      	cmp	r4, #255	; 0xff
 8018014:	d01a      	beq.n	801804c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8018016:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801801a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801801e:	fb04 fa00 	mul.w	sl, r4, r0
 8018022:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018026:	fb08 f80c 	mul.w	r8, r8, ip
 801802a:	f10a 0c20 	add.w	ip, sl, #32
 801802e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018032:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018036:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801803a:	4440      	add	r0, r8
 801803c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018040:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018044:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018048:	ea40 000c 	orr.w	r0, r0, ip
 801804c:	fb15 fc02 	smulbb	ip, r5, r2
 8018050:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018054:	f1c5 0810 	rsb	r8, r5, #16
 8018058:	eba8 0802 	sub.w	r8, r8, r2
 801805c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018060:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018064:	437a      	muls	r2, r7
 8018066:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801806a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801806e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018072:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018076:	fb09 2208 	mla	r2, r9, r8, r2
 801807a:	ea4a 0101 	orr.w	r1, sl, r1
 801807e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018082:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018086:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801808a:	fb05 2201 	mla	r2, r5, r1, r2
 801808e:	ea4b 0000 	orr.w	r0, fp, r0
 8018092:	fb0c 2200 	mla	r2, ip, r0, r2
 8018096:	0d57      	lsrs	r7, r2, #21
 8018098:	0952      	lsrs	r2, r2, #5
 801809a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801809e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80180a2:	433a      	orrs	r2, r7
 80180a4:	2bff      	cmp	r3, #255	; 0xff
 80180a6:	b292      	uxth	r2, r2
 80180a8:	d102      	bne.n	80180b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80180aa:	9912      	ldr	r1, [sp, #72]	; 0x48
 80180ac:	29ff      	cmp	r1, #255	; 0xff
 80180ae:	d063      	beq.n	8018178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 80180b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80180b2:	f8be 1000 	ldrh.w	r1, [lr]
 80180b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80180b8:	4343      	muls	r3, r0
 80180ba:	1c58      	adds	r0, r3, #1
 80180bc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80180c0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80180c4:	1208      	asrs	r0, r1, #8
 80180c6:	b2db      	uxtb	r3, r3
 80180c8:	1215      	asrs	r5, r2, #8
 80180ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80180ce:	fb10 f003 	smulbb	r0, r0, r3
 80180d2:	10cf      	asrs	r7, r1, #3
 80180d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80180d8:	00c9      	lsls	r1, r1, #3
 80180da:	fb05 0504 	mla	r5, r5, r4, r0
 80180de:	b2c9      	uxtb	r1, r1
 80180e0:	10d0      	asrs	r0, r2, #3
 80180e2:	00d2      	lsls	r2, r2, #3
 80180e4:	fb11 f103 	smulbb	r1, r1, r3
 80180e8:	b2d2      	uxtb	r2, r2
 80180ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80180ee:	fb02 1204 	mla	r2, r2, r4, r1
 80180f2:	fb17 f703 	smulbb	r7, r7, r3
 80180f6:	b2ad      	uxth	r5, r5
 80180f8:	b292      	uxth	r2, r2
 80180fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80180fe:	fb00 7004 	mla	r0, r0, r4, r7
 8018102:	1c6b      	adds	r3, r5, #1
 8018104:	1c57      	adds	r7, r2, #1
 8018106:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801810a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801810e:	b280      	uxth	r0, r0
 8018110:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018114:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018118:	433d      	orrs	r5, r7
 801811a:	1c47      	adds	r7, r0, #1
 801811c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018120:	097f      	lsrs	r7, r7, #5
 8018122:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018126:	433d      	orrs	r5, r7
 8018128:	f8ae 5000 	strh.w	r5, [lr]
 801812c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801812e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018130:	4413      	add	r3, r2
 8018132:	9329      	str	r3, [sp, #164]	; 0xa4
 8018134:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018136:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018138:	441a      	add	r2, r3
 801813a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801813c:	922a      	str	r2, [sp, #168]	; 0xa8
 801813e:	3b01      	subs	r3, #1
 8018140:	f10e 0e02 	add.w	lr, lr, #2
 8018144:	9313      	str	r3, [sp, #76]	; 0x4c
 8018146:	e61c      	b.n	8017d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8018148:	fb08 f000 	mul.w	r0, r8, r0
 801814c:	fb09 0303 	mla	r3, r9, r3, r0
 8018150:	e6dc      	b.n	8017f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8018152:	46b9      	mov	r9, r7
 8018154:	e704      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8018156:	f1c2 0110 	rsb	r1, r2, #16
 801815a:	437a      	muls	r2, r7
 801815c:	fb09 2901 	mla	r9, r9, r1, r2
 8018160:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018164:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018168:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801816c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018170:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018174:	4302      	orrs	r2, r0
 8018176:	e795      	b.n	80180a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8018178:	f8ae 2000 	strh.w	r2, [lr]
 801817c:	e7d6      	b.n	801812c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801817e:	b017      	add	sp, #92	; 0x5c
 8018180:	ecbd 8b08 	vpop	{d8-d11}
 8018184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018188 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801818c:	b085      	sub	sp, #20
 801818e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018192:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018196:	9103      	str	r1, [sp, #12]
 8018198:	fb05 7106 	mla	r1, r5, r6, r7
 801819c:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80181a0:	2d00      	cmp	r5, #0
 80181a2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80181a6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80181aa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80181ae:	9401      	str	r4, [sp, #4]
 80181b0:	eb02 0901 	add.w	r9, r2, r1
 80181b4:	f2c0 80c0 	blt.w	8018338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80181b8:	45a8      	cmp	r8, r5
 80181ba:	f340 80bd 	ble.w	8018338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80181be:	2f00      	cmp	r7, #0
 80181c0:	f2c0 80b6 	blt.w	8018330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80181c4:	42be      	cmp	r6, r7
 80181c6:	f340 80b3 	ble.w	8018330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80181ca:	f812 c001 	ldrb.w	ip, [r2, r1]
 80181ce:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80181d2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80181d6:	d019      	beq.n	801820c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80181d8:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80181dc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80181e0:	435a      	muls	r2, r3
 80181e2:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80181e6:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80181ea:	fb0c f403 	mul.w	r4, ip, r3
 80181ee:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80181f2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80181f6:	441a      	add	r2, r3
 80181f8:	f104 0320 	add.w	r3, r4, #32
 80181fc:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018200:	0a1b      	lsrs	r3, r3, #8
 8018202:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8018206:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801820a:	4319      	orrs	r1, r3
 801820c:	b289      	uxth	r1, r1
 801820e:	1c7b      	adds	r3, r7, #1
 8018210:	f100 8097 	bmi.w	8018342 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8018214:	429e      	cmp	r6, r3
 8018216:	f340 8094 	ble.w	8018342 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801821a:	2800      	cmp	r0, #0
 801821c:	f000 8094 	beq.w	8018348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8018220:	f899 4001 	ldrb.w	r4, [r9, #1]
 8018224:	9b01      	ldr	r3, [sp, #4]
 8018226:	2cff      	cmp	r4, #255	; 0xff
 8018228:	885b      	ldrh	r3, [r3, #2]
 801822a:	d01b      	beq.n	8018264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801822c:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018230:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018234:	fb0a f202 	mul.w	r2, sl, r2
 8018238:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801823c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018240:	fb04 fa03 	mul.w	sl, r4, r3
 8018244:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018248:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801824c:	441a      	add	r2, r3
 801824e:	f10a 0320 	add.w	r3, sl, #32
 8018252:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018256:	0a1b      	lsrs	r3, r3, #8
 8018258:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801825c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018260:	ea4b 0303 	orr.w	r3, fp, r3
 8018264:	b29b      	uxth	r3, r3
 8018266:	3501      	adds	r5, #1
 8018268:	d474      	bmi.n	8018354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801826a:	45a8      	cmp	r8, r5
 801826c:	dd72      	ble.n	8018354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801826e:	f1be 0f00 	cmp.w	lr, #0
 8018272:	f000 8110 	beq.w	8018496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8018276:	2f00      	cmp	r7, #0
 8018278:	db69      	blt.n	801834e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801827a:	42be      	cmp	r6, r7
 801827c:	dd67      	ble.n	801834e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801827e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018282:	9a01      	ldr	r2, [sp, #4]
 8018284:	2dff      	cmp	r5, #255	; 0xff
 8018286:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801828a:	d01c      	beq.n	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801828c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8018290:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018294:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018298:	fb05 fa0b 	mul.w	sl, r5, fp
 801829c:	fb08 f802 	mul.w	r8, r8, r2
 80182a0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80182a4:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80182a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80182ac:	4490      	add	r8, r2
 80182ae:	f10a 0220 	add.w	r2, sl, #32
 80182b2:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80182b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182ba:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80182be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80182c2:	ea4b 0b0a 	orr.w	fp, fp, sl
 80182c6:	fa1f fb8b 	uxth.w	fp, fp
 80182ca:	3701      	adds	r7, #1
 80182cc:	d447      	bmi.n	801835e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80182ce:	42be      	cmp	r6, r7
 80182d0:	dd45      	ble.n	801835e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80182d2:	2800      	cmp	r0, #0
 80182d4:	d046      	beq.n	8018364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80182d6:	3601      	adds	r6, #1
 80182d8:	9a01      	ldr	r2, [sp, #4]
 80182da:	f819 7006 	ldrb.w	r7, [r9, r6]
 80182de:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80182e2:	2fff      	cmp	r7, #255	; 0xff
 80182e4:	d01a      	beq.n	801831c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80182e6:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80182ea:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80182ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80182f2:	fb07 f902 	mul.w	r9, r7, r2
 80182f6:	fb08 f806 	mul.w	r8, r8, r6
 80182fa:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80182fe:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8018302:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018306:	44b0      	add	r8, r6
 8018308:	f109 0620 	add.w	r6, r9, #32
 801830c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018310:	0a36      	lsrs	r6, r6, #8
 8018312:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018316:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801831a:	4332      	orrs	r2, r6
 801831c:	b292      	uxth	r2, r2
 801831e:	280f      	cmp	r0, #15
 8018320:	d922      	bls.n	8018368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018322:	4b61      	ldr	r3, [pc, #388]	; (80184a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8018324:	4a61      	ldr	r2, [pc, #388]	; (80184ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8018326:	4862      	ldr	r0, [pc, #392]	; (80184b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8018328:	f240 11f9 	movw	r1, #505	; 0x1f9
 801832c:	f003 fcb2 	bl	801bc94 <__assert_func>
 8018330:	f04f 0c00 	mov.w	ip, #0
 8018334:	4661      	mov	r1, ip
 8018336:	e76a      	b.n	801820e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018338:	2400      	movs	r4, #0
 801833a:	46a4      	mov	ip, r4
 801833c:	4623      	mov	r3, r4
 801833e:	4621      	mov	r1, r4
 8018340:	e791      	b.n	8018266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018342:	2400      	movs	r4, #0
 8018344:	4623      	mov	r3, r4
 8018346:	e78e      	b.n	8018266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018348:	4604      	mov	r4, r0
 801834a:	4603      	mov	r3, r0
 801834c:	e78b      	b.n	8018266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801834e:	2500      	movs	r5, #0
 8018350:	46ab      	mov	fp, r5
 8018352:	e7ba      	b.n	80182ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8018354:	2700      	movs	r7, #0
 8018356:	463d      	mov	r5, r7
 8018358:	463a      	mov	r2, r7
 801835a:	46bb      	mov	fp, r7
 801835c:	e7df      	b.n	801831e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801835e:	2700      	movs	r7, #0
 8018360:	463a      	mov	r2, r7
 8018362:	e7dc      	b.n	801831e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8018364:	4607      	mov	r7, r0
 8018366:	4602      	mov	r2, r0
 8018368:	f1be 0f0f 	cmp.w	lr, #15
 801836c:	d8d9      	bhi.n	8018322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801836e:	b286      	uxth	r6, r0
 8018370:	fa1f f98e 	uxth.w	r9, lr
 8018374:	fb06 f809 	mul.w	r8, r6, r9
 8018378:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801837c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018380:	0136      	lsls	r6, r6, #4
 8018382:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018386:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801838a:	9601      	str	r6, [sp, #4]
 801838c:	ea4a 0101 	orr.w	r1, sl, r1
 8018390:	fa1f f689 	uxth.w	r6, r9
 8018394:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018398:	fb10 f90e 	smulbb	r9, r0, lr
 801839c:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80183a0:	9602      	str	r6, [sp, #8]
 80183a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183a6:	460e      	mov	r6, r1
 80183a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80183ac:	f1ce 0110 	rsb	r1, lr, #16
 80183b0:	1a09      	subs	r1, r1, r0
 80183b2:	ea4a 0303 	orr.w	r3, sl, r3
 80183b6:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80183ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80183be:	4343      	muls	r3, r0
 80183c0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80183c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183cc:	fb01 3106 	mla	r1, r1, r6, r3
 80183d0:	ea4a 0202 	orr.w	r2, sl, r2
 80183d4:	fb09 1302 	mla	r3, r9, r2, r1
 80183d8:	9a03      	ldr	r2, [sp, #12]
 80183da:	9802      	ldr	r0, [sp, #8]
 80183dc:	8811      	ldrh	r1, [r2, #0]
 80183de:	9a01      	ldr	r2, [sp, #4]
 80183e0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80183e4:	1a12      	subs	r2, r2, r0
 80183e6:	9801      	ldr	r0, [sp, #4]
 80183e8:	eba0 0608 	sub.w	r6, r0, r8
 80183ec:	b2b6      	uxth	r6, r6
 80183ee:	b292      	uxth	r2, r2
 80183f0:	4374      	muls	r4, r6
 80183f2:	fb0c 4402 	mla	r4, ip, r2, r4
 80183f6:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80183fa:	9a02      	ldr	r2, [sp, #8]
 80183fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018400:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018404:	fb02 4505 	mla	r5, r2, r5, r4
 8018408:	ea4a 0b0b 	orr.w	fp, sl, fp
 801840c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018410:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8018414:	fb08 5707 	mla	r7, r8, r7, r5
 8018418:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801841c:	120a      	asrs	r2, r1, #8
 801841e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018422:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8018426:	b2ff      	uxtb	r7, r7
 8018428:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801842c:	10c8      	asrs	r0, r1, #3
 801842e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018432:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018436:	00c9      	lsls	r1, r1, #3
 8018438:	437a      	muls	r2, r7
 801843a:	ea43 0e0e 	orr.w	lr, r3, lr
 801843e:	b2c9      	uxtb	r1, r1
 8018440:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018444:	fa1f f38e 	uxth.w	r3, lr
 8018448:	4378      	muls	r0, r7
 801844a:	434f      	muls	r7, r1
 801844c:	1c51      	adds	r1, r2, #1
 801844e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8018452:	121a      	asrs	r2, r3, #8
 8018454:	f022 0207 	bic.w	r2, r2, #7
 8018458:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801845c:	1c41      	adds	r1, r0, #1
 801845e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018462:	10d9      	asrs	r1, r3, #3
 8018464:	f021 0103 	bic.w	r1, r1, #3
 8018468:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801846c:	0212      	lsls	r2, r2, #8
 801846e:	00c9      	lsls	r1, r1, #3
 8018470:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018474:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018478:	430a      	orrs	r2, r1
 801847a:	1c79      	adds	r1, r7, #1
 801847c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8018480:	00db      	lsls	r3, r3, #3
 8018482:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8018486:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801848a:	4313      	orrs	r3, r2
 801848c:	9a03      	ldr	r2, [sp, #12]
 801848e:	8013      	strh	r3, [r2, #0]
 8018490:	b005      	add	sp, #20
 8018492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018496:	280f      	cmp	r0, #15
 8018498:	f63f af43 	bhi.w	8018322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801849c:	4677      	mov	r7, lr
 801849e:	4675      	mov	r5, lr
 80184a0:	4672      	mov	r2, lr
 80184a2:	46f3      	mov	fp, lr
 80184a4:	e763      	b.n	801836e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80184a6:	bf00      	nop
 80184a8:	0801fc17 	.word	0x0801fc17
 80184ac:	08020146 	.word	0x08020146
 80184b0:	0801fbe4 	.word	0x0801fbe4

080184b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184b8:	ed2d 8b08 	vpush	{d8-d11}
 80184bc:	b093      	sub	sp, #76	; 0x4c
 80184be:	eeb0 aa40 	vmov.f32	s20, s0
 80184c2:	9210      	str	r2, [sp, #64]	; 0x40
 80184c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80184c6:	910e      	str	r1, [sp, #56]	; 0x38
 80184c8:	9306      	str	r3, [sp, #24]
 80184ca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80184ce:	9011      	str	r0, [sp, #68]	; 0x44
 80184d0:	6850      	ldr	r0, [r2, #4]
 80184d2:	6812      	ldr	r2, [r2, #0]
 80184d4:	fb00 1303 	mla	r3, r0, r3, r1
 80184d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80184dc:	9307      	str	r3, [sp, #28]
 80184de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80184e0:	681b      	ldr	r3, [r3, #0]
 80184e2:	9308      	str	r3, [sp, #32]
 80184e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80184e6:	685b      	ldr	r3, [r3, #4]
 80184e8:	9309      	str	r3, [sp, #36]	; 0x24
 80184ea:	eef0 9a60 	vmov.f32	s19, s1
 80184ee:	eeb0 9a41 	vmov.f32	s18, s2
 80184f2:	eeb0 8a62 	vmov.f32	s16, s5
 80184f6:	eef0 8a43 	vmov.f32	s17, s6
 80184fa:	eef0 ba44 	vmov.f32	s23, s8
 80184fe:	eeb0 ba64 	vmov.f32	s22, s9
 8018502:	eef0 aa45 	vmov.f32	s21, s10
 8018506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018508:	2b00      	cmp	r3, #0
 801850a:	dc03      	bgt.n	8018514 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801850c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801850e:	2b00      	cmp	r3, #0
 8018510:	f340 83b4 	ble.w	8018c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018514:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018516:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801851a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801851e:	1e48      	subs	r0, r1, #1
 8018520:	1e55      	subs	r5, r2, #1
 8018522:	9b06      	ldr	r3, [sp, #24]
 8018524:	2b00      	cmp	r3, #0
 8018526:	f340 8163 	ble.w	80187f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801852a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801852c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801852e:	1436      	asrs	r6, r6, #16
 8018530:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018534:	d406      	bmi.n	8018544 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018536:	4286      	cmp	r6, r0
 8018538:	da04      	bge.n	8018544 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801853a:	2b00      	cmp	r3, #0
 801853c:	db02      	blt.n	8018544 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801853e:	42ab      	cmp	r3, r5
 8018540:	f2c0 8157 	blt.w	80187f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018544:	3601      	adds	r6, #1
 8018546:	f100 8144 	bmi.w	80187d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801854a:	42b1      	cmp	r1, r6
 801854c:	f2c0 8141 	blt.w	80187d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018550:	3301      	adds	r3, #1
 8018552:	f100 813e 	bmi.w	80187d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018556:	429a      	cmp	r2, r3
 8018558:	f2c0 813b 	blt.w	80187d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801855c:	9b06      	ldr	r3, [sp, #24]
 801855e:	9f07      	ldr	r7, [sp, #28]
 8018560:	930f      	str	r3, [sp, #60]	; 0x3c
 8018562:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018566:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018568:	2b00      	cmp	r3, #0
 801856a:	f340 8164 	ble.w	8018836 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801856e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018570:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018572:	1418      	asrs	r0, r3, #16
 8018574:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018576:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801857a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801857c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018580:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018582:	142d      	asrs	r5, r5, #16
 8018584:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018588:	f100 81ee 	bmi.w	8018968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801858c:	f102 3eff 	add.w	lr, r2, #4294967295
 8018590:	4575      	cmp	r5, lr
 8018592:	f280 81e9 	bge.w	8018968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018596:	2800      	cmp	r0, #0
 8018598:	f2c0 81e6 	blt.w	8018968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801859c:	f103 3eff 	add.w	lr, r3, #4294967295
 80185a0:	4570      	cmp	r0, lr
 80185a2:	f280 81e1 	bge.w	8018968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80185a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185a8:	b212      	sxth	r2, r2
 80185aa:	fb00 5002 	mla	r0, r0, r2, r5
 80185ae:	fa1f fe81 	uxth.w	lr, r1
 80185b2:	eb03 0a00 	add.w	sl, r3, r0
 80185b6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80185ba:	f813 9000 	ldrb.w	r9, [r3, r0]
 80185be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80185c2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80185c6:	b29b      	uxth	r3, r3
 80185c8:	f1bc 0f00 	cmp.w	ip, #0
 80185cc:	f000 8179 	beq.w	80188c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80185d0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80185d4:	940a      	str	r4, [sp, #40]	; 0x28
 80185d6:	eb0a 0b02 	add.w	fp, sl, r2
 80185da:	fa1f fa8c 	uxth.w	sl, ip
 80185de:	fb0a fe0e 	mul.w	lr, sl, lr
 80185e2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80185e6:	fa1f fa8a 	uxth.w	sl, sl
 80185ea:	eba5 050e 	sub.w	r5, r5, lr
 80185ee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80185f2:	940b      	str	r4, [sp, #44]	; 0x2c
 80185f4:	eba3 030a 	sub.w	r3, r3, sl
 80185f8:	b2ad      	uxth	r5, r5
 80185fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80185fc:	b29b      	uxth	r3, r3
 80185fe:	fb08 f505 	mul.w	r5, r8, r5
 8018602:	fb09 5303 	mla	r3, r9, r3, r5
 8018606:	fb0a 3304 	mla	r3, sl, r4, r3
 801860a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801860c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018610:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018614:	2b00      	cmp	r3, #0
 8018616:	f000 80cf 	beq.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801861a:	9c08      	ldr	r4, [sp, #32]
 801861c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018620:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018624:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018628:	f000 8150 	beq.w	80188cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801862c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018630:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018634:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018638:	fb09 f000 	mul.w	r0, r9, r0
 801863c:	fb0a fe0e 	mul.w	lr, sl, lr
 8018640:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018644:	f100 0b20 	add.w	fp, r0, #32
 8018648:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801864c:	44ce      	add	lr, r9
 801864e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018652:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018656:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801865a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801865e:	ea4e 0909 	orr.w	r9, lr, r9
 8018662:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018666:	8868      	ldrh	r0, [r5, #2]
 8018668:	d019      	beq.n	801869e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801866a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801866e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018672:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018676:	fb08 f800 	mul.w	r8, r8, r0
 801867a:	fb0a fe0e 	mul.w	lr, sl, lr
 801867e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8018682:	f108 0b20 	add.w	fp, r8, #32
 8018686:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801868a:	4486      	add	lr, r0
 801868c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8018690:	0a00      	lsrs	r0, r0, #8
 8018692:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018696:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801869a:	ea4e 0000 	orr.w	r0, lr, r0
 801869e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80186a2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80186a6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80186aa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80186ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80186b6:	ea4e 0909 	orr.w	r9, lr, r9
 80186ba:	ea4a 0000 	orr.w	r0, sl, r0
 80186be:	f1bc 0f00 	cmp.w	ip, #0
 80186c2:	f000 8105 	beq.w	80188d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80186c6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80186ca:	3a01      	subs	r2, #1
 80186cc:	0052      	lsls	r2, r2, #1
 80186ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80186d0:	3202      	adds	r2, #2
 80186d2:	2cff      	cmp	r4, #255	; 0xff
 80186d4:	eb05 0e02 	add.w	lr, r5, r2
 80186d8:	5aaa      	ldrh	r2, [r5, r2]
 80186da:	d018      	beq.n	801870e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80186dc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80186e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80186e4:	fb04 fa02 	mul.w	sl, r4, r2
 80186e8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80186ec:	fb08 f805 	mul.w	r8, r8, r5
 80186f0:	f10a 0520 	add.w	r5, sl, #32
 80186f4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80186f8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80186fc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018700:	4442      	add	r2, r8
 8018702:	0a2d      	lsrs	r5, r5, #8
 8018704:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018708:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801870c:	432a      	orrs	r2, r5
 801870e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018710:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018714:	2cff      	cmp	r4, #255	; 0xff
 8018716:	d01a      	beq.n	801874e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018718:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801871c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018720:	fb04 fa05 	mul.w	sl, r4, r5
 8018724:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018728:	fb08 f80e 	mul.w	r8, r8, lr
 801872c:	f10a 0e20 	add.w	lr, sl, #32
 8018730:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018734:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018738:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801873c:	4445      	add	r5, r8
 801873e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018742:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018746:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801874a:	ea45 050e 	orr.w	r5, r5, lr
 801874e:	fb1c fe01 	smulbb	lr, ip, r1
 8018752:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018756:	f1cc 0810 	rsb	r8, ip, #16
 801875a:	eba8 0801 	sub.w	r8, r8, r1
 801875e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018762:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018766:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801876a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801876e:	4341      	muls	r1, r0
 8018770:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018774:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018778:	ea4a 0202 	orr.w	r2, sl, r2
 801877c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018780:	fb09 1108 	mla	r1, r9, r8, r1
 8018784:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018788:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801878c:	fb0c 1102 	mla	r1, ip, r2, r1
 8018790:	ea4b 0505 	orr.w	r5, fp, r5
 8018794:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018798:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801879c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80187a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187a4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80187a8:	ea42 0e0e 	orr.w	lr, r2, lr
 80187ac:	fa1f f28e 	uxth.w	r2, lr
 80187b0:	2bff      	cmp	r3, #255	; 0xff
 80187b2:	f040 80a1 	bne.w	80188f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80187b6:	803a      	strh	r2, [r7, #0]
 80187b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80187ba:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80187bc:	4413      	add	r3, r2
 80187be:	9325      	str	r3, [sp, #148]	; 0x94
 80187c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80187c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80187c4:	441a      	add	r2, r3
 80187c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80187c8:	9226      	str	r2, [sp, #152]	; 0x98
 80187ca:	3b01      	subs	r3, #1
 80187cc:	3702      	adds	r7, #2
 80187ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80187d0:	e6c9      	b.n	8018566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80187d2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80187d4:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80187d6:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80187d8:	4433      	add	r3, r6
 80187da:	9325      	str	r3, [sp, #148]	; 0x94
 80187dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80187de:	441c      	add	r4, r3
 80187e0:	9b06      	ldr	r3, [sp, #24]
 80187e2:	9426      	str	r4, [sp, #152]	; 0x98
 80187e4:	3b01      	subs	r3, #1
 80187e6:	9306      	str	r3, [sp, #24]
 80187e8:	9b07      	ldr	r3, [sp, #28]
 80187ea:	3302      	adds	r3, #2
 80187ec:	9307      	str	r3, [sp, #28]
 80187ee:	e698      	b.n	8018522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187f0:	d028      	beq.n	8018844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80187f2:	9b06      	ldr	r3, [sp, #24]
 80187f4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80187f6:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80187f8:	3b01      	subs	r3, #1
 80187fa:	fb00 5003 	mla	r0, r0, r3, r5
 80187fe:	1400      	asrs	r0, r0, #16
 8018800:	f53f aeac 	bmi.w	801855c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018804:	3901      	subs	r1, #1
 8018806:	4288      	cmp	r0, r1
 8018808:	f6bf aea8 	bge.w	801855c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801880c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801880e:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018810:	fb01 0303 	mla	r3, r1, r3, r0
 8018814:	141b      	asrs	r3, r3, #16
 8018816:	f53f aea1 	bmi.w	801855c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801881a:	3a01      	subs	r2, #1
 801881c:	4293      	cmp	r3, r2
 801881e:	f6bf ae9d 	bge.w	801855c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018822:	9b06      	ldr	r3, [sp, #24]
 8018824:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018828:	930f      	str	r3, [sp, #60]	; 0x3c
 801882a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801882e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018830:	2b00      	cmp	r3, #0
 8018832:	f300 80b6 	bgt.w	80189a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8018836:	9b06      	ldr	r3, [sp, #24]
 8018838:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801883c:	9b07      	ldr	r3, [sp, #28]
 801883e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018842:	9307      	str	r3, [sp, #28]
 8018844:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018846:	2b00      	cmp	r3, #0
 8018848:	f340 8218 	ble.w	8018c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801884c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018850:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018854:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018858:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801885a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801885e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018862:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018866:	eef0 6a48 	vmov.f32	s13, s16
 801886a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801886e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018872:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018876:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801887a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801887e:	eef0 6a68 	vmov.f32	s13, s17
 8018882:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018886:	ee18 2a10 	vmov	r2, s16
 801888a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801888e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018892:	ee18 2a90 	vmov	r2, s17
 8018896:	9327      	str	r3, [sp, #156]	; 0x9c
 8018898:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801889a:	fb92 f3f3 	sdiv	r3, r2, r3
 801889e:	9328      	str	r3, [sp, #160]	; 0xa0
 80188a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80188a4:	3b01      	subs	r3, #1
 80188a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188aa:	930e      	str	r3, [sp, #56]	; 0x38
 80188ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188ae:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80188b2:	bf08      	it	eq
 80188b4:	4613      	moveq	r3, r2
 80188b6:	9306      	str	r3, [sp, #24]
 80188b8:	eef0 8a67 	vmov.f32	s17, s15
 80188bc:	eeb0 8a47 	vmov.f32	s16, s14
 80188c0:	e621      	b.n	8018506 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80188c2:	fb08 f505 	mul.w	r5, r8, r5
 80188c6:	fb09 5303 	mla	r3, r9, r3, r5
 80188ca:	e6a1      	b.n	8018610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80188cc:	4681      	mov	r9, r0
 80188ce:	e6c8      	b.n	8018662 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80188d0:	f1c1 0210 	rsb	r2, r1, #16
 80188d4:	4341      	muls	r1, r0
 80188d6:	fb09 1902 	mla	r9, r9, r2, r1
 80188da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80188de:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80188e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80188e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80188ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80188ee:	ea42 0909 	orr.w	r9, r2, r9
 80188f2:	fa1f f289 	uxth.w	r2, r9
 80188f6:	e75b      	b.n	80187b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188f8:	f8b7 c000 	ldrh.w	ip, [r7]
 80188fc:	43db      	mvns	r3, r3
 80188fe:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018902:	fa5f fe83 	uxtb.w	lr, r3
 8018906:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801890a:	fb00 f00e 	mul.w	r0, r0, lr
 801890e:	1c41      	adds	r1, r0, #1
 8018910:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018914:	1211      	asrs	r1, r2, #8
 8018916:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801891a:	f021 0107 	bic.w	r1, r1, #7
 801891e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018922:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018926:	48d8      	ldr	r0, [pc, #864]	; (8018c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018928:	fb05 f50e 	mul.w	r5, r5, lr
 801892c:	b2c9      	uxtb	r1, r1
 801892e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8018932:	1c69      	adds	r1, r5, #1
 8018934:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018938:	10d1      	asrs	r1, r2, #3
 801893a:	f021 0103 	bic.w	r1, r1, #3
 801893e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018942:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018946:	b2db      	uxtb	r3, r3
 8018948:	00c9      	lsls	r1, r1, #3
 801894a:	fb03 f30e 	mul.w	r3, r3, lr
 801894e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018952:	4301      	orrs	r1, r0
 8018954:	1c58      	adds	r0, r3, #1
 8018956:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801895a:	00d2      	lsls	r2, r2, #3
 801895c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018960:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018964:	430a      	orrs	r2, r1
 8018966:	e726      	b.n	80187b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018968:	f115 0e01 	adds.w	lr, r5, #1
 801896c:	f53f af24 	bmi.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018970:	4572      	cmp	r2, lr
 8018972:	f6ff af21 	blt.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018976:	f110 0e01 	adds.w	lr, r0, #1
 801897a:	f53f af1d 	bmi.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801897e:	4573      	cmp	r3, lr
 8018980:	f6ff af1a 	blt.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018984:	b21b      	sxth	r3, r3
 8018986:	b212      	sxth	r2, r2
 8018988:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801898c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8018990:	9301      	str	r3, [sp, #4]
 8018992:	9200      	str	r2, [sp, #0]
 8018994:	4639      	mov	r1, r7
 8018996:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801899a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801899c:	f7ff fbf4 	bl	8018188 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80189a0:	e70a      	b.n	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80189a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80189a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80189a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80189aa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80189ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80189b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80189b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80189b6:	141f      	asrs	r7, r3, #16
 80189b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80189ba:	141b      	asrs	r3, r3, #16
 80189bc:	fb01 3707 	mla	r7, r1, r7, r3
 80189c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189c2:	fa1f fc82 	uxth.w	ip, r2
 80189c6:	eb03 0a07 	add.w	sl, r3, r7
 80189ca:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80189ce:	f813 9007 	ldrb.w	r9, [r3, r7]
 80189d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80189d6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80189da:	b29b      	uxth	r3, r3
 80189dc:	2d00      	cmp	r5, #0
 80189de:	f000 80fe 	beq.w	8018bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80189e2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80189e6:	940c      	str	r4, [sp, #48]	; 0x30
 80189e8:	eb0a 0b01 	add.w	fp, sl, r1
 80189ec:	fa1f fa85 	uxth.w	sl, r5
 80189f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80189f4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80189f8:	fa1f fa8a 	uxth.w	sl, sl
 80189fc:	eba0 000c 	sub.w	r0, r0, ip
 8018a00:	eba3 030a 	sub.w	r3, r3, sl
 8018a04:	b280      	uxth	r0, r0
 8018a06:	fb08 f000 	mul.w	r0, r8, r0
 8018a0a:	b29b      	uxth	r3, r3
 8018a0c:	fb09 0303 	mla	r3, r9, r3, r0
 8018a10:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018a12:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018a16:	940d      	str	r4, [sp, #52]	; 0x34
 8018a18:	fb0a 3300 	mla	r3, sl, r0, r3
 8018a1c:	fb0c 3304 	mla	r3, ip, r4, r3
 8018a20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a24:	2b00      	cmp	r3, #0
 8018a26:	f000 80cc 	beq.w	8018bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018a2a:	9808      	ldr	r0, [sp, #32]
 8018a2c:	9c08      	ldr	r4, [sp, #32]
 8018a2e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018a32:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018a36:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018a3a:	f000 80d5 	beq.w	8018be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8018a3e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018a42:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018a46:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018a4a:	fb09 f707 	mul.w	r7, r9, r7
 8018a4e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a52:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018a56:	f107 0b20 	add.w	fp, r7, #32
 8018a5a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018a5e:	44cc      	add	ip, r9
 8018a60:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018a64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018a68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018a6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a70:	ea4c 0909 	orr.w	r9, ip, r9
 8018a74:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018a78:	8847      	ldrh	r7, [r0, #2]
 8018a7a:	d019      	beq.n	8018ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8018a7c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018a80:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018a84:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018a88:	fb08 f807 	mul.w	r8, r8, r7
 8018a8c:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a90:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018a94:	f108 0b20 	add.w	fp, r8, #32
 8018a98:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018a9c:	44bc      	add	ip, r7
 8018a9e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018aa2:	0a3f      	lsrs	r7, r7, #8
 8018aa4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018aa8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018aac:	ea4c 0707 	orr.w	r7, ip, r7
 8018ab0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018ab4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018ab8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018abc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018ac0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018ac4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018ac8:	ea4c 0909 	orr.w	r9, ip, r9
 8018acc:	ea4a 0707 	orr.w	r7, sl, r7
 8018ad0:	2d00      	cmp	r5, #0
 8018ad2:	f000 808b 	beq.w	8018bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8018ad6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018ada:	3901      	subs	r1, #1
 8018adc:	0049      	lsls	r1, r1, #1
 8018ade:	3102      	adds	r1, #2
 8018ae0:	eb00 0c01 	add.w	ip, r0, r1
 8018ae4:	5a41      	ldrh	r1, [r0, r1]
 8018ae6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018ae8:	28ff      	cmp	r0, #255	; 0xff
 8018aea:	d019      	beq.n	8018b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8018aec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018aee:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018af2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018af6:	fb04 fa01 	mul.w	sl, r4, r1
 8018afa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018afe:	fb08 f800 	mul.w	r8, r8, r0
 8018b02:	f10a 0020 	add.w	r0, sl, #32
 8018b06:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018b0a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018b0e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b12:	4441      	add	r1, r8
 8018b14:	0a00      	lsrs	r0, r0, #8
 8018b16:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018b1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b1e:	4301      	orrs	r1, r0
 8018b20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018b22:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018b26:	2cff      	cmp	r4, #255	; 0xff
 8018b28:	d01a      	beq.n	8018b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8018b2a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018b2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b32:	fb04 fa00 	mul.w	sl, r4, r0
 8018b36:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b3a:	fb08 f80c 	mul.w	r8, r8, ip
 8018b3e:	f10a 0c20 	add.w	ip, sl, #32
 8018b42:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018b46:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018b4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b4e:	4440      	add	r0, r8
 8018b50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b54:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018b58:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018b5c:	ea40 000c 	orr.w	r0, r0, ip
 8018b60:	fb15 fc02 	smulbb	ip, r5, r2
 8018b64:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018b68:	f1c5 0810 	rsb	r8, r5, #16
 8018b6c:	eba8 0802 	sub.w	r8, r8, r2
 8018b70:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018b74:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018b78:	437a      	muls	r2, r7
 8018b7a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018b7e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018b82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018b8a:	fb09 2208 	mla	r2, r9, r8, r2
 8018b8e:	ea4a 0101 	orr.w	r1, sl, r1
 8018b92:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018b96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b9e:	fb05 2201 	mla	r2, r5, r1, r2
 8018ba2:	ea4b 0000 	orr.w	r0, fp, r0
 8018ba6:	fb0c 2200 	mla	r2, ip, r0, r2
 8018baa:	0d57      	lsrs	r7, r2, #21
 8018bac:	0952      	lsrs	r2, r2, #5
 8018bae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018bb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018bb6:	433a      	orrs	r2, r7
 8018bb8:	2bff      	cmp	r3, #255	; 0xff
 8018bba:	b292      	uxth	r2, r2
 8018bbc:	d127      	bne.n	8018c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018bbe:	f8ae 2000 	strh.w	r2, [lr]
 8018bc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018bc4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018bc6:	4413      	add	r3, r2
 8018bc8:	9325      	str	r3, [sp, #148]	; 0x94
 8018bca:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018bcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bce:	441a      	add	r2, r3
 8018bd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018bd2:	9226      	str	r2, [sp, #152]	; 0x98
 8018bd4:	3b01      	subs	r3, #1
 8018bd6:	f10e 0e02 	add.w	lr, lr, #2
 8018bda:	930f      	str	r3, [sp, #60]	; 0x3c
 8018bdc:	e627      	b.n	801882e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8018bde:	fb08 f000 	mul.w	r0, r8, r0
 8018be2:	fb09 0303 	mla	r3, r9, r3, r0
 8018be6:	e71b      	b.n	8018a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8018be8:	46b9      	mov	r9, r7
 8018bea:	e743      	b.n	8018a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8018bec:	f1c2 0110 	rsb	r1, r2, #16
 8018bf0:	437a      	muls	r2, r7
 8018bf2:	fb09 2901 	mla	r9, r9, r1, r2
 8018bf6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018bfa:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018bfe:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018c02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c0a:	4302      	orrs	r2, r0
 8018c0c:	e7d4      	b.n	8018bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018c0e:	f8be 7000 	ldrh.w	r7, [lr]
 8018c12:	4c1d      	ldr	r4, [pc, #116]	; (8018c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018c14:	43db      	mvns	r3, r3
 8018c16:	1238      	asrs	r0, r7, #8
 8018c18:	fa5f fc83 	uxtb.w	ip, r3
 8018c1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c20:	10fd      	asrs	r5, r7, #3
 8018c22:	fb00 f00c 	mul.w	r0, r0, ip
 8018c26:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018c2a:	fb05 f10c 	mul.w	r1, r5, ip
 8018c2e:	1c45      	adds	r5, r0, #1
 8018c30:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c34:	1215      	asrs	r5, r2, #8
 8018c36:	f025 0507 	bic.w	r5, r5, #7
 8018c3a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c3e:	1c4d      	adds	r5, r1, #1
 8018c40:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018c44:	10d1      	asrs	r1, r2, #3
 8018c46:	f021 0103 	bic.w	r1, r1, #3
 8018c4a:	00fb      	lsls	r3, r7, #3
 8018c4c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018c50:	b2db      	uxtb	r3, r3
 8018c52:	b2c0      	uxtb	r0, r0
 8018c54:	00c9      	lsls	r1, r1, #3
 8018c56:	fb03 f30c 	mul.w	r3, r3, ip
 8018c5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018c5e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018c62:	4308      	orrs	r0, r1
 8018c64:	1c59      	adds	r1, r3, #1
 8018c66:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018c6a:	00d2      	lsls	r2, r2, #3
 8018c6c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018c70:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018c74:	4318      	orrs	r0, r3
 8018c76:	f8ae 0000 	strh.w	r0, [lr]
 8018c7a:	e7a2      	b.n	8018bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018c7c:	b013      	add	sp, #76	; 0x4c
 8018c7e:	ecbd 8b08 	vpop	{d8-d11}
 8018c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c86:	bf00      	nop
 8018c88:	fffff800 	.word	0xfffff800

08018c8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018c8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018c90:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018c94:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018c98:	f1bc 0f00 	cmp.w	ip, #0
 8018c9c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018ca0:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018ca4:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018ca8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018cac:	8808      	ldrh	r0, [r1, #0]
 8018cae:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018cb2:	db2f      	blt.n	8018d14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018cb4:	45e2      	cmp	sl, ip
 8018cb6:	dd2d      	ble.n	8018d14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018cb8:	2c00      	cmp	r4, #0
 8018cba:	db29      	blt.n	8018d10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018cbc:	42a3      	cmp	r3, r4
 8018cbe:	dd27      	ble.n	8018d10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018cc0:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018cc4:	1c62      	adds	r2, r4, #1
 8018cc6:	d428      	bmi.n	8018d1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018cc8:	4293      	cmp	r3, r2
 8018cca:	dd26      	ble.n	8018d1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018ccc:	b32f      	cbz	r7, 8018d1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018cce:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018cd2:	f11c 0c01 	adds.w	ip, ip, #1
 8018cd6:	d424      	bmi.n	8018d22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018cd8:	45e2      	cmp	sl, ip
 8018cda:	dd22      	ble.n	8018d22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018cdc:	2e00      	cmp	r6, #0
 8018cde:	f000 809d 	beq.w	8018e1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018ce2:	2c00      	cmp	r4, #0
 8018ce4:	db1b      	blt.n	8018d1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018ce6:	42a3      	cmp	r3, r4
 8018ce8:	dd19      	ble.n	8018d1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018cea:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018cee:	3401      	adds	r4, #1
 8018cf0:	d41a      	bmi.n	8018d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018cf2:	42a3      	cmp	r3, r4
 8018cf4:	dd18      	ble.n	8018d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018cf6:	b1cf      	cbz	r7, 8018d2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018cf8:	3301      	adds	r3, #1
 8018cfa:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018cfe:	2f0f      	cmp	r7, #15
 8018d00:	d915      	bls.n	8018d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018d02:	4b49      	ldr	r3, [pc, #292]	; (8018e28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018d04:	4a49      	ldr	r2, [pc, #292]	; (8018e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018d06:	484a      	ldr	r0, [pc, #296]	; (8018e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018d08:	f240 11db 	movw	r1, #475	; 0x1db
 8018d0c:	f002 ffc2 	bl	801bc94 <__assert_func>
 8018d10:	4681      	mov	r9, r0
 8018d12:	e7d7      	b.n	8018cc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018d14:	4686      	mov	lr, r0
 8018d16:	4681      	mov	r9, r0
 8018d18:	e7db      	b.n	8018cd2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018d1a:	4686      	mov	lr, r0
 8018d1c:	e7d9      	b.n	8018cd2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018d1e:	4684      	mov	ip, r0
 8018d20:	e7e5      	b.n	8018cee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018d22:	4603      	mov	r3, r0
 8018d24:	4684      	mov	ip, r0
 8018d26:	e7ea      	b.n	8018cfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018d28:	4603      	mov	r3, r0
 8018d2a:	e7e8      	b.n	8018cfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018d2c:	4603      	mov	r3, r0
 8018d2e:	2e0f      	cmp	r6, #15
 8018d30:	d8e7      	bhi.n	8018d02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018d32:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018d36:	fb17 f806 	smulbb	r8, r7, r6
 8018d3a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d3e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018d42:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018d46:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018d4a:	ea44 0909 	orr.w	r9, r4, r9
 8018d4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d52:	f1c6 0410 	rsb	r4, r6, #16
 8018d56:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018d5a:	1be4      	subs	r4, r4, r7
 8018d5c:	041a      	lsls	r2, r3, #16
 8018d5e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018d62:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018d66:	fb07 fe0e 	mul.w	lr, r7, lr
 8018d6a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d6e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018d72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d76:	fb04 e409 	mla	r4, r4, r9, lr
 8018d7a:	4313      	orrs	r3, r2
 8018d7c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018d80:	fb08 4303 	mla	r3, r8, r3, r4
 8018d84:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d88:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018d8c:	4322      	orrs	r2, r4
 8018d8e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018d92:	fb06 3202 	mla	r2, r6, r2, r3
 8018d96:	0d53      	lsrs	r3, r2, #21
 8018d98:	0952      	lsrs	r2, r2, #5
 8018d9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018da2:	431a      	orrs	r2, r3
 8018da4:	b293      	uxth	r3, r2
 8018da6:	b2af      	uxth	r7, r5
 8018da8:	1202      	asrs	r2, r0, #8
 8018daa:	43ed      	mvns	r5, r5
 8018dac:	b2ed      	uxtb	r5, r5
 8018dae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018db2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018db6:	fb12 f205 	smulbb	r2, r2, r5
 8018dba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018dbe:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018dc2:	00dc      	lsls	r4, r3, #3
 8018dc4:	10da      	asrs	r2, r3, #3
 8018dc6:	10c6      	asrs	r6, r0, #3
 8018dc8:	00c3      	lsls	r3, r0, #3
 8018dca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018dce:	b2db      	uxtb	r3, r3
 8018dd0:	fb16 f605 	smulbb	r6, r6, r5
 8018dd4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018dd8:	b2e4      	uxtb	r4, r4
 8018dda:	fb13 f305 	smulbb	r3, r3, r5
 8018dde:	fa1f fc8c 	uxth.w	ip, ip
 8018de2:	fb02 6207 	mla	r2, r2, r7, r6
 8018de6:	fb04 3307 	mla	r3, r4, r7, r3
 8018dea:	b296      	uxth	r6, r2
 8018dec:	b29a      	uxth	r2, r3
 8018dee:	f10c 0301 	add.w	r3, ip, #1
 8018df2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018df6:	1c53      	adds	r3, r2, #1
 8018df8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018dfc:	1c72      	adds	r2, r6, #1
 8018dfe:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018e02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e0a:	0952      	lsrs	r2, r2, #5
 8018e0c:	ea43 030c 	orr.w	r3, r3, ip
 8018e10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e14:	4313      	orrs	r3, r2
 8018e16:	800b      	strh	r3, [r1, #0]
 8018e18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e1c:	2f0f      	cmp	r7, #15
 8018e1e:	f63f af70 	bhi.w	8018d02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018e22:	4603      	mov	r3, r0
 8018e24:	4684      	mov	ip, r0
 8018e26:	e784      	b.n	8018d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018e28:	0801fc17 	.word	0x0801fc17
 8018e2c:	080201ef 	.word	0x080201ef
 8018e30:	0801fbe4 	.word	0x0801fbe4

08018e34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e38:	ed2d 8b08 	vpush	{d8-d11}
 8018e3c:	b093      	sub	sp, #76	; 0x4c
 8018e3e:	461d      	mov	r5, r3
 8018e40:	9210      	str	r2, [sp, #64]	; 0x40
 8018e42:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e44:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018e48:	920b      	str	r2, [sp, #44]	; 0x2c
 8018e4a:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018e4e:	910a      	str	r1, [sp, #40]	; 0x28
 8018e50:	6859      	ldr	r1, [r3, #4]
 8018e52:	681b      	ldr	r3, [r3, #0]
 8018e54:	9011      	str	r0, [sp, #68]	; 0x44
 8018e56:	fb01 2707 	mla	r7, r1, r7, r2
 8018e5a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018e5e:	9307      	str	r3, [sp, #28]
 8018e60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018e62:	681b      	ldr	r3, [r3, #0]
 8018e64:	9309      	str	r3, [sp, #36]	; 0x24
 8018e66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e68:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018e6c:	43db      	mvns	r3, r3
 8018e6e:	b2db      	uxtb	r3, r3
 8018e70:	eeb0 aa40 	vmov.f32	s20, s0
 8018e74:	eef0 9a60 	vmov.f32	s19, s1
 8018e78:	eeb0 9a41 	vmov.f32	s18, s2
 8018e7c:	eeb0 8a62 	vmov.f32	s16, s5
 8018e80:	eef0 8a43 	vmov.f32	s17, s6
 8018e84:	eef0 ba44 	vmov.f32	s23, s8
 8018e88:	eeb0 ba64 	vmov.f32	s22, s9
 8018e8c:	eef0 aa45 	vmov.f32	s21, s10
 8018e90:	9308      	str	r3, [sp, #32]
 8018e92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018e94:	2b00      	cmp	r3, #0
 8018e96:	dc03      	bgt.n	8018ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018e98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e9a:	2b00      	cmp	r3, #0
 8018e9c:	f340 8203 	ble.w	80192a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018ea0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ea2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ea6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018eaa:	1e48      	subs	r0, r1, #1
 8018eac:	f102 3cff 	add.w	ip, r2, #4294967295
 8018eb0:	2d00      	cmp	r5, #0
 8018eb2:	f340 80da 	ble.w	801906a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018eb6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018eba:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018ebe:	d406      	bmi.n	8018ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018ec0:	4586      	cmp	lr, r0
 8018ec2:	da04      	bge.n	8018ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018ec4:	2b00      	cmp	r3, #0
 8018ec6:	db02      	blt.n	8018ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018ec8:	4563      	cmp	r3, ip
 8018eca:	f2c0 80cf 	blt.w	801906c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018ece:	f11e 0e01 	adds.w	lr, lr, #1
 8018ed2:	f100 80c1 	bmi.w	8019058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018ed6:	4571      	cmp	r1, lr
 8018ed8:	f2c0 80be 	blt.w	8019058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018edc:	3301      	adds	r3, #1
 8018ede:	f100 80bb 	bmi.w	8019058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018ee2:	429a      	cmp	r2, r3
 8018ee4:	f2c0 80b8 	blt.w	8019058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018ee8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018eec:	46a9      	mov	r9, r5
 8018eee:	f1b9 0f00 	cmp.w	r9, #0
 8018ef2:	f340 80d8 	ble.w	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018ef6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ef8:	1421      	asrs	r1, r4, #16
 8018efa:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018efe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018f02:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018f06:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018f0a:	f100 8111 	bmi.w	8019130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f0e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018f12:	4551      	cmp	r1, sl
 8018f14:	f280 810c 	bge.w	8019130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f18:	2800      	cmp	r0, #0
 8018f1a:	f2c0 8109 	blt.w	8019130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f1e:	f103 3aff 	add.w	sl, r3, #4294967295
 8018f22:	4550      	cmp	r0, sl
 8018f24:	f280 8104 	bge.w	8019130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f28:	fa0f f38e 	sxth.w	r3, lr
 8018f2c:	fb00 1103 	mla	r1, r0, r3, r1
 8018f30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018f32:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018f36:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018f3a:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018f3e:	f1bc 0f00 	cmp.w	ip, #0
 8018f42:	d007      	beq.n	8018f54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018f44:	005b      	lsls	r3, r3, #1
 8018f46:	eb0a 0003 	add.w	r0, sl, r3
 8018f4a:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018f4e:	930c      	str	r3, [sp, #48]	; 0x30
 8018f50:	8843      	ldrh	r3, [r0, #2]
 8018f52:	930d      	str	r3, [sp, #52]	; 0x34
 8018f54:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018f58:	fb12 f30c 	smulbb	r3, r2, ip
 8018f5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018f60:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018f64:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f68:	10db      	asrs	r3, r3, #3
 8018f6a:	ea40 000e 	orr.w	r0, r0, lr
 8018f6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f72:	f1cc 0e10 	rsb	lr, ip, #16
 8018f76:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f7a:	ebae 0e02 	sub.w	lr, lr, r2
 8018f7e:	ea4a 0101 	orr.w	r1, sl, r1
 8018f82:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018f86:	4351      	muls	r1, r2
 8018f88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f8a:	9f08      	ldr	r7, [sp, #32]
 8018f8c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018f90:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018f94:	0410      	lsls	r0, r2, #16
 8018f96:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f9e:	4310      	orrs	r0, r2
 8018fa0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018fa2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018fa4:	0412      	lsls	r2, r2, #16
 8018fa6:	fb03 e000 	mla	r0, r3, r0, lr
 8018faa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018fae:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018fb2:	ea42 020e 	orr.w	r2, r2, lr
 8018fb6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018fba:	fb03 0302 	mla	r3, r3, r2, r0
 8018fbe:	0d5a      	lsrs	r2, r3, #21
 8018fc0:	095b      	lsrs	r3, r3, #5
 8018fc2:	f8b8 0000 	ldrh.w	r0, [r8]
 8018fc6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018fce:	4313      	orrs	r3, r2
 8018fd0:	b29b      	uxth	r3, r3
 8018fd2:	1201      	asrs	r1, r0, #8
 8018fd4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018fd8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018fdc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fe0:	fb11 f107 	smulbb	r1, r1, r7
 8018fe4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018fe8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018fec:	00c0      	lsls	r0, r0, #3
 8018fee:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018ff2:	b2c0      	uxtb	r0, r0
 8018ff4:	10d9      	asrs	r1, r3, #3
 8018ff6:	00db      	lsls	r3, r3, #3
 8018ff8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018ffc:	b2db      	uxtb	r3, r3
 8018ffe:	fb10 f007 	smulbb	r0, r0, r7
 8019002:	fa1f fc8c 	uxth.w	ip, ip
 8019006:	fb03 0302 	mla	r3, r3, r2, r0
 801900a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801900e:	fb1e fe07 	smulbb	lr, lr, r7
 8019012:	fb01 e102 	mla	r1, r1, r2, lr
 8019016:	b29a      	uxth	r2, r3
 8019018:	f10c 0301 	add.w	r3, ip, #1
 801901c:	b289      	uxth	r1, r1
 801901e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019022:	1c53      	adds	r3, r2, #1
 8019024:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019028:	1c4a      	adds	r2, r1, #1
 801902a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801902e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019032:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019036:	0949      	lsrs	r1, r1, #5
 8019038:	ea43 030c 	orr.w	r3, r3, ip
 801903c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019040:	430b      	orrs	r3, r1
 8019042:	f8a8 3000 	strh.w	r3, [r8]
 8019046:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019048:	441c      	add	r4, r3
 801904a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801904c:	f108 0802 	add.w	r8, r8, #2
 8019050:	441e      	add	r6, r3
 8019052:	f109 39ff 	add.w	r9, r9, #4294967295
 8019056:	e74a      	b.n	8018eee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8019058:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801905a:	441c      	add	r4, r3
 801905c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801905e:	441e      	add	r6, r3
 8019060:	9b07      	ldr	r3, [sp, #28]
 8019062:	3302      	adds	r3, #2
 8019064:	3d01      	subs	r5, #1
 8019066:	9307      	str	r3, [sp, #28]
 8019068:	e722      	b.n	8018eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801906a:	d022      	beq.n	80190b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801906c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801906e:	1e6b      	subs	r3, r5, #1
 8019070:	fb00 4003 	mla	r0, r0, r3, r4
 8019074:	1400      	asrs	r0, r0, #16
 8019076:	f53f af37 	bmi.w	8018ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801907a:	3901      	subs	r1, #1
 801907c:	4288      	cmp	r0, r1
 801907e:	f6bf af33 	bge.w	8018ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019082:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019084:	fb01 6303 	mla	r3, r1, r3, r6
 8019088:	141b      	asrs	r3, r3, #16
 801908a:	f53f af2d 	bmi.w	8018ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801908e:	3a01      	subs	r2, #1
 8019090:	4293      	cmp	r3, r2
 8019092:	f6bf af29 	bge.w	8018ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019096:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801909a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801909e:	46a8      	mov	r8, r5
 80190a0:	f1b8 0f00 	cmp.w	r8, #0
 80190a4:	dc5e      	bgt.n	8019164 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80190a6:	9b07      	ldr	r3, [sp, #28]
 80190a8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80190ac:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80190b0:	9307      	str	r3, [sp, #28]
 80190b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80190b4:	2b00      	cmp	r3, #0
 80190b6:	f340 80f6 	ble.w	80192a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80190ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80190be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80190c2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80190c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80190c8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80190cc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80190d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80190d4:	eef0 6a48 	vmov.f32	s13, s16
 80190d8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80190dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190e0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80190e4:	ee16 4a90 	vmov	r4, s13
 80190e8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80190ec:	eef0 6a68 	vmov.f32	s13, s17
 80190f0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80190f4:	ee18 2a10 	vmov	r2, s16
 80190f8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80190fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019100:	ee18 2a90 	vmov	r2, s17
 8019104:	9327      	str	r3, [sp, #156]	; 0x9c
 8019106:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019108:	fb92 f3f3 	sdiv	r3, r2, r3
 801910c:	9328      	str	r3, [sp, #160]	; 0xa0
 801910e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019110:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019112:	3b01      	subs	r3, #1
 8019114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019118:	930a      	str	r3, [sp, #40]	; 0x28
 801911a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801911c:	ee16 6a90 	vmov	r6, s13
 8019120:	bf14      	ite	ne
 8019122:	461d      	movne	r5, r3
 8019124:	4615      	moveq	r5, r2
 8019126:	eef0 8a67 	vmov.f32	s17, s15
 801912a:	eeb0 8a47 	vmov.f32	s16, s14
 801912e:	e6b0      	b.n	8018e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019130:	f111 0a01 	adds.w	sl, r1, #1
 8019134:	d487      	bmi.n	8019046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019136:	45d6      	cmp	lr, sl
 8019138:	db85      	blt.n	8019046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801913a:	f110 0a01 	adds.w	sl, r0, #1
 801913e:	d482      	bmi.n	8019046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019140:	4553      	cmp	r3, sl
 8019142:	db80      	blt.n	8019046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019144:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019146:	9101      	str	r1, [sp, #4]
 8019148:	b21b      	sxth	r3, r3
 801914a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801914e:	9300      	str	r3, [sp, #0]
 8019150:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019154:	fa0f f38e 	sxth.w	r3, lr
 8019158:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801915a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801915c:	4641      	mov	r1, r8
 801915e:	f7ff fd95 	bl	8018c8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8019162:	e770      	b.n	8019046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019164:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019166:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019168:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801916c:	1430      	asrs	r0, r6, #16
 801916e:	1423      	asrs	r3, r4, #16
 8019170:	fb01 3000 	mla	r0, r1, r0, r3
 8019174:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019176:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801917a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801917e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019182:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019186:	8858      	ldrh	r0, [r3, #2]
 8019188:	f1be 0f00 	cmp.w	lr, #0
 801918c:	d00b      	beq.n	80191a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801918e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019192:	3901      	subs	r1, #1
 8019194:	0049      	lsls	r1, r1, #1
 8019196:	3102      	adds	r1, #2
 8019198:	eb03 0b01 	add.w	fp, r3, r1
 801919c:	5a5b      	ldrh	r3, [r3, r1]
 801919e:	930e      	str	r3, [sp, #56]	; 0x38
 80191a0:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80191a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80191a6:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80191aa:	fb12 f30e 	smulbb	r3, r2, lr
 80191ae:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80191b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80191b6:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80191ba:	10db      	asrs	r3, r3, #3
 80191bc:	ea41 010c 	orr.w	r1, r1, ip
 80191c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80191c4:	f1ce 0c10 	rsb	ip, lr, #16
 80191c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191cc:	ebac 0c02 	sub.w	ip, ip, r2
 80191d0:	ea4b 0000 	orr.w	r0, fp, r0
 80191d4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80191d8:	4350      	muls	r0, r2
 80191da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80191dc:	9f08      	ldr	r7, [sp, #32]
 80191de:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80191e2:	fb0c 0c01 	mla	ip, ip, r1, r0
 80191e6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80191ea:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80191ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80191f0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80191f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80191f6:	0412      	lsls	r2, r2, #16
 80191f8:	ea4b 0101 	orr.w	r1, fp, r1
 80191fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019200:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019204:	fb03 c101 	mla	r1, r3, r1, ip
 8019208:	4302      	orrs	r2, r0
 801920a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801920e:	fb03 1202 	mla	r2, r3, r2, r1
 8019212:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8019216:	0952      	lsrs	r2, r2, #5
 8019218:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801921c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019220:	f8b9 2000 	ldrh.w	r2, [r9]
 8019224:	ea4b 0303 	orr.w	r3, fp, r3
 8019228:	b29b      	uxth	r3, r3
 801922a:	1211      	asrs	r1, r2, #8
 801922c:	1218      	asrs	r0, r3, #8
 801922e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019232:	fb11 f107 	smulbb	r1, r1, r7
 8019236:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801923a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801923e:	00d2      	lsls	r2, r2, #3
 8019240:	fb00 100a 	mla	r0, r0, sl, r1
 8019244:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019248:	10d9      	asrs	r1, r3, #3
 801924a:	b2d2      	uxtb	r2, r2
 801924c:	00db      	lsls	r3, r3, #3
 801924e:	fb1c fc07 	smulbb	ip, ip, r7
 8019252:	fb12 f207 	smulbb	r2, r2, r7
 8019256:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801925a:	b2db      	uxtb	r3, r3
 801925c:	b280      	uxth	r0, r0
 801925e:	fb01 c10a 	mla	r1, r1, sl, ip
 8019262:	fb03 230a 	mla	r3, r3, sl, r2
 8019266:	b29b      	uxth	r3, r3
 8019268:	b289      	uxth	r1, r1
 801926a:	1c42      	adds	r2, r0, #1
 801926c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019270:	f101 0c01 	add.w	ip, r1, #1
 8019274:	1c5a      	adds	r2, r3, #1
 8019276:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801927a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801927e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019280:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019284:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019288:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801928c:	4310      	orrs	r0, r2
 801928e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019292:	441c      	add	r4, r3
 8019294:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019296:	ea40 000c 	orr.w	r0, r0, ip
 801929a:	f829 0b02 	strh.w	r0, [r9], #2
 801929e:	441e      	add	r6, r3
 80192a0:	f108 38ff 	add.w	r8, r8, #4294967295
 80192a4:	e6fc      	b.n	80190a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80192a6:	b013      	add	sp, #76	; 0x4c
 80192a8:	ecbd 8b08 	vpop	{d8-d11}
 80192ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80192b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80192b4:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80192b8:	fb06 5c03 	mla	ip, r6, r3, r5
 80192bc:	2e00      	cmp	r6, #0
 80192be:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80192c2:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80192c6:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80192ca:	8808      	ldrh	r0, [r1, #0]
 80192cc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80192d0:	db2e      	blt.n	8019330 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80192d2:	45b0      	cmp	r8, r6
 80192d4:	dd2c      	ble.n	8019330 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80192d6:	2d00      	cmp	r5, #0
 80192d8:	db28      	blt.n	801932c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80192da:	42ab      	cmp	r3, r5
 80192dc:	dd26      	ble.n	801932c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80192de:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80192e2:	1c6a      	adds	r2, r5, #1
 80192e4:	d427      	bmi.n	8019336 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80192e6:	4293      	cmp	r3, r2
 80192e8:	dd25      	ble.n	8019336 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80192ea:	b324      	cbz	r4, 8019336 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80192ec:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80192f0:	3601      	adds	r6, #1
 80192f2:	d424      	bmi.n	801933e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80192f4:	45b0      	cmp	r8, r6
 80192f6:	dd22      	ble.n	801933e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80192f8:	b31f      	cbz	r7, 8019342 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80192fa:	2d00      	cmp	r5, #0
 80192fc:	db1d      	blt.n	801933a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80192fe:	42ab      	cmp	r3, r5
 8019300:	dd1b      	ble.n	801933a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019302:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8019306:	3501      	adds	r5, #1
 8019308:	d405      	bmi.n	8019316 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801930a:	42ab      	cmp	r3, r5
 801930c:	dd03      	ble.n	8019316 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801930e:	b124      	cbz	r4, 801931a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019310:	3301      	adds	r3, #1
 8019312:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8019316:	2c0f      	cmp	r4, #15
 8019318:	d801      	bhi.n	801931e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801931a:	2f0f      	cmp	r7, #15
 801931c:	d914      	bls.n	8019348 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801931e:	4b27      	ldr	r3, [pc, #156]	; (80193bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019320:	4a27      	ldr	r2, [pc, #156]	; (80193c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8019322:	4828      	ldr	r0, [pc, #160]	; (80193c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8019324:	f240 11db 	movw	r1, #475	; 0x1db
 8019328:	f002 fcb4 	bl	801bc94 <__assert_func>
 801932c:	4684      	mov	ip, r0
 801932e:	e7d8      	b.n	80192e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019330:	4602      	mov	r2, r0
 8019332:	4684      	mov	ip, r0
 8019334:	e7dc      	b.n	80192f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019336:	4602      	mov	r2, r0
 8019338:	e7da      	b.n	80192f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801933a:	4606      	mov	r6, r0
 801933c:	e7e3      	b.n	8019306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801933e:	4606      	mov	r6, r0
 8019340:	e7e9      	b.n	8019316 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019342:	2c0f      	cmp	r4, #15
 8019344:	d8eb      	bhi.n	801931e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019346:	4606      	mov	r6, r0
 8019348:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801934c:	fb14 f307 	smulbb	r3, r4, r7
 8019350:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019354:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019358:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801935c:	10db      	asrs	r3, r3, #3
 801935e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019362:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019366:	f1c7 0510 	rsb	r5, r7, #16
 801936a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801936e:	1b2d      	subs	r5, r5, r4
 8019370:	ea4e 0202 	orr.w	r2, lr, r2
 8019374:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019378:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801937c:	4354      	muls	r4, r2
 801937e:	fb05 450c 	mla	r5, r5, ip, r4
 8019382:	0404      	lsls	r4, r0, #16
 8019384:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019388:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801938c:	4320      	orrs	r0, r4
 801938e:	fb03 5400 	mla	r4, r3, r0, r5
 8019392:	0430      	lsls	r0, r6, #16
 8019394:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019398:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801939c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80193a0:	4330      	orrs	r0, r6
 80193a2:	fb07 4000 	mla	r0, r7, r0, r4
 80193a6:	0d43      	lsrs	r3, r0, #21
 80193a8:	0940      	lsrs	r0, r0, #5
 80193aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80193b2:	4318      	orrs	r0, r3
 80193b4:	8008      	strh	r0, [r1, #0]
 80193b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80193ba:	bf00      	nop
 80193bc:	0801fc17 	.word	0x0801fc17
 80193c0:	080201ef 	.word	0x080201ef
 80193c4:	0801fbe4 	.word	0x0801fbe4

080193c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193cc:	ed2d 8b08 	vpush	{d8-d11}
 80193d0:	b08f      	sub	sp, #60	; 0x3c
 80193d2:	461d      	mov	r5, r3
 80193d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80193d6:	920c      	str	r2, [sp, #48]	; 0x30
 80193d8:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80193dc:	9107      	str	r1, [sp, #28]
 80193de:	6859      	ldr	r1, [r3, #4]
 80193e0:	681b      	ldr	r3, [r3, #0]
 80193e2:	900d      	str	r0, [sp, #52]	; 0x34
 80193e4:	fb01 2707 	mla	r7, r1, r7, r2
 80193e8:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80193ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193ee:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80193f2:	f8d3 8000 	ldr.w	r8, [r3]
 80193f6:	eeb0 aa40 	vmov.f32	s20, s0
 80193fa:	eef0 9a60 	vmov.f32	s19, s1
 80193fe:	eeb0 9a41 	vmov.f32	s18, s2
 8019402:	eeb0 8a62 	vmov.f32	s16, s5
 8019406:	eef0 8a43 	vmov.f32	s17, s6
 801940a:	eef0 ba44 	vmov.f32	s23, s8
 801940e:	eeb0 ba64 	vmov.f32	s22, s9
 8019412:	eef0 aa45 	vmov.f32	s21, s10
 8019416:	9b07      	ldr	r3, [sp, #28]
 8019418:	2b00      	cmp	r3, #0
 801941a:	dc03      	bgt.n	8019424 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801941c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801941e:	2b00      	cmp	r3, #0
 8019420:	f340 8181 	ble.w	8019726 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019424:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019426:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801942a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801942e:	1e48      	subs	r0, r1, #1
 8019430:	f102 3cff 	add.w	ip, r2, #4294967295
 8019434:	2d00      	cmp	r5, #0
 8019436:	f340 809b 	ble.w	8019570 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801943a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801943e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019442:	d406      	bmi.n	8019452 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019444:	4586      	cmp	lr, r0
 8019446:	da04      	bge.n	8019452 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019448:	2b00      	cmp	r3, #0
 801944a:	db02      	blt.n	8019452 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801944c:	4563      	cmp	r3, ip
 801944e:	f2c0 8090 	blt.w	8019572 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8019452:	f11e 0e01 	adds.w	lr, lr, #1
 8019456:	f100 8084 	bmi.w	8019562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801945a:	4571      	cmp	r1, lr
 801945c:	f2c0 8081 	blt.w	8019562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019460:	3301      	adds	r3, #1
 8019462:	d47e      	bmi.n	8019562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019464:	429a      	cmp	r2, r3
 8019466:	db7c      	blt.n	8019562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019468:	46aa      	mov	sl, r5
 801946a:	46b9      	mov	r9, r7
 801946c:	f1ba 0f00 	cmp.w	sl, #0
 8019470:	f340 8099 	ble.w	80195a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8019474:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019476:	1421      	asrs	r1, r4, #16
 8019478:	ea4f 4026 	mov.w	r0, r6, asr #16
 801947c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019480:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019484:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019488:	f100 80d0 	bmi.w	801962c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801948c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019490:	4559      	cmp	r1, fp
 8019492:	f280 80cb 	bge.w	801962c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019496:	2800      	cmp	r0, #0
 8019498:	f2c0 80c8 	blt.w	801962c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801949c:	f103 3bff 	add.w	fp, r3, #4294967295
 80194a0:	4558      	cmp	r0, fp
 80194a2:	f280 80c3 	bge.w	801962c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80194a6:	fa0f fe8e 	sxth.w	lr, lr
 80194aa:	fb00 110e 	mla	r1, r0, lr, r1
 80194ae:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80194b2:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80194b6:	8841      	ldrh	r1, [r0, #2]
 80194b8:	f1bc 0f00 	cmp.w	ip, #0
 80194bc:	d00b      	beq.n	80194d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80194be:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80194c2:	3b01      	subs	r3, #1
 80194c4:	005b      	lsls	r3, r3, #1
 80194c6:	3302      	adds	r3, #2
 80194c8:	eb00 0e03 	add.w	lr, r0, r3
 80194cc:	5ac3      	ldrh	r3, [r0, r3]
 80194ce:	9308      	str	r3, [sp, #32]
 80194d0:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80194d4:	9309      	str	r3, [sp, #36]	; 0x24
 80194d6:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80194da:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80194de:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80194e2:	ea40 000b 	orr.w	r0, r0, fp
 80194e6:	fb12 f30c 	smulbb	r3, r2, ip
 80194ea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80194ee:	10db      	asrs	r3, r3, #3
 80194f0:	f1cc 0e10 	rsb	lr, ip, #16
 80194f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80194f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80194fc:	ebae 0e02 	sub.w	lr, lr, r2
 8019500:	ea4b 0101 	orr.w	r1, fp, r1
 8019504:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019508:	4351      	muls	r1, r2
 801950a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801950c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019510:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019514:	0410      	lsls	r0, r2, #16
 8019516:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801951a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801951e:	4310      	orrs	r0, r2
 8019520:	9a08      	ldr	r2, [sp, #32]
 8019522:	9908      	ldr	r1, [sp, #32]
 8019524:	0412      	lsls	r2, r2, #16
 8019526:	fb03 e000 	mla	r0, r3, r0, lr
 801952a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801952e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019532:	ea42 020e 	orr.w	r2, r2, lr
 8019536:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801953a:	fb03 0302 	mla	r3, r3, r2, r0
 801953e:	0d5a      	lsrs	r2, r3, #21
 8019540:	095b      	lsrs	r3, r3, #5
 8019542:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019546:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801954a:	4313      	orrs	r3, r2
 801954c:	f8a9 3000 	strh.w	r3, [r9]
 8019550:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019552:	441c      	add	r4, r3
 8019554:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019556:	f109 0902 	add.w	r9, r9, #2
 801955a:	441e      	add	r6, r3
 801955c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019560:	e784      	b.n	801946c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019562:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019564:	441c      	add	r4, r3
 8019566:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019568:	3d01      	subs	r5, #1
 801956a:	441e      	add	r6, r3
 801956c:	3702      	adds	r7, #2
 801956e:	e761      	b.n	8019434 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019570:	d01d      	beq.n	80195ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019572:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019574:	1e6b      	subs	r3, r5, #1
 8019576:	fb00 4003 	mla	r0, r0, r3, r4
 801957a:	1400      	asrs	r0, r0, #16
 801957c:	f53f af74 	bmi.w	8019468 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019580:	3901      	subs	r1, #1
 8019582:	4288      	cmp	r0, r1
 8019584:	f6bf af70 	bge.w	8019468 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019588:	9924      	ldr	r1, [sp, #144]	; 0x90
 801958a:	fb01 6303 	mla	r3, r1, r3, r6
 801958e:	141b      	asrs	r3, r3, #16
 8019590:	f53f af6a 	bmi.w	8019468 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019594:	3a01      	subs	r2, #1
 8019596:	4293      	cmp	r3, r2
 8019598:	f6bf af66 	bge.w	8019468 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801959c:	46a9      	mov	r9, r5
 801959e:	46ba      	mov	sl, r7
 80195a0:	f1b9 0f00 	cmp.w	r9, #0
 80195a4:	dc5a      	bgt.n	801965c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80195a6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80195aa:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80195ae:	9b07      	ldr	r3, [sp, #28]
 80195b0:	2b00      	cmp	r3, #0
 80195b2:	f340 80b8 	ble.w	8019726 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80195b6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80195ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195be:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80195c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80195c4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80195c8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80195cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80195d0:	eef0 6a48 	vmov.f32	s13, s16
 80195d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80195d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80195e0:	ee16 4a90 	vmov	r4, s13
 80195e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80195e8:	eef0 6a68 	vmov.f32	s13, s17
 80195ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80195f0:	ee18 2a10 	vmov	r2, s16
 80195f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80195f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80195fc:	ee18 2a90 	vmov	r2, s17
 8019600:	9323      	str	r3, [sp, #140]	; 0x8c
 8019602:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019604:	fb92 f3f3 	sdiv	r3, r2, r3
 8019608:	9324      	str	r3, [sp, #144]	; 0x90
 801960a:	9b07      	ldr	r3, [sp, #28]
 801960c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801960e:	3b01      	subs	r3, #1
 8019610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019614:	9307      	str	r3, [sp, #28]
 8019616:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019618:	ee16 6a90 	vmov	r6, s13
 801961c:	bf14      	ite	ne
 801961e:	461d      	movne	r5, r3
 8019620:	4615      	moveq	r5, r2
 8019622:	eef0 8a67 	vmov.f32	s17, s15
 8019626:	eeb0 8a47 	vmov.f32	s16, s14
 801962a:	e6f4      	b.n	8019416 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801962c:	f111 0b01 	adds.w	fp, r1, #1
 8019630:	d48e      	bmi.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019632:	45de      	cmp	lr, fp
 8019634:	db8c      	blt.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019636:	f110 0b01 	adds.w	fp, r0, #1
 801963a:	d489      	bmi.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801963c:	455b      	cmp	r3, fp
 801963e:	db87      	blt.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019640:	b21b      	sxth	r3, r3
 8019642:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8019646:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801964a:	9300      	str	r3, [sp, #0]
 801964c:	4642      	mov	r2, r8
 801964e:	fa0f f38e 	sxth.w	r3, lr
 8019652:	4649      	mov	r1, r9
 8019654:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019656:	f7ff fe2b 	bl	80192b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801965a:	e779      	b.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801965c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801965e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019662:	1420      	asrs	r0, r4, #16
 8019664:	1431      	asrs	r1, r6, #16
 8019666:	fb03 0101 	mla	r1, r3, r1, r0
 801966a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801966e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019672:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019676:	8841      	ldrh	r1, [r0, #2]
 8019678:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801967c:	f1be 0f00 	cmp.w	lr, #0
 8019680:	d00b      	beq.n	801969a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8019682:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019686:	3b01      	subs	r3, #1
 8019688:	005b      	lsls	r3, r3, #1
 801968a:	3302      	adds	r3, #2
 801968c:	eb00 0b03 	add.w	fp, r0, r3
 8019690:	5ac3      	ldrh	r3, [r0, r3]
 8019692:	930a      	str	r3, [sp, #40]	; 0x28
 8019694:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019698:	930b      	str	r3, [sp, #44]	; 0x2c
 801969a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801969e:	fb12 f30e 	smulbb	r3, r2, lr
 80196a2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80196a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80196aa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80196ae:	10db      	asrs	r3, r3, #3
 80196b0:	ea40 000c 	orr.w	r0, r0, ip
 80196b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80196b8:	f1ce 0c10 	rsb	ip, lr, #16
 80196bc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80196c0:	ebac 0c02 	sub.w	ip, ip, r2
 80196c4:	ea4b 0101 	orr.w	r1, fp, r1
 80196c8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80196cc:	4351      	muls	r1, r2
 80196ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80196d0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80196d4:	fb0c 1c00 	mla	ip, ip, r0, r1
 80196d8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80196dc:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80196e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80196e2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80196e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80196e8:	0412      	lsls	r2, r2, #16
 80196ea:	ea4b 0000 	orr.w	r0, fp, r0
 80196ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80196f2:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80196f6:	fb03 c000 	mla	r0, r3, r0, ip
 80196fa:	ea42 0b0b 	orr.w	fp, r2, fp
 80196fe:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019702:	fb03 000b 	mla	r0, r3, fp, r0
 8019706:	0d43      	lsrs	r3, r0, #21
 8019708:	0940      	lsrs	r0, r0, #5
 801970a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801970e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019712:	4318      	orrs	r0, r3
 8019714:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019716:	f82a 0b02 	strh.w	r0, [sl], #2
 801971a:	441c      	add	r4, r3
 801971c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801971e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019722:	441e      	add	r6, r3
 8019724:	e73c      	b.n	80195a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8019726:	b00f      	add	sp, #60	; 0x3c
 8019728:	ecbd 8b08 	vpop	{d8-d11}
 801972c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8019730:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019734:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8019738:	fb04 5603 	mla	r6, r4, r3, r5
 801973c:	2c00      	cmp	r4, #0
 801973e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019742:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8019746:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801974a:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801974e:	db36      	blt.n	80197be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019750:	45a6      	cmp	lr, r4
 8019752:	dd34      	ble.n	80197be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019754:	2d00      	cmp	r5, #0
 8019756:	db30      	blt.n	80197ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8019758:	42ab      	cmp	r3, r5
 801975a:	dd2e      	ble.n	80197ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801975c:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8019760:	1c6e      	adds	r6, r5, #1
 8019762:	d42f      	bmi.n	80197c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019764:	42b3      	cmp	r3, r6
 8019766:	dd2d      	ble.n	80197c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019768:	b370      	cbz	r0, 80197c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801976a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801976e:	3401      	adds	r4, #1
 8019770:	d42e      	bmi.n	80197d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8019772:	45a6      	cmp	lr, r4
 8019774:	dd2c      	ble.n	80197d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8019776:	b377      	cbz	r7, 80197d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8019778:	2d00      	cmp	r5, #0
 801977a:	db27      	blt.n	80197cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801977c:	42ab      	cmp	r3, r5
 801977e:	dd25      	ble.n	80197cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019780:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019784:	3501      	adds	r5, #1
 8019786:	d429      	bmi.n	80197dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8019788:	42ab      	cmp	r3, r5
 801978a:	dd27      	ble.n	80197dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801978c:	b340      	cbz	r0, 80197e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801978e:	3301      	adds	r3, #1
 8019790:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019794:	280f      	cmp	r0, #15
 8019796:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801979a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801979e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80197a2:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80197a6:	d801      	bhi.n	80197ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80197a8:	2f0f      	cmp	r7, #15
 80197aa:	d91b      	bls.n	80197e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80197ac:	4b8d      	ldr	r3, [pc, #564]	; (80199e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80197ae:	4a8e      	ldr	r2, [pc, #568]	; (80199e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80197b0:	488e      	ldr	r0, [pc, #568]	; (80199ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80197b2:	f240 11f9 	movw	r1, #505	; 0x1f9
 80197b6:	f002 fa6d 	bl	801bc94 <__assert_func>
 80197ba:	2200      	movs	r2, #0
 80197bc:	e7d0      	b.n	8019760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80197be:	2600      	movs	r6, #0
 80197c0:	4632      	mov	r2, r6
 80197c2:	e7d4      	b.n	801976e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80197c4:	2600      	movs	r6, #0
 80197c6:	e7d2      	b.n	801976e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80197c8:	4606      	mov	r6, r0
 80197ca:	e7d0      	b.n	801976e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80197cc:	2400      	movs	r4, #0
 80197ce:	e7d9      	b.n	8019784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80197d0:	2300      	movs	r3, #0
 80197d2:	461c      	mov	r4, r3
 80197d4:	e7de      	b.n	8019794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80197d6:	463b      	mov	r3, r7
 80197d8:	463c      	mov	r4, r7
 80197da:	e7db      	b.n	8019794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80197dc:	2300      	movs	r3, #0
 80197de:	e7d9      	b.n	8019794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80197e0:	4603      	mov	r3, r0
 80197e2:	e7d7      	b.n	8019794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80197e4:	b280      	uxth	r0, r0
 80197e6:	b2bf      	uxth	r7, r7
 80197e8:	fb07 fe00 	mul.w	lr, r7, r0
 80197ec:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80197f0:	0100      	lsls	r0, r0, #4
 80197f2:	eba0 0c0e 	sub.w	ip, r0, lr
 80197f6:	b2bf      	uxth	r7, r7
 80197f8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80197fc:	fa1f fc8c 	uxth.w	ip, ip
 8019800:	1bed      	subs	r5, r5, r7
 8019802:	b2ad      	uxth	r5, r5
 8019804:	fb0a f00c 	mul.w	r0, sl, ip
 8019808:	fb0b 0005 	mla	r0, fp, r5, r0
 801980c:	fb07 0009 	mla	r0, r7, r9, r0
 8019810:	fb0e 0008 	mla	r0, lr, r8, r0
 8019814:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019818:	9001      	str	r0, [sp, #4]
 801981a:	2800      	cmp	r0, #0
 801981c:	f000 80de 	beq.w	80199dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8019820:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019824:	d018      	beq.n	8019858 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8019826:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801982a:	fb0b f000 	mul.w	r0, fp, r0
 801982e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019832:	fb0b fb02 	mul.w	fp, fp, r2
 8019836:	0a02      	lsrs	r2, r0, #8
 8019838:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801983c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019840:	4402      	add	r2, r0
 8019842:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019846:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801984a:	0a12      	lsrs	r2, r2, #8
 801984c:	0a00      	lsrs	r0, r0, #8
 801984e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019852:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019856:	4302      	orrs	r2, r0
 8019858:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801985c:	d01a      	beq.n	8019894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801985e:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019862:	fb0a f000 	mul.w	r0, sl, r0
 8019866:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801986a:	fb0a fa06 	mul.w	sl, sl, r6
 801986e:	0a06      	lsrs	r6, r0, #8
 8019870:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019874:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019878:	4406      	add	r6, r0
 801987a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801987e:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8019882:	0a36      	lsrs	r6, r6, #8
 8019884:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019888:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801988c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019890:	ea46 060a 	orr.w	r6, r6, sl
 8019894:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019898:	d01b      	beq.n	80198d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 801989a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801989e:	fb09 fa0a 	mul.w	sl, r9, sl
 80198a2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80198a6:	fb09 f004 	mul.w	r0, r9, r4
 80198aa:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80198ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80198b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80198b6:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80198ba:	4454      	add	r4, sl
 80198bc:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80198c0:	0a24      	lsrs	r4, r4, #8
 80198c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80198c6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80198ca:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80198ce:	ea44 0409 	orr.w	r4, r4, r9
 80198d2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80198d6:	d01b      	beq.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80198d8:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80198dc:	fb08 f909 	mul.w	r9, r8, r9
 80198e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80198e4:	fb08 f003 	mul.w	r0, r8, r3
 80198e8:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80198ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198f0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80198f4:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80198f8:	444b      	add	r3, r9
 80198fa:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80198fe:	0a1b      	lsrs	r3, r3, #8
 8019900:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019904:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019908:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801990c:	ea43 0308 	orr.w	r3, r3, r8
 8019910:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019914:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019918:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801991c:	fb0c f808 	mul.w	r8, ip, r8
 8019920:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019924:	fb0c f606 	mul.w	r6, ip, r6
 8019928:	fb05 8909 	mla	r9, r5, r9, r8
 801992c:	fb05 6502 	mla	r5, r5, r2, r6
 8019930:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019934:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8019938:	9a01      	ldr	r2, [sp, #4]
 801993a:	8808      	ldrh	r0, [r1, #0]
 801993c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019940:	fb07 9908 	mla	r9, r7, r8, r9
 8019944:	fb07 5704 	mla	r7, r7, r4, r5
 8019948:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801994c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019950:	b2b6      	uxth	r6, r6
 8019952:	fb0e 9808 	mla	r8, lr, r8, r9
 8019956:	fb0e 7e03 	mla	lr, lr, r3, r7
 801995a:	4372      	muls	r2, r6
 801995c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019960:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019964:	1c53      	adds	r3, r2, #1
 8019966:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801996a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801996e:	ea48 0e0e 	orr.w	lr, r8, lr
 8019972:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019976:	1205      	asrs	r5, r0, #8
 8019978:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801997c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8019980:	b2db      	uxtb	r3, r3
 8019982:	fb12 f206 	smulbb	r2, r2, r6
 8019986:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801998a:	fb05 2503 	mla	r5, r5, r3, r2
 801998e:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8019992:	10c2      	asrs	r2, r0, #3
 8019994:	fa5f fe8e 	uxtb.w	lr, lr
 8019998:	00c0      	lsls	r0, r0, #3
 801999a:	fb14 f406 	smulbb	r4, r4, r6
 801999e:	b2c0      	uxtb	r0, r0
 80199a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80199a4:	fb1e fe06 	smulbb	lr, lr, r6
 80199a8:	fb02 4203 	mla	r2, r2, r3, r4
 80199ac:	b2ad      	uxth	r5, r5
 80199ae:	fb00 e303 	mla	r3, r0, r3, lr
 80199b2:	b298      	uxth	r0, r3
 80199b4:	b294      	uxth	r4, r2
 80199b6:	1c6b      	adds	r3, r5, #1
 80199b8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80199bc:	1c62      	adds	r2, r4, #1
 80199be:	1c43      	adds	r3, r0, #1
 80199c0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80199c4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80199c8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80199cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80199d0:	0952      	lsrs	r2, r2, #5
 80199d2:	432b      	orrs	r3, r5
 80199d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199d8:	4313      	orrs	r3, r2
 80199da:	800b      	strh	r3, [r1, #0]
 80199dc:	b003      	add	sp, #12
 80199de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199e2:	bf00      	nop
 80199e4:	0801fc17 	.word	0x0801fc17
 80199e8:	08020146 	.word	0x08020146
 80199ec:	0801fbe4 	.word	0x0801fbe4

080199f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f4:	ed2d 8b08 	vpush	{d8-d11}
 80199f8:	b09d      	sub	sp, #116	; 0x74
 80199fa:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80199fe:	9219      	str	r2, [sp, #100]	; 0x64
 8019a00:	9307      	str	r3, [sp, #28]
 8019a02:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019a04:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8019a08:	931a      	str	r3, [sp, #104]	; 0x68
 8019a0a:	9117      	str	r1, [sp, #92]	; 0x5c
 8019a0c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8019a10:	901b      	str	r0, [sp, #108]	; 0x6c
 8019a12:	6850      	ldr	r0, [r2, #4]
 8019a14:	6812      	ldr	r2, [r2, #0]
 8019a16:	fb00 1303 	mla	r3, r0, r3, r1
 8019a1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019a1e:	930a      	str	r3, [sp, #40]	; 0x28
 8019a20:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019a22:	681b      	ldr	r3, [r3, #0]
 8019a24:	9310      	str	r3, [sp, #64]	; 0x40
 8019a26:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019a2a:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a2c:	eeb0 aa40 	vmov.f32	s20, s0
 8019a30:	eef0 9a60 	vmov.f32	s19, s1
 8019a34:	eeb0 9a41 	vmov.f32	s18, s2
 8019a38:	eeb0 8a62 	vmov.f32	s16, s5
 8019a3c:	eef0 8a43 	vmov.f32	s17, s6
 8019a40:	eef0 ba44 	vmov.f32	s23, s8
 8019a44:	eeb0 ba64 	vmov.f32	s22, s9
 8019a48:	eef0 aa45 	vmov.f32	s21, s10
 8019a4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019a4e:	2b00      	cmp	r3, #0
 8019a50:	dc03      	bgt.n	8019a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a52:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019a54:	2b00      	cmp	r3, #0
 8019a56:	f340 8375 	ble.w	801a144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019a5a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019a5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a64:	1e48      	subs	r0, r1, #1
 8019a66:	1e57      	subs	r7, r2, #1
 8019a68:	9b07      	ldr	r3, [sp, #28]
 8019a6a:	2b00      	cmp	r3, #0
 8019a6c:	f340 818e 	ble.w	8019d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8019a70:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019a74:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a78:	d406      	bmi.n	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a7a:	4584      	cmp	ip, r0
 8019a7c:	da04      	bge.n	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a7e:	2b00      	cmp	r3, #0
 8019a80:	db02      	blt.n	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a82:	42bb      	cmp	r3, r7
 8019a84:	f2c0 8183 	blt.w	8019d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019a88:	f11c 0c01 	adds.w	ip, ip, #1
 8019a8c:	f100 8173 	bmi.w	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019a90:	4561      	cmp	r1, ip
 8019a92:	f2c0 8170 	blt.w	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019a96:	3301      	adds	r3, #1
 8019a98:	f100 816d 	bmi.w	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019a9c:	429a      	cmp	r2, r3
 8019a9e:	f2c0 816a 	blt.w	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019aa2:	9b07      	ldr	r3, [sp, #28]
 8019aa4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019aa6:	9318      	str	r3, [sp, #96]	; 0x60
 8019aa8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019aaa:	2b00      	cmp	r3, #0
 8019aac:	f340 818c 	ble.w	8019dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8019ab0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8019ab2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019ab4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019ab8:	689b      	ldr	r3, [r3, #8]
 8019aba:	1422      	asrs	r2, r4, #16
 8019abc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019ac0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019ac4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019ac8:	f100 81cd 	bmi.w	8019e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019acc:	f103 38ff 	add.w	r8, r3, #4294967295
 8019ad0:	4542      	cmp	r2, r8
 8019ad2:	f280 81c8 	bge.w	8019e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019ad6:	f1bc 0f00 	cmp.w	ip, #0
 8019ada:	f2c0 81c4 	blt.w	8019e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019ade:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019ae2:	45c4      	cmp	ip, r8
 8019ae4:	f280 81bf 	bge.w	8019e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019ae8:	b21b      	sxth	r3, r3
 8019aea:	fb0c 2203 	mla	r2, ip, r3, r2
 8019aee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019af0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019af4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019af8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019afc:	2800      	cmp	r0, #0
 8019afe:	f000 81a9 	beq.w	8019e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8019b02:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019b06:	950c      	str	r5, [sp, #48]	; 0x30
 8019b08:	0e2d      	lsrs	r5, r5, #24
 8019b0a:	9513      	str	r5, [sp, #76]	; 0x4c
 8019b0c:	b181      	cbz	r1, 8019b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019b0e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019b12:	3b01      	subs	r3, #1
 8019b14:	009b      	lsls	r3, r3, #2
 8019b16:	3304      	adds	r3, #4
 8019b18:	eb08 0c03 	add.w	ip, r8, r3
 8019b1c:	f858 3003 	ldr.w	r3, [r8, r3]
 8019b20:	9308      	str	r3, [sp, #32]
 8019b22:	0e1b      	lsrs	r3, r3, #24
 8019b24:	9311      	str	r3, [sp, #68]	; 0x44
 8019b26:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019b2a:	930d      	str	r3, [sp, #52]	; 0x34
 8019b2c:	0e1b      	lsrs	r3, r3, #24
 8019b2e:	9314      	str	r3, [sp, #80]	; 0x50
 8019b30:	b280      	uxth	r0, r0
 8019b32:	b289      	uxth	r1, r1
 8019b34:	fb00 f901 	mul.w	r9, r0, r1
 8019b38:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019b3c:	0100      	lsls	r0, r0, #4
 8019b3e:	eba0 0809 	sub.w	r8, r0, r9
 8019b42:	b289      	uxth	r1, r1
 8019b44:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019b48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b4a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019b4c:	fa1f f888 	uxth.w	r8, r8
 8019b50:	1a5b      	subs	r3, r3, r1
 8019b52:	b29b      	uxth	r3, r3
 8019b54:	fb08 f000 	mul.w	r0, r8, r0
 8019b58:	fb03 000e 	mla	r0, r3, lr, r0
 8019b5c:	fb01 0005 	mla	r0, r1, r5, r0
 8019b60:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b62:	fb09 0005 	mla	r0, r9, r5, r0
 8019b66:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019b6a:	2800      	cmp	r0, #0
 8019b6c:	f000 80fa 	beq.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019b70:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019b74:	d01b      	beq.n	8019bae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019b76:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019b7a:	fb0e fa0a 	mul.w	sl, lr, sl
 8019b7e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b82:	fb0e fe02 	mul.w	lr, lr, r2
 8019b86:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019b8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019b8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019b92:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019b96:	4452      	add	r2, sl
 8019b98:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019b9c:	0a12      	lsrs	r2, r2, #8
 8019b9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ba2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019ba6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019baa:	ea42 020c 	orr.w	r2, r2, ip
 8019bae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019bb0:	2dff      	cmp	r5, #255	; 0xff
 8019bb2:	d021      	beq.n	8019bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019bb4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019bb6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019bba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019bbc:	fb05 fb0b 	mul.w	fp, r5, fp
 8019bc0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019bc2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019bc6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019bc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019bcc:	fb05 fa0a 	mul.w	sl, r5, sl
 8019bd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019bd8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019bdc:	44de      	add	lr, fp
 8019bde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019be2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019be6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019bea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019bf2:	ea4e 050a 	orr.w	r5, lr, sl
 8019bf6:	950c      	str	r5, [sp, #48]	; 0x30
 8019bf8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019bfa:	2dff      	cmp	r5, #255	; 0xff
 8019bfc:	d021      	beq.n	8019c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019bfe:	9d08      	ldr	r5, [sp, #32]
 8019c00:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019c04:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c06:	fb05 fb0b 	mul.w	fp, r5, fp
 8019c0a:	9d08      	ldr	r5, [sp, #32]
 8019c0c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019c10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c12:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c16:	fb05 fa0a 	mul.w	sl, r5, sl
 8019c1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c1e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c22:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c26:	44de      	add	lr, fp
 8019c28:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c2c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c3c:	ea4e 050a 	orr.w	r5, lr, sl
 8019c40:	9508      	str	r5, [sp, #32]
 8019c42:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c44:	2dff      	cmp	r5, #255	; 0xff
 8019c46:	d021      	beq.n	8019c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019c48:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019c4a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019c4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c50:	fb05 fb0b 	mul.w	fp, r5, fp
 8019c54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019c56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019c5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c60:	fb05 fa0a 	mul.w	sl, r5, sl
 8019c64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c68:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c70:	44de      	add	lr, fp
 8019c72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c86:	ea4e 050a 	orr.w	r5, lr, sl
 8019c8a:	950d      	str	r5, [sp, #52]	; 0x34
 8019c8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c8e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019c92:	9d08      	ldr	r5, [sp, #32]
 8019c94:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019c98:	fb08 fc0c 	mul.w	ip, r8, ip
 8019c9c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019ca0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019ca4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019ca6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019caa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019cae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019cb0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019cb4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019cb8:	fb08 f80e 	mul.w	r8, r8, lr
 8019cbc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019cc0:	fb03 8202 	mla	r2, r3, r2, r8
 8019cc4:	9b08      	ldr	r3, [sp, #32]
 8019cc6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019cc8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019ccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cce:	fb01 220a 	mla	r2, r1, sl, r2
 8019cd2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019cd6:	fb09 2901 	mla	r9, r9, r1, r2
 8019cda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019cdc:	883b      	ldrh	r3, [r7, #0]
 8019cde:	4342      	muls	r2, r0
 8019ce0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ce4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ce8:	1c50      	adds	r0, r2, #1
 8019cea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019cee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019cf2:	ea4c 0c09 	orr.w	ip, ip, r9
 8019cf6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019cfa:	1219      	asrs	r1, r3, #8
 8019cfc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019d00:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019d04:	b2c0      	uxtb	r0, r0
 8019d06:	fb12 f205 	smulbb	r2, r2, r5
 8019d0a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019d0e:	fb01 2100 	mla	r1, r1, r0, r2
 8019d12:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019d16:	10da      	asrs	r2, r3, #3
 8019d18:	fa5f fc8c 	uxtb.w	ip, ip
 8019d1c:	00db      	lsls	r3, r3, #3
 8019d1e:	fb1c fc05 	smulbb	ip, ip, r5
 8019d22:	b2db      	uxtb	r3, r3
 8019d24:	b289      	uxth	r1, r1
 8019d26:	fb03 c300 	mla	r3, r3, r0, ip
 8019d2a:	fa1f fc83 	uxth.w	ip, r3
 8019d2e:	1c4b      	adds	r3, r1, #1
 8019d30:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019d34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019d38:	fb1e fe05 	smulbb	lr, lr, r5
 8019d3c:	f10c 0301 	add.w	r3, ip, #1
 8019d40:	fb02 e200 	mla	r2, r2, r0, lr
 8019d44:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019d48:	b292      	uxth	r2, r2
 8019d4a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019d4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019d52:	430b      	orrs	r3, r1
 8019d54:	1c51      	adds	r1, r2, #1
 8019d56:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019d5a:	0952      	lsrs	r2, r2, #5
 8019d5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d60:	4313      	orrs	r3, r2
 8019d62:	803b      	strh	r3, [r7, #0]
 8019d64:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019d66:	441c      	add	r4, r3
 8019d68:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019d6a:	441e      	add	r6, r3
 8019d6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019d6e:	3b01      	subs	r3, #1
 8019d70:	3702      	adds	r7, #2
 8019d72:	9318      	str	r3, [sp, #96]	; 0x60
 8019d74:	e698      	b.n	8019aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019d76:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019d78:	441c      	add	r4, r3
 8019d7a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019d7c:	441e      	add	r6, r3
 8019d7e:	9b07      	ldr	r3, [sp, #28]
 8019d80:	3b01      	subs	r3, #1
 8019d82:	9307      	str	r3, [sp, #28]
 8019d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d86:	3302      	adds	r3, #2
 8019d88:	930a      	str	r3, [sp, #40]	; 0x28
 8019d8a:	e66d      	b.n	8019a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019d8c:	d023      	beq.n	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019d8e:	9b07      	ldr	r3, [sp, #28]
 8019d90:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019d92:	3b01      	subs	r3, #1
 8019d94:	fb00 4003 	mla	r0, r0, r3, r4
 8019d98:	1400      	asrs	r0, r0, #16
 8019d9a:	f53f ae82 	bmi.w	8019aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019d9e:	3901      	subs	r1, #1
 8019da0:	4288      	cmp	r0, r1
 8019da2:	f6bf ae7e 	bge.w	8019aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019da6:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019da8:	fb01 6303 	mla	r3, r1, r3, r6
 8019dac:	141b      	asrs	r3, r3, #16
 8019dae:	f53f ae78 	bmi.w	8019aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019db2:	3a01      	subs	r2, #1
 8019db4:	4293      	cmp	r3, r2
 8019db6:	f6bf ae74 	bge.w	8019aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019dba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019dbe:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019dc2:	f1bb 0f00 	cmp.w	fp, #0
 8019dc6:	dc6c      	bgt.n	8019ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019dc8:	9b07      	ldr	r3, [sp, #28]
 8019dca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019dce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019dd0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019dd4:	930a      	str	r3, [sp, #40]	; 0x28
 8019dd6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019dd8:	2b00      	cmp	r3, #0
 8019dda:	f340 81b3 	ble.w	801a144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019dde:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019de2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019de6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019dea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019dec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019df0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019df4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019df8:	eef0 6a48 	vmov.f32	s13, s16
 8019dfc:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019e00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e04:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019e08:	ee16 4a90 	vmov	r4, s13
 8019e0c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019e10:	eef0 6a68 	vmov.f32	s13, s17
 8019e14:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019e18:	ee18 2a10 	vmov	r2, s16
 8019e1c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e24:	ee18 2a90 	vmov	r2, s17
 8019e28:	9331      	str	r3, [sp, #196]	; 0xc4
 8019e2a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019e2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e30:	9332      	str	r3, [sp, #200]	; 0xc8
 8019e32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e34:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019e36:	3b01      	subs	r3, #1
 8019e38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8019e3e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019e40:	bf08      	it	eq
 8019e42:	4613      	moveq	r3, r2
 8019e44:	ee16 6a90 	vmov	r6, s13
 8019e48:	9307      	str	r3, [sp, #28]
 8019e4a:	eef0 8a67 	vmov.f32	s17, s15
 8019e4e:	eeb0 8a47 	vmov.f32	s16, s14
 8019e52:	e5fb      	b.n	8019a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019e54:	2900      	cmp	r1, #0
 8019e56:	f43f ae6b 	beq.w	8019b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019e5a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019e5e:	9308      	str	r3, [sp, #32]
 8019e60:	0e1b      	lsrs	r3, r3, #24
 8019e62:	9311      	str	r3, [sp, #68]	; 0x44
 8019e64:	e664      	b.n	8019b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019e66:	f112 0801 	adds.w	r8, r2, #1
 8019e6a:	f53f af7b 	bmi.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e6e:	4543      	cmp	r3, r8
 8019e70:	f6ff af78 	blt.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e74:	f11c 0801 	adds.w	r8, ip, #1
 8019e78:	f53f af74 	bmi.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e7c:	45c6      	cmp	lr, r8
 8019e7e:	f6ff af71 	blt.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e82:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019e84:	9201      	str	r2, [sp, #4]
 8019e86:	fa0f f28e 	sxth.w	r2, lr
 8019e8a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019e8e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019e92:	9200      	str	r2, [sp, #0]
 8019e94:	b21b      	sxth	r3, r3
 8019e96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019e98:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019e9a:	4639      	mov	r1, r7
 8019e9c:	f7ff fc48 	bl	8019730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019ea0:	e760      	b.n	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019ea2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019ea4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ea6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019eaa:	1427      	asrs	r7, r4, #16
 8019eac:	1433      	asrs	r3, r6, #16
 8019eae:	fb01 7303 	mla	r3, r1, r3, r7
 8019eb2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019eb6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019eba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019ebe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019ec2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019ec6:	2a00      	cmp	r2, #0
 8019ec8:	f000 8133 	beq.w	801a132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019ecc:	687d      	ldr	r5, [r7, #4]
 8019ece:	950e      	str	r5, [sp, #56]	; 0x38
 8019ed0:	0e2d      	lsrs	r5, r5, #24
 8019ed2:	9515      	str	r5, [sp, #84]	; 0x54
 8019ed4:	b178      	cbz	r0, 8019ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019ed6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019eda:	3901      	subs	r1, #1
 8019edc:	0089      	lsls	r1, r1, #2
 8019ede:	3104      	adds	r1, #4
 8019ee0:	eb07 0e01 	add.w	lr, r7, r1
 8019ee4:	5879      	ldr	r1, [r7, r1]
 8019ee6:	9109      	str	r1, [sp, #36]	; 0x24
 8019ee8:	0e09      	lsrs	r1, r1, #24
 8019eea:	9112      	str	r1, [sp, #72]	; 0x48
 8019eec:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019ef0:	910f      	str	r1, [sp, #60]	; 0x3c
 8019ef2:	0e09      	lsrs	r1, r1, #24
 8019ef4:	9116      	str	r1, [sp, #88]	; 0x58
 8019ef6:	b292      	uxth	r2, r2
 8019ef8:	b280      	uxth	r0, r0
 8019efa:	fb02 f800 	mul.w	r8, r2, r0
 8019efe:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019f02:	0112      	lsls	r2, r2, #4
 8019f04:	eba2 0e08 	sub.w	lr, r2, r8
 8019f08:	b280      	uxth	r0, r0
 8019f0a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019f0e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019f10:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f12:	fa1f fe8e 	uxth.w	lr, lr
 8019f16:	1a12      	subs	r2, r2, r0
 8019f18:	b292      	uxth	r2, r2
 8019f1a:	fb0e f101 	mul.w	r1, lr, r1
 8019f1e:	fb02 110c 	mla	r1, r2, ip, r1
 8019f22:	fb00 1105 	mla	r1, r0, r5, r1
 8019f26:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f28:	fb08 1105 	mla	r1, r8, r5, r1
 8019f2c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019f30:	2900      	cmp	r1, #0
 8019f32:	f000 80f5 	beq.w	801a120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019f36:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019f3a:	d019      	beq.n	8019f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019f3c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019f40:	fb0c fa0a 	mul.w	sl, ip, sl
 8019f44:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f48:	fb0c fc03 	mul.w	ip, ip, r3
 8019f4c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019f50:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f54:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019f58:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019f5c:	4453      	add	r3, sl
 8019f5e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019f62:	0a1b      	lsrs	r3, r3, #8
 8019f64:	0a3f      	lsrs	r7, r7, #8
 8019f66:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f6a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019f6e:	433b      	orrs	r3, r7
 8019f70:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019f72:	2dff      	cmp	r5, #255	; 0xff
 8019f74:	d020      	beq.n	8019fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019f76:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f78:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019f7c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019f7e:	436f      	muls	r7, r5
 8019f80:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f82:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019f86:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019f88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019f8c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019f90:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019f94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f98:	44bc      	add	ip, r7
 8019f9a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019f9e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019fa2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019faa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fb2:	ea4c 050a 	orr.w	r5, ip, sl
 8019fb6:	950e      	str	r5, [sp, #56]	; 0x38
 8019fb8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019fba:	2dff      	cmp	r5, #255	; 0xff
 8019fbc:	d020      	beq.n	801a000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8019fbe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019fc0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019fc4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019fc6:	436f      	muls	r7, r5
 8019fc8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019fca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019fce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019fd0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019fd4:	fb05 fa0a 	mul.w	sl, r5, sl
 8019fd8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019fdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fe0:	44bc      	add	ip, r7
 8019fe2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019fe6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019fea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ff2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ff6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ffa:	ea4c 050a 	orr.w	r5, ip, sl
 8019ffe:	9509      	str	r5, [sp, #36]	; 0x24
 801a000:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a002:	2dff      	cmp	r5, #255	; 0xff
 801a004:	d020      	beq.n	801a048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a006:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a008:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a00c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a00e:	436f      	muls	r7, r5
 801a010:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a012:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a016:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a018:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a01c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a020:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a024:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a028:	44bc      	add	ip, r7
 801a02a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a02e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a032:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a036:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a03a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a03e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a042:	ea4c 050a 	orr.w	r5, ip, sl
 801a046:	950f      	str	r5, [sp, #60]	; 0x3c
 801a048:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a04a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a04e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a050:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a054:	fb0e f707 	mul.w	r7, lr, r7
 801a058:	fb02 770c 	mla	r7, r2, ip, r7
 801a05c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a060:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a062:	fb00 770c 	mla	r7, r0, ip, r7
 801a066:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a06a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a06c:	fb08 770c 	mla	r7, r8, ip, r7
 801a070:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a074:	fb0e fe0c 	mul.w	lr, lr, ip
 801a078:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a07c:	fb02 e303 	mla	r3, r2, r3, lr
 801a080:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a082:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a084:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a088:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a08a:	fb00 330a 	mla	r3, r0, sl, r3
 801a08e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a092:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a096:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a098:	f8b9 0000 	ldrh.w	r0, [r9]
 801a09c:	4359      	muls	r1, r3
 801a09e:	0a3f      	lsrs	r7, r7, #8
 801a0a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a0a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a0a8:	1c4b      	adds	r3, r1, #1
 801a0aa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a0ae:	ea47 070c 	orr.w	r7, r7, ip
 801a0b2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a0b6:	1202      	asrs	r2, r0, #8
 801a0b8:	0c3b      	lsrs	r3, r7, #16
 801a0ba:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a0be:	b2c9      	uxtb	r1, r1
 801a0c0:	fb13 f305 	smulbb	r3, r3, r5
 801a0c4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a0c8:	fb02 3201 	mla	r2, r2, r1, r3
 801a0cc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a0d0:	10c3      	asrs	r3, r0, #3
 801a0d2:	b2ff      	uxtb	r7, r7
 801a0d4:	00c0      	lsls	r0, r0, #3
 801a0d6:	b2c0      	uxtb	r0, r0
 801a0d8:	fb17 f705 	smulbb	r7, r7, r5
 801a0dc:	fb00 7001 	mla	r0, r0, r1, r7
 801a0e0:	b292      	uxth	r2, r2
 801a0e2:	fb1c fc05 	smulbb	ip, ip, r5
 801a0e6:	b280      	uxth	r0, r0
 801a0e8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a0ec:	fb03 c301 	mla	r3, r3, r1, ip
 801a0f0:	1c51      	adds	r1, r2, #1
 801a0f2:	f100 0c01 	add.w	ip, r0, #1
 801a0f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a0fa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801a0fe:	b29b      	uxth	r3, r3
 801a100:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a104:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a108:	ea4c 0202 	orr.w	r2, ip, r2
 801a10c:	f103 0c01 	add.w	ip, r3, #1
 801a110:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a114:	095b      	lsrs	r3, r3, #5
 801a116:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a11a:	431a      	orrs	r2, r3
 801a11c:	f8a9 2000 	strh.w	r2, [r9]
 801a120:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a122:	441c      	add	r4, r3
 801a124:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a126:	f109 0902 	add.w	r9, r9, #2
 801a12a:	441e      	add	r6, r3
 801a12c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a130:	e647      	b.n	8019dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801a132:	2800      	cmp	r0, #0
 801a134:	f43f aedf 	beq.w	8019ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a138:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801a13c:	9109      	str	r1, [sp, #36]	; 0x24
 801a13e:	0e09      	lsrs	r1, r1, #24
 801a140:	9112      	str	r1, [sp, #72]	; 0x48
 801a142:	e6d8      	b.n	8019ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a144:	b01d      	add	sp, #116	; 0x74
 801a146:	ecbd 8b08 	vpop	{d8-d11}
 801a14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a150 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801a150:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a154:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801a158:	fb04 5603 	mla	r6, r4, r3, r5
 801a15c:	2c00      	cmp	r4, #0
 801a15e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a162:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801a166:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801a16a:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801a16e:	db37      	blt.n	801a1e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a170:	45a6      	cmp	lr, r4
 801a172:	dd35      	ble.n	801a1e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a174:	2d00      	cmp	r5, #0
 801a176:	db31      	blt.n	801a1dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a178:	42ab      	cmp	r3, r5
 801a17a:	dd2f      	ble.n	801a1dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a17c:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801a180:	1c6e      	adds	r6, r5, #1
 801a182:	d430      	bmi.n	801a1e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a184:	42b3      	cmp	r3, r6
 801a186:	dd2e      	ble.n	801a1e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a188:	b378      	cbz	r0, 801a1ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801a18a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a18e:	3401      	adds	r4, #1
 801a190:	d42f      	bmi.n	801a1f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a192:	45a6      	cmp	lr, r4
 801a194:	dd2d      	ble.n	801a1f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a196:	b37f      	cbz	r7, 801a1f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801a198:	2d00      	cmp	r5, #0
 801a19a:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801a19e:	db26      	blt.n	801a1ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a1a0:	42ab      	cmp	r3, r5
 801a1a2:	dd24      	ble.n	801a1ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a1a4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a1a8:	3501      	adds	r5, #1
 801a1aa:	d428      	bmi.n	801a1fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a1ac:	42ab      	cmp	r3, r5
 801a1ae:	dd26      	ble.n	801a1fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a1b0:	b338      	cbz	r0, 801a202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801a1b2:	f8de 3004 	ldr.w	r3, [lr, #4]
 801a1b6:	280f      	cmp	r0, #15
 801a1b8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a1bc:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a1c0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a1c4:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a1c8:	d801      	bhi.n	801a1ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801a1ca:	2f0f      	cmp	r7, #15
 801a1cc:	d91b      	bls.n	801a206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801a1ce:	4b87      	ldr	r3, [pc, #540]	; (801a3ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801a1d0:	4a87      	ldr	r2, [pc, #540]	; (801a3f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801a1d2:	4888      	ldr	r0, [pc, #544]	; (801a3f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801a1d4:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a1d8:	f001 fd5c 	bl	801bc94 <__assert_func>
 801a1dc:	2200      	movs	r2, #0
 801a1de:	e7cf      	b.n	801a180 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801a1e0:	2600      	movs	r6, #0
 801a1e2:	4632      	mov	r2, r6
 801a1e4:	e7d3      	b.n	801a18e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a1e6:	2600      	movs	r6, #0
 801a1e8:	e7d1      	b.n	801a18e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a1ea:	4606      	mov	r6, r0
 801a1ec:	e7cf      	b.n	801a18e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a1ee:	2400      	movs	r4, #0
 801a1f0:	e7da      	b.n	801a1a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801a1f2:	2300      	movs	r3, #0
 801a1f4:	461c      	mov	r4, r3
 801a1f6:	e7de      	b.n	801a1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a1f8:	463b      	mov	r3, r7
 801a1fa:	463c      	mov	r4, r7
 801a1fc:	e7db      	b.n	801a1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a1fe:	2300      	movs	r3, #0
 801a200:	e7d9      	b.n	801a1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a202:	4603      	mov	r3, r0
 801a204:	e7d7      	b.n	801a1b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a206:	b280      	uxth	r0, r0
 801a208:	b2bf      	uxth	r7, r7
 801a20a:	fb07 fe00 	mul.w	lr, r7, r0
 801a20e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a212:	0100      	lsls	r0, r0, #4
 801a214:	eba0 0c0e 	sub.w	ip, r0, lr
 801a218:	b2bf      	uxth	r7, r7
 801a21a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a21e:	fa1f fc8c 	uxth.w	ip, ip
 801a222:	1bed      	subs	r5, r5, r7
 801a224:	b2ad      	uxth	r5, r5
 801a226:	fb0c f00a 	mul.w	r0, ip, sl
 801a22a:	fb0b 0005 	mla	r0, fp, r5, r0
 801a22e:	fb07 0009 	mla	r0, r7, r9, r0
 801a232:	fb0e 0008 	mla	r0, lr, r8, r0
 801a236:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a23a:	9001      	str	r0, [sp, #4]
 801a23c:	2800      	cmp	r0, #0
 801a23e:	f000 80d1 	beq.w	801a3e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801a242:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a246:	d018      	beq.n	801a27a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801a248:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a24c:	fb0b f000 	mul.w	r0, fp, r0
 801a250:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a254:	fb0b fb02 	mul.w	fp, fp, r2
 801a258:	0a02      	lsrs	r2, r0, #8
 801a25a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a25e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a262:	4402      	add	r2, r0
 801a264:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a268:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a26c:	0a12      	lsrs	r2, r2, #8
 801a26e:	0a00      	lsrs	r0, r0, #8
 801a270:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a274:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a278:	4302      	orrs	r2, r0
 801a27a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a27e:	d01a      	beq.n	801a2b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801a280:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a284:	fb0a f000 	mul.w	r0, sl, r0
 801a288:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a28c:	fb0a fa06 	mul.w	sl, sl, r6
 801a290:	0a06      	lsrs	r6, r0, #8
 801a292:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a296:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a29a:	4406      	add	r6, r0
 801a29c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a2a0:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a2a4:	0a36      	lsrs	r6, r6, #8
 801a2a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a2aa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a2ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a2b2:	ea46 060a 	orr.w	r6, r6, sl
 801a2b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a2ba:	d01b      	beq.n	801a2f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801a2bc:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a2c0:	fb09 fa0a 	mul.w	sl, r9, sl
 801a2c4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a2c8:	fb09 f004 	mul.w	r0, r9, r4
 801a2cc:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a2d0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a2d4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a2d8:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a2dc:	4454      	add	r4, sl
 801a2de:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a2e2:	0a24      	lsrs	r4, r4, #8
 801a2e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a2e8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a2ec:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a2f0:	ea44 0409 	orr.w	r4, r4, r9
 801a2f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a2f8:	d01b      	beq.n	801a332 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801a2fa:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a2fe:	fb08 f909 	mul.w	r9, r8, r9
 801a302:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a306:	fb08 f003 	mul.w	r0, r8, r3
 801a30a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a30e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a312:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a316:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a31a:	444b      	add	r3, r9
 801a31c:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a320:	0a1b      	lsrs	r3, r3, #8
 801a322:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a326:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a32a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a32e:	ea43 0308 	orr.w	r3, r3, r8
 801a332:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a336:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a33a:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a33e:	fb0c f808 	mul.w	r8, ip, r8
 801a342:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a346:	fb0c f606 	mul.w	r6, ip, r6
 801a34a:	fb05 8909 	mla	r9, r5, r9, r8
 801a34e:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a352:	fb05 6502 	mla	r5, r5, r2, r6
 801a356:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a35a:	fb07 9908 	mla	r9, r7, r8, r9
 801a35e:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a362:	fb07 5704 	mla	r7, r7, r4, r5
 801a366:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a36a:	8808      	ldrh	r0, [r1, #0]
 801a36c:	fb0e 9808 	mla	r8, lr, r8, r9
 801a370:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a374:	9b01      	ldr	r3, [sp, #4]
 801a376:	43da      	mvns	r2, r3
 801a378:	1203      	asrs	r3, r0, #8
 801a37a:	b2d2      	uxtb	r2, r2
 801a37c:	10c4      	asrs	r4, r0, #3
 801a37e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a382:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a386:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a38a:	00c0      	lsls	r0, r0, #3
 801a38c:	4353      	muls	r3, r2
 801a38e:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a392:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a396:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a39a:	b2c0      	uxtb	r0, r0
 801a39c:	ea48 0e0e 	orr.w	lr, r8, lr
 801a3a0:	4354      	muls	r4, r2
 801a3a2:	4350      	muls	r0, r2
 801a3a4:	1c5a      	adds	r2, r3, #1
 801a3a6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a3aa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a3ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a3b2:	1c62      	adds	r2, r4, #1
 801a3b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a3b8:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801a3bc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a3c0:	021b      	lsls	r3, r3, #8
 801a3c2:	00d2      	lsls	r2, r2, #3
 801a3c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a3c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a3cc:	4313      	orrs	r3, r2
 801a3ce:	1c42      	adds	r2, r0, #1
 801a3d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a3d4:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801a3d8:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801a3dc:	ea4e 0e03 	orr.w	lr, lr, r3
 801a3e0:	f8a1 e000 	strh.w	lr, [r1]
 801a3e4:	b003      	add	sp, #12
 801a3e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a3ea:	bf00      	nop
 801a3ec:	0801fc17 	.word	0x0801fc17
 801a3f0:	08020146 	.word	0x08020146
 801a3f4:	0801fbe4 	.word	0x0801fbe4

0801a3f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3fc:	ed2d 8b08 	vpush	{d8-d11}
 801a400:	b09b      	sub	sp, #108	; 0x6c
 801a402:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801a406:	9218      	str	r2, [sp, #96]	; 0x60
 801a408:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a40a:	9116      	str	r1, [sp, #88]	; 0x58
 801a40c:	9307      	str	r3, [sp, #28]
 801a40e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a412:	9019      	str	r0, [sp, #100]	; 0x64
 801a414:	6850      	ldr	r0, [r2, #4]
 801a416:	6812      	ldr	r2, [r2, #0]
 801a418:	fb00 1303 	mla	r3, r0, r3, r1
 801a41c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a420:	930a      	str	r3, [sp, #40]	; 0x28
 801a422:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a424:	681b      	ldr	r3, [r3, #0]
 801a426:	930f      	str	r3, [sp, #60]	; 0x3c
 801a428:	eeb0 aa40 	vmov.f32	s20, s0
 801a42c:	eef0 9a60 	vmov.f32	s19, s1
 801a430:	eeb0 9a41 	vmov.f32	s18, s2
 801a434:	eeb0 8a62 	vmov.f32	s16, s5
 801a438:	eef0 8a43 	vmov.f32	s17, s6
 801a43c:	eef0 ba44 	vmov.f32	s23, s8
 801a440:	eeb0 ba64 	vmov.f32	s22, s9
 801a444:	eef0 aa45 	vmov.f32	s21, s10
 801a448:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a44a:	2b00      	cmp	r3, #0
 801a44c:	dc03      	bgt.n	801a456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a44e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a450:	2b00      	cmp	r3, #0
 801a452:	f340 8386 	ble.w	801ab62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a456:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a458:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a45c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a460:	1e48      	subs	r0, r1, #1
 801a462:	1e57      	subs	r7, r2, #1
 801a464:	9b07      	ldr	r3, [sp, #28]
 801a466:	2b00      	cmp	r3, #0
 801a468:	f340 8166 	ble.w	801a738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801a46c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a470:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a474:	d406      	bmi.n	801a484 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a476:	4584      	cmp	ip, r0
 801a478:	da04      	bge.n	801a484 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a47a:	2b00      	cmp	r3, #0
 801a47c:	db02      	blt.n	801a484 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a47e:	42bb      	cmp	r3, r7
 801a480:	f2c0 815b 	blt.w	801a73a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a484:	f11c 0c01 	adds.w	ip, ip, #1
 801a488:	f100 814b 	bmi.w	801a722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a48c:	4561      	cmp	r1, ip
 801a48e:	f2c0 8148 	blt.w	801a722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a492:	3301      	adds	r3, #1
 801a494:	f100 8145 	bmi.w	801a722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a498:	429a      	cmp	r2, r3
 801a49a:	f2c0 8142 	blt.w	801a722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a49e:	9b07      	ldr	r3, [sp, #28]
 801a4a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a4a2:	9317      	str	r3, [sp, #92]	; 0x5c
 801a4a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a4a6:	2b00      	cmp	r3, #0
 801a4a8:	f340 8165 	ble.w	801a776 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a4ac:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801a4ae:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a4b0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a4b4:	689b      	ldr	r3, [r3, #8]
 801a4b6:	1422      	asrs	r2, r4, #16
 801a4b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a4bc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a4c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a4c4:	f100 81d5 	bmi.w	801a872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a4c8:	f103 38ff 	add.w	r8, r3, #4294967295
 801a4cc:	4542      	cmp	r2, r8
 801a4ce:	f280 81d0 	bge.w	801a872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a4d2:	f1bc 0f00 	cmp.w	ip, #0
 801a4d6:	f2c0 81cc 	blt.w	801a872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a4da:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a4de:	45c4      	cmp	ip, r8
 801a4e0:	f280 81c7 	bge.w	801a872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a4e4:	b21b      	sxth	r3, r3
 801a4e6:	fb0c 2203 	mla	r2, ip, r3, r2
 801a4ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a4ec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a4f0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a4f4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a4f8:	2900      	cmp	r1, #0
 801a4fa:	f000 8182 	beq.w	801a802 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801a4fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a502:	950b      	str	r5, [sp, #44]	; 0x2c
 801a504:	0e2d      	lsrs	r5, r5, #24
 801a506:	9512      	str	r5, [sp, #72]	; 0x48
 801a508:	b180      	cbz	r0, 801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a50a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a50e:	3b01      	subs	r3, #1
 801a510:	009b      	lsls	r3, r3, #2
 801a512:	3304      	adds	r3, #4
 801a514:	eb08 0c03 	add.w	ip, r8, r3
 801a518:	f858 3003 	ldr.w	r3, [r8, r3]
 801a51c:	9308      	str	r3, [sp, #32]
 801a51e:	0e1b      	lsrs	r3, r3, #24
 801a520:	9310      	str	r3, [sp, #64]	; 0x40
 801a522:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a526:	930c      	str	r3, [sp, #48]	; 0x30
 801a528:	0e1b      	lsrs	r3, r3, #24
 801a52a:	9313      	str	r3, [sp, #76]	; 0x4c
 801a52c:	b289      	uxth	r1, r1
 801a52e:	b280      	uxth	r0, r0
 801a530:	fb01 f900 	mul.w	r9, r1, r0
 801a534:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a538:	0109      	lsls	r1, r1, #4
 801a53a:	eba1 0809 	sub.w	r8, r1, r9
 801a53e:	b280      	uxth	r0, r0
 801a540:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a544:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a546:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a548:	fa1f f888 	uxth.w	r8, r8
 801a54c:	1a09      	subs	r1, r1, r0
 801a54e:	b289      	uxth	r1, r1
 801a550:	fb08 f303 	mul.w	r3, r8, r3
 801a554:	fb01 330e 	mla	r3, r1, lr, r3
 801a558:	fb00 3305 	mla	r3, r0, r5, r3
 801a55c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a55e:	fb09 3305 	mla	r3, r9, r5, r3
 801a562:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a566:	2b00      	cmp	r3, #0
 801a568:	f000 80d2 	beq.w	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a56c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a570:	d01b      	beq.n	801a5aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801a572:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a576:	fb0e fa0a 	mul.w	sl, lr, sl
 801a57a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a57e:	fb0e fe02 	mul.w	lr, lr, r2
 801a582:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a586:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a58a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a58e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a592:	4452      	add	r2, sl
 801a594:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a598:	0a12      	lsrs	r2, r2, #8
 801a59a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a59e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a5a2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a5a6:	ea42 020c 	orr.w	r2, r2, ip
 801a5aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5ac:	2dff      	cmp	r5, #255	; 0xff
 801a5ae:	d021      	beq.n	801a5f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a5b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a5b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a5b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5b8:	fb05 fb0b 	mul.w	fp, r5, fp
 801a5bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a5be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a5c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a5c8:	fb05 fa0a 	mul.w	sl, r5, sl
 801a5cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a5d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a5d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a5d8:	44de      	add	lr, fp
 801a5da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a5de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a5e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a5e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a5ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a5ee:	ea4e 050a 	orr.w	r5, lr, sl
 801a5f2:	950b      	str	r5, [sp, #44]	; 0x2c
 801a5f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a5f6:	2dff      	cmp	r5, #255	; 0xff
 801a5f8:	d021      	beq.n	801a63e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a5fa:	9d08      	ldr	r5, [sp, #32]
 801a5fc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a600:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a602:	fb05 fb0b 	mul.w	fp, r5, fp
 801a606:	9d08      	ldr	r5, [sp, #32]
 801a608:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a60c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a60e:	fb05 fa0e 	mul.w	sl, r5, lr
 801a612:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a616:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a61a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a61e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a622:	44de      	add	lr, fp
 801a624:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a628:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a62c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a630:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a634:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a638:	ea4e 050a 	orr.w	r5, lr, sl
 801a63c:	9508      	str	r5, [sp, #32]
 801a63e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a640:	2dff      	cmp	r5, #255	; 0xff
 801a642:	d021      	beq.n	801a688 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a644:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a646:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a64a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a64c:	fb05 fb0b 	mul.w	fp, r5, fp
 801a650:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a652:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a656:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a658:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a65c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a660:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a664:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a668:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a66c:	44de      	add	lr, fp
 801a66e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a672:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a676:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a67a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a67e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a682:	ea4e 050a 	orr.w	r5, lr, sl
 801a686:	950c      	str	r5, [sp, #48]	; 0x30
 801a688:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a68a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a68e:	9d08      	ldr	r5, [sp, #32]
 801a690:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a694:	fb08 fc0c 	mul.w	ip, r8, ip
 801a698:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a69c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a6a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a6a2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a6a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a6aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a6ac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a6b0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a6b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a6b8:	fb08 f80e 	mul.w	r8, r8, lr
 801a6bc:	fb01 8202 	mla	r2, r1, r2, r8
 801a6c0:	9908      	ldr	r1, [sp, #32]
 801a6c2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a6c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a6c8:	fb00 220a 	mla	r2, r0, sl, r2
 801a6cc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a6d0:	fb09 2900 	mla	r9, r9, r0, r2
 801a6d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a6dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a6e4:	ea4c 0c09 	orr.w	ip, ip, r9
 801a6e8:	2bff      	cmp	r3, #255	; 0xff
 801a6ea:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a6ee:	f040 8091 	bne.w	801a814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a6f2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a6f6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a6fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6fe:	f022 0207 	bic.w	r2, r2, #7
 801a702:	431a      	orrs	r2, r3
 801a704:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a708:	ea4c 0c02 	orr.w	ip, ip, r2
 801a70c:	f8a7 c000 	strh.w	ip, [r7]
 801a710:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a712:	441c      	add	r4, r3
 801a714:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a716:	441e      	add	r6, r3
 801a718:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a71a:	3b01      	subs	r3, #1
 801a71c:	3702      	adds	r7, #2
 801a71e:	9317      	str	r3, [sp, #92]	; 0x5c
 801a720:	e6c0      	b.n	801a4a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a722:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a724:	441c      	add	r4, r3
 801a726:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a728:	441e      	add	r6, r3
 801a72a:	9b07      	ldr	r3, [sp, #28]
 801a72c:	3b01      	subs	r3, #1
 801a72e:	9307      	str	r3, [sp, #28]
 801a730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a732:	3302      	adds	r3, #2
 801a734:	930a      	str	r3, [sp, #40]	; 0x28
 801a736:	e695      	b.n	801a464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a738:	d024      	beq.n	801a784 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a73a:	9b07      	ldr	r3, [sp, #28]
 801a73c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a73e:	3b01      	subs	r3, #1
 801a740:	fb00 4003 	mla	r0, r0, r3, r4
 801a744:	1400      	asrs	r0, r0, #16
 801a746:	f53f aeaa 	bmi.w	801a49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a74a:	3901      	subs	r1, #1
 801a74c:	4288      	cmp	r0, r1
 801a74e:	f6bf aea6 	bge.w	801a49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a752:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a754:	fb01 6303 	mla	r3, r1, r3, r6
 801a758:	141b      	asrs	r3, r3, #16
 801a75a:	f53f aea0 	bmi.w	801a49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a75e:	3a01      	subs	r2, #1
 801a760:	4293      	cmp	r3, r2
 801a762:	f6bf ae9c 	bge.w	801a49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a766:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a76a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a76e:	f1bb 0f00 	cmp.w	fp, #0
 801a772:	f300 809a 	bgt.w	801a8aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801a776:	9b07      	ldr	r3, [sp, #28]
 801a778:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a77c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a77e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a782:	930a      	str	r3, [sp, #40]	; 0x28
 801a784:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a786:	2b00      	cmp	r3, #0
 801a788:	f340 81eb 	ble.w	801ab62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a78c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a790:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a794:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a798:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a79a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a79e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a7a2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a7a6:	eef0 6a48 	vmov.f32	s13, s16
 801a7aa:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a7ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7b2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a7b6:	ee16 4a90 	vmov	r4, s13
 801a7ba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a7be:	eef0 6a68 	vmov.f32	s13, s17
 801a7c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a7c6:	ee18 2a10 	vmov	r2, s16
 801a7ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a7ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7d2:	ee18 2a90 	vmov	r2, s17
 801a7d6:	932f      	str	r3, [sp, #188]	; 0xbc
 801a7d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a7da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7de:	9330      	str	r3, [sp, #192]	; 0xc0
 801a7e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a7e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a7e4:	3b01      	subs	r3, #1
 801a7e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7ea:	9316      	str	r3, [sp, #88]	; 0x58
 801a7ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a7ee:	bf08      	it	eq
 801a7f0:	4613      	moveq	r3, r2
 801a7f2:	ee16 6a90 	vmov	r6, s13
 801a7f6:	9307      	str	r3, [sp, #28]
 801a7f8:	eef0 8a67 	vmov.f32	s17, s15
 801a7fc:	eeb0 8a47 	vmov.f32	s16, s14
 801a800:	e622      	b.n	801a448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a802:	2800      	cmp	r0, #0
 801a804:	f43f ae92 	beq.w	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a808:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a80c:	9308      	str	r3, [sp, #32]
 801a80e:	0e1b      	lsrs	r3, r3, #24
 801a810:	9310      	str	r3, [sp, #64]	; 0x40
 801a812:	e68b      	b.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a814:	8839      	ldrh	r1, [r7, #0]
 801a816:	4dd5      	ldr	r5, [pc, #852]	; (801ab6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a818:	43db      	mvns	r3, r3
 801a81a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a81e:	fa5f f883 	uxtb.w	r8, r3
 801a822:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a826:	fb0e fe08 	mul.w	lr, lr, r8
 801a82a:	10c8      	asrs	r0, r1, #3
 801a82c:	00cb      	lsls	r3, r1, #3
 801a82e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a832:	f10e 0101 	add.w	r1, lr, #1
 801a836:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a83a:	fb00 f008 	mul.w	r0, r0, r8
 801a83e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a842:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a846:	f100 0e01 	add.w	lr, r0, #1
 801a84a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a84e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a852:	b2db      	uxtb	r3, r3
 801a854:	b2c9      	uxtb	r1, r1
 801a856:	00d2      	lsls	r2, r2, #3
 801a858:	fb03 f308 	mul.w	r3, r3, r8
 801a85c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a860:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a864:	430a      	orrs	r2, r1
 801a866:	1c59      	adds	r1, r3, #1
 801a868:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a86c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a870:	e748      	b.n	801a704 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a872:	f112 0801 	adds.w	r8, r2, #1
 801a876:	f53f af4b 	bmi.w	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a87a:	4543      	cmp	r3, r8
 801a87c:	f6ff af48 	blt.w	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a880:	f11c 0801 	adds.w	r8, ip, #1
 801a884:	f53f af44 	bmi.w	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a888:	45c6      	cmp	lr, r8
 801a88a:	f6ff af41 	blt.w	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a88e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a892:	fa0f f28e 	sxth.w	r2, lr
 801a896:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a89a:	9200      	str	r2, [sp, #0]
 801a89c:	b21b      	sxth	r3, r3
 801a89e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a8a0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a8a2:	4639      	mov	r1, r7
 801a8a4:	f7ff fc54 	bl	801a150 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a8a8:	e732      	b.n	801a710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a8aa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a8ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a8ae:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a8b2:	1421      	asrs	r1, r4, #16
 801a8b4:	1433      	asrs	r3, r6, #16
 801a8b6:	fb07 1303 	mla	r3, r7, r3, r1
 801a8ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a8bc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a8c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a8c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a8c8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a8cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a8d0:	2a00      	cmp	r2, #0
 801a8d2:	f000 8107 	beq.w	801aae4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801a8d6:	684d      	ldr	r5, [r1, #4]
 801a8d8:	950d      	str	r5, [sp, #52]	; 0x34
 801a8da:	0e2d      	lsrs	r5, r5, #24
 801a8dc:	9514      	str	r5, [sp, #80]	; 0x50
 801a8de:	b178      	cbz	r0, 801a900 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a8e0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a8e4:	3f01      	subs	r7, #1
 801a8e6:	00bf      	lsls	r7, r7, #2
 801a8e8:	3704      	adds	r7, #4
 801a8ea:	eb01 0e07 	add.w	lr, r1, r7
 801a8ee:	59c9      	ldr	r1, [r1, r7]
 801a8f0:	9109      	str	r1, [sp, #36]	; 0x24
 801a8f2:	0e09      	lsrs	r1, r1, #24
 801a8f4:	9111      	str	r1, [sp, #68]	; 0x44
 801a8f6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a8fa:	910e      	str	r1, [sp, #56]	; 0x38
 801a8fc:	0e09      	lsrs	r1, r1, #24
 801a8fe:	9115      	str	r1, [sp, #84]	; 0x54
 801a900:	b292      	uxth	r2, r2
 801a902:	b280      	uxth	r0, r0
 801a904:	fb02 f900 	mul.w	r9, r2, r0
 801a908:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a90c:	0112      	lsls	r2, r2, #4
 801a90e:	eba2 0e09 	sub.w	lr, r2, r9
 801a912:	b280      	uxth	r0, r0
 801a914:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a918:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a91a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a91c:	fa1f fe8e 	uxth.w	lr, lr
 801a920:	1a09      	subs	r1, r1, r0
 801a922:	b289      	uxth	r1, r1
 801a924:	fb0e f202 	mul.w	r2, lr, r2
 801a928:	fb01 220c 	mla	r2, r1, ip, r2
 801a92c:	fb00 2205 	mla	r2, r0, r5, r2
 801a930:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a932:	fb09 2205 	mla	r2, r9, r5, r2
 801a936:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a93a:	2a00      	cmp	r2, #0
 801a93c:	f000 80c9 	beq.w	801aad2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a940:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a944:	d019      	beq.n	801a97a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a946:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a94a:	fb0c fa0a 	mul.w	sl, ip, sl
 801a94e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a952:	fb0c fc03 	mul.w	ip, ip, r3
 801a956:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a95a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a95e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a962:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a966:	4453      	add	r3, sl
 801a968:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a96c:	0a1b      	lsrs	r3, r3, #8
 801a96e:	0a3f      	lsrs	r7, r7, #8
 801a970:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a974:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a978:	433b      	orrs	r3, r7
 801a97a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a97c:	2dff      	cmp	r5, #255	; 0xff
 801a97e:	d020      	beq.n	801a9c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a980:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a982:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a986:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a988:	436f      	muls	r7, r5
 801a98a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a98c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a990:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a992:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a996:	fb05 fa0a 	mul.w	sl, r5, sl
 801a99a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a99e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9a2:	44bc      	add	ip, r7
 801a9a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a9a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a9ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9bc:	ea4c 050a 	orr.w	r5, ip, sl
 801a9c0:	950d      	str	r5, [sp, #52]	; 0x34
 801a9c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a9c4:	2dff      	cmp	r5, #255	; 0xff
 801a9c6:	d020      	beq.n	801aa0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801a9c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a9ca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a9ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a9d0:	436f      	muls	r7, r5
 801a9d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a9d4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a9d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a9da:	fb05 fa0c 	mul.w	sl, r5, ip
 801a9de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a9e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a9ea:	44bc      	add	ip, r7
 801a9ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a9f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a9f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa04:	ea4c 050a 	orr.w	r5, ip, sl
 801aa08:	9509      	str	r5, [sp, #36]	; 0x24
 801aa0a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa0c:	2dff      	cmp	r5, #255	; 0xff
 801aa0e:	d020      	beq.n	801aa52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801aa10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa12:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aa16:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa18:	436f      	muls	r7, r5
 801aa1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa1c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aa20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa26:	fb05 fa0a 	mul.w	sl, r5, sl
 801aa2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa32:	44bc      	add	ip, r7
 801aa34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa4c:	ea4c 050a 	orr.w	r5, ip, sl
 801aa50:	950e      	str	r5, [sp, #56]	; 0x38
 801aa52:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aa54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aa58:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801aa5a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801aa5e:	fb0e f707 	mul.w	r7, lr, r7
 801aa62:	fb01 770c 	mla	r7, r1, ip, r7
 801aa66:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aa6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa6c:	fb00 770c 	mla	r7, r0, ip, r7
 801aa70:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aa74:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aa76:	fb09 770c 	mla	r7, r9, ip, r7
 801aa7a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801aa7e:	fb0e fe0c 	mul.w	lr, lr, ip
 801aa82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa86:	fb01 e303 	mla	r3, r1, r3, lr
 801aa8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aa8c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801aa90:	990e      	ldr	r1, [sp, #56]	; 0x38
 801aa92:	fb00 330a 	mla	r3, r0, sl, r3
 801aa96:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801aa9a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801aa9e:	0a3f      	lsrs	r7, r7, #8
 801aaa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaa4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801aaa8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aaac:	ea47 070c 	orr.w	r7, r7, ip
 801aab0:	2aff      	cmp	r2, #255	; 0xff
 801aab2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801aab6:	d11e      	bne.n	801aaf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801aab8:	097a      	lsrs	r2, r7, #5
 801aaba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801aabe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aac2:	f023 0307 	bic.w	r3, r3, #7
 801aac6:	4313      	orrs	r3, r2
 801aac8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801aacc:	431f      	orrs	r7, r3
 801aace:	f8a8 7000 	strh.w	r7, [r8]
 801aad2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801aad4:	441c      	add	r4, r3
 801aad6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aad8:	f108 0802 	add.w	r8, r8, #2
 801aadc:	441e      	add	r6, r3
 801aade:	f10b 3bff 	add.w	fp, fp, #4294967295
 801aae2:	e644      	b.n	801a76e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801aae4:	2800      	cmp	r0, #0
 801aae6:	f43f af0b 	beq.w	801a900 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801aaea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801aaee:	9109      	str	r1, [sp, #36]	; 0x24
 801aaf0:	0e09      	lsrs	r1, r1, #24
 801aaf2:	9111      	str	r1, [sp, #68]	; 0x44
 801aaf4:	e704      	b.n	801a900 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801aaf6:	f8b8 1000 	ldrh.w	r1, [r8]
 801aafa:	43d2      	mvns	r2, r2
 801aafc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ab00:	fa5f fe82 	uxtb.w	lr, r2
 801ab04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab08:	fb0c fc0e 	mul.w	ip, ip, lr
 801ab0c:	10c8      	asrs	r0, r1, #3
 801ab0e:	00ca      	lsls	r2, r1, #3
 801ab10:	f10c 0101 	add.w	r1, ip, #1
 801ab14:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ab18:	0c39      	lsrs	r1, r7, #16
 801ab1a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ab1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ab22:	4912      	ldr	r1, [pc, #72]	; (801ab6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801ab24:	fb00 f00e 	mul.w	r0, r0, lr
 801ab28:	fa5f fc8c 	uxtb.w	ip, ip
 801ab2c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ab30:	b2d2      	uxtb	r2, r2
 801ab32:	1c41      	adds	r1, r0, #1
 801ab34:	fb02 f20e 	mul.w	r2, r2, lr
 801ab38:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ab3c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ab40:	1c51      	adds	r1, r2, #1
 801ab42:	00c0      	lsls	r0, r0, #3
 801ab44:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ab48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab4c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ab50:	ea4c 0c00 	orr.w	ip, ip, r0
 801ab54:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ab58:	ea47 0c0c 	orr.w	ip, r7, ip
 801ab5c:	f8a8 c000 	strh.w	ip, [r8]
 801ab60:	e7b7      	b.n	801aad2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801ab62:	b01b      	add	sp, #108	; 0x6c
 801ab64:	ecbd 8b08 	vpop	{d8-d11}
 801ab68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab6c:	fffff800 	.word	0xfffff800

0801ab70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ab70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ab74:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801ab78:	2c00      	cmp	r4, #0
 801ab7a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ab7e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ab82:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ab86:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801ab8a:	fb04 ce03 	mla	lr, r4, r3, ip
 801ab8e:	db60      	blt.n	801ac52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801ab90:	45a1      	cmp	r9, r4
 801ab92:	dd5e      	ble.n	801ac52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801ab94:	f1bc 0f00 	cmp.w	ip, #0
 801ab98:	db59      	blt.n	801ac4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801ab9a:	45e0      	cmp	r8, ip
 801ab9c:	dd57      	ble.n	801ac4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801ab9e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801aba2:	f01e 0f01 	tst.w	lr, #1
 801aba6:	5c16      	ldrb	r6, [r2, r0]
 801aba8:	bf0c      	ite	eq
 801abaa:	f006 060f 	andeq.w	r6, r6, #15
 801abae:	1136      	asrne	r6, r6, #4
 801abb0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801abb4:	b2f6      	uxtb	r6, r6
 801abb6:	f11c 0001 	adds.w	r0, ip, #1
 801abba:	d44d      	bmi.n	801ac58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801abbc:	4580      	cmp	r8, r0
 801abbe:	dd4b      	ble.n	801ac58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801abc0:	2d00      	cmp	r5, #0
 801abc2:	d04b      	beq.n	801ac5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801abc4:	f10e 0a01 	add.w	sl, lr, #1
 801abc8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801abcc:	f01a 0f01 	tst.w	sl, #1
 801abd0:	5c10      	ldrb	r0, [r2, r0]
 801abd2:	bf0c      	ite	eq
 801abd4:	f000 000f 	andeq.w	r0, r0, #15
 801abd8:	1100      	asrne	r0, r0, #4
 801abda:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801abde:	b2c0      	uxtb	r0, r0
 801abe0:	3401      	adds	r4, #1
 801abe2:	d43f      	bmi.n	801ac64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801abe4:	45a1      	cmp	r9, r4
 801abe6:	dd3d      	ble.n	801ac64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801abe8:	2f00      	cmp	r7, #0
 801abea:	f000 80a8 	beq.w	801ad3e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801abee:	f1bc 0f00 	cmp.w	ip, #0
 801abf2:	db35      	blt.n	801ac60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801abf4:	45e0      	cmp	r8, ip
 801abf6:	dd33      	ble.n	801ac60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801abf8:	eb03 090e 	add.w	r9, r3, lr
 801abfc:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ac00:	f019 0f01 	tst.w	r9, #1
 801ac04:	5d14      	ldrb	r4, [r2, r4]
 801ac06:	bf0c      	ite	eq
 801ac08:	f004 040f 	andeq.w	r4, r4, #15
 801ac0c:	1124      	asrne	r4, r4, #4
 801ac0e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ac12:	b2e4      	uxtb	r4, r4
 801ac14:	f11c 0c01 	adds.w	ip, ip, #1
 801ac18:	d427      	bmi.n	801ac6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ac1a:	45e0      	cmp	r8, ip
 801ac1c:	dd25      	ble.n	801ac6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ac1e:	b335      	cbz	r5, 801ac6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801ac20:	3301      	adds	r3, #1
 801ac22:	449e      	add	lr, r3
 801ac24:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ac28:	f01e 0f01 	tst.w	lr, #1
 801ac2c:	5cd2      	ldrb	r2, [r2, r3]
 801ac2e:	bf0c      	ite	eq
 801ac30:	f002 020f 	andeq.w	r2, r2, #15
 801ac34:	1112      	asrne	r2, r2, #4
 801ac36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac3a:	b2d3      	uxtb	r3, r2
 801ac3c:	2d0f      	cmp	r5, #15
 801ac3e:	d917      	bls.n	801ac70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801ac40:	4b42      	ldr	r3, [pc, #264]	; (801ad4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801ac42:	4a43      	ldr	r2, [pc, #268]	; (801ad50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801ac44:	4843      	ldr	r0, [pc, #268]	; (801ad54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801ac46:	f240 11f9 	movw	r1, #505	; 0x1f9
 801ac4a:	f001 f823 	bl	801bc94 <__assert_func>
 801ac4e:	2600      	movs	r6, #0
 801ac50:	e7b1      	b.n	801abb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801ac52:	2000      	movs	r0, #0
 801ac54:	4606      	mov	r6, r0
 801ac56:	e7c3      	b.n	801abe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ac58:	2000      	movs	r0, #0
 801ac5a:	e7c1      	b.n	801abe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ac5c:	4628      	mov	r0, r5
 801ac5e:	e7bf      	b.n	801abe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ac60:	2400      	movs	r4, #0
 801ac62:	e7d7      	b.n	801ac14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801ac64:	2300      	movs	r3, #0
 801ac66:	461c      	mov	r4, r3
 801ac68:	e7e8      	b.n	801ac3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ac6a:	2300      	movs	r3, #0
 801ac6c:	e7e6      	b.n	801ac3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ac6e:	462b      	mov	r3, r5
 801ac70:	2f0f      	cmp	r7, #15
 801ac72:	d8e5      	bhi.n	801ac40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ac74:	b2ad      	uxth	r5, r5
 801ac76:	b2bf      	uxth	r7, r7
 801ac78:	fb05 fc07 	mul.w	ip, r5, r7
 801ac7c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ac80:	012d      	lsls	r5, r5, #4
 801ac82:	b2bf      	uxth	r7, r7
 801ac84:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ac88:	eba5 050c 	sub.w	r5, r5, ip
 801ac8c:	1bd2      	subs	r2, r2, r7
 801ac8e:	b2ad      	uxth	r5, r5
 801ac90:	b292      	uxth	r2, r2
 801ac92:	4368      	muls	r0, r5
 801ac94:	fb06 0002 	mla	r0, r6, r2, r0
 801ac98:	fb07 0404 	mla	r4, r7, r4, r0
 801ac9c:	fb0c 4303 	mla	r3, ip, r3, r4
 801aca0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aca4:	b1b3      	cbz	r3, 801acd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801aca6:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801acaa:	435a      	muls	r2, r3
 801acac:	1c53      	adds	r3, r2, #1
 801acae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801acb2:	4a29      	ldr	r2, [pc, #164]	; (801ad58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801acb4:	121b      	asrs	r3, r3, #8
 801acb6:	6812      	ldr	r2, [r2, #0]
 801acb8:	2bff      	cmp	r3, #255	; 0xff
 801acba:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801acbe:	d10b      	bne.n	801acd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801acc0:	4b26      	ldr	r3, [pc, #152]	; (801ad5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801acc2:	0950      	lsrs	r0, r2, #5
 801acc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801acc8:	4033      	ands	r3, r6
 801acca:	4318      	orrs	r0, r3
 801accc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801acd0:	4302      	orrs	r2, r0
 801acd2:	800a      	strh	r2, [r1, #0]
 801acd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801acd8:	880d      	ldrh	r5, [r1, #0]
 801acda:	b29f      	uxth	r7, r3
 801acdc:	122c      	asrs	r4, r5, #8
 801acde:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ace2:	43db      	mvns	r3, r3
 801ace4:	b2db      	uxtb	r3, r3
 801ace6:	fb10 f007 	smulbb	r0, r0, r7
 801acea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801acee:	fb04 0403 	mla	r4, r4, r3, r0
 801acf2:	b2f6      	uxtb	r6, r6
 801acf4:	10e8      	asrs	r0, r5, #3
 801acf6:	b2d2      	uxtb	r2, r2
 801acf8:	00ed      	lsls	r5, r5, #3
 801acfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801acfe:	fb12 f207 	smulbb	r2, r2, r7
 801ad02:	fb16 f607 	smulbb	r6, r6, r7
 801ad06:	b2ed      	uxtb	r5, r5
 801ad08:	b2a4      	uxth	r4, r4
 801ad0a:	fb00 6603 	mla	r6, r0, r3, r6
 801ad0e:	fb05 2303 	mla	r3, r5, r3, r2
 801ad12:	b29a      	uxth	r2, r3
 801ad14:	1c63      	adds	r3, r4, #1
 801ad16:	b2b0      	uxth	r0, r6
 801ad18:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ad1c:	1c53      	adds	r3, r2, #1
 801ad1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ad22:	1c42      	adds	r2, r0, #1
 801ad24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ad28:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ad2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad30:	0940      	lsrs	r0, r0, #5
 801ad32:	4323      	orrs	r3, r4
 801ad34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad38:	4303      	orrs	r3, r0
 801ad3a:	800b      	strh	r3, [r1, #0]
 801ad3c:	e7ca      	b.n	801acd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ad3e:	2d0f      	cmp	r5, #15
 801ad40:	f63f af7e 	bhi.w	801ac40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ad44:	463b      	mov	r3, r7
 801ad46:	463c      	mov	r4, r7
 801ad48:	e794      	b.n	801ac74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801ad4a:	bf00      	nop
 801ad4c:	0801fc17 	.word	0x0801fc17
 801ad50:	08020146 	.word	0x08020146
 801ad54:	0801fbe4 	.word	0x0801fbe4
 801ad58:	2000a53c 	.word	0x2000a53c
 801ad5c:	00fff800 	.word	0x00fff800

0801ad60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad64:	ed2d 8b08 	vpush	{d8-d11}
 801ad68:	b097      	sub	sp, #92	; 0x5c
 801ad6a:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801ad6e:	9214      	str	r2, [sp, #80]	; 0x50
 801ad70:	9309      	str	r3, [sp, #36]	; 0x24
 801ad72:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ad74:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ad78:	910d      	str	r1, [sp, #52]	; 0x34
 801ad7a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ad7c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ad80:	9015      	str	r0, [sp, #84]	; 0x54
 801ad82:	6850      	ldr	r0, [r2, #4]
 801ad84:	6812      	ldr	r2, [r2, #0]
 801ad86:	fb00 1303 	mla	r3, r0, r3, r1
 801ad8a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ad8e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad90:	689b      	ldr	r3, [r3, #8]
 801ad92:	3301      	adds	r3, #1
 801ad94:	f023 0301 	bic.w	r3, r3, #1
 801ad98:	930a      	str	r3, [sp, #40]	; 0x28
 801ad9a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad9c:	681f      	ldr	r7, [r3, #0]
 801ad9e:	eeb0 aa40 	vmov.f32	s20, s0
 801ada2:	eef0 9a60 	vmov.f32	s19, s1
 801ada6:	eeb0 9a41 	vmov.f32	s18, s2
 801adaa:	eeb0 8a62 	vmov.f32	s16, s5
 801adae:	eef0 8a43 	vmov.f32	s17, s6
 801adb2:	eef0 ba44 	vmov.f32	s23, s8
 801adb6:	eeb0 ba64 	vmov.f32	s22, s9
 801adba:	eef0 aa45 	vmov.f32	s21, s10
 801adbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801adc0:	2b00      	cmp	r3, #0
 801adc2:	dc03      	bgt.n	801adcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801adc4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801adc6:	2b00      	cmp	r3, #0
 801adc8:	f340 8287 	ble.w	801b2da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801adcc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801adce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801add2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801add6:	1e48      	subs	r0, r1, #1
 801add8:	f102 3cff 	add.w	ip, r2, #4294967295
 801addc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adde:	2b00      	cmp	r3, #0
 801ade0:	f340 80c4 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801ade4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ade8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801adec:	d406      	bmi.n	801adfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801adee:	4586      	cmp	lr, r0
 801adf0:	da04      	bge.n	801adfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801adf2:	2b00      	cmp	r3, #0
 801adf4:	db02      	blt.n	801adfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801adf6:	4563      	cmp	r3, ip
 801adf8:	f2c0 80b9 	blt.w	801af6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801adfc:	f11e 0e01 	adds.w	lr, lr, #1
 801ae00:	f100 80aa 	bmi.w	801af58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae04:	4571      	cmp	r1, lr
 801ae06:	f2c0 80a7 	blt.w	801af58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae0a:	3301      	adds	r3, #1
 801ae0c:	f100 80a4 	bmi.w	801af58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae10:	429a      	cmp	r2, r3
 801ae12:	f2c0 80a1 	blt.w	801af58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae18:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801ae1c:	930e      	str	r3, [sp, #56]	; 0x38
 801ae1e:	46c8      	mov	r8, r9
 801ae20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae22:	2b00      	cmp	r3, #0
 801ae24:	f340 80c3 	ble.w	801afae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ae28:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ae2a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ae2e:	1423      	asrs	r3, r4, #16
 801ae30:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ae34:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ae38:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ae3c:	f100 814d 	bmi.w	801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ae40:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ae44:	455b      	cmp	r3, fp
 801ae46:	f280 8148 	bge.w	801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ae4a:	2800      	cmp	r0, #0
 801ae4c:	f2c0 8145 	blt.w	801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ae50:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ae54:	4558      	cmp	r0, fp
 801ae56:	f280 8140 	bge.w	801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ae5a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ae5c:	fb00 3305 	mla	r3, r0, r5, r3
 801ae60:	0858      	lsrs	r0, r3, #1
 801ae62:	07dd      	lsls	r5, r3, #31
 801ae64:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ae68:	bf54      	ite	pl
 801ae6a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ae6e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ae72:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ae76:	fa5f fc8c 	uxtb.w	ip, ip
 801ae7a:	2a00      	cmp	r2, #0
 801ae7c:	f000 80db 	beq.w	801b036 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ae80:	1c58      	adds	r0, r3, #1
 801ae82:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ae86:	07c0      	lsls	r0, r0, #31
 801ae88:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ae8c:	bf54      	ite	pl
 801ae8e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ae92:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ae96:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ae9a:	fa5f f08e 	uxtb.w	r0, lr
 801ae9e:	9010      	str	r0, [sp, #64]	; 0x40
 801aea0:	b1c9      	cbz	r1, 801aed6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aea2:	4453      	add	r3, sl
 801aea4:	0858      	lsrs	r0, r3, #1
 801aea6:	07dd      	lsls	r5, r3, #31
 801aea8:	5c38      	ldrb	r0, [r7, r0]
 801aeaa:	bf54      	ite	pl
 801aeac:	f000 000f 	andpl.w	r0, r0, #15
 801aeb0:	1100      	asrmi	r0, r0, #4
 801aeb2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aeb6:	3301      	adds	r3, #1
 801aeb8:	b2c0      	uxtb	r0, r0
 801aeba:	900b      	str	r0, [sp, #44]	; 0x2c
 801aebc:	0858      	lsrs	r0, r3, #1
 801aebe:	07dd      	lsls	r5, r3, #31
 801aec0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801aec4:	bf54      	ite	pl
 801aec6:	f00e 030f 	andpl.w	r3, lr, #15
 801aeca:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801aece:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801aed2:	b2db      	uxtb	r3, r3
 801aed4:	9311      	str	r3, [sp, #68]	; 0x44
 801aed6:	b292      	uxth	r2, r2
 801aed8:	b289      	uxth	r1, r1
 801aeda:	fb02 f301 	mul.w	r3, r2, r1
 801aede:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801aee2:	0112      	lsls	r2, r2, #4
 801aee4:	b289      	uxth	r1, r1
 801aee6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801aeea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aeec:	1ad2      	subs	r2, r2, r3
 801aeee:	1a40      	subs	r0, r0, r1
 801aef0:	b292      	uxth	r2, r2
 801aef2:	436a      	muls	r2, r5
 801aef4:	b280      	uxth	r0, r0
 801aef6:	fb0c 2c00 	mla	ip, ip, r0, r2
 801aefa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801aefc:	fb01 c102 	mla	r1, r1, r2, ip
 801af00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801af02:	fb03 1302 	mla	r3, r3, r2, r1
 801af06:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af0a:	b1db      	cbz	r3, 801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af0e:	4353      	muls	r3, r2
 801af10:	1c5a      	adds	r2, r3, #1
 801af12:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801af16:	4ac6      	ldr	r2, [pc, #792]	; (801b230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801af18:	121b      	asrs	r3, r3, #8
 801af1a:	6812      	ldr	r2, [r2, #0]
 801af1c:	2bff      	cmp	r3, #255	; 0xff
 801af1e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801af22:	f040 8099 	bne.w	801b058 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801af26:	0953      	lsrs	r3, r2, #5
 801af28:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801af2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af30:	f02c 0c07 	bic.w	ip, ip, #7
 801af34:	ea43 0c0c 	orr.w	ip, r3, ip
 801af38:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801af3c:	ea4c 0202 	orr.w	r2, ip, r2
 801af40:	f8a8 2000 	strh.w	r2, [r8]
 801af44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af46:	441c      	add	r4, r3
 801af48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af4a:	441e      	add	r6, r3
 801af4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af4e:	3b01      	subs	r3, #1
 801af50:	f108 0802 	add.w	r8, r8, #2
 801af54:	930e      	str	r3, [sp, #56]	; 0x38
 801af56:	e763      	b.n	801ae20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801af58:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af5a:	441c      	add	r4, r3
 801af5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af5e:	441e      	add	r6, r3
 801af60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af62:	3b01      	subs	r3, #1
 801af64:	9309      	str	r3, [sp, #36]	; 0x24
 801af66:	f109 0902 	add.w	r9, r9, #2
 801af6a:	e737      	b.n	801addc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af6c:	d024      	beq.n	801afb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801af6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af70:	982b      	ldr	r0, [sp, #172]	; 0xac
 801af72:	3b01      	subs	r3, #1
 801af74:	fb00 4003 	mla	r0, r0, r3, r4
 801af78:	1400      	asrs	r0, r0, #16
 801af7a:	f53f af4c 	bmi.w	801ae16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801af7e:	3901      	subs	r1, #1
 801af80:	4288      	cmp	r0, r1
 801af82:	f6bf af48 	bge.w	801ae16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801af86:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801af88:	fb01 6303 	mla	r3, r1, r3, r6
 801af8c:	141b      	asrs	r3, r3, #16
 801af8e:	f53f af42 	bmi.w	801ae16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801af92:	3a01      	subs	r2, #1
 801af94:	4293      	cmp	r3, r2
 801af96:	f6bf af3e 	bge.w	801ae16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801af9a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801af9e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801afa2:	930e      	str	r3, [sp, #56]	; 0x38
 801afa4:	46c8      	mov	r8, r9
 801afa6:	f1bb 0f00 	cmp.w	fp, #0
 801afaa:	f300 80b7 	bgt.w	801b11c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801afae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afb0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801afb4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801afb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801afba:	2b00      	cmp	r3, #0
 801afbc:	f340 818d 	ble.w	801b2da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801afc0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801afc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afc8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801afcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801afce:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801afd2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801afd6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801afda:	eef0 6a48 	vmov.f32	s13, s16
 801afde:	ee69 7a27 	vmul.f32	s15, s18, s15
 801afe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afe6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801afea:	ee16 4a90 	vmov	r4, s13
 801afee:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801aff2:	eef0 6a68 	vmov.f32	s13, s17
 801aff6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801affa:	ee18 2a10 	vmov	r2, s16
 801affe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b002:	fb92 f3f3 	sdiv	r3, r2, r3
 801b006:	ee18 2a90 	vmov	r2, s17
 801b00a:	932b      	str	r3, [sp, #172]	; 0xac
 801b00c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b00e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b012:	932c      	str	r3, [sp, #176]	; 0xb0
 801b014:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b016:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b018:	3b01      	subs	r3, #1
 801b01a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b01e:	930d      	str	r3, [sp, #52]	; 0x34
 801b020:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b022:	bf08      	it	eq
 801b024:	4613      	moveq	r3, r2
 801b026:	ee16 6a90 	vmov	r6, s13
 801b02a:	9309      	str	r3, [sp, #36]	; 0x24
 801b02c:	eef0 8a67 	vmov.f32	s17, s15
 801b030:	eeb0 8a47 	vmov.f32	s16, s14
 801b034:	e6c3      	b.n	801adbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b036:	2900      	cmp	r1, #0
 801b038:	f43f af4d 	beq.w	801aed6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b03c:	eb0a 0003 	add.w	r0, sl, r3
 801b040:	0843      	lsrs	r3, r0, #1
 801b042:	07c0      	lsls	r0, r0, #31
 801b044:	5cfb      	ldrb	r3, [r7, r3]
 801b046:	bf54      	ite	pl
 801b048:	f003 030f 	andpl.w	r3, r3, #15
 801b04c:	111b      	asrmi	r3, r3, #4
 801b04e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b052:	b2db      	uxtb	r3, r3
 801b054:	930b      	str	r3, [sp, #44]	; 0x2c
 801b056:	e73e      	b.n	801aed6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b058:	f8b8 e000 	ldrh.w	lr, [r8]
 801b05c:	fa1f fb83 	uxth.w	fp, r3
 801b060:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b064:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b068:	43db      	mvns	r3, r3
 801b06a:	b2db      	uxtb	r3, r3
 801b06c:	fb11 f10b 	smulbb	r1, r1, fp
 801b070:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b074:	fb00 1003 	mla	r0, r0, r3, r1
 801b078:	fa5f fc8c 	uxtb.w	ip, ip
 801b07c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b080:	b2d2      	uxtb	r2, r2
 801b082:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b086:	b280      	uxth	r0, r0
 801b088:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b08c:	fb1c fc0b 	smulbb	ip, ip, fp
 801b090:	fa5f fe8e 	uxtb.w	lr, lr
 801b094:	fb12 fb0b 	smulbb	fp, r2, fp
 801b098:	fb01 cc03 	mla	ip, r1, r3, ip
 801b09c:	fb0e bb03 	mla	fp, lr, r3, fp
 801b0a0:	1c43      	adds	r3, r0, #1
 801b0a2:	fa1f fc8c 	uxth.w	ip, ip
 801b0a6:	fa1f fb8b 	uxth.w	fp, fp
 801b0aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b0ae:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801b0b2:	f10c 0101 	add.w	r1, ip, #1
 801b0b6:	f10b 0001 	add.w	r0, fp, #1
 801b0ba:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b0be:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b0c2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b0c6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b0ca:	4318      	orrs	r0, r3
 801b0cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b0d0:	ea40 000c 	orr.w	r0, r0, ip
 801b0d4:	f8a8 0000 	strh.w	r0, [r8]
 801b0d8:	e734      	b.n	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b0da:	f113 0b01 	adds.w	fp, r3, #1
 801b0de:	f53f af31 	bmi.w	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b0e2:	45dc      	cmp	ip, fp
 801b0e4:	f6ff af2e 	blt.w	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b0e8:	f110 0b01 	adds.w	fp, r0, #1
 801b0ec:	f53f af2a 	bmi.w	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b0f0:	45de      	cmp	lr, fp
 801b0f2:	f6ff af27 	blt.w	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b0f6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b0f8:	9302      	str	r3, [sp, #8]
 801b0fa:	fa0f f38e 	sxth.w	r3, lr
 801b0fe:	9301      	str	r3, [sp, #4]
 801b100:	fa0f f38c 	sxth.w	r3, ip
 801b104:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b108:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801b10c:	9300      	str	r3, [sp, #0]
 801b10e:	463a      	mov	r2, r7
 801b110:	4653      	mov	r3, sl
 801b112:	4641      	mov	r1, r8
 801b114:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b116:	f7ff fd2b 	bl	801ab70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801b11a:	e713      	b.n	801af44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b11c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b11e:	1422      	asrs	r2, r4, #16
 801b120:	1433      	asrs	r3, r6, #16
 801b122:	fb05 2303 	mla	r3, r5, r3, r2
 801b126:	085a      	lsrs	r2, r3, #1
 801b128:	07dd      	lsls	r5, r3, #31
 801b12a:	5cba      	ldrb	r2, [r7, r2]
 801b12c:	bf54      	ite	pl
 801b12e:	f002 020f 	andpl.w	r2, r2, #15
 801b132:	1112      	asrmi	r2, r2, #4
 801b134:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b138:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b13c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b140:	b2d2      	uxtb	r2, r2
 801b142:	2900      	cmp	r1, #0
 801b144:	d076      	beq.n	801b234 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b146:	f103 0e01 	add.w	lr, r3, #1
 801b14a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b14e:	f01e 0f01 	tst.w	lr, #1
 801b152:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b156:	bf0c      	ite	eq
 801b158:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b15c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b160:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b164:	fa5f f58c 	uxtb.w	r5, ip
 801b168:	9512      	str	r5, [sp, #72]	; 0x48
 801b16a:	b300      	cbz	r0, 801b1ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b16c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b16e:	442b      	add	r3, r5
 801b170:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b174:	07dd      	lsls	r5, r3, #31
 801b176:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b17a:	bf54      	ite	pl
 801b17c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b180:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b184:	3301      	adds	r3, #1
 801b186:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b18a:	fa5f f58c 	uxtb.w	r5, ip
 801b18e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b192:	950c      	str	r5, [sp, #48]	; 0x30
 801b194:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b198:	07dd      	lsls	r5, r3, #31
 801b19a:	bf54      	ite	pl
 801b19c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b1a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b1a4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b1a8:	fa5f f38c 	uxtb.w	r3, ip
 801b1ac:	9313      	str	r3, [sp, #76]	; 0x4c
 801b1ae:	b289      	uxth	r1, r1
 801b1b0:	b280      	uxth	r0, r0
 801b1b2:	fb01 f300 	mul.w	r3, r1, r0
 801b1b6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801b1ba:	0109      	lsls	r1, r1, #4
 801b1bc:	b280      	uxth	r0, r0
 801b1be:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b1c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b1c4:	1ac9      	subs	r1, r1, r3
 801b1c6:	ebac 0c00 	sub.w	ip, ip, r0
 801b1ca:	b289      	uxth	r1, r1
 801b1cc:	4369      	muls	r1, r5
 801b1ce:	fa1f fc8c 	uxth.w	ip, ip
 801b1d2:	fb02 120c 	mla	r2, r2, ip, r1
 801b1d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b1d8:	fb00 2001 	mla	r0, r0, r1, r2
 801b1dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1de:	fb03 0302 	mla	r3, r3, r2, r0
 801b1e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b1e6:	b1d3      	cbz	r3, 801b21e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b1e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b1ea:	4353      	muls	r3, r2
 801b1ec:	1c5a      	adds	r2, r3, #1
 801b1ee:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b1f2:	4a0f      	ldr	r2, [pc, #60]	; (801b230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801b1f4:	121b      	asrs	r3, r3, #8
 801b1f6:	6812      	ldr	r2, [r2, #0]
 801b1f8:	2bff      	cmp	r3, #255	; 0xff
 801b1fa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801b1fe:	d12d      	bne.n	801b25c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801b200:	0953      	lsrs	r3, r2, #5
 801b202:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b206:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b20a:	f02c 0c07 	bic.w	ip, ip, #7
 801b20e:	ea43 0c0c 	orr.w	ip, r3, ip
 801b212:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b216:	ea4c 0202 	orr.w	r2, ip, r2
 801b21a:	f8a8 2000 	strh.w	r2, [r8]
 801b21e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b220:	441c      	add	r4, r3
 801b222:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b224:	f108 0802 	add.w	r8, r8, #2
 801b228:	441e      	add	r6, r3
 801b22a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b22e:	e6ba      	b.n	801afa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b230:	2000a53c 	.word	0x2000a53c
 801b234:	2800      	cmp	r0, #0
 801b236:	d0ba      	beq.n	801b1ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b238:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b23a:	442b      	add	r3, r5
 801b23c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b240:	07db      	lsls	r3, r3, #31
 801b242:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b246:	bf54      	ite	pl
 801b248:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b24c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b250:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b254:	fa5f f38c 	uxtb.w	r3, ip
 801b258:	930c      	str	r3, [sp, #48]	; 0x30
 801b25a:	e7a8      	b.n	801b1ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b25c:	f8b8 e000 	ldrh.w	lr, [r8]
 801b260:	fa1f fa83 	uxth.w	sl, r3
 801b264:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b268:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b26c:	43db      	mvns	r3, r3
 801b26e:	b2db      	uxtb	r3, r3
 801b270:	fb11 f10a 	smulbb	r1, r1, sl
 801b274:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b278:	fb00 1003 	mla	r0, r0, r3, r1
 801b27c:	b2d2      	uxtb	r2, r2
 801b27e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b282:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b286:	fa5f fe8e 	uxtb.w	lr, lr
 801b28a:	fb12 f20a 	smulbb	r2, r2, sl
 801b28e:	fb0e 2203 	mla	r2, lr, r3, r2
 801b292:	fa5f fc8c 	uxtb.w	ip, ip
 801b296:	b280      	uxth	r0, r0
 801b298:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b29c:	b292      	uxth	r2, r2
 801b29e:	fb1c fc0a 	smulbb	ip, ip, sl
 801b2a2:	fb01 cc03 	mla	ip, r1, r3, ip
 801b2a6:	1c43      	adds	r3, r0, #1
 801b2a8:	1c51      	adds	r1, r2, #1
 801b2aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b2ae:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b2b2:	fa1f fc8c 	uxth.w	ip, ip
 801b2b6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b2ba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b2be:	4308      	orrs	r0, r1
 801b2c0:	f10c 0101 	add.w	r1, ip, #1
 801b2c4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b2c8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b2cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b2d0:	ea40 000c 	orr.w	r0, r0, ip
 801b2d4:	f8a8 0000 	strh.w	r0, [r8]
 801b2d8:	e7a1      	b.n	801b21e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b2da:	b017      	add	sp, #92	; 0x5c
 801b2dc:	ecbd 8b08 	vpop	{d8-d11}
 801b2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b2e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b2e8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b2ec:	2c00      	cmp	r4, #0
 801b2ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b2f2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b2f6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b2fa:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b2fe:	fb04 ce03 	mla	lr, r4, r3, ip
 801b302:	db60      	blt.n	801b3c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b304:	45a1      	cmp	r9, r4
 801b306:	dd5e      	ble.n	801b3c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b308:	f1bc 0f00 	cmp.w	ip, #0
 801b30c:	db59      	blt.n	801b3c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b30e:	45e0      	cmp	r8, ip
 801b310:	dd57      	ble.n	801b3c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b312:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b316:	f01e 0f01 	tst.w	lr, #1
 801b31a:	5c16      	ldrb	r6, [r2, r0]
 801b31c:	bf0c      	ite	eq
 801b31e:	f006 060f 	andeq.w	r6, r6, #15
 801b322:	1136      	asrne	r6, r6, #4
 801b324:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b328:	b2f6      	uxtb	r6, r6
 801b32a:	f11c 0001 	adds.w	r0, ip, #1
 801b32e:	d44d      	bmi.n	801b3cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b330:	4580      	cmp	r8, r0
 801b332:	dd4b      	ble.n	801b3cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b334:	2d00      	cmp	r5, #0
 801b336:	d04b      	beq.n	801b3d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b338:	f10e 0a01 	add.w	sl, lr, #1
 801b33c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b340:	f01a 0f01 	tst.w	sl, #1
 801b344:	5c10      	ldrb	r0, [r2, r0]
 801b346:	bf0c      	ite	eq
 801b348:	f000 000f 	andeq.w	r0, r0, #15
 801b34c:	1100      	asrne	r0, r0, #4
 801b34e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b352:	b2c0      	uxtb	r0, r0
 801b354:	3401      	adds	r4, #1
 801b356:	d43f      	bmi.n	801b3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b358:	45a1      	cmp	r9, r4
 801b35a:	dd3d      	ble.n	801b3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b35c:	2f00      	cmp	r7, #0
 801b35e:	f000 8093 	beq.w	801b488 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b362:	f1bc 0f00 	cmp.w	ip, #0
 801b366:	db35      	blt.n	801b3d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b368:	45e0      	cmp	r8, ip
 801b36a:	dd33      	ble.n	801b3d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b36c:	eb03 090e 	add.w	r9, r3, lr
 801b370:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b374:	f019 0f01 	tst.w	r9, #1
 801b378:	5d14      	ldrb	r4, [r2, r4]
 801b37a:	bf0c      	ite	eq
 801b37c:	f004 040f 	andeq.w	r4, r4, #15
 801b380:	1124      	asrne	r4, r4, #4
 801b382:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b386:	b2e4      	uxtb	r4, r4
 801b388:	f11c 0c01 	adds.w	ip, ip, #1
 801b38c:	d427      	bmi.n	801b3de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b38e:	45e0      	cmp	r8, ip
 801b390:	dd25      	ble.n	801b3de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b392:	b335      	cbz	r5, 801b3e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b394:	3301      	adds	r3, #1
 801b396:	449e      	add	lr, r3
 801b398:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b39c:	f01e 0f01 	tst.w	lr, #1
 801b3a0:	5cd2      	ldrb	r2, [r2, r3]
 801b3a2:	bf0c      	ite	eq
 801b3a4:	f002 020f 	andeq.w	r2, r2, #15
 801b3a8:	1112      	asrne	r2, r2, #4
 801b3aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b3ae:	b2d3      	uxtb	r3, r2
 801b3b0:	2d0f      	cmp	r5, #15
 801b3b2:	d917      	bls.n	801b3e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b3b4:	4b37      	ldr	r3, [pc, #220]	; (801b494 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801b3b6:	4a38      	ldr	r2, [pc, #224]	; (801b498 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801b3b8:	4838      	ldr	r0, [pc, #224]	; (801b49c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801b3ba:	f240 11f9 	movw	r1, #505	; 0x1f9
 801b3be:	f000 fc69 	bl	801bc94 <__assert_func>
 801b3c2:	2600      	movs	r6, #0
 801b3c4:	e7b1      	b.n	801b32a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b3c6:	2000      	movs	r0, #0
 801b3c8:	4606      	mov	r6, r0
 801b3ca:	e7c3      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b3cc:	2000      	movs	r0, #0
 801b3ce:	e7c1      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b3d0:	4628      	mov	r0, r5
 801b3d2:	e7bf      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b3d4:	2400      	movs	r4, #0
 801b3d6:	e7d7      	b.n	801b388 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b3d8:	2300      	movs	r3, #0
 801b3da:	461c      	mov	r4, r3
 801b3dc:	e7e8      	b.n	801b3b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b3de:	2300      	movs	r3, #0
 801b3e0:	e7e6      	b.n	801b3b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b3e2:	462b      	mov	r3, r5
 801b3e4:	2f0f      	cmp	r7, #15
 801b3e6:	d8e5      	bhi.n	801b3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b3e8:	b2ad      	uxth	r5, r5
 801b3ea:	b2bf      	uxth	r7, r7
 801b3ec:	fb05 fc07 	mul.w	ip, r5, r7
 801b3f0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b3f4:	012d      	lsls	r5, r5, #4
 801b3f6:	b2bf      	uxth	r7, r7
 801b3f8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b3fc:	eba5 050c 	sub.w	r5, r5, ip
 801b400:	1bd2      	subs	r2, r2, r7
 801b402:	b2ad      	uxth	r5, r5
 801b404:	b292      	uxth	r2, r2
 801b406:	4368      	muls	r0, r5
 801b408:	fb06 0002 	mla	r0, r6, r2, r0
 801b40c:	fb07 0404 	mla	r4, r7, r4, r0
 801b410:	fb0c 4303 	mla	r3, ip, r3, r4
 801b414:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b418:	b3a3      	cbz	r3, 801b484 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b41a:	4a21      	ldr	r2, [pc, #132]	; (801b4a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b41c:	880e      	ldrh	r6, [r1, #0]
 801b41e:	6815      	ldr	r5, [r2, #0]
 801b420:	1234      	asrs	r4, r6, #8
 801b422:	b29a      	uxth	r2, r3
 801b424:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b428:	43db      	mvns	r3, r3
 801b42a:	b2db      	uxtb	r3, r3
 801b42c:	fb10 f002 	smulbb	r0, r0, r2
 801b430:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b434:	fb04 0403 	mla	r4, r4, r3, r0
 801b438:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b43c:	10f0      	asrs	r0, r6, #3
 801b43e:	b2ed      	uxtb	r5, r5
 801b440:	00f6      	lsls	r6, r6, #3
 801b442:	fb17 f702 	smulbb	r7, r7, r2
 801b446:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b44a:	fb15 f202 	smulbb	r2, r5, r2
 801b44e:	b2f6      	uxtb	r6, r6
 801b450:	b2a4      	uxth	r4, r4
 801b452:	fb00 7003 	mla	r0, r0, r3, r7
 801b456:	fb06 2303 	mla	r3, r6, r3, r2
 801b45a:	b29a      	uxth	r2, r3
 801b45c:	1c63      	adds	r3, r4, #1
 801b45e:	b280      	uxth	r0, r0
 801b460:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b464:	1c53      	adds	r3, r2, #1
 801b466:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b46a:	1c42      	adds	r2, r0, #1
 801b46c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b470:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b474:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b478:	0940      	lsrs	r0, r0, #5
 801b47a:	4323      	orrs	r3, r4
 801b47c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b480:	4303      	orrs	r3, r0
 801b482:	800b      	strh	r3, [r1, #0]
 801b484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b488:	2d0f      	cmp	r5, #15
 801b48a:	d893      	bhi.n	801b3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b48c:	463b      	mov	r3, r7
 801b48e:	463c      	mov	r4, r7
 801b490:	e7aa      	b.n	801b3e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b492:	bf00      	nop
 801b494:	0801fc17 	.word	0x0801fc17
 801b498:	08020146 	.word	0x08020146
 801b49c:	0801fbe4 	.word	0x0801fbe4
 801b4a0:	2000a53c 	.word	0x2000a53c

0801b4a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4a8:	ed2d 8b08 	vpush	{d8-d11}
 801b4ac:	b093      	sub	sp, #76	; 0x4c
 801b4ae:	461d      	mov	r5, r3
 801b4b0:	920c      	str	r2, [sp, #48]	; 0x30
 801b4b2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b4b4:	9107      	str	r1, [sp, #28]
 801b4b6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b4ba:	9011      	str	r0, [sp, #68]	; 0x44
 801b4bc:	6850      	ldr	r0, [r2, #4]
 801b4be:	6812      	ldr	r2, [r2, #0]
 801b4c0:	fb00 1303 	mla	r3, r0, r3, r1
 801b4c4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b4c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4ca:	689b      	ldr	r3, [r3, #8]
 801b4cc:	3301      	adds	r3, #1
 801b4ce:	f023 0301 	bic.w	r3, r3, #1
 801b4d2:	9306      	str	r3, [sp, #24]
 801b4d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4d6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b4da:	681f      	ldr	r7, [r3, #0]
 801b4dc:	eeb0 aa40 	vmov.f32	s20, s0
 801b4e0:	eef0 9a60 	vmov.f32	s19, s1
 801b4e4:	eeb0 9a41 	vmov.f32	s18, s2
 801b4e8:	eeb0 8a62 	vmov.f32	s16, s5
 801b4ec:	eef0 8a43 	vmov.f32	s17, s6
 801b4f0:	eef0 ba44 	vmov.f32	s23, s8
 801b4f4:	eeb0 ba64 	vmov.f32	s22, s9
 801b4f8:	eef0 aa45 	vmov.f32	s21, s10
 801b4fc:	9b07      	ldr	r3, [sp, #28]
 801b4fe:	2b00      	cmp	r3, #0
 801b500:	dc03      	bgt.n	801b50a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b502:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b504:	2b00      	cmp	r3, #0
 801b506:	f340 8267 	ble.w	801b9d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b50a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b50c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b510:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b514:	1e48      	subs	r0, r1, #1
 801b516:	f102 3cff 	add.w	ip, r2, #4294967295
 801b51a:	2d00      	cmp	r5, #0
 801b51c:	f340 80b8 	ble.w	801b690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b520:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b524:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b528:	d406      	bmi.n	801b538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b52a:	4586      	cmp	lr, r0
 801b52c:	da04      	bge.n	801b538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b52e:	2b00      	cmp	r3, #0
 801b530:	db02      	blt.n	801b538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b532:	4563      	cmp	r3, ip
 801b534:	f2c0 80ad 	blt.w	801b692 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b538:	f11e 0e01 	adds.w	lr, lr, #1
 801b53c:	f100 80a0 	bmi.w	801b680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b540:	4571      	cmp	r1, lr
 801b542:	f2c0 809d 	blt.w	801b680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b546:	3301      	adds	r3, #1
 801b548:	f100 809a 	bmi.w	801b680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b54c:	429a      	cmp	r2, r3
 801b54e:	f2c0 8097 	blt.w	801b680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b552:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b556:	9509      	str	r5, [sp, #36]	; 0x24
 801b558:	46c8      	mov	r8, r9
 801b55a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b55c:	2b00      	cmp	r3, #0
 801b55e:	f340 80b6 	ble.w	801b6ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b562:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b566:	9308      	str	r3, [sp, #32]
 801b568:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b56a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b56e:	1423      	asrs	r3, r4, #16
 801b570:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b574:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b578:	f100 813e 	bmi.w	801b7f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b57c:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b580:	455b      	cmp	r3, fp
 801b582:	f280 8139 	bge.w	801b7f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b586:	2800      	cmp	r0, #0
 801b588:	f2c0 8136 	blt.w	801b7f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b58c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b590:	4558      	cmp	r0, fp
 801b592:	f280 8131 	bge.w	801b7f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b596:	9a06      	ldr	r2, [sp, #24]
 801b598:	fb00 3302 	mla	r3, r0, r2, r3
 801b59c:	0858      	lsrs	r0, r3, #1
 801b59e:	07da      	lsls	r2, r3, #31
 801b5a0:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b5a4:	9a08      	ldr	r2, [sp, #32]
 801b5a6:	bf54      	ite	pl
 801b5a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b5ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b5b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b5b4:	fa5f fc8c 	uxtb.w	ip, ip
 801b5b8:	2a00      	cmp	r2, #0
 801b5ba:	f000 80cb 	beq.w	801b754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801b5be:	1c58      	adds	r0, r3, #1
 801b5c0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b5c4:	07c0      	lsls	r0, r0, #31
 801b5c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b5ca:	bf54      	ite	pl
 801b5cc:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b5d0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b5d4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b5d8:	fa5f fe8e 	uxtb.w	lr, lr
 801b5dc:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b5e0:	b1b9      	cbz	r1, 801b612 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b5e2:	4453      	add	r3, sl
 801b5e4:	0858      	lsrs	r0, r3, #1
 801b5e6:	07da      	lsls	r2, r3, #31
 801b5e8:	5c38      	ldrb	r0, [r7, r0]
 801b5ea:	bf54      	ite	pl
 801b5ec:	f000 000f 	andpl.w	r0, r0, #15
 801b5f0:	1100      	asrmi	r0, r0, #4
 801b5f2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b5f6:	b2c0      	uxtb	r0, r0
 801b5f8:	900a      	str	r0, [sp, #40]	; 0x28
 801b5fa:	1c58      	adds	r0, r3, #1
 801b5fc:	0843      	lsrs	r3, r0, #1
 801b5fe:	07c2      	lsls	r2, r0, #31
 801b600:	5cfb      	ldrb	r3, [r7, r3]
 801b602:	bf54      	ite	pl
 801b604:	f003 030f 	andpl.w	r3, r3, #15
 801b608:	111b      	asrmi	r3, r3, #4
 801b60a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b60e:	b2db      	uxtb	r3, r3
 801b610:	930e      	str	r3, [sp, #56]	; 0x38
 801b612:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b616:	b289      	uxth	r1, r1
 801b618:	fb02 f301 	mul.w	r3, r2, r1
 801b61c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b620:	0112      	lsls	r2, r2, #4
 801b622:	b289      	uxth	r1, r1
 801b624:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b628:	1a40      	subs	r0, r0, r1
 801b62a:	fa1f fe80 	uxth.w	lr, r0
 801b62e:	1ad2      	subs	r2, r2, r3
 801b630:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b632:	b292      	uxth	r2, r2
 801b634:	4342      	muls	r2, r0
 801b636:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b63a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b63c:	fb01 c102 	mla	r1, r1, r2, ip
 801b640:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b642:	fb03 1302 	mla	r3, r3, r2, r1
 801b646:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b64a:	2bff      	cmp	r3, #255	; 0xff
 801b64c:	f040 8093 	bne.w	801b776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b650:	4bbe      	ldr	r3, [pc, #760]	; (801b94c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b652:	681a      	ldr	r2, [r3, #0]
 801b654:	4bbe      	ldr	r3, [pc, #760]	; (801b950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b656:	0951      	lsrs	r1, r2, #5
 801b658:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b65c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b660:	430b      	orrs	r3, r1
 801b662:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b666:	4313      	orrs	r3, r2
 801b668:	f8a8 3000 	strh.w	r3, [r8]
 801b66c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b66e:	441c      	add	r4, r3
 801b670:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b672:	441e      	add	r6, r3
 801b674:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b676:	3b01      	subs	r3, #1
 801b678:	f108 0802 	add.w	r8, r8, #2
 801b67c:	9309      	str	r3, [sp, #36]	; 0x24
 801b67e:	e76c      	b.n	801b55a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b680:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b682:	441c      	add	r4, r3
 801b684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b686:	3d01      	subs	r5, #1
 801b688:	441e      	add	r6, r3
 801b68a:	f109 0902 	add.w	r9, r9, #2
 801b68e:	e744      	b.n	801b51a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b690:	d021      	beq.n	801b6d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b692:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b694:	1e6b      	subs	r3, r5, #1
 801b696:	fb00 4003 	mla	r0, r0, r3, r4
 801b69a:	1400      	asrs	r0, r0, #16
 801b69c:	f53f af59 	bmi.w	801b552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b6a0:	3901      	subs	r1, #1
 801b6a2:	4288      	cmp	r0, r1
 801b6a4:	f6bf af55 	bge.w	801b552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b6a8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b6aa:	fb01 6303 	mla	r3, r1, r3, r6
 801b6ae:	141b      	asrs	r3, r3, #16
 801b6b0:	f53f af4f 	bmi.w	801b552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b6b4:	3a01      	subs	r2, #1
 801b6b6:	4293      	cmp	r3, r2
 801b6b8:	f6bf af4b 	bge.w	801b552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b6bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b6c0:	9308      	str	r3, [sp, #32]
 801b6c2:	46a8      	mov	r8, r5
 801b6c4:	46ce      	mov	lr, r9
 801b6c6:	f1b8 0f00 	cmp.w	r8, #0
 801b6ca:	f300 80b5 	bgt.w	801b838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b6ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b6d2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b6d6:	9b07      	ldr	r3, [sp, #28]
 801b6d8:	2b00      	cmp	r3, #0
 801b6da:	f340 817d 	ble.w	801b9d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b6de:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b6e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b6e6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b6ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b6ec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b6f0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b6f4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b6f8:	eef0 6a48 	vmov.f32	s13, s16
 801b6fc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b700:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b704:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b708:	ee16 4a90 	vmov	r4, s13
 801b70c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b710:	eef0 6a68 	vmov.f32	s13, s17
 801b714:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b718:	ee18 2a10 	vmov	r2, s16
 801b71c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b720:	fb92 f3f3 	sdiv	r3, r2, r3
 801b724:	ee18 2a90 	vmov	r2, s17
 801b728:	9327      	str	r3, [sp, #156]	; 0x9c
 801b72a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b72c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b730:	9328      	str	r3, [sp, #160]	; 0xa0
 801b732:	9b07      	ldr	r3, [sp, #28]
 801b734:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b736:	3b01      	subs	r3, #1
 801b738:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b73c:	9307      	str	r3, [sp, #28]
 801b73e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b740:	ee16 6a90 	vmov	r6, s13
 801b744:	bf14      	ite	ne
 801b746:	461d      	movne	r5, r3
 801b748:	4615      	moveq	r5, r2
 801b74a:	eef0 8a67 	vmov.f32	s17, s15
 801b74e:	eeb0 8a47 	vmov.f32	s16, s14
 801b752:	e6d3      	b.n	801b4fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b754:	2900      	cmp	r1, #0
 801b756:	f43f af5c 	beq.w	801b612 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b75a:	eb0a 0003 	add.w	r0, sl, r3
 801b75e:	0843      	lsrs	r3, r0, #1
 801b760:	07c0      	lsls	r0, r0, #31
 801b762:	5cfb      	ldrb	r3, [r7, r3]
 801b764:	bf54      	ite	pl
 801b766:	f003 030f 	andpl.w	r3, r3, #15
 801b76a:	111b      	asrmi	r3, r3, #4
 801b76c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b770:	b2db      	uxtb	r3, r3
 801b772:	930a      	str	r3, [sp, #40]	; 0x28
 801b774:	e74d      	b.n	801b612 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b776:	2b00      	cmp	r3, #0
 801b778:	f43f af78 	beq.w	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b77c:	4a73      	ldr	r2, [pc, #460]	; (801b94c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b77e:	f8b8 c000 	ldrh.w	ip, [r8]
 801b782:	6810      	ldr	r0, [r2, #0]
 801b784:	fa1f fe83 	uxth.w	lr, r3
 801b788:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b78c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b790:	43db      	mvns	r3, r3
 801b792:	b2db      	uxtb	r3, r3
 801b794:	fb12 f20e 	smulbb	r2, r2, lr
 801b798:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b79c:	fb01 2103 	mla	r1, r1, r3, r2
 801b7a0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b7a4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b7a8:	b2c0      	uxtb	r0, r0
 801b7aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7ae:	fb1b fb0e 	smulbb	fp, fp, lr
 801b7b2:	b289      	uxth	r1, r1
 801b7b4:	fb10 fe0e 	smulbb	lr, r0, lr
 801b7b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b7bc:	fa5f fc8c 	uxtb.w	ip, ip
 801b7c0:	fb02 b203 	mla	r2, r2, r3, fp
 801b7c4:	1c48      	adds	r0, r1, #1
 801b7c6:	fb0c e303 	mla	r3, ip, r3, lr
 801b7ca:	b292      	uxth	r2, r2
 801b7cc:	b29b      	uxth	r3, r3
 801b7ce:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b7d2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b7d6:	f102 0b01 	add.w	fp, r2, #1
 801b7da:	1c59      	adds	r1, r3, #1
 801b7dc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b7e0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b7e4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b7e8:	0952      	lsrs	r2, r2, #5
 801b7ea:	4301      	orrs	r1, r0
 801b7ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b7f0:	4311      	orrs	r1, r2
 801b7f2:	f8a8 1000 	strh.w	r1, [r8]
 801b7f6:	e739      	b.n	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b7f8:	f113 0b01 	adds.w	fp, r3, #1
 801b7fc:	f53f af36 	bmi.w	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b800:	45dc      	cmp	ip, fp
 801b802:	f6ff af33 	blt.w	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b806:	f110 0b01 	adds.w	fp, r0, #1
 801b80a:	f53f af2f 	bmi.w	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b80e:	45de      	cmp	lr, fp
 801b810:	f6ff af2c 	blt.w	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b814:	9a08      	ldr	r2, [sp, #32]
 801b816:	9302      	str	r3, [sp, #8]
 801b818:	fa0f f38e 	sxth.w	r3, lr
 801b81c:	9301      	str	r3, [sp, #4]
 801b81e:	fa0f f38c 	sxth.w	r3, ip
 801b822:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b826:	9105      	str	r1, [sp, #20]
 801b828:	9300      	str	r3, [sp, #0]
 801b82a:	463a      	mov	r2, r7
 801b82c:	4653      	mov	r3, sl
 801b82e:	4641      	mov	r1, r8
 801b830:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b832:	f7ff fd57 	bl	801b2e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b836:	e719      	b.n	801b66c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b838:	9906      	ldr	r1, [sp, #24]
 801b83a:	1422      	asrs	r2, r4, #16
 801b83c:	1433      	asrs	r3, r6, #16
 801b83e:	fb01 2303 	mla	r3, r1, r3, r2
 801b842:	085a      	lsrs	r2, r3, #1
 801b844:	07d9      	lsls	r1, r3, #31
 801b846:	5cba      	ldrb	r2, [r7, r2]
 801b848:	bf54      	ite	pl
 801b84a:	f002 020f 	andpl.w	r2, r2, #15
 801b84e:	1112      	asrmi	r2, r2, #4
 801b850:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b854:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b858:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b85c:	b2d2      	uxtb	r2, r2
 801b85e:	2800      	cmp	r0, #0
 801b860:	d062      	beq.n	801b928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b862:	f103 0a01 	add.w	sl, r3, #1
 801b866:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b86a:	f01a 0f01 	tst.w	sl, #1
 801b86e:	5c79      	ldrb	r1, [r7, r1]
 801b870:	bf0c      	ite	eq
 801b872:	f001 010f 	andeq.w	r1, r1, #15
 801b876:	1109      	asrne	r1, r1, #4
 801b878:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b87c:	b2c9      	uxtb	r1, r1
 801b87e:	910f      	str	r1, [sp, #60]	; 0x3c
 801b880:	f1bc 0f00 	cmp.w	ip, #0
 801b884:	d019      	beq.n	801b8ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b886:	9908      	ldr	r1, [sp, #32]
 801b888:	440b      	add	r3, r1
 801b88a:	0859      	lsrs	r1, r3, #1
 801b88c:	f013 0f01 	tst.w	r3, #1
 801b890:	5c79      	ldrb	r1, [r7, r1]
 801b892:	bf0c      	ite	eq
 801b894:	f001 010f 	andeq.w	r1, r1, #15
 801b898:	1109      	asrne	r1, r1, #4
 801b89a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b89e:	b2c9      	uxtb	r1, r1
 801b8a0:	3301      	adds	r3, #1
 801b8a2:	910b      	str	r1, [sp, #44]	; 0x2c
 801b8a4:	0859      	lsrs	r1, r3, #1
 801b8a6:	07db      	lsls	r3, r3, #31
 801b8a8:	5c79      	ldrb	r1, [r7, r1]
 801b8aa:	bf54      	ite	pl
 801b8ac:	f001 010f 	andpl.w	r1, r1, #15
 801b8b0:	1109      	asrmi	r1, r1, #4
 801b8b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b8b6:	b2c9      	uxtb	r1, r1
 801b8b8:	9110      	str	r1, [sp, #64]	; 0x40
 801b8ba:	b280      	uxth	r0, r0
 801b8bc:	fa1f fc8c 	uxth.w	ip, ip
 801b8c0:	fb00 f30c 	mul.w	r3, r0, ip
 801b8c4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b8c8:	0100      	lsls	r0, r0, #4
 801b8ca:	fa1f fc8c 	uxth.w	ip, ip
 801b8ce:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b8d2:	eba1 010c 	sub.w	r1, r1, ip
 801b8d6:	fa1f fa81 	uxth.w	sl, r1
 801b8da:	1ac0      	subs	r0, r0, r3
 801b8dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b8de:	b280      	uxth	r0, r0
 801b8e0:	4348      	muls	r0, r1
 801b8e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b8e4:	fb02 020a 	mla	r2, r2, sl, r0
 801b8e8:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b8ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b8ee:	fb03 c302 	mla	r3, r3, r2, ip
 801b8f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b8f6:	2bff      	cmp	r3, #255	; 0xff
 801b8f8:	d12c      	bne.n	801b954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b8fa:	4b14      	ldr	r3, [pc, #80]	; (801b94c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b8fc:	681a      	ldr	r2, [r3, #0]
 801b8fe:	4b14      	ldr	r3, [pc, #80]	; (801b950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b900:	0951      	lsrs	r1, r2, #5
 801b902:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b906:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b90a:	430b      	orrs	r3, r1
 801b90c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b910:	4313      	orrs	r3, r2
 801b912:	f8ae 3000 	strh.w	r3, [lr]
 801b916:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b918:	441c      	add	r4, r3
 801b91a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b91c:	f10e 0e02 	add.w	lr, lr, #2
 801b920:	441e      	add	r6, r3
 801b922:	f108 38ff 	add.w	r8, r8, #4294967295
 801b926:	e6ce      	b.n	801b6c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b928:	f1bc 0f00 	cmp.w	ip, #0
 801b92c:	d0c5      	beq.n	801b8ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b92e:	9908      	ldr	r1, [sp, #32]
 801b930:	440b      	add	r3, r1
 801b932:	0859      	lsrs	r1, r3, #1
 801b934:	07db      	lsls	r3, r3, #31
 801b936:	5c79      	ldrb	r1, [r7, r1]
 801b938:	bf54      	ite	pl
 801b93a:	f001 010f 	andpl.w	r1, r1, #15
 801b93e:	1109      	asrmi	r1, r1, #4
 801b940:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b944:	b2c9      	uxtb	r1, r1
 801b946:	910b      	str	r1, [sp, #44]	; 0x2c
 801b948:	e7b7      	b.n	801b8ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b94a:	bf00      	nop
 801b94c:	2000a53c 	.word	0x2000a53c
 801b950:	fffff800 	.word	0xfffff800
 801b954:	2b00      	cmp	r3, #0
 801b956:	d0de      	beq.n	801b916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b958:	4a22      	ldr	r2, [pc, #136]	; (801b9e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b95a:	f8be c000 	ldrh.w	ip, [lr]
 801b95e:	6810      	ldr	r0, [r2, #0]
 801b960:	fa1f fa83 	uxth.w	sl, r3
 801b964:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b968:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b96c:	43db      	mvns	r3, r3
 801b96e:	b2db      	uxtb	r3, r3
 801b970:	fb12 f20a 	smulbb	r2, r2, sl
 801b974:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b978:	fb01 2103 	mla	r1, r1, r3, r2
 801b97c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b980:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b984:	b2c0      	uxtb	r0, r0
 801b986:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b98a:	fa5f fc8c 	uxtb.w	ip, ip
 801b98e:	fb10 f00a 	smulbb	r0, r0, sl
 801b992:	fb0c 0003 	mla	r0, ip, r3, r0
 801b996:	b289      	uxth	r1, r1
 801b998:	fb1b fb0a 	smulbb	fp, fp, sl
 801b99c:	b280      	uxth	r0, r0
 801b99e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b9a2:	fb02 b203 	mla	r2, r2, r3, fp
 801b9a6:	1c4b      	adds	r3, r1, #1
 801b9a8:	f100 0b01 	add.w	fp, r0, #1
 801b9ac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b9b0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b9b4:	b292      	uxth	r2, r2
 801b9b6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b9ba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b9be:	ea4b 0101 	orr.w	r1, fp, r1
 801b9c2:	f102 0b01 	add.w	fp, r2, #1
 801b9c6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b9ca:	0952      	lsrs	r2, r2, #5
 801b9cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b9d0:	4311      	orrs	r1, r2
 801b9d2:	f8ae 1000 	strh.w	r1, [lr]
 801b9d6:	e79e      	b.n	801b916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b9d8:	b013      	add	sp, #76	; 0x4c
 801b9da:	ecbd 8b08 	vpop	{d8-d11}
 801b9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9e2:	bf00      	nop
 801b9e4:	2000a53c 	.word	0x2000a53c

0801b9e8 <CRC_Lock>:
 801b9e8:	b530      	push	{r4, r5, lr}
 801b9ea:	4a20      	ldr	r2, [pc, #128]	; (801ba6c <CRC_Lock+0x84>)
 801b9ec:	6813      	ldr	r3, [r2, #0]
 801b9ee:	f023 0301 	bic.w	r3, r3, #1
 801b9f2:	6013      	str	r3, [r2, #0]
 801b9f4:	4b1e      	ldr	r3, [pc, #120]	; (801ba70 <CRC_Lock+0x88>)
 801b9f6:	681a      	ldr	r2, [r3, #0]
 801b9f8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b9fc:	4022      	ands	r2, r4
 801b9fe:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ba02:	42aa      	cmp	r2, r5
 801ba04:	d005      	beq.n	801ba12 <CRC_Lock+0x2a>
 801ba06:	681b      	ldr	r3, [r3, #0]
 801ba08:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ba0c:	4023      	ands	r3, r4
 801ba0e:	4293      	cmp	r3, r2
 801ba10:	d124      	bne.n	801ba5c <CRC_Lock+0x74>
 801ba12:	4b18      	ldr	r3, [pc, #96]	; (801ba74 <CRC_Lock+0x8c>)
 801ba14:	681b      	ldr	r3, [r3, #0]
 801ba16:	bb0b      	cbnz	r3, 801ba5c <CRC_Lock+0x74>
 801ba18:	4b17      	ldr	r3, [pc, #92]	; (801ba78 <CRC_Lock+0x90>)
 801ba1a:	681a      	ldr	r2, [r3, #0]
 801ba1c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ba20:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ba24:	d00d      	beq.n	801ba42 <CRC_Lock+0x5a>
 801ba26:	681a      	ldr	r2, [r3, #0]
 801ba28:	f240 4483 	movw	r4, #1155	; 0x483
 801ba2c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ba30:	42a2      	cmp	r2, r4
 801ba32:	d006      	beq.n	801ba42 <CRC_Lock+0x5a>
 801ba34:	681b      	ldr	r3, [r3, #0]
 801ba36:	f240 4285 	movw	r2, #1157	; 0x485
 801ba3a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ba3e:	4293      	cmp	r3, r2
 801ba40:	d10c      	bne.n	801ba5c <CRC_Lock+0x74>
 801ba42:	4b0e      	ldr	r3, [pc, #56]	; (801ba7c <CRC_Lock+0x94>)
 801ba44:	2201      	movs	r2, #1
 801ba46:	601a      	str	r2, [r3, #0]
 801ba48:	681a      	ldr	r2, [r3, #0]
 801ba4a:	2a00      	cmp	r2, #0
 801ba4c:	d1fc      	bne.n	801ba48 <CRC_Lock+0x60>
 801ba4e:	4b0c      	ldr	r3, [pc, #48]	; (801ba80 <CRC_Lock+0x98>)
 801ba50:	6018      	str	r0, [r3, #0]
 801ba52:	6818      	ldr	r0, [r3, #0]
 801ba54:	1a43      	subs	r3, r0, r1
 801ba56:	4258      	negs	r0, r3
 801ba58:	4158      	adcs	r0, r3
 801ba5a:	bd30      	pop	{r4, r5, pc}
 801ba5c:	4b09      	ldr	r3, [pc, #36]	; (801ba84 <CRC_Lock+0x9c>)
 801ba5e:	2201      	movs	r2, #1
 801ba60:	601a      	str	r2, [r3, #0]
 801ba62:	681a      	ldr	r2, [r3, #0]
 801ba64:	2a00      	cmp	r2, #0
 801ba66:	d1fc      	bne.n	801ba62 <CRC_Lock+0x7a>
 801ba68:	4b07      	ldr	r3, [pc, #28]	; (801ba88 <CRC_Lock+0xa0>)
 801ba6a:	e7f1      	b.n	801ba50 <CRC_Lock+0x68>
 801ba6c:	e0002000 	.word	0xe0002000
 801ba70:	e000ed00 	.word	0xe000ed00
 801ba74:	e0042000 	.word	0xe0042000
 801ba78:	5c001000 	.word	0x5c001000
 801ba7c:	58024c08 	.word	0x58024c08
 801ba80:	58024c00 	.word	0x58024c00
 801ba84:	40023008 	.word	0x40023008
 801ba88:	40023000 	.word	0x40023000

0801ba8c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ba8c:	6101      	str	r1, [r0, #16]
 801ba8e:	4770      	bx	lr

0801ba90 <_ZN8touchgfx8Gestures4tickEv>:
 801ba90:	7b83      	ldrb	r3, [r0, #14]
 801ba92:	b14b      	cbz	r3, 801baa8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ba94:	8903      	ldrh	r3, [r0, #8]
 801ba96:	3301      	adds	r3, #1
 801ba98:	b29b      	uxth	r3, r3
 801ba9a:	2b07      	cmp	r3, #7
 801ba9c:	8103      	strh	r3, [r0, #8]
 801ba9e:	bf81      	itttt	hi
 801baa0:	2300      	movhi	r3, #0
 801baa2:	8143      	strhhi	r3, [r0, #10]
 801baa4:	8183      	strhhi	r3, [r0, #12]
 801baa6:	7383      	strbhi	r3, [r0, #14]
 801baa8:	4770      	bx	lr
	...

0801baac <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801baac:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801bab0:	4698      	mov	r8, r3
 801bab2:	8883      	ldrh	r3, [r0, #4]
 801bab4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bab8:	eba8 0303 	sub.w	r3, r8, r3
 801babc:	b21b      	sxth	r3, r3
 801babe:	4604      	mov	r4, r0
 801bac0:	2b00      	cmp	r3, #0
 801bac2:	4617      	mov	r7, r2
 801bac4:	4a18      	ldr	r2, [pc, #96]	; (801bb28 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801bac6:	9200      	str	r2, [sp, #0]
 801bac8:	bfb8      	it	lt
 801baca:	425b      	neglt	r3, r3
 801bacc:	8aa2      	ldrh	r2, [r4, #20]
 801bace:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801bad2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801bad6:	b21b      	sxth	r3, r3
 801bad8:	460e      	mov	r6, r1
 801bada:	4293      	cmp	r3, r2
 801badc:	88c1      	ldrh	r1, [r0, #6]
 801bade:	f8ad 1008 	strh.w	r1, [sp, #8]
 801bae2:	f04f 0000 	mov.w	r0, #0
 801bae6:	f88d 0004 	strb.w	r0, [sp, #4]
 801baea:	f8ad 500c 	strh.w	r5, [sp, #12]
 801baee:	dc07      	bgt.n	801bb00 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801baf0:	1a69      	subs	r1, r5, r1
 801baf2:	b209      	sxth	r1, r1
 801baf4:	2900      	cmp	r1, #0
 801baf6:	bfb8      	it	lt
 801baf8:	4249      	neglt	r1, r1
 801bafa:	b209      	sxth	r1, r1
 801bafc:	428a      	cmp	r2, r1
 801bafe:	da10      	bge.n	801bb22 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801bb00:	6920      	ldr	r0, [r4, #16]
 801bb02:	6803      	ldr	r3, [r0, #0]
 801bb04:	4669      	mov	r1, sp
 801bb06:	685b      	ldr	r3, [r3, #4]
 801bb08:	4798      	blx	r3
 801bb0a:	eba8 0606 	sub.w	r6, r8, r6
 801bb0e:	2300      	movs	r3, #0
 801bb10:	1bef      	subs	r7, r5, r7
 801bb12:	2001      	movs	r0, #1
 801bb14:	8123      	strh	r3, [r4, #8]
 801bb16:	8166      	strh	r6, [r4, #10]
 801bb18:	81a7      	strh	r7, [r4, #12]
 801bb1a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801bb1e:	80e5      	strh	r5, [r4, #6]
 801bb20:	73a0      	strb	r0, [r4, #14]
 801bb22:	b004      	add	sp, #16
 801bb24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bb28:	0801f044 	.word	0x0801f044

0801bb2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801bb2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bb2e:	461e      	mov	r6, r3
 801bb30:	1e4b      	subs	r3, r1, #1
 801bb32:	2b01      	cmp	r3, #1
 801bb34:	b085      	sub	sp, #20
 801bb36:	4604      	mov	r4, r0
 801bb38:	460d      	mov	r5, r1
 801bb3a:	4617      	mov	r7, r2
 801bb3c:	d84b      	bhi.n	801bbd6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801bb3e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801bb42:	1cd3      	adds	r3, r2, #3
 801bb44:	b29b      	uxth	r3, r3
 801bb46:	2b06      	cmp	r3, #6
 801bb48:	d916      	bls.n	801bb78 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801bb4a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801bbec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801bb4e:	f8cd c004 	str.w	ip, [sp, #4]
 801bb52:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801bb56:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801bb5a:	6900      	ldr	r0, [r0, #16]
 801bb5c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801bb60:	f04f 0c00 	mov.w	ip, #0
 801bb64:	f88d c008 	strb.w	ip, [sp, #8]
 801bb68:	f8ad 200a 	strh.w	r2, [sp, #10]
 801bb6c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bb70:	6803      	ldr	r3, [r0, #0]
 801bb72:	a901      	add	r1, sp, #4
 801bb74:	689b      	ldr	r3, [r3, #8]
 801bb76:	4798      	blx	r3
 801bb78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801bb7c:	1cd3      	adds	r3, r2, #3
 801bb7e:	b29b      	uxth	r3, r3
 801bb80:	2b06      	cmp	r3, #6
 801bb82:	d916      	bls.n	801bbb2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bb84:	f8df c064 	ldr.w	ip, [pc, #100]	; 801bbec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801bb88:	f8cd c004 	str.w	ip, [sp, #4]
 801bb8c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801bb90:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801bb94:	6920      	ldr	r0, [r4, #16]
 801bb96:	f8ad 100c 	strh.w	r1, [sp, #12]
 801bb9a:	f04f 0c01 	mov.w	ip, #1
 801bb9e:	f88d c008 	strb.w	ip, [sp, #8]
 801bba2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801bba6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bbaa:	6803      	ldr	r3, [r0, #0]
 801bbac:	a901      	add	r1, sp, #4
 801bbae:	689b      	ldr	r3, [r3, #8]
 801bbb0:	4798      	blx	r3
 801bbb2:	4b0d      	ldr	r3, [pc, #52]	; (801bbe8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801bbb4:	9301      	str	r3, [sp, #4]
 801bbb6:	6920      	ldr	r0, [r4, #16]
 801bbb8:	f88d 5008 	strb.w	r5, [sp, #8]
 801bbbc:	2300      	movs	r3, #0
 801bbbe:	f8ad 700a 	strh.w	r7, [sp, #10]
 801bbc2:	f8ad 600c 	strh.w	r6, [sp, #12]
 801bbc6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bbca:	6803      	ldr	r3, [r0, #0]
 801bbcc:	a901      	add	r1, sp, #4
 801bbce:	681b      	ldr	r3, [r3, #0]
 801bbd0:	4798      	blx	r3
 801bbd2:	b005      	add	sp, #20
 801bbd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bbd6:	2900      	cmp	r1, #0
 801bbd8:	d1eb      	bne.n	801bbb2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bbda:	80a2      	strh	r2, [r4, #4]
 801bbdc:	80c6      	strh	r6, [r0, #6]
 801bbde:	60a1      	str	r1, [r4, #8]
 801bbe0:	81a1      	strh	r1, [r4, #12]
 801bbe2:	73a1      	strb	r1, [r4, #14]
 801bbe4:	e7e5      	b.n	801bbb2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bbe6:	bf00      	nop
 801bbe8:	0801f030 	.word	0x0801f030
 801bbec:	0801f058 	.word	0x0801f058

0801bbf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801bbf0:	b570      	push	{r4, r5, r6, lr}
 801bbf2:	790b      	ldrb	r3, [r1, #4]
 801bbf4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801bbf8:	2b00      	cmp	r3, #0
 801bbfa:	bf0c      	ite	eq
 801bbfc:	2301      	moveq	r3, #1
 801bbfe:	2300      	movne	r3, #0
 801bc00:	4604      	mov	r4, r0
 801bc02:	460e      	mov	r6, r1
 801bc04:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801bc08:	d109      	bne.n	801bc1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801bc0a:	b14d      	cbz	r5, 801bc20 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801bc0c:	7933      	ldrb	r3, [r6, #4]
 801bc0e:	2b01      	cmp	r3, #1
 801bc10:	d10c      	bne.n	801bc2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801bc12:	6823      	ldr	r3, [r4, #0]
 801bc14:	4620      	mov	r0, r4
 801bc16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801bc18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bc1c:	4718      	bx	r3
 801bc1e:	b12d      	cbz	r5, 801bc2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801bc20:	6823      	ldr	r3, [r4, #0]
 801bc22:	4620      	mov	r0, r4
 801bc24:	695b      	ldr	r3, [r3, #20]
 801bc26:	4798      	blx	r3
 801bc28:	2d00      	cmp	r5, #0
 801bc2a:	d1ef      	bne.n	801bc0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801bc2c:	bd70      	pop	{r4, r5, r6, pc}

0801bc2e <__aeabi_atexit>:
 801bc2e:	460b      	mov	r3, r1
 801bc30:	4601      	mov	r1, r0
 801bc32:	4618      	mov	r0, r3
 801bc34:	f000 b852 	b.w	801bcdc <__cxa_atexit>

0801bc38 <_ZdlPvj>:
 801bc38:	f000 b812 	b.w	801bc60 <_ZdlPv>

0801bc3c <__cxa_guard_acquire>:
 801bc3c:	6803      	ldr	r3, [r0, #0]
 801bc3e:	07db      	lsls	r3, r3, #31
 801bc40:	d406      	bmi.n	801bc50 <__cxa_guard_acquire+0x14>
 801bc42:	7843      	ldrb	r3, [r0, #1]
 801bc44:	b103      	cbz	r3, 801bc48 <__cxa_guard_acquire+0xc>
 801bc46:	deff      	udf	#255	; 0xff
 801bc48:	2301      	movs	r3, #1
 801bc4a:	7043      	strb	r3, [r0, #1]
 801bc4c:	4618      	mov	r0, r3
 801bc4e:	4770      	bx	lr
 801bc50:	2000      	movs	r0, #0
 801bc52:	4770      	bx	lr

0801bc54 <__cxa_guard_release>:
 801bc54:	2301      	movs	r3, #1
 801bc56:	6003      	str	r3, [r0, #0]
 801bc58:	4770      	bx	lr

0801bc5a <__cxa_pure_virtual>:
 801bc5a:	b508      	push	{r3, lr}
 801bc5c:	f000 f80e 	bl	801bc7c <_ZSt9terminatev>

0801bc60 <_ZdlPv>:
 801bc60:	f000 b88e 	b.w	801bd80 <free>

0801bc64 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801bc64:	b508      	push	{r3, lr}
 801bc66:	4780      	blx	r0
 801bc68:	f000 f80d 	bl	801bc86 <abort>

0801bc6c <_ZSt13get_terminatev>:
 801bc6c:	4b02      	ldr	r3, [pc, #8]	; (801bc78 <_ZSt13get_terminatev+0xc>)
 801bc6e:	6818      	ldr	r0, [r3, #0]
 801bc70:	f3bf 8f5b 	dmb	ish
 801bc74:	4770      	bx	lr
 801bc76:	bf00      	nop
 801bc78:	200000d4 	.word	0x200000d4

0801bc7c <_ZSt9terminatev>:
 801bc7c:	b508      	push	{r3, lr}
 801bc7e:	f7ff fff5 	bl	801bc6c <_ZSt13get_terminatev>
 801bc82:	f7ff ffef 	bl	801bc64 <_ZN10__cxxabiv111__terminateEPFvvE>

0801bc86 <abort>:
 801bc86:	b508      	push	{r3, lr}
 801bc88:	2006      	movs	r0, #6
 801bc8a:	f000 fc9d 	bl	801c5c8 <raise>
 801bc8e:	2001      	movs	r0, #1
 801bc90:	f7e6 f968 	bl	8001f64 <_exit>

0801bc94 <__assert_func>:
 801bc94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801bc96:	4614      	mov	r4, r2
 801bc98:	461a      	mov	r2, r3
 801bc9a:	4b09      	ldr	r3, [pc, #36]	; (801bcc0 <__assert_func+0x2c>)
 801bc9c:	681b      	ldr	r3, [r3, #0]
 801bc9e:	4605      	mov	r5, r0
 801bca0:	68d8      	ldr	r0, [r3, #12]
 801bca2:	b14c      	cbz	r4, 801bcb8 <__assert_func+0x24>
 801bca4:	4b07      	ldr	r3, [pc, #28]	; (801bcc4 <__assert_func+0x30>)
 801bca6:	9100      	str	r1, [sp, #0]
 801bca8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801bcac:	4906      	ldr	r1, [pc, #24]	; (801bcc8 <__assert_func+0x34>)
 801bcae:	462b      	mov	r3, r5
 801bcb0:	f000 f828 	bl	801bd04 <fiprintf>
 801bcb4:	f7ff ffe7 	bl	801bc86 <abort>
 801bcb8:	4b04      	ldr	r3, [pc, #16]	; (801bccc <__assert_func+0x38>)
 801bcba:	461c      	mov	r4, r3
 801bcbc:	e7f3      	b.n	801bca6 <__assert_func+0x12>
 801bcbe:	bf00      	nop
 801bcc0:	200000d8 	.word	0x200000d8
 801bcc4:	08020414 	.word	0x08020414
 801bcc8:	08020421 	.word	0x08020421
 801bccc:	0802044f 	.word	0x0802044f

0801bcd0 <atexit>:
 801bcd0:	2300      	movs	r3, #0
 801bcd2:	4601      	mov	r1, r0
 801bcd4:	461a      	mov	r2, r3
 801bcd6:	4618      	mov	r0, r3
 801bcd8:	f000 bd52 	b.w	801c780 <__register_exitproc>

0801bcdc <__cxa_atexit>:
 801bcdc:	b510      	push	{r4, lr}
 801bcde:	4c05      	ldr	r4, [pc, #20]	; (801bcf4 <__cxa_atexit+0x18>)
 801bce0:	4613      	mov	r3, r2
 801bce2:	b12c      	cbz	r4, 801bcf0 <__cxa_atexit+0x14>
 801bce4:	460a      	mov	r2, r1
 801bce6:	4601      	mov	r1, r0
 801bce8:	2002      	movs	r0, #2
 801bcea:	f000 fd49 	bl	801c780 <__register_exitproc>
 801bcee:	bd10      	pop	{r4, pc}
 801bcf0:	4620      	mov	r0, r4
 801bcf2:	e7fc      	b.n	801bcee <__cxa_atexit+0x12>
 801bcf4:	0801c781 	.word	0x0801c781

0801bcf8 <__errno>:
 801bcf8:	4b01      	ldr	r3, [pc, #4]	; (801bd00 <__errno+0x8>)
 801bcfa:	6818      	ldr	r0, [r3, #0]
 801bcfc:	4770      	bx	lr
 801bcfe:	bf00      	nop
 801bd00:	200000d8 	.word	0x200000d8

0801bd04 <fiprintf>:
 801bd04:	b40e      	push	{r1, r2, r3}
 801bd06:	b503      	push	{r0, r1, lr}
 801bd08:	4601      	mov	r1, r0
 801bd0a:	ab03      	add	r3, sp, #12
 801bd0c:	4805      	ldr	r0, [pc, #20]	; (801bd24 <fiprintf+0x20>)
 801bd0e:	f853 2b04 	ldr.w	r2, [r3], #4
 801bd12:	6800      	ldr	r0, [r0, #0]
 801bd14:	9301      	str	r3, [sp, #4]
 801bd16:	f000 f95b 	bl	801bfd0 <_vfiprintf_r>
 801bd1a:	b002      	add	sp, #8
 801bd1c:	f85d eb04 	ldr.w	lr, [sp], #4
 801bd20:	b003      	add	sp, #12
 801bd22:	4770      	bx	lr
 801bd24:	200000d8 	.word	0x200000d8

0801bd28 <__libc_init_array>:
 801bd28:	b570      	push	{r4, r5, r6, lr}
 801bd2a:	4d0d      	ldr	r5, [pc, #52]	; (801bd60 <__libc_init_array+0x38>)
 801bd2c:	4c0d      	ldr	r4, [pc, #52]	; (801bd64 <__libc_init_array+0x3c>)
 801bd2e:	1b64      	subs	r4, r4, r5
 801bd30:	10a4      	asrs	r4, r4, #2
 801bd32:	2600      	movs	r6, #0
 801bd34:	42a6      	cmp	r6, r4
 801bd36:	d109      	bne.n	801bd4c <__libc_init_array+0x24>
 801bd38:	4d0b      	ldr	r5, [pc, #44]	; (801bd68 <__libc_init_array+0x40>)
 801bd3a:	4c0c      	ldr	r4, [pc, #48]	; (801bd6c <__libc_init_array+0x44>)
 801bd3c:	f001 f85a 	bl	801cdf4 <_init>
 801bd40:	1b64      	subs	r4, r4, r5
 801bd42:	10a4      	asrs	r4, r4, #2
 801bd44:	2600      	movs	r6, #0
 801bd46:	42a6      	cmp	r6, r4
 801bd48:	d105      	bne.n	801bd56 <__libc_init_array+0x2e>
 801bd4a:	bd70      	pop	{r4, r5, r6, pc}
 801bd4c:	f855 3b04 	ldr.w	r3, [r5], #4
 801bd50:	4798      	blx	r3
 801bd52:	3601      	adds	r6, #1
 801bd54:	e7ee      	b.n	801bd34 <__libc_init_array+0xc>
 801bd56:	f855 3b04 	ldr.w	r3, [r5], #4
 801bd5a:	4798      	blx	r3
 801bd5c:	3601      	adds	r6, #1
 801bd5e:	e7f2      	b.n	801bd46 <__libc_init_array+0x1e>
 801bd60:	0802050c 	.word	0x0802050c
 801bd64:	0802050c 	.word	0x0802050c
 801bd68:	0802050c 	.word	0x0802050c
 801bd6c:	08020524 	.word	0x08020524

0801bd70 <malloc>:
 801bd70:	4b02      	ldr	r3, [pc, #8]	; (801bd7c <malloc+0xc>)
 801bd72:	4601      	mov	r1, r0
 801bd74:	6818      	ldr	r0, [r3, #0]
 801bd76:	f000 b88d 	b.w	801be94 <_malloc_r>
 801bd7a:	bf00      	nop
 801bd7c:	200000d8 	.word	0x200000d8

0801bd80 <free>:
 801bd80:	4b02      	ldr	r3, [pc, #8]	; (801bd8c <free+0xc>)
 801bd82:	4601      	mov	r1, r0
 801bd84:	6818      	ldr	r0, [r3, #0]
 801bd86:	f000 b819 	b.w	801bdbc <_free_r>
 801bd8a:	bf00      	nop
 801bd8c:	200000d8 	.word	0x200000d8

0801bd90 <memcpy>:
 801bd90:	440a      	add	r2, r1
 801bd92:	4291      	cmp	r1, r2
 801bd94:	f100 33ff 	add.w	r3, r0, #4294967295
 801bd98:	d100      	bne.n	801bd9c <memcpy+0xc>
 801bd9a:	4770      	bx	lr
 801bd9c:	b510      	push	{r4, lr}
 801bd9e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801bda2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801bda6:	4291      	cmp	r1, r2
 801bda8:	d1f9      	bne.n	801bd9e <memcpy+0xe>
 801bdaa:	bd10      	pop	{r4, pc}

0801bdac <memset>:
 801bdac:	4402      	add	r2, r0
 801bdae:	4603      	mov	r3, r0
 801bdb0:	4293      	cmp	r3, r2
 801bdb2:	d100      	bne.n	801bdb6 <memset+0xa>
 801bdb4:	4770      	bx	lr
 801bdb6:	f803 1b01 	strb.w	r1, [r3], #1
 801bdba:	e7f9      	b.n	801bdb0 <memset+0x4>

0801bdbc <_free_r>:
 801bdbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801bdbe:	2900      	cmp	r1, #0
 801bdc0:	d044      	beq.n	801be4c <_free_r+0x90>
 801bdc2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bdc6:	9001      	str	r0, [sp, #4]
 801bdc8:	2b00      	cmp	r3, #0
 801bdca:	f1a1 0404 	sub.w	r4, r1, #4
 801bdce:	bfb8      	it	lt
 801bdd0:	18e4      	addlt	r4, r4, r3
 801bdd2:	f000 ff57 	bl	801cc84 <__malloc_lock>
 801bdd6:	4a1e      	ldr	r2, [pc, #120]	; (801be50 <_free_r+0x94>)
 801bdd8:	9801      	ldr	r0, [sp, #4]
 801bdda:	6813      	ldr	r3, [r2, #0]
 801bddc:	b933      	cbnz	r3, 801bdec <_free_r+0x30>
 801bdde:	6063      	str	r3, [r4, #4]
 801bde0:	6014      	str	r4, [r2, #0]
 801bde2:	b003      	add	sp, #12
 801bde4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801bde8:	f000 bf52 	b.w	801cc90 <__malloc_unlock>
 801bdec:	42a3      	cmp	r3, r4
 801bdee:	d908      	bls.n	801be02 <_free_r+0x46>
 801bdf0:	6825      	ldr	r5, [r4, #0]
 801bdf2:	1961      	adds	r1, r4, r5
 801bdf4:	428b      	cmp	r3, r1
 801bdf6:	bf01      	itttt	eq
 801bdf8:	6819      	ldreq	r1, [r3, #0]
 801bdfa:	685b      	ldreq	r3, [r3, #4]
 801bdfc:	1949      	addeq	r1, r1, r5
 801bdfe:	6021      	streq	r1, [r4, #0]
 801be00:	e7ed      	b.n	801bdde <_free_r+0x22>
 801be02:	461a      	mov	r2, r3
 801be04:	685b      	ldr	r3, [r3, #4]
 801be06:	b10b      	cbz	r3, 801be0c <_free_r+0x50>
 801be08:	42a3      	cmp	r3, r4
 801be0a:	d9fa      	bls.n	801be02 <_free_r+0x46>
 801be0c:	6811      	ldr	r1, [r2, #0]
 801be0e:	1855      	adds	r5, r2, r1
 801be10:	42a5      	cmp	r5, r4
 801be12:	d10b      	bne.n	801be2c <_free_r+0x70>
 801be14:	6824      	ldr	r4, [r4, #0]
 801be16:	4421      	add	r1, r4
 801be18:	1854      	adds	r4, r2, r1
 801be1a:	42a3      	cmp	r3, r4
 801be1c:	6011      	str	r1, [r2, #0]
 801be1e:	d1e0      	bne.n	801bde2 <_free_r+0x26>
 801be20:	681c      	ldr	r4, [r3, #0]
 801be22:	685b      	ldr	r3, [r3, #4]
 801be24:	6053      	str	r3, [r2, #4]
 801be26:	4421      	add	r1, r4
 801be28:	6011      	str	r1, [r2, #0]
 801be2a:	e7da      	b.n	801bde2 <_free_r+0x26>
 801be2c:	d902      	bls.n	801be34 <_free_r+0x78>
 801be2e:	230c      	movs	r3, #12
 801be30:	6003      	str	r3, [r0, #0]
 801be32:	e7d6      	b.n	801bde2 <_free_r+0x26>
 801be34:	6825      	ldr	r5, [r4, #0]
 801be36:	1961      	adds	r1, r4, r5
 801be38:	428b      	cmp	r3, r1
 801be3a:	bf04      	itt	eq
 801be3c:	6819      	ldreq	r1, [r3, #0]
 801be3e:	685b      	ldreq	r3, [r3, #4]
 801be40:	6063      	str	r3, [r4, #4]
 801be42:	bf04      	itt	eq
 801be44:	1949      	addeq	r1, r1, r5
 801be46:	6021      	streq	r1, [r4, #0]
 801be48:	6054      	str	r4, [r2, #4]
 801be4a:	e7ca      	b.n	801bde2 <_free_r+0x26>
 801be4c:	b003      	add	sp, #12
 801be4e:	bd30      	pop	{r4, r5, pc}
 801be50:	2000a630 	.word	0x2000a630

0801be54 <sbrk_aligned>:
 801be54:	b570      	push	{r4, r5, r6, lr}
 801be56:	4e0e      	ldr	r6, [pc, #56]	; (801be90 <sbrk_aligned+0x3c>)
 801be58:	460c      	mov	r4, r1
 801be5a:	6831      	ldr	r1, [r6, #0]
 801be5c:	4605      	mov	r5, r0
 801be5e:	b911      	cbnz	r1, 801be66 <sbrk_aligned+0x12>
 801be60:	f000 fb7a 	bl	801c558 <_sbrk_r>
 801be64:	6030      	str	r0, [r6, #0]
 801be66:	4621      	mov	r1, r4
 801be68:	4628      	mov	r0, r5
 801be6a:	f000 fb75 	bl	801c558 <_sbrk_r>
 801be6e:	1c43      	adds	r3, r0, #1
 801be70:	d00a      	beq.n	801be88 <sbrk_aligned+0x34>
 801be72:	1cc4      	adds	r4, r0, #3
 801be74:	f024 0403 	bic.w	r4, r4, #3
 801be78:	42a0      	cmp	r0, r4
 801be7a:	d007      	beq.n	801be8c <sbrk_aligned+0x38>
 801be7c:	1a21      	subs	r1, r4, r0
 801be7e:	4628      	mov	r0, r5
 801be80:	f000 fb6a 	bl	801c558 <_sbrk_r>
 801be84:	3001      	adds	r0, #1
 801be86:	d101      	bne.n	801be8c <sbrk_aligned+0x38>
 801be88:	f04f 34ff 	mov.w	r4, #4294967295
 801be8c:	4620      	mov	r0, r4
 801be8e:	bd70      	pop	{r4, r5, r6, pc}
 801be90:	2000a634 	.word	0x2000a634

0801be94 <_malloc_r>:
 801be94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801be98:	1ccd      	adds	r5, r1, #3
 801be9a:	f025 0503 	bic.w	r5, r5, #3
 801be9e:	3508      	adds	r5, #8
 801bea0:	2d0c      	cmp	r5, #12
 801bea2:	bf38      	it	cc
 801bea4:	250c      	movcc	r5, #12
 801bea6:	2d00      	cmp	r5, #0
 801bea8:	4607      	mov	r7, r0
 801beaa:	db01      	blt.n	801beb0 <_malloc_r+0x1c>
 801beac:	42a9      	cmp	r1, r5
 801beae:	d905      	bls.n	801bebc <_malloc_r+0x28>
 801beb0:	230c      	movs	r3, #12
 801beb2:	603b      	str	r3, [r7, #0]
 801beb4:	2600      	movs	r6, #0
 801beb6:	4630      	mov	r0, r6
 801beb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bebc:	4e2e      	ldr	r6, [pc, #184]	; (801bf78 <_malloc_r+0xe4>)
 801bebe:	f000 fee1 	bl	801cc84 <__malloc_lock>
 801bec2:	6833      	ldr	r3, [r6, #0]
 801bec4:	461c      	mov	r4, r3
 801bec6:	bb34      	cbnz	r4, 801bf16 <_malloc_r+0x82>
 801bec8:	4629      	mov	r1, r5
 801beca:	4638      	mov	r0, r7
 801becc:	f7ff ffc2 	bl	801be54 <sbrk_aligned>
 801bed0:	1c43      	adds	r3, r0, #1
 801bed2:	4604      	mov	r4, r0
 801bed4:	d14d      	bne.n	801bf72 <_malloc_r+0xde>
 801bed6:	6834      	ldr	r4, [r6, #0]
 801bed8:	4626      	mov	r6, r4
 801beda:	2e00      	cmp	r6, #0
 801bedc:	d140      	bne.n	801bf60 <_malloc_r+0xcc>
 801bede:	6823      	ldr	r3, [r4, #0]
 801bee0:	4631      	mov	r1, r6
 801bee2:	4638      	mov	r0, r7
 801bee4:	eb04 0803 	add.w	r8, r4, r3
 801bee8:	f000 fb36 	bl	801c558 <_sbrk_r>
 801beec:	4580      	cmp	r8, r0
 801beee:	d13a      	bne.n	801bf66 <_malloc_r+0xd2>
 801bef0:	6821      	ldr	r1, [r4, #0]
 801bef2:	3503      	adds	r5, #3
 801bef4:	1a6d      	subs	r5, r5, r1
 801bef6:	f025 0503 	bic.w	r5, r5, #3
 801befa:	3508      	adds	r5, #8
 801befc:	2d0c      	cmp	r5, #12
 801befe:	bf38      	it	cc
 801bf00:	250c      	movcc	r5, #12
 801bf02:	4629      	mov	r1, r5
 801bf04:	4638      	mov	r0, r7
 801bf06:	f7ff ffa5 	bl	801be54 <sbrk_aligned>
 801bf0a:	3001      	adds	r0, #1
 801bf0c:	d02b      	beq.n	801bf66 <_malloc_r+0xd2>
 801bf0e:	6823      	ldr	r3, [r4, #0]
 801bf10:	442b      	add	r3, r5
 801bf12:	6023      	str	r3, [r4, #0]
 801bf14:	e00e      	b.n	801bf34 <_malloc_r+0xa0>
 801bf16:	6822      	ldr	r2, [r4, #0]
 801bf18:	1b52      	subs	r2, r2, r5
 801bf1a:	d41e      	bmi.n	801bf5a <_malloc_r+0xc6>
 801bf1c:	2a0b      	cmp	r2, #11
 801bf1e:	d916      	bls.n	801bf4e <_malloc_r+0xba>
 801bf20:	1961      	adds	r1, r4, r5
 801bf22:	42a3      	cmp	r3, r4
 801bf24:	6025      	str	r5, [r4, #0]
 801bf26:	bf18      	it	ne
 801bf28:	6059      	strne	r1, [r3, #4]
 801bf2a:	6863      	ldr	r3, [r4, #4]
 801bf2c:	bf08      	it	eq
 801bf2e:	6031      	streq	r1, [r6, #0]
 801bf30:	5162      	str	r2, [r4, r5]
 801bf32:	604b      	str	r3, [r1, #4]
 801bf34:	4638      	mov	r0, r7
 801bf36:	f104 060b 	add.w	r6, r4, #11
 801bf3a:	f000 fea9 	bl	801cc90 <__malloc_unlock>
 801bf3e:	f026 0607 	bic.w	r6, r6, #7
 801bf42:	1d23      	adds	r3, r4, #4
 801bf44:	1af2      	subs	r2, r6, r3
 801bf46:	d0b6      	beq.n	801beb6 <_malloc_r+0x22>
 801bf48:	1b9b      	subs	r3, r3, r6
 801bf4a:	50a3      	str	r3, [r4, r2]
 801bf4c:	e7b3      	b.n	801beb6 <_malloc_r+0x22>
 801bf4e:	6862      	ldr	r2, [r4, #4]
 801bf50:	42a3      	cmp	r3, r4
 801bf52:	bf0c      	ite	eq
 801bf54:	6032      	streq	r2, [r6, #0]
 801bf56:	605a      	strne	r2, [r3, #4]
 801bf58:	e7ec      	b.n	801bf34 <_malloc_r+0xa0>
 801bf5a:	4623      	mov	r3, r4
 801bf5c:	6864      	ldr	r4, [r4, #4]
 801bf5e:	e7b2      	b.n	801bec6 <_malloc_r+0x32>
 801bf60:	4634      	mov	r4, r6
 801bf62:	6876      	ldr	r6, [r6, #4]
 801bf64:	e7b9      	b.n	801beda <_malloc_r+0x46>
 801bf66:	230c      	movs	r3, #12
 801bf68:	603b      	str	r3, [r7, #0]
 801bf6a:	4638      	mov	r0, r7
 801bf6c:	f000 fe90 	bl	801cc90 <__malloc_unlock>
 801bf70:	e7a1      	b.n	801beb6 <_malloc_r+0x22>
 801bf72:	6025      	str	r5, [r4, #0]
 801bf74:	e7de      	b.n	801bf34 <_malloc_r+0xa0>
 801bf76:	bf00      	nop
 801bf78:	2000a630 	.word	0x2000a630

0801bf7c <__sfputc_r>:
 801bf7c:	6893      	ldr	r3, [r2, #8]
 801bf7e:	3b01      	subs	r3, #1
 801bf80:	2b00      	cmp	r3, #0
 801bf82:	b410      	push	{r4}
 801bf84:	6093      	str	r3, [r2, #8]
 801bf86:	da08      	bge.n	801bf9a <__sfputc_r+0x1e>
 801bf88:	6994      	ldr	r4, [r2, #24]
 801bf8a:	42a3      	cmp	r3, r4
 801bf8c:	db01      	blt.n	801bf92 <__sfputc_r+0x16>
 801bf8e:	290a      	cmp	r1, #10
 801bf90:	d103      	bne.n	801bf9a <__sfputc_r+0x1e>
 801bf92:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bf96:	f000 bb33 	b.w	801c600 <__swbuf_r>
 801bf9a:	6813      	ldr	r3, [r2, #0]
 801bf9c:	1c58      	adds	r0, r3, #1
 801bf9e:	6010      	str	r0, [r2, #0]
 801bfa0:	7019      	strb	r1, [r3, #0]
 801bfa2:	4608      	mov	r0, r1
 801bfa4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bfa8:	4770      	bx	lr

0801bfaa <__sfputs_r>:
 801bfaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bfac:	4606      	mov	r6, r0
 801bfae:	460f      	mov	r7, r1
 801bfb0:	4614      	mov	r4, r2
 801bfb2:	18d5      	adds	r5, r2, r3
 801bfb4:	42ac      	cmp	r4, r5
 801bfb6:	d101      	bne.n	801bfbc <__sfputs_r+0x12>
 801bfb8:	2000      	movs	r0, #0
 801bfba:	e007      	b.n	801bfcc <__sfputs_r+0x22>
 801bfbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bfc0:	463a      	mov	r2, r7
 801bfc2:	4630      	mov	r0, r6
 801bfc4:	f7ff ffda 	bl	801bf7c <__sfputc_r>
 801bfc8:	1c43      	adds	r3, r0, #1
 801bfca:	d1f3      	bne.n	801bfb4 <__sfputs_r+0xa>
 801bfcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bfd0 <_vfiprintf_r>:
 801bfd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfd4:	460d      	mov	r5, r1
 801bfd6:	b09d      	sub	sp, #116	; 0x74
 801bfd8:	4614      	mov	r4, r2
 801bfda:	4698      	mov	r8, r3
 801bfdc:	4606      	mov	r6, r0
 801bfde:	b118      	cbz	r0, 801bfe8 <_vfiprintf_r+0x18>
 801bfe0:	6983      	ldr	r3, [r0, #24]
 801bfe2:	b90b      	cbnz	r3, 801bfe8 <_vfiprintf_r+0x18>
 801bfe4:	f000 fd48 	bl	801ca78 <__sinit>
 801bfe8:	4b89      	ldr	r3, [pc, #548]	; (801c210 <_vfiprintf_r+0x240>)
 801bfea:	429d      	cmp	r5, r3
 801bfec:	d11b      	bne.n	801c026 <_vfiprintf_r+0x56>
 801bfee:	6875      	ldr	r5, [r6, #4]
 801bff0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bff2:	07d9      	lsls	r1, r3, #31
 801bff4:	d405      	bmi.n	801c002 <_vfiprintf_r+0x32>
 801bff6:	89ab      	ldrh	r3, [r5, #12]
 801bff8:	059a      	lsls	r2, r3, #22
 801bffa:	d402      	bmi.n	801c002 <_vfiprintf_r+0x32>
 801bffc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bffe:	f000 fdd9 	bl	801cbb4 <__retarget_lock_acquire_recursive>
 801c002:	89ab      	ldrh	r3, [r5, #12]
 801c004:	071b      	lsls	r3, r3, #28
 801c006:	d501      	bpl.n	801c00c <_vfiprintf_r+0x3c>
 801c008:	692b      	ldr	r3, [r5, #16]
 801c00a:	b9eb      	cbnz	r3, 801c048 <_vfiprintf_r+0x78>
 801c00c:	4629      	mov	r1, r5
 801c00e:	4630      	mov	r0, r6
 801c010:	f000 fb48 	bl	801c6a4 <__swsetup_r>
 801c014:	b1c0      	cbz	r0, 801c048 <_vfiprintf_r+0x78>
 801c016:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c018:	07dc      	lsls	r4, r3, #31
 801c01a:	d50e      	bpl.n	801c03a <_vfiprintf_r+0x6a>
 801c01c:	f04f 30ff 	mov.w	r0, #4294967295
 801c020:	b01d      	add	sp, #116	; 0x74
 801c022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c026:	4b7b      	ldr	r3, [pc, #492]	; (801c214 <_vfiprintf_r+0x244>)
 801c028:	429d      	cmp	r5, r3
 801c02a:	d101      	bne.n	801c030 <_vfiprintf_r+0x60>
 801c02c:	68b5      	ldr	r5, [r6, #8]
 801c02e:	e7df      	b.n	801bff0 <_vfiprintf_r+0x20>
 801c030:	4b79      	ldr	r3, [pc, #484]	; (801c218 <_vfiprintf_r+0x248>)
 801c032:	429d      	cmp	r5, r3
 801c034:	bf08      	it	eq
 801c036:	68f5      	ldreq	r5, [r6, #12]
 801c038:	e7da      	b.n	801bff0 <_vfiprintf_r+0x20>
 801c03a:	89ab      	ldrh	r3, [r5, #12]
 801c03c:	0598      	lsls	r0, r3, #22
 801c03e:	d4ed      	bmi.n	801c01c <_vfiprintf_r+0x4c>
 801c040:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c042:	f000 fdb9 	bl	801cbb8 <__retarget_lock_release_recursive>
 801c046:	e7e9      	b.n	801c01c <_vfiprintf_r+0x4c>
 801c048:	2300      	movs	r3, #0
 801c04a:	9309      	str	r3, [sp, #36]	; 0x24
 801c04c:	2320      	movs	r3, #32
 801c04e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801c052:	f8cd 800c 	str.w	r8, [sp, #12]
 801c056:	2330      	movs	r3, #48	; 0x30
 801c058:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801c21c <_vfiprintf_r+0x24c>
 801c05c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801c060:	f04f 0901 	mov.w	r9, #1
 801c064:	4623      	mov	r3, r4
 801c066:	469a      	mov	sl, r3
 801c068:	f813 2b01 	ldrb.w	r2, [r3], #1
 801c06c:	b10a      	cbz	r2, 801c072 <_vfiprintf_r+0xa2>
 801c06e:	2a25      	cmp	r2, #37	; 0x25
 801c070:	d1f9      	bne.n	801c066 <_vfiprintf_r+0x96>
 801c072:	ebba 0b04 	subs.w	fp, sl, r4
 801c076:	d00b      	beq.n	801c090 <_vfiprintf_r+0xc0>
 801c078:	465b      	mov	r3, fp
 801c07a:	4622      	mov	r2, r4
 801c07c:	4629      	mov	r1, r5
 801c07e:	4630      	mov	r0, r6
 801c080:	f7ff ff93 	bl	801bfaa <__sfputs_r>
 801c084:	3001      	adds	r0, #1
 801c086:	f000 80aa 	beq.w	801c1de <_vfiprintf_r+0x20e>
 801c08a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c08c:	445a      	add	r2, fp
 801c08e:	9209      	str	r2, [sp, #36]	; 0x24
 801c090:	f89a 3000 	ldrb.w	r3, [sl]
 801c094:	2b00      	cmp	r3, #0
 801c096:	f000 80a2 	beq.w	801c1de <_vfiprintf_r+0x20e>
 801c09a:	2300      	movs	r3, #0
 801c09c:	f04f 32ff 	mov.w	r2, #4294967295
 801c0a0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801c0a4:	f10a 0a01 	add.w	sl, sl, #1
 801c0a8:	9304      	str	r3, [sp, #16]
 801c0aa:	9307      	str	r3, [sp, #28]
 801c0ac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801c0b0:	931a      	str	r3, [sp, #104]	; 0x68
 801c0b2:	4654      	mov	r4, sl
 801c0b4:	2205      	movs	r2, #5
 801c0b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c0ba:	4858      	ldr	r0, [pc, #352]	; (801c21c <_vfiprintf_r+0x24c>)
 801c0bc:	f7e4 f8a0 	bl	8000200 <memchr>
 801c0c0:	9a04      	ldr	r2, [sp, #16]
 801c0c2:	b9d8      	cbnz	r0, 801c0fc <_vfiprintf_r+0x12c>
 801c0c4:	06d1      	lsls	r1, r2, #27
 801c0c6:	bf44      	itt	mi
 801c0c8:	2320      	movmi	r3, #32
 801c0ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801c0ce:	0713      	lsls	r3, r2, #28
 801c0d0:	bf44      	itt	mi
 801c0d2:	232b      	movmi	r3, #43	; 0x2b
 801c0d4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801c0d8:	f89a 3000 	ldrb.w	r3, [sl]
 801c0dc:	2b2a      	cmp	r3, #42	; 0x2a
 801c0de:	d015      	beq.n	801c10c <_vfiprintf_r+0x13c>
 801c0e0:	9a07      	ldr	r2, [sp, #28]
 801c0e2:	4654      	mov	r4, sl
 801c0e4:	2000      	movs	r0, #0
 801c0e6:	f04f 0c0a 	mov.w	ip, #10
 801c0ea:	4621      	mov	r1, r4
 801c0ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c0f0:	3b30      	subs	r3, #48	; 0x30
 801c0f2:	2b09      	cmp	r3, #9
 801c0f4:	d94e      	bls.n	801c194 <_vfiprintf_r+0x1c4>
 801c0f6:	b1b0      	cbz	r0, 801c126 <_vfiprintf_r+0x156>
 801c0f8:	9207      	str	r2, [sp, #28]
 801c0fa:	e014      	b.n	801c126 <_vfiprintf_r+0x156>
 801c0fc:	eba0 0308 	sub.w	r3, r0, r8
 801c100:	fa09 f303 	lsl.w	r3, r9, r3
 801c104:	4313      	orrs	r3, r2
 801c106:	9304      	str	r3, [sp, #16]
 801c108:	46a2      	mov	sl, r4
 801c10a:	e7d2      	b.n	801c0b2 <_vfiprintf_r+0xe2>
 801c10c:	9b03      	ldr	r3, [sp, #12]
 801c10e:	1d19      	adds	r1, r3, #4
 801c110:	681b      	ldr	r3, [r3, #0]
 801c112:	9103      	str	r1, [sp, #12]
 801c114:	2b00      	cmp	r3, #0
 801c116:	bfbb      	ittet	lt
 801c118:	425b      	neglt	r3, r3
 801c11a:	f042 0202 	orrlt.w	r2, r2, #2
 801c11e:	9307      	strge	r3, [sp, #28]
 801c120:	9307      	strlt	r3, [sp, #28]
 801c122:	bfb8      	it	lt
 801c124:	9204      	strlt	r2, [sp, #16]
 801c126:	7823      	ldrb	r3, [r4, #0]
 801c128:	2b2e      	cmp	r3, #46	; 0x2e
 801c12a:	d10c      	bne.n	801c146 <_vfiprintf_r+0x176>
 801c12c:	7863      	ldrb	r3, [r4, #1]
 801c12e:	2b2a      	cmp	r3, #42	; 0x2a
 801c130:	d135      	bne.n	801c19e <_vfiprintf_r+0x1ce>
 801c132:	9b03      	ldr	r3, [sp, #12]
 801c134:	1d1a      	adds	r2, r3, #4
 801c136:	681b      	ldr	r3, [r3, #0]
 801c138:	9203      	str	r2, [sp, #12]
 801c13a:	2b00      	cmp	r3, #0
 801c13c:	bfb8      	it	lt
 801c13e:	f04f 33ff 	movlt.w	r3, #4294967295
 801c142:	3402      	adds	r4, #2
 801c144:	9305      	str	r3, [sp, #20]
 801c146:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801c22c <_vfiprintf_r+0x25c>
 801c14a:	7821      	ldrb	r1, [r4, #0]
 801c14c:	2203      	movs	r2, #3
 801c14e:	4650      	mov	r0, sl
 801c150:	f7e4 f856 	bl	8000200 <memchr>
 801c154:	b140      	cbz	r0, 801c168 <_vfiprintf_r+0x198>
 801c156:	2340      	movs	r3, #64	; 0x40
 801c158:	eba0 000a 	sub.w	r0, r0, sl
 801c15c:	fa03 f000 	lsl.w	r0, r3, r0
 801c160:	9b04      	ldr	r3, [sp, #16]
 801c162:	4303      	orrs	r3, r0
 801c164:	3401      	adds	r4, #1
 801c166:	9304      	str	r3, [sp, #16]
 801c168:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c16c:	482c      	ldr	r0, [pc, #176]	; (801c220 <_vfiprintf_r+0x250>)
 801c16e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801c172:	2206      	movs	r2, #6
 801c174:	f7e4 f844 	bl	8000200 <memchr>
 801c178:	2800      	cmp	r0, #0
 801c17a:	d03f      	beq.n	801c1fc <_vfiprintf_r+0x22c>
 801c17c:	4b29      	ldr	r3, [pc, #164]	; (801c224 <_vfiprintf_r+0x254>)
 801c17e:	bb1b      	cbnz	r3, 801c1c8 <_vfiprintf_r+0x1f8>
 801c180:	9b03      	ldr	r3, [sp, #12]
 801c182:	3307      	adds	r3, #7
 801c184:	f023 0307 	bic.w	r3, r3, #7
 801c188:	3308      	adds	r3, #8
 801c18a:	9303      	str	r3, [sp, #12]
 801c18c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c18e:	443b      	add	r3, r7
 801c190:	9309      	str	r3, [sp, #36]	; 0x24
 801c192:	e767      	b.n	801c064 <_vfiprintf_r+0x94>
 801c194:	fb0c 3202 	mla	r2, ip, r2, r3
 801c198:	460c      	mov	r4, r1
 801c19a:	2001      	movs	r0, #1
 801c19c:	e7a5      	b.n	801c0ea <_vfiprintf_r+0x11a>
 801c19e:	2300      	movs	r3, #0
 801c1a0:	3401      	adds	r4, #1
 801c1a2:	9305      	str	r3, [sp, #20]
 801c1a4:	4619      	mov	r1, r3
 801c1a6:	f04f 0c0a 	mov.w	ip, #10
 801c1aa:	4620      	mov	r0, r4
 801c1ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 801c1b0:	3a30      	subs	r2, #48	; 0x30
 801c1b2:	2a09      	cmp	r2, #9
 801c1b4:	d903      	bls.n	801c1be <_vfiprintf_r+0x1ee>
 801c1b6:	2b00      	cmp	r3, #0
 801c1b8:	d0c5      	beq.n	801c146 <_vfiprintf_r+0x176>
 801c1ba:	9105      	str	r1, [sp, #20]
 801c1bc:	e7c3      	b.n	801c146 <_vfiprintf_r+0x176>
 801c1be:	fb0c 2101 	mla	r1, ip, r1, r2
 801c1c2:	4604      	mov	r4, r0
 801c1c4:	2301      	movs	r3, #1
 801c1c6:	e7f0      	b.n	801c1aa <_vfiprintf_r+0x1da>
 801c1c8:	ab03      	add	r3, sp, #12
 801c1ca:	9300      	str	r3, [sp, #0]
 801c1cc:	462a      	mov	r2, r5
 801c1ce:	4b16      	ldr	r3, [pc, #88]	; (801c228 <_vfiprintf_r+0x258>)
 801c1d0:	a904      	add	r1, sp, #16
 801c1d2:	4630      	mov	r0, r6
 801c1d4:	f3af 8000 	nop.w
 801c1d8:	4607      	mov	r7, r0
 801c1da:	1c78      	adds	r0, r7, #1
 801c1dc:	d1d6      	bne.n	801c18c <_vfiprintf_r+0x1bc>
 801c1de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c1e0:	07d9      	lsls	r1, r3, #31
 801c1e2:	d405      	bmi.n	801c1f0 <_vfiprintf_r+0x220>
 801c1e4:	89ab      	ldrh	r3, [r5, #12]
 801c1e6:	059a      	lsls	r2, r3, #22
 801c1e8:	d402      	bmi.n	801c1f0 <_vfiprintf_r+0x220>
 801c1ea:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c1ec:	f000 fce4 	bl	801cbb8 <__retarget_lock_release_recursive>
 801c1f0:	89ab      	ldrh	r3, [r5, #12]
 801c1f2:	065b      	lsls	r3, r3, #25
 801c1f4:	f53f af12 	bmi.w	801c01c <_vfiprintf_r+0x4c>
 801c1f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c1fa:	e711      	b.n	801c020 <_vfiprintf_r+0x50>
 801c1fc:	ab03      	add	r3, sp, #12
 801c1fe:	9300      	str	r3, [sp, #0]
 801c200:	462a      	mov	r2, r5
 801c202:	4b09      	ldr	r3, [pc, #36]	; (801c228 <_vfiprintf_r+0x258>)
 801c204:	a904      	add	r1, sp, #16
 801c206:	4630      	mov	r0, r6
 801c208:	f000 f880 	bl	801c30c <_printf_i>
 801c20c:	e7e4      	b.n	801c1d8 <_vfiprintf_r+0x208>
 801c20e:	bf00      	nop
 801c210:	080204ac 	.word	0x080204ac
 801c214:	080204cc 	.word	0x080204cc
 801c218:	0802048c 	.word	0x0802048c
 801c21c:	08020454 	.word	0x08020454
 801c220:	0802045e 	.word	0x0802045e
 801c224:	00000000 	.word	0x00000000
 801c228:	0801bfab 	.word	0x0801bfab
 801c22c:	0802045a 	.word	0x0802045a

0801c230 <_printf_common>:
 801c230:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c234:	4616      	mov	r6, r2
 801c236:	4699      	mov	r9, r3
 801c238:	688a      	ldr	r2, [r1, #8]
 801c23a:	690b      	ldr	r3, [r1, #16]
 801c23c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c240:	4293      	cmp	r3, r2
 801c242:	bfb8      	it	lt
 801c244:	4613      	movlt	r3, r2
 801c246:	6033      	str	r3, [r6, #0]
 801c248:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c24c:	4607      	mov	r7, r0
 801c24e:	460c      	mov	r4, r1
 801c250:	b10a      	cbz	r2, 801c256 <_printf_common+0x26>
 801c252:	3301      	adds	r3, #1
 801c254:	6033      	str	r3, [r6, #0]
 801c256:	6823      	ldr	r3, [r4, #0]
 801c258:	0699      	lsls	r1, r3, #26
 801c25a:	bf42      	ittt	mi
 801c25c:	6833      	ldrmi	r3, [r6, #0]
 801c25e:	3302      	addmi	r3, #2
 801c260:	6033      	strmi	r3, [r6, #0]
 801c262:	6825      	ldr	r5, [r4, #0]
 801c264:	f015 0506 	ands.w	r5, r5, #6
 801c268:	d106      	bne.n	801c278 <_printf_common+0x48>
 801c26a:	f104 0a19 	add.w	sl, r4, #25
 801c26e:	68e3      	ldr	r3, [r4, #12]
 801c270:	6832      	ldr	r2, [r6, #0]
 801c272:	1a9b      	subs	r3, r3, r2
 801c274:	42ab      	cmp	r3, r5
 801c276:	dc26      	bgt.n	801c2c6 <_printf_common+0x96>
 801c278:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c27c:	1e13      	subs	r3, r2, #0
 801c27e:	6822      	ldr	r2, [r4, #0]
 801c280:	bf18      	it	ne
 801c282:	2301      	movne	r3, #1
 801c284:	0692      	lsls	r2, r2, #26
 801c286:	d42b      	bmi.n	801c2e0 <_printf_common+0xb0>
 801c288:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c28c:	4649      	mov	r1, r9
 801c28e:	4638      	mov	r0, r7
 801c290:	47c0      	blx	r8
 801c292:	3001      	adds	r0, #1
 801c294:	d01e      	beq.n	801c2d4 <_printf_common+0xa4>
 801c296:	6823      	ldr	r3, [r4, #0]
 801c298:	68e5      	ldr	r5, [r4, #12]
 801c29a:	6832      	ldr	r2, [r6, #0]
 801c29c:	f003 0306 	and.w	r3, r3, #6
 801c2a0:	2b04      	cmp	r3, #4
 801c2a2:	bf08      	it	eq
 801c2a4:	1aad      	subeq	r5, r5, r2
 801c2a6:	68a3      	ldr	r3, [r4, #8]
 801c2a8:	6922      	ldr	r2, [r4, #16]
 801c2aa:	bf0c      	ite	eq
 801c2ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c2b0:	2500      	movne	r5, #0
 801c2b2:	4293      	cmp	r3, r2
 801c2b4:	bfc4      	itt	gt
 801c2b6:	1a9b      	subgt	r3, r3, r2
 801c2b8:	18ed      	addgt	r5, r5, r3
 801c2ba:	2600      	movs	r6, #0
 801c2bc:	341a      	adds	r4, #26
 801c2be:	42b5      	cmp	r5, r6
 801c2c0:	d11a      	bne.n	801c2f8 <_printf_common+0xc8>
 801c2c2:	2000      	movs	r0, #0
 801c2c4:	e008      	b.n	801c2d8 <_printf_common+0xa8>
 801c2c6:	2301      	movs	r3, #1
 801c2c8:	4652      	mov	r2, sl
 801c2ca:	4649      	mov	r1, r9
 801c2cc:	4638      	mov	r0, r7
 801c2ce:	47c0      	blx	r8
 801c2d0:	3001      	adds	r0, #1
 801c2d2:	d103      	bne.n	801c2dc <_printf_common+0xac>
 801c2d4:	f04f 30ff 	mov.w	r0, #4294967295
 801c2d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c2dc:	3501      	adds	r5, #1
 801c2de:	e7c6      	b.n	801c26e <_printf_common+0x3e>
 801c2e0:	18e1      	adds	r1, r4, r3
 801c2e2:	1c5a      	adds	r2, r3, #1
 801c2e4:	2030      	movs	r0, #48	; 0x30
 801c2e6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c2ea:	4422      	add	r2, r4
 801c2ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c2f0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c2f4:	3302      	adds	r3, #2
 801c2f6:	e7c7      	b.n	801c288 <_printf_common+0x58>
 801c2f8:	2301      	movs	r3, #1
 801c2fa:	4622      	mov	r2, r4
 801c2fc:	4649      	mov	r1, r9
 801c2fe:	4638      	mov	r0, r7
 801c300:	47c0      	blx	r8
 801c302:	3001      	adds	r0, #1
 801c304:	d0e6      	beq.n	801c2d4 <_printf_common+0xa4>
 801c306:	3601      	adds	r6, #1
 801c308:	e7d9      	b.n	801c2be <_printf_common+0x8e>
	...

0801c30c <_printf_i>:
 801c30c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c310:	7e0f      	ldrb	r7, [r1, #24]
 801c312:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c314:	2f78      	cmp	r7, #120	; 0x78
 801c316:	4691      	mov	r9, r2
 801c318:	4680      	mov	r8, r0
 801c31a:	460c      	mov	r4, r1
 801c31c:	469a      	mov	sl, r3
 801c31e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801c322:	d807      	bhi.n	801c334 <_printf_i+0x28>
 801c324:	2f62      	cmp	r7, #98	; 0x62
 801c326:	d80a      	bhi.n	801c33e <_printf_i+0x32>
 801c328:	2f00      	cmp	r7, #0
 801c32a:	f000 80d8 	beq.w	801c4de <_printf_i+0x1d2>
 801c32e:	2f58      	cmp	r7, #88	; 0x58
 801c330:	f000 80a3 	beq.w	801c47a <_printf_i+0x16e>
 801c334:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c338:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c33c:	e03a      	b.n	801c3b4 <_printf_i+0xa8>
 801c33e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c342:	2b15      	cmp	r3, #21
 801c344:	d8f6      	bhi.n	801c334 <_printf_i+0x28>
 801c346:	a101      	add	r1, pc, #4	; (adr r1, 801c34c <_printf_i+0x40>)
 801c348:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801c34c:	0801c3a5 	.word	0x0801c3a5
 801c350:	0801c3b9 	.word	0x0801c3b9
 801c354:	0801c335 	.word	0x0801c335
 801c358:	0801c335 	.word	0x0801c335
 801c35c:	0801c335 	.word	0x0801c335
 801c360:	0801c335 	.word	0x0801c335
 801c364:	0801c3b9 	.word	0x0801c3b9
 801c368:	0801c335 	.word	0x0801c335
 801c36c:	0801c335 	.word	0x0801c335
 801c370:	0801c335 	.word	0x0801c335
 801c374:	0801c335 	.word	0x0801c335
 801c378:	0801c4c5 	.word	0x0801c4c5
 801c37c:	0801c3e9 	.word	0x0801c3e9
 801c380:	0801c4a7 	.word	0x0801c4a7
 801c384:	0801c335 	.word	0x0801c335
 801c388:	0801c335 	.word	0x0801c335
 801c38c:	0801c4e7 	.word	0x0801c4e7
 801c390:	0801c335 	.word	0x0801c335
 801c394:	0801c3e9 	.word	0x0801c3e9
 801c398:	0801c335 	.word	0x0801c335
 801c39c:	0801c335 	.word	0x0801c335
 801c3a0:	0801c4af 	.word	0x0801c4af
 801c3a4:	682b      	ldr	r3, [r5, #0]
 801c3a6:	1d1a      	adds	r2, r3, #4
 801c3a8:	681b      	ldr	r3, [r3, #0]
 801c3aa:	602a      	str	r2, [r5, #0]
 801c3ac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c3b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c3b4:	2301      	movs	r3, #1
 801c3b6:	e0a3      	b.n	801c500 <_printf_i+0x1f4>
 801c3b8:	6820      	ldr	r0, [r4, #0]
 801c3ba:	6829      	ldr	r1, [r5, #0]
 801c3bc:	0606      	lsls	r6, r0, #24
 801c3be:	f101 0304 	add.w	r3, r1, #4
 801c3c2:	d50a      	bpl.n	801c3da <_printf_i+0xce>
 801c3c4:	680e      	ldr	r6, [r1, #0]
 801c3c6:	602b      	str	r3, [r5, #0]
 801c3c8:	2e00      	cmp	r6, #0
 801c3ca:	da03      	bge.n	801c3d4 <_printf_i+0xc8>
 801c3cc:	232d      	movs	r3, #45	; 0x2d
 801c3ce:	4276      	negs	r6, r6
 801c3d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c3d4:	485e      	ldr	r0, [pc, #376]	; (801c550 <_printf_i+0x244>)
 801c3d6:	230a      	movs	r3, #10
 801c3d8:	e019      	b.n	801c40e <_printf_i+0x102>
 801c3da:	680e      	ldr	r6, [r1, #0]
 801c3dc:	602b      	str	r3, [r5, #0]
 801c3de:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c3e2:	bf18      	it	ne
 801c3e4:	b236      	sxthne	r6, r6
 801c3e6:	e7ef      	b.n	801c3c8 <_printf_i+0xbc>
 801c3e8:	682b      	ldr	r3, [r5, #0]
 801c3ea:	6820      	ldr	r0, [r4, #0]
 801c3ec:	1d19      	adds	r1, r3, #4
 801c3ee:	6029      	str	r1, [r5, #0]
 801c3f0:	0601      	lsls	r1, r0, #24
 801c3f2:	d501      	bpl.n	801c3f8 <_printf_i+0xec>
 801c3f4:	681e      	ldr	r6, [r3, #0]
 801c3f6:	e002      	b.n	801c3fe <_printf_i+0xf2>
 801c3f8:	0646      	lsls	r6, r0, #25
 801c3fa:	d5fb      	bpl.n	801c3f4 <_printf_i+0xe8>
 801c3fc:	881e      	ldrh	r6, [r3, #0]
 801c3fe:	4854      	ldr	r0, [pc, #336]	; (801c550 <_printf_i+0x244>)
 801c400:	2f6f      	cmp	r7, #111	; 0x6f
 801c402:	bf0c      	ite	eq
 801c404:	2308      	moveq	r3, #8
 801c406:	230a      	movne	r3, #10
 801c408:	2100      	movs	r1, #0
 801c40a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c40e:	6865      	ldr	r5, [r4, #4]
 801c410:	60a5      	str	r5, [r4, #8]
 801c412:	2d00      	cmp	r5, #0
 801c414:	bfa2      	ittt	ge
 801c416:	6821      	ldrge	r1, [r4, #0]
 801c418:	f021 0104 	bicge.w	r1, r1, #4
 801c41c:	6021      	strge	r1, [r4, #0]
 801c41e:	b90e      	cbnz	r6, 801c424 <_printf_i+0x118>
 801c420:	2d00      	cmp	r5, #0
 801c422:	d04d      	beq.n	801c4c0 <_printf_i+0x1b4>
 801c424:	4615      	mov	r5, r2
 801c426:	fbb6 f1f3 	udiv	r1, r6, r3
 801c42a:	fb03 6711 	mls	r7, r3, r1, r6
 801c42e:	5dc7      	ldrb	r7, [r0, r7]
 801c430:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801c434:	4637      	mov	r7, r6
 801c436:	42bb      	cmp	r3, r7
 801c438:	460e      	mov	r6, r1
 801c43a:	d9f4      	bls.n	801c426 <_printf_i+0x11a>
 801c43c:	2b08      	cmp	r3, #8
 801c43e:	d10b      	bne.n	801c458 <_printf_i+0x14c>
 801c440:	6823      	ldr	r3, [r4, #0]
 801c442:	07de      	lsls	r6, r3, #31
 801c444:	d508      	bpl.n	801c458 <_printf_i+0x14c>
 801c446:	6923      	ldr	r3, [r4, #16]
 801c448:	6861      	ldr	r1, [r4, #4]
 801c44a:	4299      	cmp	r1, r3
 801c44c:	bfde      	ittt	le
 801c44e:	2330      	movle	r3, #48	; 0x30
 801c450:	f805 3c01 	strble.w	r3, [r5, #-1]
 801c454:	f105 35ff 	addle.w	r5, r5, #4294967295
 801c458:	1b52      	subs	r2, r2, r5
 801c45a:	6122      	str	r2, [r4, #16]
 801c45c:	f8cd a000 	str.w	sl, [sp]
 801c460:	464b      	mov	r3, r9
 801c462:	aa03      	add	r2, sp, #12
 801c464:	4621      	mov	r1, r4
 801c466:	4640      	mov	r0, r8
 801c468:	f7ff fee2 	bl	801c230 <_printf_common>
 801c46c:	3001      	adds	r0, #1
 801c46e:	d14c      	bne.n	801c50a <_printf_i+0x1fe>
 801c470:	f04f 30ff 	mov.w	r0, #4294967295
 801c474:	b004      	add	sp, #16
 801c476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c47a:	4835      	ldr	r0, [pc, #212]	; (801c550 <_printf_i+0x244>)
 801c47c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801c480:	6829      	ldr	r1, [r5, #0]
 801c482:	6823      	ldr	r3, [r4, #0]
 801c484:	f851 6b04 	ldr.w	r6, [r1], #4
 801c488:	6029      	str	r1, [r5, #0]
 801c48a:	061d      	lsls	r5, r3, #24
 801c48c:	d514      	bpl.n	801c4b8 <_printf_i+0x1ac>
 801c48e:	07df      	lsls	r7, r3, #31
 801c490:	bf44      	itt	mi
 801c492:	f043 0320 	orrmi.w	r3, r3, #32
 801c496:	6023      	strmi	r3, [r4, #0]
 801c498:	b91e      	cbnz	r6, 801c4a2 <_printf_i+0x196>
 801c49a:	6823      	ldr	r3, [r4, #0]
 801c49c:	f023 0320 	bic.w	r3, r3, #32
 801c4a0:	6023      	str	r3, [r4, #0]
 801c4a2:	2310      	movs	r3, #16
 801c4a4:	e7b0      	b.n	801c408 <_printf_i+0xfc>
 801c4a6:	6823      	ldr	r3, [r4, #0]
 801c4a8:	f043 0320 	orr.w	r3, r3, #32
 801c4ac:	6023      	str	r3, [r4, #0]
 801c4ae:	2378      	movs	r3, #120	; 0x78
 801c4b0:	4828      	ldr	r0, [pc, #160]	; (801c554 <_printf_i+0x248>)
 801c4b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c4b6:	e7e3      	b.n	801c480 <_printf_i+0x174>
 801c4b8:	0659      	lsls	r1, r3, #25
 801c4ba:	bf48      	it	mi
 801c4bc:	b2b6      	uxthmi	r6, r6
 801c4be:	e7e6      	b.n	801c48e <_printf_i+0x182>
 801c4c0:	4615      	mov	r5, r2
 801c4c2:	e7bb      	b.n	801c43c <_printf_i+0x130>
 801c4c4:	682b      	ldr	r3, [r5, #0]
 801c4c6:	6826      	ldr	r6, [r4, #0]
 801c4c8:	6961      	ldr	r1, [r4, #20]
 801c4ca:	1d18      	adds	r0, r3, #4
 801c4cc:	6028      	str	r0, [r5, #0]
 801c4ce:	0635      	lsls	r5, r6, #24
 801c4d0:	681b      	ldr	r3, [r3, #0]
 801c4d2:	d501      	bpl.n	801c4d8 <_printf_i+0x1cc>
 801c4d4:	6019      	str	r1, [r3, #0]
 801c4d6:	e002      	b.n	801c4de <_printf_i+0x1d2>
 801c4d8:	0670      	lsls	r0, r6, #25
 801c4da:	d5fb      	bpl.n	801c4d4 <_printf_i+0x1c8>
 801c4dc:	8019      	strh	r1, [r3, #0]
 801c4de:	2300      	movs	r3, #0
 801c4e0:	6123      	str	r3, [r4, #16]
 801c4e2:	4615      	mov	r5, r2
 801c4e4:	e7ba      	b.n	801c45c <_printf_i+0x150>
 801c4e6:	682b      	ldr	r3, [r5, #0]
 801c4e8:	1d1a      	adds	r2, r3, #4
 801c4ea:	602a      	str	r2, [r5, #0]
 801c4ec:	681d      	ldr	r5, [r3, #0]
 801c4ee:	6862      	ldr	r2, [r4, #4]
 801c4f0:	2100      	movs	r1, #0
 801c4f2:	4628      	mov	r0, r5
 801c4f4:	f7e3 fe84 	bl	8000200 <memchr>
 801c4f8:	b108      	cbz	r0, 801c4fe <_printf_i+0x1f2>
 801c4fa:	1b40      	subs	r0, r0, r5
 801c4fc:	6060      	str	r0, [r4, #4]
 801c4fe:	6863      	ldr	r3, [r4, #4]
 801c500:	6123      	str	r3, [r4, #16]
 801c502:	2300      	movs	r3, #0
 801c504:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c508:	e7a8      	b.n	801c45c <_printf_i+0x150>
 801c50a:	6923      	ldr	r3, [r4, #16]
 801c50c:	462a      	mov	r2, r5
 801c50e:	4649      	mov	r1, r9
 801c510:	4640      	mov	r0, r8
 801c512:	47d0      	blx	sl
 801c514:	3001      	adds	r0, #1
 801c516:	d0ab      	beq.n	801c470 <_printf_i+0x164>
 801c518:	6823      	ldr	r3, [r4, #0]
 801c51a:	079b      	lsls	r3, r3, #30
 801c51c:	d413      	bmi.n	801c546 <_printf_i+0x23a>
 801c51e:	68e0      	ldr	r0, [r4, #12]
 801c520:	9b03      	ldr	r3, [sp, #12]
 801c522:	4298      	cmp	r0, r3
 801c524:	bfb8      	it	lt
 801c526:	4618      	movlt	r0, r3
 801c528:	e7a4      	b.n	801c474 <_printf_i+0x168>
 801c52a:	2301      	movs	r3, #1
 801c52c:	4632      	mov	r2, r6
 801c52e:	4649      	mov	r1, r9
 801c530:	4640      	mov	r0, r8
 801c532:	47d0      	blx	sl
 801c534:	3001      	adds	r0, #1
 801c536:	d09b      	beq.n	801c470 <_printf_i+0x164>
 801c538:	3501      	adds	r5, #1
 801c53a:	68e3      	ldr	r3, [r4, #12]
 801c53c:	9903      	ldr	r1, [sp, #12]
 801c53e:	1a5b      	subs	r3, r3, r1
 801c540:	42ab      	cmp	r3, r5
 801c542:	dcf2      	bgt.n	801c52a <_printf_i+0x21e>
 801c544:	e7eb      	b.n	801c51e <_printf_i+0x212>
 801c546:	2500      	movs	r5, #0
 801c548:	f104 0619 	add.w	r6, r4, #25
 801c54c:	e7f5      	b.n	801c53a <_printf_i+0x22e>
 801c54e:	bf00      	nop
 801c550:	08020465 	.word	0x08020465
 801c554:	08020476 	.word	0x08020476

0801c558 <_sbrk_r>:
 801c558:	b538      	push	{r3, r4, r5, lr}
 801c55a:	4d06      	ldr	r5, [pc, #24]	; (801c574 <_sbrk_r+0x1c>)
 801c55c:	2300      	movs	r3, #0
 801c55e:	4604      	mov	r4, r0
 801c560:	4608      	mov	r0, r1
 801c562:	602b      	str	r3, [r5, #0]
 801c564:	f7e5 fd2c 	bl	8001fc0 <_sbrk>
 801c568:	1c43      	adds	r3, r0, #1
 801c56a:	d102      	bne.n	801c572 <_sbrk_r+0x1a>
 801c56c:	682b      	ldr	r3, [r5, #0]
 801c56e:	b103      	cbz	r3, 801c572 <_sbrk_r+0x1a>
 801c570:	6023      	str	r3, [r4, #0]
 801c572:	bd38      	pop	{r3, r4, r5, pc}
 801c574:	2000a7d4 	.word	0x2000a7d4

0801c578 <_raise_r>:
 801c578:	291f      	cmp	r1, #31
 801c57a:	b538      	push	{r3, r4, r5, lr}
 801c57c:	4604      	mov	r4, r0
 801c57e:	460d      	mov	r5, r1
 801c580:	d904      	bls.n	801c58c <_raise_r+0x14>
 801c582:	2316      	movs	r3, #22
 801c584:	6003      	str	r3, [r0, #0]
 801c586:	f04f 30ff 	mov.w	r0, #4294967295
 801c58a:	bd38      	pop	{r3, r4, r5, pc}
 801c58c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c58e:	b112      	cbz	r2, 801c596 <_raise_r+0x1e>
 801c590:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c594:	b94b      	cbnz	r3, 801c5aa <_raise_r+0x32>
 801c596:	4620      	mov	r0, r4
 801c598:	f000 f830 	bl	801c5fc <_getpid_r>
 801c59c:	462a      	mov	r2, r5
 801c59e:	4601      	mov	r1, r0
 801c5a0:	4620      	mov	r0, r4
 801c5a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c5a6:	f000 b817 	b.w	801c5d8 <_kill_r>
 801c5aa:	2b01      	cmp	r3, #1
 801c5ac:	d00a      	beq.n	801c5c4 <_raise_r+0x4c>
 801c5ae:	1c59      	adds	r1, r3, #1
 801c5b0:	d103      	bne.n	801c5ba <_raise_r+0x42>
 801c5b2:	2316      	movs	r3, #22
 801c5b4:	6003      	str	r3, [r0, #0]
 801c5b6:	2001      	movs	r0, #1
 801c5b8:	e7e7      	b.n	801c58a <_raise_r+0x12>
 801c5ba:	2400      	movs	r4, #0
 801c5bc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c5c0:	4628      	mov	r0, r5
 801c5c2:	4798      	blx	r3
 801c5c4:	2000      	movs	r0, #0
 801c5c6:	e7e0      	b.n	801c58a <_raise_r+0x12>

0801c5c8 <raise>:
 801c5c8:	4b02      	ldr	r3, [pc, #8]	; (801c5d4 <raise+0xc>)
 801c5ca:	4601      	mov	r1, r0
 801c5cc:	6818      	ldr	r0, [r3, #0]
 801c5ce:	f7ff bfd3 	b.w	801c578 <_raise_r>
 801c5d2:	bf00      	nop
 801c5d4:	200000d8 	.word	0x200000d8

0801c5d8 <_kill_r>:
 801c5d8:	b538      	push	{r3, r4, r5, lr}
 801c5da:	4d07      	ldr	r5, [pc, #28]	; (801c5f8 <_kill_r+0x20>)
 801c5dc:	2300      	movs	r3, #0
 801c5de:	4604      	mov	r4, r0
 801c5e0:	4608      	mov	r0, r1
 801c5e2:	4611      	mov	r1, r2
 801c5e4:	602b      	str	r3, [r5, #0]
 801c5e6:	f7e5 fcb5 	bl	8001f54 <_kill>
 801c5ea:	1c43      	adds	r3, r0, #1
 801c5ec:	d102      	bne.n	801c5f4 <_kill_r+0x1c>
 801c5ee:	682b      	ldr	r3, [r5, #0]
 801c5f0:	b103      	cbz	r3, 801c5f4 <_kill_r+0x1c>
 801c5f2:	6023      	str	r3, [r4, #0]
 801c5f4:	bd38      	pop	{r3, r4, r5, pc}
 801c5f6:	bf00      	nop
 801c5f8:	2000a7d4 	.word	0x2000a7d4

0801c5fc <_getpid_r>:
 801c5fc:	f7e5 bca8 	b.w	8001f50 <_getpid>

0801c600 <__swbuf_r>:
 801c600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c602:	460e      	mov	r6, r1
 801c604:	4614      	mov	r4, r2
 801c606:	4605      	mov	r5, r0
 801c608:	b118      	cbz	r0, 801c612 <__swbuf_r+0x12>
 801c60a:	6983      	ldr	r3, [r0, #24]
 801c60c:	b90b      	cbnz	r3, 801c612 <__swbuf_r+0x12>
 801c60e:	f000 fa33 	bl	801ca78 <__sinit>
 801c612:	4b21      	ldr	r3, [pc, #132]	; (801c698 <__swbuf_r+0x98>)
 801c614:	429c      	cmp	r4, r3
 801c616:	d12b      	bne.n	801c670 <__swbuf_r+0x70>
 801c618:	686c      	ldr	r4, [r5, #4]
 801c61a:	69a3      	ldr	r3, [r4, #24]
 801c61c:	60a3      	str	r3, [r4, #8]
 801c61e:	89a3      	ldrh	r3, [r4, #12]
 801c620:	071a      	lsls	r2, r3, #28
 801c622:	d52f      	bpl.n	801c684 <__swbuf_r+0x84>
 801c624:	6923      	ldr	r3, [r4, #16]
 801c626:	b36b      	cbz	r3, 801c684 <__swbuf_r+0x84>
 801c628:	6923      	ldr	r3, [r4, #16]
 801c62a:	6820      	ldr	r0, [r4, #0]
 801c62c:	1ac0      	subs	r0, r0, r3
 801c62e:	6963      	ldr	r3, [r4, #20]
 801c630:	b2f6      	uxtb	r6, r6
 801c632:	4283      	cmp	r3, r0
 801c634:	4637      	mov	r7, r6
 801c636:	dc04      	bgt.n	801c642 <__swbuf_r+0x42>
 801c638:	4621      	mov	r1, r4
 801c63a:	4628      	mov	r0, r5
 801c63c:	f000 f988 	bl	801c950 <_fflush_r>
 801c640:	bb30      	cbnz	r0, 801c690 <__swbuf_r+0x90>
 801c642:	68a3      	ldr	r3, [r4, #8]
 801c644:	3b01      	subs	r3, #1
 801c646:	60a3      	str	r3, [r4, #8]
 801c648:	6823      	ldr	r3, [r4, #0]
 801c64a:	1c5a      	adds	r2, r3, #1
 801c64c:	6022      	str	r2, [r4, #0]
 801c64e:	701e      	strb	r6, [r3, #0]
 801c650:	6963      	ldr	r3, [r4, #20]
 801c652:	3001      	adds	r0, #1
 801c654:	4283      	cmp	r3, r0
 801c656:	d004      	beq.n	801c662 <__swbuf_r+0x62>
 801c658:	89a3      	ldrh	r3, [r4, #12]
 801c65a:	07db      	lsls	r3, r3, #31
 801c65c:	d506      	bpl.n	801c66c <__swbuf_r+0x6c>
 801c65e:	2e0a      	cmp	r6, #10
 801c660:	d104      	bne.n	801c66c <__swbuf_r+0x6c>
 801c662:	4621      	mov	r1, r4
 801c664:	4628      	mov	r0, r5
 801c666:	f000 f973 	bl	801c950 <_fflush_r>
 801c66a:	b988      	cbnz	r0, 801c690 <__swbuf_r+0x90>
 801c66c:	4638      	mov	r0, r7
 801c66e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c670:	4b0a      	ldr	r3, [pc, #40]	; (801c69c <__swbuf_r+0x9c>)
 801c672:	429c      	cmp	r4, r3
 801c674:	d101      	bne.n	801c67a <__swbuf_r+0x7a>
 801c676:	68ac      	ldr	r4, [r5, #8]
 801c678:	e7cf      	b.n	801c61a <__swbuf_r+0x1a>
 801c67a:	4b09      	ldr	r3, [pc, #36]	; (801c6a0 <__swbuf_r+0xa0>)
 801c67c:	429c      	cmp	r4, r3
 801c67e:	bf08      	it	eq
 801c680:	68ec      	ldreq	r4, [r5, #12]
 801c682:	e7ca      	b.n	801c61a <__swbuf_r+0x1a>
 801c684:	4621      	mov	r1, r4
 801c686:	4628      	mov	r0, r5
 801c688:	f000 f80c 	bl	801c6a4 <__swsetup_r>
 801c68c:	2800      	cmp	r0, #0
 801c68e:	d0cb      	beq.n	801c628 <__swbuf_r+0x28>
 801c690:	f04f 37ff 	mov.w	r7, #4294967295
 801c694:	e7ea      	b.n	801c66c <__swbuf_r+0x6c>
 801c696:	bf00      	nop
 801c698:	080204ac 	.word	0x080204ac
 801c69c:	080204cc 	.word	0x080204cc
 801c6a0:	0802048c 	.word	0x0802048c

0801c6a4 <__swsetup_r>:
 801c6a4:	4b32      	ldr	r3, [pc, #200]	; (801c770 <__swsetup_r+0xcc>)
 801c6a6:	b570      	push	{r4, r5, r6, lr}
 801c6a8:	681d      	ldr	r5, [r3, #0]
 801c6aa:	4606      	mov	r6, r0
 801c6ac:	460c      	mov	r4, r1
 801c6ae:	b125      	cbz	r5, 801c6ba <__swsetup_r+0x16>
 801c6b0:	69ab      	ldr	r3, [r5, #24]
 801c6b2:	b913      	cbnz	r3, 801c6ba <__swsetup_r+0x16>
 801c6b4:	4628      	mov	r0, r5
 801c6b6:	f000 f9df 	bl	801ca78 <__sinit>
 801c6ba:	4b2e      	ldr	r3, [pc, #184]	; (801c774 <__swsetup_r+0xd0>)
 801c6bc:	429c      	cmp	r4, r3
 801c6be:	d10f      	bne.n	801c6e0 <__swsetup_r+0x3c>
 801c6c0:	686c      	ldr	r4, [r5, #4]
 801c6c2:	89a3      	ldrh	r3, [r4, #12]
 801c6c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c6c8:	0719      	lsls	r1, r3, #28
 801c6ca:	d42c      	bmi.n	801c726 <__swsetup_r+0x82>
 801c6cc:	06dd      	lsls	r5, r3, #27
 801c6ce:	d411      	bmi.n	801c6f4 <__swsetup_r+0x50>
 801c6d0:	2309      	movs	r3, #9
 801c6d2:	6033      	str	r3, [r6, #0]
 801c6d4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c6d8:	81a3      	strh	r3, [r4, #12]
 801c6da:	f04f 30ff 	mov.w	r0, #4294967295
 801c6de:	e03e      	b.n	801c75e <__swsetup_r+0xba>
 801c6e0:	4b25      	ldr	r3, [pc, #148]	; (801c778 <__swsetup_r+0xd4>)
 801c6e2:	429c      	cmp	r4, r3
 801c6e4:	d101      	bne.n	801c6ea <__swsetup_r+0x46>
 801c6e6:	68ac      	ldr	r4, [r5, #8]
 801c6e8:	e7eb      	b.n	801c6c2 <__swsetup_r+0x1e>
 801c6ea:	4b24      	ldr	r3, [pc, #144]	; (801c77c <__swsetup_r+0xd8>)
 801c6ec:	429c      	cmp	r4, r3
 801c6ee:	bf08      	it	eq
 801c6f0:	68ec      	ldreq	r4, [r5, #12]
 801c6f2:	e7e6      	b.n	801c6c2 <__swsetup_r+0x1e>
 801c6f4:	0758      	lsls	r0, r3, #29
 801c6f6:	d512      	bpl.n	801c71e <__swsetup_r+0x7a>
 801c6f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c6fa:	b141      	cbz	r1, 801c70e <__swsetup_r+0x6a>
 801c6fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c700:	4299      	cmp	r1, r3
 801c702:	d002      	beq.n	801c70a <__swsetup_r+0x66>
 801c704:	4630      	mov	r0, r6
 801c706:	f7ff fb59 	bl	801bdbc <_free_r>
 801c70a:	2300      	movs	r3, #0
 801c70c:	6363      	str	r3, [r4, #52]	; 0x34
 801c70e:	89a3      	ldrh	r3, [r4, #12]
 801c710:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c714:	81a3      	strh	r3, [r4, #12]
 801c716:	2300      	movs	r3, #0
 801c718:	6063      	str	r3, [r4, #4]
 801c71a:	6923      	ldr	r3, [r4, #16]
 801c71c:	6023      	str	r3, [r4, #0]
 801c71e:	89a3      	ldrh	r3, [r4, #12]
 801c720:	f043 0308 	orr.w	r3, r3, #8
 801c724:	81a3      	strh	r3, [r4, #12]
 801c726:	6923      	ldr	r3, [r4, #16]
 801c728:	b94b      	cbnz	r3, 801c73e <__swsetup_r+0x9a>
 801c72a:	89a3      	ldrh	r3, [r4, #12]
 801c72c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c730:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c734:	d003      	beq.n	801c73e <__swsetup_r+0x9a>
 801c736:	4621      	mov	r1, r4
 801c738:	4630      	mov	r0, r6
 801c73a:	f000 fa63 	bl	801cc04 <__smakebuf_r>
 801c73e:	89a0      	ldrh	r0, [r4, #12]
 801c740:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c744:	f010 0301 	ands.w	r3, r0, #1
 801c748:	d00a      	beq.n	801c760 <__swsetup_r+0xbc>
 801c74a:	2300      	movs	r3, #0
 801c74c:	60a3      	str	r3, [r4, #8]
 801c74e:	6963      	ldr	r3, [r4, #20]
 801c750:	425b      	negs	r3, r3
 801c752:	61a3      	str	r3, [r4, #24]
 801c754:	6923      	ldr	r3, [r4, #16]
 801c756:	b943      	cbnz	r3, 801c76a <__swsetup_r+0xc6>
 801c758:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c75c:	d1ba      	bne.n	801c6d4 <__swsetup_r+0x30>
 801c75e:	bd70      	pop	{r4, r5, r6, pc}
 801c760:	0781      	lsls	r1, r0, #30
 801c762:	bf58      	it	pl
 801c764:	6963      	ldrpl	r3, [r4, #20]
 801c766:	60a3      	str	r3, [r4, #8]
 801c768:	e7f4      	b.n	801c754 <__swsetup_r+0xb0>
 801c76a:	2000      	movs	r0, #0
 801c76c:	e7f7      	b.n	801c75e <__swsetup_r+0xba>
 801c76e:	bf00      	nop
 801c770:	200000d8 	.word	0x200000d8
 801c774:	080204ac 	.word	0x080204ac
 801c778:	080204cc 	.word	0x080204cc
 801c77c:	0802048c 	.word	0x0802048c

0801c780 <__register_exitproc>:
 801c780:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c784:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c840 <__register_exitproc+0xc0>
 801c788:	4606      	mov	r6, r0
 801c78a:	f8d8 0000 	ldr.w	r0, [r8]
 801c78e:	461f      	mov	r7, r3
 801c790:	460d      	mov	r5, r1
 801c792:	4691      	mov	r9, r2
 801c794:	f000 fa0e 	bl	801cbb4 <__retarget_lock_acquire_recursive>
 801c798:	4b25      	ldr	r3, [pc, #148]	; (801c830 <__register_exitproc+0xb0>)
 801c79a:	681c      	ldr	r4, [r3, #0]
 801c79c:	b934      	cbnz	r4, 801c7ac <__register_exitproc+0x2c>
 801c79e:	4c25      	ldr	r4, [pc, #148]	; (801c834 <__register_exitproc+0xb4>)
 801c7a0:	601c      	str	r4, [r3, #0]
 801c7a2:	4b25      	ldr	r3, [pc, #148]	; (801c838 <__register_exitproc+0xb8>)
 801c7a4:	b113      	cbz	r3, 801c7ac <__register_exitproc+0x2c>
 801c7a6:	681b      	ldr	r3, [r3, #0]
 801c7a8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c7ac:	6863      	ldr	r3, [r4, #4]
 801c7ae:	2b1f      	cmp	r3, #31
 801c7b0:	dd07      	ble.n	801c7c2 <__register_exitproc+0x42>
 801c7b2:	f8d8 0000 	ldr.w	r0, [r8]
 801c7b6:	f000 f9ff 	bl	801cbb8 <__retarget_lock_release_recursive>
 801c7ba:	f04f 30ff 	mov.w	r0, #4294967295
 801c7be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c7c2:	b34e      	cbz	r6, 801c818 <__register_exitproc+0x98>
 801c7c4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c7c8:	b988      	cbnz	r0, 801c7ee <__register_exitproc+0x6e>
 801c7ca:	4b1c      	ldr	r3, [pc, #112]	; (801c83c <__register_exitproc+0xbc>)
 801c7cc:	b923      	cbnz	r3, 801c7d8 <__register_exitproc+0x58>
 801c7ce:	f8d8 0000 	ldr.w	r0, [r8]
 801c7d2:	f000 f9f0 	bl	801cbb6 <__retarget_lock_release>
 801c7d6:	e7f0      	b.n	801c7ba <__register_exitproc+0x3a>
 801c7d8:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c7dc:	f7ff fac8 	bl	801bd70 <malloc>
 801c7e0:	2800      	cmp	r0, #0
 801c7e2:	d0f4      	beq.n	801c7ce <__register_exitproc+0x4e>
 801c7e4:	2300      	movs	r3, #0
 801c7e6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c7ea:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c7ee:	6863      	ldr	r3, [r4, #4]
 801c7f0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c7f4:	2201      	movs	r2, #1
 801c7f6:	409a      	lsls	r2, r3
 801c7f8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c7fc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c800:	4313      	orrs	r3, r2
 801c802:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c806:	2e02      	cmp	r6, #2
 801c808:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c80c:	bf02      	ittt	eq
 801c80e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c812:	4313      	orreq	r3, r2
 801c814:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801c818:	6863      	ldr	r3, [r4, #4]
 801c81a:	f8d8 0000 	ldr.w	r0, [r8]
 801c81e:	1c5a      	adds	r2, r3, #1
 801c820:	3302      	adds	r3, #2
 801c822:	6062      	str	r2, [r4, #4]
 801c824:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c828:	f000 f9c6 	bl	801cbb8 <__retarget_lock_release_recursive>
 801c82c:	2000      	movs	r0, #0
 801c82e:	e7c6      	b.n	801c7be <__register_exitproc+0x3e>
 801c830:	2000a7cc 	.word	0x2000a7cc
 801c834:	2000a740 	.word	0x2000a740
 801c838:	08020488 	.word	0x08020488
 801c83c:	0801bd71 	.word	0x0801bd71
 801c840:	2000013c 	.word	0x2000013c

0801c844 <__sflush_r>:
 801c844:	898a      	ldrh	r2, [r1, #12]
 801c846:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c84a:	4605      	mov	r5, r0
 801c84c:	0710      	lsls	r0, r2, #28
 801c84e:	460c      	mov	r4, r1
 801c850:	d458      	bmi.n	801c904 <__sflush_r+0xc0>
 801c852:	684b      	ldr	r3, [r1, #4]
 801c854:	2b00      	cmp	r3, #0
 801c856:	dc05      	bgt.n	801c864 <__sflush_r+0x20>
 801c858:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c85a:	2b00      	cmp	r3, #0
 801c85c:	dc02      	bgt.n	801c864 <__sflush_r+0x20>
 801c85e:	2000      	movs	r0, #0
 801c860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c864:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c866:	2e00      	cmp	r6, #0
 801c868:	d0f9      	beq.n	801c85e <__sflush_r+0x1a>
 801c86a:	2300      	movs	r3, #0
 801c86c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c870:	682f      	ldr	r7, [r5, #0]
 801c872:	602b      	str	r3, [r5, #0]
 801c874:	d032      	beq.n	801c8dc <__sflush_r+0x98>
 801c876:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c878:	89a3      	ldrh	r3, [r4, #12]
 801c87a:	075a      	lsls	r2, r3, #29
 801c87c:	d505      	bpl.n	801c88a <__sflush_r+0x46>
 801c87e:	6863      	ldr	r3, [r4, #4]
 801c880:	1ac0      	subs	r0, r0, r3
 801c882:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c884:	b10b      	cbz	r3, 801c88a <__sflush_r+0x46>
 801c886:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c888:	1ac0      	subs	r0, r0, r3
 801c88a:	2300      	movs	r3, #0
 801c88c:	4602      	mov	r2, r0
 801c88e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c890:	6a21      	ldr	r1, [r4, #32]
 801c892:	4628      	mov	r0, r5
 801c894:	47b0      	blx	r6
 801c896:	1c43      	adds	r3, r0, #1
 801c898:	89a3      	ldrh	r3, [r4, #12]
 801c89a:	d106      	bne.n	801c8aa <__sflush_r+0x66>
 801c89c:	6829      	ldr	r1, [r5, #0]
 801c89e:	291d      	cmp	r1, #29
 801c8a0:	d82c      	bhi.n	801c8fc <__sflush_r+0xb8>
 801c8a2:	4a2a      	ldr	r2, [pc, #168]	; (801c94c <__sflush_r+0x108>)
 801c8a4:	40ca      	lsrs	r2, r1
 801c8a6:	07d6      	lsls	r6, r2, #31
 801c8a8:	d528      	bpl.n	801c8fc <__sflush_r+0xb8>
 801c8aa:	2200      	movs	r2, #0
 801c8ac:	6062      	str	r2, [r4, #4]
 801c8ae:	04d9      	lsls	r1, r3, #19
 801c8b0:	6922      	ldr	r2, [r4, #16]
 801c8b2:	6022      	str	r2, [r4, #0]
 801c8b4:	d504      	bpl.n	801c8c0 <__sflush_r+0x7c>
 801c8b6:	1c42      	adds	r2, r0, #1
 801c8b8:	d101      	bne.n	801c8be <__sflush_r+0x7a>
 801c8ba:	682b      	ldr	r3, [r5, #0]
 801c8bc:	b903      	cbnz	r3, 801c8c0 <__sflush_r+0x7c>
 801c8be:	6560      	str	r0, [r4, #84]	; 0x54
 801c8c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c8c2:	602f      	str	r7, [r5, #0]
 801c8c4:	2900      	cmp	r1, #0
 801c8c6:	d0ca      	beq.n	801c85e <__sflush_r+0x1a>
 801c8c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c8cc:	4299      	cmp	r1, r3
 801c8ce:	d002      	beq.n	801c8d6 <__sflush_r+0x92>
 801c8d0:	4628      	mov	r0, r5
 801c8d2:	f7ff fa73 	bl	801bdbc <_free_r>
 801c8d6:	2000      	movs	r0, #0
 801c8d8:	6360      	str	r0, [r4, #52]	; 0x34
 801c8da:	e7c1      	b.n	801c860 <__sflush_r+0x1c>
 801c8dc:	6a21      	ldr	r1, [r4, #32]
 801c8de:	2301      	movs	r3, #1
 801c8e0:	4628      	mov	r0, r5
 801c8e2:	47b0      	blx	r6
 801c8e4:	1c41      	adds	r1, r0, #1
 801c8e6:	d1c7      	bne.n	801c878 <__sflush_r+0x34>
 801c8e8:	682b      	ldr	r3, [r5, #0]
 801c8ea:	2b00      	cmp	r3, #0
 801c8ec:	d0c4      	beq.n	801c878 <__sflush_r+0x34>
 801c8ee:	2b1d      	cmp	r3, #29
 801c8f0:	d001      	beq.n	801c8f6 <__sflush_r+0xb2>
 801c8f2:	2b16      	cmp	r3, #22
 801c8f4:	d101      	bne.n	801c8fa <__sflush_r+0xb6>
 801c8f6:	602f      	str	r7, [r5, #0]
 801c8f8:	e7b1      	b.n	801c85e <__sflush_r+0x1a>
 801c8fa:	89a3      	ldrh	r3, [r4, #12]
 801c8fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c900:	81a3      	strh	r3, [r4, #12]
 801c902:	e7ad      	b.n	801c860 <__sflush_r+0x1c>
 801c904:	690f      	ldr	r7, [r1, #16]
 801c906:	2f00      	cmp	r7, #0
 801c908:	d0a9      	beq.n	801c85e <__sflush_r+0x1a>
 801c90a:	0793      	lsls	r3, r2, #30
 801c90c:	680e      	ldr	r6, [r1, #0]
 801c90e:	bf08      	it	eq
 801c910:	694b      	ldreq	r3, [r1, #20]
 801c912:	600f      	str	r7, [r1, #0]
 801c914:	bf18      	it	ne
 801c916:	2300      	movne	r3, #0
 801c918:	eba6 0807 	sub.w	r8, r6, r7
 801c91c:	608b      	str	r3, [r1, #8]
 801c91e:	f1b8 0f00 	cmp.w	r8, #0
 801c922:	dd9c      	ble.n	801c85e <__sflush_r+0x1a>
 801c924:	6a21      	ldr	r1, [r4, #32]
 801c926:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c928:	4643      	mov	r3, r8
 801c92a:	463a      	mov	r2, r7
 801c92c:	4628      	mov	r0, r5
 801c92e:	47b0      	blx	r6
 801c930:	2800      	cmp	r0, #0
 801c932:	dc06      	bgt.n	801c942 <__sflush_r+0xfe>
 801c934:	89a3      	ldrh	r3, [r4, #12]
 801c936:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c93a:	81a3      	strh	r3, [r4, #12]
 801c93c:	f04f 30ff 	mov.w	r0, #4294967295
 801c940:	e78e      	b.n	801c860 <__sflush_r+0x1c>
 801c942:	4407      	add	r7, r0
 801c944:	eba8 0800 	sub.w	r8, r8, r0
 801c948:	e7e9      	b.n	801c91e <__sflush_r+0xda>
 801c94a:	bf00      	nop
 801c94c:	20400001 	.word	0x20400001

0801c950 <_fflush_r>:
 801c950:	b538      	push	{r3, r4, r5, lr}
 801c952:	690b      	ldr	r3, [r1, #16]
 801c954:	4605      	mov	r5, r0
 801c956:	460c      	mov	r4, r1
 801c958:	b913      	cbnz	r3, 801c960 <_fflush_r+0x10>
 801c95a:	2500      	movs	r5, #0
 801c95c:	4628      	mov	r0, r5
 801c95e:	bd38      	pop	{r3, r4, r5, pc}
 801c960:	b118      	cbz	r0, 801c96a <_fflush_r+0x1a>
 801c962:	6983      	ldr	r3, [r0, #24]
 801c964:	b90b      	cbnz	r3, 801c96a <_fflush_r+0x1a>
 801c966:	f000 f887 	bl	801ca78 <__sinit>
 801c96a:	4b14      	ldr	r3, [pc, #80]	; (801c9bc <_fflush_r+0x6c>)
 801c96c:	429c      	cmp	r4, r3
 801c96e:	d11b      	bne.n	801c9a8 <_fflush_r+0x58>
 801c970:	686c      	ldr	r4, [r5, #4]
 801c972:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c976:	2b00      	cmp	r3, #0
 801c978:	d0ef      	beq.n	801c95a <_fflush_r+0xa>
 801c97a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c97c:	07d0      	lsls	r0, r2, #31
 801c97e:	d404      	bmi.n	801c98a <_fflush_r+0x3a>
 801c980:	0599      	lsls	r1, r3, #22
 801c982:	d402      	bmi.n	801c98a <_fflush_r+0x3a>
 801c984:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c986:	f000 f915 	bl	801cbb4 <__retarget_lock_acquire_recursive>
 801c98a:	4628      	mov	r0, r5
 801c98c:	4621      	mov	r1, r4
 801c98e:	f7ff ff59 	bl	801c844 <__sflush_r>
 801c992:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c994:	07da      	lsls	r2, r3, #31
 801c996:	4605      	mov	r5, r0
 801c998:	d4e0      	bmi.n	801c95c <_fflush_r+0xc>
 801c99a:	89a3      	ldrh	r3, [r4, #12]
 801c99c:	059b      	lsls	r3, r3, #22
 801c99e:	d4dd      	bmi.n	801c95c <_fflush_r+0xc>
 801c9a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c9a2:	f000 f909 	bl	801cbb8 <__retarget_lock_release_recursive>
 801c9a6:	e7d9      	b.n	801c95c <_fflush_r+0xc>
 801c9a8:	4b05      	ldr	r3, [pc, #20]	; (801c9c0 <_fflush_r+0x70>)
 801c9aa:	429c      	cmp	r4, r3
 801c9ac:	d101      	bne.n	801c9b2 <_fflush_r+0x62>
 801c9ae:	68ac      	ldr	r4, [r5, #8]
 801c9b0:	e7df      	b.n	801c972 <_fflush_r+0x22>
 801c9b2:	4b04      	ldr	r3, [pc, #16]	; (801c9c4 <_fflush_r+0x74>)
 801c9b4:	429c      	cmp	r4, r3
 801c9b6:	bf08      	it	eq
 801c9b8:	68ec      	ldreq	r4, [r5, #12]
 801c9ba:	e7da      	b.n	801c972 <_fflush_r+0x22>
 801c9bc:	080204ac 	.word	0x080204ac
 801c9c0:	080204cc 	.word	0x080204cc
 801c9c4:	0802048c 	.word	0x0802048c

0801c9c8 <std>:
 801c9c8:	2300      	movs	r3, #0
 801c9ca:	b510      	push	{r4, lr}
 801c9cc:	4604      	mov	r4, r0
 801c9ce:	e9c0 3300 	strd	r3, r3, [r0]
 801c9d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c9d6:	6083      	str	r3, [r0, #8]
 801c9d8:	8181      	strh	r1, [r0, #12]
 801c9da:	6643      	str	r3, [r0, #100]	; 0x64
 801c9dc:	81c2      	strh	r2, [r0, #14]
 801c9de:	6183      	str	r3, [r0, #24]
 801c9e0:	4619      	mov	r1, r3
 801c9e2:	2208      	movs	r2, #8
 801c9e4:	305c      	adds	r0, #92	; 0x5c
 801c9e6:	f7ff f9e1 	bl	801bdac <memset>
 801c9ea:	4b05      	ldr	r3, [pc, #20]	; (801ca00 <std+0x38>)
 801c9ec:	6263      	str	r3, [r4, #36]	; 0x24
 801c9ee:	4b05      	ldr	r3, [pc, #20]	; (801ca04 <std+0x3c>)
 801c9f0:	62a3      	str	r3, [r4, #40]	; 0x28
 801c9f2:	4b05      	ldr	r3, [pc, #20]	; (801ca08 <std+0x40>)
 801c9f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c9f6:	4b05      	ldr	r3, [pc, #20]	; (801ca0c <std+0x44>)
 801c9f8:	6224      	str	r4, [r4, #32]
 801c9fa:	6323      	str	r3, [r4, #48]	; 0x30
 801c9fc:	bd10      	pop	{r4, pc}
 801c9fe:	bf00      	nop
 801ca00:	0801cc9d 	.word	0x0801cc9d
 801ca04:	0801ccbf 	.word	0x0801ccbf
 801ca08:	0801ccf7 	.word	0x0801ccf7
 801ca0c:	0801cd1b 	.word	0x0801cd1b

0801ca10 <_cleanup_r>:
 801ca10:	4901      	ldr	r1, [pc, #4]	; (801ca18 <_cleanup_r+0x8>)
 801ca12:	f000 b8af 	b.w	801cb74 <_fwalk_reent>
 801ca16:	bf00      	nop
 801ca18:	0801c951 	.word	0x0801c951

0801ca1c <__sfmoreglue>:
 801ca1c:	b570      	push	{r4, r5, r6, lr}
 801ca1e:	2268      	movs	r2, #104	; 0x68
 801ca20:	1e4d      	subs	r5, r1, #1
 801ca22:	4355      	muls	r5, r2
 801ca24:	460e      	mov	r6, r1
 801ca26:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ca2a:	f7ff fa33 	bl	801be94 <_malloc_r>
 801ca2e:	4604      	mov	r4, r0
 801ca30:	b140      	cbz	r0, 801ca44 <__sfmoreglue+0x28>
 801ca32:	2100      	movs	r1, #0
 801ca34:	e9c0 1600 	strd	r1, r6, [r0]
 801ca38:	300c      	adds	r0, #12
 801ca3a:	60a0      	str	r0, [r4, #8]
 801ca3c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801ca40:	f7ff f9b4 	bl	801bdac <memset>
 801ca44:	4620      	mov	r0, r4
 801ca46:	bd70      	pop	{r4, r5, r6, pc}

0801ca48 <__sfp_lock_acquire>:
 801ca48:	4801      	ldr	r0, [pc, #4]	; (801ca50 <__sfp_lock_acquire+0x8>)
 801ca4a:	f000 b8b3 	b.w	801cbb4 <__retarget_lock_acquire_recursive>
 801ca4e:	bf00      	nop
 801ca50:	2000a7d2 	.word	0x2000a7d2

0801ca54 <__sfp_lock_release>:
 801ca54:	4801      	ldr	r0, [pc, #4]	; (801ca5c <__sfp_lock_release+0x8>)
 801ca56:	f000 b8af 	b.w	801cbb8 <__retarget_lock_release_recursive>
 801ca5a:	bf00      	nop
 801ca5c:	2000a7d2 	.word	0x2000a7d2

0801ca60 <__sinit_lock_acquire>:
 801ca60:	4801      	ldr	r0, [pc, #4]	; (801ca68 <__sinit_lock_acquire+0x8>)
 801ca62:	f000 b8a7 	b.w	801cbb4 <__retarget_lock_acquire_recursive>
 801ca66:	bf00      	nop
 801ca68:	2000a7d3 	.word	0x2000a7d3

0801ca6c <__sinit_lock_release>:
 801ca6c:	4801      	ldr	r0, [pc, #4]	; (801ca74 <__sinit_lock_release+0x8>)
 801ca6e:	f000 b8a3 	b.w	801cbb8 <__retarget_lock_release_recursive>
 801ca72:	bf00      	nop
 801ca74:	2000a7d3 	.word	0x2000a7d3

0801ca78 <__sinit>:
 801ca78:	b510      	push	{r4, lr}
 801ca7a:	4604      	mov	r4, r0
 801ca7c:	f7ff fff0 	bl	801ca60 <__sinit_lock_acquire>
 801ca80:	69a3      	ldr	r3, [r4, #24]
 801ca82:	b11b      	cbz	r3, 801ca8c <__sinit+0x14>
 801ca84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ca88:	f7ff bff0 	b.w	801ca6c <__sinit_lock_release>
 801ca8c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ca90:	6523      	str	r3, [r4, #80]	; 0x50
 801ca92:	4b13      	ldr	r3, [pc, #76]	; (801cae0 <__sinit+0x68>)
 801ca94:	4a13      	ldr	r2, [pc, #76]	; (801cae4 <__sinit+0x6c>)
 801ca96:	681b      	ldr	r3, [r3, #0]
 801ca98:	62a2      	str	r2, [r4, #40]	; 0x28
 801ca9a:	42a3      	cmp	r3, r4
 801ca9c:	bf04      	itt	eq
 801ca9e:	2301      	moveq	r3, #1
 801caa0:	61a3      	streq	r3, [r4, #24]
 801caa2:	4620      	mov	r0, r4
 801caa4:	f000 f820 	bl	801cae8 <__sfp>
 801caa8:	6060      	str	r0, [r4, #4]
 801caaa:	4620      	mov	r0, r4
 801caac:	f000 f81c 	bl	801cae8 <__sfp>
 801cab0:	60a0      	str	r0, [r4, #8]
 801cab2:	4620      	mov	r0, r4
 801cab4:	f000 f818 	bl	801cae8 <__sfp>
 801cab8:	2200      	movs	r2, #0
 801caba:	60e0      	str	r0, [r4, #12]
 801cabc:	2104      	movs	r1, #4
 801cabe:	6860      	ldr	r0, [r4, #4]
 801cac0:	f7ff ff82 	bl	801c9c8 <std>
 801cac4:	68a0      	ldr	r0, [r4, #8]
 801cac6:	2201      	movs	r2, #1
 801cac8:	2109      	movs	r1, #9
 801caca:	f7ff ff7d 	bl	801c9c8 <std>
 801cace:	68e0      	ldr	r0, [r4, #12]
 801cad0:	2202      	movs	r2, #2
 801cad2:	2112      	movs	r1, #18
 801cad4:	f7ff ff78 	bl	801c9c8 <std>
 801cad8:	2301      	movs	r3, #1
 801cada:	61a3      	str	r3, [r4, #24]
 801cadc:	e7d2      	b.n	801ca84 <__sinit+0xc>
 801cade:	bf00      	nop
 801cae0:	08020450 	.word	0x08020450
 801cae4:	0801ca11 	.word	0x0801ca11

0801cae8 <__sfp>:
 801cae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801caea:	4607      	mov	r7, r0
 801caec:	f7ff ffac 	bl	801ca48 <__sfp_lock_acquire>
 801caf0:	4b1e      	ldr	r3, [pc, #120]	; (801cb6c <__sfp+0x84>)
 801caf2:	681e      	ldr	r6, [r3, #0]
 801caf4:	69b3      	ldr	r3, [r6, #24]
 801caf6:	b913      	cbnz	r3, 801cafe <__sfp+0x16>
 801caf8:	4630      	mov	r0, r6
 801cafa:	f7ff ffbd 	bl	801ca78 <__sinit>
 801cafe:	3648      	adds	r6, #72	; 0x48
 801cb00:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801cb04:	3b01      	subs	r3, #1
 801cb06:	d503      	bpl.n	801cb10 <__sfp+0x28>
 801cb08:	6833      	ldr	r3, [r6, #0]
 801cb0a:	b30b      	cbz	r3, 801cb50 <__sfp+0x68>
 801cb0c:	6836      	ldr	r6, [r6, #0]
 801cb0e:	e7f7      	b.n	801cb00 <__sfp+0x18>
 801cb10:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801cb14:	b9d5      	cbnz	r5, 801cb4c <__sfp+0x64>
 801cb16:	4b16      	ldr	r3, [pc, #88]	; (801cb70 <__sfp+0x88>)
 801cb18:	60e3      	str	r3, [r4, #12]
 801cb1a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801cb1e:	6665      	str	r5, [r4, #100]	; 0x64
 801cb20:	f000 f847 	bl	801cbb2 <__retarget_lock_init_recursive>
 801cb24:	f7ff ff96 	bl	801ca54 <__sfp_lock_release>
 801cb28:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801cb2c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801cb30:	6025      	str	r5, [r4, #0]
 801cb32:	61a5      	str	r5, [r4, #24]
 801cb34:	2208      	movs	r2, #8
 801cb36:	4629      	mov	r1, r5
 801cb38:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801cb3c:	f7ff f936 	bl	801bdac <memset>
 801cb40:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801cb44:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801cb48:	4620      	mov	r0, r4
 801cb4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cb4c:	3468      	adds	r4, #104	; 0x68
 801cb4e:	e7d9      	b.n	801cb04 <__sfp+0x1c>
 801cb50:	2104      	movs	r1, #4
 801cb52:	4638      	mov	r0, r7
 801cb54:	f7ff ff62 	bl	801ca1c <__sfmoreglue>
 801cb58:	4604      	mov	r4, r0
 801cb5a:	6030      	str	r0, [r6, #0]
 801cb5c:	2800      	cmp	r0, #0
 801cb5e:	d1d5      	bne.n	801cb0c <__sfp+0x24>
 801cb60:	f7ff ff78 	bl	801ca54 <__sfp_lock_release>
 801cb64:	230c      	movs	r3, #12
 801cb66:	603b      	str	r3, [r7, #0]
 801cb68:	e7ee      	b.n	801cb48 <__sfp+0x60>
 801cb6a:	bf00      	nop
 801cb6c:	08020450 	.word	0x08020450
 801cb70:	ffff0001 	.word	0xffff0001

0801cb74 <_fwalk_reent>:
 801cb74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cb78:	4606      	mov	r6, r0
 801cb7a:	4688      	mov	r8, r1
 801cb7c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801cb80:	2700      	movs	r7, #0
 801cb82:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801cb86:	f1b9 0901 	subs.w	r9, r9, #1
 801cb8a:	d505      	bpl.n	801cb98 <_fwalk_reent+0x24>
 801cb8c:	6824      	ldr	r4, [r4, #0]
 801cb8e:	2c00      	cmp	r4, #0
 801cb90:	d1f7      	bne.n	801cb82 <_fwalk_reent+0xe>
 801cb92:	4638      	mov	r0, r7
 801cb94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cb98:	89ab      	ldrh	r3, [r5, #12]
 801cb9a:	2b01      	cmp	r3, #1
 801cb9c:	d907      	bls.n	801cbae <_fwalk_reent+0x3a>
 801cb9e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801cba2:	3301      	adds	r3, #1
 801cba4:	d003      	beq.n	801cbae <_fwalk_reent+0x3a>
 801cba6:	4629      	mov	r1, r5
 801cba8:	4630      	mov	r0, r6
 801cbaa:	47c0      	blx	r8
 801cbac:	4307      	orrs	r7, r0
 801cbae:	3568      	adds	r5, #104	; 0x68
 801cbb0:	e7e9      	b.n	801cb86 <_fwalk_reent+0x12>

0801cbb2 <__retarget_lock_init_recursive>:
 801cbb2:	4770      	bx	lr

0801cbb4 <__retarget_lock_acquire_recursive>:
 801cbb4:	4770      	bx	lr

0801cbb6 <__retarget_lock_release>:
 801cbb6:	4770      	bx	lr

0801cbb8 <__retarget_lock_release_recursive>:
 801cbb8:	4770      	bx	lr

0801cbba <__swhatbuf_r>:
 801cbba:	b570      	push	{r4, r5, r6, lr}
 801cbbc:	460e      	mov	r6, r1
 801cbbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cbc2:	2900      	cmp	r1, #0
 801cbc4:	b096      	sub	sp, #88	; 0x58
 801cbc6:	4614      	mov	r4, r2
 801cbc8:	461d      	mov	r5, r3
 801cbca:	da08      	bge.n	801cbde <__swhatbuf_r+0x24>
 801cbcc:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801cbd0:	2200      	movs	r2, #0
 801cbd2:	602a      	str	r2, [r5, #0]
 801cbd4:	061a      	lsls	r2, r3, #24
 801cbd6:	d410      	bmi.n	801cbfa <__swhatbuf_r+0x40>
 801cbd8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801cbdc:	e00e      	b.n	801cbfc <__swhatbuf_r+0x42>
 801cbde:	466a      	mov	r2, sp
 801cbe0:	f000 f8c2 	bl	801cd68 <_fstat_r>
 801cbe4:	2800      	cmp	r0, #0
 801cbe6:	dbf1      	blt.n	801cbcc <__swhatbuf_r+0x12>
 801cbe8:	9a01      	ldr	r2, [sp, #4]
 801cbea:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801cbee:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801cbf2:	425a      	negs	r2, r3
 801cbf4:	415a      	adcs	r2, r3
 801cbf6:	602a      	str	r2, [r5, #0]
 801cbf8:	e7ee      	b.n	801cbd8 <__swhatbuf_r+0x1e>
 801cbfa:	2340      	movs	r3, #64	; 0x40
 801cbfc:	2000      	movs	r0, #0
 801cbfe:	6023      	str	r3, [r4, #0]
 801cc00:	b016      	add	sp, #88	; 0x58
 801cc02:	bd70      	pop	{r4, r5, r6, pc}

0801cc04 <__smakebuf_r>:
 801cc04:	898b      	ldrh	r3, [r1, #12]
 801cc06:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801cc08:	079d      	lsls	r5, r3, #30
 801cc0a:	4606      	mov	r6, r0
 801cc0c:	460c      	mov	r4, r1
 801cc0e:	d507      	bpl.n	801cc20 <__smakebuf_r+0x1c>
 801cc10:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801cc14:	6023      	str	r3, [r4, #0]
 801cc16:	6123      	str	r3, [r4, #16]
 801cc18:	2301      	movs	r3, #1
 801cc1a:	6163      	str	r3, [r4, #20]
 801cc1c:	b002      	add	sp, #8
 801cc1e:	bd70      	pop	{r4, r5, r6, pc}
 801cc20:	ab01      	add	r3, sp, #4
 801cc22:	466a      	mov	r2, sp
 801cc24:	f7ff ffc9 	bl	801cbba <__swhatbuf_r>
 801cc28:	9900      	ldr	r1, [sp, #0]
 801cc2a:	4605      	mov	r5, r0
 801cc2c:	4630      	mov	r0, r6
 801cc2e:	f7ff f931 	bl	801be94 <_malloc_r>
 801cc32:	b948      	cbnz	r0, 801cc48 <__smakebuf_r+0x44>
 801cc34:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cc38:	059a      	lsls	r2, r3, #22
 801cc3a:	d4ef      	bmi.n	801cc1c <__smakebuf_r+0x18>
 801cc3c:	f023 0303 	bic.w	r3, r3, #3
 801cc40:	f043 0302 	orr.w	r3, r3, #2
 801cc44:	81a3      	strh	r3, [r4, #12]
 801cc46:	e7e3      	b.n	801cc10 <__smakebuf_r+0xc>
 801cc48:	4b0d      	ldr	r3, [pc, #52]	; (801cc80 <__smakebuf_r+0x7c>)
 801cc4a:	62b3      	str	r3, [r6, #40]	; 0x28
 801cc4c:	89a3      	ldrh	r3, [r4, #12]
 801cc4e:	6020      	str	r0, [r4, #0]
 801cc50:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801cc54:	81a3      	strh	r3, [r4, #12]
 801cc56:	9b00      	ldr	r3, [sp, #0]
 801cc58:	6163      	str	r3, [r4, #20]
 801cc5a:	9b01      	ldr	r3, [sp, #4]
 801cc5c:	6120      	str	r0, [r4, #16]
 801cc5e:	b15b      	cbz	r3, 801cc78 <__smakebuf_r+0x74>
 801cc60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cc64:	4630      	mov	r0, r6
 801cc66:	f000 f891 	bl	801cd8c <_isatty_r>
 801cc6a:	b128      	cbz	r0, 801cc78 <__smakebuf_r+0x74>
 801cc6c:	89a3      	ldrh	r3, [r4, #12]
 801cc6e:	f023 0303 	bic.w	r3, r3, #3
 801cc72:	f043 0301 	orr.w	r3, r3, #1
 801cc76:	81a3      	strh	r3, [r4, #12]
 801cc78:	89a0      	ldrh	r0, [r4, #12]
 801cc7a:	4305      	orrs	r5, r0
 801cc7c:	81a5      	strh	r5, [r4, #12]
 801cc7e:	e7cd      	b.n	801cc1c <__smakebuf_r+0x18>
 801cc80:	0801ca11 	.word	0x0801ca11

0801cc84 <__malloc_lock>:
 801cc84:	4801      	ldr	r0, [pc, #4]	; (801cc8c <__malloc_lock+0x8>)
 801cc86:	f7ff bf95 	b.w	801cbb4 <__retarget_lock_acquire_recursive>
 801cc8a:	bf00      	nop
 801cc8c:	2000a7d1 	.word	0x2000a7d1

0801cc90 <__malloc_unlock>:
 801cc90:	4801      	ldr	r0, [pc, #4]	; (801cc98 <__malloc_unlock+0x8>)
 801cc92:	f7ff bf91 	b.w	801cbb8 <__retarget_lock_release_recursive>
 801cc96:	bf00      	nop
 801cc98:	2000a7d1 	.word	0x2000a7d1

0801cc9c <__sread>:
 801cc9c:	b510      	push	{r4, lr}
 801cc9e:	460c      	mov	r4, r1
 801cca0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cca4:	f000 f894 	bl	801cdd0 <_read_r>
 801cca8:	2800      	cmp	r0, #0
 801ccaa:	bfab      	itete	ge
 801ccac:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ccae:	89a3      	ldrhlt	r3, [r4, #12]
 801ccb0:	181b      	addge	r3, r3, r0
 801ccb2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ccb6:	bfac      	ite	ge
 801ccb8:	6563      	strge	r3, [r4, #84]	; 0x54
 801ccba:	81a3      	strhlt	r3, [r4, #12]
 801ccbc:	bd10      	pop	{r4, pc}

0801ccbe <__swrite>:
 801ccbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ccc2:	461f      	mov	r7, r3
 801ccc4:	898b      	ldrh	r3, [r1, #12]
 801ccc6:	05db      	lsls	r3, r3, #23
 801ccc8:	4605      	mov	r5, r0
 801ccca:	460c      	mov	r4, r1
 801cccc:	4616      	mov	r6, r2
 801ccce:	d505      	bpl.n	801ccdc <__swrite+0x1e>
 801ccd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ccd4:	2302      	movs	r3, #2
 801ccd6:	2200      	movs	r2, #0
 801ccd8:	f000 f868 	bl	801cdac <_lseek_r>
 801ccdc:	89a3      	ldrh	r3, [r4, #12]
 801ccde:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cce2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cce6:	81a3      	strh	r3, [r4, #12]
 801cce8:	4632      	mov	r2, r6
 801ccea:	463b      	mov	r3, r7
 801ccec:	4628      	mov	r0, r5
 801ccee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ccf2:	f000 b817 	b.w	801cd24 <_write_r>

0801ccf6 <__sseek>:
 801ccf6:	b510      	push	{r4, lr}
 801ccf8:	460c      	mov	r4, r1
 801ccfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ccfe:	f000 f855 	bl	801cdac <_lseek_r>
 801cd02:	1c43      	adds	r3, r0, #1
 801cd04:	89a3      	ldrh	r3, [r4, #12]
 801cd06:	bf15      	itete	ne
 801cd08:	6560      	strne	r0, [r4, #84]	; 0x54
 801cd0a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801cd0e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801cd12:	81a3      	strheq	r3, [r4, #12]
 801cd14:	bf18      	it	ne
 801cd16:	81a3      	strhne	r3, [r4, #12]
 801cd18:	bd10      	pop	{r4, pc}

0801cd1a <__sclose>:
 801cd1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd1e:	f000 b813 	b.w	801cd48 <_close_r>
	...

0801cd24 <_write_r>:
 801cd24:	b538      	push	{r3, r4, r5, lr}
 801cd26:	4d07      	ldr	r5, [pc, #28]	; (801cd44 <_write_r+0x20>)
 801cd28:	4604      	mov	r4, r0
 801cd2a:	4608      	mov	r0, r1
 801cd2c:	4611      	mov	r1, r2
 801cd2e:	2200      	movs	r2, #0
 801cd30:	602a      	str	r2, [r5, #0]
 801cd32:	461a      	mov	r2, r3
 801cd34:	f7e5 f92a 	bl	8001f8c <_write>
 801cd38:	1c43      	adds	r3, r0, #1
 801cd3a:	d102      	bne.n	801cd42 <_write_r+0x1e>
 801cd3c:	682b      	ldr	r3, [r5, #0]
 801cd3e:	b103      	cbz	r3, 801cd42 <_write_r+0x1e>
 801cd40:	6023      	str	r3, [r4, #0]
 801cd42:	bd38      	pop	{r3, r4, r5, pc}
 801cd44:	2000a7d4 	.word	0x2000a7d4

0801cd48 <_close_r>:
 801cd48:	b538      	push	{r3, r4, r5, lr}
 801cd4a:	4d06      	ldr	r5, [pc, #24]	; (801cd64 <_close_r+0x1c>)
 801cd4c:	2300      	movs	r3, #0
 801cd4e:	4604      	mov	r4, r0
 801cd50:	4608      	mov	r0, r1
 801cd52:	602b      	str	r3, [r5, #0]
 801cd54:	f7e5 f928 	bl	8001fa8 <_close>
 801cd58:	1c43      	adds	r3, r0, #1
 801cd5a:	d102      	bne.n	801cd62 <_close_r+0x1a>
 801cd5c:	682b      	ldr	r3, [r5, #0]
 801cd5e:	b103      	cbz	r3, 801cd62 <_close_r+0x1a>
 801cd60:	6023      	str	r3, [r4, #0]
 801cd62:	bd38      	pop	{r3, r4, r5, pc}
 801cd64:	2000a7d4 	.word	0x2000a7d4

0801cd68 <_fstat_r>:
 801cd68:	b538      	push	{r3, r4, r5, lr}
 801cd6a:	4d07      	ldr	r5, [pc, #28]	; (801cd88 <_fstat_r+0x20>)
 801cd6c:	2300      	movs	r3, #0
 801cd6e:	4604      	mov	r4, r0
 801cd70:	4608      	mov	r0, r1
 801cd72:	4611      	mov	r1, r2
 801cd74:	602b      	str	r3, [r5, #0]
 801cd76:	f7e5 f91a 	bl	8001fae <_fstat>
 801cd7a:	1c43      	adds	r3, r0, #1
 801cd7c:	d102      	bne.n	801cd84 <_fstat_r+0x1c>
 801cd7e:	682b      	ldr	r3, [r5, #0]
 801cd80:	b103      	cbz	r3, 801cd84 <_fstat_r+0x1c>
 801cd82:	6023      	str	r3, [r4, #0]
 801cd84:	bd38      	pop	{r3, r4, r5, pc}
 801cd86:	bf00      	nop
 801cd88:	2000a7d4 	.word	0x2000a7d4

0801cd8c <_isatty_r>:
 801cd8c:	b538      	push	{r3, r4, r5, lr}
 801cd8e:	4d06      	ldr	r5, [pc, #24]	; (801cda8 <_isatty_r+0x1c>)
 801cd90:	2300      	movs	r3, #0
 801cd92:	4604      	mov	r4, r0
 801cd94:	4608      	mov	r0, r1
 801cd96:	602b      	str	r3, [r5, #0]
 801cd98:	f7e5 f90e 	bl	8001fb8 <_isatty>
 801cd9c:	1c43      	adds	r3, r0, #1
 801cd9e:	d102      	bne.n	801cda6 <_isatty_r+0x1a>
 801cda0:	682b      	ldr	r3, [r5, #0]
 801cda2:	b103      	cbz	r3, 801cda6 <_isatty_r+0x1a>
 801cda4:	6023      	str	r3, [r4, #0]
 801cda6:	bd38      	pop	{r3, r4, r5, pc}
 801cda8:	2000a7d4 	.word	0x2000a7d4

0801cdac <_lseek_r>:
 801cdac:	b538      	push	{r3, r4, r5, lr}
 801cdae:	4d07      	ldr	r5, [pc, #28]	; (801cdcc <_lseek_r+0x20>)
 801cdb0:	4604      	mov	r4, r0
 801cdb2:	4608      	mov	r0, r1
 801cdb4:	4611      	mov	r1, r2
 801cdb6:	2200      	movs	r2, #0
 801cdb8:	602a      	str	r2, [r5, #0]
 801cdba:	461a      	mov	r2, r3
 801cdbc:	f7e5 f8fe 	bl	8001fbc <_lseek>
 801cdc0:	1c43      	adds	r3, r0, #1
 801cdc2:	d102      	bne.n	801cdca <_lseek_r+0x1e>
 801cdc4:	682b      	ldr	r3, [r5, #0]
 801cdc6:	b103      	cbz	r3, 801cdca <_lseek_r+0x1e>
 801cdc8:	6023      	str	r3, [r4, #0]
 801cdca:	bd38      	pop	{r3, r4, r5, pc}
 801cdcc:	2000a7d4 	.word	0x2000a7d4

0801cdd0 <_read_r>:
 801cdd0:	b538      	push	{r3, r4, r5, lr}
 801cdd2:	4d07      	ldr	r5, [pc, #28]	; (801cdf0 <_read_r+0x20>)
 801cdd4:	4604      	mov	r4, r0
 801cdd6:	4608      	mov	r0, r1
 801cdd8:	4611      	mov	r1, r2
 801cdda:	2200      	movs	r2, #0
 801cddc:	602a      	str	r2, [r5, #0]
 801cdde:	461a      	mov	r2, r3
 801cde0:	f7e5 f8c6 	bl	8001f70 <_read>
 801cde4:	1c43      	adds	r3, r0, #1
 801cde6:	d102      	bne.n	801cdee <_read_r+0x1e>
 801cde8:	682b      	ldr	r3, [r5, #0]
 801cdea:	b103      	cbz	r3, 801cdee <_read_r+0x1e>
 801cdec:	6023      	str	r3, [r4, #0]
 801cdee:	bd38      	pop	{r3, r4, r5, pc}
 801cdf0:	2000a7d4 	.word	0x2000a7d4

0801cdf4 <_init>:
 801cdf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cdf6:	bf00      	nop
 801cdf8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cdfa:	bc08      	pop	{r3}
 801cdfc:	469e      	mov	lr, r3
 801cdfe:	4770      	bx	lr

0801ce00 <_fini>:
 801ce00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ce02:	bf00      	nop
 801ce04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ce06:	bc08      	pop	{r3}
 801ce08:	469e      	mov	lr, r3
 801ce0a:	4770      	bx	lr
